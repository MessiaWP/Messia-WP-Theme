/**
 * BOOTSTRAP
 */
/**
 * MESSIA
 */
@media (max-width: 767.98px) {
  .mccs .pagination-single-inner {
    flex-direction: column;
  }
  .mccs .pagination-single-inner a {
    max-width: 100%;
    margin-left: auto;
    margin-right: auto;
    margin-bottom: 20px;
    width: 100%;
  }
}
@media (max-width: 575.98px) {
  .mccs .pagination-single-inner a .title-post-nav {
    font-size: 18px;
  }
}
.mccs .pagination-single-inner a {
  height: 120px;
  width: calc(50% - 20px);
  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.25);
  text-decoration: none;
  border-radius: 8px;
  background: #fff;
  transition: color 0.2s;
}
@media (max-width: 767.98px) {
  .mccs .pagination-single-inner a {
    width: 100%;
    position: relative;
  }
  .mccs .pagination-single-inner a:after {
    content: "";
    position: absolute;
    width: 15%;
    top: 0;
    bottom: 0;
  }
  .mccs .pagination-single-inner a .background-post-nav {
    display: none;
  }
  .mccs .pagination-single-inner a.previous-post {
    padding-left: 15%;
    text-align: right;
  }
  .mccs .pagination-single-inner a.previous-post:after {
    left: 0;
    background: url(../../../includes/assets/images/svg/arrow_left.svg) center center no-repeat;
  }
  .mccs .pagination-single-inner a.next-post {
    padding-right: 15%;
  }
  .mccs .pagination-single-inner a.next-post:after {
    right: 0;
    background: url(../../../includes/assets/images/svg/arrow_right.svg) center center no-repeat;
  }
}
.mccs .pagination-single-inner a.next-post .background-post-nav {
  border-radius: 0 5px 5px 0;
}
.mccs .pagination-single-inner .background-post-nav {
  width: 155px;
  height: 120px;
  background-size: cover;
}
.mccs .pagination-single-inner .date-post-nav {
  font-size: 0.8rem;
}
.mccs .pagination-single-inner .title-date-container {
  max-height: 100%;
}
.mccs .pagination-single-inner a:last-child {
  margin-left: auto;
  max-height: 100%;
  overflow: hidden;
}

@-webkit-keyframes loading-ani1 {
  25% {
    transform: rotate(135deg);
  }
  50% {
    transform: rotate(225deg);
  }
  75% {
    transform: rotate(315deg);
  }
  100% {
    transform: rotate(405deg);
  }
}

@keyframes loading-ani1 {
  25% {
    transform: rotate(135deg);
  }
  50% {
    transform: rotate(225deg);
  }
  75% {
    transform: rotate(315deg);
  }
  100% {
    transform: rotate(405deg);
  }
}
@-webkit-keyframes loading-ani2 {
  17.5%, 25%, 42.5%, 50%, 67.5%, 75%, 92.5%, 100% {
    transform: translate(0, 0);
  }
  12.5%, 37.5%, 62.5%, 87.5% {
    transform: translate(0, 40px);
  }
}
@keyframes loading-ani2 {
  17.5%, 25%, 42.5%, 50%, 67.5%, 75%, 92.5%, 100% {
    transform: translate(0, 0);
  }
  12.5%, 37.5%, 62.5%, 87.5% {
    transform: translate(0, 40px);
  }
}
@-webkit-keyframes loading-ani3 {
  17.5%, 25%, 42.5%, 50%, 67.5%, 75%, 92.5%, 100% {
    transform: rotate(90deg) translate(0, 0);
  }
  12.5%, 37.5%, 62.5%, 87.5% {
    transform: rotate(90deg) translate(0, 40px);
  }
}
@keyframes loading-ani3 {
  17.5%, 25%, 42.5%, 50%, 67.5%, 75%, 92.5%, 100% {
    transform: rotate(90deg) translate(0, 0);
  }
  12.5%, 37.5%, 62.5%, 87.5% {
    transform: rotate(90deg) translate(0, 40px);
  }
}
@-webkit-keyframes loading-ani4 {
  17.5%, 25%, 42.5%, 50%, 67.5%, 75%, 92.5%, 100% {
    transform: rotate(180deg) translate(0, 0);
  }
  12.5%, 37.5%, 62.5%, 87.5% {
    transform: rotate(180deg) translate(0, 40px);
  }
}
@keyframes loading-ani4 {
  17.5%, 25%, 42.5%, 50%, 67.5%, 75%, 92.5%, 100% {
    transform: rotate(180deg) translate(0, 0);
  }
  12.5%, 37.5%, 62.5%, 87.5% {
    transform: rotate(180deg) translate(0, 40px);
  }
}
@-webkit-keyframes loading-ani5 {
  17.5%, 25%, 42.5%, 50%, 67.5%, 75%, 92.5%, 100% {
    transform: rotate(270deg) translate(0, 0);
  }
  12.5%, 37.5%, 62.5%, 87.5% {
    transform: rotate(270deg) translate(0, 40px);
  }
}
@keyframes loading-ani5 {
  17.5%, 25%, 42.5%, 50%, 67.5%, 75%, 92.5%, 100% {
    transform: rotate(270deg) translate(0, 0);
  }
  12.5%, 37.5%, 62.5%, 87.5% {
    transform: rotate(270deg) translate(0, 40px);
  }
}
.mccs .messia-spinner,
.macs .messia-spinner {
  position: fixed;
  left: calc(100vw / 2 - 30px);
  top: calc(100vh / 2 - 30px);
  width: 60px;
  height: 60px;
  text-align: center;
  -webkit-animation: sk-rotate 2s infinite linear;
          animation: sk-rotate 2s infinite linear;
  z-index: 999;
}
.mccs .loading,
.macs .loading {
  width: 20px;
  height: 20px;
  transform: rotate(45deg);
  -webkit-animation: loading-ani1 4s cubic-bezier(0.165, 0.84, 0.44, 1) infinite;
          animation: loading-ani1 4s cubic-bezier(0.165, 0.84, 0.44, 1) infinite;
}
.mccs .loading i,
.macs .loading i {
  width: 20px;
  height: 20px;
  display: inline-block;
  border-radius: 0.3rem;
  position: absolute;
  box-shadow: 0 0 5px 0 #08080840;
}
.mccs .loading i:nth-child(1),
.macs .loading i:nth-child(1) {
  background: #ef5350;
  transform: translate(0, 0);
  -webkit-animation: loading-ani2 4s ease-in-out infinite;
          animation: loading-ani2 4s ease-in-out infinite;
}
.mccs .loading i:nth-child(2),
.macs .loading i:nth-child(2) {
  background: #42a5f5;
  transform: rotate(90deg) translate(0, 0);
  -webkit-animation: loading-ani3 6s ease-in-out infinite;
          animation: loading-ani3 6s ease-in-out infinite;
}
.mccs .loading i:nth-child(3),
.macs .loading i:nth-child(3) {
  background: #ffca28;
  transform: rotate(180deg) translate(0, 0);
  -webkit-animation: loading-ani4 8s ease-in-out infinite;
          animation: loading-ani4 8s ease-in-out infinite;
}
.mccs .loading i:nth-child(4),
.macs .loading i:nth-child(4) {
  background: #5c6bc0;
  transform: rotate(270deg) translate(0, 0);
  -webkit-animation: loading-ani5 10s ease-in-out infinite;
          animation: loading-ani5 10s ease-in-out infinite;
}

/*# sourceMappingURL=data:application/json;charset=utf-8;base64,*/