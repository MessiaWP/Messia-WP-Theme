/**
 * BOOTSTRAP
 */
/**
 * MESSIA
 */
@-webkit-keyframes loading-ani1 {
  25% {
    transform: rotate(135deg);
  }
  50% {
    transform: rotate(225deg);
  }
  75% {
    transform: rotate(315deg);
  }
  100% {
    transform: rotate(405deg);
  }
}
@keyframes loading-ani1 {
  25% {
    transform: rotate(135deg);
  }
  50% {
    transform: rotate(225deg);
  }
  75% {
    transform: rotate(315deg);
  }
  100% {
    transform: rotate(405deg);
  }
}
@-webkit-keyframes loading-ani2 {
  17.5%, 25%, 42.5%, 50%, 67.5%, 75%, 92.5%, 100% {
    transform: translate(0, 0);
  }
  12.5%, 37.5%, 62.5%, 87.5% {
    transform: translate(0, 40px);
  }
}
@keyframes loading-ani2 {
  17.5%, 25%, 42.5%, 50%, 67.5%, 75%, 92.5%, 100% {
    transform: translate(0, 0);
  }
  12.5%, 37.5%, 62.5%, 87.5% {
    transform: translate(0, 40px);
  }
}
@-webkit-keyframes loading-ani3 {
  17.5%, 25%, 42.5%, 50%, 67.5%, 75%, 92.5%, 100% {
    transform: rotate(90deg) translate(0, 0);
  }
  12.5%, 37.5%, 62.5%, 87.5% {
    transform: rotate(90deg) translate(0, 40px);
  }
}
@keyframes loading-ani3 {
  17.5%, 25%, 42.5%, 50%, 67.5%, 75%, 92.5%, 100% {
    transform: rotate(90deg) translate(0, 0);
  }
  12.5%, 37.5%, 62.5%, 87.5% {
    transform: rotate(90deg) translate(0, 40px);
  }
}
@-webkit-keyframes loading-ani4 {
  17.5%, 25%, 42.5%, 50%, 67.5%, 75%, 92.5%, 100% {
    transform: rotate(180deg) translate(0, 0);
  }
  12.5%, 37.5%, 62.5%, 87.5% {
    transform: rotate(180deg) translate(0, 40px);
  }
}
@keyframes loading-ani4 {
  17.5%, 25%, 42.5%, 50%, 67.5%, 75%, 92.5%, 100% {
    transform: rotate(180deg) translate(0, 0);
  }
  12.5%, 37.5%, 62.5%, 87.5% {
    transform: rotate(180deg) translate(0, 40px);
  }
}
@-webkit-keyframes loading-ani5 {
  17.5%, 25%, 42.5%, 50%, 67.5%, 75%, 92.5%, 100% {
    transform: rotate(270deg) translate(0, 0);
  }
  12.5%, 37.5%, 62.5%, 87.5% {
    transform: rotate(270deg) translate(0, 40px);
  }
}
@keyframes loading-ani5 {
  17.5%, 25%, 42.5%, 50%, 67.5%, 75%, 92.5%, 100% {
    transform: rotate(270deg) translate(0, 0);
  }
  12.5%, 37.5%, 62.5%, 87.5% {
    transform: rotate(270deg) translate(0, 40px);
  }
}
.mccs .messia-spinner,
.macs .messia-spinner {
  position: fixed;
  left: calc(100vw / 2 - 30px);
  top: calc(100vh / 2 - 30px);
  width: 60px;
  height: 60px;
  text-align: center;
  -webkit-animation: sk-rotate 2s infinite linear;
          animation: sk-rotate 2s infinite linear;
  z-index: 999;
}
.mccs .loading,
.macs .loading {
  width: 20px;
  height: 20px;
  transform: rotate(45deg);
  -webkit-animation: loading-ani1 4s cubic-bezier(0.165, 0.84, 0.44, 1) infinite;
          animation: loading-ani1 4s cubic-bezier(0.165, 0.84, 0.44, 1) infinite;
}
.mccs .loading i,
.macs .loading i {
  width: 20px;
  height: 20px;
  display: inline-block;
  border-radius: 0.3rem;
  position: absolute;
  box-shadow: 0 0 5px 0 #08080840;
}
.mccs .loading i:nth-child(1),
.macs .loading i:nth-child(1) {
  background: #ef5350;
  transform: translate(0, 0);
  -webkit-animation: loading-ani2 4s ease-in-out infinite;
          animation: loading-ani2 4s ease-in-out infinite;
}
.mccs .loading i:nth-child(2),
.macs .loading i:nth-child(2) {
  background: #42a5f5;
  transform: rotate(90deg) translate(0, 0);
  -webkit-animation: loading-ani3 6s ease-in-out infinite;
          animation: loading-ani3 6s ease-in-out infinite;
}
.mccs .loading i:nth-child(3),
.macs .loading i:nth-child(3) {
  background: #ffca28;
  transform: rotate(180deg) translate(0, 0);
  -webkit-animation: loading-ani4 8s ease-in-out infinite;
          animation: loading-ani4 8s ease-in-out infinite;
}
.mccs .loading i:nth-child(4),
.macs .loading i:nth-child(4) {
  background: #5c6bc0;
  transform: rotate(270deg) translate(0, 0);
  -webkit-animation: loading-ani5 10s ease-in-out infinite;
          animation: loading-ani5 10s ease-in-out infinite;
}

.mccs .messia-map {
  width: 100%;
  position: relative;
  display: block;
}
.mccs .messia-map.popup {
  display: none;
}
.mccs .messia-map .map {
  position: relative;
}
.mccs .messia-map .map:after {
  content: "";
  display: block;
  padding-top: 50%;
}
.mccs .sidebar .messia-map .map:after {
  padding-top: 100%;
}

.mccs .gallery .custom-field-title {
  width: 100%;
}
.mccs .gallery .custom-field-value {
  display: flex;
  flex-grow: 1;
  flex-wrap: wrap;
}
.mccs .gallery .full-container {
  width: calc(100% - 89px);
  margin-right: 5px;
}
.mccs .gallery .full-container .gallery-item {
  width: 100%;
  height: auto;
}
.mccs .gallery .full-container .gallery-item img {
  width: 100%;
  height: auto;
}
.mccs .gallery .thumb-container {
  max-width: 84px;
  width: 100%;
  display: flex;
  flex-direction: column;
}
.mccs .gallery .thumb-container.thumb-container-full {
  justify-content: space-between;
}
.mccs .gallery .thumb-container .gallery-item {
  display: none;
}
.mccs .gallery .thumb-container .gallery-item.visible {
  display: block;
  position: relative;
}
.mccs .gallery .thumb-container .gallery-item.visible .count-hide {
  position: absolute;
  top: 5px;
  bottom: 0;
  right: 0;
  left: 0;
  background: rgba(0, 0, 0, 0.5);
  display: flex;
  align-items: center;
  justify-content: center;
  color: #ffffff;
}
.mccs .gallery .gallery-item {
  padding-top: 5px;
}
.mccs .gallery .gallery-item a {
  display: flex;
}
.mccs .gallery .gallery-item a img {
  width: 84px;
  height: 84px;
  -o-object-fit: cover;
     object-fit: cover;
  display: block;
}

.mccs .sidebar .wrapper-modal {
  margin-bottom: 30px;
}
.mccs .sidebar .external_media iframe {
  width: 100%;
  height: 200px;
}
.mccs .sidebar .external_media h5 {
  margin-bottom: 0;
  margin-top: 10px;
}
.mccs .object-page-top .wrapper-modal {
  margin-bottom: 30px;
}
.mccs .object-page-top .external_media h5 {
  margin-bottom: 0;
  margin-top: 10px;
}

.mccs .comment-items {
  grid-template-columns: repeat(1, minmax(100px, 1fr));
}
.mccs .comment-items .avatar {
  width: 4rem;
  height: 4rem;
  margin-right: 1rem;
}
.mccs .comment-items .name-right {
  width: calc(100% - 4rem - 1rem);
}
.mccs .comment-items .comment .comment-inner {
  background: #fff;
  box-shadow: none;
  border-radius: 8px;
  font-size: 0.9rem;
}
.mccs .comment-items .comment .comment-inner {
  padding: 0;
}

/**
 * BOOTSTRAP
 */
/**
 * MESSIA
 */
.mccs .map-popup-trigger,
.mccs .input_address .custom-field-title {
  color: #747474;
}
.mccs .map-popup-trigger .messia-icon,
.mccs .input_address .custom-field-title .messia-icon {
  margin-right: 0.6rem;
}
.mccs .content .custom-field-title {
  margin-bottom: 1rem;
}
.mccs .main-content .widget-area {
  margin-bottom: 2rem;
}

/*# sourceMappingURL=data:application/json;charset=utf-8;base64,*/