1702936352
waR3U4bTeM%3Aa21b3de3ced2f503c50dee7d03332562-db380063fdaca57eccca818cc0438a5e
s:3716:"TzozMzoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGaWxlIjoxNDp7czo0MzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcRmlsZQBkb2NCbG9jayI7TjtzOjM5OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGaWxlAGhhc2giO3M6MzI6ImRiMzgwMDYzZmRhY2E1N2VjY2NhODE4Y2MwNDM4YTVlIjtzOjM5OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGaWxlAG5hbWUiO3M6MjE6Il93b3JrZXJfZGlzcGF0Y2hlci5qcyI7czozOToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcRmlsZQBwYXRoIjtzOjQwOiJzcmMvanMvX2NvbXBvbmVudHMvX3dvcmtlcl9kaXNwYXRjaGVyLmpzIjtzOjQxOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGaWxlAHNvdXJjZSI7czoxODU4OiIvKioKICogUmVnaXN0ZXIgYW5kIHN0YXJ0IHdlYiB3b3JrZXJzLgogKgogKiBAcmV0dXJuIHZvaWQuCiAqLwpjb25zdCB3b3JrZXJEaXNwYXRjaGVyID0gKCgpID0+IHsKCWlmICgnc2VydmljZVdvcmtlcicgaW4gbmF2aWdhdG9yKSB7CgoJCW5hdmlnYXRvci5zZXJ2aWNlV29ya2VyLmFkZEV2ZW50TGlzdGVuZXIoJ21lc3NhZ2UnLCAobWVzc2FnZSkgPT4gewoJCQljb25zdCBpbmZvID0gbWVzc2FnZS5kYXRhOwoKCQkJaWYgKGluZm8udHlwZSA9PT0gJ2xvZ2dlcicpIHsKCQkJCU1lc3NpYUV4dC5sb2dnZXJbaW5mby5tZXRob2RdKGluZm8uYm9keSk7CgkJCX0KCQl9KTsKCgkJaWYgKG1lc3NpYVZhcnMucHdhRW5hYmxlID09PSAxKSB7CgoJCQljb25zdAoJCQkJY2FjaGVBdmFpbGFibGUgPSAnY2FjaGVzJyBpbiBzZWxmLAoJCQkJaW5kZXhlZERiQXZhaWxhYmxlID0gJ2luZGV4ZWREQicgaW4gc2VsZjsKCgkJCWNvbnN0IHByb21wdFVwZGF0ZSA9IChyZWdpc3RyYXRpb24pID0+IHsKCQkJCWNvbnN0IGNob2ljZSA9IHdpbmRvdy5jb25maXJtKG1lc3NpYVZhcnMubWVzc2FnZXMud29ya2VyVXBkYXRlKTsKCgkJCQlpZiAoY2hvaWNlKSB7CgkJCQkJbmF2aWdhdG9yLnNlcnZpY2VXb3JrZXIuYWRkRXZlbnRMaXN0ZW5lcignY29udHJvbGxlcmNoYW5nZScsICgpID0+IHsKCQkJCQkJLy8gbm90aGluZyBmb3Igbm93LgoJCQkJCX0pOwoJCQkJfQoKCQkJCWlmIChyZWdpc3RyYXRpb24gJiYgcmVnaXN0cmF0aW9uLndhaXRpbmcpIHsKCQkJCQlyZWdpc3RyYXRpb24ud2FpdGluZy5wb3N0TWVzc2FnZSh7IGNvbW1hbmQ6ICdtZXNzaWFTa2lwV2FpdGluZycgfSk7CgkJCQl9CgkJCX07CgoJCQluYXZpZ2F0b3IKCQkJCS5zZXJ2aWNlV29ya2VyCgkJCQkucmVnaXN0ZXIobWVzc2lhVmFycy53b3JrZXJVcmwsIHsgc2NvcGU6ICcvJyB9KQoJCQkJLnRoZW4oKHJlZ2lzdHJhdGlvbikgPT4gewoJCQkJCU1lc3NpYUV4dC5sb2dnZXIubG9nKGBXb3JrZXIgcmVnaXN0cmF0aW9uIHN1Y2NlZWRlZC4gU2NvcGUgaXMgJHtyZWdpc3RyYXRpb24uc2NvcGV9YCk7CgoJCQkJCWlmIChmYWxzZSA9PT0gaW5kZXhlZERiQXZhaWxhYmxlKSB7CgkJCQkJCU1lc3NpYUV4dC5sb2dnZXIud2FybignV29ya2VyIHdpbGwgc2tpcCBjYWNoaW5nIGNhdXNlIHRoZSBicm93c2VyIGRvZXMgbm90IHN1cHBvcnQgaW5kZXhlZERCLicpOwoJCQkJCX0gZWxzZSBpZiAoZmFsc2UgPT09IGNhY2hlQXZhaWxhYmxlKSB7CgkJCQkJCU1lc3NpYUV4dC5sb2dnZXIud2FybignV29ya2VyIHdpbGwgc2tpcCBjYWNoaW5nIGNhdXNlIHRoZSBicm93c2VyIGRvZXMgbm90IHN1cHBvcnQgY2FjaGUgc3RvcmFnZS4nKTsKCQkJCQl9CgoJCQkJCWlmIChyZWdpc3RyYXRpb24ud2FpdGluZykgewoJCQkJCQlwcm9tcHRVcGRhdGUocmVnaXN0cmF0aW9uKTsKCQkJCQl9CgkJCQl9KQoJCQkJLmNhdGNoKChlcnJvcikgPT4gewoJCQkJCU1lc3NpYUV4dC5sb2dnZXIuZXJyb3IoJ1dvcmtlciByZWdpc3RyYXRpb24gZmFpbGVkIHdpdGggJyArIGVycm9yKTsKCQkJCX0pOwoKCQl9IGVsc2UgewoJCQluYXZpZ2F0b3IKCQkJCS5zZXJ2aWNlV29ya2VyCgkJCQkuZ2V0UmVnaXN0cmF0aW9ucygpLnRoZW4oKHJlZ2lzdHJhdGlvbnMpID0+IHsKCgkJCQkJaWYgKHJlZ2lzdHJhdGlvbnMubGVuZ3RoKSB7CgkJCQkJCWZvciAobGV0IHJlZ2lzdHJhdGlvbiBvZiByZWdpc3RyYXRpb25zKSB7CgkJCQkJCQlyZWdpc3RyYXRpb24uYWN0aXZlLnBvc3RNZXNzYWdlKHsgY29tbWFuZDogJ21lc3NpYVVucmVnaXN0ZXJTZWxmJyB9KTsKCQkJCQkJfQoJCQkJCX0KCQkJCX0pOwoJCX0KCX0KfSkoKTsKCmV4cG9ydCBkZWZhdWx0IHdvcmtlckRpc3BhdGNoZXI7IjtzOjQ1OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGaWxlAG5hbWVzcGFjZXMiO2E6MDp7fXM6NDM6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEZpbGUAaW5jbHVkZXMiO2E6MDp7fXM6NDQ6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEZpbGUAZnVuY3Rpb25zIjthOjA6e31zOjQ0OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGaWxlAGNvbnN0YW50cyI7YTowOnt9czo0MjoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcRmlsZQBjbGFzc2VzIjthOjA6e31zOjQ1OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGaWxlAGludGVyZmFjZXMiO2E6MDp7fXM6NDE6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEZpbGUAdHJhaXRzIjthOjA6e31zOjQwOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGaWxlAGVudW1zIjthOjA6e31zOjQzOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGaWxlAG1ldGFkYXRhIjthOjA6e319";