1702936349
waR3U4bTeM%3A6fe393e86cf4c7aae27ed93726039f6b-fde5bdc94d99cff1d0eb4d76effc49e8
s:2002968:"TzozMzoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGaWxlIjoxNDp7czo0MzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcRmlsZQBkb2NCbG9jayI7TjtzOjM5OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGaWxlAGhhc2giO3M6MzI6ImZkZTViZGM5NGQ5OWNmZjFkMGViNGQ3NmVmZmM0OWU4IjtzOjM5OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGaWxlAG5hbWUiO3M6MTE6ImZyb250ZW5kLmpzIjtzOjM5OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGaWxlAHBhdGgiO3M6MzA6ImluY2x1ZGVzL2Fzc2V0cy9qcy9mcm9udGVuZC5qcyI7czo0MToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcRmlsZQBzb3VyY2UiO3M6MTUwMTMxMjoiLyoqKioqKi8gKGZ1bmN0aW9uKCkgeyAvLyB3ZWJwYWNrQm9vdHN0cmFwCi8qKioqKiovIAl2YXIgX193ZWJwYWNrX21vZHVsZXNfXyA9ICh7CgovKioqLyAiLi9ub2RlX21vZHVsZXMvQHBvcHBlcmpzL2NvcmUvbGliL2NyZWF0ZVBvcHBlci5qcyI6Ci8qISoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiEqXAogICEqKiogLi9ub2RlX21vZHVsZXMvQHBvcHBlcmpzL2NvcmUvbGliL2NyZWF0ZVBvcHBlci5qcyAqKiohCiAgXCoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKi8KLyoqKi8gKGZ1bmN0aW9uKF9fdW51c2VkX3dlYnBhY2tfbW9kdWxlLCBfX3dlYnBhY2tfZXhwb3J0c19fLCBfX3dlYnBhY2tfcmVxdWlyZV9fKSB7CgoidXNlIHN0cmljdCI7Cl9fd2VicGFja19yZXF1aXJlX18ucihfX3dlYnBhY2tfZXhwb3J0c19fKTsKLyogaGFybW9ueSBleHBvcnQgKi8gX193ZWJwYWNrX3JlcXVpcmVfXy5kKF9fd2VicGFja19leHBvcnRzX18sIHsKLyogaGFybW9ueSBleHBvcnQgKi8gICAiY3JlYXRlUG9wcGVyIjogZnVuY3Rpb24oKSB7IHJldHVybiAvKiBiaW5kaW5nICovIGNyZWF0ZVBvcHBlcjsgfSwKLyogaGFybW9ueSBleHBvcnQgKi8gICAiZGV0ZWN0T3ZlcmZsb3ciOiBmdW5jdGlvbigpIHsgcmV0dXJuIC8qIHJlZXhwb3J0IHNhZmUgKi8gX3V0aWxzX2RldGVjdE92ZXJmbG93X2pzX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8xM19fWyJkZWZhdWx0Il07IH0sCi8qIGhhcm1vbnkgZXhwb3J0ICovICAgInBvcHBlckdlbmVyYXRvciI6IGZ1bmN0aW9uKCkgeyByZXR1cm4gLyogYmluZGluZyAqLyBwb3BwZXJHZW5lcmF0b3I7IH0KLyogaGFybW9ueSBleHBvcnQgKi8gfSk7Ci8qIGhhcm1vbnkgaW1wb3J0ICovIHZhciBfZG9tX3V0aWxzX2dldENvbXBvc2l0ZVJlY3RfanNfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzlfXyA9IF9fd2VicGFja19yZXF1aXJlX18oLyohIC4vZG9tLXV0aWxzL2dldENvbXBvc2l0ZVJlY3QuanMgKi8gIi4vbm9kZV9tb2R1bGVzL0Bwb3BwZXJqcy9jb3JlL2xpYi9kb20tdXRpbHMvZ2V0Q29tcG9zaXRlUmVjdC5qcyIpOwovKiBoYXJtb255IGltcG9ydCAqLyB2YXIgX2RvbV91dGlsc19nZXRMYXlvdXRSZWN0X2pzX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8xMV9fID0gX193ZWJwYWNrX3JlcXVpcmVfXygvKiEgLi9kb20tdXRpbHMvZ2V0TGF5b3V0UmVjdC5qcyAqLyAiLi9ub2RlX21vZHVsZXMvQHBvcHBlcmpzL2NvcmUvbGliL2RvbS11dGlscy9nZXRMYXlvdXRSZWN0LmpzIik7Ci8qIGhhcm1vbnkgaW1wb3J0ICovIHZhciBfZG9tX3V0aWxzX2xpc3RTY3JvbGxQYXJlbnRzX2pzX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8xX18gPSBfX3dlYnBhY2tfcmVxdWlyZV9fKC8qISAuL2RvbS11dGlscy9saXN0U2Nyb2xsUGFyZW50cy5qcyAqLyAiLi9ub2RlX21vZHVsZXMvQHBvcHBlcmpzL2NvcmUvbGliL2RvbS11dGlscy9saXN0U2Nyb2xsUGFyZW50cy5qcyIpOwovKiBoYXJtb255IGltcG9ydCAqLyB2YXIgX2RvbV91dGlsc19nZXRPZmZzZXRQYXJlbnRfanNfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzEwX18gPSBfX3dlYnBhY2tfcmVxdWlyZV9fKC8qISAuL2RvbS11dGlscy9nZXRPZmZzZXRQYXJlbnQuanMgKi8gIi4vbm9kZV9tb2R1bGVzL0Bwb3BwZXJqcy9jb3JlL2xpYi9kb20tdXRpbHMvZ2V0T2Zmc2V0UGFyZW50LmpzIik7Ci8qIGhhcm1vbnkgaW1wb3J0ICovIHZhciBfZG9tX3V0aWxzX2dldENvbXB1dGVkU3R5bGVfanNfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzhfXyA9IF9fd2VicGFja19yZXF1aXJlX18oLyohIC4vZG9tLXV0aWxzL2dldENvbXB1dGVkU3R5bGUuanMgKi8gIi4vbm9kZV9tb2R1bGVzL0Bwb3BwZXJqcy9jb3JlL2xpYi9kb20tdXRpbHMvZ2V0Q29tcHV0ZWRTdHlsZS5qcyIpOwovKiBoYXJtb255IGltcG9ydCAqLyB2YXIgX3V0aWxzX29yZGVyTW9kaWZpZXJzX2pzX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8yX18gPSBfX3dlYnBhY2tfcmVxdWlyZV9fKC8qISAuL3V0aWxzL29yZGVyTW9kaWZpZXJzLmpzICovICIuL25vZGVfbW9kdWxlcy9AcG9wcGVyanMvY29yZS9saWIvdXRpbHMvb3JkZXJNb2RpZmllcnMuanMiKTsKLyogaGFybW9ueSBpbXBvcnQgKi8gdmFyIF91dGlsc19kZWJvdW5jZV9qc19fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMTJfXyA9IF9fd2VicGFja19yZXF1aXJlX18oLyohIC4vdXRpbHMvZGVib3VuY2UuanMgKi8gIi4vbm9kZV9tb2R1bGVzL0Bwb3BwZXJqcy9jb3JlL2xpYi91dGlscy9kZWJvdW5jZS5qcyIpOwovKiBoYXJtb255IGltcG9ydCAqLyB2YXIgX3V0aWxzX3ZhbGlkYXRlTW9kaWZpZXJzX2pzX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV81X18gPSBfX3dlYnBhY2tfcmVxdWlyZV9fKC8qISAuL3V0aWxzL3ZhbGlkYXRlTW9kaWZpZXJzLmpzICovICIuL25vZGVfbW9kdWxlcy9AcG9wcGVyanMvY29yZS9saWIvdXRpbHMvdmFsaWRhdGVNb2RpZmllcnMuanMiKTsKLyogaGFybW9ueSBpbXBvcnQgKi8gdmFyIF91dGlsc191bmlxdWVCeV9qc19fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfNF9fID0gX193ZWJwYWNrX3JlcXVpcmVfXygvKiEgLi91dGlscy91bmlxdWVCeS5qcyAqLyAiLi9ub2RlX21vZHVsZXMvQHBvcHBlcmpzL2NvcmUvbGliL3V0aWxzL3VuaXF1ZUJ5LmpzIik7Ci8qIGhhcm1vbnkgaW1wb3J0ICovIHZhciBfdXRpbHNfZ2V0QmFzZVBsYWNlbWVudF9qc19fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfNl9fID0gX193ZWJwYWNrX3JlcXVpcmVfXygvKiEgLi91dGlscy9nZXRCYXNlUGxhY2VtZW50LmpzICovICIuL25vZGVfbW9kdWxlcy9AcG9wcGVyanMvY29yZS9saWIvdXRpbHMvZ2V0QmFzZVBsYWNlbWVudC5qcyIpOwovKiBoYXJtb255IGltcG9ydCAqLyB2YXIgX3V0aWxzX21lcmdlQnlOYW1lX2pzX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8zX18gPSBfX3dlYnBhY2tfcmVxdWlyZV9fKC8qISAuL3V0aWxzL21lcmdlQnlOYW1lLmpzICovICIuL25vZGVfbW9kdWxlcy9AcG9wcGVyanMvY29yZS9saWIvdXRpbHMvbWVyZ2VCeU5hbWUuanMiKTsKLyogaGFybW9ueSBpbXBvcnQgKi8gdmFyIF91dGlsc19kZXRlY3RPdmVyZmxvd19qc19fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMTNfXyA9IF9fd2VicGFja19yZXF1aXJlX18oLyohIC4vdXRpbHMvZGV0ZWN0T3ZlcmZsb3cuanMgKi8gIi4vbm9kZV9tb2R1bGVzL0Bwb3BwZXJqcy9jb3JlL2xpYi91dGlscy9kZXRlY3RPdmVyZmxvdy5qcyIpOwovKiBoYXJtb255IGltcG9ydCAqLyB2YXIgX2RvbV91dGlsc19pbnN0YW5jZU9mX2pzX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8wX18gPSBfX3dlYnBhY2tfcmVxdWlyZV9fKC8qISAuL2RvbS11dGlscy9pbnN0YW5jZU9mLmpzICovICIuL25vZGVfbW9kdWxlcy9AcG9wcGVyanMvY29yZS9saWIvZG9tLXV0aWxzL2luc3RhbmNlT2YuanMiKTsKLyogaGFybW9ueSBpbXBvcnQgKi8gdmFyIF9lbnVtc19qc19fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfN19fID0gX193ZWJwYWNrX3JlcXVpcmVfXygvKiEgLi9lbnVtcy5qcyAqLyAiLi9ub2RlX21vZHVsZXMvQHBvcHBlcmpzL2NvcmUvbGliL2VudW1zLmpzIik7CgoKCgoKCgoKCgoKCgoKdmFyIElOVkFMSURfRUxFTUVOVF9FUlJPUiA9ICdQb3BwZXI6IEludmFsaWQgcmVmZXJlbmNlIG9yIHBvcHBlciBhcmd1bWVudCBwcm92aWRlZC4gVGhleSBtdXN0IGJlIGVpdGhlciBhIERPTSBlbGVtZW50IG9yIHZpcnR1YWwgZWxlbWVudC4nOwp2YXIgSU5GSU5JVEVfTE9PUF9FUlJPUiA9ICdQb3BwZXI6IEFuIGluZmluaXRlIGxvb3AgaW4gdGhlIG1vZGlmaWVycyBjeWNsZSBoYXMgYmVlbiBkZXRlY3RlZCEgVGhlIGN5Y2xlIGhhcyBiZWVuIGludGVycnVwdGVkIHRvIHByZXZlbnQgYSBicm93c2VyIGNyYXNoLic7CnZhciBERUZBVUxUX09QVElPTlMgPSB7CiAgcGxhY2VtZW50OiAnYm90dG9tJywKICBtb2RpZmllcnM6IFtdLAogIHN0cmF0ZWd5OiAnYWJzb2x1dGUnCn07CgpmdW5jdGlvbiBhcmVWYWxpZEVsZW1lbnRzKCkgewogIGZvciAodmFyIF9sZW4gPSBhcmd1bWVudHMubGVuZ3RoLCBhcmdzID0gbmV3IEFycmF5KF9sZW4pLCBfa2V5ID0gMDsgX2tleSA8IF9sZW47IF9rZXkrKykgewogICAgYXJnc1tfa2V5XSA9IGFyZ3VtZW50c1tfa2V5XTsKICB9CgogIHJldHVybiAhYXJncy5zb21lKGZ1bmN0aW9uIChlbGVtZW50KSB7CiAgICByZXR1cm4gIShlbGVtZW50ICYmIHR5cGVvZiBlbGVtZW50LmdldEJvdW5kaW5nQ2xpZW50UmVjdCA9PT0gJ2Z1bmN0aW9uJyk7CiAgfSk7Cn0KCmZ1bmN0aW9uIHBvcHBlckdlbmVyYXRvcihnZW5lcmF0b3JPcHRpb25zKSB7CiAgaWYgKGdlbmVyYXRvck9wdGlvbnMgPT09IHZvaWQgMCkgewogICAgZ2VuZXJhdG9yT3B0aW9ucyA9IHt9OwogIH0KCiAgdmFyIF9nZW5lcmF0b3JPcHRpb25zID0gZ2VuZXJhdG9yT3B0aW9ucywKICAgICAgX2dlbmVyYXRvck9wdGlvbnMkZGVmID0gX2dlbmVyYXRvck9wdGlvbnMuZGVmYXVsdE1vZGlmaWVycywKICAgICAgZGVmYXVsdE1vZGlmaWVycyA9IF9nZW5lcmF0b3JPcHRpb25zJGRlZiA9PT0gdm9pZCAwID8gW10gOiBfZ2VuZXJhdG9yT3B0aW9ucyRkZWYsCiAgICAgIF9nZW5lcmF0b3JPcHRpb25zJGRlZjIgPSBfZ2VuZXJhdG9yT3B0aW9ucy5kZWZhdWx0T3B0aW9ucywKICAgICAgZGVmYXVsdE9wdGlvbnMgPSBfZ2VuZXJhdG9yT3B0aW9ucyRkZWYyID09PSB2b2lkIDAgPyBERUZBVUxUX09QVElPTlMgOiBfZ2VuZXJhdG9yT3B0aW9ucyRkZWYyOwogIHJldHVybiBmdW5jdGlvbiBjcmVhdGVQb3BwZXIocmVmZXJlbmNlLCBwb3BwZXIsIG9wdGlvbnMpIHsKICAgIGlmIChvcHRpb25zID09PSB2b2lkIDApIHsKICAgICAgb3B0aW9ucyA9IGRlZmF1bHRPcHRpb25zOwogICAgfQoKICAgIHZhciBzdGF0ZSA9IHsKICAgICAgcGxhY2VtZW50OiAnYm90dG9tJywKICAgICAgb3JkZXJlZE1vZGlmaWVyczogW10sCiAgICAgIG9wdGlvbnM6IE9iamVjdC5hc3NpZ24oe30sIERFRkFVTFRfT1BUSU9OUywgZGVmYXVsdE9wdGlvbnMpLAogICAgICBtb2RpZmllcnNEYXRhOiB7fSwKICAgICAgZWxlbWVudHM6IHsKICAgICAgICByZWZlcmVuY2U6IHJlZmVyZW5jZSwKICAgICAgICBwb3BwZXI6IHBvcHBlcgogICAgICB9LAogICAgICBhdHRyaWJ1dGVzOiB7fSwKICAgICAgc3R5bGVzOiB7fQogICAgfTsKICAgIHZhciBlZmZlY3RDbGVhbnVwRm5zID0gW107CiAgICB2YXIgaXNEZXN0cm95ZWQgPSBmYWxzZTsKICAgIHZhciBpbnN0YW5jZSA9IHsKICAgICAgc3RhdGU6IHN0YXRlLAogICAgICBzZXRPcHRpb25zOiBmdW5jdGlvbiBzZXRPcHRpb25zKHNldE9wdGlvbnNBY3Rpb24pIHsKICAgICAgICB2YXIgb3B0aW9ucyA9IHR5cGVvZiBzZXRPcHRpb25zQWN0aW9uID09PSAnZnVuY3Rpb24nID8gc2V0T3B0aW9uc0FjdGlvbihzdGF0ZS5vcHRpb25zKSA6IHNldE9wdGlvbnNBY3Rpb247CiAgICAgICAgY2xlYW51cE1vZGlmaWVyRWZmZWN0cygpOwogICAgICAgIHN0YXRlLm9wdGlvbnMgPSBPYmplY3QuYXNzaWduKHt9LCBkZWZhdWx0T3B0aW9ucywgc3RhdGUub3B0aW9ucywgb3B0aW9ucyk7CiAgICAgICAgc3RhdGUuc2Nyb2xsUGFyZW50cyA9IHsKICAgICAgICAgIHJlZmVyZW5jZTogKDAsX2RvbV91dGlsc19pbnN0YW5jZU9mX2pzX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8wX18uaXNFbGVtZW50KShyZWZlcmVuY2UpID8gKDAsX2RvbV91dGlsc19saXN0U2Nyb2xsUGFyZW50c19qc19fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMV9fWyJkZWZhdWx0Il0pKHJlZmVyZW5jZSkgOiByZWZlcmVuY2UuY29udGV4dEVsZW1lbnQgPyAoMCxfZG9tX3V0aWxzX2xpc3RTY3JvbGxQYXJlbnRzX2pzX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8xX19bImRlZmF1bHQiXSkocmVmZXJlbmNlLmNvbnRleHRFbGVtZW50KSA6IFtdLAogICAgICAgICAgcG9wcGVyOiAoMCxfZG9tX3V0aWxzX2xpc3RTY3JvbGxQYXJlbnRzX2pzX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8xX19bImRlZmF1bHQiXSkocG9wcGVyKQogICAgICAgIH07IC8vIE9yZGVycyB0aGUgbW9kaWZpZXJzIGJhc2VkIG9uIHRoZWlyIGRlcGVuZGVuY2llcyBhbmQgYHBoYXNlYAogICAgICAgIC8vIHByb3BlcnRpZXMKCiAgICAgICAgdmFyIG9yZGVyZWRNb2RpZmllcnMgPSAoMCxfdXRpbHNfb3JkZXJNb2RpZmllcnNfanNfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzJfX1siZGVmYXVsdCJdKSgoMCxfdXRpbHNfbWVyZ2VCeU5hbWVfanNfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzNfX1siZGVmYXVsdCJdKShbXS5jb25jYXQoZGVmYXVsdE1vZGlmaWVycywgc3RhdGUub3B0aW9ucy5tb2RpZmllcnMpKSk7IC8vIFN0cmlwIG91dCBkaXNhYmxlZCBtb2RpZmllcnMKCiAgICAgICAgc3RhdGUub3JkZXJlZE1vZGlmaWVycyA9IG9yZGVyZWRNb2RpZmllcnMuZmlsdGVyKGZ1bmN0aW9uIChtKSB7CiAgICAgICAgICByZXR1cm4gbS5lbmFibGVkOwogICAgICAgIH0pOyAvLyBWYWxpZGF0ZSB0aGUgcHJvdmlkZWQgbW9kaWZpZXJzIHNvIHRoYXQgdGhlIGNvbnN1bWVyIHdpbGwgZ2V0IHdhcm5lZAogICAgICAgIC8vIGlmIG9uZSBvZiB0aGUgbW9kaWZpZXJzIGlzIGludmFsaWQgZm9yIGFueSByZWFzb24KCiAgICAgICAgaWYgKHRydWUpIHsKICAgICAgICAgIHZhciBtb2RpZmllcnMgPSAoMCxfdXRpbHNfdW5pcXVlQnlfanNfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzRfX1siZGVmYXVsdCJdKShbXS5jb25jYXQob3JkZXJlZE1vZGlmaWVycywgc3RhdGUub3B0aW9ucy5tb2RpZmllcnMpLCBmdW5jdGlvbiAoX3JlZikgewogICAgICAgICAgICB2YXIgbmFtZSA9IF9yZWYubmFtZTsKICAgICAgICAgICAgcmV0dXJuIG5hbWU7CiAgICAgICAgICB9KTsKICAgICAgICAgICgwLF91dGlsc192YWxpZGF0ZU1vZGlmaWVyc19qc19fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfNV9fWyJkZWZhdWx0Il0pKG1vZGlmaWVycyk7CgogICAgICAgICAgaWYgKCgwLF91dGlsc19nZXRCYXNlUGxhY2VtZW50X2pzX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV82X19bImRlZmF1bHQiXSkoc3RhdGUub3B0aW9ucy5wbGFjZW1lbnQpID09PSBfZW51bXNfanNfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzdfXy5hdXRvKSB7CiAgICAgICAgICAgIHZhciBmbGlwTW9kaWZpZXIgPSBzdGF0ZS5vcmRlcmVkTW9kaWZpZXJzLmZpbmQoZnVuY3Rpb24gKF9yZWYyKSB7CiAgICAgICAgICAgICAgdmFyIG5hbWUgPSBfcmVmMi5uYW1lOwogICAgICAgICAgICAgIHJldHVybiBuYW1lID09PSAnZmxpcCc7CiAgICAgICAgICAgIH0pOwoKICAgICAgICAgICAgaWYgKCFmbGlwTW9kaWZpZXIpIHsKICAgICAgICAgICAgICBjb25zb2xlLmVycm9yKFsnUG9wcGVyOiAiYXV0byIgcGxhY2VtZW50cyByZXF1aXJlIHRoZSAiZmxpcCIgbW9kaWZpZXIgYmUnLCAncHJlc2VudCBhbmQgZW5hYmxlZCB0byB3b3JrLiddLmpvaW4oJyAnKSk7CiAgICAgICAgICAgIH0KICAgICAgICAgIH0KCiAgICAgICAgICB2YXIgX2dldENvbXB1dGVkU3R5bGUgPSAoMCxfZG9tX3V0aWxzX2dldENvbXB1dGVkU3R5bGVfanNfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzhfX1siZGVmYXVsdCJdKShwb3BwZXIpLAogICAgICAgICAgICAgIG1hcmdpblRvcCA9IF9nZXRDb21wdXRlZFN0eWxlLm1hcmdpblRvcCwKICAgICAgICAgICAgICBtYXJnaW5SaWdodCA9IF9nZXRDb21wdXRlZFN0eWxlLm1hcmdpblJpZ2h0LAogICAgICAgICAgICAgIG1hcmdpbkJvdHRvbSA9IF9nZXRDb21wdXRlZFN0eWxlLm1hcmdpbkJvdHRvbSwKICAgICAgICAgICAgICBtYXJnaW5MZWZ0ID0gX2dldENvbXB1dGVkU3R5bGUubWFyZ2luTGVmdDsgLy8gV2Ugbm8gbG9uZ2VyIHRha2UgaW50byBhY2NvdW50IGBtYXJnaW5zYCBvbiB0aGUgcG9wcGVyLCBhbmQgaXQgY2FuCiAgICAgICAgICAvLyBjYXVzZSBidWdzIHdpdGggcG9zaXRpb25pbmcsIHNvIHdlJ2xsIHdhcm4gdGhlIGNvbnN1bWVyCgoKICAgICAgICAgIGlmIChbbWFyZ2luVG9wLCBtYXJnaW5SaWdodCwgbWFyZ2luQm90dG9tLCBtYXJnaW5MZWZ0XS5zb21lKGZ1bmN0aW9uIChtYXJnaW4pIHsKICAgICAgICAgICAgcmV0dXJuIHBhcnNlRmxvYXQobWFyZ2luKTsKICAgICAgICAgIH0pKSB7CiAgICAgICAgICAgIGNvbnNvbGUud2FybihbJ1BvcHBlcjogQ1NTICJtYXJnaW4iIHN0eWxlcyBjYW5ub3QgYmUgdXNlZCB0byBhcHBseSBwYWRkaW5nJywgJ2JldHdlZW4gdGhlIHBvcHBlciBhbmQgaXRzIHJlZmVyZW5jZSBlbGVtZW50IG9yIGJvdW5kYXJ5LicsICdUbyByZXBsaWNhdGUgbWFyZ2luLCB1c2UgdGhlIGBvZmZzZXRgIG1vZGlmaWVyLCBhcyB3ZWxsIGFzJywgJ3RoZSBgcGFkZGluZ2Agb3B0aW9uIGluIHRoZSBgcHJldmVudE92ZXJmbG93YCBhbmQgYGZsaXBgJywgJ21vZGlmaWVycy4nXS5qb2luKCcgJykpOwogICAgICAgICAgfQogICAgICAgIH0KCiAgICAgICAgcnVuTW9kaWZpZXJFZmZlY3RzKCk7CiAgICAgICAgcmV0dXJuIGluc3RhbmNlLnVwZGF0ZSgpOwogICAgICB9LAogICAgICAvLyBTeW5jIHVwZGF0ZSDigJMgaXQgd2lsbCBhbHdheXMgYmUgZXhlY3V0ZWQsIGV2ZW4gaWYgbm90IG5lY2Vzc2FyeS4gVGhpcwogICAgICAvLyBpcyB1c2VmdWwgZm9yIGxvdyBmcmVxdWVuY3kgdXBkYXRlcyB3aGVyZSBzeW5jIGJlaGF2aW9yIHNpbXBsaWZpZXMgdGhlCiAgICAgIC8vIGxvZ2ljLgogICAgICAvLyBGb3IgaGlnaCBmcmVxdWVuY3kgdXBkYXRlcyAoZS5nLiBgcmVzaXplYCBhbmQgYHNjcm9sbGAgZXZlbnRzKSwgYWx3YXlzCiAgICAgIC8vIHByZWZlciB0aGUgYXN5bmMgUG9wcGVyI3VwZGF0ZSBtZXRob2QKICAgICAgZm9yY2VVcGRhdGU6IGZ1bmN0aW9uIGZvcmNlVXBkYXRlKCkgewogICAgICAgIGlmIChpc0Rlc3Ryb3llZCkgewogICAgICAgICAgcmV0dXJuOwogICAgICAgIH0KCiAgICAgICAgdmFyIF9zdGF0ZSRlbGVtZW50cyA9IHN0YXRlLmVsZW1lbnRzLAogICAgICAgICAgICByZWZlcmVuY2UgPSBfc3RhdGUkZWxlbWVudHMucmVmZXJlbmNlLAogICAgICAgICAgICBwb3BwZXIgPSBfc3RhdGUkZWxlbWVudHMucG9wcGVyOyAvLyBEb24ndCBwcm9jZWVkIGlmIGByZWZlcmVuY2VgIG9yIGBwb3BwZXJgIGFyZSBub3QgdmFsaWQgZWxlbWVudHMKICAgICAgICAvLyBhbnltb3JlCgogICAgICAgIGlmICghYXJlVmFsaWRFbGVtZW50cyhyZWZlcmVuY2UsIHBvcHBlcikpIHsKICAgICAgICAgIGlmICh0cnVlKSB7CiAgICAgICAgICAgIGNvbnNvbGUuZXJyb3IoSU5WQUxJRF9FTEVNRU5UX0VSUk9SKTsKICAgICAgICAgIH0KCiAgICAgICAgICByZXR1cm47CiAgICAgICAgfSAvLyBTdG9yZSB0aGUgcmVmZXJlbmNlIGFuZCBwb3BwZXIgcmVjdHMgdG8gYmUgcmVhZCBieSBtb2RpZmllcnMKCgogICAgICAgIHN0YXRlLnJlY3RzID0gewogICAgICAgICAgcmVmZXJlbmNlOiAoMCxfZG9tX3V0aWxzX2dldENvbXBvc2l0ZVJlY3RfanNfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzlfX1siZGVmYXVsdCJdKShyZWZlcmVuY2UsICgwLF9kb21fdXRpbHNfZ2V0T2Zmc2V0UGFyZW50X2pzX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8xMF9fWyJkZWZhdWx0Il0pKHBvcHBlciksIHN0YXRlLm9wdGlvbnMuc3RyYXRlZ3kgPT09ICdmaXhlZCcpLAogICAgICAgICAgcG9wcGVyOiAoMCxfZG9tX3V0aWxzX2dldExheW91dFJlY3RfanNfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzExX19bImRlZmF1bHQiXSkocG9wcGVyKQogICAgICAgIH07IC8vIE1vZGlmaWVycyBoYXZlIHRoZSBhYmlsaXR5IHRvIHJlc2V0IHRoZSBjdXJyZW50IHVwZGF0ZSBjeWNsZS4gVGhlCiAgICAgICAgLy8gbW9zdCBjb21tb24gdXNlIGNhc2UgZm9yIHRoaXMgaXMgdGhlIGBmbGlwYCBtb2RpZmllciBjaGFuZ2luZyB0aGUKICAgICAgICAvLyBwbGFjZW1lbnQsIHdoaWNoIHRoZW4gbmVlZHMgdG8gcmUtcnVuIGFsbCB0aGUgbW9kaWZpZXJzLCBiZWNhdXNlIHRoZQogICAgICAgIC8vIGxvZ2ljIHdhcyBwcmV2aW91c2x5IHJhbiBmb3IgdGhlIHByZXZpb3VzIHBsYWNlbWVudCBhbmQgaXMgdGhlcmVmb3JlCiAgICAgICAgLy8gc3RhbGUvaW5jb3JyZWN0CgogICAgICAgIHN0YXRlLnJlc2V0ID0gZmFsc2U7CiAgICAgICAgc3RhdGUucGxhY2VtZW50ID0gc3RhdGUub3B0aW9ucy5wbGFjZW1lbnQ7IC8vIE9uIGVhY2ggdXBkYXRlIGN5Y2xlLCB0aGUgYG1vZGlmaWVyc0RhdGFgIHByb3BlcnR5IGZvciBlYWNoIG1vZGlmaWVyCiAgICAgICAgLy8gaXMgZmlsbGVkIHdpdGggdGhlIGluaXRpYWwgZGF0YSBzcGVjaWZpZWQgYnkgdGhlIG1vZGlmaWVyLiBUaGlzIG1lYW5zCiAgICAgICAgLy8gaXQgZG9lc24ndCBwZXJzaXN0IGFuZCBpcyBmcmVzaCBvbiBlYWNoIHVwZGF0ZS4KICAgICAgICAvLyBUbyBlbnN1cmUgcGVyc2lzdGVudCBkYXRhLCB1c2UgYCR7bmFtZX0jcGVyc2lzdGVudGAKCiAgICAgICAgc3RhdGUub3JkZXJlZE1vZGlmaWVycy5mb3JFYWNoKGZ1bmN0aW9uIChtb2RpZmllcikgewogICAgICAgICAgcmV0dXJuIHN0YXRlLm1vZGlmaWVyc0RhdGFbbW9kaWZpZXIubmFtZV0gPSBPYmplY3QuYXNzaWduKHt9LCBtb2RpZmllci5kYXRhKTsKICAgICAgICB9KTsKICAgICAgICB2YXIgX19kZWJ1Z19sb29wc19fID0gMDsKCiAgICAgICAgZm9yICh2YXIgaW5kZXggPSAwOyBpbmRleCA8IHN0YXRlLm9yZGVyZWRNb2RpZmllcnMubGVuZ3RoOyBpbmRleCsrKSB7CiAgICAgICAgICBpZiAodHJ1ZSkgewogICAgICAgICAgICBfX2RlYnVnX2xvb3BzX18gKz0gMTsKCiAgICAgICAgICAgIGlmIChfX2RlYnVnX2xvb3BzX18gPiAxMDApIHsKICAgICAgICAgICAgICBjb25zb2xlLmVycm9yKElORklOSVRFX0xPT1BfRVJST1IpOwogICAgICAgICAgICAgIGJyZWFrOwogICAgICAgICAgICB9CiAgICAgICAgICB9CgogICAgICAgICAgaWYgKHN0YXRlLnJlc2V0ID09PSB0cnVlKSB7CiAgICAgICAgICAgIHN0YXRlLnJlc2V0ID0gZmFsc2U7CiAgICAgICAgICAgIGluZGV4ID0gLTE7CiAgICAgICAgICAgIGNvbnRpbnVlOwogICAgICAgICAgfQoKICAgICAgICAgIHZhciBfc3RhdGUkb3JkZXJlZE1vZGlmaWUgPSBzdGF0ZS5vcmRlcmVkTW9kaWZpZXJzW2luZGV4XSwKICAgICAgICAgICAgICBmbiA9IF9zdGF0ZSRvcmRlcmVkTW9kaWZpZS5mbiwKICAgICAgICAgICAgICBfc3RhdGUkb3JkZXJlZE1vZGlmaWUyID0gX3N0YXRlJG9yZGVyZWRNb2RpZmllLm9wdGlvbnMsCiAgICAgICAgICAgICAgX29wdGlvbnMgPSBfc3RhdGUkb3JkZXJlZE1vZGlmaWUyID09PSB2b2lkIDAgPyB7fSA6IF9zdGF0ZSRvcmRlcmVkTW9kaWZpZTIsCiAgICAgICAgICAgICAgbmFtZSA9IF9zdGF0ZSRvcmRlcmVkTW9kaWZpZS5uYW1lOwoKICAgICAgICAgIGlmICh0eXBlb2YgZm4gPT09ICdmdW5jdGlvbicpIHsKICAgICAgICAgICAgc3RhdGUgPSBmbih7CiAgICAgICAgICAgICAgc3RhdGU6IHN0YXRlLAogICAgICAgICAgICAgIG9wdGlvbnM6IF9vcHRpb25zLAogICAgICAgICAgICAgIG5hbWU6IG5hbWUsCiAgICAgICAgICAgICAgaW5zdGFuY2U6IGluc3RhbmNlCiAgICAgICAgICAgIH0pIHx8IHN0YXRlOwogICAgICAgICAgfQogICAgICAgIH0KICAgICAgfSwKICAgICAgLy8gQXN5bmMgYW5kIG9wdGltaXN0aWNhbGx5IG9wdGltaXplZCB1cGRhdGUg4oCTIGl0IHdpbGwgbm90IGJlIGV4ZWN1dGVkIGlmCiAgICAgIC8vIG5vdCBuZWNlc3NhcnkgKGRlYm91bmNlZCB0byBydW4gYXQgbW9zdCBvbmNlLXBlci10aWNrKQogICAgICB1cGRhdGU6ICgwLF91dGlsc19kZWJvdW5jZV9qc19fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMTJfX1siZGVmYXVsdCJdKShmdW5jdGlvbiAoKSB7CiAgICAgICAgcmV0dXJuIG5ldyBQcm9taXNlKGZ1bmN0aW9uIChyZXNvbHZlKSB7CiAgICAgICAgICBpbnN0YW5jZS5mb3JjZVVwZGF0ZSgpOwogICAgICAgICAgcmVzb2x2ZShzdGF0ZSk7CiAgICAgICAgfSk7CiAgICAgIH0pLAogICAgICBkZXN0cm95OiBmdW5jdGlvbiBkZXN0cm95KCkgewogICAgICAgIGNsZWFudXBNb2RpZmllckVmZmVjdHMoKTsKICAgICAgICBpc0Rlc3Ryb3llZCA9IHRydWU7CiAgICAgIH0KICAgIH07CgogICAgaWYgKCFhcmVWYWxpZEVsZW1lbnRzKHJlZmVyZW5jZSwgcG9wcGVyKSkgewogICAgICBpZiAodHJ1ZSkgewogICAgICAgIGNvbnNvbGUuZXJyb3IoSU5WQUxJRF9FTEVNRU5UX0VSUk9SKTsKICAgICAgfQoKICAgICAgcmV0dXJuIGluc3RhbmNlOwogICAgfQoKICAgIGluc3RhbmNlLnNldE9wdGlvbnMob3B0aW9ucykudGhlbihmdW5jdGlvbiAoc3RhdGUpIHsKICAgICAgaWYgKCFpc0Rlc3Ryb3llZCAmJiBvcHRpb25zLm9uRmlyc3RVcGRhdGUpIHsKICAgICAgICBvcHRpb25zLm9uRmlyc3RVcGRhdGUoc3RhdGUpOwogICAgICB9CiAgICB9KTsgLy8gTW9kaWZpZXJzIGhhdmUgdGhlIGFiaWxpdHkgdG8gZXhlY3V0ZSBhcmJpdHJhcnkgY29kZSBiZWZvcmUgdGhlIGZpcnN0CiAgICAvLyB1cGRhdGUgY3ljbGUgcnVucy4gVGhleSB3aWxsIGJlIGV4ZWN1dGVkIGluIHRoZSBzYW1lIG9yZGVyIGFzIHRoZSB1cGRhdGUKICAgIC8vIGN5Y2xlLiBUaGlzIGlzIHVzZWZ1bCB3aGVuIGEgbW9kaWZpZXIgYWRkcyBzb21lIHBlcnNpc3RlbnQgZGF0YSB0aGF0CiAgICAvLyBvdGhlciBtb2RpZmllcnMgbmVlZCB0byB1c2UsIGJ1dCB0aGUgbW9kaWZpZXIgaXMgcnVuIGFmdGVyIHRoZSBkZXBlbmRlbnQKICAgIC8vIG9uZS4KCiAgICBmdW5jdGlvbiBydW5Nb2RpZmllckVmZmVjdHMoKSB7CiAgICAgIHN0YXRlLm9yZGVyZWRNb2RpZmllcnMuZm9yRWFjaChmdW5jdGlvbiAoX3JlZjMpIHsKICAgICAgICB2YXIgbmFtZSA9IF9yZWYzLm5hbWUsCiAgICAgICAgICAgIF9yZWYzJG9wdGlvbnMgPSBfcmVmMy5vcHRpb25zLAogICAgICAgICAgICBvcHRpb25zID0gX3JlZjMkb3B0aW9ucyA9PT0gdm9pZCAwID8ge30gOiBfcmVmMyRvcHRpb25zLAogICAgICAgICAgICBlZmZlY3QgPSBfcmVmMy5lZmZlY3Q7CgogICAgICAgIGlmICh0eXBlb2YgZWZmZWN0ID09PSAnZnVuY3Rpb24nKSB7CiAgICAgICAgICB2YXIgY2xlYW51cEZuID0gZWZmZWN0KHsKICAgICAgICAgICAgc3RhdGU6IHN0YXRlLAogICAgICAgICAgICBuYW1lOiBuYW1lLAogICAgICAgICAgICBpbnN0YW5jZTogaW5zdGFuY2UsCiAgICAgICAgICAgIG9wdGlvbnM6IG9wdGlvbnMKICAgICAgICAgIH0pOwoKICAgICAgICAgIHZhciBub29wRm4gPSBmdW5jdGlvbiBub29wRm4oKSB7fTsKCiAgICAgICAgICBlZmZlY3RDbGVhbnVwRm5zLnB1c2goY2xlYW51cEZuIHx8IG5vb3BGbik7CiAgICAgICAgfQogICAgICB9KTsKICAgIH0KCiAgICBmdW5jdGlvbiBjbGVhbnVwTW9kaWZpZXJFZmZlY3RzKCkgewogICAgICBlZmZlY3RDbGVhbnVwRm5zLmZvckVhY2goZnVuY3Rpb24gKGZuKSB7CiAgICAgICAgcmV0dXJuIGZuKCk7CiAgICAgIH0pOwogICAgICBlZmZlY3RDbGVhbnVwRm5zID0gW107CiAgICB9CgogICAgcmV0dXJuIGluc3RhbmNlOwogIH07Cn0KdmFyIGNyZWF0ZVBvcHBlciA9IC8qI19fUFVSRV9fKi9wb3BwZXJHZW5lcmF0b3IoKTsgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIGltcG9ydC9uby11bnVzZWQtbW9kdWxlcwoKCgovKioqLyB9KSwKCi8qKiovICIuL25vZGVfbW9kdWxlcy9AcG9wcGVyanMvY29yZS9saWIvZG9tLXV0aWxzL2NvbnRhaW5zLmpzIjoKLyohKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqISpcCiAgISoqKiAuL25vZGVfbW9kdWxlcy9AcG9wcGVyanMvY29yZS9saWIvZG9tLXV0aWxzL2NvbnRhaW5zLmpzICoqKiEKICBcKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqLwovKioqLyAoZnVuY3Rpb24oX191bnVzZWRfd2VicGFja19tb2R1bGUsIF9fd2VicGFja19leHBvcnRzX18sIF9fd2VicGFja19yZXF1aXJlX18pIHsKCiJ1c2Ugc3RyaWN0IjsKX193ZWJwYWNrX3JlcXVpcmVfXy5yKF9fd2VicGFja19leHBvcnRzX18pOwovKiBoYXJtb255IGV4cG9ydCAqLyBfX3dlYnBhY2tfcmVxdWlyZV9fLmQoX193ZWJwYWNrX2V4cG9ydHNfXywgewovKiBoYXJtb255IGV4cG9ydCAqLyAgICJkZWZhdWx0IjogZnVuY3Rpb24oKSB7IHJldHVybiAvKiBiaW5kaW5nICovIGNvbnRhaW5zOyB9Ci8qIGhhcm1vbnkgZXhwb3J0ICovIH0pOwovKiBoYXJtb255IGltcG9ydCAqLyB2YXIgX2luc3RhbmNlT2ZfanNfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzBfXyA9IF9fd2VicGFja19yZXF1aXJlX18oLyohIC4vaW5zdGFuY2VPZi5qcyAqLyAiLi9ub2RlX21vZHVsZXMvQHBvcHBlcmpzL2NvcmUvbGliL2RvbS11dGlscy9pbnN0YW5jZU9mLmpzIik7CgpmdW5jdGlvbiBjb250YWlucyhwYXJlbnQsIGNoaWxkKSB7CiAgdmFyIHJvb3ROb2RlID0gY2hpbGQuZ2V0Um9vdE5vZGUgJiYgY2hpbGQuZ2V0Um9vdE5vZGUoKTsgLy8gRmlyc3QsIGF0dGVtcHQgd2l0aCBmYXN0ZXIgbmF0aXZlIG1ldGhvZAoKICBpZiAocGFyZW50LmNvbnRhaW5zKGNoaWxkKSkgewogICAgcmV0dXJuIHRydWU7CiAgfSAvLyB0aGVuIGZhbGxiYWNrIHRvIGN1c3RvbSBpbXBsZW1lbnRhdGlvbiB3aXRoIFNoYWRvdyBET00gc3VwcG9ydAogIGVsc2UgaWYgKHJvb3ROb2RlICYmICgwLF9pbnN0YW5jZU9mX2pzX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8wX18uaXNTaGFkb3dSb290KShyb290Tm9kZSkpIHsKICAgICAgdmFyIG5leHQgPSBjaGlsZDsKCiAgICAgIGRvIHsKICAgICAgICBpZiAobmV4dCAmJiBwYXJlbnQuaXNTYW1lTm9kZShuZXh0KSkgewogICAgICAgICAgcmV0dXJuIHRydWU7CiAgICAgICAgfSAvLyAkRmxvd0ZpeE1lW3Byb3AtbWlzc2luZ106IG5lZWQgYSBiZXR0ZXIgd2F5IHRvIGhhbmRsZSB0aGlzLi4uCgoKICAgICAgICBuZXh0ID0gbmV4dC5wYXJlbnROb2RlIHx8IG5leHQuaG9zdDsKICAgICAgfSB3aGlsZSAobmV4dCk7CiAgICB9IC8vIEdpdmUgdXAsIHRoZSByZXN1bHQgaXMgZmFsc2UKCgogIHJldHVybiBmYWxzZTsKfQoKLyoqKi8gfSksCgovKioqLyAiLi9ub2RlX21vZHVsZXMvQHBvcHBlcmpzL2NvcmUvbGliL2RvbS11dGlscy9nZXRCb3VuZGluZ0NsaWVudFJlY3QuanMiOgovKiEqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqISpcCiAgISoqKiAuL25vZGVfbW9kdWxlcy9AcG9wcGVyanMvY29yZS9saWIvZG9tLXV0aWxzL2dldEJvdW5kaW5nQ2xpZW50UmVjdC5qcyAqKiohCiAgXCoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiovCi8qKiovIChmdW5jdGlvbihfX3VudXNlZF93ZWJwYWNrX21vZHVsZSwgX193ZWJwYWNrX2V4cG9ydHNfXywgX193ZWJwYWNrX3JlcXVpcmVfXykgewoKInVzZSBzdHJpY3QiOwpfX3dlYnBhY2tfcmVxdWlyZV9fLnIoX193ZWJwYWNrX2V4cG9ydHNfXyk7Ci8qIGhhcm1vbnkgZXhwb3J0ICovIF9fd2VicGFja19yZXF1aXJlX18uZChfX3dlYnBhY2tfZXhwb3J0c19fLCB7Ci8qIGhhcm1vbnkgZXhwb3J0ICovICAgImRlZmF1bHQiOiBmdW5jdGlvbigpIHsgcmV0dXJuIC8qIGJpbmRpbmcgKi8gZ2V0Qm91bmRpbmdDbGllbnRSZWN0OyB9Ci8qIGhhcm1vbnkgZXhwb3J0ICovIH0pOwovKiBoYXJtb255IGltcG9ydCAqLyB2YXIgX2luc3RhbmNlT2ZfanNfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzBfXyA9IF9fd2VicGFja19yZXF1aXJlX18oLyohIC4vaW5zdGFuY2VPZi5qcyAqLyAiLi9ub2RlX21vZHVsZXMvQHBvcHBlcmpzL2NvcmUvbGliL2RvbS11dGlscy9pbnN0YW5jZU9mLmpzIik7Ci8qIGhhcm1vbnkgaW1wb3J0ICovIHZhciBfdXRpbHNfbWF0aF9qc19fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMV9fID0gX193ZWJwYWNrX3JlcXVpcmVfXygvKiEgLi4vdXRpbHMvbWF0aC5qcyAqLyAiLi9ub2RlX21vZHVsZXMvQHBvcHBlcmpzL2NvcmUvbGliL3V0aWxzL21hdGguanMiKTsKLyogaGFybW9ueSBpbXBvcnQgKi8gdmFyIF9nZXRXaW5kb3dfanNfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzJfXyA9IF9fd2VicGFja19yZXF1aXJlX18oLyohIC4vZ2V0V2luZG93LmpzICovICIuL25vZGVfbW9kdWxlcy9AcG9wcGVyanMvY29yZS9saWIvZG9tLXV0aWxzL2dldFdpbmRvdy5qcyIpOwovKiBoYXJtb255IGltcG9ydCAqLyB2YXIgX2lzTGF5b3V0Vmlld3BvcnRfanNfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzNfXyA9IF9fd2VicGFja19yZXF1aXJlX18oLyohIC4vaXNMYXlvdXRWaWV3cG9ydC5qcyAqLyAiLi9ub2RlX21vZHVsZXMvQHBvcHBlcmpzL2NvcmUvbGliL2RvbS11dGlscy9pc0xheW91dFZpZXdwb3J0LmpzIik7CgoKCgpmdW5jdGlvbiBnZXRCb3VuZGluZ0NsaWVudFJlY3QoZWxlbWVudCwgaW5jbHVkZVNjYWxlLCBpc0ZpeGVkU3RyYXRlZ3kpIHsKICBpZiAoaW5jbHVkZVNjYWxlID09PSB2b2lkIDApIHsKICAgIGluY2x1ZGVTY2FsZSA9IGZhbHNlOwogIH0KCiAgaWYgKGlzRml4ZWRTdHJhdGVneSA9PT0gdm9pZCAwKSB7CiAgICBpc0ZpeGVkU3RyYXRlZ3kgPSBmYWxzZTsKICB9CgogIHZhciBjbGllbnRSZWN0ID0gZWxlbWVudC5nZXRCb3VuZGluZ0NsaWVudFJlY3QoKTsKICB2YXIgc2NhbGVYID0gMTsKICB2YXIgc2NhbGVZID0gMTsKCiAgaWYgKGluY2x1ZGVTY2FsZSAmJiAoMCxfaW5zdGFuY2VPZl9qc19fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMF9fLmlzSFRNTEVsZW1lbnQpKGVsZW1lbnQpKSB7CiAgICBzY2FsZVggPSBlbGVtZW50Lm9mZnNldFdpZHRoID4gMCA/ICgwLF91dGlsc19tYXRoX2pzX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8xX18ucm91bmQpKGNsaWVudFJlY3Qud2lkdGgpIC8gZWxlbWVudC5vZmZzZXRXaWR0aCB8fCAxIDogMTsKICAgIHNjYWxlWSA9IGVsZW1lbnQub2Zmc2V0SGVpZ2h0ID4gMCA/ICgwLF91dGlsc19tYXRoX2pzX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8xX18ucm91bmQpKGNsaWVudFJlY3QuaGVpZ2h0KSAvIGVsZW1lbnQub2Zmc2V0SGVpZ2h0IHx8IDEgOiAxOwogIH0KCiAgdmFyIF9yZWYgPSAoMCxfaW5zdGFuY2VPZl9qc19fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMF9fLmlzRWxlbWVudCkoZWxlbWVudCkgPyAoMCxfZ2V0V2luZG93X2pzX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8yX19bImRlZmF1bHQiXSkoZWxlbWVudCkgOiB3aW5kb3csCiAgICAgIHZpc3VhbFZpZXdwb3J0ID0gX3JlZi52aXN1YWxWaWV3cG9ydDsKCiAgdmFyIGFkZFZpc3VhbE9mZnNldHMgPSAhKDAsX2lzTGF5b3V0Vmlld3BvcnRfanNfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzNfX1siZGVmYXVsdCJdKSgpICYmIGlzRml4ZWRTdHJhdGVneTsKICB2YXIgeCA9IChjbGllbnRSZWN0LmxlZnQgKyAoYWRkVmlzdWFsT2Zmc2V0cyAmJiB2aXN1YWxWaWV3cG9ydCA/IHZpc3VhbFZpZXdwb3J0Lm9mZnNldExlZnQgOiAwKSkgLyBzY2FsZVg7CiAgdmFyIHkgPSAoY2xpZW50UmVjdC50b3AgKyAoYWRkVmlzdWFsT2Zmc2V0cyAmJiB2aXN1YWxWaWV3cG9ydCA/IHZpc3VhbFZpZXdwb3J0Lm9mZnNldFRvcCA6IDApKSAvIHNjYWxlWTsKICB2YXIgd2lkdGggPSBjbGllbnRSZWN0LndpZHRoIC8gc2NhbGVYOwogIHZhciBoZWlnaHQgPSBjbGllbnRSZWN0LmhlaWdodCAvIHNjYWxlWTsKICByZXR1cm4gewogICAgd2lkdGg6IHdpZHRoLAogICAgaGVpZ2h0OiBoZWlnaHQsCiAgICB0b3A6IHksCiAgICByaWdodDogeCArIHdpZHRoLAogICAgYm90dG9tOiB5ICsgaGVpZ2h0LAogICAgbGVmdDogeCwKICAgIHg6IHgsCiAgICB5OiB5CiAgfTsKfQoKLyoqKi8gfSksCgovKioqLyAiLi9ub2RlX21vZHVsZXMvQHBvcHBlcmpzL2NvcmUvbGliL2RvbS11dGlscy9nZXRDbGlwcGluZ1JlY3QuanMiOgovKiEqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqISpcCiAgISoqKiAuL25vZGVfbW9kdWxlcy9AcG9wcGVyanMvY29yZS9saWIvZG9tLXV0aWxzL2dldENsaXBwaW5nUmVjdC5qcyAqKiohCiAgXCoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiovCi8qKiovIChmdW5jdGlvbihfX3VudXNlZF93ZWJwYWNrX21vZHVsZSwgX193ZWJwYWNrX2V4cG9ydHNfXywgX193ZWJwYWNrX3JlcXVpcmVfXykgewoKInVzZSBzdHJpY3QiOwpfX3dlYnBhY2tfcmVxdWlyZV9fLnIoX193ZWJwYWNrX2V4cG9ydHNfXyk7Ci8qIGhhcm1vbnkgZXhwb3J0ICovIF9fd2VicGFja19yZXF1aXJlX18uZChfX3dlYnBhY2tfZXhwb3J0c19fLCB7Ci8qIGhhcm1vbnkgZXhwb3J0ICovICAgImRlZmF1bHQiOiBmdW5jdGlvbigpIHsgcmV0dXJuIC8qIGJpbmRpbmcgKi8gZ2V0Q2xpcHBpbmdSZWN0OyB9Ci8qIGhhcm1vbnkgZXhwb3J0ICovIH0pOwovKiBoYXJtb255IGltcG9ydCAqLyB2YXIgX2VudW1zX2pzX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8xX18gPSBfX3dlYnBhY2tfcmVxdWlyZV9fKC8qISAuLi9lbnVtcy5qcyAqLyAiLi9ub2RlX21vZHVsZXMvQHBvcHBlcmpzL2NvcmUvbGliL2VudW1zLmpzIik7Ci8qIGhhcm1vbnkgaW1wb3J0ICovIHZhciBfZ2V0Vmlld3BvcnRSZWN0X2pzX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8zX18gPSBfX3dlYnBhY2tfcmVxdWlyZV9fKC8qISAuL2dldFZpZXdwb3J0UmVjdC5qcyAqLyAiLi9ub2RlX21vZHVsZXMvQHBvcHBlcmpzL2NvcmUvbGliL2RvbS11dGlscy9nZXRWaWV3cG9ydFJlY3QuanMiKTsKLyogaGFybW9ueSBpbXBvcnQgKi8gdmFyIF9nZXREb2N1bWVudFJlY3RfanNfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzVfXyA9IF9fd2VicGFja19yZXF1aXJlX18oLyohIC4vZ2V0RG9jdW1lbnRSZWN0LmpzICovICIuL25vZGVfbW9kdWxlcy9AcG9wcGVyanMvY29yZS9saWIvZG9tLXV0aWxzL2dldERvY3VtZW50UmVjdC5qcyIpOwovKiBoYXJtb255IGltcG9ydCAqLyB2YXIgX2xpc3RTY3JvbGxQYXJlbnRzX2pzX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV83X18gPSBfX3dlYnBhY2tfcmVxdWlyZV9fKC8qISAuL2xpc3RTY3JvbGxQYXJlbnRzLmpzICovICIuL25vZGVfbW9kdWxlcy9AcG9wcGVyanMvY29yZS9saWIvZG9tLXV0aWxzL2xpc3RTY3JvbGxQYXJlbnRzLmpzIik7Ci8qIGhhcm1vbnkgaW1wb3J0ICovIHZhciBfZ2V0T2Zmc2V0UGFyZW50X2pzX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8xMF9fID0gX193ZWJwYWNrX3JlcXVpcmVfXygvKiEgLi9nZXRPZmZzZXRQYXJlbnQuanMgKi8gIi4vbm9kZV9tb2R1bGVzL0Bwb3BwZXJqcy9jb3JlL2xpYi9kb20tdXRpbHMvZ2V0T2Zmc2V0UGFyZW50LmpzIik7Ci8qIGhhcm1vbnkgaW1wb3J0ICovIHZhciBfZ2V0RG9jdW1lbnRFbGVtZW50X2pzX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV82X18gPSBfX3dlYnBhY2tfcmVxdWlyZV9fKC8qISAuL2dldERvY3VtZW50RWxlbWVudC5qcyAqLyAiLi9ub2RlX21vZHVsZXMvQHBvcHBlcmpzL2NvcmUvbGliL2RvbS11dGlscy9nZXREb2N1bWVudEVsZW1lbnQuanMiKTsKLyogaGFybW9ueSBpbXBvcnQgKi8gdmFyIF9nZXRDb21wdXRlZFN0eWxlX2pzX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV85X18gPSBfX3dlYnBhY2tfcmVxdWlyZV9fKC8qISAuL2dldENvbXB1dGVkU3R5bGUuanMgKi8gIi4vbm9kZV9tb2R1bGVzL0Bwb3BwZXJqcy9jb3JlL2xpYi9kb20tdXRpbHMvZ2V0Q29tcHV0ZWRTdHlsZS5qcyIpOwovKiBoYXJtb255IGltcG9ydCAqLyB2YXIgX2luc3RhbmNlT2ZfanNfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzRfXyA9IF9fd2VicGFja19yZXF1aXJlX18oLyohIC4vaW5zdGFuY2VPZi5qcyAqLyAiLi9ub2RlX21vZHVsZXMvQHBvcHBlcmpzL2NvcmUvbGliL2RvbS11dGlscy9pbnN0YW5jZU9mLmpzIik7Ci8qIGhhcm1vbnkgaW1wb3J0ICovIHZhciBfZ2V0Qm91bmRpbmdDbGllbnRSZWN0X2pzX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8wX18gPSBfX3dlYnBhY2tfcmVxdWlyZV9fKC8qISAuL2dldEJvdW5kaW5nQ2xpZW50UmVjdC5qcyAqLyAiLi9ub2RlX21vZHVsZXMvQHBvcHBlcmpzL2NvcmUvbGliL2RvbS11dGlscy9nZXRCb3VuZGluZ0NsaWVudFJlY3QuanMiKTsKLyogaGFybW9ueSBpbXBvcnQgKi8gdmFyIF9nZXRQYXJlbnROb2RlX2pzX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV84X18gPSBfX3dlYnBhY2tfcmVxdWlyZV9fKC8qISAuL2dldFBhcmVudE5vZGUuanMgKi8gIi4vbm9kZV9tb2R1bGVzL0Bwb3BwZXJqcy9jb3JlL2xpYi9kb20tdXRpbHMvZ2V0UGFyZW50Tm9kZS5qcyIpOwovKiBoYXJtb255IGltcG9ydCAqLyB2YXIgX2NvbnRhaW5zX2pzX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8xMV9fID0gX193ZWJwYWNrX3JlcXVpcmVfXygvKiEgLi9jb250YWlucy5qcyAqLyAiLi9ub2RlX21vZHVsZXMvQHBvcHBlcmpzL2NvcmUvbGliL2RvbS11dGlscy9jb250YWlucy5qcyIpOwovKiBoYXJtb255IGltcG9ydCAqLyB2YXIgX2dldE5vZGVOYW1lX2pzX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8xMl9fID0gX193ZWJwYWNrX3JlcXVpcmVfXygvKiEgLi9nZXROb2RlTmFtZS5qcyAqLyAiLi9ub2RlX21vZHVsZXMvQHBvcHBlcmpzL2NvcmUvbGliL2RvbS11dGlscy9nZXROb2RlTmFtZS5qcyIpOwovKiBoYXJtb255IGltcG9ydCAqLyB2YXIgX3V0aWxzX3JlY3RUb0NsaWVudFJlY3RfanNfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzJfXyA9IF9fd2VicGFja19yZXF1aXJlX18oLyohIC4uL3V0aWxzL3JlY3RUb0NsaWVudFJlY3QuanMgKi8gIi4vbm9kZV9tb2R1bGVzL0Bwb3BwZXJqcy9jb3JlL2xpYi91dGlscy9yZWN0VG9DbGllbnRSZWN0LmpzIik7Ci8qIGhhcm1vbnkgaW1wb3J0ICovIHZhciBfdXRpbHNfbWF0aF9qc19fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMTNfXyA9IF9fd2VicGFja19yZXF1aXJlX18oLyohIC4uL3V0aWxzL21hdGguanMgKi8gIi4vbm9kZV9tb2R1bGVzL0Bwb3BwZXJqcy9jb3JlL2xpYi91dGlscy9tYXRoLmpzIik7CgoKCgoKCgoKCgoKCgoKCmZ1bmN0aW9uIGdldElubmVyQm91bmRpbmdDbGllbnRSZWN0KGVsZW1lbnQsIHN0cmF0ZWd5KSB7CiAgdmFyIHJlY3QgPSAoMCxfZ2V0Qm91bmRpbmdDbGllbnRSZWN0X2pzX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8wX19bImRlZmF1bHQiXSkoZWxlbWVudCwgZmFsc2UsIHN0cmF0ZWd5ID09PSAnZml4ZWQnKTsKICByZWN0LnRvcCA9IHJlY3QudG9wICsgZWxlbWVudC5jbGllbnRUb3A7CiAgcmVjdC5sZWZ0ID0gcmVjdC5sZWZ0ICsgZWxlbWVudC5jbGllbnRMZWZ0OwogIHJlY3QuYm90dG9tID0gcmVjdC50b3AgKyBlbGVtZW50LmNsaWVudEhlaWdodDsKICByZWN0LnJpZ2h0ID0gcmVjdC5sZWZ0ICsgZWxlbWVudC5jbGllbnRXaWR0aDsKICByZWN0LndpZHRoID0gZWxlbWVudC5jbGllbnRXaWR0aDsKICByZWN0LmhlaWdodCA9IGVsZW1lbnQuY2xpZW50SGVpZ2h0OwogIHJlY3QueCA9IHJlY3QubGVmdDsKICByZWN0LnkgPSByZWN0LnRvcDsKICByZXR1cm4gcmVjdDsKfQoKZnVuY3Rpb24gZ2V0Q2xpZW50UmVjdEZyb21NaXhlZFR5cGUoZWxlbWVudCwgY2xpcHBpbmdQYXJlbnQsIHN0cmF0ZWd5KSB7CiAgcmV0dXJuIGNsaXBwaW5nUGFyZW50ID09PSBfZW51bXNfanNfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzFfXy52aWV3cG9ydCA/ICgwLF91dGlsc19yZWN0VG9DbGllbnRSZWN0X2pzX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8yX19bImRlZmF1bHQiXSkoKDAsX2dldFZpZXdwb3J0UmVjdF9qc19fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfM19fWyJkZWZhdWx0Il0pKGVsZW1lbnQsIHN0cmF0ZWd5KSkgOiAoMCxfaW5zdGFuY2VPZl9qc19fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfNF9fLmlzRWxlbWVudCkoY2xpcHBpbmdQYXJlbnQpID8gZ2V0SW5uZXJCb3VuZGluZ0NsaWVudFJlY3QoY2xpcHBpbmdQYXJlbnQsIHN0cmF0ZWd5KSA6ICgwLF91dGlsc19yZWN0VG9DbGllbnRSZWN0X2pzX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8yX19bImRlZmF1bHQiXSkoKDAsX2dldERvY3VtZW50UmVjdF9qc19fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfNV9fWyJkZWZhdWx0Il0pKCgwLF9nZXREb2N1bWVudEVsZW1lbnRfanNfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzZfX1siZGVmYXVsdCJdKShlbGVtZW50KSkpOwp9IC8vIEEgImNsaXBwaW5nIHBhcmVudCIgaXMgYW4gb3ZlcmZsb3dhYmxlIGNvbnRhaW5lciB3aXRoIHRoZSBjaGFyYWN0ZXJpc3RpYyBvZgovLyBjbGlwcGluZyAob3IgaGlkaW5nKSBvdmVyZmxvd2luZyBlbGVtZW50cyB3aXRoIGEgcG9zaXRpb24gZGlmZmVyZW50IGZyb20KLy8gYGluaXRpYWxgCgoKZnVuY3Rpb24gZ2V0Q2xpcHBpbmdQYXJlbnRzKGVsZW1lbnQpIHsKICB2YXIgY2xpcHBpbmdQYXJlbnRzID0gKDAsX2xpc3RTY3JvbGxQYXJlbnRzX2pzX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV83X19bImRlZmF1bHQiXSkoKDAsX2dldFBhcmVudE5vZGVfanNfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzhfX1siZGVmYXVsdCJdKShlbGVtZW50KSk7CiAgdmFyIGNhbkVzY2FwZUNsaXBwaW5nID0gWydhYnNvbHV0ZScsICdmaXhlZCddLmluZGV4T2YoKDAsX2dldENvbXB1dGVkU3R5bGVfanNfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzlfX1siZGVmYXVsdCJdKShlbGVtZW50KS5wb3NpdGlvbikgPj0gMDsKICB2YXIgY2xpcHBlckVsZW1lbnQgPSBjYW5Fc2NhcGVDbGlwcGluZyAmJiAoMCxfaW5zdGFuY2VPZl9qc19fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfNF9fLmlzSFRNTEVsZW1lbnQpKGVsZW1lbnQpID8gKDAsX2dldE9mZnNldFBhcmVudF9qc19fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMTBfX1siZGVmYXVsdCJdKShlbGVtZW50KSA6IGVsZW1lbnQ7CgogIGlmICghKDAsX2luc3RhbmNlT2ZfanNfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzRfXy5pc0VsZW1lbnQpKGNsaXBwZXJFbGVtZW50KSkgewogICAgcmV0dXJuIFtdOwogIH0gLy8gJEZsb3dGaXhNZVtpbmNvbXBhdGlibGUtcmV0dXJuXTogaHR0cHM6Ly9naXRodWIuY29tL2ZhY2Vib29rL2Zsb3cvaXNzdWVzLzE0MTQKCgogIHJldHVybiBjbGlwcGluZ1BhcmVudHMuZmlsdGVyKGZ1bmN0aW9uIChjbGlwcGluZ1BhcmVudCkgewogICAgcmV0dXJuICgwLF9pbnN0YW5jZU9mX2pzX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV80X18uaXNFbGVtZW50KShjbGlwcGluZ1BhcmVudCkgJiYgKDAsX2NvbnRhaW5zX2pzX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8xMV9fWyJkZWZhdWx0Il0pKGNsaXBwaW5nUGFyZW50LCBjbGlwcGVyRWxlbWVudCkgJiYgKDAsX2dldE5vZGVOYW1lX2pzX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8xMl9fWyJkZWZhdWx0Il0pKGNsaXBwaW5nUGFyZW50KSAhPT0gJ2JvZHknOwogIH0pOwp9IC8vIEdldHMgdGhlIG1heGltdW0gYXJlYSB0aGF0IHRoZSBlbGVtZW50IGlzIHZpc2libGUgaW4gZHVlIHRvIGFueSBudW1iZXIgb2YKLy8gY2xpcHBpbmcgcGFyZW50cwoKCmZ1bmN0aW9uIGdldENsaXBwaW5nUmVjdChlbGVtZW50LCBib3VuZGFyeSwgcm9vdEJvdW5kYXJ5LCBzdHJhdGVneSkgewogIHZhciBtYWluQ2xpcHBpbmdQYXJlbnRzID0gYm91bmRhcnkgPT09ICdjbGlwcGluZ1BhcmVudHMnID8gZ2V0Q2xpcHBpbmdQYXJlbnRzKGVsZW1lbnQpIDogW10uY29uY2F0KGJvdW5kYXJ5KTsKICB2YXIgY2xpcHBpbmdQYXJlbnRzID0gW10uY29uY2F0KG1haW5DbGlwcGluZ1BhcmVudHMsIFtyb290Qm91bmRhcnldKTsKICB2YXIgZmlyc3RDbGlwcGluZ1BhcmVudCA9IGNsaXBwaW5nUGFyZW50c1swXTsKICB2YXIgY2xpcHBpbmdSZWN0ID0gY2xpcHBpbmdQYXJlbnRzLnJlZHVjZShmdW5jdGlvbiAoYWNjUmVjdCwgY2xpcHBpbmdQYXJlbnQpIHsKICAgIHZhciByZWN0ID0gZ2V0Q2xpZW50UmVjdEZyb21NaXhlZFR5cGUoZWxlbWVudCwgY2xpcHBpbmdQYXJlbnQsIHN0cmF0ZWd5KTsKICAgIGFjY1JlY3QudG9wID0gKDAsX3V0aWxzX21hdGhfanNfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzEzX18ubWF4KShyZWN0LnRvcCwgYWNjUmVjdC50b3ApOwogICAgYWNjUmVjdC5yaWdodCA9ICgwLF91dGlsc19tYXRoX2pzX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8xM19fLm1pbikocmVjdC5yaWdodCwgYWNjUmVjdC5yaWdodCk7CiAgICBhY2NSZWN0LmJvdHRvbSA9ICgwLF91dGlsc19tYXRoX2pzX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8xM19fLm1pbikocmVjdC5ib3R0b20sIGFjY1JlY3QuYm90dG9tKTsKICAgIGFjY1JlY3QubGVmdCA9ICgwLF91dGlsc19tYXRoX2pzX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8xM19fLm1heCkocmVjdC5sZWZ0LCBhY2NSZWN0LmxlZnQpOwogICAgcmV0dXJuIGFjY1JlY3Q7CiAgfSwgZ2V0Q2xpZW50UmVjdEZyb21NaXhlZFR5cGUoZWxlbWVudCwgZmlyc3RDbGlwcGluZ1BhcmVudCwgc3RyYXRlZ3kpKTsKICBjbGlwcGluZ1JlY3Qud2lkdGggPSBjbGlwcGluZ1JlY3QucmlnaHQgLSBjbGlwcGluZ1JlY3QubGVmdDsKICBjbGlwcGluZ1JlY3QuaGVpZ2h0ID0gY2xpcHBpbmdSZWN0LmJvdHRvbSAtIGNsaXBwaW5nUmVjdC50b3A7CiAgY2xpcHBpbmdSZWN0LnggPSBjbGlwcGluZ1JlY3QubGVmdDsKICBjbGlwcGluZ1JlY3QueSA9IGNsaXBwaW5nUmVjdC50b3A7CiAgcmV0dXJuIGNsaXBwaW5nUmVjdDsKfQoKLyoqKi8gfSksCgovKioqLyAiLi9ub2RlX21vZHVsZXMvQHBvcHBlcmpzL2NvcmUvbGliL2RvbS11dGlscy9nZXRDb21wb3NpdGVSZWN0LmpzIjoKLyohKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiohKlwKICAhKioqIC4vbm9kZV9tb2R1bGVzL0Bwb3BwZXJqcy9jb3JlL2xpYi9kb20tdXRpbHMvZ2V0Q29tcG9zaXRlUmVjdC5qcyAqKiohCiAgXCoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqLwovKioqLyAoZnVuY3Rpb24oX191bnVzZWRfd2VicGFja19tb2R1bGUsIF9fd2VicGFja19leHBvcnRzX18sIF9fd2VicGFja19yZXF1aXJlX18pIHsKCiJ1c2Ugc3RyaWN0IjsKX193ZWJwYWNrX3JlcXVpcmVfXy5yKF9fd2VicGFja19leHBvcnRzX18pOwovKiBoYXJtb255IGV4cG9ydCAqLyBfX3dlYnBhY2tfcmVxdWlyZV9fLmQoX193ZWJwYWNrX2V4cG9ydHNfXywgewovKiBoYXJtb255IGV4cG9ydCAqLyAgICJkZWZhdWx0IjogZnVuY3Rpb24oKSB7IHJldHVybiAvKiBiaW5kaW5nICovIGdldENvbXBvc2l0ZVJlY3Q7IH0KLyogaGFybW9ueSBleHBvcnQgKi8gfSk7Ci8qIGhhcm1vbnkgaW1wb3J0ICovIHZhciBfZ2V0Qm91bmRpbmdDbGllbnRSZWN0X2pzX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8zX18gPSBfX3dlYnBhY2tfcmVxdWlyZV9fKC8qISAuL2dldEJvdW5kaW5nQ2xpZW50UmVjdC5qcyAqLyAiLi9ub2RlX21vZHVsZXMvQHBvcHBlcmpzL2NvcmUvbGliL2RvbS11dGlscy9nZXRCb3VuZGluZ0NsaWVudFJlY3QuanMiKTsKLyogaGFybW9ueSBpbXBvcnQgKi8gdmFyIF9nZXROb2RlU2Nyb2xsX2pzX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV82X18gPSBfX3dlYnBhY2tfcmVxdWlyZV9fKC8qISAuL2dldE5vZGVTY3JvbGwuanMgKi8gIi4vbm9kZV9tb2R1bGVzL0Bwb3BwZXJqcy9jb3JlL2xpYi9kb20tdXRpbHMvZ2V0Tm9kZVNjcm9sbC5qcyIpOwovKiBoYXJtb255IGltcG9ydCAqLyB2YXIgX2dldE5vZGVOYW1lX2pzX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV80X18gPSBfX3dlYnBhY2tfcmVxdWlyZV9fKC8qISAuL2dldE5vZGVOYW1lLmpzICovICIuL25vZGVfbW9kdWxlcy9AcG9wcGVyanMvY29yZS9saWIvZG9tLXV0aWxzL2dldE5vZGVOYW1lLmpzIik7Ci8qIGhhcm1vbnkgaW1wb3J0ICovIHZhciBfaW5zdGFuY2VPZl9qc19fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMV9fID0gX193ZWJwYWNrX3JlcXVpcmVfXygvKiEgLi9pbnN0YW5jZU9mLmpzICovICIuL25vZGVfbW9kdWxlcy9AcG9wcGVyanMvY29yZS9saWIvZG9tLXV0aWxzL2luc3RhbmNlT2YuanMiKTsKLyogaGFybW9ueSBpbXBvcnQgKi8gdmFyIF9nZXRXaW5kb3dTY3JvbGxCYXJYX2pzX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV83X18gPSBfX3dlYnBhY2tfcmVxdWlyZV9fKC8qISAuL2dldFdpbmRvd1Njcm9sbEJhclguanMgKi8gIi4vbm9kZV9tb2R1bGVzL0Bwb3BwZXJqcy9jb3JlL2xpYi9kb20tdXRpbHMvZ2V0V2luZG93U2Nyb2xsQmFyWC5qcyIpOwovKiBoYXJtb255IGltcG9ydCAqLyB2YXIgX2dldERvY3VtZW50RWxlbWVudF9qc19fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMl9fID0gX193ZWJwYWNrX3JlcXVpcmVfXygvKiEgLi9nZXREb2N1bWVudEVsZW1lbnQuanMgKi8gIi4vbm9kZV9tb2R1bGVzL0Bwb3BwZXJqcy9jb3JlL2xpYi9kb20tdXRpbHMvZ2V0RG9jdW1lbnRFbGVtZW50LmpzIik7Ci8qIGhhcm1vbnkgaW1wb3J0ICovIHZhciBfaXNTY3JvbGxQYXJlbnRfanNfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzVfXyA9IF9fd2VicGFja19yZXF1aXJlX18oLyohIC4vaXNTY3JvbGxQYXJlbnQuanMgKi8gIi4vbm9kZV9tb2R1bGVzL0Bwb3BwZXJqcy9jb3JlL2xpYi9kb20tdXRpbHMvaXNTY3JvbGxQYXJlbnQuanMiKTsKLyogaGFybW9ueSBpbXBvcnQgKi8gdmFyIF91dGlsc19tYXRoX2pzX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8wX18gPSBfX3dlYnBhY2tfcmVxdWlyZV9fKC8qISAuLi91dGlscy9tYXRoLmpzICovICIuL25vZGVfbW9kdWxlcy9AcG9wcGVyanMvY29yZS9saWIvdXRpbHMvbWF0aC5qcyIpOwoKCgoKCgoKCgpmdW5jdGlvbiBpc0VsZW1lbnRTY2FsZWQoZWxlbWVudCkgewogIHZhciByZWN0ID0gZWxlbWVudC5nZXRCb3VuZGluZ0NsaWVudFJlY3QoKTsKICB2YXIgc2NhbGVYID0gKDAsX3V0aWxzX21hdGhfanNfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzBfXy5yb3VuZCkocmVjdC53aWR0aCkgLyBlbGVtZW50Lm9mZnNldFdpZHRoIHx8IDE7CiAgdmFyIHNjYWxlWSA9ICgwLF91dGlsc19tYXRoX2pzX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8wX18ucm91bmQpKHJlY3QuaGVpZ2h0KSAvIGVsZW1lbnQub2Zmc2V0SGVpZ2h0IHx8IDE7CiAgcmV0dXJuIHNjYWxlWCAhPT0gMSB8fCBzY2FsZVkgIT09IDE7Cn0gLy8gUmV0dXJucyB0aGUgY29tcG9zaXRlIHJlY3Qgb2YgYW4gZWxlbWVudCByZWxhdGl2ZSB0byBpdHMgb2Zmc2V0UGFyZW50LgovLyBDb21wb3NpdGUgbWVhbnMgaXQgdGFrZXMgaW50byBhY2NvdW50IHRyYW5zZm9ybXMgYXMgd2VsbCBhcyBsYXlvdXQuCgoKZnVuY3Rpb24gZ2V0Q29tcG9zaXRlUmVjdChlbGVtZW50T3JWaXJ0dWFsRWxlbWVudCwgb2Zmc2V0UGFyZW50LCBpc0ZpeGVkKSB7CiAgaWYgKGlzRml4ZWQgPT09IHZvaWQgMCkgewogICAgaXNGaXhlZCA9IGZhbHNlOwogIH0KCiAgdmFyIGlzT2Zmc2V0UGFyZW50QW5FbGVtZW50ID0gKDAsX2luc3RhbmNlT2ZfanNfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzFfXy5pc0hUTUxFbGVtZW50KShvZmZzZXRQYXJlbnQpOwogIHZhciBvZmZzZXRQYXJlbnRJc1NjYWxlZCA9ICgwLF9pbnN0YW5jZU9mX2pzX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8xX18uaXNIVE1MRWxlbWVudCkob2Zmc2V0UGFyZW50KSAmJiBpc0VsZW1lbnRTY2FsZWQob2Zmc2V0UGFyZW50KTsKICB2YXIgZG9jdW1lbnRFbGVtZW50ID0gKDAsX2dldERvY3VtZW50RWxlbWVudF9qc19fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMl9fWyJkZWZhdWx0Il0pKG9mZnNldFBhcmVudCk7CiAgdmFyIHJlY3QgPSAoMCxfZ2V0Qm91bmRpbmdDbGllbnRSZWN0X2pzX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8zX19bImRlZmF1bHQiXSkoZWxlbWVudE9yVmlydHVhbEVsZW1lbnQsIG9mZnNldFBhcmVudElzU2NhbGVkLCBpc0ZpeGVkKTsKICB2YXIgc2Nyb2xsID0gewogICAgc2Nyb2xsTGVmdDogMCwKICAgIHNjcm9sbFRvcDogMAogIH07CiAgdmFyIG9mZnNldHMgPSB7CiAgICB4OiAwLAogICAgeTogMAogIH07CgogIGlmIChpc09mZnNldFBhcmVudEFuRWxlbWVudCB8fCAhaXNPZmZzZXRQYXJlbnRBbkVsZW1lbnQgJiYgIWlzRml4ZWQpIHsKICAgIGlmICgoMCxfZ2V0Tm9kZU5hbWVfanNfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzRfX1siZGVmYXVsdCJdKShvZmZzZXRQYXJlbnQpICE9PSAnYm9keScgfHwgLy8gaHR0cHM6Ly9naXRodWIuY29tL3BvcHBlcmpzL3BvcHBlci1jb3JlL2lzc3Vlcy8xMDc4CiAgICAoMCxfaXNTY3JvbGxQYXJlbnRfanNfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzVfX1siZGVmYXVsdCJdKShkb2N1bWVudEVsZW1lbnQpKSB7CiAgICAgIHNjcm9sbCA9ICgwLF9nZXROb2RlU2Nyb2xsX2pzX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV82X19bImRlZmF1bHQiXSkob2Zmc2V0UGFyZW50KTsKICAgIH0KCiAgICBpZiAoKDAsX2luc3RhbmNlT2ZfanNfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzFfXy5pc0hUTUxFbGVtZW50KShvZmZzZXRQYXJlbnQpKSB7CiAgICAgIG9mZnNldHMgPSAoMCxfZ2V0Qm91bmRpbmdDbGllbnRSZWN0X2pzX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8zX19bImRlZmF1bHQiXSkob2Zmc2V0UGFyZW50LCB0cnVlKTsKICAgICAgb2Zmc2V0cy54ICs9IG9mZnNldFBhcmVudC5jbGllbnRMZWZ0OwogICAgICBvZmZzZXRzLnkgKz0gb2Zmc2V0UGFyZW50LmNsaWVudFRvcDsKICAgIH0gZWxzZSBpZiAoZG9jdW1lbnRFbGVtZW50KSB7CiAgICAgIG9mZnNldHMueCA9ICgwLF9nZXRXaW5kb3dTY3JvbGxCYXJYX2pzX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV83X19bImRlZmF1bHQiXSkoZG9jdW1lbnRFbGVtZW50KTsKICAgIH0KICB9CgogIHJldHVybiB7CiAgICB4OiByZWN0LmxlZnQgKyBzY3JvbGwuc2Nyb2xsTGVmdCAtIG9mZnNldHMueCwKICAgIHk6IHJlY3QudG9wICsgc2Nyb2xsLnNjcm9sbFRvcCAtIG9mZnNldHMueSwKICAgIHdpZHRoOiByZWN0LndpZHRoLAogICAgaGVpZ2h0OiByZWN0LmhlaWdodAogIH07Cn0KCi8qKiovIH0pLAoKLyoqKi8gIi4vbm9kZV9tb2R1bGVzL0Bwb3BwZXJqcy9jb3JlL2xpYi9kb20tdXRpbHMvZ2V0Q29tcHV0ZWRTdHlsZS5qcyI6Ci8qISoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqISpcCiAgISoqKiAuL25vZGVfbW9kdWxlcy9AcG9wcGVyanMvY29yZS9saWIvZG9tLXV0aWxzL2dldENvbXB1dGVkU3R5bGUuanMgKioqIQogIFwqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKi8KLyoqKi8gKGZ1bmN0aW9uKF9fdW51c2VkX3dlYnBhY2tfbW9kdWxlLCBfX3dlYnBhY2tfZXhwb3J0c19fLCBfX3dlYnBhY2tfcmVxdWlyZV9fKSB7CgoidXNlIHN0cmljdCI7Cl9fd2VicGFja19yZXF1aXJlX18ucihfX3dlYnBhY2tfZXhwb3J0c19fKTsKLyogaGFybW9ueSBleHBvcnQgKi8gX193ZWJwYWNrX3JlcXVpcmVfXy5kKF9fd2VicGFja19leHBvcnRzX18sIHsKLyogaGFybW9ueSBleHBvcnQgKi8gICAiZGVmYXVsdCI6IGZ1bmN0aW9uKCkgeyByZXR1cm4gLyogYmluZGluZyAqLyBnZXRDb21wdXRlZFN0eWxlOyB9Ci8qIGhhcm1vbnkgZXhwb3J0ICovIH0pOwovKiBoYXJtb255IGltcG9ydCAqLyB2YXIgX2dldFdpbmRvd19qc19fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMF9fID0gX193ZWJwYWNrX3JlcXVpcmVfXygvKiEgLi9nZXRXaW5kb3cuanMgKi8gIi4vbm9kZV9tb2R1bGVzL0Bwb3BwZXJqcy9jb3JlL2xpYi9kb20tdXRpbHMvZ2V0V2luZG93LmpzIik7CgpmdW5jdGlvbiBnZXRDb21wdXRlZFN0eWxlKGVsZW1lbnQpIHsKICByZXR1cm4gKDAsX2dldFdpbmRvd19qc19fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMF9fWyJkZWZhdWx0Il0pKGVsZW1lbnQpLmdldENvbXB1dGVkU3R5bGUoZWxlbWVudCk7Cn0KCi8qKiovIH0pLAoKLyoqKi8gIi4vbm9kZV9tb2R1bGVzL0Bwb3BwZXJqcy9jb3JlL2xpYi9kb20tdXRpbHMvZ2V0RG9jdW1lbnRFbGVtZW50LmpzIjoKLyohKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiEqXAogICEqKiogLi9ub2RlX21vZHVsZXMvQHBvcHBlcmpzL2NvcmUvbGliL2RvbS11dGlscy9nZXREb2N1bWVudEVsZW1lbnQuanMgKioqIQogIFwqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqLwovKioqLyAoZnVuY3Rpb24oX191bnVzZWRfd2VicGFja19tb2R1bGUsIF9fd2VicGFja19leHBvcnRzX18sIF9fd2VicGFja19yZXF1aXJlX18pIHsKCiJ1c2Ugc3RyaWN0IjsKX193ZWJwYWNrX3JlcXVpcmVfXy5yKF9fd2VicGFja19leHBvcnRzX18pOwovKiBoYXJtb255IGV4cG9ydCAqLyBfX3dlYnBhY2tfcmVxdWlyZV9fLmQoX193ZWJwYWNrX2V4cG9ydHNfXywgewovKiBoYXJtb255IGV4cG9ydCAqLyAgICJkZWZhdWx0IjogZnVuY3Rpb24oKSB7IHJldHVybiAvKiBiaW5kaW5nICovIGdldERvY3VtZW50RWxlbWVudDsgfQovKiBoYXJtb255IGV4cG9ydCAqLyB9KTsKLyogaGFybW9ueSBpbXBvcnQgKi8gdmFyIF9pbnN0YW5jZU9mX2pzX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8wX18gPSBfX3dlYnBhY2tfcmVxdWlyZV9fKC8qISAuL2luc3RhbmNlT2YuanMgKi8gIi4vbm9kZV9tb2R1bGVzL0Bwb3BwZXJqcy9jb3JlL2xpYi9kb20tdXRpbHMvaW5zdGFuY2VPZi5qcyIpOwoKZnVuY3Rpb24gZ2V0RG9jdW1lbnRFbGVtZW50KGVsZW1lbnQpIHsKICAvLyAkRmxvd0ZpeE1lW2luY29tcGF0aWJsZS1yZXR1cm5dOiBhc3N1bWUgYm9keSBpcyBhbHdheXMgYXZhaWxhYmxlCiAgcmV0dXJuICgoKDAsX2luc3RhbmNlT2ZfanNfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzBfXy5pc0VsZW1lbnQpKGVsZW1lbnQpID8gZWxlbWVudC5vd25lckRvY3VtZW50IDogLy8gJEZsb3dGaXhNZVtwcm9wLW1pc3NpbmddCiAgZWxlbWVudC5kb2N1bWVudCkgfHwgd2luZG93LmRvY3VtZW50KS5kb2N1bWVudEVsZW1lbnQ7Cn0KCi8qKiovIH0pLAoKLyoqKi8gIi4vbm9kZV9tb2R1bGVzL0Bwb3BwZXJqcy9jb3JlL2xpYi9kb20tdXRpbHMvZ2V0RG9jdW1lbnRSZWN0LmpzIjoKLyohKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiEqXAogICEqKiogLi9ub2RlX21vZHVsZXMvQHBvcHBlcmpzL2NvcmUvbGliL2RvbS11dGlscy9nZXREb2N1bWVudFJlY3QuanMgKioqIQogIFwqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqLwovKioqLyAoZnVuY3Rpb24oX191bnVzZWRfd2VicGFja19tb2R1bGUsIF9fd2VicGFja19leHBvcnRzX18sIF9fd2VicGFja19yZXF1aXJlX18pIHsKCiJ1c2Ugc3RyaWN0IjsKX193ZWJwYWNrX3JlcXVpcmVfXy5yKF9fd2VicGFja19leHBvcnRzX18pOwovKiBoYXJtb255IGV4cG9ydCAqLyBfX3dlYnBhY2tfcmVxdWlyZV9fLmQoX193ZWJwYWNrX2V4cG9ydHNfXywgewovKiBoYXJtb255IGV4cG9ydCAqLyAgICJkZWZhdWx0IjogZnVuY3Rpb24oKSB7IHJldHVybiAvKiBiaW5kaW5nICovIGdldERvY3VtZW50UmVjdDsgfQovKiBoYXJtb255IGV4cG9ydCAqLyB9KTsKLyogaGFybW9ueSBpbXBvcnQgKi8gdmFyIF9nZXREb2N1bWVudEVsZW1lbnRfanNfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzBfXyA9IF9fd2VicGFja19yZXF1aXJlX18oLyohIC4vZ2V0RG9jdW1lbnRFbGVtZW50LmpzICovICIuL25vZGVfbW9kdWxlcy9AcG9wcGVyanMvY29yZS9saWIvZG9tLXV0aWxzL2dldERvY3VtZW50RWxlbWVudC5qcyIpOwovKiBoYXJtb255IGltcG9ydCAqLyB2YXIgX2dldENvbXB1dGVkU3R5bGVfanNfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzRfXyA9IF9fd2VicGFja19yZXF1aXJlX18oLyohIC4vZ2V0Q29tcHV0ZWRTdHlsZS5qcyAqLyAiLi9ub2RlX21vZHVsZXMvQHBvcHBlcmpzL2NvcmUvbGliL2RvbS11dGlscy9nZXRDb21wdXRlZFN0eWxlLmpzIik7Ci8qIGhhcm1vbnkgaW1wb3J0ICovIHZhciBfZ2V0V2luZG93U2Nyb2xsQmFyWF9qc19fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfM19fID0gX193ZWJwYWNrX3JlcXVpcmVfXygvKiEgLi9nZXRXaW5kb3dTY3JvbGxCYXJYLmpzICovICIuL25vZGVfbW9kdWxlcy9AcG9wcGVyanMvY29yZS9saWIvZG9tLXV0aWxzL2dldFdpbmRvd1Njcm9sbEJhclguanMiKTsKLyogaGFybW9ueSBpbXBvcnQgKi8gdmFyIF9nZXRXaW5kb3dTY3JvbGxfanNfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzFfXyA9IF9fd2VicGFja19yZXF1aXJlX18oLyohIC4vZ2V0V2luZG93U2Nyb2xsLmpzICovICIuL25vZGVfbW9kdWxlcy9AcG9wcGVyanMvY29yZS9saWIvZG9tLXV0aWxzL2dldFdpbmRvd1Njcm9sbC5qcyIpOwovKiBoYXJtb255IGltcG9ydCAqLyB2YXIgX3V0aWxzX21hdGhfanNfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzJfXyA9IF9fd2VicGFja19yZXF1aXJlX18oLyohIC4uL3V0aWxzL21hdGguanMgKi8gIi4vbm9kZV9tb2R1bGVzL0Bwb3BwZXJqcy9jb3JlL2xpYi91dGlscy9tYXRoLmpzIik7CgoKCgogLy8gR2V0cyB0aGUgZW50aXJlIHNpemUgb2YgdGhlIHNjcm9sbGFibGUgZG9jdW1lbnQgYXJlYSwgZXZlbiBleHRlbmRpbmcgb3V0c2lkZQovLyBvZiB0aGUgYDxodG1sPmAgYW5kIGA8Ym9keT5gIHJlY3QgYm91bmRzIGlmIGhvcml6b250YWxseSBzY3JvbGxhYmxlCgpmdW5jdGlvbiBnZXREb2N1bWVudFJlY3QoZWxlbWVudCkgewogIHZhciBfZWxlbWVudCRvd25lckRvY3VtZW47CgogIHZhciBodG1sID0gKDAsX2dldERvY3VtZW50RWxlbWVudF9qc19fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMF9fWyJkZWZhdWx0Il0pKGVsZW1lbnQpOwogIHZhciB3aW5TY3JvbGwgPSAoMCxfZ2V0V2luZG93U2Nyb2xsX2pzX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8xX19bImRlZmF1bHQiXSkoZWxlbWVudCk7CiAgdmFyIGJvZHkgPSAoX2VsZW1lbnQkb3duZXJEb2N1bWVuID0gZWxlbWVudC5vd25lckRvY3VtZW50KSA9PSBudWxsID8gdm9pZCAwIDogX2VsZW1lbnQkb3duZXJEb2N1bWVuLmJvZHk7CiAgdmFyIHdpZHRoID0gKDAsX3V0aWxzX21hdGhfanNfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzJfXy5tYXgpKGh0bWwuc2Nyb2xsV2lkdGgsIGh0bWwuY2xpZW50V2lkdGgsIGJvZHkgPyBib2R5LnNjcm9sbFdpZHRoIDogMCwgYm9keSA/IGJvZHkuY2xpZW50V2lkdGggOiAwKTsKICB2YXIgaGVpZ2h0ID0gKDAsX3V0aWxzX21hdGhfanNfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzJfXy5tYXgpKGh0bWwuc2Nyb2xsSGVpZ2h0LCBodG1sLmNsaWVudEhlaWdodCwgYm9keSA/IGJvZHkuc2Nyb2xsSGVpZ2h0IDogMCwgYm9keSA/IGJvZHkuY2xpZW50SGVpZ2h0IDogMCk7CiAgdmFyIHggPSAtd2luU2Nyb2xsLnNjcm9sbExlZnQgKyAoMCxfZ2V0V2luZG93U2Nyb2xsQmFyWF9qc19fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfM19fWyJkZWZhdWx0Il0pKGVsZW1lbnQpOwogIHZhciB5ID0gLXdpblNjcm9sbC5zY3JvbGxUb3A7CgogIGlmICgoMCxfZ2V0Q29tcHV0ZWRTdHlsZV9qc19fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfNF9fWyJkZWZhdWx0Il0pKGJvZHkgfHwgaHRtbCkuZGlyZWN0aW9uID09PSAncnRsJykgewogICAgeCArPSAoMCxfdXRpbHNfbWF0aF9qc19fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMl9fLm1heCkoaHRtbC5jbGllbnRXaWR0aCwgYm9keSA/IGJvZHkuY2xpZW50V2lkdGggOiAwKSAtIHdpZHRoOwogIH0KCiAgcmV0dXJuIHsKICAgIHdpZHRoOiB3aWR0aCwKICAgIGhlaWdodDogaGVpZ2h0LAogICAgeDogeCwKICAgIHk6IHkKICB9Owp9CgovKioqLyB9KSwKCi8qKiovICIuL25vZGVfbW9kdWxlcy9AcG9wcGVyanMvY29yZS9saWIvZG9tLXV0aWxzL2dldEhUTUxFbGVtZW50U2Nyb2xsLmpzIjoKLyohKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqISpcCiAgISoqKiAuL25vZGVfbW9kdWxlcy9AcG9wcGVyanMvY29yZS9saWIvZG9tLXV0aWxzL2dldEhUTUxFbGVtZW50U2Nyb2xsLmpzICoqKiEKICBcKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqLwovKioqLyAoZnVuY3Rpb24oX191bnVzZWRfd2VicGFja19tb2R1bGUsIF9fd2VicGFja19leHBvcnRzX18sIF9fd2VicGFja19yZXF1aXJlX18pIHsKCiJ1c2Ugc3RyaWN0IjsKX193ZWJwYWNrX3JlcXVpcmVfXy5yKF9fd2VicGFja19leHBvcnRzX18pOwovKiBoYXJtb255IGV4cG9ydCAqLyBfX3dlYnBhY2tfcmVxdWlyZV9fLmQoX193ZWJwYWNrX2V4cG9ydHNfXywgewovKiBoYXJtb255IGV4cG9ydCAqLyAgICJkZWZhdWx0IjogZnVuY3Rpb24oKSB7IHJldHVybiAvKiBiaW5kaW5nICovIGdldEhUTUxFbGVtZW50U2Nyb2xsOyB9Ci8qIGhhcm1vbnkgZXhwb3J0ICovIH0pOwpmdW5jdGlvbiBnZXRIVE1MRWxlbWVudFNjcm9sbChlbGVtZW50KSB7CiAgcmV0dXJuIHsKICAgIHNjcm9sbExlZnQ6IGVsZW1lbnQuc2Nyb2xsTGVmdCwKICAgIHNjcm9sbFRvcDogZWxlbWVudC5zY3JvbGxUb3AKICB9Owp9CgovKioqLyB9KSwKCi8qKiovICIuL25vZGVfbW9kdWxlcy9AcG9wcGVyanMvY29yZS9saWIvZG9tLXV0aWxzL2dldExheW91dFJlY3QuanMiOgovKiEqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiEqXAogICEqKiogLi9ub2RlX21vZHVsZXMvQHBvcHBlcmpzL2NvcmUvbGliL2RvbS11dGlscy9nZXRMYXlvdXRSZWN0LmpzICoqKiEKICBcKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiovCi8qKiovIChmdW5jdGlvbihfX3VudXNlZF93ZWJwYWNrX21vZHVsZSwgX193ZWJwYWNrX2V4cG9ydHNfXywgX193ZWJwYWNrX3JlcXVpcmVfXykgewoKInVzZSBzdHJpY3QiOwpfX3dlYnBhY2tfcmVxdWlyZV9fLnIoX193ZWJwYWNrX2V4cG9ydHNfXyk7Ci8qIGhhcm1vbnkgZXhwb3J0ICovIF9fd2VicGFja19yZXF1aXJlX18uZChfX3dlYnBhY2tfZXhwb3J0c19fLCB7Ci8qIGhhcm1vbnkgZXhwb3J0ICovICAgImRlZmF1bHQiOiBmdW5jdGlvbigpIHsgcmV0dXJuIC8qIGJpbmRpbmcgKi8gZ2V0TGF5b3V0UmVjdDsgfQovKiBoYXJtb255IGV4cG9ydCAqLyB9KTsKLyogaGFybW9ueSBpbXBvcnQgKi8gdmFyIF9nZXRCb3VuZGluZ0NsaWVudFJlY3RfanNfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzBfXyA9IF9fd2VicGFja19yZXF1aXJlX18oLyohIC4vZ2V0Qm91bmRpbmdDbGllbnRSZWN0LmpzICovICIuL25vZGVfbW9kdWxlcy9AcG9wcGVyanMvY29yZS9saWIvZG9tLXV0aWxzL2dldEJvdW5kaW5nQ2xpZW50UmVjdC5qcyIpOwogLy8gUmV0dXJucyB0aGUgbGF5b3V0IHJlY3Qgb2YgYW4gZWxlbWVudCByZWxhdGl2ZSB0byBpdHMgb2Zmc2V0UGFyZW50LiBMYXlvdXQKLy8gbWVhbnMgaXQgZG9lc24ndCB0YWtlIGludG8gYWNjb3VudCB0cmFuc2Zvcm1zLgoKZnVuY3Rpb24gZ2V0TGF5b3V0UmVjdChlbGVtZW50KSB7CiAgdmFyIGNsaWVudFJlY3QgPSAoMCxfZ2V0Qm91bmRpbmdDbGllbnRSZWN0X2pzX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8wX19bImRlZmF1bHQiXSkoZWxlbWVudCk7IC8vIFVzZSB0aGUgY2xpZW50UmVjdCBzaXplcyBpZiBpdCdzIG5vdCBiZWVuIHRyYW5zZm9ybWVkLgogIC8vIEZpeGVzIGh0dHBzOi8vZ2l0aHViLmNvbS9wb3BwZXJqcy9wb3BwZXItY29yZS9pc3N1ZXMvMTIyMwoKICB2YXIgd2lkdGggPSBlbGVtZW50Lm9mZnNldFdpZHRoOwogIHZhciBoZWlnaHQgPSBlbGVtZW50Lm9mZnNldEhlaWdodDsKCiAgaWYgKE1hdGguYWJzKGNsaWVudFJlY3Qud2lkdGggLSB3aWR0aCkgPD0gMSkgewogICAgd2lkdGggPSBjbGllbnRSZWN0LndpZHRoOwogIH0KCiAgaWYgKE1hdGguYWJzKGNsaWVudFJlY3QuaGVpZ2h0IC0gaGVpZ2h0KSA8PSAxKSB7CiAgICBoZWlnaHQgPSBjbGllbnRSZWN0LmhlaWdodDsKICB9CgogIHJldHVybiB7CiAgICB4OiBlbGVtZW50Lm9mZnNldExlZnQsCiAgICB5OiBlbGVtZW50Lm9mZnNldFRvcCwKICAgIHdpZHRoOiB3aWR0aCwKICAgIGhlaWdodDogaGVpZ2h0CiAgfTsKfQoKLyoqKi8gfSksCgovKioqLyAiLi9ub2RlX21vZHVsZXMvQHBvcHBlcmpzL2NvcmUvbGliL2RvbS11dGlscy9nZXROb2RlTmFtZS5qcyI6Ci8qISoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiEqXAogICEqKiogLi9ub2RlX21vZHVsZXMvQHBvcHBlcmpzL2NvcmUvbGliL2RvbS11dGlscy9nZXROb2RlTmFtZS5qcyAqKiohCiAgXCoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKi8KLyoqKi8gKGZ1bmN0aW9uKF9fdW51c2VkX3dlYnBhY2tfbW9kdWxlLCBfX3dlYnBhY2tfZXhwb3J0c19fLCBfX3dlYnBhY2tfcmVxdWlyZV9fKSB7CgoidXNlIHN0cmljdCI7Cl9fd2VicGFja19yZXF1aXJlX18ucihfX3dlYnBhY2tfZXhwb3J0c19fKTsKLyogaGFybW9ueSBleHBvcnQgKi8gX193ZWJwYWNrX3JlcXVpcmVfXy5kKF9fd2VicGFja19leHBvcnRzX18sIHsKLyogaGFybW9ueSBleHBvcnQgKi8gICAiZGVmYXVsdCI6IGZ1bmN0aW9uKCkgeyByZXR1cm4gLyogYmluZGluZyAqLyBnZXROb2RlTmFtZTsgfQovKiBoYXJtb255IGV4cG9ydCAqLyB9KTsKZnVuY3Rpb24gZ2V0Tm9kZU5hbWUoZWxlbWVudCkgewogIHJldHVybiBlbGVtZW50ID8gKGVsZW1lbnQubm9kZU5hbWUgfHwgJycpLnRvTG93ZXJDYXNlKCkgOiBudWxsOwp9CgovKioqLyB9KSwKCi8qKiovICIuL25vZGVfbW9kdWxlcy9AcG9wcGVyanMvY29yZS9saWIvZG9tLXV0aWxzL2dldE5vZGVTY3JvbGwuanMiOgovKiEqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiEqXAogICEqKiogLi9ub2RlX21vZHVsZXMvQHBvcHBlcmpzL2NvcmUvbGliL2RvbS11dGlscy9nZXROb2RlU2Nyb2xsLmpzICoqKiEKICBcKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiovCi8qKiovIChmdW5jdGlvbihfX3VudXNlZF93ZWJwYWNrX21vZHVsZSwgX193ZWJwYWNrX2V4cG9ydHNfXywgX193ZWJwYWNrX3JlcXVpcmVfXykgewoKInVzZSBzdHJpY3QiOwpfX3dlYnBhY2tfcmVxdWlyZV9fLnIoX193ZWJwYWNrX2V4cG9ydHNfXyk7Ci8qIGhhcm1vbnkgZXhwb3J0ICovIF9fd2VicGFja19yZXF1aXJlX18uZChfX3dlYnBhY2tfZXhwb3J0c19fLCB7Ci8qIGhhcm1vbnkgZXhwb3J0ICovICAgImRlZmF1bHQiOiBmdW5jdGlvbigpIHsgcmV0dXJuIC8qIGJpbmRpbmcgKi8gZ2V0Tm9kZVNjcm9sbDsgfQovKiBoYXJtb255IGV4cG9ydCAqLyB9KTsKLyogaGFybW9ueSBpbXBvcnQgKi8gdmFyIF9nZXRXaW5kb3dTY3JvbGxfanNfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzJfXyA9IF9fd2VicGFja19yZXF1aXJlX18oLyohIC4vZ2V0V2luZG93U2Nyb2xsLmpzICovICIuL25vZGVfbW9kdWxlcy9AcG9wcGVyanMvY29yZS9saWIvZG9tLXV0aWxzL2dldFdpbmRvd1Njcm9sbC5qcyIpOwovKiBoYXJtb255IGltcG9ydCAqLyB2YXIgX2dldFdpbmRvd19qc19fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMF9fID0gX193ZWJwYWNrX3JlcXVpcmVfXygvKiEgLi9nZXRXaW5kb3cuanMgKi8gIi4vbm9kZV9tb2R1bGVzL0Bwb3BwZXJqcy9jb3JlL2xpYi9kb20tdXRpbHMvZ2V0V2luZG93LmpzIik7Ci8qIGhhcm1vbnkgaW1wb3J0ICovIHZhciBfaW5zdGFuY2VPZl9qc19fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMV9fID0gX193ZWJwYWNrX3JlcXVpcmVfXygvKiEgLi9pbnN0YW5jZU9mLmpzICovICIuL25vZGVfbW9kdWxlcy9AcG9wcGVyanMvY29yZS9saWIvZG9tLXV0aWxzL2luc3RhbmNlT2YuanMiKTsKLyogaGFybW9ueSBpbXBvcnQgKi8gdmFyIF9nZXRIVE1MRWxlbWVudFNjcm9sbF9qc19fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfM19fID0gX193ZWJwYWNrX3JlcXVpcmVfXygvKiEgLi9nZXRIVE1MRWxlbWVudFNjcm9sbC5qcyAqLyAiLi9ub2RlX21vZHVsZXMvQHBvcHBlcmpzL2NvcmUvbGliL2RvbS11dGlscy9nZXRIVE1MRWxlbWVudFNjcm9sbC5qcyIpOwoKCgoKZnVuY3Rpb24gZ2V0Tm9kZVNjcm9sbChub2RlKSB7CiAgaWYgKG5vZGUgPT09ICgwLF9nZXRXaW5kb3dfanNfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzBfX1siZGVmYXVsdCJdKShub2RlKSB8fCAhKDAsX2luc3RhbmNlT2ZfanNfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzFfXy5pc0hUTUxFbGVtZW50KShub2RlKSkgewogICAgcmV0dXJuICgwLF9nZXRXaW5kb3dTY3JvbGxfanNfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzJfX1siZGVmYXVsdCJdKShub2RlKTsKICB9IGVsc2UgewogICAgcmV0dXJuICgwLF9nZXRIVE1MRWxlbWVudFNjcm9sbF9qc19fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfM19fWyJkZWZhdWx0Il0pKG5vZGUpOwogIH0KfQoKLyoqKi8gfSksCgovKioqLyAiLi9ub2RlX21vZHVsZXMvQHBvcHBlcmpzL2NvcmUvbGliL2RvbS11dGlscy9nZXRPZmZzZXRQYXJlbnQuanMiOgovKiEqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqISpcCiAgISoqKiAuL25vZGVfbW9kdWxlcy9AcG9wcGVyanMvY29yZS9saWIvZG9tLXV0aWxzL2dldE9mZnNldFBhcmVudC5qcyAqKiohCiAgXCoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiovCi8qKiovIChmdW5jdGlvbihfX3VudXNlZF93ZWJwYWNrX21vZHVsZSwgX193ZWJwYWNrX2V4cG9ydHNfXywgX193ZWJwYWNrX3JlcXVpcmVfXykgewoKInVzZSBzdHJpY3QiOwpfX3dlYnBhY2tfcmVxdWlyZV9fLnIoX193ZWJwYWNrX2V4cG9ydHNfXyk7Ci8qIGhhcm1vbnkgZXhwb3J0ICovIF9fd2VicGFja19yZXF1aXJlX18uZChfX3dlYnBhY2tfZXhwb3J0c19fLCB7Ci8qIGhhcm1vbnkgZXhwb3J0ICovICAgImRlZmF1bHQiOiBmdW5jdGlvbigpIHsgcmV0dXJuIC8qIGJpbmRpbmcgKi8gZ2V0T2Zmc2V0UGFyZW50OyB9Ci8qIGhhcm1vbnkgZXhwb3J0ICovIH0pOwovKiBoYXJtb255IGltcG9ydCAqLyB2YXIgX2dldFdpbmRvd19qc19fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfNV9fID0gX193ZWJwYWNrX3JlcXVpcmVfXygvKiEgLi9nZXRXaW5kb3cuanMgKi8gIi4vbm9kZV9tb2R1bGVzL0Bwb3BwZXJqcy9jb3JlL2xpYi9kb20tdXRpbHMvZ2V0V2luZG93LmpzIik7Ci8qIGhhcm1vbnkgaW1wb3J0ICovIHZhciBfZ2V0Tm9kZU5hbWVfanNfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzRfXyA9IF9fd2VicGFja19yZXF1aXJlX18oLyohIC4vZ2V0Tm9kZU5hbWUuanMgKi8gIi4vbm9kZV9tb2R1bGVzL0Bwb3BwZXJqcy9jb3JlL2xpYi9kb20tdXRpbHMvZ2V0Tm9kZU5hbWUuanMiKTsKLyogaGFybW9ueSBpbXBvcnQgKi8gdmFyIF9nZXRDb21wdXRlZFN0eWxlX2pzX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8xX18gPSBfX3dlYnBhY2tfcmVxdWlyZV9fKC8qISAuL2dldENvbXB1dGVkU3R5bGUuanMgKi8gIi4vbm9kZV9tb2R1bGVzL0Bwb3BwZXJqcy9jb3JlL2xpYi9kb20tdXRpbHMvZ2V0Q29tcHV0ZWRTdHlsZS5qcyIpOwovKiBoYXJtb255IGltcG9ydCAqLyB2YXIgX2luc3RhbmNlT2ZfanNfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzBfXyA9IF9fd2VicGFja19yZXF1aXJlX18oLyohIC4vaW5zdGFuY2VPZi5qcyAqLyAiLi9ub2RlX21vZHVsZXMvQHBvcHBlcmpzL2NvcmUvbGliL2RvbS11dGlscy9pbnN0YW5jZU9mLmpzIik7Ci8qIGhhcm1vbnkgaW1wb3J0ICovIHZhciBfaXNUYWJsZUVsZW1lbnRfanNfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzZfXyA9IF9fd2VicGFja19yZXF1aXJlX18oLyohIC4vaXNUYWJsZUVsZW1lbnQuanMgKi8gIi4vbm9kZV9tb2R1bGVzL0Bwb3BwZXJqcy9jb3JlL2xpYi9kb20tdXRpbHMvaXNUYWJsZUVsZW1lbnQuanMiKTsKLyogaGFybW9ueSBpbXBvcnQgKi8gdmFyIF9nZXRQYXJlbnROb2RlX2pzX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8zX18gPSBfX3dlYnBhY2tfcmVxdWlyZV9fKC8qISAuL2dldFBhcmVudE5vZGUuanMgKi8gIi4vbm9kZV9tb2R1bGVzL0Bwb3BwZXJqcy9jb3JlL2xpYi9kb20tdXRpbHMvZ2V0UGFyZW50Tm9kZS5qcyIpOwovKiBoYXJtb255IGltcG9ydCAqLyB2YXIgX3V0aWxzX3VzZXJBZ2VudF9qc19fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMl9fID0gX193ZWJwYWNrX3JlcXVpcmVfXygvKiEgLi4vdXRpbHMvdXNlckFnZW50LmpzICovICIuL25vZGVfbW9kdWxlcy9AcG9wcGVyanMvY29yZS9saWIvdXRpbHMvdXNlckFnZW50LmpzIik7CgoKCgoKCgoKZnVuY3Rpb24gZ2V0VHJ1ZU9mZnNldFBhcmVudChlbGVtZW50KSB7CiAgaWYgKCEoMCxfaW5zdGFuY2VPZl9qc19fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMF9fLmlzSFRNTEVsZW1lbnQpKGVsZW1lbnQpIHx8IC8vIGh0dHBzOi8vZ2l0aHViLmNvbS9wb3BwZXJqcy9wb3BwZXItY29yZS9pc3N1ZXMvODM3CiAgKDAsX2dldENvbXB1dGVkU3R5bGVfanNfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzFfX1siZGVmYXVsdCJdKShlbGVtZW50KS5wb3NpdGlvbiA9PT0gJ2ZpeGVkJykgewogICAgcmV0dXJuIG51bGw7CiAgfQoKICByZXR1cm4gZWxlbWVudC5vZmZzZXRQYXJlbnQ7Cn0gLy8gYC5vZmZzZXRQYXJlbnRgIHJlcG9ydHMgYG51bGxgIGZvciBmaXhlZCBlbGVtZW50cywgd2hpbGUgYWJzb2x1dGUgZWxlbWVudHMKLy8gcmV0dXJuIHRoZSBjb250YWluaW5nIGJsb2NrCgoKZnVuY3Rpb24gZ2V0Q29udGFpbmluZ0Jsb2NrKGVsZW1lbnQpIHsKICB2YXIgaXNGaXJlZm94ID0gL2ZpcmVmb3gvaS50ZXN0KCgwLF91dGlsc191c2VyQWdlbnRfanNfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzJfX1siZGVmYXVsdCJdKSgpKTsKICB2YXIgaXNJRSA9IC9UcmlkZW50L2kudGVzdCgoMCxfdXRpbHNfdXNlckFnZW50X2pzX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8yX19bImRlZmF1bHQiXSkoKSk7CgogIGlmIChpc0lFICYmICgwLF9pbnN0YW5jZU9mX2pzX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8wX18uaXNIVE1MRWxlbWVudCkoZWxlbWVudCkpIHsKICAgIC8vIEluIElFIDksIDEwIGFuZCAxMSBmaXhlZCBlbGVtZW50cyBjb250YWluaW5nIGJsb2NrIGlzIGFsd2F5cyBlc3RhYmxpc2hlZCBieSB0aGUgdmlld3BvcnQKICAgIHZhciBlbGVtZW50Q3NzID0gKDAsX2dldENvbXB1dGVkU3R5bGVfanNfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzFfX1siZGVmYXVsdCJdKShlbGVtZW50KTsKCiAgICBpZiAoZWxlbWVudENzcy5wb3NpdGlvbiA9PT0gJ2ZpeGVkJykgewogICAgICByZXR1cm4gbnVsbDsKICAgIH0KICB9CgogIHZhciBjdXJyZW50Tm9kZSA9ICgwLF9nZXRQYXJlbnROb2RlX2pzX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8zX19bImRlZmF1bHQiXSkoZWxlbWVudCk7CgogIGlmICgoMCxfaW5zdGFuY2VPZl9qc19fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMF9fLmlzU2hhZG93Um9vdCkoY3VycmVudE5vZGUpKSB7CiAgICBjdXJyZW50Tm9kZSA9IGN1cnJlbnROb2RlLmhvc3Q7CiAgfQoKICB3aGlsZSAoKDAsX2luc3RhbmNlT2ZfanNfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzBfXy5pc0hUTUxFbGVtZW50KShjdXJyZW50Tm9kZSkgJiYgWydodG1sJywgJ2JvZHknXS5pbmRleE9mKCgwLF9nZXROb2RlTmFtZV9qc19fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfNF9fWyJkZWZhdWx0Il0pKGN1cnJlbnROb2RlKSkgPCAwKSB7CiAgICB2YXIgY3NzID0gKDAsX2dldENvbXB1dGVkU3R5bGVfanNfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzFfX1siZGVmYXVsdCJdKShjdXJyZW50Tm9kZSk7IC8vIFRoaXMgaXMgbm9uLWV4aGF1c3RpdmUgYnV0IGNvdmVycyB0aGUgbW9zdCBjb21tb24gQ1NTIHByb3BlcnRpZXMgdGhhdAogICAgLy8gY3JlYXRlIGEgY29udGFpbmluZyBibG9jay4KICAgIC8vIGh0dHBzOi8vZGV2ZWxvcGVyLm1vemlsbGEub3JnL2VuLVVTL2RvY3MvV2ViL0NTUy9Db250YWluaW5nX2Jsb2NrI2lkZW50aWZ5aW5nX3RoZV9jb250YWluaW5nX2Jsb2NrCgogICAgaWYgKGNzcy50cmFuc2Zvcm0gIT09ICdub25lJyB8fCBjc3MucGVyc3BlY3RpdmUgIT09ICdub25lJyB8fCBjc3MuY29udGFpbiA9PT0gJ3BhaW50JyB8fCBbJ3RyYW5zZm9ybScsICdwZXJzcGVjdGl2ZSddLmluZGV4T2YoY3NzLndpbGxDaGFuZ2UpICE9PSAtMSB8fCBpc0ZpcmVmb3ggJiYgY3NzLndpbGxDaGFuZ2UgPT09ICdmaWx0ZXInIHx8IGlzRmlyZWZveCAmJiBjc3MuZmlsdGVyICYmIGNzcy5maWx0ZXIgIT09ICdub25lJykgewogICAgICByZXR1cm4gY3VycmVudE5vZGU7CiAgICB9IGVsc2UgewogICAgICBjdXJyZW50Tm9kZSA9IGN1cnJlbnROb2RlLnBhcmVudE5vZGU7CiAgICB9CiAgfQoKICByZXR1cm4gbnVsbDsKfSAvLyBHZXRzIHRoZSBjbG9zZXN0IGFuY2VzdG9yIHBvc2l0aW9uZWQgZWxlbWVudC4gSGFuZGxlcyBzb21lIGVkZ2UgY2FzZXMsCi8vIHN1Y2ggYXMgdGFibGUgYW5jZXN0b3JzIGFuZCBjcm9zcyBicm93c2VyIGJ1Z3MuCgoKZnVuY3Rpb24gZ2V0T2Zmc2V0UGFyZW50KGVsZW1lbnQpIHsKICB2YXIgd2luZG93ID0gKDAsX2dldFdpbmRvd19qc19fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfNV9fWyJkZWZhdWx0Il0pKGVsZW1lbnQpOwogIHZhciBvZmZzZXRQYXJlbnQgPSBnZXRUcnVlT2Zmc2V0UGFyZW50KGVsZW1lbnQpOwoKICB3aGlsZSAob2Zmc2V0UGFyZW50ICYmICgwLF9pc1RhYmxlRWxlbWVudF9qc19fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfNl9fWyJkZWZhdWx0Il0pKG9mZnNldFBhcmVudCkgJiYgKDAsX2dldENvbXB1dGVkU3R5bGVfanNfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzFfX1siZGVmYXVsdCJdKShvZmZzZXRQYXJlbnQpLnBvc2l0aW9uID09PSAnc3RhdGljJykgewogICAgb2Zmc2V0UGFyZW50ID0gZ2V0VHJ1ZU9mZnNldFBhcmVudChvZmZzZXRQYXJlbnQpOwogIH0KCiAgaWYgKG9mZnNldFBhcmVudCAmJiAoKDAsX2dldE5vZGVOYW1lX2pzX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV80X19bImRlZmF1bHQiXSkob2Zmc2V0UGFyZW50KSA9PT0gJ2h0bWwnIHx8ICgwLF9nZXROb2RlTmFtZV9qc19fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfNF9fWyJkZWZhdWx0Il0pKG9mZnNldFBhcmVudCkgPT09ICdib2R5JyAmJiAoMCxfZ2V0Q29tcHV0ZWRTdHlsZV9qc19fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMV9fWyJkZWZhdWx0Il0pKG9mZnNldFBhcmVudCkucG9zaXRpb24gPT09ICdzdGF0aWMnKSkgewogICAgcmV0dXJuIHdpbmRvdzsKICB9CgogIHJldHVybiBvZmZzZXRQYXJlbnQgfHwgZ2V0Q29udGFpbmluZ0Jsb2NrKGVsZW1lbnQpIHx8IHdpbmRvdzsKfQoKLyoqKi8gfSksCgovKioqLyAiLi9ub2RlX21vZHVsZXMvQHBvcHBlcmpzL2NvcmUvbGliL2RvbS11dGlscy9nZXRQYXJlbnROb2RlLmpzIjoKLyohKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiohKlwKICAhKioqIC4vbm9kZV9tb2R1bGVzL0Bwb3BwZXJqcy9jb3JlL2xpYi9kb20tdXRpbHMvZ2V0UGFyZW50Tm9kZS5qcyAqKiohCiAgXCoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqLwovKioqLyAoZnVuY3Rpb24oX191bnVzZWRfd2VicGFja19tb2R1bGUsIF9fd2VicGFja19leHBvcnRzX18sIF9fd2VicGFja19yZXF1aXJlX18pIHsKCiJ1c2Ugc3RyaWN0IjsKX193ZWJwYWNrX3JlcXVpcmVfXy5yKF9fd2VicGFja19leHBvcnRzX18pOwovKiBoYXJtb255IGV4cG9ydCAqLyBfX3dlYnBhY2tfcmVxdWlyZV9fLmQoX193ZWJwYWNrX2V4cG9ydHNfXywgewovKiBoYXJtb255IGV4cG9ydCAqLyAgICJkZWZhdWx0IjogZnVuY3Rpb24oKSB7IHJldHVybiAvKiBiaW5kaW5nICovIGdldFBhcmVudE5vZGU7IH0KLyogaGFybW9ueSBleHBvcnQgKi8gfSk7Ci8qIGhhcm1vbnkgaW1wb3J0ICovIHZhciBfZ2V0Tm9kZU5hbWVfanNfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzBfXyA9IF9fd2VicGFja19yZXF1aXJlX18oLyohIC4vZ2V0Tm9kZU5hbWUuanMgKi8gIi4vbm9kZV9tb2R1bGVzL0Bwb3BwZXJqcy9jb3JlL2xpYi9kb20tdXRpbHMvZ2V0Tm9kZU5hbWUuanMiKTsKLyogaGFybW9ueSBpbXBvcnQgKi8gdmFyIF9nZXREb2N1bWVudEVsZW1lbnRfanNfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzJfXyA9IF9fd2VicGFja19yZXF1aXJlX18oLyohIC4vZ2V0RG9jdW1lbnRFbGVtZW50LmpzICovICIuL25vZGVfbW9kdWxlcy9AcG9wcGVyanMvY29yZS9saWIvZG9tLXV0aWxzL2dldERvY3VtZW50RWxlbWVudC5qcyIpOwovKiBoYXJtb255IGltcG9ydCAqLyB2YXIgX2luc3RhbmNlT2ZfanNfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzFfXyA9IF9fd2VicGFja19yZXF1aXJlX18oLyohIC4vaW5zdGFuY2VPZi5qcyAqLyAiLi9ub2RlX21vZHVsZXMvQHBvcHBlcmpzL2NvcmUvbGliL2RvbS11dGlscy9pbnN0YW5jZU9mLmpzIik7CgoKCmZ1bmN0aW9uIGdldFBhcmVudE5vZGUoZWxlbWVudCkgewogIGlmICgoMCxfZ2V0Tm9kZU5hbWVfanNfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzBfX1siZGVmYXVsdCJdKShlbGVtZW50KSA9PT0gJ2h0bWwnKSB7CiAgICByZXR1cm4gZWxlbWVudDsKICB9CgogIHJldHVybiAoLy8gdGhpcyBpcyBhIHF1aWNrZXIgKGJ1dCBsZXNzIHR5cGUgc2FmZSkgd2F5IHRvIHNhdmUgcXVpdGUgc29tZSBieXRlcyBmcm9tIHRoZSBidW5kbGUKICAgIC8vICRGbG93Rml4TWVbaW5jb21wYXRpYmxlLXJldHVybl0KICAgIC8vICRGbG93Rml4TWVbcHJvcC1taXNzaW5nXQogICAgZWxlbWVudC5hc3NpZ25lZFNsb3QgfHwgLy8gc3RlcCBpbnRvIHRoZSBzaGFkb3cgRE9NIG9mIHRoZSBwYXJlbnQgb2YgYSBzbG90dGVkIG5vZGUKICAgIGVsZW1lbnQucGFyZW50Tm9kZSB8fCAoIC8vIERPTSBFbGVtZW50IGRldGVjdGVkCiAgICAoMCxfaW5zdGFuY2VPZl9qc19fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMV9fLmlzU2hhZG93Um9vdCkoZWxlbWVudCkgPyBlbGVtZW50Lmhvc3QgOiBudWxsKSB8fCAvLyBTaGFkb3dSb290IGRldGVjdGVkCiAgICAvLyAkRmxvd0ZpeE1lW2luY29tcGF0aWJsZS1jYWxsXTogSFRNTEVsZW1lbnQgaXMgYSBOb2RlCiAgICAoMCxfZ2V0RG9jdW1lbnRFbGVtZW50X2pzX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8yX19bImRlZmF1bHQiXSkoZWxlbWVudCkgLy8gZmFsbGJhY2sKCiAgKTsKfQoKLyoqKi8gfSksCgovKioqLyAiLi9ub2RlX21vZHVsZXMvQHBvcHBlcmpzL2NvcmUvbGliL2RvbS11dGlscy9nZXRTY3JvbGxQYXJlbnQuanMiOgovKiEqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqISpcCiAgISoqKiAuL25vZGVfbW9kdWxlcy9AcG9wcGVyanMvY29yZS9saWIvZG9tLXV0aWxzL2dldFNjcm9sbFBhcmVudC5qcyAqKiohCiAgXCoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiovCi8qKiovIChmdW5jdGlvbihfX3VudXNlZF93ZWJwYWNrX21vZHVsZSwgX193ZWJwYWNrX2V4cG9ydHNfXywgX193ZWJwYWNrX3JlcXVpcmVfXykgewoKInVzZSBzdHJpY3QiOwpfX3dlYnBhY2tfcmVxdWlyZV9fLnIoX193ZWJwYWNrX2V4cG9ydHNfXyk7Ci8qIGhhcm1vbnkgZXhwb3J0ICovIF9fd2VicGFja19yZXF1aXJlX18uZChfX3dlYnBhY2tfZXhwb3J0c19fLCB7Ci8qIGhhcm1vbnkgZXhwb3J0ICovICAgImRlZmF1bHQiOiBmdW5jdGlvbigpIHsgcmV0dXJuIC8qIGJpbmRpbmcgKi8gZ2V0U2Nyb2xsUGFyZW50OyB9Ci8qIGhhcm1vbnkgZXhwb3J0ICovIH0pOwovKiBoYXJtb255IGltcG9ydCAqLyB2YXIgX2dldFBhcmVudE5vZGVfanNfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzNfXyA9IF9fd2VicGFja19yZXF1aXJlX18oLyohIC4vZ2V0UGFyZW50Tm9kZS5qcyAqLyAiLi9ub2RlX21vZHVsZXMvQHBvcHBlcmpzL2NvcmUvbGliL2RvbS11dGlscy9nZXRQYXJlbnROb2RlLmpzIik7Ci8qIGhhcm1vbnkgaW1wb3J0ICovIHZhciBfaXNTY3JvbGxQYXJlbnRfanNfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzJfXyA9IF9fd2VicGFja19yZXF1aXJlX18oLyohIC4vaXNTY3JvbGxQYXJlbnQuanMgKi8gIi4vbm9kZV9tb2R1bGVzL0Bwb3BwZXJqcy9jb3JlL2xpYi9kb20tdXRpbHMvaXNTY3JvbGxQYXJlbnQuanMiKTsKLyogaGFybW9ueSBpbXBvcnQgKi8gdmFyIF9nZXROb2RlTmFtZV9qc19fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMF9fID0gX193ZWJwYWNrX3JlcXVpcmVfXygvKiEgLi9nZXROb2RlTmFtZS5qcyAqLyAiLi9ub2RlX21vZHVsZXMvQHBvcHBlcmpzL2NvcmUvbGliL2RvbS11dGlscy9nZXROb2RlTmFtZS5qcyIpOwovKiBoYXJtb255IGltcG9ydCAqLyB2YXIgX2luc3RhbmNlT2ZfanNfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzFfXyA9IF9fd2VicGFja19yZXF1aXJlX18oLyohIC4vaW5zdGFuY2VPZi5qcyAqLyAiLi9ub2RlX21vZHVsZXMvQHBvcHBlcmpzL2NvcmUvbGliL2RvbS11dGlscy9pbnN0YW5jZU9mLmpzIik7CgoKCgpmdW5jdGlvbiBnZXRTY3JvbGxQYXJlbnQobm9kZSkgewogIGlmIChbJ2h0bWwnLCAnYm9keScsICcjZG9jdW1lbnQnXS5pbmRleE9mKCgwLF9nZXROb2RlTmFtZV9qc19fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMF9fWyJkZWZhdWx0Il0pKG5vZGUpKSA+PSAwKSB7CiAgICAvLyAkRmxvd0ZpeE1lW2luY29tcGF0aWJsZS1yZXR1cm5dOiBhc3N1bWUgYm9keSBpcyBhbHdheXMgYXZhaWxhYmxlCiAgICByZXR1cm4gbm9kZS5vd25lckRvY3VtZW50LmJvZHk7CiAgfQoKICBpZiAoKDAsX2luc3RhbmNlT2ZfanNfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzFfXy5pc0hUTUxFbGVtZW50KShub2RlKSAmJiAoMCxfaXNTY3JvbGxQYXJlbnRfanNfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzJfX1siZGVmYXVsdCJdKShub2RlKSkgewogICAgcmV0dXJuIG5vZGU7CiAgfQoKICByZXR1cm4gZ2V0U2Nyb2xsUGFyZW50KCgwLF9nZXRQYXJlbnROb2RlX2pzX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8zX19bImRlZmF1bHQiXSkobm9kZSkpOwp9CgovKioqLyB9KSwKCi8qKiovICIuL25vZGVfbW9kdWxlcy9AcG9wcGVyanMvY29yZS9saWIvZG9tLXV0aWxzL2dldFZpZXdwb3J0UmVjdC5qcyI6Ci8qISoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiohKlwKICAhKioqIC4vbm9kZV9tb2R1bGVzL0Bwb3BwZXJqcy9jb3JlL2xpYi9kb20tdXRpbHMvZ2V0Vmlld3BvcnRSZWN0LmpzICoqKiEKICBcKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKi8KLyoqKi8gKGZ1bmN0aW9uKF9fdW51c2VkX3dlYnBhY2tfbW9kdWxlLCBfX3dlYnBhY2tfZXhwb3J0c19fLCBfX3dlYnBhY2tfcmVxdWlyZV9fKSB7CgoidXNlIHN0cmljdCI7Cl9fd2VicGFja19yZXF1aXJlX18ucihfX3dlYnBhY2tfZXhwb3J0c19fKTsKLyogaGFybW9ueSBleHBvcnQgKi8gX193ZWJwYWNrX3JlcXVpcmVfXy5kKF9fd2VicGFja19leHBvcnRzX18sIHsKLyogaGFybW9ueSBleHBvcnQgKi8gICAiZGVmYXVsdCI6IGZ1bmN0aW9uKCkgeyByZXR1cm4gLyogYmluZGluZyAqLyBnZXRWaWV3cG9ydFJlY3Q7IH0KLyogaGFybW9ueSBleHBvcnQgKi8gfSk7Ci8qIGhhcm1vbnkgaW1wb3J0ICovIHZhciBfZ2V0V2luZG93X2pzX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8wX18gPSBfX3dlYnBhY2tfcmVxdWlyZV9fKC8qISAuL2dldFdpbmRvdy5qcyAqLyAiLi9ub2RlX21vZHVsZXMvQHBvcHBlcmpzL2NvcmUvbGliL2RvbS11dGlscy9nZXRXaW5kb3cuanMiKTsKLyogaGFybW9ueSBpbXBvcnQgKi8gdmFyIF9nZXREb2N1bWVudEVsZW1lbnRfanNfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzFfXyA9IF9fd2VicGFja19yZXF1aXJlX18oLyohIC4vZ2V0RG9jdW1lbnRFbGVtZW50LmpzICovICIuL25vZGVfbW9kdWxlcy9AcG9wcGVyanMvY29yZS9saWIvZG9tLXV0aWxzL2dldERvY3VtZW50RWxlbWVudC5qcyIpOwovKiBoYXJtb255IGltcG9ydCAqLyB2YXIgX2dldFdpbmRvd1Njcm9sbEJhclhfanNfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzNfXyA9IF9fd2VicGFja19yZXF1aXJlX18oLyohIC4vZ2V0V2luZG93U2Nyb2xsQmFyWC5qcyAqLyAiLi9ub2RlX21vZHVsZXMvQHBvcHBlcmpzL2NvcmUvbGliL2RvbS11dGlscy9nZXRXaW5kb3dTY3JvbGxCYXJYLmpzIik7Ci8qIGhhcm1vbnkgaW1wb3J0ICovIHZhciBfaXNMYXlvdXRWaWV3cG9ydF9qc19fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMl9fID0gX193ZWJwYWNrX3JlcXVpcmVfXygvKiEgLi9pc0xheW91dFZpZXdwb3J0LmpzICovICIuL25vZGVfbW9kdWxlcy9AcG9wcGVyanMvY29yZS9saWIvZG9tLXV0aWxzL2lzTGF5b3V0Vmlld3BvcnQuanMiKTsKCgoKCmZ1bmN0aW9uIGdldFZpZXdwb3J0UmVjdChlbGVtZW50LCBzdHJhdGVneSkgewogIHZhciB3aW4gPSAoMCxfZ2V0V2luZG93X2pzX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8wX19bImRlZmF1bHQiXSkoZWxlbWVudCk7CiAgdmFyIGh0bWwgPSAoMCxfZ2V0RG9jdW1lbnRFbGVtZW50X2pzX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8xX19bImRlZmF1bHQiXSkoZWxlbWVudCk7CiAgdmFyIHZpc3VhbFZpZXdwb3J0ID0gd2luLnZpc3VhbFZpZXdwb3J0OwogIHZhciB3aWR0aCA9IGh0bWwuY2xpZW50V2lkdGg7CiAgdmFyIGhlaWdodCA9IGh0bWwuY2xpZW50SGVpZ2h0OwogIHZhciB4ID0gMDsKICB2YXIgeSA9IDA7CgogIGlmICh2aXN1YWxWaWV3cG9ydCkgewogICAgd2lkdGggPSB2aXN1YWxWaWV3cG9ydC53aWR0aDsKICAgIGhlaWdodCA9IHZpc3VhbFZpZXdwb3J0LmhlaWdodDsKICAgIHZhciBsYXlvdXRWaWV3cG9ydCA9ICgwLF9pc0xheW91dFZpZXdwb3J0X2pzX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8yX19bImRlZmF1bHQiXSkoKTsKCiAgICBpZiAobGF5b3V0Vmlld3BvcnQgfHwgIWxheW91dFZpZXdwb3J0ICYmIHN0cmF0ZWd5ID09PSAnZml4ZWQnKSB7CiAgICAgIHggPSB2aXN1YWxWaWV3cG9ydC5vZmZzZXRMZWZ0OwogICAgICB5ID0gdmlzdWFsVmlld3BvcnQub2Zmc2V0VG9wOwogICAgfQogIH0KCiAgcmV0dXJuIHsKICAgIHdpZHRoOiB3aWR0aCwKICAgIGhlaWdodDogaGVpZ2h0LAogICAgeDogeCArICgwLF9nZXRXaW5kb3dTY3JvbGxCYXJYX2pzX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8zX19bImRlZmF1bHQiXSkoZWxlbWVudCksCiAgICB5OiB5CiAgfTsKfQoKLyoqKi8gfSksCgovKioqLyAiLi9ub2RlX21vZHVsZXMvQHBvcHBlcmpzL2NvcmUvbGliL2RvbS11dGlscy9nZXRXaW5kb3cuanMiOgovKiEqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqISpcCiAgISoqKiAuL25vZGVfbW9kdWxlcy9AcG9wcGVyanMvY29yZS9saWIvZG9tLXV0aWxzL2dldFdpbmRvdy5qcyAqKiohCiAgXCoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiovCi8qKiovIChmdW5jdGlvbihfX3VudXNlZF93ZWJwYWNrX21vZHVsZSwgX193ZWJwYWNrX2V4cG9ydHNfXywgX193ZWJwYWNrX3JlcXVpcmVfXykgewoKInVzZSBzdHJpY3QiOwpfX3dlYnBhY2tfcmVxdWlyZV9fLnIoX193ZWJwYWNrX2V4cG9ydHNfXyk7Ci8qIGhhcm1vbnkgZXhwb3J0ICovIF9fd2VicGFja19yZXF1aXJlX18uZChfX3dlYnBhY2tfZXhwb3J0c19fLCB7Ci8qIGhhcm1vbnkgZXhwb3J0ICovICAgImRlZmF1bHQiOiBmdW5jdGlvbigpIHsgcmV0dXJuIC8qIGJpbmRpbmcgKi8gZ2V0V2luZG93OyB9Ci8qIGhhcm1vbnkgZXhwb3J0ICovIH0pOwpmdW5jdGlvbiBnZXRXaW5kb3cobm9kZSkgewogIGlmIChub2RlID09IG51bGwpIHsKICAgIHJldHVybiB3aW5kb3c7CiAgfQoKICBpZiAobm9kZS50b1N0cmluZygpICE9PSAnW29iamVjdCBXaW5kb3ddJykgewogICAgdmFyIG93bmVyRG9jdW1lbnQgPSBub2RlLm93bmVyRG9jdW1lbnQ7CiAgICByZXR1cm4gb3duZXJEb2N1bWVudCA/IG93bmVyRG9jdW1lbnQuZGVmYXVsdFZpZXcgfHwgd2luZG93IDogd2luZG93OwogIH0KCiAgcmV0dXJuIG5vZGU7Cn0KCi8qKiovIH0pLAoKLyoqKi8gIi4vbm9kZV9tb2R1bGVzL0Bwb3BwZXJqcy9jb3JlL2xpYi9kb20tdXRpbHMvZ2V0V2luZG93U2Nyb2xsLmpzIjoKLyohKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiEqXAogICEqKiogLi9ub2RlX21vZHVsZXMvQHBvcHBlcmpzL2NvcmUvbGliL2RvbS11dGlscy9nZXRXaW5kb3dTY3JvbGwuanMgKioqIQogIFwqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqLwovKioqLyAoZnVuY3Rpb24oX191bnVzZWRfd2VicGFja19tb2R1bGUsIF9fd2VicGFja19leHBvcnRzX18sIF9fd2VicGFja19yZXF1aXJlX18pIHsKCiJ1c2Ugc3RyaWN0IjsKX193ZWJwYWNrX3JlcXVpcmVfXy5yKF9fd2VicGFja19leHBvcnRzX18pOwovKiBoYXJtb255IGV4cG9ydCAqLyBfX3dlYnBhY2tfcmVxdWlyZV9fLmQoX193ZWJwYWNrX2V4cG9ydHNfXywgewovKiBoYXJtb255IGV4cG9ydCAqLyAgICJkZWZhdWx0IjogZnVuY3Rpb24oKSB7IHJldHVybiAvKiBiaW5kaW5nICovIGdldFdpbmRvd1Njcm9sbDsgfQovKiBoYXJtb255IGV4cG9ydCAqLyB9KTsKLyogaGFybW9ueSBpbXBvcnQgKi8gdmFyIF9nZXRXaW5kb3dfanNfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzBfXyA9IF9fd2VicGFja19yZXF1aXJlX18oLyohIC4vZ2V0V2luZG93LmpzICovICIuL25vZGVfbW9kdWxlcy9AcG9wcGVyanMvY29yZS9saWIvZG9tLXV0aWxzL2dldFdpbmRvdy5qcyIpOwoKZnVuY3Rpb24gZ2V0V2luZG93U2Nyb2xsKG5vZGUpIHsKICB2YXIgd2luID0gKDAsX2dldFdpbmRvd19qc19fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMF9fWyJkZWZhdWx0Il0pKG5vZGUpOwogIHZhciBzY3JvbGxMZWZ0ID0gd2luLnBhZ2VYT2Zmc2V0OwogIHZhciBzY3JvbGxUb3AgPSB3aW4ucGFnZVlPZmZzZXQ7CiAgcmV0dXJuIHsKICAgIHNjcm9sbExlZnQ6IHNjcm9sbExlZnQsCiAgICBzY3JvbGxUb3A6IHNjcm9sbFRvcAogIH07Cn0KCi8qKiovIH0pLAoKLyoqKi8gIi4vbm9kZV9tb2R1bGVzL0Bwb3BwZXJqcy9jb3JlL2xpYi9kb20tdXRpbHMvZ2V0V2luZG93U2Nyb2xsQmFyWC5qcyI6Ci8qISoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqISpcCiAgISoqKiAuL25vZGVfbW9kdWxlcy9AcG9wcGVyanMvY29yZS9saWIvZG9tLXV0aWxzL2dldFdpbmRvd1Njcm9sbEJhclguanMgKioqIQogIFwqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKi8KLyoqKi8gKGZ1bmN0aW9uKF9fdW51c2VkX3dlYnBhY2tfbW9kdWxlLCBfX3dlYnBhY2tfZXhwb3J0c19fLCBfX3dlYnBhY2tfcmVxdWlyZV9fKSB7CgoidXNlIHN0cmljdCI7Cl9fd2VicGFja19yZXF1aXJlX18ucihfX3dlYnBhY2tfZXhwb3J0c19fKTsKLyogaGFybW9ueSBleHBvcnQgKi8gX193ZWJwYWNrX3JlcXVpcmVfXy5kKF9fd2VicGFja19leHBvcnRzX18sIHsKLyogaGFybW9ueSBleHBvcnQgKi8gICAiZGVmYXVsdCI6IGZ1bmN0aW9uKCkgeyByZXR1cm4gLyogYmluZGluZyAqLyBnZXRXaW5kb3dTY3JvbGxCYXJYOyB9Ci8qIGhhcm1vbnkgZXhwb3J0ICovIH0pOwovKiBoYXJtb255IGltcG9ydCAqLyB2YXIgX2dldEJvdW5kaW5nQ2xpZW50UmVjdF9qc19fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMF9fID0gX193ZWJwYWNrX3JlcXVpcmVfXygvKiEgLi9nZXRCb3VuZGluZ0NsaWVudFJlY3QuanMgKi8gIi4vbm9kZV9tb2R1bGVzL0Bwb3BwZXJqcy9jb3JlL2xpYi9kb20tdXRpbHMvZ2V0Qm91bmRpbmdDbGllbnRSZWN0LmpzIik7Ci8qIGhhcm1vbnkgaW1wb3J0ICovIHZhciBfZ2V0RG9jdW1lbnRFbGVtZW50X2pzX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8xX18gPSBfX3dlYnBhY2tfcmVxdWlyZV9fKC8qISAuL2dldERvY3VtZW50RWxlbWVudC5qcyAqLyAiLi9ub2RlX21vZHVsZXMvQHBvcHBlcmpzL2NvcmUvbGliL2RvbS11dGlscy9nZXREb2N1bWVudEVsZW1lbnQuanMiKTsKLyogaGFybW9ueSBpbXBvcnQgKi8gdmFyIF9nZXRXaW5kb3dTY3JvbGxfanNfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzJfXyA9IF9fd2VicGFja19yZXF1aXJlX18oLyohIC4vZ2V0V2luZG93U2Nyb2xsLmpzICovICIuL25vZGVfbW9kdWxlcy9AcG9wcGVyanMvY29yZS9saWIvZG9tLXV0aWxzL2dldFdpbmRvd1Njcm9sbC5qcyIpOwoKCgpmdW5jdGlvbiBnZXRXaW5kb3dTY3JvbGxCYXJYKGVsZW1lbnQpIHsKICAvLyBJZiA8aHRtbD4gaGFzIGEgQ1NTIHdpZHRoIGdyZWF0ZXIgdGhhbiB0aGUgdmlld3BvcnQsIHRoZW4gdGhpcyB3aWxsIGJlCiAgLy8gaW5jb3JyZWN0IGZvciBSVEwuCiAgLy8gUG9wcGVyIDEgaXMgYnJva2VuIGluIHRoaXMgY2FzZSBhbmQgbmV2ZXIgaGFkIGEgYnVnIHJlcG9ydCBzbyBsZXQncyBhc3N1bWUKICAvLyBpdCdzIG5vdCBhbiBpc3N1ZS4gSSBkb24ndCB0aGluayBhbnlvbmUgZXZlciBzcGVjaWZpZXMgd2lkdGggb24gPGh0bWw+CiAgLy8gYW55d2F5LgogIC8vIEJyb3dzZXJzIHdoZXJlIHRoZSBsZWZ0IHNjcm9sbGJhciBkb2Vzbid0IGNhdXNlIGFuIGlzc3VlIHJlcG9ydCBgMGAgZm9yCiAgLy8gdGhpcyAoZS5nLiBFZGdlIDIwMTksIElFMTEsIFNhZmFyaSkKICByZXR1cm4gKDAsX2dldEJvdW5kaW5nQ2xpZW50UmVjdF9qc19fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMF9fWyJkZWZhdWx0Il0pKCgwLF9nZXREb2N1bWVudEVsZW1lbnRfanNfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzFfX1siZGVmYXVsdCJdKShlbGVtZW50KSkubGVmdCArICgwLF9nZXRXaW5kb3dTY3JvbGxfanNfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzJfX1siZGVmYXVsdCJdKShlbGVtZW50KS5zY3JvbGxMZWZ0Owp9CgovKioqLyB9KSwKCi8qKiovICIuL25vZGVfbW9kdWxlcy9AcG9wcGVyanMvY29yZS9saWIvZG9tLXV0aWxzL2luc3RhbmNlT2YuanMiOgovKiEqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiEqXAogICEqKiogLi9ub2RlX21vZHVsZXMvQHBvcHBlcmpzL2NvcmUvbGliL2RvbS11dGlscy9pbnN0YW5jZU9mLmpzICoqKiEKICBcKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiovCi8qKiovIChmdW5jdGlvbihfX3VudXNlZF93ZWJwYWNrX21vZHVsZSwgX193ZWJwYWNrX2V4cG9ydHNfXywgX193ZWJwYWNrX3JlcXVpcmVfXykgewoKInVzZSBzdHJpY3QiOwpfX3dlYnBhY2tfcmVxdWlyZV9fLnIoX193ZWJwYWNrX2V4cG9ydHNfXyk7Ci8qIGhhcm1vbnkgZXhwb3J0ICovIF9fd2VicGFja19yZXF1aXJlX18uZChfX3dlYnBhY2tfZXhwb3J0c19fLCB7Ci8qIGhhcm1vbnkgZXhwb3J0ICovICAgImlzRWxlbWVudCI6IGZ1bmN0aW9uKCkgeyByZXR1cm4gLyogYmluZGluZyAqLyBpc0VsZW1lbnQ7IH0sCi8qIGhhcm1vbnkgZXhwb3J0ICovICAgImlzSFRNTEVsZW1lbnQiOiBmdW5jdGlvbigpIHsgcmV0dXJuIC8qIGJpbmRpbmcgKi8gaXNIVE1MRWxlbWVudDsgfSwKLyogaGFybW9ueSBleHBvcnQgKi8gICAiaXNTaGFkb3dSb290IjogZnVuY3Rpb24oKSB7IHJldHVybiAvKiBiaW5kaW5nICovIGlzU2hhZG93Um9vdDsgfQovKiBoYXJtb255IGV4cG9ydCAqLyB9KTsKLyogaGFybW9ueSBpbXBvcnQgKi8gdmFyIF9nZXRXaW5kb3dfanNfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzBfXyA9IF9fd2VicGFja19yZXF1aXJlX18oLyohIC4vZ2V0V2luZG93LmpzICovICIuL25vZGVfbW9kdWxlcy9AcG9wcGVyanMvY29yZS9saWIvZG9tLXV0aWxzL2dldFdpbmRvdy5qcyIpOwoKCmZ1bmN0aW9uIGlzRWxlbWVudChub2RlKSB7CiAgdmFyIE93bkVsZW1lbnQgPSAoMCxfZ2V0V2luZG93X2pzX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8wX19bImRlZmF1bHQiXSkobm9kZSkuRWxlbWVudDsKICByZXR1cm4gbm9kZSBpbnN0YW5jZW9mIE93bkVsZW1lbnQgfHwgbm9kZSBpbnN0YW5jZW9mIEVsZW1lbnQ7Cn0KCmZ1bmN0aW9uIGlzSFRNTEVsZW1lbnQobm9kZSkgewogIHZhciBPd25FbGVtZW50ID0gKDAsX2dldFdpbmRvd19qc19fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMF9fWyJkZWZhdWx0Il0pKG5vZGUpLkhUTUxFbGVtZW50OwogIHJldHVybiBub2RlIGluc3RhbmNlb2YgT3duRWxlbWVudCB8fCBub2RlIGluc3RhbmNlb2YgSFRNTEVsZW1lbnQ7Cn0KCmZ1bmN0aW9uIGlzU2hhZG93Um9vdChub2RlKSB7CiAgLy8gSUUgMTEgaGFzIG5vIFNoYWRvd1Jvb3QKICBpZiAodHlwZW9mIFNoYWRvd1Jvb3QgPT09ICd1bmRlZmluZWQnKSB7CiAgICByZXR1cm4gZmFsc2U7CiAgfQoKICB2YXIgT3duRWxlbWVudCA9ICgwLF9nZXRXaW5kb3dfanNfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzBfX1siZGVmYXVsdCJdKShub2RlKS5TaGFkb3dSb290OwogIHJldHVybiBub2RlIGluc3RhbmNlb2YgT3duRWxlbWVudCB8fCBub2RlIGluc3RhbmNlb2YgU2hhZG93Um9vdDsKfQoKCgovKioqLyB9KSwKCi8qKiovICIuL25vZGVfbW9kdWxlcy9AcG9wcGVyanMvY29yZS9saWIvZG9tLXV0aWxzL2lzTGF5b3V0Vmlld3BvcnQuanMiOgovKiEqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiEqXAogICEqKiogLi9ub2RlX21vZHVsZXMvQHBvcHBlcmpzL2NvcmUvbGliL2RvbS11dGlscy9pc0xheW91dFZpZXdwb3J0LmpzICoqKiEKICBcKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiovCi8qKiovIChmdW5jdGlvbihfX3VudXNlZF93ZWJwYWNrX21vZHVsZSwgX193ZWJwYWNrX2V4cG9ydHNfXywgX193ZWJwYWNrX3JlcXVpcmVfXykgewoKInVzZSBzdHJpY3QiOwpfX3dlYnBhY2tfcmVxdWlyZV9fLnIoX193ZWJwYWNrX2V4cG9ydHNfXyk7Ci8qIGhhcm1vbnkgZXhwb3J0ICovIF9fd2VicGFja19yZXF1aXJlX18uZChfX3dlYnBhY2tfZXhwb3J0c19fLCB7Ci8qIGhhcm1vbnkgZXhwb3J0ICovICAgImRlZmF1bHQiOiBmdW5jdGlvbigpIHsgcmV0dXJuIC8qIGJpbmRpbmcgKi8gaXNMYXlvdXRWaWV3cG9ydDsgfQovKiBoYXJtb255IGV4cG9ydCAqLyB9KTsKLyogaGFybW9ueSBpbXBvcnQgKi8gdmFyIF91dGlsc191c2VyQWdlbnRfanNfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzBfXyA9IF9fd2VicGFja19yZXF1aXJlX18oLyohIC4uL3V0aWxzL3VzZXJBZ2VudC5qcyAqLyAiLi9ub2RlX21vZHVsZXMvQHBvcHBlcmpzL2NvcmUvbGliL3V0aWxzL3VzZXJBZ2VudC5qcyIpOwoKZnVuY3Rpb24gaXNMYXlvdXRWaWV3cG9ydCgpIHsKICByZXR1cm4gIS9eKCg/IWNocm9tZXxhbmRyb2lkKS4pKnNhZmFyaS9pLnRlc3QoKDAsX3V0aWxzX3VzZXJBZ2VudF9qc19fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMF9fWyJkZWZhdWx0Il0pKCkpOwp9CgovKioqLyB9KSwKCi8qKiovICIuL25vZGVfbW9kdWxlcy9AcG9wcGVyanMvY29yZS9saWIvZG9tLXV0aWxzL2lzU2Nyb2xsUGFyZW50LmpzIjoKLyohKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqISpcCiAgISoqKiAuL25vZGVfbW9kdWxlcy9AcG9wcGVyanMvY29yZS9saWIvZG9tLXV0aWxzL2lzU2Nyb2xsUGFyZW50LmpzICoqKiEKICBcKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqLwovKioqLyAoZnVuY3Rpb24oX191bnVzZWRfd2VicGFja19tb2R1bGUsIF9fd2VicGFja19leHBvcnRzX18sIF9fd2VicGFja19yZXF1aXJlX18pIHsKCiJ1c2Ugc3RyaWN0IjsKX193ZWJwYWNrX3JlcXVpcmVfXy5yKF9fd2VicGFja19leHBvcnRzX18pOwovKiBoYXJtb255IGV4cG9ydCAqLyBfX3dlYnBhY2tfcmVxdWlyZV9fLmQoX193ZWJwYWNrX2V4cG9ydHNfXywgewovKiBoYXJtb255IGV4cG9ydCAqLyAgICJkZWZhdWx0IjogZnVuY3Rpb24oKSB7IHJldHVybiAvKiBiaW5kaW5nICovIGlzU2Nyb2xsUGFyZW50OyB9Ci8qIGhhcm1vbnkgZXhwb3J0ICovIH0pOwovKiBoYXJtb255IGltcG9ydCAqLyB2YXIgX2dldENvbXB1dGVkU3R5bGVfanNfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzBfXyA9IF9fd2VicGFja19yZXF1aXJlX18oLyohIC4vZ2V0Q29tcHV0ZWRTdHlsZS5qcyAqLyAiLi9ub2RlX21vZHVsZXMvQHBvcHBlcmpzL2NvcmUvbGliL2RvbS11dGlscy9nZXRDb21wdXRlZFN0eWxlLmpzIik7CgpmdW5jdGlvbiBpc1Njcm9sbFBhcmVudChlbGVtZW50KSB7CiAgLy8gRmlyZWZveCB3YW50cyB1cyB0byBjaGVjayBgLXhgIGFuZCBgLXlgIHZhcmlhdGlvbnMgYXMgd2VsbAogIHZhciBfZ2V0Q29tcHV0ZWRTdHlsZSA9ICgwLF9nZXRDb21wdXRlZFN0eWxlX2pzX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8wX19bImRlZmF1bHQiXSkoZWxlbWVudCksCiAgICAgIG92ZXJmbG93ID0gX2dldENvbXB1dGVkU3R5bGUub3ZlcmZsb3csCiAgICAgIG92ZXJmbG93WCA9IF9nZXRDb21wdXRlZFN0eWxlLm92ZXJmbG93WCwKICAgICAgb3ZlcmZsb3dZID0gX2dldENvbXB1dGVkU3R5bGUub3ZlcmZsb3dZOwoKICByZXR1cm4gL2F1dG98c2Nyb2xsfG92ZXJsYXl8aGlkZGVuLy50ZXN0KG92ZXJmbG93ICsgb3ZlcmZsb3dZICsgb3ZlcmZsb3dYKTsKfQoKLyoqKi8gfSksCgovKioqLyAiLi9ub2RlX21vZHVsZXMvQHBvcHBlcmpzL2NvcmUvbGliL2RvbS11dGlscy9pc1RhYmxlRWxlbWVudC5qcyI6Ci8qISoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiEqXAogICEqKiogLi9ub2RlX21vZHVsZXMvQHBvcHBlcmpzL2NvcmUvbGliL2RvbS11dGlscy9pc1RhYmxlRWxlbWVudC5qcyAqKiohCiAgXCoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKi8KLyoqKi8gKGZ1bmN0aW9uKF9fdW51c2VkX3dlYnBhY2tfbW9kdWxlLCBfX3dlYnBhY2tfZXhwb3J0c19fLCBfX3dlYnBhY2tfcmVxdWlyZV9fKSB7CgoidXNlIHN0cmljdCI7Cl9fd2VicGFja19yZXF1aXJlX18ucihfX3dlYnBhY2tfZXhwb3J0c19fKTsKLyogaGFybW9ueSBleHBvcnQgKi8gX193ZWJwYWNrX3JlcXVpcmVfXy5kKF9fd2VicGFja19leHBvcnRzX18sIHsKLyogaGFybW9ueSBleHBvcnQgKi8gICAiZGVmYXVsdCI6IGZ1bmN0aW9uKCkgeyByZXR1cm4gLyogYmluZGluZyAqLyBpc1RhYmxlRWxlbWVudDsgfQovKiBoYXJtb255IGV4cG9ydCAqLyB9KTsKLyogaGFybW9ueSBpbXBvcnQgKi8gdmFyIF9nZXROb2RlTmFtZV9qc19fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMF9fID0gX193ZWJwYWNrX3JlcXVpcmVfXygvKiEgLi9nZXROb2RlTmFtZS5qcyAqLyAiLi9ub2RlX21vZHVsZXMvQHBvcHBlcmpzL2NvcmUvbGliL2RvbS11dGlscy9nZXROb2RlTmFtZS5qcyIpOwoKZnVuY3Rpb24gaXNUYWJsZUVsZW1lbnQoZWxlbWVudCkgewogIHJldHVybiBbJ3RhYmxlJywgJ3RkJywgJ3RoJ10uaW5kZXhPZigoMCxfZ2V0Tm9kZU5hbWVfanNfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzBfX1siZGVmYXVsdCJdKShlbGVtZW50KSkgPj0gMDsKfQoKLyoqKi8gfSksCgovKioqLyAiLi9ub2RlX21vZHVsZXMvQHBvcHBlcmpzL2NvcmUvbGliL2RvbS11dGlscy9saXN0U2Nyb2xsUGFyZW50cy5qcyI6Ci8qISoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiEqXAogICEqKiogLi9ub2RlX21vZHVsZXMvQHBvcHBlcmpzL2NvcmUvbGliL2RvbS11dGlscy9saXN0U2Nyb2xsUGFyZW50cy5qcyAqKiohCiAgXCoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKi8KLyoqKi8gKGZ1bmN0aW9uKF9fdW51c2VkX3dlYnBhY2tfbW9kdWxlLCBfX3dlYnBhY2tfZXhwb3J0c19fLCBfX3dlYnBhY2tfcmVxdWlyZV9fKSB7CgoidXNlIHN0cmljdCI7Cl9fd2VicGFja19yZXF1aXJlX18ucihfX3dlYnBhY2tfZXhwb3J0c19fKTsKLyogaGFybW9ueSBleHBvcnQgKi8gX193ZWJwYWNrX3JlcXVpcmVfXy5kKF9fd2VicGFja19leHBvcnRzX18sIHsKLyogaGFybW9ueSBleHBvcnQgKi8gICAiZGVmYXVsdCI6IGZ1bmN0aW9uKCkgeyByZXR1cm4gLyogYmluZGluZyAqLyBsaXN0U2Nyb2xsUGFyZW50czsgfQovKiBoYXJtb255IGV4cG9ydCAqLyB9KTsKLyogaGFybW9ueSBpbXBvcnQgKi8gdmFyIF9nZXRTY3JvbGxQYXJlbnRfanNfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzBfXyA9IF9fd2VicGFja19yZXF1aXJlX18oLyohIC4vZ2V0U2Nyb2xsUGFyZW50LmpzICovICIuL25vZGVfbW9kdWxlcy9AcG9wcGVyanMvY29yZS9saWIvZG9tLXV0aWxzL2dldFNjcm9sbFBhcmVudC5qcyIpOwovKiBoYXJtb255IGltcG9ydCAqLyB2YXIgX2dldFBhcmVudE5vZGVfanNfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzNfXyA9IF9fd2VicGFja19yZXF1aXJlX18oLyohIC4vZ2V0UGFyZW50Tm9kZS5qcyAqLyAiLi9ub2RlX21vZHVsZXMvQHBvcHBlcmpzL2NvcmUvbGliL2RvbS11dGlscy9nZXRQYXJlbnROb2RlLmpzIik7Ci8qIGhhcm1vbnkgaW1wb3J0ICovIHZhciBfZ2V0V2luZG93X2pzX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8xX18gPSBfX3dlYnBhY2tfcmVxdWlyZV9fKC8qISAuL2dldFdpbmRvdy5qcyAqLyAiLi9ub2RlX21vZHVsZXMvQHBvcHBlcmpzL2NvcmUvbGliL2RvbS11dGlscy9nZXRXaW5kb3cuanMiKTsKLyogaGFybW9ueSBpbXBvcnQgKi8gdmFyIF9pc1Njcm9sbFBhcmVudF9qc19fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMl9fID0gX193ZWJwYWNrX3JlcXVpcmVfXygvKiEgLi9pc1Njcm9sbFBhcmVudC5qcyAqLyAiLi9ub2RlX21vZHVsZXMvQHBvcHBlcmpzL2NvcmUvbGliL2RvbS11dGlscy9pc1Njcm9sbFBhcmVudC5qcyIpOwoKCgoKLyoKZ2l2ZW4gYSBET00gZWxlbWVudCwgcmV0dXJuIHRoZSBsaXN0IG9mIGFsbCBzY3JvbGwgcGFyZW50cywgdXAgdGhlIGxpc3Qgb2YgYW5jZXNvcnMKdW50aWwgd2UgZ2V0IHRvIHRoZSB0b3Agd2luZG93IG9iamVjdC4gVGhpcyBsaXN0IGlzIHdoYXQgd2UgYXR0YWNoIHNjcm9sbCBsaXN0ZW5lcnMKdG8sIGJlY2F1c2UgaWYgYW55IG9mIHRoZXNlIHBhcmVudCBlbGVtZW50cyBzY3JvbGwsIHdlJ2xsIG5lZWQgdG8gcmUtY2FsY3VsYXRlIHRoZQpyZWZlcmVuY2UgZWxlbWVudCdzIHBvc2l0aW9uLgoqLwoKZnVuY3Rpb24gbGlzdFNjcm9sbFBhcmVudHMoZWxlbWVudCwgbGlzdCkgewogIHZhciBfZWxlbWVudCRvd25lckRvY3VtZW47CgogIGlmIChsaXN0ID09PSB2b2lkIDApIHsKICAgIGxpc3QgPSBbXTsKICB9CgogIHZhciBzY3JvbGxQYXJlbnQgPSAoMCxfZ2V0U2Nyb2xsUGFyZW50X2pzX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8wX19bImRlZmF1bHQiXSkoZWxlbWVudCk7CiAgdmFyIGlzQm9keSA9IHNjcm9sbFBhcmVudCA9PT0gKChfZWxlbWVudCRvd25lckRvY3VtZW4gPSBlbGVtZW50Lm93bmVyRG9jdW1lbnQpID09IG51bGwgPyB2b2lkIDAgOiBfZWxlbWVudCRvd25lckRvY3VtZW4uYm9keSk7CiAgdmFyIHdpbiA9ICgwLF9nZXRXaW5kb3dfanNfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzFfX1siZGVmYXVsdCJdKShzY3JvbGxQYXJlbnQpOwogIHZhciB0YXJnZXQgPSBpc0JvZHkgPyBbd2luXS5jb25jYXQod2luLnZpc3VhbFZpZXdwb3J0IHx8IFtdLCAoMCxfaXNTY3JvbGxQYXJlbnRfanNfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzJfX1siZGVmYXVsdCJdKShzY3JvbGxQYXJlbnQpID8gc2Nyb2xsUGFyZW50IDogW10pIDogc2Nyb2xsUGFyZW50OwogIHZhciB1cGRhdGVkTGlzdCA9IGxpc3QuY29uY2F0KHRhcmdldCk7CiAgcmV0dXJuIGlzQm9keSA/IHVwZGF0ZWRMaXN0IDogLy8gJEZsb3dGaXhNZVtpbmNvbXBhdGlibGUtY2FsbF06IGlzQm9keSB0ZWxscyB1cyB0YXJnZXQgd2lsbCBiZSBhbiBIVE1MRWxlbWVudCBoZXJlCiAgdXBkYXRlZExpc3QuY29uY2F0KGxpc3RTY3JvbGxQYXJlbnRzKCgwLF9nZXRQYXJlbnROb2RlX2pzX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8zX19bImRlZmF1bHQiXSkodGFyZ2V0KSkpOwp9CgovKioqLyB9KSwKCi8qKiovICIuL25vZGVfbW9kdWxlcy9AcG9wcGVyanMvY29yZS9saWIvZW51bXMuanMiOgovKiEqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiEqXAogICEqKiogLi9ub2RlX21vZHVsZXMvQHBvcHBlcmpzL2NvcmUvbGliL2VudW1zLmpzICoqKiEKICBcKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiovCi8qKiovIChmdW5jdGlvbihfX3VudXNlZF93ZWJwYWNrX21vZHVsZSwgX193ZWJwYWNrX2V4cG9ydHNfXywgX193ZWJwYWNrX3JlcXVpcmVfXykgewoKInVzZSBzdHJpY3QiOwpfX3dlYnBhY2tfcmVxdWlyZV9fLnIoX193ZWJwYWNrX2V4cG9ydHNfXyk7Ci8qIGhhcm1vbnkgZXhwb3J0ICovIF9fd2VicGFja19yZXF1aXJlX18uZChfX3dlYnBhY2tfZXhwb3J0c19fLCB7Ci8qIGhhcm1vbnkgZXhwb3J0ICovICAgImFmdGVyTWFpbiI6IGZ1bmN0aW9uKCkgeyByZXR1cm4gLyogYmluZGluZyAqLyBhZnRlck1haW47IH0sCi8qIGhhcm1vbnkgZXhwb3J0ICovICAgImFmdGVyUmVhZCI6IGZ1bmN0aW9uKCkgeyByZXR1cm4gLyogYmluZGluZyAqLyBhZnRlclJlYWQ7IH0sCi8qIGhhcm1vbnkgZXhwb3J0ICovICAgImFmdGVyV3JpdGUiOiBmdW5jdGlvbigpIHsgcmV0dXJuIC8qIGJpbmRpbmcgKi8gYWZ0ZXJXcml0ZTsgfSwKLyogaGFybW9ueSBleHBvcnQgKi8gICAiYXV0byI6IGZ1bmN0aW9uKCkgeyByZXR1cm4gLyogYmluZGluZyAqLyBhdXRvOyB9LAovKiBoYXJtb255IGV4cG9ydCAqLyAgICJiYXNlUGxhY2VtZW50cyI6IGZ1bmN0aW9uKCkgeyByZXR1cm4gLyogYmluZGluZyAqLyBiYXNlUGxhY2VtZW50czsgfSwKLyogaGFybW9ueSBleHBvcnQgKi8gICAiYmVmb3JlTWFpbiI6IGZ1bmN0aW9uKCkgeyByZXR1cm4gLyogYmluZGluZyAqLyBiZWZvcmVNYWluOyB9LAovKiBoYXJtb255IGV4cG9ydCAqLyAgICJiZWZvcmVSZWFkIjogZnVuY3Rpb24oKSB7IHJldHVybiAvKiBiaW5kaW5nICovIGJlZm9yZVJlYWQ7IH0sCi8qIGhhcm1vbnkgZXhwb3J0ICovICAgImJlZm9yZVdyaXRlIjogZnVuY3Rpb24oKSB7IHJldHVybiAvKiBiaW5kaW5nICovIGJlZm9yZVdyaXRlOyB9LAovKiBoYXJtb255IGV4cG9ydCAqLyAgICJib3R0b20iOiBmdW5jdGlvbigpIHsgcmV0dXJuIC8qIGJpbmRpbmcgKi8gYm90dG9tOyB9LAovKiBoYXJtb255IGV4cG9ydCAqLyAgICJjbGlwcGluZ1BhcmVudHMiOiBmdW5jdGlvbigpIHsgcmV0dXJuIC8qIGJpbmRpbmcgKi8gY2xpcHBpbmdQYXJlbnRzOyB9LAovKiBoYXJtb255IGV4cG9ydCAqLyAgICJlbmQiOiBmdW5jdGlvbigpIHsgcmV0dXJuIC8qIGJpbmRpbmcgKi8gZW5kOyB9LAovKiBoYXJtb255IGV4cG9ydCAqLyAgICJsZWZ0IjogZnVuY3Rpb24oKSB7IHJldHVybiAvKiBiaW5kaW5nICovIGxlZnQ7IH0sCi8qIGhhcm1vbnkgZXhwb3J0ICovICAgIm1haW4iOiBmdW5jdGlvbigpIHsgcmV0dXJuIC8qIGJpbmRpbmcgKi8gbWFpbjsgfSwKLyogaGFybW9ueSBleHBvcnQgKi8gICAibW9kaWZpZXJQaGFzZXMiOiBmdW5jdGlvbigpIHsgcmV0dXJuIC8qIGJpbmRpbmcgKi8gbW9kaWZpZXJQaGFzZXM7IH0sCi8qIGhhcm1vbnkgZXhwb3J0ICovICAgInBsYWNlbWVudHMiOiBmdW5jdGlvbigpIHsgcmV0dXJuIC8qIGJpbmRpbmcgKi8gcGxhY2VtZW50czsgfSwKLyogaGFybW9ueSBleHBvcnQgKi8gICAicG9wcGVyIjogZnVuY3Rpb24oKSB7IHJldHVybiAvKiBiaW5kaW5nICovIHBvcHBlcjsgfSwKLyogaGFybW9ueSBleHBvcnQgKi8gICAicmVhZCI6IGZ1bmN0aW9uKCkgeyByZXR1cm4gLyogYmluZGluZyAqLyByZWFkOyB9LAovKiBoYXJtb255IGV4cG9ydCAqLyAgICJyZWZlcmVuY2UiOiBmdW5jdGlvbigpIHsgcmV0dXJuIC8qIGJpbmRpbmcgKi8gcmVmZXJlbmNlOyB9LAovKiBoYXJtb255IGV4cG9ydCAqLyAgICJyaWdodCI6IGZ1bmN0aW9uKCkgeyByZXR1cm4gLyogYmluZGluZyAqLyByaWdodDsgfSwKLyogaGFybW9ueSBleHBvcnQgKi8gICAic3RhcnQiOiBmdW5jdGlvbigpIHsgcmV0dXJuIC8qIGJpbmRpbmcgKi8gc3RhcnQ7IH0sCi8qIGhhcm1vbnkgZXhwb3J0ICovICAgInRvcCI6IGZ1bmN0aW9uKCkgeyByZXR1cm4gLyogYmluZGluZyAqLyB0b3A7IH0sCi8qIGhhcm1vbnkgZXhwb3J0ICovICAgInZhcmlhdGlvblBsYWNlbWVudHMiOiBmdW5jdGlvbigpIHsgcmV0dXJuIC8qIGJpbmRpbmcgKi8gdmFyaWF0aW9uUGxhY2VtZW50czsgfSwKLyogaGFybW9ueSBleHBvcnQgKi8gICAidmlld3BvcnQiOiBmdW5jdGlvbigpIHsgcmV0dXJuIC8qIGJpbmRpbmcgKi8gdmlld3BvcnQ7IH0sCi8qIGhhcm1vbnkgZXhwb3J0ICovICAgIndyaXRlIjogZnVuY3Rpb24oKSB7IHJldHVybiAvKiBiaW5kaW5nICovIHdyaXRlOyB9Ci8qIGhhcm1vbnkgZXhwb3J0ICovIH0pOwp2YXIgdG9wID0gJ3RvcCc7CnZhciBib3R0b20gPSAnYm90dG9tJzsKdmFyIHJpZ2h0ID0gJ3JpZ2h0JzsKdmFyIGxlZnQgPSAnbGVmdCc7CnZhciBhdXRvID0gJ2F1dG8nOwp2YXIgYmFzZVBsYWNlbWVudHMgPSBbdG9wLCBib3R0b20sIHJpZ2h0LCBsZWZ0XTsKdmFyIHN0YXJ0ID0gJ3N0YXJ0JzsKdmFyIGVuZCA9ICdlbmQnOwp2YXIgY2xpcHBpbmdQYXJlbnRzID0gJ2NsaXBwaW5nUGFyZW50cyc7CnZhciB2aWV3cG9ydCA9ICd2aWV3cG9ydCc7CnZhciBwb3BwZXIgPSAncG9wcGVyJzsKdmFyIHJlZmVyZW5jZSA9ICdyZWZlcmVuY2UnOwp2YXIgdmFyaWF0aW9uUGxhY2VtZW50cyA9IC8qI19fUFVSRV9fKi9iYXNlUGxhY2VtZW50cy5yZWR1Y2UoZnVuY3Rpb24gKGFjYywgcGxhY2VtZW50KSB7CiAgcmV0dXJuIGFjYy5jb25jYXQoW3BsYWNlbWVudCArICItIiArIHN0YXJ0LCBwbGFjZW1lbnQgKyAiLSIgKyBlbmRdKTsKfSwgW10pOwp2YXIgcGxhY2VtZW50cyA9IC8qI19fUFVSRV9fKi9bXS5jb25jYXQoYmFzZVBsYWNlbWVudHMsIFthdXRvXSkucmVkdWNlKGZ1bmN0aW9uIChhY2MsIHBsYWNlbWVudCkgewogIHJldHVybiBhY2MuY29uY2F0KFtwbGFjZW1lbnQsIHBsYWNlbWVudCArICItIiArIHN0YXJ0LCBwbGFjZW1lbnQgKyAiLSIgKyBlbmRdKTsKfSwgW10pOyAvLyBtb2RpZmllcnMgdGhhdCBuZWVkIHRvIHJlYWQgdGhlIERPTQoKdmFyIGJlZm9yZVJlYWQgPSAnYmVmb3JlUmVhZCc7CnZhciByZWFkID0gJ3JlYWQnOwp2YXIgYWZ0ZXJSZWFkID0gJ2FmdGVyUmVhZCc7IC8vIHB1cmUtbG9naWMgbW9kaWZpZXJzCgp2YXIgYmVmb3JlTWFpbiA9ICdiZWZvcmVNYWluJzsKdmFyIG1haW4gPSAnbWFpbic7CnZhciBhZnRlck1haW4gPSAnYWZ0ZXJNYWluJzsgLy8gbW9kaWZpZXIgd2l0aCB0aGUgcHVycG9zZSB0byB3cml0ZSB0byB0aGUgRE9NIChvciB3cml0ZSBpbnRvIGEgZnJhbWV3b3JrIHN0YXRlKQoKdmFyIGJlZm9yZVdyaXRlID0gJ2JlZm9yZVdyaXRlJzsKdmFyIHdyaXRlID0gJ3dyaXRlJzsKdmFyIGFmdGVyV3JpdGUgPSAnYWZ0ZXJXcml0ZSc7CnZhciBtb2RpZmllclBoYXNlcyA9IFtiZWZvcmVSZWFkLCByZWFkLCBhZnRlclJlYWQsIGJlZm9yZU1haW4sIG1haW4sIGFmdGVyTWFpbiwgYmVmb3JlV3JpdGUsIHdyaXRlLCBhZnRlcldyaXRlXTsKCi8qKiovIH0pLAoKLyoqKi8gIi4vbm9kZV9tb2R1bGVzL0Bwb3BwZXJqcy9jb3JlL2xpYi9pbmRleC5qcyI6Ci8qISoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqISpcCiAgISoqKiAuL25vZGVfbW9kdWxlcy9AcG9wcGVyanMvY29yZS9saWIvaW5kZXguanMgKioqIQogIFwqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKi8KLyoqKi8gKGZ1bmN0aW9uKF9fdW51c2VkX3dlYnBhY2tfbW9kdWxlLCBfX3dlYnBhY2tfZXhwb3J0c19fLCBfX3dlYnBhY2tfcmVxdWlyZV9fKSB7CgoidXNlIHN0cmljdCI7Cl9fd2VicGFja19yZXF1aXJlX18ucihfX3dlYnBhY2tfZXhwb3J0c19fKTsKLyogaGFybW9ueSBleHBvcnQgKi8gX193ZWJwYWNrX3JlcXVpcmVfXy5kKF9fd2VicGFja19leHBvcnRzX18sIHsKLyogaGFybW9ueSBleHBvcnQgKi8gICAiYWZ0ZXJNYWluIjogZnVuY3Rpb24oKSB7IHJldHVybiAvKiByZWV4cG9ydCBzYWZlICovIF9lbnVtc19qc19fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMF9fLmFmdGVyTWFpbjsgfSwKLyogaGFybW9ueSBleHBvcnQgKi8gICAiYWZ0ZXJSZWFkIjogZnVuY3Rpb24oKSB7IHJldHVybiAvKiByZWV4cG9ydCBzYWZlICovIF9lbnVtc19qc19fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMF9fLmFmdGVyUmVhZDsgfSwKLyogaGFybW9ueSBleHBvcnQgKi8gICAiYWZ0ZXJXcml0ZSI6IGZ1bmN0aW9uKCkgeyByZXR1cm4gLyogcmVleHBvcnQgc2FmZSAqLyBfZW51bXNfanNfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzBfXy5hZnRlcldyaXRlOyB9LAovKiBoYXJtb255IGV4cG9ydCAqLyAgICJhcHBseVN0eWxlcyI6IGZ1bmN0aW9uKCkgeyByZXR1cm4gLyogcmVleHBvcnQgc2FmZSAqLyBfbW9kaWZpZXJzX2luZGV4X2pzX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8xX18uYXBwbHlTdHlsZXM7IH0sCi8qIGhhcm1vbnkgZXhwb3J0ICovICAgImFycm93IjogZnVuY3Rpb24oKSB7IHJldHVybiAvKiByZWV4cG9ydCBzYWZlICovIF9tb2RpZmllcnNfaW5kZXhfanNfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzFfXy5hcnJvdzsgfSwKLyogaGFybW9ueSBleHBvcnQgKi8gICAiYXV0byI6IGZ1bmN0aW9uKCkgeyByZXR1cm4gLyogcmVleHBvcnQgc2FmZSAqLyBfZW51bXNfanNfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzBfXy5hdXRvOyB9LAovKiBoYXJtb255IGV4cG9ydCAqLyAgICJiYXNlUGxhY2VtZW50cyI6IGZ1bmN0aW9uKCkgeyByZXR1cm4gLyogcmVleHBvcnQgc2FmZSAqLyBfZW51bXNfanNfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzBfXy5iYXNlUGxhY2VtZW50czsgfSwKLyogaGFybW9ueSBleHBvcnQgKi8gICAiYmVmb3JlTWFpbiI6IGZ1bmN0aW9uKCkgeyByZXR1cm4gLyogcmVleHBvcnQgc2FmZSAqLyBfZW51bXNfanNfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzBfXy5iZWZvcmVNYWluOyB9LAovKiBoYXJtb255IGV4cG9ydCAqLyAgICJiZWZvcmVSZWFkIjogZnVuY3Rpb24oKSB7IHJldHVybiAvKiByZWV4cG9ydCBzYWZlICovIF9lbnVtc19qc19fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMF9fLmJlZm9yZVJlYWQ7IH0sCi8qIGhhcm1vbnkgZXhwb3J0ICovICAgImJlZm9yZVdyaXRlIjogZnVuY3Rpb24oKSB7IHJldHVybiAvKiByZWV4cG9ydCBzYWZlICovIF9lbnVtc19qc19fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMF9fLmJlZm9yZVdyaXRlOyB9LAovKiBoYXJtb255IGV4cG9ydCAqLyAgICJib3R0b20iOiBmdW5jdGlvbigpIHsgcmV0dXJuIC8qIHJlZXhwb3J0IHNhZmUgKi8gX2VudW1zX2pzX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8wX18uYm90dG9tOyB9LAovKiBoYXJtb255IGV4cG9ydCAqLyAgICJjbGlwcGluZ1BhcmVudHMiOiBmdW5jdGlvbigpIHsgcmV0dXJuIC8qIHJlZXhwb3J0IHNhZmUgKi8gX2VudW1zX2pzX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8wX18uY2xpcHBpbmdQYXJlbnRzOyB9LAovKiBoYXJtb255IGV4cG9ydCAqLyAgICJjb21wdXRlU3R5bGVzIjogZnVuY3Rpb24oKSB7IHJldHVybiAvKiByZWV4cG9ydCBzYWZlICovIF9tb2RpZmllcnNfaW5kZXhfanNfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzFfXy5jb21wdXRlU3R5bGVzOyB9LAovKiBoYXJtb255IGV4cG9ydCAqLyAgICJjcmVhdGVQb3BwZXIiOiBmdW5jdGlvbigpIHsgcmV0dXJuIC8qIHJlZXhwb3J0IHNhZmUgKi8gX3BvcHBlcl9qc19fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfNF9fLmNyZWF0ZVBvcHBlcjsgfSwKLyogaGFybW9ueSBleHBvcnQgKi8gICAiY3JlYXRlUG9wcGVyQmFzZSI6IGZ1bmN0aW9uKCkgeyByZXR1cm4gLyogcmVleHBvcnQgc2FmZSAqLyBfY3JlYXRlUG9wcGVyX2pzX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8yX18uY3JlYXRlUG9wcGVyOyB9LAovKiBoYXJtb255IGV4cG9ydCAqLyAgICJjcmVhdGVQb3BwZXJMaXRlIjogZnVuY3Rpb24oKSB7IHJldHVybiAvKiByZWV4cG9ydCBzYWZlICovIF9wb3BwZXJfbGl0ZV9qc19fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfNV9fLmNyZWF0ZVBvcHBlcjsgfSwKLyogaGFybW9ueSBleHBvcnQgKi8gICAiZGV0ZWN0T3ZlcmZsb3ciOiBmdW5jdGlvbigpIHsgcmV0dXJuIC8qIHJlZXhwb3J0IHNhZmUgKi8gX2NyZWF0ZVBvcHBlcl9qc19fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfM19fWyJkZWZhdWx0Il07IH0sCi8qIGhhcm1vbnkgZXhwb3J0ICovICAgImVuZCI6IGZ1bmN0aW9uKCkgeyByZXR1cm4gLyogcmVleHBvcnQgc2FmZSAqLyBfZW51bXNfanNfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzBfXy5lbmQ7IH0sCi8qIGhhcm1vbnkgZXhwb3J0ICovICAgImV2ZW50TGlzdGVuZXJzIjogZnVuY3Rpb24oKSB7IHJldHVybiAvKiByZWV4cG9ydCBzYWZlICovIF9tb2RpZmllcnNfaW5kZXhfanNfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzFfXy5ldmVudExpc3RlbmVyczsgfSwKLyogaGFybW9ueSBleHBvcnQgKi8gICAiZmxpcCI6IGZ1bmN0aW9uKCkgeyByZXR1cm4gLyogcmVleHBvcnQgc2FmZSAqLyBfbW9kaWZpZXJzX2luZGV4X2pzX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8xX18uZmxpcDsgfSwKLyogaGFybW9ueSBleHBvcnQgKi8gICAiaGlkZSI6IGZ1bmN0aW9uKCkgeyByZXR1cm4gLyogcmVleHBvcnQgc2FmZSAqLyBfbW9kaWZpZXJzX2luZGV4X2pzX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8xX18uaGlkZTsgfSwKLyogaGFybW9ueSBleHBvcnQgKi8gICAibGVmdCI6IGZ1bmN0aW9uKCkgeyByZXR1cm4gLyogcmVleHBvcnQgc2FmZSAqLyBfZW51bXNfanNfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzBfXy5sZWZ0OyB9LAovKiBoYXJtb255IGV4cG9ydCAqLyAgICJtYWluIjogZnVuY3Rpb24oKSB7IHJldHVybiAvKiByZWV4cG9ydCBzYWZlICovIF9lbnVtc19qc19fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMF9fLm1haW47IH0sCi8qIGhhcm1vbnkgZXhwb3J0ICovICAgIm1vZGlmaWVyUGhhc2VzIjogZnVuY3Rpb24oKSB7IHJldHVybiAvKiByZWV4cG9ydCBzYWZlICovIF9lbnVtc19qc19fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMF9fLm1vZGlmaWVyUGhhc2VzOyB9LAovKiBoYXJtb255IGV4cG9ydCAqLyAgICJvZmZzZXQiOiBmdW5jdGlvbigpIHsgcmV0dXJuIC8qIHJlZXhwb3J0IHNhZmUgKi8gX21vZGlmaWVyc19pbmRleF9qc19fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMV9fLm9mZnNldDsgfSwKLyogaGFybW9ueSBleHBvcnQgKi8gICAicGxhY2VtZW50cyI6IGZ1bmN0aW9uKCkgeyByZXR1cm4gLyogcmVleHBvcnQgc2FmZSAqLyBfZW51bXNfanNfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzBfXy5wbGFjZW1lbnRzOyB9LAovKiBoYXJtb255IGV4cG9ydCAqLyAgICJwb3BwZXIiOiBmdW5jdGlvbigpIHsgcmV0dXJuIC8qIHJlZXhwb3J0IHNhZmUgKi8gX2VudW1zX2pzX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8wX18ucG9wcGVyOyB9LAovKiBoYXJtb255IGV4cG9ydCAqLyAgICJwb3BwZXJHZW5lcmF0b3IiOiBmdW5jdGlvbigpIHsgcmV0dXJuIC8qIHJlZXhwb3J0IHNhZmUgKi8gX2NyZWF0ZVBvcHBlcl9qc19fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMl9fLnBvcHBlckdlbmVyYXRvcjsgfSwKLyogaGFybW9ueSBleHBvcnQgKi8gICAicG9wcGVyT2Zmc2V0cyI6IGZ1bmN0aW9uKCkgeyByZXR1cm4gLyogcmVleHBvcnQgc2FmZSAqLyBfbW9kaWZpZXJzX2luZGV4X2pzX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8xX18ucG9wcGVyT2Zmc2V0czsgfSwKLyogaGFybW9ueSBleHBvcnQgKi8gICAicHJldmVudE92ZXJmbG93IjogZnVuY3Rpb24oKSB7IHJldHVybiAvKiByZWV4cG9ydCBzYWZlICovIF9tb2RpZmllcnNfaW5kZXhfanNfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzFfXy5wcmV2ZW50T3ZlcmZsb3c7IH0sCi8qIGhhcm1vbnkgZXhwb3J0ICovICAgInJlYWQiOiBmdW5jdGlvbigpIHsgcmV0dXJuIC8qIHJlZXhwb3J0IHNhZmUgKi8gX2VudW1zX2pzX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8wX18ucmVhZDsgfSwKLyogaGFybW9ueSBleHBvcnQgKi8gICAicmVmZXJlbmNlIjogZnVuY3Rpb24oKSB7IHJldHVybiAvKiByZWV4cG9ydCBzYWZlICovIF9lbnVtc19qc19fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMF9fLnJlZmVyZW5jZTsgfSwKLyogaGFybW9ueSBleHBvcnQgKi8gICAicmlnaHQiOiBmdW5jdGlvbigpIHsgcmV0dXJuIC8qIHJlZXhwb3J0IHNhZmUgKi8gX2VudW1zX2pzX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8wX18ucmlnaHQ7IH0sCi8qIGhhcm1vbnkgZXhwb3J0ICovICAgInN0YXJ0IjogZnVuY3Rpb24oKSB7IHJldHVybiAvKiByZWV4cG9ydCBzYWZlICovIF9lbnVtc19qc19fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMF9fLnN0YXJ0OyB9LAovKiBoYXJtb255IGV4cG9ydCAqLyAgICJ0b3AiOiBmdW5jdGlvbigpIHsgcmV0dXJuIC8qIHJlZXhwb3J0IHNhZmUgKi8gX2VudW1zX2pzX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8wX18udG9wOyB9LAovKiBoYXJtb255IGV4cG9ydCAqLyAgICJ2YXJpYXRpb25QbGFjZW1lbnRzIjogZnVuY3Rpb24oKSB7IHJldHVybiAvKiByZWV4cG9ydCBzYWZlICovIF9lbnVtc19qc19fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMF9fLnZhcmlhdGlvblBsYWNlbWVudHM7IH0sCi8qIGhhcm1vbnkgZXhwb3J0ICovICAgInZpZXdwb3J0IjogZnVuY3Rpb24oKSB7IHJldHVybiAvKiByZWV4cG9ydCBzYWZlICovIF9lbnVtc19qc19fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMF9fLnZpZXdwb3J0OyB9LAovKiBoYXJtb255IGV4cG9ydCAqLyAgICJ3cml0ZSI6IGZ1bmN0aW9uKCkgeyByZXR1cm4gLyogcmVleHBvcnQgc2FmZSAqLyBfZW51bXNfanNfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzBfXy53cml0ZTsgfQovKiBoYXJtb255IGV4cG9ydCAqLyB9KTsKLyogaGFybW9ueSBpbXBvcnQgKi8gdmFyIF9lbnVtc19qc19fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMF9fID0gX193ZWJwYWNrX3JlcXVpcmVfXygvKiEgLi9lbnVtcy5qcyAqLyAiLi9ub2RlX21vZHVsZXMvQHBvcHBlcmpzL2NvcmUvbGliL2VudW1zLmpzIik7Ci8qIGhhcm1vbnkgaW1wb3J0ICovIHZhciBfbW9kaWZpZXJzX2luZGV4X2pzX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8xX18gPSBfX3dlYnBhY2tfcmVxdWlyZV9fKC8qISAuL21vZGlmaWVycy9pbmRleC5qcyAqLyAiLi9ub2RlX21vZHVsZXMvQHBvcHBlcmpzL2NvcmUvbGliL21vZGlmaWVycy9pbmRleC5qcyIpOwovKiBoYXJtb255IGltcG9ydCAqLyB2YXIgX2NyZWF0ZVBvcHBlcl9qc19fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMl9fID0gX193ZWJwYWNrX3JlcXVpcmVfXygvKiEgLi9jcmVhdGVQb3BwZXIuanMgKi8gIi4vbm9kZV9tb2R1bGVzL0Bwb3BwZXJqcy9jb3JlL2xpYi9jcmVhdGVQb3BwZXIuanMiKTsKLyogaGFybW9ueSBpbXBvcnQgKi8gdmFyIF9jcmVhdGVQb3BwZXJfanNfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzNfXyA9IF9fd2VicGFja19yZXF1aXJlX18oLyohIC4vY3JlYXRlUG9wcGVyLmpzICovICIuL25vZGVfbW9kdWxlcy9AcG9wcGVyanMvY29yZS9saWIvdXRpbHMvZGV0ZWN0T3ZlcmZsb3cuanMiKTsKLyogaGFybW9ueSBpbXBvcnQgKi8gdmFyIF9wb3BwZXJfanNfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzRfXyA9IF9fd2VicGFja19yZXF1aXJlX18oLyohIC4vcG9wcGVyLmpzICovICIuL25vZGVfbW9kdWxlcy9AcG9wcGVyanMvY29yZS9saWIvcG9wcGVyLmpzIik7Ci8qIGhhcm1vbnkgaW1wb3J0ICovIHZhciBfcG9wcGVyX2xpdGVfanNfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzVfXyA9IF9fd2VicGFja19yZXF1aXJlX18oLyohIC4vcG9wcGVyLWxpdGUuanMgKi8gIi4vbm9kZV9tb2R1bGVzL0Bwb3BwZXJqcy9jb3JlL2xpYi9wb3BwZXItbGl0ZS5qcyIpOwoKIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBpbXBvcnQvbm8tdW51c2VkLW1vZHVsZXMKCiAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgaW1wb3J0L25vLXVudXNlZC1tb2R1bGVzCgogLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIGltcG9ydC9uby11bnVzZWQtbW9kdWxlcwoKCgovKioqLyB9KSwKCi8qKiovICIuL25vZGVfbW9kdWxlcy9AcG9wcGVyanMvY29yZS9saWIvbW9kaWZpZXJzL2FwcGx5U3R5bGVzLmpzIjoKLyohKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqISpcCiAgISoqKiAuL25vZGVfbW9kdWxlcy9AcG9wcGVyanMvY29yZS9saWIvbW9kaWZpZXJzL2FwcGx5U3R5bGVzLmpzICoqKiEKICBcKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqLwovKioqLyAoZnVuY3Rpb24oX191bnVzZWRfd2VicGFja19tb2R1bGUsIF9fd2VicGFja19leHBvcnRzX18sIF9fd2VicGFja19yZXF1aXJlX18pIHsKCiJ1c2Ugc3RyaWN0IjsKX193ZWJwYWNrX3JlcXVpcmVfXy5yKF9fd2VicGFja19leHBvcnRzX18pOwovKiBoYXJtb255IGltcG9ydCAqLyB2YXIgX2RvbV91dGlsc19nZXROb2RlTmFtZV9qc19fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMV9fID0gX193ZWJwYWNrX3JlcXVpcmVfXygvKiEgLi4vZG9tLXV0aWxzL2dldE5vZGVOYW1lLmpzICovICIuL25vZGVfbW9kdWxlcy9AcG9wcGVyanMvY29yZS9saWIvZG9tLXV0aWxzL2dldE5vZGVOYW1lLmpzIik7Ci8qIGhhcm1vbnkgaW1wb3J0ICovIHZhciBfZG9tX3V0aWxzX2luc3RhbmNlT2ZfanNfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzBfXyA9IF9fd2VicGFja19yZXF1aXJlX18oLyohIC4uL2RvbS11dGlscy9pbnN0YW5jZU9mLmpzICovICIuL25vZGVfbW9kdWxlcy9AcG9wcGVyanMvY29yZS9saWIvZG9tLXV0aWxzL2luc3RhbmNlT2YuanMiKTsKCiAvLyBUaGlzIG1vZGlmaWVyIHRha2VzIHRoZSBzdHlsZXMgcHJlcGFyZWQgYnkgdGhlIGBjb21wdXRlU3R5bGVzYCBtb2RpZmllcgovLyBhbmQgYXBwbGllcyB0aGVtIHRvIHRoZSBIVE1MRWxlbWVudHMgc3VjaCBhcyBwb3BwZXIgYW5kIGFycm93CgpmdW5jdGlvbiBhcHBseVN0eWxlcyhfcmVmKSB7CiAgdmFyIHN0YXRlID0gX3JlZi5zdGF0ZTsKICBPYmplY3Qua2V5cyhzdGF0ZS5lbGVtZW50cykuZm9yRWFjaChmdW5jdGlvbiAobmFtZSkgewogICAgdmFyIHN0eWxlID0gc3RhdGUuc3R5bGVzW25hbWVdIHx8IHt9OwogICAgdmFyIGF0dHJpYnV0ZXMgPSBzdGF0ZS5hdHRyaWJ1dGVzW25hbWVdIHx8IHt9OwogICAgdmFyIGVsZW1lbnQgPSBzdGF0ZS5lbGVtZW50c1tuYW1lXTsgLy8gYXJyb3cgaXMgb3B0aW9uYWwgKyB2aXJ0dWFsIGVsZW1lbnRzCgogICAgaWYgKCEoMCxfZG9tX3V0aWxzX2luc3RhbmNlT2ZfanNfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzBfXy5pc0hUTUxFbGVtZW50KShlbGVtZW50KSB8fCAhKDAsX2RvbV91dGlsc19nZXROb2RlTmFtZV9qc19fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMV9fWyJkZWZhdWx0Il0pKGVsZW1lbnQpKSB7CiAgICAgIHJldHVybjsKICAgIH0gLy8gRmxvdyBkb2Vzbid0IHN1cHBvcnQgdG8gZXh0ZW5kIHRoaXMgcHJvcGVydHksIGJ1dCBpdCdzIHRoZSBtb3N0CiAgICAvLyBlZmZlY3RpdmUgd2F5IHRvIGFwcGx5IHN0eWxlcyB0byBhbiBIVE1MRWxlbWVudAogICAgLy8gJEZsb3dGaXhNZVtjYW5ub3Qtd3JpdGVdCgoKICAgIE9iamVjdC5hc3NpZ24oZWxlbWVudC5zdHlsZSwgc3R5bGUpOwogICAgT2JqZWN0LmtleXMoYXR0cmlidXRlcykuZm9yRWFjaChmdW5jdGlvbiAobmFtZSkgewogICAgICB2YXIgdmFsdWUgPSBhdHRyaWJ1dGVzW25hbWVdOwoKICAgICAgaWYgKHZhbHVlID09PSBmYWxzZSkgewogICAgICAgIGVsZW1lbnQucmVtb3ZlQXR0cmlidXRlKG5hbWUpOwogICAgICB9IGVsc2UgewogICAgICAgIGVsZW1lbnQuc2V0QXR0cmlidXRlKG5hbWUsIHZhbHVlID09PSB0cnVlID8gJycgOiB2YWx1ZSk7CiAgICAgIH0KICAgIH0pOwogIH0pOwp9CgpmdW5jdGlvbiBlZmZlY3QoX3JlZjIpIHsKICB2YXIgc3RhdGUgPSBfcmVmMi5zdGF0ZTsKICB2YXIgaW5pdGlhbFN0eWxlcyA9IHsKICAgIHBvcHBlcjogewogICAgICBwb3NpdGlvbjogc3RhdGUub3B0aW9ucy5zdHJhdGVneSwKICAgICAgbGVmdDogJzAnLAogICAgICB0b3A6ICcwJywKICAgICAgbWFyZ2luOiAnMCcKICAgIH0sCiAgICBhcnJvdzogewogICAgICBwb3NpdGlvbjogJ2Fic29sdXRlJwogICAgfSwKICAgIHJlZmVyZW5jZToge30KICB9OwogIE9iamVjdC5hc3NpZ24oc3RhdGUuZWxlbWVudHMucG9wcGVyLnN0eWxlLCBpbml0aWFsU3R5bGVzLnBvcHBlcik7CiAgc3RhdGUuc3R5bGVzID0gaW5pdGlhbFN0eWxlczsKCiAgaWYgKHN0YXRlLmVsZW1lbnRzLmFycm93KSB7CiAgICBPYmplY3QuYXNzaWduKHN0YXRlLmVsZW1lbnRzLmFycm93LnN0eWxlLCBpbml0aWFsU3R5bGVzLmFycm93KTsKICB9CgogIHJldHVybiBmdW5jdGlvbiAoKSB7CiAgICBPYmplY3Qua2V5cyhzdGF0ZS5lbGVtZW50cykuZm9yRWFjaChmdW5jdGlvbiAobmFtZSkgewogICAgICB2YXIgZWxlbWVudCA9IHN0YXRlLmVsZW1lbnRzW25hbWVdOwogICAgICB2YXIgYXR0cmlidXRlcyA9IHN0YXRlLmF0dHJpYnV0ZXNbbmFtZV0gfHwge307CiAgICAgIHZhciBzdHlsZVByb3BlcnRpZXMgPSBPYmplY3Qua2V5cyhzdGF0ZS5zdHlsZXMuaGFzT3duUHJvcGVydHkobmFtZSkgPyBzdGF0ZS5zdHlsZXNbbmFtZV0gOiBpbml0aWFsU3R5bGVzW25hbWVdKTsgLy8gU2V0IGFsbCB2YWx1ZXMgdG8gYW4gZW1wdHkgc3RyaW5nIHRvIHVuc2V0IHRoZW0KCiAgICAgIHZhciBzdHlsZSA9IHN0eWxlUHJvcGVydGllcy5yZWR1Y2UoZnVuY3Rpb24gKHN0eWxlLCBwcm9wZXJ0eSkgewogICAgICAgIHN0eWxlW3Byb3BlcnR5XSA9ICcnOwogICAgICAgIHJldHVybiBzdHlsZTsKICAgICAgfSwge30pOyAvLyBhcnJvdyBpcyBvcHRpb25hbCArIHZpcnR1YWwgZWxlbWVudHMKCiAgICAgIGlmICghKDAsX2RvbV91dGlsc19pbnN0YW5jZU9mX2pzX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8wX18uaXNIVE1MRWxlbWVudCkoZWxlbWVudCkgfHwgISgwLF9kb21fdXRpbHNfZ2V0Tm9kZU5hbWVfanNfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzFfX1siZGVmYXVsdCJdKShlbGVtZW50KSkgewogICAgICAgIHJldHVybjsKICAgICAgfQoKICAgICAgT2JqZWN0LmFzc2lnbihlbGVtZW50LnN0eWxlLCBzdHlsZSk7CiAgICAgIE9iamVjdC5rZXlzKGF0dHJpYnV0ZXMpLmZvckVhY2goZnVuY3Rpb24gKGF0dHJpYnV0ZSkgewogICAgICAgIGVsZW1lbnQucmVtb3ZlQXR0cmlidXRlKGF0dHJpYnV0ZSk7CiAgICAgIH0pOwogICAgfSk7CiAgfTsKfSAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgaW1wb3J0L25vLXVudXNlZC1tb2R1bGVzCgoKLyogaGFybW9ueSBkZWZhdWx0IGV4cG9ydCAqLyBfX3dlYnBhY2tfZXhwb3J0c19fWyJkZWZhdWx0Il0gPSAoewogIG5hbWU6ICdhcHBseVN0eWxlcycsCiAgZW5hYmxlZDogdHJ1ZSwKICBwaGFzZTogJ3dyaXRlJywKICBmbjogYXBwbHlTdHlsZXMsCiAgZWZmZWN0OiBlZmZlY3QsCiAgcmVxdWlyZXM6IFsnY29tcHV0ZVN0eWxlcyddCn0pOwoKLyoqKi8gfSksCgovKioqLyAiLi9ub2RlX21vZHVsZXMvQHBvcHBlcmpzL2NvcmUvbGliL21vZGlmaWVycy9hcnJvdy5qcyI6Ci8qISoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiEqXAogICEqKiogLi9ub2RlX21vZHVsZXMvQHBvcHBlcmpzL2NvcmUvbGliL21vZGlmaWVycy9hcnJvdy5qcyAqKiohCiAgXCoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKi8KLyoqKi8gKGZ1bmN0aW9uKF9fdW51c2VkX3dlYnBhY2tfbW9kdWxlLCBfX3dlYnBhY2tfZXhwb3J0c19fLCBfX3dlYnBhY2tfcmVxdWlyZV9fKSB7CgoidXNlIHN0cmljdCI7Cl9fd2VicGFja19yZXF1aXJlX18ucihfX3dlYnBhY2tfZXhwb3J0c19fKTsKLyogaGFybW9ueSBpbXBvcnQgKi8gdmFyIF91dGlsc19nZXRCYXNlUGxhY2VtZW50X2pzX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8zX18gPSBfX3dlYnBhY2tfcmVxdWlyZV9fKC8qISAuLi91dGlscy9nZXRCYXNlUGxhY2VtZW50LmpzICovICIuL25vZGVfbW9kdWxlcy9AcG9wcGVyanMvY29yZS9saWIvdXRpbHMvZ2V0QmFzZVBsYWNlbWVudC5qcyIpOwovKiBoYXJtb255IGltcG9ydCAqLyB2YXIgX2RvbV91dGlsc19nZXRMYXlvdXRSZWN0X2pzX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV81X18gPSBfX3dlYnBhY2tfcmVxdWlyZV9fKC8qISAuLi9kb20tdXRpbHMvZ2V0TGF5b3V0UmVjdC5qcyAqLyAiLi9ub2RlX21vZHVsZXMvQHBvcHBlcmpzL2NvcmUvbGliL2RvbS11dGlscy9nZXRMYXlvdXRSZWN0LmpzIik7Ci8qIGhhcm1vbnkgaW1wb3J0ICovIHZhciBfZG9tX3V0aWxzX2NvbnRhaW5zX2pzX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV85X18gPSBfX3dlYnBhY2tfcmVxdWlyZV9fKC8qISAuLi9kb20tdXRpbHMvY29udGFpbnMuanMgKi8gIi4vbm9kZV9tb2R1bGVzL0Bwb3BwZXJqcy9jb3JlL2xpYi9kb20tdXRpbHMvY29udGFpbnMuanMiKTsKLyogaGFybW9ueSBpbXBvcnQgKi8gdmFyIF9kb21fdXRpbHNfZ2V0T2Zmc2V0UGFyZW50X2pzX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV82X18gPSBfX3dlYnBhY2tfcmVxdWlyZV9fKC8qISAuLi9kb20tdXRpbHMvZ2V0T2Zmc2V0UGFyZW50LmpzICovICIuL25vZGVfbW9kdWxlcy9AcG9wcGVyanMvY29yZS9saWIvZG9tLXV0aWxzL2dldE9mZnNldFBhcmVudC5qcyIpOwovKiBoYXJtb255IGltcG9ydCAqLyB2YXIgX3V0aWxzX2dldE1haW5BeGlzRnJvbVBsYWNlbWVudF9qc19fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfNF9fID0gX193ZWJwYWNrX3JlcXVpcmVfXygvKiEgLi4vdXRpbHMvZ2V0TWFpbkF4aXNGcm9tUGxhY2VtZW50LmpzICovICIuL25vZGVfbW9kdWxlcy9AcG9wcGVyanMvY29yZS9saWIvdXRpbHMvZ2V0TWFpbkF4aXNGcm9tUGxhY2VtZW50LmpzIik7Ci8qIGhhcm1vbnkgaW1wb3J0ICovIHZhciBfdXRpbHNfd2l0aGluX2pzX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV83X18gPSBfX3dlYnBhY2tfcmVxdWlyZV9fKC8qISAuLi91dGlscy93aXRoaW4uanMgKi8gIi4vbm9kZV9tb2R1bGVzL0Bwb3BwZXJqcy9jb3JlL2xpYi91dGlscy93aXRoaW4uanMiKTsKLyogaGFybW9ueSBpbXBvcnQgKi8gdmFyIF91dGlsc19tZXJnZVBhZGRpbmdPYmplY3RfanNfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzBfXyA9IF9fd2VicGFja19yZXF1aXJlX18oLyohIC4uL3V0aWxzL21lcmdlUGFkZGluZ09iamVjdC5qcyAqLyAiLi9ub2RlX21vZHVsZXMvQHBvcHBlcmpzL2NvcmUvbGliL3V0aWxzL21lcmdlUGFkZGluZ09iamVjdC5qcyIpOwovKiBoYXJtb255IGltcG9ydCAqLyB2YXIgX3V0aWxzX2V4cGFuZFRvSGFzaE1hcF9qc19fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMV9fID0gX193ZWJwYWNrX3JlcXVpcmVfXygvKiEgLi4vdXRpbHMvZXhwYW5kVG9IYXNoTWFwLmpzICovICIuL25vZGVfbW9kdWxlcy9AcG9wcGVyanMvY29yZS9saWIvdXRpbHMvZXhwYW5kVG9IYXNoTWFwLmpzIik7Ci8qIGhhcm1vbnkgaW1wb3J0ICovIHZhciBfZW51bXNfanNfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzJfXyA9IF9fd2VicGFja19yZXF1aXJlX18oLyohIC4uL2VudW1zLmpzICovICIuL25vZGVfbW9kdWxlcy9AcG9wcGVyanMvY29yZS9saWIvZW51bXMuanMiKTsKLyogaGFybW9ueSBpbXBvcnQgKi8gdmFyIF9kb21fdXRpbHNfaW5zdGFuY2VPZl9qc19fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfOF9fID0gX193ZWJwYWNrX3JlcXVpcmVfXygvKiEgLi4vZG9tLXV0aWxzL2luc3RhbmNlT2YuanMgKi8gIi4vbm9kZV9tb2R1bGVzL0Bwb3BwZXJqcy9jb3JlL2xpYi9kb20tdXRpbHMvaW5zdGFuY2VPZi5qcyIpOwoKCgoKCgoKCgogLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIGltcG9ydC9uby11bnVzZWQtbW9kdWxlcwoKdmFyIHRvUGFkZGluZ09iamVjdCA9IGZ1bmN0aW9uIHRvUGFkZGluZ09iamVjdChwYWRkaW5nLCBzdGF0ZSkgewogIHBhZGRpbmcgPSB0eXBlb2YgcGFkZGluZyA9PT0gJ2Z1bmN0aW9uJyA/IHBhZGRpbmcoT2JqZWN0LmFzc2lnbih7fSwgc3RhdGUucmVjdHMsIHsKICAgIHBsYWNlbWVudDogc3RhdGUucGxhY2VtZW50CiAgfSkpIDogcGFkZGluZzsKICByZXR1cm4gKDAsX3V0aWxzX21lcmdlUGFkZGluZ09iamVjdF9qc19fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMF9fWyJkZWZhdWx0Il0pKHR5cGVvZiBwYWRkaW5nICE9PSAnbnVtYmVyJyA/IHBhZGRpbmcgOiAoMCxfdXRpbHNfZXhwYW5kVG9IYXNoTWFwX2pzX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8xX19bImRlZmF1bHQiXSkocGFkZGluZywgX2VudW1zX2pzX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8yX18uYmFzZVBsYWNlbWVudHMpKTsKfTsKCmZ1bmN0aW9uIGFycm93KF9yZWYpIHsKICB2YXIgX3N0YXRlJG1vZGlmaWVyc0RhdGEkOwoKICB2YXIgc3RhdGUgPSBfcmVmLnN0YXRlLAogICAgICBuYW1lID0gX3JlZi5uYW1lLAogICAgICBvcHRpb25zID0gX3JlZi5vcHRpb25zOwogIHZhciBhcnJvd0VsZW1lbnQgPSBzdGF0ZS5lbGVtZW50cy5hcnJvdzsKICB2YXIgcG9wcGVyT2Zmc2V0cyA9IHN0YXRlLm1vZGlmaWVyc0RhdGEucG9wcGVyT2Zmc2V0czsKICB2YXIgYmFzZVBsYWNlbWVudCA9ICgwLF91dGlsc19nZXRCYXNlUGxhY2VtZW50X2pzX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8zX19bImRlZmF1bHQiXSkoc3RhdGUucGxhY2VtZW50KTsKICB2YXIgYXhpcyA9ICgwLF91dGlsc19nZXRNYWluQXhpc0Zyb21QbGFjZW1lbnRfanNfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzRfX1siZGVmYXVsdCJdKShiYXNlUGxhY2VtZW50KTsKICB2YXIgaXNWZXJ0aWNhbCA9IFtfZW51bXNfanNfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzJfXy5sZWZ0LCBfZW51bXNfanNfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzJfXy5yaWdodF0uaW5kZXhPZihiYXNlUGxhY2VtZW50KSA+PSAwOwogIHZhciBsZW4gPSBpc1ZlcnRpY2FsID8gJ2hlaWdodCcgOiAnd2lkdGgnOwoKICBpZiAoIWFycm93RWxlbWVudCB8fCAhcG9wcGVyT2Zmc2V0cykgewogICAgcmV0dXJuOwogIH0KCiAgdmFyIHBhZGRpbmdPYmplY3QgPSB0b1BhZGRpbmdPYmplY3Qob3B0aW9ucy5wYWRkaW5nLCBzdGF0ZSk7CiAgdmFyIGFycm93UmVjdCA9ICgwLF9kb21fdXRpbHNfZ2V0TGF5b3V0UmVjdF9qc19fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfNV9fWyJkZWZhdWx0Il0pKGFycm93RWxlbWVudCk7CiAgdmFyIG1pblByb3AgPSBheGlzID09PSAneScgPyBfZW51bXNfanNfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzJfXy50b3AgOiBfZW51bXNfanNfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzJfXy5sZWZ0OwogIHZhciBtYXhQcm9wID0gYXhpcyA9PT0gJ3knID8gX2VudW1zX2pzX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8yX18uYm90dG9tIDogX2VudW1zX2pzX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8yX18ucmlnaHQ7CiAgdmFyIGVuZERpZmYgPSBzdGF0ZS5yZWN0cy5yZWZlcmVuY2VbbGVuXSArIHN0YXRlLnJlY3RzLnJlZmVyZW5jZVtheGlzXSAtIHBvcHBlck9mZnNldHNbYXhpc10gLSBzdGF0ZS5yZWN0cy5wb3BwZXJbbGVuXTsKICB2YXIgc3RhcnREaWZmID0gcG9wcGVyT2Zmc2V0c1theGlzXSAtIHN0YXRlLnJlY3RzLnJlZmVyZW5jZVtheGlzXTsKICB2YXIgYXJyb3dPZmZzZXRQYXJlbnQgPSAoMCxfZG9tX3V0aWxzX2dldE9mZnNldFBhcmVudF9qc19fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfNl9fWyJkZWZhdWx0Il0pKGFycm93RWxlbWVudCk7CiAgdmFyIGNsaWVudFNpemUgPSBhcnJvd09mZnNldFBhcmVudCA/IGF4aXMgPT09ICd5JyA/IGFycm93T2Zmc2V0UGFyZW50LmNsaWVudEhlaWdodCB8fCAwIDogYXJyb3dPZmZzZXRQYXJlbnQuY2xpZW50V2lkdGggfHwgMCA6IDA7CiAgdmFyIGNlbnRlclRvUmVmZXJlbmNlID0gZW5kRGlmZiAvIDIgLSBzdGFydERpZmYgLyAyOyAvLyBNYWtlIHN1cmUgdGhlIGFycm93IGRvZXNuJ3Qgb3ZlcmZsb3cgdGhlIHBvcHBlciBpZiB0aGUgY2VudGVyIHBvaW50IGlzCiAgLy8gb3V0c2lkZSBvZiB0aGUgcG9wcGVyIGJvdW5kcwoKICB2YXIgbWluID0gcGFkZGluZ09iamVjdFttaW5Qcm9wXTsKICB2YXIgbWF4ID0gY2xpZW50U2l6ZSAtIGFycm93UmVjdFtsZW5dIC0gcGFkZGluZ09iamVjdFttYXhQcm9wXTsKICB2YXIgY2VudGVyID0gY2xpZW50U2l6ZSAvIDIgLSBhcnJvd1JlY3RbbGVuXSAvIDIgKyBjZW50ZXJUb1JlZmVyZW5jZTsKICB2YXIgb2Zmc2V0ID0gKDAsX3V0aWxzX3dpdGhpbl9qc19fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfN19fLndpdGhpbikobWluLCBjZW50ZXIsIG1heCk7IC8vIFByZXZlbnRzIGJyZWFraW5nIHN5bnRheCBoaWdobGlnaHRpbmcuLi4KCiAgdmFyIGF4aXNQcm9wID0gYXhpczsKICBzdGF0ZS5tb2RpZmllcnNEYXRhW25hbWVdID0gKF9zdGF0ZSRtb2RpZmllcnNEYXRhJCA9IHt9LCBfc3RhdGUkbW9kaWZpZXJzRGF0YSRbYXhpc1Byb3BdID0gb2Zmc2V0LCBfc3RhdGUkbW9kaWZpZXJzRGF0YSQuY2VudGVyT2Zmc2V0ID0gb2Zmc2V0IC0gY2VudGVyLCBfc3RhdGUkbW9kaWZpZXJzRGF0YSQpOwp9CgpmdW5jdGlvbiBlZmZlY3QoX3JlZjIpIHsKICB2YXIgc3RhdGUgPSBfcmVmMi5zdGF0ZSwKICAgICAgb3B0aW9ucyA9IF9yZWYyLm9wdGlvbnM7CiAgdmFyIF9vcHRpb25zJGVsZW1lbnQgPSBvcHRpb25zLmVsZW1lbnQsCiAgICAgIGFycm93RWxlbWVudCA9IF9vcHRpb25zJGVsZW1lbnQgPT09IHZvaWQgMCA/ICdbZGF0YS1wb3BwZXItYXJyb3ddJyA6IF9vcHRpb25zJGVsZW1lbnQ7CgogIGlmIChhcnJvd0VsZW1lbnQgPT0gbnVsbCkgewogICAgcmV0dXJuOwogIH0gLy8gQ1NTIHNlbGVjdG9yCgoKICBpZiAodHlwZW9mIGFycm93RWxlbWVudCA9PT0gJ3N0cmluZycpIHsKICAgIGFycm93RWxlbWVudCA9IHN0YXRlLmVsZW1lbnRzLnBvcHBlci5xdWVyeVNlbGVjdG9yKGFycm93RWxlbWVudCk7CgogICAgaWYgKCFhcnJvd0VsZW1lbnQpIHsKICAgICAgcmV0dXJuOwogICAgfQogIH0KCiAgaWYgKHRydWUpIHsKICAgIGlmICghKDAsX2RvbV91dGlsc19pbnN0YW5jZU9mX2pzX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV84X18uaXNIVE1MRWxlbWVudCkoYXJyb3dFbGVtZW50KSkgewogICAgICBjb25zb2xlLmVycm9yKFsnUG9wcGVyOiAiYXJyb3ciIGVsZW1lbnQgbXVzdCBiZSBhbiBIVE1MRWxlbWVudCAobm90IGFuIFNWR0VsZW1lbnQpLicsICdUbyB1c2UgYW4gU1ZHIGFycm93LCB3cmFwIGl0IGluIGFuIEhUTUxFbGVtZW50IHRoYXQgd2lsbCBiZSB1c2VkIGFzJywgJ3RoZSBhcnJvdy4nXS5qb2luKCcgJykpOwogICAgfQogIH0KCiAgaWYgKCEoMCxfZG9tX3V0aWxzX2NvbnRhaW5zX2pzX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV85X19bImRlZmF1bHQiXSkoc3RhdGUuZWxlbWVudHMucG9wcGVyLCBhcnJvd0VsZW1lbnQpKSB7CiAgICBpZiAodHJ1ZSkgewogICAgICBjb25zb2xlLmVycm9yKFsnUG9wcGVyOiAiYXJyb3ciIG1vZGlmaWVyXCdzIGBlbGVtZW50YCBtdXN0IGJlIGEgY2hpbGQgb2YgdGhlIHBvcHBlcicsICdlbGVtZW50LiddLmpvaW4oJyAnKSk7CiAgICB9CgogICAgcmV0dXJuOwogIH0KCiAgc3RhdGUuZWxlbWVudHMuYXJyb3cgPSBhcnJvd0VsZW1lbnQ7Cn0gLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIGltcG9ydC9uby11bnVzZWQtbW9kdWxlcwoKCi8qIGhhcm1vbnkgZGVmYXVsdCBleHBvcnQgKi8gX193ZWJwYWNrX2V4cG9ydHNfX1siZGVmYXVsdCJdID0gKHsKICBuYW1lOiAnYXJyb3cnLAogIGVuYWJsZWQ6IHRydWUsCiAgcGhhc2U6ICdtYWluJywKICBmbjogYXJyb3csCiAgZWZmZWN0OiBlZmZlY3QsCiAgcmVxdWlyZXM6IFsncG9wcGVyT2Zmc2V0cyddLAogIHJlcXVpcmVzSWZFeGlzdHM6IFsncHJldmVudE92ZXJmbG93J10KfSk7CgovKioqLyB9KSwKCi8qKiovICIuL25vZGVfbW9kdWxlcy9AcG9wcGVyanMvY29yZS9saWIvbW9kaWZpZXJzL2NvbXB1dGVTdHlsZXMuanMiOgovKiEqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiEqXAogICEqKiogLi9ub2RlX21vZHVsZXMvQHBvcHBlcmpzL2NvcmUvbGliL21vZGlmaWVycy9jb21wdXRlU3R5bGVzLmpzICoqKiEKICBcKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiovCi8qKiovIChmdW5jdGlvbihfX3VudXNlZF93ZWJwYWNrX21vZHVsZSwgX193ZWJwYWNrX2V4cG9ydHNfXywgX193ZWJwYWNrX3JlcXVpcmVfXykgewoKInVzZSBzdHJpY3QiOwpfX3dlYnBhY2tfcmVxdWlyZV9fLnIoX193ZWJwYWNrX2V4cG9ydHNfXyk7Ci8qIGhhcm1vbnkgZXhwb3J0ICovIF9fd2VicGFja19yZXF1aXJlX18uZChfX3dlYnBhY2tfZXhwb3J0c19fLCB7Ci8qIGhhcm1vbnkgZXhwb3J0ICovICAgIm1hcFRvU3R5bGVzIjogZnVuY3Rpb24oKSB7IHJldHVybiAvKiBiaW5kaW5nICovIG1hcFRvU3R5bGVzOyB9Ci8qIGhhcm1vbnkgZXhwb3J0ICovIH0pOwovKiBoYXJtb255IGltcG9ydCAqLyB2YXIgX2VudW1zX2pzX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8xX18gPSBfX3dlYnBhY2tfcmVxdWlyZV9fKC8qISAuLi9lbnVtcy5qcyAqLyAiLi9ub2RlX21vZHVsZXMvQHBvcHBlcmpzL2NvcmUvbGliL2VudW1zLmpzIik7Ci8qIGhhcm1vbnkgaW1wb3J0ICovIHZhciBfZG9tX3V0aWxzX2dldE9mZnNldFBhcmVudF9qc19fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMl9fID0gX193ZWJwYWNrX3JlcXVpcmVfXygvKiEgLi4vZG9tLXV0aWxzL2dldE9mZnNldFBhcmVudC5qcyAqLyAiLi9ub2RlX21vZHVsZXMvQHBvcHBlcmpzL2NvcmUvbGliL2RvbS11dGlscy9nZXRPZmZzZXRQYXJlbnQuanMiKTsKLyogaGFybW9ueSBpbXBvcnQgKi8gdmFyIF9kb21fdXRpbHNfZ2V0V2luZG93X2pzX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8zX18gPSBfX3dlYnBhY2tfcmVxdWlyZV9fKC8qISAuLi9kb20tdXRpbHMvZ2V0V2luZG93LmpzICovICIuL25vZGVfbW9kdWxlcy9AcG9wcGVyanMvY29yZS9saWIvZG9tLXV0aWxzL2dldFdpbmRvdy5qcyIpOwovKiBoYXJtb255IGltcG9ydCAqLyB2YXIgX2RvbV91dGlsc19nZXREb2N1bWVudEVsZW1lbnRfanNfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzRfXyA9IF9fd2VicGFja19yZXF1aXJlX18oLyohIC4uL2RvbS11dGlscy9nZXREb2N1bWVudEVsZW1lbnQuanMgKi8gIi4vbm9kZV9tb2R1bGVzL0Bwb3BwZXJqcy9jb3JlL2xpYi9kb20tdXRpbHMvZ2V0RG9jdW1lbnRFbGVtZW50LmpzIik7Ci8qIGhhcm1vbnkgaW1wb3J0ICovIHZhciBfZG9tX3V0aWxzX2dldENvbXB1dGVkU3R5bGVfanNfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzVfXyA9IF9fd2VicGFja19yZXF1aXJlX18oLyohIC4uL2RvbS11dGlscy9nZXRDb21wdXRlZFN0eWxlLmpzICovICIuL25vZGVfbW9kdWxlcy9AcG9wcGVyanMvY29yZS9saWIvZG9tLXV0aWxzL2dldENvbXB1dGVkU3R5bGUuanMiKTsKLyogaGFybW9ueSBpbXBvcnQgKi8gdmFyIF91dGlsc19nZXRCYXNlUGxhY2VtZW50X2pzX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV82X18gPSBfX3dlYnBhY2tfcmVxdWlyZV9fKC8qISAuLi91dGlscy9nZXRCYXNlUGxhY2VtZW50LmpzICovICIuL25vZGVfbW9kdWxlcy9AcG9wcGVyanMvY29yZS9saWIvdXRpbHMvZ2V0QmFzZVBsYWNlbWVudC5qcyIpOwovKiBoYXJtb255IGltcG9ydCAqLyB2YXIgX3V0aWxzX2dldFZhcmlhdGlvbl9qc19fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfN19fID0gX193ZWJwYWNrX3JlcXVpcmVfXygvKiEgLi4vdXRpbHMvZ2V0VmFyaWF0aW9uLmpzICovICIuL25vZGVfbW9kdWxlcy9AcG9wcGVyanMvY29yZS9saWIvdXRpbHMvZ2V0VmFyaWF0aW9uLmpzIik7Ci8qIGhhcm1vbnkgaW1wb3J0ICovIHZhciBfdXRpbHNfbWF0aF9qc19fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMF9fID0gX193ZWJwYWNrX3JlcXVpcmVfXygvKiEgLi4vdXRpbHMvbWF0aC5qcyAqLyAiLi9ub2RlX21vZHVsZXMvQHBvcHBlcmpzL2NvcmUvbGliL3V0aWxzL21hdGguanMiKTsKCgoKCgoKCiAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgaW1wb3J0L25vLXVudXNlZC1tb2R1bGVzCgp2YXIgdW5zZXRTaWRlcyA9IHsKICB0b3A6ICdhdXRvJywKICByaWdodDogJ2F1dG8nLAogIGJvdHRvbTogJ2F1dG8nLAogIGxlZnQ6ICdhdXRvJwp9OyAvLyBSb3VuZCB0aGUgb2Zmc2V0cyB0byB0aGUgbmVhcmVzdCBzdWl0YWJsZSBzdWJwaXhlbCBiYXNlZCBvbiB0aGUgRFBSLgovLyBab29taW5nIGNhbiBjaGFuZ2UgdGhlIERQUiwgYnV0IGl0IHNlZW1zIHRvIHJlcG9ydCBhIHZhbHVlIHRoYXQgd2lsbAovLyBjbGVhbmx5IGRpdmlkZSB0aGUgdmFsdWVzIGludG8gdGhlIGFwcHJvcHJpYXRlIHN1YnBpeGVscy4KCmZ1bmN0aW9uIHJvdW5kT2Zmc2V0c0J5RFBSKF9yZWYpIHsKICB2YXIgeCA9IF9yZWYueCwKICAgICAgeSA9IF9yZWYueTsKICB2YXIgd2luID0gd2luZG93OwogIHZhciBkcHIgPSB3aW4uZGV2aWNlUGl4ZWxSYXRpbyB8fCAxOwogIHJldHVybiB7CiAgICB4OiAoMCxfdXRpbHNfbWF0aF9qc19fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMF9fLnJvdW5kKSh4ICogZHByKSAvIGRwciB8fCAwLAogICAgeTogKDAsX3V0aWxzX21hdGhfanNfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzBfXy5yb3VuZCkoeSAqIGRwcikgLyBkcHIgfHwgMAogIH07Cn0KCmZ1bmN0aW9uIG1hcFRvU3R5bGVzKF9yZWYyKSB7CiAgdmFyIF9PYmplY3QkYXNzaWduMjsKCiAgdmFyIHBvcHBlciA9IF9yZWYyLnBvcHBlciwKICAgICAgcG9wcGVyUmVjdCA9IF9yZWYyLnBvcHBlclJlY3QsCiAgICAgIHBsYWNlbWVudCA9IF9yZWYyLnBsYWNlbWVudCwKICAgICAgdmFyaWF0aW9uID0gX3JlZjIudmFyaWF0aW9uLAogICAgICBvZmZzZXRzID0gX3JlZjIub2Zmc2V0cywKICAgICAgcG9zaXRpb24gPSBfcmVmMi5wb3NpdGlvbiwKICAgICAgZ3B1QWNjZWxlcmF0aW9uID0gX3JlZjIuZ3B1QWNjZWxlcmF0aW9uLAogICAgICBhZGFwdGl2ZSA9IF9yZWYyLmFkYXB0aXZlLAogICAgICByb3VuZE9mZnNldHMgPSBfcmVmMi5yb3VuZE9mZnNldHMsCiAgICAgIGlzRml4ZWQgPSBfcmVmMi5pc0ZpeGVkOwogIHZhciBfb2Zmc2V0cyR4ID0gb2Zmc2V0cy54LAogICAgICB4ID0gX29mZnNldHMkeCA9PT0gdm9pZCAwID8gMCA6IF9vZmZzZXRzJHgsCiAgICAgIF9vZmZzZXRzJHkgPSBvZmZzZXRzLnksCiAgICAgIHkgPSBfb2Zmc2V0cyR5ID09PSB2b2lkIDAgPyAwIDogX29mZnNldHMkeTsKCiAgdmFyIF9yZWYzID0gdHlwZW9mIHJvdW5kT2Zmc2V0cyA9PT0gJ2Z1bmN0aW9uJyA/IHJvdW5kT2Zmc2V0cyh7CiAgICB4OiB4LAogICAgeTogeQogIH0pIDogewogICAgeDogeCwKICAgIHk6IHkKICB9OwoKICB4ID0gX3JlZjMueDsKICB5ID0gX3JlZjMueTsKICB2YXIgaGFzWCA9IG9mZnNldHMuaGFzT3duUHJvcGVydHkoJ3gnKTsKICB2YXIgaGFzWSA9IG9mZnNldHMuaGFzT3duUHJvcGVydHkoJ3knKTsKICB2YXIgc2lkZVggPSBfZW51bXNfanNfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzFfXy5sZWZ0OwogIHZhciBzaWRlWSA9IF9lbnVtc19qc19fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMV9fLnRvcDsKICB2YXIgd2luID0gd2luZG93OwoKICBpZiAoYWRhcHRpdmUpIHsKICAgIHZhciBvZmZzZXRQYXJlbnQgPSAoMCxfZG9tX3V0aWxzX2dldE9mZnNldFBhcmVudF9qc19fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMl9fWyJkZWZhdWx0Il0pKHBvcHBlcik7CiAgICB2YXIgaGVpZ2h0UHJvcCA9ICdjbGllbnRIZWlnaHQnOwogICAgdmFyIHdpZHRoUHJvcCA9ICdjbGllbnRXaWR0aCc7CgogICAgaWYgKG9mZnNldFBhcmVudCA9PT0gKDAsX2RvbV91dGlsc19nZXRXaW5kb3dfanNfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzNfX1siZGVmYXVsdCJdKShwb3BwZXIpKSB7CiAgICAgIG9mZnNldFBhcmVudCA9ICgwLF9kb21fdXRpbHNfZ2V0RG9jdW1lbnRFbGVtZW50X2pzX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV80X19bImRlZmF1bHQiXSkocG9wcGVyKTsKCiAgICAgIGlmICgoMCxfZG9tX3V0aWxzX2dldENvbXB1dGVkU3R5bGVfanNfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzVfX1siZGVmYXVsdCJdKShvZmZzZXRQYXJlbnQpLnBvc2l0aW9uICE9PSAnc3RhdGljJyAmJiBwb3NpdGlvbiA9PT0gJ2Fic29sdXRlJykgewogICAgICAgIGhlaWdodFByb3AgPSAnc2Nyb2xsSGVpZ2h0JzsKICAgICAgICB3aWR0aFByb3AgPSAnc2Nyb2xsV2lkdGgnOwogICAgICB9CiAgICB9IC8vICRGbG93Rml4TWVbaW5jb21wYXRpYmxlLWNhc3RdOiBmb3JjZSB0eXBlIHJlZmluZW1lbnQsIHdlIGNvbXBhcmUgb2Zmc2V0UGFyZW50IHdpdGggd2luZG93IGFib3ZlLCBidXQgRmxvdyBkb2Vzbid0IGRldGVjdCBpdAoKCiAgICBvZmZzZXRQYXJlbnQgPSBvZmZzZXRQYXJlbnQ7CgogICAgaWYgKHBsYWNlbWVudCA9PT0gX2VudW1zX2pzX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8xX18udG9wIHx8IChwbGFjZW1lbnQgPT09IF9lbnVtc19qc19fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMV9fLmxlZnQgfHwgcGxhY2VtZW50ID09PSBfZW51bXNfanNfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzFfXy5yaWdodCkgJiYgdmFyaWF0aW9uID09PSBfZW51bXNfanNfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzFfXy5lbmQpIHsKICAgICAgc2lkZVkgPSBfZW51bXNfanNfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzFfXy5ib3R0b207CiAgICAgIHZhciBvZmZzZXRZID0gaXNGaXhlZCAmJiBvZmZzZXRQYXJlbnQgPT09IHdpbiAmJiB3aW4udmlzdWFsVmlld3BvcnQgPyB3aW4udmlzdWFsVmlld3BvcnQuaGVpZ2h0IDogLy8gJEZsb3dGaXhNZVtwcm9wLW1pc3NpbmddCiAgICAgIG9mZnNldFBhcmVudFtoZWlnaHRQcm9wXTsKICAgICAgeSAtPSBvZmZzZXRZIC0gcG9wcGVyUmVjdC5oZWlnaHQ7CiAgICAgIHkgKj0gZ3B1QWNjZWxlcmF0aW9uID8gMSA6IC0xOwogICAgfQoKICAgIGlmIChwbGFjZW1lbnQgPT09IF9lbnVtc19qc19fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMV9fLmxlZnQgfHwgKHBsYWNlbWVudCA9PT0gX2VudW1zX2pzX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8xX18udG9wIHx8IHBsYWNlbWVudCA9PT0gX2VudW1zX2pzX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8xX18uYm90dG9tKSAmJiB2YXJpYXRpb24gPT09IF9lbnVtc19qc19fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMV9fLmVuZCkgewogICAgICBzaWRlWCA9IF9lbnVtc19qc19fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMV9fLnJpZ2h0OwogICAgICB2YXIgb2Zmc2V0WCA9IGlzRml4ZWQgJiYgb2Zmc2V0UGFyZW50ID09PSB3aW4gJiYgd2luLnZpc3VhbFZpZXdwb3J0ID8gd2luLnZpc3VhbFZpZXdwb3J0LndpZHRoIDogLy8gJEZsb3dGaXhNZVtwcm9wLW1pc3NpbmddCiAgICAgIG9mZnNldFBhcmVudFt3aWR0aFByb3BdOwogICAgICB4IC09IG9mZnNldFggLSBwb3BwZXJSZWN0LndpZHRoOwogICAgICB4ICo9IGdwdUFjY2VsZXJhdGlvbiA/IDEgOiAtMTsKICAgIH0KICB9CgogIHZhciBjb21tb25TdHlsZXMgPSBPYmplY3QuYXNzaWduKHsKICAgIHBvc2l0aW9uOiBwb3NpdGlvbgogIH0sIGFkYXB0aXZlICYmIHVuc2V0U2lkZXMpOwoKICB2YXIgX3JlZjQgPSByb3VuZE9mZnNldHMgPT09IHRydWUgPyByb3VuZE9mZnNldHNCeURQUih7CiAgICB4OiB4LAogICAgeTogeQogIH0pIDogewogICAgeDogeCwKICAgIHk6IHkKICB9OwoKICB4ID0gX3JlZjQueDsKICB5ID0gX3JlZjQueTsKCiAgaWYgKGdwdUFjY2VsZXJhdGlvbikgewogICAgdmFyIF9PYmplY3QkYXNzaWduOwoKICAgIHJldHVybiBPYmplY3QuYXNzaWduKHt9LCBjb21tb25TdHlsZXMsIChfT2JqZWN0JGFzc2lnbiA9IHt9LCBfT2JqZWN0JGFzc2lnbltzaWRlWV0gPSBoYXNZID8gJzAnIDogJycsIF9PYmplY3QkYXNzaWduW3NpZGVYXSA9IGhhc1ggPyAnMCcgOiAnJywgX09iamVjdCRhc3NpZ24udHJhbnNmb3JtID0gKHdpbi5kZXZpY2VQaXhlbFJhdGlvIHx8IDEpIDw9IDEgPyAidHJhbnNsYXRlKCIgKyB4ICsgInB4LCAiICsgeSArICJweCkiIDogInRyYW5zbGF0ZTNkKCIgKyB4ICsgInB4LCAiICsgeSArICJweCwgMCkiLCBfT2JqZWN0JGFzc2lnbikpOwogIH0KCiAgcmV0dXJuIE9iamVjdC5hc3NpZ24oe30sIGNvbW1vblN0eWxlcywgKF9PYmplY3QkYXNzaWduMiA9IHt9LCBfT2JqZWN0JGFzc2lnbjJbc2lkZVldID0gaGFzWSA/IHkgKyAicHgiIDogJycsIF9PYmplY3QkYXNzaWduMltzaWRlWF0gPSBoYXNYID8geCArICJweCIgOiAnJywgX09iamVjdCRhc3NpZ24yLnRyYW5zZm9ybSA9ICcnLCBfT2JqZWN0JGFzc2lnbjIpKTsKfQoKZnVuY3Rpb24gY29tcHV0ZVN0eWxlcyhfcmVmNSkgewogIHZhciBzdGF0ZSA9IF9yZWY1LnN0YXRlLAogICAgICBvcHRpb25zID0gX3JlZjUub3B0aW9uczsKICB2YXIgX29wdGlvbnMkZ3B1QWNjZWxlcmF0ID0gb3B0aW9ucy5ncHVBY2NlbGVyYXRpb24sCiAgICAgIGdwdUFjY2VsZXJhdGlvbiA9IF9vcHRpb25zJGdwdUFjY2VsZXJhdCA9PT0gdm9pZCAwID8gdHJ1ZSA6IF9vcHRpb25zJGdwdUFjY2VsZXJhdCwKICAgICAgX29wdGlvbnMkYWRhcHRpdmUgPSBvcHRpb25zLmFkYXB0aXZlLAogICAgICBhZGFwdGl2ZSA9IF9vcHRpb25zJGFkYXB0aXZlID09PSB2b2lkIDAgPyB0cnVlIDogX29wdGlvbnMkYWRhcHRpdmUsCiAgICAgIF9vcHRpb25zJHJvdW5kT2Zmc2V0cyA9IG9wdGlvbnMucm91bmRPZmZzZXRzLAogICAgICByb3VuZE9mZnNldHMgPSBfb3B0aW9ucyRyb3VuZE9mZnNldHMgPT09IHZvaWQgMCA/IHRydWUgOiBfb3B0aW9ucyRyb3VuZE9mZnNldHM7CgogIGlmICh0cnVlKSB7CiAgICB2YXIgdHJhbnNpdGlvblByb3BlcnR5ID0gKDAsX2RvbV91dGlsc19nZXRDb21wdXRlZFN0eWxlX2pzX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV81X19bImRlZmF1bHQiXSkoc3RhdGUuZWxlbWVudHMucG9wcGVyKS50cmFuc2l0aW9uUHJvcGVydHkgfHwgJyc7CgogICAgaWYgKGFkYXB0aXZlICYmIFsndHJhbnNmb3JtJywgJ3RvcCcsICdyaWdodCcsICdib3R0b20nLCAnbGVmdCddLnNvbWUoZnVuY3Rpb24gKHByb3BlcnR5KSB7CiAgICAgIHJldHVybiB0cmFuc2l0aW9uUHJvcGVydHkuaW5kZXhPZihwcm9wZXJ0eSkgPj0gMDsKICAgIH0pKSB7CiAgICAgIGNvbnNvbGUud2FybihbJ1BvcHBlcjogRGV0ZWN0ZWQgQ1NTIHRyYW5zaXRpb25zIG9uIGF0IGxlYXN0IG9uZSBvZiB0aGUgZm9sbG93aW5nJywgJ0NTUyBwcm9wZXJ0aWVzOiAidHJhbnNmb3JtIiwgInRvcCIsICJyaWdodCIsICJib3R0b20iLCAibGVmdCIuJywgJ1xuXG4nLCAnRGlzYWJsZSB0aGUgImNvbXB1dGVTdHlsZXMiIG1vZGlmaWVyXCdzIGBhZGFwdGl2ZWAgb3B0aW9uIHRvIGFsbG93JywgJ2ZvciBzbW9vdGggdHJhbnNpdGlvbnMsIG9yIHJlbW92ZSB0aGVzZSBwcm9wZXJ0aWVzIGZyb20gdGhlIENTUycsICd0cmFuc2l0aW9uIGRlY2xhcmF0aW9uIG9uIHRoZSBwb3BwZXIgZWxlbWVudCBpZiBvbmx5IHRyYW5zaXRpb25pbmcnLCAnb3BhY2l0eSBvciBiYWNrZ3JvdW5kLWNvbG9yIGZvciBleGFtcGxlLicsICdcblxuJywgJ1dlIHJlY29tbWVuZCB1c2luZyB0aGUgcG9wcGVyIGVsZW1lbnQgYXMgYSB3cmFwcGVyIGFyb3VuZCBhbiBpbm5lcicsICdlbGVtZW50IHRoYXQgY2FuIGhhdmUgYW55IENTUyBwcm9wZXJ0eSB0cmFuc2l0aW9uZWQgZm9yIGFuaW1hdGlvbnMuJ10uam9pbignICcpKTsKICAgIH0KICB9CgogIHZhciBjb21tb25TdHlsZXMgPSB7CiAgICBwbGFjZW1lbnQ6ICgwLF91dGlsc19nZXRCYXNlUGxhY2VtZW50X2pzX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV82X19bImRlZmF1bHQiXSkoc3RhdGUucGxhY2VtZW50KSwKICAgIHZhcmlhdGlvbjogKDAsX3V0aWxzX2dldFZhcmlhdGlvbl9qc19fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfN19fWyJkZWZhdWx0Il0pKHN0YXRlLnBsYWNlbWVudCksCiAgICBwb3BwZXI6IHN0YXRlLmVsZW1lbnRzLnBvcHBlciwKICAgIHBvcHBlclJlY3Q6IHN0YXRlLnJlY3RzLnBvcHBlciwKICAgIGdwdUFjY2VsZXJhdGlvbjogZ3B1QWNjZWxlcmF0aW9uLAogICAgaXNGaXhlZDogc3RhdGUub3B0aW9ucy5zdHJhdGVneSA9PT0gJ2ZpeGVkJwogIH07CgogIGlmIChzdGF0ZS5tb2RpZmllcnNEYXRhLnBvcHBlck9mZnNldHMgIT0gbnVsbCkgewogICAgc3RhdGUuc3R5bGVzLnBvcHBlciA9IE9iamVjdC5hc3NpZ24oe30sIHN0YXRlLnN0eWxlcy5wb3BwZXIsIG1hcFRvU3R5bGVzKE9iamVjdC5hc3NpZ24oe30sIGNvbW1vblN0eWxlcywgewogICAgICBvZmZzZXRzOiBzdGF0ZS5tb2RpZmllcnNEYXRhLnBvcHBlck9mZnNldHMsCiAgICAgIHBvc2l0aW9uOiBzdGF0ZS5vcHRpb25zLnN0cmF0ZWd5LAogICAgICBhZGFwdGl2ZTogYWRhcHRpdmUsCiAgICAgIHJvdW5kT2Zmc2V0czogcm91bmRPZmZzZXRzCiAgICB9KSkpOwogIH0KCiAgaWYgKHN0YXRlLm1vZGlmaWVyc0RhdGEuYXJyb3cgIT0gbnVsbCkgewogICAgc3RhdGUuc3R5bGVzLmFycm93ID0gT2JqZWN0LmFzc2lnbih7fSwgc3RhdGUuc3R5bGVzLmFycm93LCBtYXBUb1N0eWxlcyhPYmplY3QuYXNzaWduKHt9LCBjb21tb25TdHlsZXMsIHsKICAgICAgb2Zmc2V0czogc3RhdGUubW9kaWZpZXJzRGF0YS5hcnJvdywKICAgICAgcG9zaXRpb246ICdhYnNvbHV0ZScsCiAgICAgIGFkYXB0aXZlOiBmYWxzZSwKICAgICAgcm91bmRPZmZzZXRzOiByb3VuZE9mZnNldHMKICAgIH0pKSk7CiAgfQoKICBzdGF0ZS5hdHRyaWJ1dGVzLnBvcHBlciA9IE9iamVjdC5hc3NpZ24oe30sIHN0YXRlLmF0dHJpYnV0ZXMucG9wcGVyLCB7CiAgICAnZGF0YS1wb3BwZXItcGxhY2VtZW50Jzogc3RhdGUucGxhY2VtZW50CiAgfSk7Cn0gLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIGltcG9ydC9uby11bnVzZWQtbW9kdWxlcwoKCi8qIGhhcm1vbnkgZGVmYXVsdCBleHBvcnQgKi8gX193ZWJwYWNrX2V4cG9ydHNfX1siZGVmYXVsdCJdID0gKHsKICBuYW1lOiAnY29tcHV0ZVN0eWxlcycsCiAgZW5hYmxlZDogdHJ1ZSwKICBwaGFzZTogJ2JlZm9yZVdyaXRlJywKICBmbjogY29tcHV0ZVN0eWxlcywKICBkYXRhOiB7fQp9KTsKCi8qKiovIH0pLAoKLyoqKi8gIi4vbm9kZV9tb2R1bGVzL0Bwb3BwZXJqcy9jb3JlL2xpYi9tb2RpZmllcnMvZXZlbnRMaXN0ZW5lcnMuanMiOgovKiEqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiohKlwKICAhKioqIC4vbm9kZV9tb2R1bGVzL0Bwb3BwZXJqcy9jb3JlL2xpYi9tb2RpZmllcnMvZXZlbnRMaXN0ZW5lcnMuanMgKioqIQogIFwqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiovCi8qKiovIChmdW5jdGlvbihfX3VudXNlZF93ZWJwYWNrX21vZHVsZSwgX193ZWJwYWNrX2V4cG9ydHNfXywgX193ZWJwYWNrX3JlcXVpcmVfXykgewoKInVzZSBzdHJpY3QiOwpfX3dlYnBhY2tfcmVxdWlyZV9fLnIoX193ZWJwYWNrX2V4cG9ydHNfXyk7Ci8qIGhhcm1vbnkgaW1wb3J0ICovIHZhciBfZG9tX3V0aWxzX2dldFdpbmRvd19qc19fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMF9fID0gX193ZWJwYWNrX3JlcXVpcmVfXygvKiEgLi4vZG9tLXV0aWxzL2dldFdpbmRvdy5qcyAqLyAiLi9ub2RlX21vZHVsZXMvQHBvcHBlcmpzL2NvcmUvbGliL2RvbS11dGlscy9nZXRXaW5kb3cuanMiKTsKIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBpbXBvcnQvbm8tdW51c2VkLW1vZHVsZXMKCnZhciBwYXNzaXZlID0gewogIHBhc3NpdmU6IHRydWUKfTsKCmZ1bmN0aW9uIGVmZmVjdChfcmVmKSB7CiAgdmFyIHN0YXRlID0gX3JlZi5zdGF0ZSwKICAgICAgaW5zdGFuY2UgPSBfcmVmLmluc3RhbmNlLAogICAgICBvcHRpb25zID0gX3JlZi5vcHRpb25zOwogIHZhciBfb3B0aW9ucyRzY3JvbGwgPSBvcHRpb25zLnNjcm9sbCwKICAgICAgc2Nyb2xsID0gX29wdGlvbnMkc2Nyb2xsID09PSB2b2lkIDAgPyB0cnVlIDogX29wdGlvbnMkc2Nyb2xsLAogICAgICBfb3B0aW9ucyRyZXNpemUgPSBvcHRpb25zLnJlc2l6ZSwKICAgICAgcmVzaXplID0gX29wdGlvbnMkcmVzaXplID09PSB2b2lkIDAgPyB0cnVlIDogX29wdGlvbnMkcmVzaXplOwogIHZhciB3aW5kb3cgPSAoMCxfZG9tX3V0aWxzX2dldFdpbmRvd19qc19fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMF9fWyJkZWZhdWx0Il0pKHN0YXRlLmVsZW1lbnRzLnBvcHBlcik7CiAgdmFyIHNjcm9sbFBhcmVudHMgPSBbXS5jb25jYXQoc3RhdGUuc2Nyb2xsUGFyZW50cy5yZWZlcmVuY2UsIHN0YXRlLnNjcm9sbFBhcmVudHMucG9wcGVyKTsKCiAgaWYgKHNjcm9sbCkgewogICAgc2Nyb2xsUGFyZW50cy5mb3JFYWNoKGZ1bmN0aW9uIChzY3JvbGxQYXJlbnQpIHsKICAgICAgc2Nyb2xsUGFyZW50LmFkZEV2ZW50TGlzdGVuZXIoJ3Njcm9sbCcsIGluc3RhbmNlLnVwZGF0ZSwgcGFzc2l2ZSk7CiAgICB9KTsKICB9CgogIGlmIChyZXNpemUpIHsKICAgIHdpbmRvdy5hZGRFdmVudExpc3RlbmVyKCdyZXNpemUnLCBpbnN0YW5jZS51cGRhdGUsIHBhc3NpdmUpOwogIH0KCiAgcmV0dXJuIGZ1bmN0aW9uICgpIHsKICAgIGlmIChzY3JvbGwpIHsKICAgICAgc2Nyb2xsUGFyZW50cy5mb3JFYWNoKGZ1bmN0aW9uIChzY3JvbGxQYXJlbnQpIHsKICAgICAgICBzY3JvbGxQYXJlbnQucmVtb3ZlRXZlbnRMaXN0ZW5lcignc2Nyb2xsJywgaW5zdGFuY2UudXBkYXRlLCBwYXNzaXZlKTsKICAgICAgfSk7CiAgICB9CgogICAgaWYgKHJlc2l6ZSkgewogICAgICB3aW5kb3cucmVtb3ZlRXZlbnRMaXN0ZW5lcigncmVzaXplJywgaW5zdGFuY2UudXBkYXRlLCBwYXNzaXZlKTsKICAgIH0KICB9Owp9IC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBpbXBvcnQvbm8tdW51c2VkLW1vZHVsZXMKCgovKiBoYXJtb255IGRlZmF1bHQgZXhwb3J0ICovIF9fd2VicGFja19leHBvcnRzX19bImRlZmF1bHQiXSA9ICh7CiAgbmFtZTogJ2V2ZW50TGlzdGVuZXJzJywKICBlbmFibGVkOiB0cnVlLAogIHBoYXNlOiAnd3JpdGUnLAogIGZuOiBmdW5jdGlvbiBmbigpIHt9LAogIGVmZmVjdDogZWZmZWN0LAogIGRhdGE6IHt9Cn0pOwoKLyoqKi8gfSksCgovKioqLyAiLi9ub2RlX21vZHVsZXMvQHBvcHBlcmpzL2NvcmUvbGliL21vZGlmaWVycy9mbGlwLmpzIjoKLyohKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiohKlwKICAhKioqIC4vbm9kZV9tb2R1bGVzL0Bwb3BwZXJqcy9jb3JlL2xpYi9tb2RpZmllcnMvZmxpcC5qcyAqKiohCiAgXCoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqLwovKioqLyAoZnVuY3Rpb24oX191bnVzZWRfd2VicGFja19tb2R1bGUsIF9fd2VicGFja19leHBvcnRzX18sIF9fd2VicGFja19yZXF1aXJlX18pIHsKCiJ1c2Ugc3RyaWN0IjsKX193ZWJwYWNrX3JlcXVpcmVfXy5yKF9fd2VicGFja19leHBvcnRzX18pOwovKiBoYXJtb255IGltcG9ydCAqLyB2YXIgX3V0aWxzX2dldE9wcG9zaXRlUGxhY2VtZW50X2pzX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8yX18gPSBfX3dlYnBhY2tfcmVxdWlyZV9fKC8qISAuLi91dGlscy9nZXRPcHBvc2l0ZVBsYWNlbWVudC5qcyAqLyAiLi9ub2RlX21vZHVsZXMvQHBvcHBlcmpzL2NvcmUvbGliL3V0aWxzL2dldE9wcG9zaXRlUGxhY2VtZW50LmpzIik7Ci8qIGhhcm1vbnkgaW1wb3J0ICovIHZhciBfdXRpbHNfZ2V0QmFzZVBsYWNlbWVudF9qc19fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMF9fID0gX193ZWJwYWNrX3JlcXVpcmVfXygvKiEgLi4vdXRpbHMvZ2V0QmFzZVBsYWNlbWVudC5qcyAqLyAiLi9ub2RlX21vZHVsZXMvQHBvcHBlcmpzL2NvcmUvbGliL3V0aWxzL2dldEJhc2VQbGFjZW1lbnQuanMiKTsKLyogaGFybW9ueSBpbXBvcnQgKi8gdmFyIF91dGlsc19nZXRPcHBvc2l0ZVZhcmlhdGlvblBsYWNlbWVudF9qc19fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfM19fID0gX193ZWJwYWNrX3JlcXVpcmVfXygvKiEgLi4vdXRpbHMvZ2V0T3Bwb3NpdGVWYXJpYXRpb25QbGFjZW1lbnQuanMgKi8gIi4vbm9kZV9tb2R1bGVzL0Bwb3BwZXJqcy9jb3JlL2xpYi91dGlscy9nZXRPcHBvc2l0ZVZhcmlhdGlvblBsYWNlbWVudC5qcyIpOwovKiBoYXJtb255IGltcG9ydCAqLyB2YXIgX3V0aWxzX2RldGVjdE92ZXJmbG93X2pzX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV82X18gPSBfX3dlYnBhY2tfcmVxdWlyZV9fKC8qISAuLi91dGlscy9kZXRlY3RPdmVyZmxvdy5qcyAqLyAiLi9ub2RlX21vZHVsZXMvQHBvcHBlcmpzL2NvcmUvbGliL3V0aWxzL2RldGVjdE92ZXJmbG93LmpzIik7Ci8qIGhhcm1vbnkgaW1wb3J0ICovIHZhciBfdXRpbHNfY29tcHV0ZUF1dG9QbGFjZW1lbnRfanNfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzRfXyA9IF9fd2VicGFja19yZXF1aXJlX18oLyohIC4uL3V0aWxzL2NvbXB1dGVBdXRvUGxhY2VtZW50LmpzICovICIuL25vZGVfbW9kdWxlcy9AcG9wcGVyanMvY29yZS9saWIvdXRpbHMvY29tcHV0ZUF1dG9QbGFjZW1lbnQuanMiKTsKLyogaGFybW9ueSBpbXBvcnQgKi8gdmFyIF9lbnVtc19qc19fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMV9fID0gX193ZWJwYWNrX3JlcXVpcmVfXygvKiEgLi4vZW51bXMuanMgKi8gIi4vbm9kZV9tb2R1bGVzL0Bwb3BwZXJqcy9jb3JlL2xpYi9lbnVtcy5qcyIpOwovKiBoYXJtb255IGltcG9ydCAqLyB2YXIgX3V0aWxzX2dldFZhcmlhdGlvbl9qc19fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfNV9fID0gX193ZWJwYWNrX3JlcXVpcmVfXygvKiEgLi4vdXRpbHMvZ2V0VmFyaWF0aW9uLmpzICovICIuL25vZGVfbW9kdWxlcy9AcG9wcGVyanMvY29yZS9saWIvdXRpbHMvZ2V0VmFyaWF0aW9uLmpzIik7CgoKCgoKCiAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgaW1wb3J0L25vLXVudXNlZC1tb2R1bGVzCgpmdW5jdGlvbiBnZXRFeHBhbmRlZEZhbGxiYWNrUGxhY2VtZW50cyhwbGFjZW1lbnQpIHsKICBpZiAoKDAsX3V0aWxzX2dldEJhc2VQbGFjZW1lbnRfanNfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzBfX1siZGVmYXVsdCJdKShwbGFjZW1lbnQpID09PSBfZW51bXNfanNfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzFfXy5hdXRvKSB7CiAgICByZXR1cm4gW107CiAgfQoKICB2YXIgb3Bwb3NpdGVQbGFjZW1lbnQgPSAoMCxfdXRpbHNfZ2V0T3Bwb3NpdGVQbGFjZW1lbnRfanNfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzJfX1siZGVmYXVsdCJdKShwbGFjZW1lbnQpOwogIHJldHVybiBbKDAsX3V0aWxzX2dldE9wcG9zaXRlVmFyaWF0aW9uUGxhY2VtZW50X2pzX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8zX19bImRlZmF1bHQiXSkocGxhY2VtZW50KSwgb3Bwb3NpdGVQbGFjZW1lbnQsICgwLF91dGlsc19nZXRPcHBvc2l0ZVZhcmlhdGlvblBsYWNlbWVudF9qc19fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfM19fWyJkZWZhdWx0Il0pKG9wcG9zaXRlUGxhY2VtZW50KV07Cn0KCmZ1bmN0aW9uIGZsaXAoX3JlZikgewogIHZhciBzdGF0ZSA9IF9yZWYuc3RhdGUsCiAgICAgIG9wdGlvbnMgPSBfcmVmLm9wdGlvbnMsCiAgICAgIG5hbWUgPSBfcmVmLm5hbWU7CgogIGlmIChzdGF0ZS5tb2RpZmllcnNEYXRhW25hbWVdLl9za2lwKSB7CiAgICByZXR1cm47CiAgfQoKICB2YXIgX29wdGlvbnMkbWFpbkF4aXMgPSBvcHRpb25zLm1haW5BeGlzLAogICAgICBjaGVja01haW5BeGlzID0gX29wdGlvbnMkbWFpbkF4aXMgPT09IHZvaWQgMCA/IHRydWUgOiBfb3B0aW9ucyRtYWluQXhpcywKICAgICAgX29wdGlvbnMkYWx0QXhpcyA9IG9wdGlvbnMuYWx0QXhpcywKICAgICAgY2hlY2tBbHRBeGlzID0gX29wdGlvbnMkYWx0QXhpcyA9PT0gdm9pZCAwID8gdHJ1ZSA6IF9vcHRpb25zJGFsdEF4aXMsCiAgICAgIHNwZWNpZmllZEZhbGxiYWNrUGxhY2VtZW50cyA9IG9wdGlvbnMuZmFsbGJhY2tQbGFjZW1lbnRzLAogICAgICBwYWRkaW5nID0gb3B0aW9ucy5wYWRkaW5nLAogICAgICBib3VuZGFyeSA9IG9wdGlvbnMuYm91bmRhcnksCiAgICAgIHJvb3RCb3VuZGFyeSA9IG9wdGlvbnMucm9vdEJvdW5kYXJ5LAogICAgICBhbHRCb3VuZGFyeSA9IG9wdGlvbnMuYWx0Qm91bmRhcnksCiAgICAgIF9vcHRpb25zJGZsaXBWYXJpYXRpbyA9IG9wdGlvbnMuZmxpcFZhcmlhdGlvbnMsCiAgICAgIGZsaXBWYXJpYXRpb25zID0gX29wdGlvbnMkZmxpcFZhcmlhdGlvID09PSB2b2lkIDAgPyB0cnVlIDogX29wdGlvbnMkZmxpcFZhcmlhdGlvLAogICAgICBhbGxvd2VkQXV0b1BsYWNlbWVudHMgPSBvcHRpb25zLmFsbG93ZWRBdXRvUGxhY2VtZW50czsKICB2YXIgcHJlZmVycmVkUGxhY2VtZW50ID0gc3RhdGUub3B0aW9ucy5wbGFjZW1lbnQ7CiAgdmFyIGJhc2VQbGFjZW1lbnQgPSAoMCxfdXRpbHNfZ2V0QmFzZVBsYWNlbWVudF9qc19fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMF9fWyJkZWZhdWx0Il0pKHByZWZlcnJlZFBsYWNlbWVudCk7CiAgdmFyIGlzQmFzZVBsYWNlbWVudCA9IGJhc2VQbGFjZW1lbnQgPT09IHByZWZlcnJlZFBsYWNlbWVudDsKICB2YXIgZmFsbGJhY2tQbGFjZW1lbnRzID0gc3BlY2lmaWVkRmFsbGJhY2tQbGFjZW1lbnRzIHx8IChpc0Jhc2VQbGFjZW1lbnQgfHwgIWZsaXBWYXJpYXRpb25zID8gWygwLF91dGlsc19nZXRPcHBvc2l0ZVBsYWNlbWVudF9qc19fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMl9fWyJkZWZhdWx0Il0pKHByZWZlcnJlZFBsYWNlbWVudCldIDogZ2V0RXhwYW5kZWRGYWxsYmFja1BsYWNlbWVudHMocHJlZmVycmVkUGxhY2VtZW50KSk7CiAgdmFyIHBsYWNlbWVudHMgPSBbcHJlZmVycmVkUGxhY2VtZW50XS5jb25jYXQoZmFsbGJhY2tQbGFjZW1lbnRzKS5yZWR1Y2UoZnVuY3Rpb24gKGFjYywgcGxhY2VtZW50KSB7CiAgICByZXR1cm4gYWNjLmNvbmNhdCgoMCxfdXRpbHNfZ2V0QmFzZVBsYWNlbWVudF9qc19fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMF9fWyJkZWZhdWx0Il0pKHBsYWNlbWVudCkgPT09IF9lbnVtc19qc19fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMV9fLmF1dG8gPyAoMCxfdXRpbHNfY29tcHV0ZUF1dG9QbGFjZW1lbnRfanNfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzRfX1siZGVmYXVsdCJdKShzdGF0ZSwgewogICAgICBwbGFjZW1lbnQ6IHBsYWNlbWVudCwKICAgICAgYm91bmRhcnk6IGJvdW5kYXJ5LAogICAgICByb290Qm91bmRhcnk6IHJvb3RCb3VuZGFyeSwKICAgICAgcGFkZGluZzogcGFkZGluZywKICAgICAgZmxpcFZhcmlhdGlvbnM6IGZsaXBWYXJpYXRpb25zLAogICAgICBhbGxvd2VkQXV0b1BsYWNlbWVudHM6IGFsbG93ZWRBdXRvUGxhY2VtZW50cwogICAgfSkgOiBwbGFjZW1lbnQpOwogIH0sIFtdKTsKICB2YXIgcmVmZXJlbmNlUmVjdCA9IHN0YXRlLnJlY3RzLnJlZmVyZW5jZTsKICB2YXIgcG9wcGVyUmVjdCA9IHN0YXRlLnJlY3RzLnBvcHBlcjsKICB2YXIgY2hlY2tzTWFwID0gbmV3IE1hcCgpOwogIHZhciBtYWtlRmFsbGJhY2tDaGVja3MgPSB0cnVlOwogIHZhciBmaXJzdEZpdHRpbmdQbGFjZW1lbnQgPSBwbGFjZW1lbnRzWzBdOwoKICBmb3IgKHZhciBpID0gMDsgaSA8IHBsYWNlbWVudHMubGVuZ3RoOyBpKyspIHsKICAgIHZhciBwbGFjZW1lbnQgPSBwbGFjZW1lbnRzW2ldOwoKICAgIHZhciBfYmFzZVBsYWNlbWVudCA9ICgwLF91dGlsc19nZXRCYXNlUGxhY2VtZW50X2pzX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8wX19bImRlZmF1bHQiXSkocGxhY2VtZW50KTsKCiAgICB2YXIgaXNTdGFydFZhcmlhdGlvbiA9ICgwLF91dGlsc19nZXRWYXJpYXRpb25fanNfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzVfX1siZGVmYXVsdCJdKShwbGFjZW1lbnQpID09PSBfZW51bXNfanNfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzFfXy5zdGFydDsKICAgIHZhciBpc1ZlcnRpY2FsID0gW19lbnVtc19qc19fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMV9fLnRvcCwgX2VudW1zX2pzX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8xX18uYm90dG9tXS5pbmRleE9mKF9iYXNlUGxhY2VtZW50KSA+PSAwOwogICAgdmFyIGxlbiA9IGlzVmVydGljYWwgPyAnd2lkdGgnIDogJ2hlaWdodCc7CiAgICB2YXIgb3ZlcmZsb3cgPSAoMCxfdXRpbHNfZGV0ZWN0T3ZlcmZsb3dfanNfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzZfX1siZGVmYXVsdCJdKShzdGF0ZSwgewogICAgICBwbGFjZW1lbnQ6IHBsYWNlbWVudCwKICAgICAgYm91bmRhcnk6IGJvdW5kYXJ5LAogICAgICByb290Qm91bmRhcnk6IHJvb3RCb3VuZGFyeSwKICAgICAgYWx0Qm91bmRhcnk6IGFsdEJvdW5kYXJ5LAogICAgICBwYWRkaW5nOiBwYWRkaW5nCiAgICB9KTsKICAgIHZhciBtYWluVmFyaWF0aW9uU2lkZSA9IGlzVmVydGljYWwgPyBpc1N0YXJ0VmFyaWF0aW9uID8gX2VudW1zX2pzX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8xX18ucmlnaHQgOiBfZW51bXNfanNfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzFfXy5sZWZ0IDogaXNTdGFydFZhcmlhdGlvbiA/IF9lbnVtc19qc19fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMV9fLmJvdHRvbSA6IF9lbnVtc19qc19fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMV9fLnRvcDsKCiAgICBpZiAocmVmZXJlbmNlUmVjdFtsZW5dID4gcG9wcGVyUmVjdFtsZW5dKSB7CiAgICAgIG1haW5WYXJpYXRpb25TaWRlID0gKDAsX3V0aWxzX2dldE9wcG9zaXRlUGxhY2VtZW50X2pzX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8yX19bImRlZmF1bHQiXSkobWFpblZhcmlhdGlvblNpZGUpOwogICAgfQoKICAgIHZhciBhbHRWYXJpYXRpb25TaWRlID0gKDAsX3V0aWxzX2dldE9wcG9zaXRlUGxhY2VtZW50X2pzX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8yX19bImRlZmF1bHQiXSkobWFpblZhcmlhdGlvblNpZGUpOwogICAgdmFyIGNoZWNrcyA9IFtdOwoKICAgIGlmIChjaGVja01haW5BeGlzKSB7CiAgICAgIGNoZWNrcy5wdXNoKG92ZXJmbG93W19iYXNlUGxhY2VtZW50XSA8PSAwKTsKICAgIH0KCiAgICBpZiAoY2hlY2tBbHRBeGlzKSB7CiAgICAgIGNoZWNrcy5wdXNoKG92ZXJmbG93W21haW5WYXJpYXRpb25TaWRlXSA8PSAwLCBvdmVyZmxvd1thbHRWYXJpYXRpb25TaWRlXSA8PSAwKTsKICAgIH0KCiAgICBpZiAoY2hlY2tzLmV2ZXJ5KGZ1bmN0aW9uIChjaGVjaykgewogICAgICByZXR1cm4gY2hlY2s7CiAgICB9KSkgewogICAgICBmaXJzdEZpdHRpbmdQbGFjZW1lbnQgPSBwbGFjZW1lbnQ7CiAgICAgIG1ha2VGYWxsYmFja0NoZWNrcyA9IGZhbHNlOwogICAgICBicmVhazsKICAgIH0KCiAgICBjaGVja3NNYXAuc2V0KHBsYWNlbWVudCwgY2hlY2tzKTsKICB9CgogIGlmIChtYWtlRmFsbGJhY2tDaGVja3MpIHsKICAgIC8vIGAyYCBtYXkgYmUgZGVzaXJlZCBpbiBzb21lIGNhc2VzIOKAkyByZXNlYXJjaCBsYXRlcgogICAgdmFyIG51bWJlck9mQ2hlY2tzID0gZmxpcFZhcmlhdGlvbnMgPyAzIDogMTsKCiAgICB2YXIgX2xvb3AgPSBmdW5jdGlvbiBfbG9vcChfaSkgewogICAgICB2YXIgZml0dGluZ1BsYWNlbWVudCA9IHBsYWNlbWVudHMuZmluZChmdW5jdGlvbiAocGxhY2VtZW50KSB7CiAgICAgICAgdmFyIGNoZWNrcyA9IGNoZWNrc01hcC5nZXQocGxhY2VtZW50KTsKCiAgICAgICAgaWYgKGNoZWNrcykgewogICAgICAgICAgcmV0dXJuIGNoZWNrcy5zbGljZSgwLCBfaSkuZXZlcnkoZnVuY3Rpb24gKGNoZWNrKSB7CiAgICAgICAgICAgIHJldHVybiBjaGVjazsKICAgICAgICAgIH0pOwogICAgICAgIH0KICAgICAgfSk7CgogICAgICBpZiAoZml0dGluZ1BsYWNlbWVudCkgewogICAgICAgIGZpcnN0Rml0dGluZ1BsYWNlbWVudCA9IGZpdHRpbmdQbGFjZW1lbnQ7CiAgICAgICAgcmV0dXJuICJicmVhayI7CiAgICAgIH0KICAgIH07CgogICAgZm9yICh2YXIgX2kgPSBudW1iZXJPZkNoZWNrczsgX2kgPiAwOyBfaS0tKSB7CiAgICAgIHZhciBfcmV0ID0gX2xvb3AoX2kpOwoKICAgICAgaWYgKF9yZXQgPT09ICJicmVhayIpIGJyZWFrOwogICAgfQogIH0KCiAgaWYgKHN0YXRlLnBsYWNlbWVudCAhPT0gZmlyc3RGaXR0aW5nUGxhY2VtZW50KSB7CiAgICBzdGF0ZS5tb2RpZmllcnNEYXRhW25hbWVdLl9za2lwID0gdHJ1ZTsKICAgIHN0YXRlLnBsYWNlbWVudCA9IGZpcnN0Rml0dGluZ1BsYWNlbWVudDsKICAgIHN0YXRlLnJlc2V0ID0gdHJ1ZTsKICB9Cn0gLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIGltcG9ydC9uby11bnVzZWQtbW9kdWxlcwoKCi8qIGhhcm1vbnkgZGVmYXVsdCBleHBvcnQgKi8gX193ZWJwYWNrX2V4cG9ydHNfX1siZGVmYXVsdCJdID0gKHsKICBuYW1lOiAnZmxpcCcsCiAgZW5hYmxlZDogdHJ1ZSwKICBwaGFzZTogJ21haW4nLAogIGZuOiBmbGlwLAogIHJlcXVpcmVzSWZFeGlzdHM6IFsnb2Zmc2V0J10sCiAgZGF0YTogewogICAgX3NraXA6IGZhbHNlCiAgfQp9KTsKCi8qKiovIH0pLAoKLyoqKi8gIi4vbm9kZV9tb2R1bGVzL0Bwb3BwZXJqcy9jb3JlL2xpYi9tb2RpZmllcnMvaGlkZS5qcyI6Ci8qISoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqISpcCiAgISoqKiAuL25vZGVfbW9kdWxlcy9AcG9wcGVyanMvY29yZS9saWIvbW9kaWZpZXJzL2hpZGUuanMgKioqIQogIFwqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKi8KLyoqKi8gKGZ1bmN0aW9uKF9fdW51c2VkX3dlYnBhY2tfbW9kdWxlLCBfX3dlYnBhY2tfZXhwb3J0c19fLCBfX3dlYnBhY2tfcmVxdWlyZV9fKSB7CgoidXNlIHN0cmljdCI7Cl9fd2VicGFja19yZXF1aXJlX18ucihfX3dlYnBhY2tfZXhwb3J0c19fKTsKLyogaGFybW9ueSBpbXBvcnQgKi8gdmFyIF9lbnVtc19qc19fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMF9fID0gX193ZWJwYWNrX3JlcXVpcmVfXygvKiEgLi4vZW51bXMuanMgKi8gIi4vbm9kZV9tb2R1bGVzL0Bwb3BwZXJqcy9jb3JlL2xpYi9lbnVtcy5qcyIpOwovKiBoYXJtb255IGltcG9ydCAqLyB2YXIgX3V0aWxzX2RldGVjdE92ZXJmbG93X2pzX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8xX18gPSBfX3dlYnBhY2tfcmVxdWlyZV9fKC8qISAuLi91dGlscy9kZXRlY3RPdmVyZmxvdy5qcyAqLyAiLi9ub2RlX21vZHVsZXMvQHBvcHBlcmpzL2NvcmUvbGliL3V0aWxzL2RldGVjdE92ZXJmbG93LmpzIik7CgoKCmZ1bmN0aW9uIGdldFNpZGVPZmZzZXRzKG92ZXJmbG93LCByZWN0LCBwcmV2ZW50ZWRPZmZzZXRzKSB7CiAgaWYgKHByZXZlbnRlZE9mZnNldHMgPT09IHZvaWQgMCkgewogICAgcHJldmVudGVkT2Zmc2V0cyA9IHsKICAgICAgeDogMCwKICAgICAgeTogMAogICAgfTsKICB9CgogIHJldHVybiB7CiAgICB0b3A6IG92ZXJmbG93LnRvcCAtIHJlY3QuaGVpZ2h0IC0gcHJldmVudGVkT2Zmc2V0cy55LAogICAgcmlnaHQ6IG92ZXJmbG93LnJpZ2h0IC0gcmVjdC53aWR0aCArIHByZXZlbnRlZE9mZnNldHMueCwKICAgIGJvdHRvbTogb3ZlcmZsb3cuYm90dG9tIC0gcmVjdC5oZWlnaHQgKyBwcmV2ZW50ZWRPZmZzZXRzLnksCiAgICBsZWZ0OiBvdmVyZmxvdy5sZWZ0IC0gcmVjdC53aWR0aCAtIHByZXZlbnRlZE9mZnNldHMueAogIH07Cn0KCmZ1bmN0aW9uIGlzQW55U2lkZUZ1bGx5Q2xpcHBlZChvdmVyZmxvdykgewogIHJldHVybiBbX2VudW1zX2pzX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8wX18udG9wLCBfZW51bXNfanNfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzBfXy5yaWdodCwgX2VudW1zX2pzX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8wX18uYm90dG9tLCBfZW51bXNfanNfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzBfXy5sZWZ0XS5zb21lKGZ1bmN0aW9uIChzaWRlKSB7CiAgICByZXR1cm4gb3ZlcmZsb3dbc2lkZV0gPj0gMDsKICB9KTsKfQoKZnVuY3Rpb24gaGlkZShfcmVmKSB7CiAgdmFyIHN0YXRlID0gX3JlZi5zdGF0ZSwKICAgICAgbmFtZSA9IF9yZWYubmFtZTsKICB2YXIgcmVmZXJlbmNlUmVjdCA9IHN0YXRlLnJlY3RzLnJlZmVyZW5jZTsKICB2YXIgcG9wcGVyUmVjdCA9IHN0YXRlLnJlY3RzLnBvcHBlcjsKICB2YXIgcHJldmVudGVkT2Zmc2V0cyA9IHN0YXRlLm1vZGlmaWVyc0RhdGEucHJldmVudE92ZXJmbG93OwogIHZhciByZWZlcmVuY2VPdmVyZmxvdyA9ICgwLF91dGlsc19kZXRlY3RPdmVyZmxvd19qc19fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMV9fWyJkZWZhdWx0Il0pKHN0YXRlLCB7CiAgICBlbGVtZW50Q29udGV4dDogJ3JlZmVyZW5jZScKICB9KTsKICB2YXIgcG9wcGVyQWx0T3ZlcmZsb3cgPSAoMCxfdXRpbHNfZGV0ZWN0T3ZlcmZsb3dfanNfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzFfX1siZGVmYXVsdCJdKShzdGF0ZSwgewogICAgYWx0Qm91bmRhcnk6IHRydWUKICB9KTsKICB2YXIgcmVmZXJlbmNlQ2xpcHBpbmdPZmZzZXRzID0gZ2V0U2lkZU9mZnNldHMocmVmZXJlbmNlT3ZlcmZsb3csIHJlZmVyZW5jZVJlY3QpOwogIHZhciBwb3BwZXJFc2NhcGVPZmZzZXRzID0gZ2V0U2lkZU9mZnNldHMocG9wcGVyQWx0T3ZlcmZsb3csIHBvcHBlclJlY3QsIHByZXZlbnRlZE9mZnNldHMpOwogIHZhciBpc1JlZmVyZW5jZUhpZGRlbiA9IGlzQW55U2lkZUZ1bGx5Q2xpcHBlZChyZWZlcmVuY2VDbGlwcGluZ09mZnNldHMpOwogIHZhciBoYXNQb3BwZXJFc2NhcGVkID0gaXNBbnlTaWRlRnVsbHlDbGlwcGVkKHBvcHBlckVzY2FwZU9mZnNldHMpOwogIHN0YXRlLm1vZGlmaWVyc0RhdGFbbmFtZV0gPSB7CiAgICByZWZlcmVuY2VDbGlwcGluZ09mZnNldHM6IHJlZmVyZW5jZUNsaXBwaW5nT2Zmc2V0cywKICAgIHBvcHBlckVzY2FwZU9mZnNldHM6IHBvcHBlckVzY2FwZU9mZnNldHMsCiAgICBpc1JlZmVyZW5jZUhpZGRlbjogaXNSZWZlcmVuY2VIaWRkZW4sCiAgICBoYXNQb3BwZXJFc2NhcGVkOiBoYXNQb3BwZXJFc2NhcGVkCiAgfTsKICBzdGF0ZS5hdHRyaWJ1dGVzLnBvcHBlciA9IE9iamVjdC5hc3NpZ24oe30sIHN0YXRlLmF0dHJpYnV0ZXMucG9wcGVyLCB7CiAgICAnZGF0YS1wb3BwZXItcmVmZXJlbmNlLWhpZGRlbic6IGlzUmVmZXJlbmNlSGlkZGVuLAogICAgJ2RhdGEtcG9wcGVyLWVzY2FwZWQnOiBoYXNQb3BwZXJFc2NhcGVkCiAgfSk7Cn0gLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIGltcG9ydC9uby11bnVzZWQtbW9kdWxlcwoKCi8qIGhhcm1vbnkgZGVmYXVsdCBleHBvcnQgKi8gX193ZWJwYWNrX2V4cG9ydHNfX1siZGVmYXVsdCJdID0gKHsKICBuYW1lOiAnaGlkZScsCiAgZW5hYmxlZDogdHJ1ZSwKICBwaGFzZTogJ21haW4nLAogIHJlcXVpcmVzSWZFeGlzdHM6IFsncHJldmVudE92ZXJmbG93J10sCiAgZm46IGhpZGUKfSk7CgovKioqLyB9KSwKCi8qKiovICIuL25vZGVfbW9kdWxlcy9AcG9wcGVyanMvY29yZS9saWIvbW9kaWZpZXJzL2luZGV4LmpzIjoKLyohKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqISpcCiAgISoqKiAuL25vZGVfbW9kdWxlcy9AcG9wcGVyanMvY29yZS9saWIvbW9kaWZpZXJzL2luZGV4LmpzICoqKiEKICBcKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqLwovKioqLyAoZnVuY3Rpb24oX191bnVzZWRfd2VicGFja19tb2R1bGUsIF9fd2VicGFja19leHBvcnRzX18sIF9fd2VicGFja19yZXF1aXJlX18pIHsKCiJ1c2Ugc3RyaWN0IjsKX193ZWJwYWNrX3JlcXVpcmVfXy5yKF9fd2VicGFja19leHBvcnRzX18pOwovKiBoYXJtb255IGV4cG9ydCAqLyBfX3dlYnBhY2tfcmVxdWlyZV9fLmQoX193ZWJwYWNrX2V4cG9ydHNfXywgewovKiBoYXJtb255IGV4cG9ydCAqLyAgICJhcHBseVN0eWxlcyI6IGZ1bmN0aW9uKCkgeyByZXR1cm4gLyogcmVleHBvcnQgc2FmZSAqLyBfYXBwbHlTdHlsZXNfanNfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzBfX1siZGVmYXVsdCJdOyB9LAovKiBoYXJtb255IGV4cG9ydCAqLyAgICJhcnJvdyI6IGZ1bmN0aW9uKCkgeyByZXR1cm4gLyogcmVleHBvcnQgc2FmZSAqLyBfYXJyb3dfanNfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzFfX1siZGVmYXVsdCJdOyB9LAovKiBoYXJtb255IGV4cG9ydCAqLyAgICJjb21wdXRlU3R5bGVzIjogZnVuY3Rpb24oKSB7IHJldHVybiAvKiByZWV4cG9ydCBzYWZlICovIF9jb21wdXRlU3R5bGVzX2pzX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8yX19bImRlZmF1bHQiXTsgfSwKLyogaGFybW9ueSBleHBvcnQgKi8gICAiZXZlbnRMaXN0ZW5lcnMiOiBmdW5jdGlvbigpIHsgcmV0dXJuIC8qIHJlZXhwb3J0IHNhZmUgKi8gX2V2ZW50TGlzdGVuZXJzX2pzX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8zX19bImRlZmF1bHQiXTsgfSwKLyogaGFybW9ueSBleHBvcnQgKi8gICAiZmxpcCI6IGZ1bmN0aW9uKCkgeyByZXR1cm4gLyogcmVleHBvcnQgc2FmZSAqLyBfZmxpcF9qc19fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfNF9fWyJkZWZhdWx0Il07IH0sCi8qIGhhcm1vbnkgZXhwb3J0ICovICAgImhpZGUiOiBmdW5jdGlvbigpIHsgcmV0dXJuIC8qIHJlZXhwb3J0IHNhZmUgKi8gX2hpZGVfanNfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzVfX1siZGVmYXVsdCJdOyB9LAovKiBoYXJtb255IGV4cG9ydCAqLyAgICJvZmZzZXQiOiBmdW5jdGlvbigpIHsgcmV0dXJuIC8qIHJlZXhwb3J0IHNhZmUgKi8gX29mZnNldF9qc19fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfNl9fWyJkZWZhdWx0Il07IH0sCi8qIGhhcm1vbnkgZXhwb3J0ICovICAgInBvcHBlck9mZnNldHMiOiBmdW5jdGlvbigpIHsgcmV0dXJuIC8qIHJlZXhwb3J0IHNhZmUgKi8gX3BvcHBlck9mZnNldHNfanNfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzdfX1siZGVmYXVsdCJdOyB9LAovKiBoYXJtb255IGV4cG9ydCAqLyAgICJwcmV2ZW50T3ZlcmZsb3ciOiBmdW5jdGlvbigpIHsgcmV0dXJuIC8qIHJlZXhwb3J0IHNhZmUgKi8gX3ByZXZlbnRPdmVyZmxvd19qc19fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfOF9fWyJkZWZhdWx0Il07IH0KLyogaGFybW9ueSBleHBvcnQgKi8gfSk7Ci8qIGhhcm1vbnkgaW1wb3J0ICovIHZhciBfYXBwbHlTdHlsZXNfanNfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzBfXyA9IF9fd2VicGFja19yZXF1aXJlX18oLyohIC4vYXBwbHlTdHlsZXMuanMgKi8gIi4vbm9kZV9tb2R1bGVzL0Bwb3BwZXJqcy9jb3JlL2xpYi9tb2RpZmllcnMvYXBwbHlTdHlsZXMuanMiKTsKLyogaGFybW9ueSBpbXBvcnQgKi8gdmFyIF9hcnJvd19qc19fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMV9fID0gX193ZWJwYWNrX3JlcXVpcmVfXygvKiEgLi9hcnJvdy5qcyAqLyAiLi9ub2RlX21vZHVsZXMvQHBvcHBlcmpzL2NvcmUvbGliL21vZGlmaWVycy9hcnJvdy5qcyIpOwovKiBoYXJtb255IGltcG9ydCAqLyB2YXIgX2NvbXB1dGVTdHlsZXNfanNfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzJfXyA9IF9fd2VicGFja19yZXF1aXJlX18oLyohIC4vY29tcHV0ZVN0eWxlcy5qcyAqLyAiLi9ub2RlX21vZHVsZXMvQHBvcHBlcmpzL2NvcmUvbGliL21vZGlmaWVycy9jb21wdXRlU3R5bGVzLmpzIik7Ci8qIGhhcm1vbnkgaW1wb3J0ICovIHZhciBfZXZlbnRMaXN0ZW5lcnNfanNfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzNfXyA9IF9fd2VicGFja19yZXF1aXJlX18oLyohIC4vZXZlbnRMaXN0ZW5lcnMuanMgKi8gIi4vbm9kZV9tb2R1bGVzL0Bwb3BwZXJqcy9jb3JlL2xpYi9tb2RpZmllcnMvZXZlbnRMaXN0ZW5lcnMuanMiKTsKLyogaGFybW9ueSBpbXBvcnQgKi8gdmFyIF9mbGlwX2pzX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV80X18gPSBfX3dlYnBhY2tfcmVxdWlyZV9fKC8qISAuL2ZsaXAuanMgKi8gIi4vbm9kZV9tb2R1bGVzL0Bwb3BwZXJqcy9jb3JlL2xpYi9tb2RpZmllcnMvZmxpcC5qcyIpOwovKiBoYXJtb255IGltcG9ydCAqLyB2YXIgX2hpZGVfanNfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzVfXyA9IF9fd2VicGFja19yZXF1aXJlX18oLyohIC4vaGlkZS5qcyAqLyAiLi9ub2RlX21vZHVsZXMvQHBvcHBlcmpzL2NvcmUvbGliL21vZGlmaWVycy9oaWRlLmpzIik7Ci8qIGhhcm1vbnkgaW1wb3J0ICovIHZhciBfb2Zmc2V0X2pzX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV82X18gPSBfX3dlYnBhY2tfcmVxdWlyZV9fKC8qISAuL29mZnNldC5qcyAqLyAiLi9ub2RlX21vZHVsZXMvQHBvcHBlcmpzL2NvcmUvbGliL21vZGlmaWVycy9vZmZzZXQuanMiKTsKLyogaGFybW9ueSBpbXBvcnQgKi8gdmFyIF9wb3BwZXJPZmZzZXRzX2pzX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV83X18gPSBfX3dlYnBhY2tfcmVxdWlyZV9fKC8qISAuL3BvcHBlck9mZnNldHMuanMgKi8gIi4vbm9kZV9tb2R1bGVzL0Bwb3BwZXJqcy9jb3JlL2xpYi9tb2RpZmllcnMvcG9wcGVyT2Zmc2V0cy5qcyIpOwovKiBoYXJtb255IGltcG9ydCAqLyB2YXIgX3ByZXZlbnRPdmVyZmxvd19qc19fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfOF9fID0gX193ZWJwYWNrX3JlcXVpcmVfXygvKiEgLi9wcmV2ZW50T3ZlcmZsb3cuanMgKi8gIi4vbm9kZV9tb2R1bGVzL0Bwb3BwZXJqcy9jb3JlL2xpYi9tb2RpZmllcnMvcHJldmVudE92ZXJmbG93LmpzIik7CgoKCgoKCgoKCgovKioqLyB9KSwKCi8qKiovICIuL25vZGVfbW9kdWxlcy9AcG9wcGVyanMvY29yZS9saWIvbW9kaWZpZXJzL29mZnNldC5qcyI6Ci8qISoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiohKlwKICAhKioqIC4vbm9kZV9tb2R1bGVzL0Bwb3BwZXJqcy9jb3JlL2xpYi9tb2RpZmllcnMvb2Zmc2V0LmpzICoqKiEKICBcKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKi8KLyoqKi8gKGZ1bmN0aW9uKF9fdW51c2VkX3dlYnBhY2tfbW9kdWxlLCBfX3dlYnBhY2tfZXhwb3J0c19fLCBfX3dlYnBhY2tfcmVxdWlyZV9fKSB7CgoidXNlIHN0cmljdCI7Cl9fd2VicGFja19yZXF1aXJlX18ucihfX3dlYnBhY2tfZXhwb3J0c19fKTsKLyogaGFybW9ueSBleHBvcnQgKi8gX193ZWJwYWNrX3JlcXVpcmVfXy5kKF9fd2VicGFja19leHBvcnRzX18sIHsKLyogaGFybW9ueSBleHBvcnQgKi8gICAiZGlzdGFuY2VBbmRTa2lkZGluZ1RvWFkiOiBmdW5jdGlvbigpIHsgcmV0dXJuIC8qIGJpbmRpbmcgKi8gZGlzdGFuY2VBbmRTa2lkZGluZ1RvWFk7IH0KLyogaGFybW9ueSBleHBvcnQgKi8gfSk7Ci8qIGhhcm1vbnkgaW1wb3J0ICovIHZhciBfdXRpbHNfZ2V0QmFzZVBsYWNlbWVudF9qc19fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMF9fID0gX193ZWJwYWNrX3JlcXVpcmVfXygvKiEgLi4vdXRpbHMvZ2V0QmFzZVBsYWNlbWVudC5qcyAqLyAiLi9ub2RlX21vZHVsZXMvQHBvcHBlcmpzL2NvcmUvbGliL3V0aWxzL2dldEJhc2VQbGFjZW1lbnQuanMiKTsKLyogaGFybW9ueSBpbXBvcnQgKi8gdmFyIF9lbnVtc19qc19fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMV9fID0gX193ZWJwYWNrX3JlcXVpcmVfXygvKiEgLi4vZW51bXMuanMgKi8gIi4vbm9kZV9tb2R1bGVzL0Bwb3BwZXJqcy9jb3JlL2xpYi9lbnVtcy5qcyIpOwoKIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBpbXBvcnQvbm8tdW51c2VkLW1vZHVsZXMKCmZ1bmN0aW9uIGRpc3RhbmNlQW5kU2tpZGRpbmdUb1hZKHBsYWNlbWVudCwgcmVjdHMsIG9mZnNldCkgewogIHZhciBiYXNlUGxhY2VtZW50ID0gKDAsX3V0aWxzX2dldEJhc2VQbGFjZW1lbnRfanNfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzBfX1siZGVmYXVsdCJdKShwbGFjZW1lbnQpOwogIHZhciBpbnZlcnREaXN0YW5jZSA9IFtfZW51bXNfanNfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzFfXy5sZWZ0LCBfZW51bXNfanNfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzFfXy50b3BdLmluZGV4T2YoYmFzZVBsYWNlbWVudCkgPj0gMCA/IC0xIDogMTsKCiAgdmFyIF9yZWYgPSB0eXBlb2Ygb2Zmc2V0ID09PSAnZnVuY3Rpb24nID8gb2Zmc2V0KE9iamVjdC5hc3NpZ24oe30sIHJlY3RzLCB7CiAgICBwbGFjZW1lbnQ6IHBsYWNlbWVudAogIH0pKSA6IG9mZnNldCwKICAgICAgc2tpZGRpbmcgPSBfcmVmWzBdLAogICAgICBkaXN0YW5jZSA9IF9yZWZbMV07CgogIHNraWRkaW5nID0gc2tpZGRpbmcgfHwgMDsKICBkaXN0YW5jZSA9IChkaXN0YW5jZSB8fCAwKSAqIGludmVydERpc3RhbmNlOwogIHJldHVybiBbX2VudW1zX2pzX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8xX18ubGVmdCwgX2VudW1zX2pzX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8xX18ucmlnaHRdLmluZGV4T2YoYmFzZVBsYWNlbWVudCkgPj0gMCA/IHsKICAgIHg6IGRpc3RhbmNlLAogICAgeTogc2tpZGRpbmcKICB9IDogewogICAgeDogc2tpZGRpbmcsCiAgICB5OiBkaXN0YW5jZQogIH07Cn0KCmZ1bmN0aW9uIG9mZnNldChfcmVmMikgewogIHZhciBzdGF0ZSA9IF9yZWYyLnN0YXRlLAogICAgICBvcHRpb25zID0gX3JlZjIub3B0aW9ucywKICAgICAgbmFtZSA9IF9yZWYyLm5hbWU7CiAgdmFyIF9vcHRpb25zJG9mZnNldCA9IG9wdGlvbnMub2Zmc2V0LAogICAgICBvZmZzZXQgPSBfb3B0aW9ucyRvZmZzZXQgPT09IHZvaWQgMCA/IFswLCAwXSA6IF9vcHRpb25zJG9mZnNldDsKICB2YXIgZGF0YSA9IF9lbnVtc19qc19fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMV9fLnBsYWNlbWVudHMucmVkdWNlKGZ1bmN0aW9uIChhY2MsIHBsYWNlbWVudCkgewogICAgYWNjW3BsYWNlbWVudF0gPSBkaXN0YW5jZUFuZFNraWRkaW5nVG9YWShwbGFjZW1lbnQsIHN0YXRlLnJlY3RzLCBvZmZzZXQpOwogICAgcmV0dXJuIGFjYzsKICB9LCB7fSk7CiAgdmFyIF9kYXRhJHN0YXRlJHBsYWNlbWVudCA9IGRhdGFbc3RhdGUucGxhY2VtZW50XSwKICAgICAgeCA9IF9kYXRhJHN0YXRlJHBsYWNlbWVudC54LAogICAgICB5ID0gX2RhdGEkc3RhdGUkcGxhY2VtZW50Lnk7CgogIGlmIChzdGF0ZS5tb2RpZmllcnNEYXRhLnBvcHBlck9mZnNldHMgIT0gbnVsbCkgewogICAgc3RhdGUubW9kaWZpZXJzRGF0YS5wb3BwZXJPZmZzZXRzLnggKz0geDsKICAgIHN0YXRlLm1vZGlmaWVyc0RhdGEucG9wcGVyT2Zmc2V0cy55ICs9IHk7CiAgfQoKICBzdGF0ZS5tb2RpZmllcnNEYXRhW25hbWVdID0gZGF0YTsKfSAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgaW1wb3J0L25vLXVudXNlZC1tb2R1bGVzCgoKLyogaGFybW9ueSBkZWZhdWx0IGV4cG9ydCAqLyBfX3dlYnBhY2tfZXhwb3J0c19fWyJkZWZhdWx0Il0gPSAoewogIG5hbWU6ICdvZmZzZXQnLAogIGVuYWJsZWQ6IHRydWUsCiAgcGhhc2U6ICdtYWluJywKICByZXF1aXJlczogWydwb3BwZXJPZmZzZXRzJ10sCiAgZm46IG9mZnNldAp9KTsKCi8qKiovIH0pLAoKLyoqKi8gIi4vbm9kZV9tb2R1bGVzL0Bwb3BwZXJqcy9jb3JlL2xpYi9tb2RpZmllcnMvcG9wcGVyT2Zmc2V0cy5qcyI6Ci8qISoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqISpcCiAgISoqKiAuL25vZGVfbW9kdWxlcy9AcG9wcGVyanMvY29yZS9saWIvbW9kaWZpZXJzL3BvcHBlck9mZnNldHMuanMgKioqIQogIFwqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKi8KLyoqKi8gKGZ1bmN0aW9uKF9fdW51c2VkX3dlYnBhY2tfbW9kdWxlLCBfX3dlYnBhY2tfZXhwb3J0c19fLCBfX3dlYnBhY2tfcmVxdWlyZV9fKSB7CgoidXNlIHN0cmljdCI7Cl9fd2VicGFja19yZXF1aXJlX18ucihfX3dlYnBhY2tfZXhwb3J0c19fKTsKLyogaGFybW9ueSBpbXBvcnQgKi8gdmFyIF91dGlsc19jb21wdXRlT2Zmc2V0c19qc19fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMF9fID0gX193ZWJwYWNrX3JlcXVpcmVfXygvKiEgLi4vdXRpbHMvY29tcHV0ZU9mZnNldHMuanMgKi8gIi4vbm9kZV9tb2R1bGVzL0Bwb3BwZXJqcy9jb3JlL2xpYi91dGlscy9jb21wdXRlT2Zmc2V0cy5qcyIpOwoKCmZ1bmN0aW9uIHBvcHBlck9mZnNldHMoX3JlZikgewogIHZhciBzdGF0ZSA9IF9yZWYuc3RhdGUsCiAgICAgIG5hbWUgPSBfcmVmLm5hbWU7CiAgLy8gT2Zmc2V0cyBhcmUgdGhlIGFjdHVhbCBwb3NpdGlvbiB0aGUgcG9wcGVyIG5lZWRzIHRvIGhhdmUgdG8gYmUKICAvLyBwcm9wZXJseSBwb3NpdGlvbmVkIG5lYXIgaXRzIHJlZmVyZW5jZSBlbGVtZW50CiAgLy8gVGhpcyBpcyB0aGUgbW9zdCBiYXNpYyBwbGFjZW1lbnQsIGFuZCB3aWxsIGJlIGFkanVzdGVkIGJ5CiAgLy8gdGhlIG1vZGlmaWVycyBpbiB0aGUgbmV4dCBzdGVwCiAgc3RhdGUubW9kaWZpZXJzRGF0YVtuYW1lXSA9ICgwLF91dGlsc19jb21wdXRlT2Zmc2V0c19qc19fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMF9fWyJkZWZhdWx0Il0pKHsKICAgIHJlZmVyZW5jZTogc3RhdGUucmVjdHMucmVmZXJlbmNlLAogICAgZWxlbWVudDogc3RhdGUucmVjdHMucG9wcGVyLAogICAgc3RyYXRlZ3k6ICdhYnNvbHV0ZScsCiAgICBwbGFjZW1lbnQ6IHN0YXRlLnBsYWNlbWVudAogIH0pOwp9IC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBpbXBvcnQvbm8tdW51c2VkLW1vZHVsZXMKCgovKiBoYXJtb255IGRlZmF1bHQgZXhwb3J0ICovIF9fd2VicGFja19leHBvcnRzX19bImRlZmF1bHQiXSA9ICh7CiAgbmFtZTogJ3BvcHBlck9mZnNldHMnLAogIGVuYWJsZWQ6IHRydWUsCiAgcGhhc2U6ICdyZWFkJywKICBmbjogcG9wcGVyT2Zmc2V0cywKICBkYXRhOiB7fQp9KTsKCi8qKiovIH0pLAoKLyoqKi8gIi4vbm9kZV9tb2R1bGVzL0Bwb3BwZXJqcy9jb3JlL2xpYi9tb2RpZmllcnMvcHJldmVudE92ZXJmbG93LmpzIjoKLyohKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiEqXAogICEqKiogLi9ub2RlX21vZHVsZXMvQHBvcHBlcmpzL2NvcmUvbGliL21vZGlmaWVycy9wcmV2ZW50T3ZlcmZsb3cuanMgKioqIQogIFwqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqLwovKioqLyAoZnVuY3Rpb24oX191bnVzZWRfd2VicGFja19tb2R1bGUsIF9fd2VicGFja19leHBvcnRzX18sIF9fd2VicGFja19yZXF1aXJlX18pIHsKCiJ1c2Ugc3RyaWN0IjsKX193ZWJwYWNrX3JlcXVpcmVfXy5yKF9fd2VicGFja19leHBvcnRzX18pOwovKiBoYXJtb255IGltcG9ydCAqLyB2YXIgX2VudW1zX2pzX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV81X18gPSBfX3dlYnBhY2tfcmVxdWlyZV9fKC8qISAuLi9lbnVtcy5qcyAqLyAiLi9ub2RlX21vZHVsZXMvQHBvcHBlcmpzL2NvcmUvbGliL2VudW1zLmpzIik7Ci8qIGhhcm1vbnkgaW1wb3J0ICovIHZhciBfdXRpbHNfZ2V0QmFzZVBsYWNlbWVudF9qc19fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMV9fID0gX193ZWJwYWNrX3JlcXVpcmVfXygvKiEgLi4vdXRpbHMvZ2V0QmFzZVBsYWNlbWVudC5qcyAqLyAiLi9ub2RlX21vZHVsZXMvQHBvcHBlcmpzL2NvcmUvbGliL3V0aWxzL2dldEJhc2VQbGFjZW1lbnQuanMiKTsKLyogaGFybW9ueSBpbXBvcnQgKi8gdmFyIF91dGlsc19nZXRNYWluQXhpc0Zyb21QbGFjZW1lbnRfanNfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzNfXyA9IF9fd2VicGFja19yZXF1aXJlX18oLyohIC4uL3V0aWxzL2dldE1haW5BeGlzRnJvbVBsYWNlbWVudC5qcyAqLyAiLi9ub2RlX21vZHVsZXMvQHBvcHBlcmpzL2NvcmUvbGliL3V0aWxzL2dldE1haW5BeGlzRnJvbVBsYWNlbWVudC5qcyIpOwovKiBoYXJtb255IGltcG9ydCAqLyB2YXIgX3V0aWxzX2dldEFsdEF4aXNfanNfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzRfXyA9IF9fd2VicGFja19yZXF1aXJlX18oLyohIC4uL3V0aWxzL2dldEFsdEF4aXMuanMgKi8gIi4vbm9kZV9tb2R1bGVzL0Bwb3BwZXJqcy9jb3JlL2xpYi91dGlscy9nZXRBbHRBeGlzLmpzIik7Ci8qIGhhcm1vbnkgaW1wb3J0ICovIHZhciBfdXRpbHNfd2l0aGluX2pzX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV84X18gPSBfX3dlYnBhY2tfcmVxdWlyZV9fKC8qISAuLi91dGlscy93aXRoaW4uanMgKi8gIi4vbm9kZV9tb2R1bGVzL0Bwb3BwZXJqcy9jb3JlL2xpYi91dGlscy93aXRoaW4uanMiKTsKLyogaGFybW9ueSBpbXBvcnQgKi8gdmFyIF9kb21fdXRpbHNfZ2V0TGF5b3V0UmVjdF9qc19fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfNl9fID0gX193ZWJwYWNrX3JlcXVpcmVfXygvKiEgLi4vZG9tLXV0aWxzL2dldExheW91dFJlY3QuanMgKi8gIi4vbm9kZV9tb2R1bGVzL0Bwb3BwZXJqcy9jb3JlL2xpYi9kb20tdXRpbHMvZ2V0TGF5b3V0UmVjdC5qcyIpOwovKiBoYXJtb255IGltcG9ydCAqLyB2YXIgX2RvbV91dGlsc19nZXRPZmZzZXRQYXJlbnRfanNfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzlfXyA9IF9fd2VicGFja19yZXF1aXJlX18oLyohIC4uL2RvbS11dGlscy9nZXRPZmZzZXRQYXJlbnQuanMgKi8gIi4vbm9kZV9tb2R1bGVzL0Bwb3BwZXJqcy9jb3JlL2xpYi9kb20tdXRpbHMvZ2V0T2Zmc2V0UGFyZW50LmpzIik7Ci8qIGhhcm1vbnkgaW1wb3J0ICovIHZhciBfdXRpbHNfZGV0ZWN0T3ZlcmZsb3dfanNfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzBfXyA9IF9fd2VicGFja19yZXF1aXJlX18oLyohIC4uL3V0aWxzL2RldGVjdE92ZXJmbG93LmpzICovICIuL25vZGVfbW9kdWxlcy9AcG9wcGVyanMvY29yZS9saWIvdXRpbHMvZGV0ZWN0T3ZlcmZsb3cuanMiKTsKLyogaGFybW9ueSBpbXBvcnQgKi8gdmFyIF91dGlsc19nZXRWYXJpYXRpb25fanNfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzJfXyA9IF9fd2VicGFja19yZXF1aXJlX18oLyohIC4uL3V0aWxzL2dldFZhcmlhdGlvbi5qcyAqLyAiLi9ub2RlX21vZHVsZXMvQHBvcHBlcmpzL2NvcmUvbGliL3V0aWxzL2dldFZhcmlhdGlvbi5qcyIpOwovKiBoYXJtb255IGltcG9ydCAqLyB2YXIgX3V0aWxzX2dldEZyZXNoU2lkZU9iamVjdF9qc19fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfN19fID0gX193ZWJwYWNrX3JlcXVpcmVfXygvKiEgLi4vdXRpbHMvZ2V0RnJlc2hTaWRlT2JqZWN0LmpzICovICIuL25vZGVfbW9kdWxlcy9AcG9wcGVyanMvY29yZS9saWIvdXRpbHMvZ2V0RnJlc2hTaWRlT2JqZWN0LmpzIik7Ci8qIGhhcm1vbnkgaW1wb3J0ICovIHZhciBfdXRpbHNfbWF0aF9qc19fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMTBfXyA9IF9fd2VicGFja19yZXF1aXJlX18oLyohIC4uL3V0aWxzL21hdGguanMgKi8gIi4vbm9kZV9tb2R1bGVzL0Bwb3BwZXJqcy9jb3JlL2xpYi91dGlscy9tYXRoLmpzIik7CgoKCgoKCgoKCgoKCmZ1bmN0aW9uIHByZXZlbnRPdmVyZmxvdyhfcmVmKSB7CiAgdmFyIHN0YXRlID0gX3JlZi5zdGF0ZSwKICAgICAgb3B0aW9ucyA9IF9yZWYub3B0aW9ucywKICAgICAgbmFtZSA9IF9yZWYubmFtZTsKICB2YXIgX29wdGlvbnMkbWFpbkF4aXMgPSBvcHRpb25zLm1haW5BeGlzLAogICAgICBjaGVja01haW5BeGlzID0gX29wdGlvbnMkbWFpbkF4aXMgPT09IHZvaWQgMCA/IHRydWUgOiBfb3B0aW9ucyRtYWluQXhpcywKICAgICAgX29wdGlvbnMkYWx0QXhpcyA9IG9wdGlvbnMuYWx0QXhpcywKICAgICAgY2hlY2tBbHRBeGlzID0gX29wdGlvbnMkYWx0QXhpcyA9PT0gdm9pZCAwID8gZmFsc2UgOiBfb3B0aW9ucyRhbHRBeGlzLAogICAgICBib3VuZGFyeSA9IG9wdGlvbnMuYm91bmRhcnksCiAgICAgIHJvb3RCb3VuZGFyeSA9IG9wdGlvbnMucm9vdEJvdW5kYXJ5LAogICAgICBhbHRCb3VuZGFyeSA9IG9wdGlvbnMuYWx0Qm91bmRhcnksCiAgICAgIHBhZGRpbmcgPSBvcHRpb25zLnBhZGRpbmcsCiAgICAgIF9vcHRpb25zJHRldGhlciA9IG9wdGlvbnMudGV0aGVyLAogICAgICB0ZXRoZXIgPSBfb3B0aW9ucyR0ZXRoZXIgPT09IHZvaWQgMCA/IHRydWUgOiBfb3B0aW9ucyR0ZXRoZXIsCiAgICAgIF9vcHRpb25zJHRldGhlck9mZnNldCA9IG9wdGlvbnMudGV0aGVyT2Zmc2V0LAogICAgICB0ZXRoZXJPZmZzZXQgPSBfb3B0aW9ucyR0ZXRoZXJPZmZzZXQgPT09IHZvaWQgMCA/IDAgOiBfb3B0aW9ucyR0ZXRoZXJPZmZzZXQ7CiAgdmFyIG92ZXJmbG93ID0gKDAsX3V0aWxzX2RldGVjdE92ZXJmbG93X2pzX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8wX19bImRlZmF1bHQiXSkoc3RhdGUsIHsKICAgIGJvdW5kYXJ5OiBib3VuZGFyeSwKICAgIHJvb3RCb3VuZGFyeTogcm9vdEJvdW5kYXJ5LAogICAgcGFkZGluZzogcGFkZGluZywKICAgIGFsdEJvdW5kYXJ5OiBhbHRCb3VuZGFyeQogIH0pOwogIHZhciBiYXNlUGxhY2VtZW50ID0gKDAsX3V0aWxzX2dldEJhc2VQbGFjZW1lbnRfanNfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzFfX1siZGVmYXVsdCJdKShzdGF0ZS5wbGFjZW1lbnQpOwogIHZhciB2YXJpYXRpb24gPSAoMCxfdXRpbHNfZ2V0VmFyaWF0aW9uX2pzX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8yX19bImRlZmF1bHQiXSkoc3RhdGUucGxhY2VtZW50KTsKICB2YXIgaXNCYXNlUGxhY2VtZW50ID0gIXZhcmlhdGlvbjsKICB2YXIgbWFpbkF4aXMgPSAoMCxfdXRpbHNfZ2V0TWFpbkF4aXNGcm9tUGxhY2VtZW50X2pzX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8zX19bImRlZmF1bHQiXSkoYmFzZVBsYWNlbWVudCk7CiAgdmFyIGFsdEF4aXMgPSAoMCxfdXRpbHNfZ2V0QWx0QXhpc19qc19fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfNF9fWyJkZWZhdWx0Il0pKG1haW5BeGlzKTsKICB2YXIgcG9wcGVyT2Zmc2V0cyA9IHN0YXRlLm1vZGlmaWVyc0RhdGEucG9wcGVyT2Zmc2V0czsKICB2YXIgcmVmZXJlbmNlUmVjdCA9IHN0YXRlLnJlY3RzLnJlZmVyZW5jZTsKICB2YXIgcG9wcGVyUmVjdCA9IHN0YXRlLnJlY3RzLnBvcHBlcjsKICB2YXIgdGV0aGVyT2Zmc2V0VmFsdWUgPSB0eXBlb2YgdGV0aGVyT2Zmc2V0ID09PSAnZnVuY3Rpb24nID8gdGV0aGVyT2Zmc2V0KE9iamVjdC5hc3NpZ24oe30sIHN0YXRlLnJlY3RzLCB7CiAgICBwbGFjZW1lbnQ6IHN0YXRlLnBsYWNlbWVudAogIH0pKSA6IHRldGhlck9mZnNldDsKICB2YXIgbm9ybWFsaXplZFRldGhlck9mZnNldFZhbHVlID0gdHlwZW9mIHRldGhlck9mZnNldFZhbHVlID09PSAnbnVtYmVyJyA/IHsKICAgIG1haW5BeGlzOiB0ZXRoZXJPZmZzZXRWYWx1ZSwKICAgIGFsdEF4aXM6IHRldGhlck9mZnNldFZhbHVlCiAgfSA6IE9iamVjdC5hc3NpZ24oewogICAgbWFpbkF4aXM6IDAsCiAgICBhbHRBeGlzOiAwCiAgfSwgdGV0aGVyT2Zmc2V0VmFsdWUpOwogIHZhciBvZmZzZXRNb2RpZmllclN0YXRlID0gc3RhdGUubW9kaWZpZXJzRGF0YS5vZmZzZXQgPyBzdGF0ZS5tb2RpZmllcnNEYXRhLm9mZnNldFtzdGF0ZS5wbGFjZW1lbnRdIDogbnVsbDsKICB2YXIgZGF0YSA9IHsKICAgIHg6IDAsCiAgICB5OiAwCiAgfTsKCiAgaWYgKCFwb3BwZXJPZmZzZXRzKSB7CiAgICByZXR1cm47CiAgfQoKICBpZiAoY2hlY2tNYWluQXhpcykgewogICAgdmFyIF9vZmZzZXRNb2RpZmllclN0YXRlJDsKCiAgICB2YXIgbWFpblNpZGUgPSBtYWluQXhpcyA9PT0gJ3knID8gX2VudW1zX2pzX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV81X18udG9wIDogX2VudW1zX2pzX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV81X18ubGVmdDsKICAgIHZhciBhbHRTaWRlID0gbWFpbkF4aXMgPT09ICd5JyA/IF9lbnVtc19qc19fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfNV9fLmJvdHRvbSA6IF9lbnVtc19qc19fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfNV9fLnJpZ2h0OwogICAgdmFyIGxlbiA9IG1haW5BeGlzID09PSAneScgPyAnaGVpZ2h0JyA6ICd3aWR0aCc7CiAgICB2YXIgb2Zmc2V0ID0gcG9wcGVyT2Zmc2V0c1ttYWluQXhpc107CiAgICB2YXIgbWluID0gb2Zmc2V0ICsgb3ZlcmZsb3dbbWFpblNpZGVdOwogICAgdmFyIG1heCA9IG9mZnNldCAtIG92ZXJmbG93W2FsdFNpZGVdOwogICAgdmFyIGFkZGl0aXZlID0gdGV0aGVyID8gLXBvcHBlclJlY3RbbGVuXSAvIDIgOiAwOwogICAgdmFyIG1pbkxlbiA9IHZhcmlhdGlvbiA9PT0gX2VudW1zX2pzX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV81X18uc3RhcnQgPyByZWZlcmVuY2VSZWN0W2xlbl0gOiBwb3BwZXJSZWN0W2xlbl07CiAgICB2YXIgbWF4TGVuID0gdmFyaWF0aW9uID09PSBfZW51bXNfanNfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzVfXy5zdGFydCA/IC1wb3BwZXJSZWN0W2xlbl0gOiAtcmVmZXJlbmNlUmVjdFtsZW5dOyAvLyBXZSBuZWVkIHRvIGluY2x1ZGUgdGhlIGFycm93IGluIHRoZSBjYWxjdWxhdGlvbiBzbyB0aGUgYXJyb3cgZG9lc24ndCBnbwogICAgLy8gb3V0c2lkZSB0aGUgcmVmZXJlbmNlIGJvdW5kcwoKICAgIHZhciBhcnJvd0VsZW1lbnQgPSBzdGF0ZS5lbGVtZW50cy5hcnJvdzsKICAgIHZhciBhcnJvd1JlY3QgPSB0ZXRoZXIgJiYgYXJyb3dFbGVtZW50ID8gKDAsX2RvbV91dGlsc19nZXRMYXlvdXRSZWN0X2pzX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV82X19bImRlZmF1bHQiXSkoYXJyb3dFbGVtZW50KSA6IHsKICAgICAgd2lkdGg6IDAsCiAgICAgIGhlaWdodDogMAogICAgfTsKICAgIHZhciBhcnJvd1BhZGRpbmdPYmplY3QgPSBzdGF0ZS5tb2RpZmllcnNEYXRhWydhcnJvdyNwZXJzaXN0ZW50J10gPyBzdGF0ZS5tb2RpZmllcnNEYXRhWydhcnJvdyNwZXJzaXN0ZW50J10ucGFkZGluZyA6ICgwLF91dGlsc19nZXRGcmVzaFNpZGVPYmplY3RfanNfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzdfX1siZGVmYXVsdCJdKSgpOwogICAgdmFyIGFycm93UGFkZGluZ01pbiA9IGFycm93UGFkZGluZ09iamVjdFttYWluU2lkZV07CiAgICB2YXIgYXJyb3dQYWRkaW5nTWF4ID0gYXJyb3dQYWRkaW5nT2JqZWN0W2FsdFNpZGVdOyAvLyBJZiB0aGUgcmVmZXJlbmNlIGxlbmd0aCBpcyBzbWFsbGVyIHRoYW4gdGhlIGFycm93IGxlbmd0aCwgd2UgZG9uJ3Qgd2FudAogICAgLy8gdG8gaW5jbHVkZSBpdHMgZnVsbCBzaXplIGluIHRoZSBjYWxjdWxhdGlvbi4gSWYgdGhlIHJlZmVyZW5jZSBpcyBzbWFsbAogICAgLy8gYW5kIG5lYXIgdGhlIGVkZ2Ugb2YgYSBib3VuZGFyeSwgdGhlIHBvcHBlciBjYW4gb3ZlcmZsb3cgZXZlbiBpZiB0aGUKICAgIC8vIHJlZmVyZW5jZSBpcyBub3Qgb3ZlcmZsb3dpbmcgYXMgd2VsbCAoZS5nLiB2aXJ0dWFsIGVsZW1lbnRzIHdpdGggbm8KICAgIC8vIHdpZHRoIG9yIGhlaWdodCkKCiAgICB2YXIgYXJyb3dMZW4gPSAoMCxfdXRpbHNfd2l0aGluX2pzX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV84X18ud2l0aGluKSgwLCByZWZlcmVuY2VSZWN0W2xlbl0sIGFycm93UmVjdFtsZW5dKTsKICAgIHZhciBtaW5PZmZzZXQgPSBpc0Jhc2VQbGFjZW1lbnQgPyByZWZlcmVuY2VSZWN0W2xlbl0gLyAyIC0gYWRkaXRpdmUgLSBhcnJvd0xlbiAtIGFycm93UGFkZGluZ01pbiAtIG5vcm1hbGl6ZWRUZXRoZXJPZmZzZXRWYWx1ZS5tYWluQXhpcyA6IG1pbkxlbiAtIGFycm93TGVuIC0gYXJyb3dQYWRkaW5nTWluIC0gbm9ybWFsaXplZFRldGhlck9mZnNldFZhbHVlLm1haW5BeGlzOwogICAgdmFyIG1heE9mZnNldCA9IGlzQmFzZVBsYWNlbWVudCA/IC1yZWZlcmVuY2VSZWN0W2xlbl0gLyAyICsgYWRkaXRpdmUgKyBhcnJvd0xlbiArIGFycm93UGFkZGluZ01heCArIG5vcm1hbGl6ZWRUZXRoZXJPZmZzZXRWYWx1ZS5tYWluQXhpcyA6IG1heExlbiArIGFycm93TGVuICsgYXJyb3dQYWRkaW5nTWF4ICsgbm9ybWFsaXplZFRldGhlck9mZnNldFZhbHVlLm1haW5BeGlzOwogICAgdmFyIGFycm93T2Zmc2V0UGFyZW50ID0gc3RhdGUuZWxlbWVudHMuYXJyb3cgJiYgKDAsX2RvbV91dGlsc19nZXRPZmZzZXRQYXJlbnRfanNfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzlfX1siZGVmYXVsdCJdKShzdGF0ZS5lbGVtZW50cy5hcnJvdyk7CiAgICB2YXIgY2xpZW50T2Zmc2V0ID0gYXJyb3dPZmZzZXRQYXJlbnQgPyBtYWluQXhpcyA9PT0gJ3knID8gYXJyb3dPZmZzZXRQYXJlbnQuY2xpZW50VG9wIHx8IDAgOiBhcnJvd09mZnNldFBhcmVudC5jbGllbnRMZWZ0IHx8IDAgOiAwOwogICAgdmFyIG9mZnNldE1vZGlmaWVyVmFsdWUgPSAoX29mZnNldE1vZGlmaWVyU3RhdGUkID0gb2Zmc2V0TW9kaWZpZXJTdGF0ZSA9PSBudWxsID8gdm9pZCAwIDogb2Zmc2V0TW9kaWZpZXJTdGF0ZVttYWluQXhpc10pICE9IG51bGwgPyBfb2Zmc2V0TW9kaWZpZXJTdGF0ZSQgOiAwOwogICAgdmFyIHRldGhlck1pbiA9IG9mZnNldCArIG1pbk9mZnNldCAtIG9mZnNldE1vZGlmaWVyVmFsdWUgLSBjbGllbnRPZmZzZXQ7CiAgICB2YXIgdGV0aGVyTWF4ID0gb2Zmc2V0ICsgbWF4T2Zmc2V0IC0gb2Zmc2V0TW9kaWZpZXJWYWx1ZTsKICAgIHZhciBwcmV2ZW50ZWRPZmZzZXQgPSAoMCxfdXRpbHNfd2l0aGluX2pzX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV84X18ud2l0aGluKSh0ZXRoZXIgPyAoMCxfdXRpbHNfbWF0aF9qc19fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMTBfXy5taW4pKG1pbiwgdGV0aGVyTWluKSA6IG1pbiwgb2Zmc2V0LCB0ZXRoZXIgPyAoMCxfdXRpbHNfbWF0aF9qc19fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMTBfXy5tYXgpKG1heCwgdGV0aGVyTWF4KSA6IG1heCk7CiAgICBwb3BwZXJPZmZzZXRzW21haW5BeGlzXSA9IHByZXZlbnRlZE9mZnNldDsKICAgIGRhdGFbbWFpbkF4aXNdID0gcHJldmVudGVkT2Zmc2V0IC0gb2Zmc2V0OwogIH0KCiAgaWYgKGNoZWNrQWx0QXhpcykgewogICAgdmFyIF9vZmZzZXRNb2RpZmllclN0YXRlJDI7CgogICAgdmFyIF9tYWluU2lkZSA9IG1haW5BeGlzID09PSAneCcgPyBfZW51bXNfanNfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzVfXy50b3AgOiBfZW51bXNfanNfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzVfXy5sZWZ0OwoKICAgIHZhciBfYWx0U2lkZSA9IG1haW5BeGlzID09PSAneCcgPyBfZW51bXNfanNfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzVfXy5ib3R0b20gOiBfZW51bXNfanNfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzVfXy5yaWdodDsKCiAgICB2YXIgX29mZnNldCA9IHBvcHBlck9mZnNldHNbYWx0QXhpc107CgogICAgdmFyIF9sZW4gPSBhbHRBeGlzID09PSAneScgPyAnaGVpZ2h0JyA6ICd3aWR0aCc7CgogICAgdmFyIF9taW4gPSBfb2Zmc2V0ICsgb3ZlcmZsb3dbX21haW5TaWRlXTsKCiAgICB2YXIgX21heCA9IF9vZmZzZXQgLSBvdmVyZmxvd1tfYWx0U2lkZV07CgogICAgdmFyIGlzT3JpZ2luU2lkZSA9IFtfZW51bXNfanNfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzVfXy50b3AsIF9lbnVtc19qc19fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfNV9fLmxlZnRdLmluZGV4T2YoYmFzZVBsYWNlbWVudCkgIT09IC0xOwoKICAgIHZhciBfb2Zmc2V0TW9kaWZpZXJWYWx1ZSA9IChfb2Zmc2V0TW9kaWZpZXJTdGF0ZSQyID0gb2Zmc2V0TW9kaWZpZXJTdGF0ZSA9PSBudWxsID8gdm9pZCAwIDogb2Zmc2V0TW9kaWZpZXJTdGF0ZVthbHRBeGlzXSkgIT0gbnVsbCA/IF9vZmZzZXRNb2RpZmllclN0YXRlJDIgOiAwOwoKICAgIHZhciBfdGV0aGVyTWluID0gaXNPcmlnaW5TaWRlID8gX21pbiA6IF9vZmZzZXQgLSByZWZlcmVuY2VSZWN0W19sZW5dIC0gcG9wcGVyUmVjdFtfbGVuXSAtIF9vZmZzZXRNb2RpZmllclZhbHVlICsgbm9ybWFsaXplZFRldGhlck9mZnNldFZhbHVlLmFsdEF4aXM7CgogICAgdmFyIF90ZXRoZXJNYXggPSBpc09yaWdpblNpZGUgPyBfb2Zmc2V0ICsgcmVmZXJlbmNlUmVjdFtfbGVuXSArIHBvcHBlclJlY3RbX2xlbl0gLSBfb2Zmc2V0TW9kaWZpZXJWYWx1ZSAtIG5vcm1hbGl6ZWRUZXRoZXJPZmZzZXRWYWx1ZS5hbHRBeGlzIDogX21heDsKCiAgICB2YXIgX3ByZXZlbnRlZE9mZnNldCA9IHRldGhlciAmJiBpc09yaWdpblNpZGUgPyAoMCxfdXRpbHNfd2l0aGluX2pzX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV84X18ud2l0aGluTWF4Q2xhbXApKF90ZXRoZXJNaW4sIF9vZmZzZXQsIF90ZXRoZXJNYXgpIDogKDAsX3V0aWxzX3dpdGhpbl9qc19fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfOF9fLndpdGhpbikodGV0aGVyID8gX3RldGhlck1pbiA6IF9taW4sIF9vZmZzZXQsIHRldGhlciA/IF90ZXRoZXJNYXggOiBfbWF4KTsKCiAgICBwb3BwZXJPZmZzZXRzW2FsdEF4aXNdID0gX3ByZXZlbnRlZE9mZnNldDsKICAgIGRhdGFbYWx0QXhpc10gPSBfcHJldmVudGVkT2Zmc2V0IC0gX29mZnNldDsKICB9CgogIHN0YXRlLm1vZGlmaWVyc0RhdGFbbmFtZV0gPSBkYXRhOwp9IC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBpbXBvcnQvbm8tdW51c2VkLW1vZHVsZXMKCgovKiBoYXJtb255IGRlZmF1bHQgZXhwb3J0ICovIF9fd2VicGFja19leHBvcnRzX19bImRlZmF1bHQiXSA9ICh7CiAgbmFtZTogJ3ByZXZlbnRPdmVyZmxvdycsCiAgZW5hYmxlZDogdHJ1ZSwKICBwaGFzZTogJ21haW4nLAogIGZuOiBwcmV2ZW50T3ZlcmZsb3csCiAgcmVxdWlyZXNJZkV4aXN0czogWydvZmZzZXQnXQp9KTsKCi8qKiovIH0pLAoKLyoqKi8gIi4vbm9kZV9tb2R1bGVzL0Bwb3BwZXJqcy9jb3JlL2xpYi9wb3BwZXItbGl0ZS5qcyI6Ci8qISoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqISpcCiAgISoqKiAuL25vZGVfbW9kdWxlcy9AcG9wcGVyanMvY29yZS9saWIvcG9wcGVyLWxpdGUuanMgKioqIQogIFwqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKi8KLyoqKi8gKGZ1bmN0aW9uKF9fdW51c2VkX3dlYnBhY2tfbW9kdWxlLCBfX3dlYnBhY2tfZXhwb3J0c19fLCBfX3dlYnBhY2tfcmVxdWlyZV9fKSB7CgoidXNlIHN0cmljdCI7Cl9fd2VicGFja19yZXF1aXJlX18ucihfX3dlYnBhY2tfZXhwb3J0c19fKTsKLyogaGFybW9ueSBleHBvcnQgKi8gX193ZWJwYWNrX3JlcXVpcmVfXy5kKF9fd2VicGFja19leHBvcnRzX18sIHsKLyogaGFybW9ueSBleHBvcnQgKi8gICAiY3JlYXRlUG9wcGVyIjogZnVuY3Rpb24oKSB7IHJldHVybiAvKiBiaW5kaW5nICovIGNyZWF0ZVBvcHBlcjsgfSwKLyogaGFybW9ueSBleHBvcnQgKi8gICAiZGVmYXVsdE1vZGlmaWVycyI6IGZ1bmN0aW9uKCkgeyByZXR1cm4gLyogYmluZGluZyAqLyBkZWZhdWx0TW9kaWZpZXJzOyB9LAovKiBoYXJtb255IGV4cG9ydCAqLyAgICJkZXRlY3RPdmVyZmxvdyI6IGZ1bmN0aW9uKCkgeyByZXR1cm4gLyogcmVleHBvcnQgc2FmZSAqLyBfY3JlYXRlUG9wcGVyX2pzX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV81X19bImRlZmF1bHQiXTsgfSwKLyogaGFybW9ueSBleHBvcnQgKi8gICAicG9wcGVyR2VuZXJhdG9yIjogZnVuY3Rpb24oKSB7IHJldHVybiAvKiByZWV4cG9ydCBzYWZlICovIF9jcmVhdGVQb3BwZXJfanNfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzRfXy5wb3BwZXJHZW5lcmF0b3I7IH0KLyogaGFybW9ueSBleHBvcnQgKi8gfSk7Ci8qIGhhcm1vbnkgaW1wb3J0ICovIHZhciBfY3JlYXRlUG9wcGVyX2pzX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV80X18gPSBfX3dlYnBhY2tfcmVxdWlyZV9fKC8qISAuL2NyZWF0ZVBvcHBlci5qcyAqLyAiLi9ub2RlX21vZHVsZXMvQHBvcHBlcmpzL2NvcmUvbGliL2NyZWF0ZVBvcHBlci5qcyIpOwovKiBoYXJtb255IGltcG9ydCAqLyB2YXIgX2NyZWF0ZVBvcHBlcl9qc19fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfNV9fID0gX193ZWJwYWNrX3JlcXVpcmVfXygvKiEgLi9jcmVhdGVQb3BwZXIuanMgKi8gIi4vbm9kZV9tb2R1bGVzL0Bwb3BwZXJqcy9jb3JlL2xpYi91dGlscy9kZXRlY3RPdmVyZmxvdy5qcyIpOwovKiBoYXJtb255IGltcG9ydCAqLyB2YXIgX21vZGlmaWVyc19ldmVudExpc3RlbmVyc19qc19fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMF9fID0gX193ZWJwYWNrX3JlcXVpcmVfXygvKiEgLi9tb2RpZmllcnMvZXZlbnRMaXN0ZW5lcnMuanMgKi8gIi4vbm9kZV9tb2R1bGVzL0Bwb3BwZXJqcy9jb3JlL2xpYi9tb2RpZmllcnMvZXZlbnRMaXN0ZW5lcnMuanMiKTsKLyogaGFybW9ueSBpbXBvcnQgKi8gdmFyIF9tb2RpZmllcnNfcG9wcGVyT2Zmc2V0c19qc19fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMV9fID0gX193ZWJwYWNrX3JlcXVpcmVfXygvKiEgLi9tb2RpZmllcnMvcG9wcGVyT2Zmc2V0cy5qcyAqLyAiLi9ub2RlX21vZHVsZXMvQHBvcHBlcmpzL2NvcmUvbGliL21vZGlmaWVycy9wb3BwZXJPZmZzZXRzLmpzIik7Ci8qIGhhcm1vbnkgaW1wb3J0ICovIHZhciBfbW9kaWZpZXJzX2NvbXB1dGVTdHlsZXNfanNfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzJfXyA9IF9fd2VicGFja19yZXF1aXJlX18oLyohIC4vbW9kaWZpZXJzL2NvbXB1dGVTdHlsZXMuanMgKi8gIi4vbm9kZV9tb2R1bGVzL0Bwb3BwZXJqcy9jb3JlL2xpYi9tb2RpZmllcnMvY29tcHV0ZVN0eWxlcy5qcyIpOwovKiBoYXJtb255IGltcG9ydCAqLyB2YXIgX21vZGlmaWVyc19hcHBseVN0eWxlc19qc19fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfM19fID0gX193ZWJwYWNrX3JlcXVpcmVfXygvKiEgLi9tb2RpZmllcnMvYXBwbHlTdHlsZXMuanMgKi8gIi4vbm9kZV9tb2R1bGVzL0Bwb3BwZXJqcy9jb3JlL2xpYi9tb2RpZmllcnMvYXBwbHlTdHlsZXMuanMiKTsKCgoKCgp2YXIgZGVmYXVsdE1vZGlmaWVycyA9IFtfbW9kaWZpZXJzX2V2ZW50TGlzdGVuZXJzX2pzX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8wX19bImRlZmF1bHQiXSwgX21vZGlmaWVyc19wb3BwZXJPZmZzZXRzX2pzX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8xX19bImRlZmF1bHQiXSwgX21vZGlmaWVyc19jb21wdXRlU3R5bGVzX2pzX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8yX19bImRlZmF1bHQiXSwgX21vZGlmaWVyc19hcHBseVN0eWxlc19qc19fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfM19fWyJkZWZhdWx0Il1dOwp2YXIgY3JlYXRlUG9wcGVyID0gLyojX19QVVJFX18qLygwLF9jcmVhdGVQb3BwZXJfanNfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzRfXy5wb3BwZXJHZW5lcmF0b3IpKHsKICBkZWZhdWx0TW9kaWZpZXJzOiBkZWZhdWx0TW9kaWZpZXJzCn0pOyAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgaW1wb3J0L25vLXVudXNlZC1tb2R1bGVzCgoKCi8qKiovIH0pLAoKLyoqKi8gIi4vbm9kZV9tb2R1bGVzL0Bwb3BwZXJqcy9jb3JlL2xpYi9wb3BwZXIuanMiOgovKiEqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiohKlwKICAhKioqIC4vbm9kZV9tb2R1bGVzL0Bwb3BwZXJqcy9jb3JlL2xpYi9wb3BwZXIuanMgKioqIQogIFwqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiovCi8qKiovIChmdW5jdGlvbihfX3VudXNlZF93ZWJwYWNrX21vZHVsZSwgX193ZWJwYWNrX2V4cG9ydHNfXywgX193ZWJwYWNrX3JlcXVpcmVfXykgewoKInVzZSBzdHJpY3QiOwpfX3dlYnBhY2tfcmVxdWlyZV9fLnIoX193ZWJwYWNrX2V4cG9ydHNfXyk7Ci8qIGhhcm1vbnkgZXhwb3J0ICovIF9fd2VicGFja19yZXF1aXJlX18uZChfX3dlYnBhY2tfZXhwb3J0c19fLCB7Ci8qIGhhcm1vbnkgZXhwb3J0ICovICAgImFwcGx5U3R5bGVzIjogZnVuY3Rpb24oKSB7IHJldHVybiAvKiByZWV4cG9ydCBzYWZlICovIF9tb2RpZmllcnNfaW5kZXhfanNfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzEyX18uYXBwbHlTdHlsZXM7IH0sCi8qIGhhcm1vbnkgZXhwb3J0ICovICAgImFycm93IjogZnVuY3Rpb24oKSB7IHJldHVybiAvKiByZWV4cG9ydCBzYWZlICovIF9tb2RpZmllcnNfaW5kZXhfanNfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzEyX18uYXJyb3c7IH0sCi8qIGhhcm1vbnkgZXhwb3J0ICovICAgImNvbXB1dGVTdHlsZXMiOiBmdW5jdGlvbigpIHsgcmV0dXJuIC8qIHJlZXhwb3J0IHNhZmUgKi8gX21vZGlmaWVyc19pbmRleF9qc19fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMTJfXy5jb21wdXRlU3R5bGVzOyB9LAovKiBoYXJtb255IGV4cG9ydCAqLyAgICJjcmVhdGVQb3BwZXIiOiBmdW5jdGlvbigpIHsgcmV0dXJuIC8qIGJpbmRpbmcgKi8gY3JlYXRlUG9wcGVyOyB9LAovKiBoYXJtb255IGV4cG9ydCAqLyAgICJjcmVhdGVQb3BwZXJMaXRlIjogZnVuY3Rpb24oKSB7IHJldHVybiAvKiByZWV4cG9ydCBzYWZlICovIF9wb3BwZXJfbGl0ZV9qc19fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMTFfXy5jcmVhdGVQb3BwZXI7IH0sCi8qIGhhcm1vbnkgZXhwb3J0ICovICAgImRlZmF1bHRNb2RpZmllcnMiOiBmdW5jdGlvbigpIHsgcmV0dXJuIC8qIGJpbmRpbmcgKi8gZGVmYXVsdE1vZGlmaWVyczsgfSwKLyogaGFybW9ueSBleHBvcnQgKi8gICAiZGV0ZWN0T3ZlcmZsb3ciOiBmdW5jdGlvbigpIHsgcmV0dXJuIC8qIHJlZXhwb3J0IHNhZmUgKi8gX2NyZWF0ZVBvcHBlcl9qc19fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMTBfX1siZGVmYXVsdCJdOyB9LAovKiBoYXJtb255IGV4cG9ydCAqLyAgICJldmVudExpc3RlbmVycyI6IGZ1bmN0aW9uKCkgeyByZXR1cm4gLyogcmVleHBvcnQgc2FmZSAqLyBfbW9kaWZpZXJzX2luZGV4X2pzX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8xMl9fLmV2ZW50TGlzdGVuZXJzOyB9LAovKiBoYXJtb255IGV4cG9ydCAqLyAgICJmbGlwIjogZnVuY3Rpb24oKSB7IHJldHVybiAvKiByZWV4cG9ydCBzYWZlICovIF9tb2RpZmllcnNfaW5kZXhfanNfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzEyX18uZmxpcDsgfSwKLyogaGFybW9ueSBleHBvcnQgKi8gICAiaGlkZSI6IGZ1bmN0aW9uKCkgeyByZXR1cm4gLyogcmVleHBvcnQgc2FmZSAqLyBfbW9kaWZpZXJzX2luZGV4X2pzX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8xMl9fLmhpZGU7IH0sCi8qIGhhcm1vbnkgZXhwb3J0ICovICAgIm9mZnNldCI6IGZ1bmN0aW9uKCkgeyByZXR1cm4gLyogcmVleHBvcnQgc2FmZSAqLyBfbW9kaWZpZXJzX2luZGV4X2pzX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8xMl9fLm9mZnNldDsgfSwKLyogaGFybW9ueSBleHBvcnQgKi8gICAicG9wcGVyR2VuZXJhdG9yIjogZnVuY3Rpb24oKSB7IHJldHVybiAvKiByZWV4cG9ydCBzYWZlICovIF9jcmVhdGVQb3BwZXJfanNfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzlfXy5wb3BwZXJHZW5lcmF0b3I7IH0sCi8qIGhhcm1vbnkgZXhwb3J0ICovICAgInBvcHBlck9mZnNldHMiOiBmdW5jdGlvbigpIHsgcmV0dXJuIC8qIHJlZXhwb3J0IHNhZmUgKi8gX21vZGlmaWVyc19pbmRleF9qc19fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMTJfXy5wb3BwZXJPZmZzZXRzOyB9LAovKiBoYXJtb255IGV4cG9ydCAqLyAgICJwcmV2ZW50T3ZlcmZsb3ciOiBmdW5jdGlvbigpIHsgcmV0dXJuIC8qIHJlZXhwb3J0IHNhZmUgKi8gX21vZGlmaWVyc19pbmRleF9qc19fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMTJfXy5wcmV2ZW50T3ZlcmZsb3c7IH0KLyogaGFybW9ueSBleHBvcnQgKi8gfSk7Ci8qIGhhcm1vbnkgaW1wb3J0ICovIHZhciBfY3JlYXRlUG9wcGVyX2pzX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV85X18gPSBfX3dlYnBhY2tfcmVxdWlyZV9fKC8qISAuL2NyZWF0ZVBvcHBlci5qcyAqLyAiLi9ub2RlX21vZHVsZXMvQHBvcHBlcmpzL2NvcmUvbGliL2NyZWF0ZVBvcHBlci5qcyIpOwovKiBoYXJtb255IGltcG9ydCAqLyB2YXIgX2NyZWF0ZVBvcHBlcl9qc19fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMTBfXyA9IF9fd2VicGFja19yZXF1aXJlX18oLyohIC4vY3JlYXRlUG9wcGVyLmpzICovICIuL25vZGVfbW9kdWxlcy9AcG9wcGVyanMvY29yZS9saWIvdXRpbHMvZGV0ZWN0T3ZlcmZsb3cuanMiKTsKLyogaGFybW9ueSBpbXBvcnQgKi8gdmFyIF9tb2RpZmllcnNfZXZlbnRMaXN0ZW5lcnNfanNfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzBfXyA9IF9fd2VicGFja19yZXF1aXJlX18oLyohIC4vbW9kaWZpZXJzL2V2ZW50TGlzdGVuZXJzLmpzICovICIuL25vZGVfbW9kdWxlcy9AcG9wcGVyanMvY29yZS9saWIvbW9kaWZpZXJzL2V2ZW50TGlzdGVuZXJzLmpzIik7Ci8qIGhhcm1vbnkgaW1wb3J0ICovIHZhciBfbW9kaWZpZXJzX3BvcHBlck9mZnNldHNfanNfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzFfXyA9IF9fd2VicGFja19yZXF1aXJlX18oLyohIC4vbW9kaWZpZXJzL3BvcHBlck9mZnNldHMuanMgKi8gIi4vbm9kZV9tb2R1bGVzL0Bwb3BwZXJqcy9jb3JlL2xpYi9tb2RpZmllcnMvcG9wcGVyT2Zmc2V0cy5qcyIpOwovKiBoYXJtb255IGltcG9ydCAqLyB2YXIgX21vZGlmaWVyc19jb21wdXRlU3R5bGVzX2pzX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8yX18gPSBfX3dlYnBhY2tfcmVxdWlyZV9fKC8qISAuL21vZGlmaWVycy9jb21wdXRlU3R5bGVzLmpzICovICIuL25vZGVfbW9kdWxlcy9AcG9wcGVyanMvY29yZS9saWIvbW9kaWZpZXJzL2NvbXB1dGVTdHlsZXMuanMiKTsKLyogaGFybW9ueSBpbXBvcnQgKi8gdmFyIF9tb2RpZmllcnNfYXBwbHlTdHlsZXNfanNfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzNfXyA9IF9fd2VicGFja19yZXF1aXJlX18oLyohIC4vbW9kaWZpZXJzL2FwcGx5U3R5bGVzLmpzICovICIuL25vZGVfbW9kdWxlcy9AcG9wcGVyanMvY29yZS9saWIvbW9kaWZpZXJzL2FwcGx5U3R5bGVzLmpzIik7Ci8qIGhhcm1vbnkgaW1wb3J0ICovIHZhciBfbW9kaWZpZXJzX29mZnNldF9qc19fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfNF9fID0gX193ZWJwYWNrX3JlcXVpcmVfXygvKiEgLi9tb2RpZmllcnMvb2Zmc2V0LmpzICovICIuL25vZGVfbW9kdWxlcy9AcG9wcGVyanMvY29yZS9saWIvbW9kaWZpZXJzL29mZnNldC5qcyIpOwovKiBoYXJtb255IGltcG9ydCAqLyB2YXIgX21vZGlmaWVyc19mbGlwX2pzX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV81X18gPSBfX3dlYnBhY2tfcmVxdWlyZV9fKC8qISAuL21vZGlmaWVycy9mbGlwLmpzICovICIuL25vZGVfbW9kdWxlcy9AcG9wcGVyanMvY29yZS9saWIvbW9kaWZpZXJzL2ZsaXAuanMiKTsKLyogaGFybW9ueSBpbXBvcnQgKi8gdmFyIF9tb2RpZmllcnNfcHJldmVudE92ZXJmbG93X2pzX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV82X18gPSBfX3dlYnBhY2tfcmVxdWlyZV9fKC8qISAuL21vZGlmaWVycy9wcmV2ZW50T3ZlcmZsb3cuanMgKi8gIi4vbm9kZV9tb2R1bGVzL0Bwb3BwZXJqcy9jb3JlL2xpYi9tb2RpZmllcnMvcHJldmVudE92ZXJmbG93LmpzIik7Ci8qIGhhcm1vbnkgaW1wb3J0ICovIHZhciBfbW9kaWZpZXJzX2Fycm93X2pzX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV83X18gPSBfX3dlYnBhY2tfcmVxdWlyZV9fKC8qISAuL21vZGlmaWVycy9hcnJvdy5qcyAqLyAiLi9ub2RlX21vZHVsZXMvQHBvcHBlcmpzL2NvcmUvbGliL21vZGlmaWVycy9hcnJvdy5qcyIpOwovKiBoYXJtb255IGltcG9ydCAqLyB2YXIgX21vZGlmaWVyc19oaWRlX2pzX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV84X18gPSBfX3dlYnBhY2tfcmVxdWlyZV9fKC8qISAuL21vZGlmaWVycy9oaWRlLmpzICovICIuL25vZGVfbW9kdWxlcy9AcG9wcGVyanMvY29yZS9saWIvbW9kaWZpZXJzL2hpZGUuanMiKTsKLyogaGFybW9ueSBpbXBvcnQgKi8gdmFyIF9wb3BwZXJfbGl0ZV9qc19fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMTFfXyA9IF9fd2VicGFja19yZXF1aXJlX18oLyohIC4vcG9wcGVyLWxpdGUuanMgKi8gIi4vbm9kZV9tb2R1bGVzL0Bwb3BwZXJqcy9jb3JlL2xpYi9wb3BwZXItbGl0ZS5qcyIpOwovKiBoYXJtb255IGltcG9ydCAqLyB2YXIgX21vZGlmaWVyc19pbmRleF9qc19fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMTJfXyA9IF9fd2VicGFja19yZXF1aXJlX18oLyohIC4vbW9kaWZpZXJzL2luZGV4LmpzICovICIuL25vZGVfbW9kdWxlcy9AcG9wcGVyanMvY29yZS9saWIvbW9kaWZpZXJzL2luZGV4LmpzIik7CgoKCgoKCgoKCgp2YXIgZGVmYXVsdE1vZGlmaWVycyA9IFtfbW9kaWZpZXJzX2V2ZW50TGlzdGVuZXJzX2pzX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8wX19bImRlZmF1bHQiXSwgX21vZGlmaWVyc19wb3BwZXJPZmZzZXRzX2pzX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8xX19bImRlZmF1bHQiXSwgX21vZGlmaWVyc19jb21wdXRlU3R5bGVzX2pzX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8yX19bImRlZmF1bHQiXSwgX21vZGlmaWVyc19hcHBseVN0eWxlc19qc19fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfM19fWyJkZWZhdWx0Il0sIF9tb2RpZmllcnNfb2Zmc2V0X2pzX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV80X19bImRlZmF1bHQiXSwgX21vZGlmaWVyc19mbGlwX2pzX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV81X19bImRlZmF1bHQiXSwgX21vZGlmaWVyc19wcmV2ZW50T3ZlcmZsb3dfanNfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzZfX1siZGVmYXVsdCJdLCBfbW9kaWZpZXJzX2Fycm93X2pzX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV83X19bImRlZmF1bHQiXSwgX21vZGlmaWVyc19oaWRlX2pzX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV84X19bImRlZmF1bHQiXV07CnZhciBjcmVhdGVQb3BwZXIgPSAvKiNfX1BVUkVfXyovKDAsX2NyZWF0ZVBvcHBlcl9qc19fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfOV9fLnBvcHBlckdlbmVyYXRvcikoewogIGRlZmF1bHRNb2RpZmllcnM6IGRlZmF1bHRNb2RpZmllcnMKfSk7IC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBpbXBvcnQvbm8tdW51c2VkLW1vZHVsZXMKCiAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgaW1wb3J0L25vLXVudXNlZC1tb2R1bGVzCgogLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIGltcG9ydC9uby11bnVzZWQtbW9kdWxlcwoKCgovKioqLyB9KSwKCi8qKiovICIuL25vZGVfbW9kdWxlcy9AcG9wcGVyanMvY29yZS9saWIvdXRpbHMvY29tcHV0ZUF1dG9QbGFjZW1lbnQuanMiOgovKiEqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiEqXAogICEqKiogLi9ub2RlX21vZHVsZXMvQHBvcHBlcmpzL2NvcmUvbGliL3V0aWxzL2NvbXB1dGVBdXRvUGxhY2VtZW50LmpzICoqKiEKICBcKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiovCi8qKiovIChmdW5jdGlvbihfX3VudXNlZF93ZWJwYWNrX21vZHVsZSwgX193ZWJwYWNrX2V4cG9ydHNfXywgX193ZWJwYWNrX3JlcXVpcmVfXykgewoKInVzZSBzdHJpY3QiOwpfX3dlYnBhY2tfcmVxdWlyZV9fLnIoX193ZWJwYWNrX2V4cG9ydHNfXyk7Ci8qIGhhcm1vbnkgZXhwb3J0ICovIF9fd2VicGFja19yZXF1aXJlX18uZChfX3dlYnBhY2tfZXhwb3J0c19fLCB7Ci8qIGhhcm1vbnkgZXhwb3J0ICovICAgImRlZmF1bHQiOiBmdW5jdGlvbigpIHsgcmV0dXJuIC8qIGJpbmRpbmcgKi8gY29tcHV0ZUF1dG9QbGFjZW1lbnQ7IH0KLyogaGFybW9ueSBleHBvcnQgKi8gfSk7Ci8qIGhhcm1vbnkgaW1wb3J0ICovIHZhciBfZ2V0VmFyaWF0aW9uX2pzX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8xX18gPSBfX3dlYnBhY2tfcmVxdWlyZV9fKC8qISAuL2dldFZhcmlhdGlvbi5qcyAqLyAiLi9ub2RlX21vZHVsZXMvQHBvcHBlcmpzL2NvcmUvbGliL3V0aWxzL2dldFZhcmlhdGlvbi5qcyIpOwovKiBoYXJtb255IGltcG9ydCAqLyB2YXIgX2VudW1zX2pzX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8wX18gPSBfX3dlYnBhY2tfcmVxdWlyZV9fKC8qISAuLi9lbnVtcy5qcyAqLyAiLi9ub2RlX21vZHVsZXMvQHBvcHBlcmpzL2NvcmUvbGliL2VudW1zLmpzIik7Ci8qIGhhcm1vbnkgaW1wb3J0ICovIHZhciBfZGV0ZWN0T3ZlcmZsb3dfanNfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzJfXyA9IF9fd2VicGFja19yZXF1aXJlX18oLyohIC4vZGV0ZWN0T3ZlcmZsb3cuanMgKi8gIi4vbm9kZV9tb2R1bGVzL0Bwb3BwZXJqcy9jb3JlL2xpYi91dGlscy9kZXRlY3RPdmVyZmxvdy5qcyIpOwovKiBoYXJtb255IGltcG9ydCAqLyB2YXIgX2dldEJhc2VQbGFjZW1lbnRfanNfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzNfXyA9IF9fd2VicGFja19yZXF1aXJlX18oLyohIC4vZ2V0QmFzZVBsYWNlbWVudC5qcyAqLyAiLi9ub2RlX21vZHVsZXMvQHBvcHBlcmpzL2NvcmUvbGliL3V0aWxzL2dldEJhc2VQbGFjZW1lbnQuanMiKTsKCgoKCmZ1bmN0aW9uIGNvbXB1dGVBdXRvUGxhY2VtZW50KHN0YXRlLCBvcHRpb25zKSB7CiAgaWYgKG9wdGlvbnMgPT09IHZvaWQgMCkgewogICAgb3B0aW9ucyA9IHt9OwogIH0KCiAgdmFyIF9vcHRpb25zID0gb3B0aW9ucywKICAgICAgcGxhY2VtZW50ID0gX29wdGlvbnMucGxhY2VtZW50LAogICAgICBib3VuZGFyeSA9IF9vcHRpb25zLmJvdW5kYXJ5LAogICAgICByb290Qm91bmRhcnkgPSBfb3B0aW9ucy5yb290Qm91bmRhcnksCiAgICAgIHBhZGRpbmcgPSBfb3B0aW9ucy5wYWRkaW5nLAogICAgICBmbGlwVmFyaWF0aW9ucyA9IF9vcHRpb25zLmZsaXBWYXJpYXRpb25zLAogICAgICBfb3B0aW9ucyRhbGxvd2VkQXV0b1AgPSBfb3B0aW9ucy5hbGxvd2VkQXV0b1BsYWNlbWVudHMsCiAgICAgIGFsbG93ZWRBdXRvUGxhY2VtZW50cyA9IF9vcHRpb25zJGFsbG93ZWRBdXRvUCA9PT0gdm9pZCAwID8gX2VudW1zX2pzX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8wX18ucGxhY2VtZW50cyA6IF9vcHRpb25zJGFsbG93ZWRBdXRvUDsKICB2YXIgdmFyaWF0aW9uID0gKDAsX2dldFZhcmlhdGlvbl9qc19fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMV9fWyJkZWZhdWx0Il0pKHBsYWNlbWVudCk7CiAgdmFyIHBsYWNlbWVudHMgPSB2YXJpYXRpb24gPyBmbGlwVmFyaWF0aW9ucyA/IF9lbnVtc19qc19fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMF9fLnZhcmlhdGlvblBsYWNlbWVudHMgOiBfZW51bXNfanNfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzBfXy52YXJpYXRpb25QbGFjZW1lbnRzLmZpbHRlcihmdW5jdGlvbiAocGxhY2VtZW50KSB7CiAgICByZXR1cm4gKDAsX2dldFZhcmlhdGlvbl9qc19fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMV9fWyJkZWZhdWx0Il0pKHBsYWNlbWVudCkgPT09IHZhcmlhdGlvbjsKICB9KSA6IF9lbnVtc19qc19fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMF9fLmJhc2VQbGFjZW1lbnRzOwogIHZhciBhbGxvd2VkUGxhY2VtZW50cyA9IHBsYWNlbWVudHMuZmlsdGVyKGZ1bmN0aW9uIChwbGFjZW1lbnQpIHsKICAgIHJldHVybiBhbGxvd2VkQXV0b1BsYWNlbWVudHMuaW5kZXhPZihwbGFjZW1lbnQpID49IDA7CiAgfSk7CgogIGlmIChhbGxvd2VkUGxhY2VtZW50cy5sZW5ndGggPT09IDApIHsKICAgIGFsbG93ZWRQbGFjZW1lbnRzID0gcGxhY2VtZW50czsKCiAgICBpZiAodHJ1ZSkgewogICAgICBjb25zb2xlLmVycm9yKFsnUG9wcGVyOiBUaGUgYGFsbG93ZWRBdXRvUGxhY2VtZW50c2Agb3B0aW9uIGRpZCBub3QgYWxsb3cgYW55JywgJ3BsYWNlbWVudHMuIEVuc3VyZSB0aGUgYHBsYWNlbWVudGAgb3B0aW9uIG1hdGNoZXMgdGhlIHZhcmlhdGlvbicsICdvZiB0aGUgYWxsb3dlZCBwbGFjZW1lbnRzLicsICdGb3IgZXhhbXBsZSwgImF1dG8iIGNhbm5vdCBiZSB1c2VkIHRvIGFsbG93ICJib3R0b20tc3RhcnQiLicsICdVc2UgImF1dG8tc3RhcnQiIGluc3RlYWQuJ10uam9pbignICcpKTsKICAgIH0KICB9IC8vICRGbG93Rml4TWVbaW5jb21wYXRpYmxlLXR5cGVdOiBGbG93IHNlZW1zIHRvIGhhdmUgcHJvYmxlbXMgd2l0aCB0d28gYXJyYXkgdW5pb25zLi4uCgoKICB2YXIgb3ZlcmZsb3dzID0gYWxsb3dlZFBsYWNlbWVudHMucmVkdWNlKGZ1bmN0aW9uIChhY2MsIHBsYWNlbWVudCkgewogICAgYWNjW3BsYWNlbWVudF0gPSAoMCxfZGV0ZWN0T3ZlcmZsb3dfanNfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzJfX1siZGVmYXVsdCJdKShzdGF0ZSwgewogICAgICBwbGFjZW1lbnQ6IHBsYWNlbWVudCwKICAgICAgYm91bmRhcnk6IGJvdW5kYXJ5LAogICAgICByb290Qm91bmRhcnk6IHJvb3RCb3VuZGFyeSwKICAgICAgcGFkZGluZzogcGFkZGluZwogICAgfSlbKDAsX2dldEJhc2VQbGFjZW1lbnRfanNfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzNfX1siZGVmYXVsdCJdKShwbGFjZW1lbnQpXTsKICAgIHJldHVybiBhY2M7CiAgfSwge30pOwogIHJldHVybiBPYmplY3Qua2V5cyhvdmVyZmxvd3MpLnNvcnQoZnVuY3Rpb24gKGEsIGIpIHsKICAgIHJldHVybiBvdmVyZmxvd3NbYV0gLSBvdmVyZmxvd3NbYl07CiAgfSk7Cn0KCi8qKiovIH0pLAoKLyoqKi8gIi4vbm9kZV9tb2R1bGVzL0Bwb3BwZXJqcy9jb3JlL2xpYi91dGlscy9jb21wdXRlT2Zmc2V0cy5qcyI6Ci8qISoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqISpcCiAgISoqKiAuL25vZGVfbW9kdWxlcy9AcG9wcGVyanMvY29yZS9saWIvdXRpbHMvY29tcHV0ZU9mZnNldHMuanMgKioqIQogIFwqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKi8KLyoqKi8gKGZ1bmN0aW9uKF9fdW51c2VkX3dlYnBhY2tfbW9kdWxlLCBfX3dlYnBhY2tfZXhwb3J0c19fLCBfX3dlYnBhY2tfcmVxdWlyZV9fKSB7CgoidXNlIHN0cmljdCI7Cl9fd2VicGFja19yZXF1aXJlX18ucihfX3dlYnBhY2tfZXhwb3J0c19fKTsKLyogaGFybW9ueSBleHBvcnQgKi8gX193ZWJwYWNrX3JlcXVpcmVfXy5kKF9fd2VicGFja19leHBvcnRzX18sIHsKLyogaGFybW9ueSBleHBvcnQgKi8gICAiZGVmYXVsdCI6IGZ1bmN0aW9uKCkgeyByZXR1cm4gLyogYmluZGluZyAqLyBjb21wdXRlT2Zmc2V0czsgfQovKiBoYXJtb255IGV4cG9ydCAqLyB9KTsKLyogaGFybW9ueSBpbXBvcnQgKi8gdmFyIF9nZXRCYXNlUGxhY2VtZW50X2pzX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8wX18gPSBfX3dlYnBhY2tfcmVxdWlyZV9fKC8qISAuL2dldEJhc2VQbGFjZW1lbnQuanMgKi8gIi4vbm9kZV9tb2R1bGVzL0Bwb3BwZXJqcy9jb3JlL2xpYi91dGlscy9nZXRCYXNlUGxhY2VtZW50LmpzIik7Ci8qIGhhcm1vbnkgaW1wb3J0ICovIHZhciBfZ2V0VmFyaWF0aW9uX2pzX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8xX18gPSBfX3dlYnBhY2tfcmVxdWlyZV9fKC8qISAuL2dldFZhcmlhdGlvbi5qcyAqLyAiLi9ub2RlX21vZHVsZXMvQHBvcHBlcmpzL2NvcmUvbGliL3V0aWxzL2dldFZhcmlhdGlvbi5qcyIpOwovKiBoYXJtb255IGltcG9ydCAqLyB2YXIgX2dldE1haW5BeGlzRnJvbVBsYWNlbWVudF9qc19fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfM19fID0gX193ZWJwYWNrX3JlcXVpcmVfXygvKiEgLi9nZXRNYWluQXhpc0Zyb21QbGFjZW1lbnQuanMgKi8gIi4vbm9kZV9tb2R1bGVzL0Bwb3BwZXJqcy9jb3JlL2xpYi91dGlscy9nZXRNYWluQXhpc0Zyb21QbGFjZW1lbnQuanMiKTsKLyogaGFybW9ueSBpbXBvcnQgKi8gdmFyIF9lbnVtc19qc19fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMl9fID0gX193ZWJwYWNrX3JlcXVpcmVfXygvKiEgLi4vZW51bXMuanMgKi8gIi4vbm9kZV9tb2R1bGVzL0Bwb3BwZXJqcy9jb3JlL2xpYi9lbnVtcy5qcyIpOwoKCgoKZnVuY3Rpb24gY29tcHV0ZU9mZnNldHMoX3JlZikgewogIHZhciByZWZlcmVuY2UgPSBfcmVmLnJlZmVyZW5jZSwKICAgICAgZWxlbWVudCA9IF9yZWYuZWxlbWVudCwKICAgICAgcGxhY2VtZW50ID0gX3JlZi5wbGFjZW1lbnQ7CiAgdmFyIGJhc2VQbGFjZW1lbnQgPSBwbGFjZW1lbnQgPyAoMCxfZ2V0QmFzZVBsYWNlbWVudF9qc19fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMF9fWyJkZWZhdWx0Il0pKHBsYWNlbWVudCkgOiBudWxsOwogIHZhciB2YXJpYXRpb24gPSBwbGFjZW1lbnQgPyAoMCxfZ2V0VmFyaWF0aW9uX2pzX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8xX19bImRlZmF1bHQiXSkocGxhY2VtZW50KSA6IG51bGw7CiAgdmFyIGNvbW1vblggPSByZWZlcmVuY2UueCArIHJlZmVyZW5jZS53aWR0aCAvIDIgLSBlbGVtZW50LndpZHRoIC8gMjsKICB2YXIgY29tbW9uWSA9IHJlZmVyZW5jZS55ICsgcmVmZXJlbmNlLmhlaWdodCAvIDIgLSBlbGVtZW50LmhlaWdodCAvIDI7CiAgdmFyIG9mZnNldHM7CgogIHN3aXRjaCAoYmFzZVBsYWNlbWVudCkgewogICAgY2FzZSBfZW51bXNfanNfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzJfXy50b3A6CiAgICAgIG9mZnNldHMgPSB7CiAgICAgICAgeDogY29tbW9uWCwKICAgICAgICB5OiByZWZlcmVuY2UueSAtIGVsZW1lbnQuaGVpZ2h0CiAgICAgIH07CiAgICAgIGJyZWFrOwoKICAgIGNhc2UgX2VudW1zX2pzX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8yX18uYm90dG9tOgogICAgICBvZmZzZXRzID0gewogICAgICAgIHg6IGNvbW1vblgsCiAgICAgICAgeTogcmVmZXJlbmNlLnkgKyByZWZlcmVuY2UuaGVpZ2h0CiAgICAgIH07CiAgICAgIGJyZWFrOwoKICAgIGNhc2UgX2VudW1zX2pzX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8yX18ucmlnaHQ6CiAgICAgIG9mZnNldHMgPSB7CiAgICAgICAgeDogcmVmZXJlbmNlLnggKyByZWZlcmVuY2Uud2lkdGgsCiAgICAgICAgeTogY29tbW9uWQogICAgICB9OwogICAgICBicmVhazsKCiAgICBjYXNlIF9lbnVtc19qc19fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMl9fLmxlZnQ6CiAgICAgIG9mZnNldHMgPSB7CiAgICAgICAgeDogcmVmZXJlbmNlLnggLSBlbGVtZW50LndpZHRoLAogICAgICAgIHk6IGNvbW1vblkKICAgICAgfTsKICAgICAgYnJlYWs7CgogICAgZGVmYXVsdDoKICAgICAgb2Zmc2V0cyA9IHsKICAgICAgICB4OiByZWZlcmVuY2UueCwKICAgICAgICB5OiByZWZlcmVuY2UueQogICAgICB9OwogIH0KCiAgdmFyIG1haW5BeGlzID0gYmFzZVBsYWNlbWVudCA/ICgwLF9nZXRNYWluQXhpc0Zyb21QbGFjZW1lbnRfanNfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzNfX1siZGVmYXVsdCJdKShiYXNlUGxhY2VtZW50KSA6IG51bGw7CgogIGlmIChtYWluQXhpcyAhPSBudWxsKSB7CiAgICB2YXIgbGVuID0gbWFpbkF4aXMgPT09ICd5JyA/ICdoZWlnaHQnIDogJ3dpZHRoJzsKCiAgICBzd2l0Y2ggKHZhcmlhdGlvbikgewogICAgICBjYXNlIF9lbnVtc19qc19fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMl9fLnN0YXJ0OgogICAgICAgIG9mZnNldHNbbWFpbkF4aXNdID0gb2Zmc2V0c1ttYWluQXhpc10gLSAocmVmZXJlbmNlW2xlbl0gLyAyIC0gZWxlbWVudFtsZW5dIC8gMik7CiAgICAgICAgYnJlYWs7CgogICAgICBjYXNlIF9lbnVtc19qc19fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMl9fLmVuZDoKICAgICAgICBvZmZzZXRzW21haW5BeGlzXSA9IG9mZnNldHNbbWFpbkF4aXNdICsgKHJlZmVyZW5jZVtsZW5dIC8gMiAtIGVsZW1lbnRbbGVuXSAvIDIpOwogICAgICAgIGJyZWFrOwoKICAgICAgZGVmYXVsdDoKICAgIH0KICB9CgogIHJldHVybiBvZmZzZXRzOwp9CgovKioqLyB9KSwKCi8qKiovICIuL25vZGVfbW9kdWxlcy9AcG9wcGVyanMvY29yZS9saWIvdXRpbHMvZGVib3VuY2UuanMiOgovKiEqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiEqXAogICEqKiogLi9ub2RlX21vZHVsZXMvQHBvcHBlcmpzL2NvcmUvbGliL3V0aWxzL2RlYm91bmNlLmpzICoqKiEKICBcKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiovCi8qKiovIChmdW5jdGlvbihfX3VudXNlZF93ZWJwYWNrX21vZHVsZSwgX193ZWJwYWNrX2V4cG9ydHNfXywgX193ZWJwYWNrX3JlcXVpcmVfXykgewoKInVzZSBzdHJpY3QiOwpfX3dlYnBhY2tfcmVxdWlyZV9fLnIoX193ZWJwYWNrX2V4cG9ydHNfXyk7Ci8qIGhhcm1vbnkgZXhwb3J0ICovIF9fd2VicGFja19yZXF1aXJlX18uZChfX3dlYnBhY2tfZXhwb3J0c19fLCB7Ci8qIGhhcm1vbnkgZXhwb3J0ICovICAgImRlZmF1bHQiOiBmdW5jdGlvbigpIHsgcmV0dXJuIC8qIGJpbmRpbmcgKi8gZGVib3VuY2U7IH0KLyogaGFybW9ueSBleHBvcnQgKi8gfSk7CmZ1bmN0aW9uIGRlYm91bmNlKGZuKSB7CiAgdmFyIHBlbmRpbmc7CiAgcmV0dXJuIGZ1bmN0aW9uICgpIHsKICAgIGlmICghcGVuZGluZykgewogICAgICBwZW5kaW5nID0gbmV3IFByb21pc2UoZnVuY3Rpb24gKHJlc29sdmUpIHsKICAgICAgICBQcm9taXNlLnJlc29sdmUoKS50aGVuKGZ1bmN0aW9uICgpIHsKICAgICAgICAgIHBlbmRpbmcgPSB1bmRlZmluZWQ7CiAgICAgICAgICByZXNvbHZlKGZuKCkpOwogICAgICAgIH0pOwogICAgICB9KTsKICAgIH0KCiAgICByZXR1cm4gcGVuZGluZzsKICB9Owp9CgovKioqLyB9KSwKCi8qKiovICIuL25vZGVfbW9kdWxlcy9AcG9wcGVyanMvY29yZS9saWIvdXRpbHMvZGV0ZWN0T3ZlcmZsb3cuanMiOgovKiEqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiEqXAogICEqKiogLi9ub2RlX21vZHVsZXMvQHBvcHBlcmpzL2NvcmUvbGliL3V0aWxzL2RldGVjdE92ZXJmbG93LmpzICoqKiEKICBcKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiovCi8qKiovIChmdW5jdGlvbihfX3VudXNlZF93ZWJwYWNrX21vZHVsZSwgX193ZWJwYWNrX2V4cG9ydHNfXywgX193ZWJwYWNrX3JlcXVpcmVfXykgewoKInVzZSBzdHJpY3QiOwpfX3dlYnBhY2tfcmVxdWlyZV9fLnIoX193ZWJwYWNrX2V4cG9ydHNfXyk7Ci8qIGhhcm1vbnkgZXhwb3J0ICovIF9fd2VicGFja19yZXF1aXJlX18uZChfX3dlYnBhY2tfZXhwb3J0c19fLCB7Ci8qIGhhcm1vbnkgZXhwb3J0ICovICAgImRlZmF1bHQiOiBmdW5jdGlvbigpIHsgcmV0dXJuIC8qIGJpbmRpbmcgKi8gZGV0ZWN0T3ZlcmZsb3c7IH0KLyogaGFybW9ueSBleHBvcnQgKi8gfSk7Ci8qIGhhcm1vbnkgaW1wb3J0ICovIHZhciBfZG9tX3V0aWxzX2dldENsaXBwaW5nUmVjdF9qc19fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfM19fID0gX193ZWJwYWNrX3JlcXVpcmVfXygvKiEgLi4vZG9tLXV0aWxzL2dldENsaXBwaW5nUmVjdC5qcyAqLyAiLi9ub2RlX21vZHVsZXMvQHBvcHBlcmpzL2NvcmUvbGliL2RvbS11dGlscy9nZXRDbGlwcGluZ1JlY3QuanMiKTsKLyogaGFybW9ueSBpbXBvcnQgKi8gdmFyIF9kb21fdXRpbHNfZ2V0RG9jdW1lbnRFbGVtZW50X2pzX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV81X18gPSBfX3dlYnBhY2tfcmVxdWlyZV9fKC8qISAuLi9kb20tdXRpbHMvZ2V0RG9jdW1lbnRFbGVtZW50LmpzICovICIuL25vZGVfbW9kdWxlcy9AcG9wcGVyanMvY29yZS9saWIvZG9tLXV0aWxzL2dldERvY3VtZW50RWxlbWVudC5qcyIpOwovKiBoYXJtb255IGltcG9ydCAqLyB2YXIgX2RvbV91dGlsc19nZXRCb3VuZGluZ0NsaWVudFJlY3RfanNfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzZfXyA9IF9fd2VicGFja19yZXF1aXJlX18oLyohIC4uL2RvbS11dGlscy9nZXRCb3VuZGluZ0NsaWVudFJlY3QuanMgKi8gIi4vbm9kZV9tb2R1bGVzL0Bwb3BwZXJqcy9jb3JlL2xpYi9kb20tdXRpbHMvZ2V0Qm91bmRpbmdDbGllbnRSZWN0LmpzIik7Ci8qIGhhcm1vbnkgaW1wb3J0ICovIHZhciBfY29tcHV0ZU9mZnNldHNfanNfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzdfXyA9IF9fd2VicGFja19yZXF1aXJlX18oLyohIC4vY29tcHV0ZU9mZnNldHMuanMgKi8gIi4vbm9kZV9tb2R1bGVzL0Bwb3BwZXJqcy9jb3JlL2xpYi91dGlscy9jb21wdXRlT2Zmc2V0cy5qcyIpOwovKiBoYXJtb255IGltcG9ydCAqLyB2YXIgX3JlY3RUb0NsaWVudFJlY3RfanNfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzhfXyA9IF9fd2VicGFja19yZXF1aXJlX18oLyohIC4vcmVjdFRvQ2xpZW50UmVjdC5qcyAqLyAiLi9ub2RlX21vZHVsZXMvQHBvcHBlcmpzL2NvcmUvbGliL3V0aWxzL3JlY3RUb0NsaWVudFJlY3QuanMiKTsKLyogaGFybW9ueSBpbXBvcnQgKi8gdmFyIF9lbnVtc19qc19fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMF9fID0gX193ZWJwYWNrX3JlcXVpcmVfXygvKiEgLi4vZW51bXMuanMgKi8gIi4vbm9kZV9tb2R1bGVzL0Bwb3BwZXJqcy9jb3JlL2xpYi9lbnVtcy5qcyIpOwovKiBoYXJtb255IGltcG9ydCAqLyB2YXIgX2RvbV91dGlsc19pbnN0YW5jZU9mX2pzX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV80X18gPSBfX3dlYnBhY2tfcmVxdWlyZV9fKC8qISAuLi9kb20tdXRpbHMvaW5zdGFuY2VPZi5qcyAqLyAiLi9ub2RlX21vZHVsZXMvQHBvcHBlcmpzL2NvcmUvbGliL2RvbS11dGlscy9pbnN0YW5jZU9mLmpzIik7Ci8qIGhhcm1vbnkgaW1wb3J0ICovIHZhciBfbWVyZ2VQYWRkaW5nT2JqZWN0X2pzX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8xX18gPSBfX3dlYnBhY2tfcmVxdWlyZV9fKC8qISAuL21lcmdlUGFkZGluZ09iamVjdC5qcyAqLyAiLi9ub2RlX21vZHVsZXMvQHBvcHBlcmpzL2NvcmUvbGliL3V0aWxzL21lcmdlUGFkZGluZ09iamVjdC5qcyIpOwovKiBoYXJtb255IGltcG9ydCAqLyB2YXIgX2V4cGFuZFRvSGFzaE1hcF9qc19fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMl9fID0gX193ZWJwYWNrX3JlcXVpcmVfXygvKiEgLi9leHBhbmRUb0hhc2hNYXAuanMgKi8gIi4vbm9kZV9tb2R1bGVzL0Bwb3BwZXJqcy9jb3JlL2xpYi91dGlscy9leHBhbmRUb0hhc2hNYXAuanMiKTsKCgoKCgoKCgogLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIGltcG9ydC9uby11bnVzZWQtbW9kdWxlcwoKZnVuY3Rpb24gZGV0ZWN0T3ZlcmZsb3coc3RhdGUsIG9wdGlvbnMpIHsKICBpZiAob3B0aW9ucyA9PT0gdm9pZCAwKSB7CiAgICBvcHRpb25zID0ge307CiAgfQoKICB2YXIgX29wdGlvbnMgPSBvcHRpb25zLAogICAgICBfb3B0aW9ucyRwbGFjZW1lbnQgPSBfb3B0aW9ucy5wbGFjZW1lbnQsCiAgICAgIHBsYWNlbWVudCA9IF9vcHRpb25zJHBsYWNlbWVudCA9PT0gdm9pZCAwID8gc3RhdGUucGxhY2VtZW50IDogX29wdGlvbnMkcGxhY2VtZW50LAogICAgICBfb3B0aW9ucyRzdHJhdGVneSA9IF9vcHRpb25zLnN0cmF0ZWd5LAogICAgICBzdHJhdGVneSA9IF9vcHRpb25zJHN0cmF0ZWd5ID09PSB2b2lkIDAgPyBzdGF0ZS5zdHJhdGVneSA6IF9vcHRpb25zJHN0cmF0ZWd5LAogICAgICBfb3B0aW9ucyRib3VuZGFyeSA9IF9vcHRpb25zLmJvdW5kYXJ5LAogICAgICBib3VuZGFyeSA9IF9vcHRpb25zJGJvdW5kYXJ5ID09PSB2b2lkIDAgPyBfZW51bXNfanNfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzBfXy5jbGlwcGluZ1BhcmVudHMgOiBfb3B0aW9ucyRib3VuZGFyeSwKICAgICAgX29wdGlvbnMkcm9vdEJvdW5kYXJ5ID0gX29wdGlvbnMucm9vdEJvdW5kYXJ5LAogICAgICByb290Qm91bmRhcnkgPSBfb3B0aW9ucyRyb290Qm91bmRhcnkgPT09IHZvaWQgMCA/IF9lbnVtc19qc19fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMF9fLnZpZXdwb3J0IDogX29wdGlvbnMkcm9vdEJvdW5kYXJ5LAogICAgICBfb3B0aW9ucyRlbGVtZW50Q29udGUgPSBfb3B0aW9ucy5lbGVtZW50Q29udGV4dCwKICAgICAgZWxlbWVudENvbnRleHQgPSBfb3B0aW9ucyRlbGVtZW50Q29udGUgPT09IHZvaWQgMCA/IF9lbnVtc19qc19fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMF9fLnBvcHBlciA6IF9vcHRpb25zJGVsZW1lbnRDb250ZSwKICAgICAgX29wdGlvbnMkYWx0Qm91bmRhcnkgPSBfb3B0aW9ucy5hbHRCb3VuZGFyeSwKICAgICAgYWx0Qm91bmRhcnkgPSBfb3B0aW9ucyRhbHRCb3VuZGFyeSA9PT0gdm9pZCAwID8gZmFsc2UgOiBfb3B0aW9ucyRhbHRCb3VuZGFyeSwKICAgICAgX29wdGlvbnMkcGFkZGluZyA9IF9vcHRpb25zLnBhZGRpbmcsCiAgICAgIHBhZGRpbmcgPSBfb3B0aW9ucyRwYWRkaW5nID09PSB2b2lkIDAgPyAwIDogX29wdGlvbnMkcGFkZGluZzsKICB2YXIgcGFkZGluZ09iamVjdCA9ICgwLF9tZXJnZVBhZGRpbmdPYmplY3RfanNfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzFfX1siZGVmYXVsdCJdKSh0eXBlb2YgcGFkZGluZyAhPT0gJ251bWJlcicgPyBwYWRkaW5nIDogKDAsX2V4cGFuZFRvSGFzaE1hcF9qc19fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMl9fWyJkZWZhdWx0Il0pKHBhZGRpbmcsIF9lbnVtc19qc19fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMF9fLmJhc2VQbGFjZW1lbnRzKSk7CiAgdmFyIGFsdENvbnRleHQgPSBlbGVtZW50Q29udGV4dCA9PT0gX2VudW1zX2pzX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8wX18ucG9wcGVyID8gX2VudW1zX2pzX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8wX18ucmVmZXJlbmNlIDogX2VudW1zX2pzX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8wX18ucG9wcGVyOwogIHZhciBwb3BwZXJSZWN0ID0gc3RhdGUucmVjdHMucG9wcGVyOwogIHZhciBlbGVtZW50ID0gc3RhdGUuZWxlbWVudHNbYWx0Qm91bmRhcnkgPyBhbHRDb250ZXh0IDogZWxlbWVudENvbnRleHRdOwogIHZhciBjbGlwcGluZ0NsaWVudFJlY3QgPSAoMCxfZG9tX3V0aWxzX2dldENsaXBwaW5nUmVjdF9qc19fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfM19fWyJkZWZhdWx0Il0pKCgwLF9kb21fdXRpbHNfaW5zdGFuY2VPZl9qc19fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfNF9fLmlzRWxlbWVudCkoZWxlbWVudCkgPyBlbGVtZW50IDogZWxlbWVudC5jb250ZXh0RWxlbWVudCB8fCAoMCxfZG9tX3V0aWxzX2dldERvY3VtZW50RWxlbWVudF9qc19fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfNV9fWyJkZWZhdWx0Il0pKHN0YXRlLmVsZW1lbnRzLnBvcHBlciksIGJvdW5kYXJ5LCByb290Qm91bmRhcnksIHN0cmF0ZWd5KTsKICB2YXIgcmVmZXJlbmNlQ2xpZW50UmVjdCA9ICgwLF9kb21fdXRpbHNfZ2V0Qm91bmRpbmdDbGllbnRSZWN0X2pzX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV82X19bImRlZmF1bHQiXSkoc3RhdGUuZWxlbWVudHMucmVmZXJlbmNlKTsKICB2YXIgcG9wcGVyT2Zmc2V0cyA9ICgwLF9jb21wdXRlT2Zmc2V0c19qc19fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfN19fWyJkZWZhdWx0Il0pKHsKICAgIHJlZmVyZW5jZTogcmVmZXJlbmNlQ2xpZW50UmVjdCwKICAgIGVsZW1lbnQ6IHBvcHBlclJlY3QsCiAgICBzdHJhdGVneTogJ2Fic29sdXRlJywKICAgIHBsYWNlbWVudDogcGxhY2VtZW50CiAgfSk7CiAgdmFyIHBvcHBlckNsaWVudFJlY3QgPSAoMCxfcmVjdFRvQ2xpZW50UmVjdF9qc19fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfOF9fWyJkZWZhdWx0Il0pKE9iamVjdC5hc3NpZ24oe30sIHBvcHBlclJlY3QsIHBvcHBlck9mZnNldHMpKTsKICB2YXIgZWxlbWVudENsaWVudFJlY3QgPSBlbGVtZW50Q29udGV4dCA9PT0gX2VudW1zX2pzX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8wX18ucG9wcGVyID8gcG9wcGVyQ2xpZW50UmVjdCA6IHJlZmVyZW5jZUNsaWVudFJlY3Q7IC8vIHBvc2l0aXZlID0gb3ZlcmZsb3dpbmcgdGhlIGNsaXBwaW5nIHJlY3QKICAvLyAwIG9yIG5lZ2F0aXZlID0gd2l0aGluIHRoZSBjbGlwcGluZyByZWN0CgogIHZhciBvdmVyZmxvd09mZnNldHMgPSB7CiAgICB0b3A6IGNsaXBwaW5nQ2xpZW50UmVjdC50b3AgLSBlbGVtZW50Q2xpZW50UmVjdC50b3AgKyBwYWRkaW5nT2JqZWN0LnRvcCwKICAgIGJvdHRvbTogZWxlbWVudENsaWVudFJlY3QuYm90dG9tIC0gY2xpcHBpbmdDbGllbnRSZWN0LmJvdHRvbSArIHBhZGRpbmdPYmplY3QuYm90dG9tLAogICAgbGVmdDogY2xpcHBpbmdDbGllbnRSZWN0LmxlZnQgLSBlbGVtZW50Q2xpZW50UmVjdC5sZWZ0ICsgcGFkZGluZ09iamVjdC5sZWZ0LAogICAgcmlnaHQ6IGVsZW1lbnRDbGllbnRSZWN0LnJpZ2h0IC0gY2xpcHBpbmdDbGllbnRSZWN0LnJpZ2h0ICsgcGFkZGluZ09iamVjdC5yaWdodAogIH07CiAgdmFyIG9mZnNldERhdGEgPSBzdGF0ZS5tb2RpZmllcnNEYXRhLm9mZnNldDsgLy8gT2Zmc2V0cyBjYW4gYmUgYXBwbGllZCBvbmx5IHRvIHRoZSBwb3BwZXIgZWxlbWVudAoKICBpZiAoZWxlbWVudENvbnRleHQgPT09IF9lbnVtc19qc19fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMF9fLnBvcHBlciAmJiBvZmZzZXREYXRhKSB7CiAgICB2YXIgb2Zmc2V0ID0gb2Zmc2V0RGF0YVtwbGFjZW1lbnRdOwogICAgT2JqZWN0LmtleXMob3ZlcmZsb3dPZmZzZXRzKS5mb3JFYWNoKGZ1bmN0aW9uIChrZXkpIHsKICAgICAgdmFyIG11bHRpcGx5ID0gW19lbnVtc19qc19fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMF9fLnJpZ2h0LCBfZW51bXNfanNfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzBfXy5ib3R0b21dLmluZGV4T2Yoa2V5KSA+PSAwID8gMSA6IC0xOwogICAgICB2YXIgYXhpcyA9IFtfZW51bXNfanNfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzBfXy50b3AsIF9lbnVtc19qc19fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMF9fLmJvdHRvbV0uaW5kZXhPZihrZXkpID49IDAgPyAneScgOiAneCc7CiAgICAgIG92ZXJmbG93T2Zmc2V0c1trZXldICs9IG9mZnNldFtheGlzXSAqIG11bHRpcGx5OwogICAgfSk7CiAgfQoKICByZXR1cm4gb3ZlcmZsb3dPZmZzZXRzOwp9CgovKioqLyB9KSwKCi8qKiovICIuL25vZGVfbW9kdWxlcy9AcG9wcGVyanMvY29yZS9saWIvdXRpbHMvZXhwYW5kVG9IYXNoTWFwLmpzIjoKLyohKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqISpcCiAgISoqKiAuL25vZGVfbW9kdWxlcy9AcG9wcGVyanMvY29yZS9saWIvdXRpbHMvZXhwYW5kVG9IYXNoTWFwLmpzICoqKiEKICBcKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqLwovKioqLyAoZnVuY3Rpb24oX191bnVzZWRfd2VicGFja19tb2R1bGUsIF9fd2VicGFja19leHBvcnRzX18sIF9fd2VicGFja19yZXF1aXJlX18pIHsKCiJ1c2Ugc3RyaWN0IjsKX193ZWJwYWNrX3JlcXVpcmVfXy5yKF9fd2VicGFja19leHBvcnRzX18pOwovKiBoYXJtb255IGV4cG9ydCAqLyBfX3dlYnBhY2tfcmVxdWlyZV9fLmQoX193ZWJwYWNrX2V4cG9ydHNfXywgewovKiBoYXJtb255IGV4cG9ydCAqLyAgICJkZWZhdWx0IjogZnVuY3Rpb24oKSB7IHJldHVybiAvKiBiaW5kaW5nICovIGV4cGFuZFRvSGFzaE1hcDsgfQovKiBoYXJtb255IGV4cG9ydCAqLyB9KTsKZnVuY3Rpb24gZXhwYW5kVG9IYXNoTWFwKHZhbHVlLCBrZXlzKSB7CiAgcmV0dXJuIGtleXMucmVkdWNlKGZ1bmN0aW9uIChoYXNoTWFwLCBrZXkpIHsKICAgIGhhc2hNYXBba2V5XSA9IHZhbHVlOwogICAgcmV0dXJuIGhhc2hNYXA7CiAgfSwge30pOwp9CgovKioqLyB9KSwKCi8qKiovICIuL25vZGVfbW9kdWxlcy9AcG9wcGVyanMvY29yZS9saWIvdXRpbHMvZm9ybWF0LmpzIjoKLyohKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqISpcCiAgISoqKiAuL25vZGVfbW9kdWxlcy9AcG9wcGVyanMvY29yZS9saWIvdXRpbHMvZm9ybWF0LmpzICoqKiEKICBcKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqLwovKioqLyAoZnVuY3Rpb24oX191bnVzZWRfd2VicGFja19tb2R1bGUsIF9fd2VicGFja19leHBvcnRzX18sIF9fd2VicGFja19yZXF1aXJlX18pIHsKCiJ1c2Ugc3RyaWN0IjsKX193ZWJwYWNrX3JlcXVpcmVfXy5yKF9fd2VicGFja19leHBvcnRzX18pOwovKiBoYXJtb255IGV4cG9ydCAqLyBfX3dlYnBhY2tfcmVxdWlyZV9fLmQoX193ZWJwYWNrX2V4cG9ydHNfXywgewovKiBoYXJtb255IGV4cG9ydCAqLyAgICJkZWZhdWx0IjogZnVuY3Rpb24oKSB7IHJldHVybiAvKiBiaW5kaW5nICovIGZvcm1hdDsgfQovKiBoYXJtb255IGV4cG9ydCAqLyB9KTsKZnVuY3Rpb24gZm9ybWF0KHN0cikgewogIGZvciAodmFyIF9sZW4gPSBhcmd1bWVudHMubGVuZ3RoLCBhcmdzID0gbmV3IEFycmF5KF9sZW4gPiAxID8gX2xlbiAtIDEgOiAwKSwgX2tleSA9IDE7IF9rZXkgPCBfbGVuOyBfa2V5KyspIHsKICAgIGFyZ3NbX2tleSAtIDFdID0gYXJndW1lbnRzW19rZXldOwogIH0KCiAgcmV0dXJuIFtdLmNvbmNhdChhcmdzKS5yZWR1Y2UoZnVuY3Rpb24gKHAsIGMpIHsKICAgIHJldHVybiBwLnJlcGxhY2UoLyVzLywgYyk7CiAgfSwgc3RyKTsKfQoKLyoqKi8gfSksCgovKioqLyAiLi9ub2RlX21vZHVsZXMvQHBvcHBlcmpzL2NvcmUvbGliL3V0aWxzL2dldEFsdEF4aXMuanMiOgovKiEqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqISpcCiAgISoqKiAuL25vZGVfbW9kdWxlcy9AcG9wcGVyanMvY29yZS9saWIvdXRpbHMvZ2V0QWx0QXhpcy5qcyAqKiohCiAgXCoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiovCi8qKiovIChmdW5jdGlvbihfX3VudXNlZF93ZWJwYWNrX21vZHVsZSwgX193ZWJwYWNrX2V4cG9ydHNfXywgX193ZWJwYWNrX3JlcXVpcmVfXykgewoKInVzZSBzdHJpY3QiOwpfX3dlYnBhY2tfcmVxdWlyZV9fLnIoX193ZWJwYWNrX2V4cG9ydHNfXyk7Ci8qIGhhcm1vbnkgZXhwb3J0ICovIF9fd2VicGFja19yZXF1aXJlX18uZChfX3dlYnBhY2tfZXhwb3J0c19fLCB7Ci8qIGhhcm1vbnkgZXhwb3J0ICovICAgImRlZmF1bHQiOiBmdW5jdGlvbigpIHsgcmV0dXJuIC8qIGJpbmRpbmcgKi8gZ2V0QWx0QXhpczsgfQovKiBoYXJtb255IGV4cG9ydCAqLyB9KTsKZnVuY3Rpb24gZ2V0QWx0QXhpcyhheGlzKSB7CiAgcmV0dXJuIGF4aXMgPT09ICd4JyA/ICd5JyA6ICd4JzsKfQoKLyoqKi8gfSksCgovKioqLyAiLi9ub2RlX21vZHVsZXMvQHBvcHBlcmpzL2NvcmUvbGliL3V0aWxzL2dldEJhc2VQbGFjZW1lbnQuanMiOgovKiEqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqISpcCiAgISoqKiAuL25vZGVfbW9kdWxlcy9AcG9wcGVyanMvY29yZS9saWIvdXRpbHMvZ2V0QmFzZVBsYWNlbWVudC5qcyAqKiohCiAgXCoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiovCi8qKiovIChmdW5jdGlvbihfX3VudXNlZF93ZWJwYWNrX21vZHVsZSwgX193ZWJwYWNrX2V4cG9ydHNfXywgX193ZWJwYWNrX3JlcXVpcmVfXykgewoKInVzZSBzdHJpY3QiOwpfX3dlYnBhY2tfcmVxdWlyZV9fLnIoX193ZWJwYWNrX2V4cG9ydHNfXyk7Ci8qIGhhcm1vbnkgZXhwb3J0ICovIF9fd2VicGFja19yZXF1aXJlX18uZChfX3dlYnBhY2tfZXhwb3J0c19fLCB7Ci8qIGhhcm1vbnkgZXhwb3J0ICovICAgImRlZmF1bHQiOiBmdW5jdGlvbigpIHsgcmV0dXJuIC8qIGJpbmRpbmcgKi8gZ2V0QmFzZVBsYWNlbWVudDsgfQovKiBoYXJtb255IGV4cG9ydCAqLyB9KTsKCmZ1bmN0aW9uIGdldEJhc2VQbGFjZW1lbnQocGxhY2VtZW50KSB7CiAgcmV0dXJuIHBsYWNlbWVudC5zcGxpdCgnLScpWzBdOwp9CgovKioqLyB9KSwKCi8qKiovICIuL25vZGVfbW9kdWxlcy9AcG9wcGVyanMvY29yZS9saWIvdXRpbHMvZ2V0RnJlc2hTaWRlT2JqZWN0LmpzIjoKLyohKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqISpcCiAgISoqKiAuL25vZGVfbW9kdWxlcy9AcG9wcGVyanMvY29yZS9saWIvdXRpbHMvZ2V0RnJlc2hTaWRlT2JqZWN0LmpzICoqKiEKICBcKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqLwovKioqLyAoZnVuY3Rpb24oX191bnVzZWRfd2VicGFja19tb2R1bGUsIF9fd2VicGFja19leHBvcnRzX18sIF9fd2VicGFja19yZXF1aXJlX18pIHsKCiJ1c2Ugc3RyaWN0IjsKX193ZWJwYWNrX3JlcXVpcmVfXy5yKF9fd2VicGFja19leHBvcnRzX18pOwovKiBoYXJtb255IGV4cG9ydCAqLyBfX3dlYnBhY2tfcmVxdWlyZV9fLmQoX193ZWJwYWNrX2V4cG9ydHNfXywgewovKiBoYXJtb255IGV4cG9ydCAqLyAgICJkZWZhdWx0IjogZnVuY3Rpb24oKSB7IHJldHVybiAvKiBiaW5kaW5nICovIGdldEZyZXNoU2lkZU9iamVjdDsgfQovKiBoYXJtb255IGV4cG9ydCAqLyB9KTsKZnVuY3Rpb24gZ2V0RnJlc2hTaWRlT2JqZWN0KCkgewogIHJldHVybiB7CiAgICB0b3A6IDAsCiAgICByaWdodDogMCwKICAgIGJvdHRvbTogMCwKICAgIGxlZnQ6IDAKICB9Owp9CgovKioqLyB9KSwKCi8qKiovICIuL25vZGVfbW9kdWxlcy9AcG9wcGVyanMvY29yZS9saWIvdXRpbHMvZ2V0TWFpbkF4aXNGcm9tUGxhY2VtZW50LmpzIjoKLyohKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqISpcCiAgISoqKiAuL25vZGVfbW9kdWxlcy9AcG9wcGVyanMvY29yZS9saWIvdXRpbHMvZ2V0TWFpbkF4aXNGcm9tUGxhY2VtZW50LmpzICoqKiEKICBcKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqLwovKioqLyAoZnVuY3Rpb24oX191bnVzZWRfd2VicGFja19tb2R1bGUsIF9fd2VicGFja19leHBvcnRzX18sIF9fd2VicGFja19yZXF1aXJlX18pIHsKCiJ1c2Ugc3RyaWN0IjsKX193ZWJwYWNrX3JlcXVpcmVfXy5yKF9fd2VicGFja19leHBvcnRzX18pOwovKiBoYXJtb255IGV4cG9ydCAqLyBfX3dlYnBhY2tfcmVxdWlyZV9fLmQoX193ZWJwYWNrX2V4cG9ydHNfXywgewovKiBoYXJtb255IGV4cG9ydCAqLyAgICJkZWZhdWx0IjogZnVuY3Rpb24oKSB7IHJldHVybiAvKiBiaW5kaW5nICovIGdldE1haW5BeGlzRnJvbVBsYWNlbWVudDsgfQovKiBoYXJtb255IGV4cG9ydCAqLyB9KTsKZnVuY3Rpb24gZ2V0TWFpbkF4aXNGcm9tUGxhY2VtZW50KHBsYWNlbWVudCkgewogIHJldHVybiBbJ3RvcCcsICdib3R0b20nXS5pbmRleE9mKHBsYWNlbWVudCkgPj0gMCA/ICd4JyA6ICd5JzsKfQoKLyoqKi8gfSksCgovKioqLyAiLi9ub2RlX21vZHVsZXMvQHBvcHBlcmpzL2NvcmUvbGliL3V0aWxzL2dldE9wcG9zaXRlUGxhY2VtZW50LmpzIjoKLyohKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiohKlwKICAhKioqIC4vbm9kZV9tb2R1bGVzL0Bwb3BwZXJqcy9jb3JlL2xpYi91dGlscy9nZXRPcHBvc2l0ZVBsYWNlbWVudC5qcyAqKiohCiAgXCoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqLwovKioqLyAoZnVuY3Rpb24oX191bnVzZWRfd2VicGFja19tb2R1bGUsIF9fd2VicGFja19leHBvcnRzX18sIF9fd2VicGFja19yZXF1aXJlX18pIHsKCiJ1c2Ugc3RyaWN0IjsKX193ZWJwYWNrX3JlcXVpcmVfXy5yKF9fd2VicGFja19leHBvcnRzX18pOwovKiBoYXJtb255IGV4cG9ydCAqLyBfX3dlYnBhY2tfcmVxdWlyZV9fLmQoX193ZWJwYWNrX2V4cG9ydHNfXywgewovKiBoYXJtb255IGV4cG9ydCAqLyAgICJkZWZhdWx0IjogZnVuY3Rpb24oKSB7IHJldHVybiAvKiBiaW5kaW5nICovIGdldE9wcG9zaXRlUGxhY2VtZW50OyB9Ci8qIGhhcm1vbnkgZXhwb3J0ICovIH0pOwp2YXIgaGFzaCA9IHsKICBsZWZ0OiAncmlnaHQnLAogIHJpZ2h0OiAnbGVmdCcsCiAgYm90dG9tOiAndG9wJywKICB0b3A6ICdib3R0b20nCn07CmZ1bmN0aW9uIGdldE9wcG9zaXRlUGxhY2VtZW50KHBsYWNlbWVudCkgewogIHJldHVybiBwbGFjZW1lbnQucmVwbGFjZSgvbGVmdHxyaWdodHxib3R0b218dG9wL2csIGZ1bmN0aW9uIChtYXRjaGVkKSB7CiAgICByZXR1cm4gaGFzaFttYXRjaGVkXTsKICB9KTsKfQoKLyoqKi8gfSksCgovKioqLyAiLi9ub2RlX21vZHVsZXMvQHBvcHBlcmpzL2NvcmUvbGliL3V0aWxzL2dldE9wcG9zaXRlVmFyaWF0aW9uUGxhY2VtZW50LmpzIjoKLyohKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiohKlwKICAhKioqIC4vbm9kZV9tb2R1bGVzL0Bwb3BwZXJqcy9jb3JlL2xpYi91dGlscy9nZXRPcHBvc2l0ZVZhcmlhdGlvblBsYWNlbWVudC5qcyAqKiohCiAgXCoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqLwovKioqLyAoZnVuY3Rpb24oX191bnVzZWRfd2VicGFja19tb2R1bGUsIF9fd2VicGFja19leHBvcnRzX18sIF9fd2VicGFja19yZXF1aXJlX18pIHsKCiJ1c2Ugc3RyaWN0IjsKX193ZWJwYWNrX3JlcXVpcmVfXy5yKF9fd2VicGFja19leHBvcnRzX18pOwovKiBoYXJtb255IGV4cG9ydCAqLyBfX3dlYnBhY2tfcmVxdWlyZV9fLmQoX193ZWJwYWNrX2V4cG9ydHNfXywgewovKiBoYXJtb255IGV4cG9ydCAqLyAgICJkZWZhdWx0IjogZnVuY3Rpb24oKSB7IHJldHVybiAvKiBiaW5kaW5nICovIGdldE9wcG9zaXRlVmFyaWF0aW9uUGxhY2VtZW50OyB9Ci8qIGhhcm1vbnkgZXhwb3J0ICovIH0pOwp2YXIgaGFzaCA9IHsKICBzdGFydDogJ2VuZCcsCiAgZW5kOiAnc3RhcnQnCn07CmZ1bmN0aW9uIGdldE9wcG9zaXRlVmFyaWF0aW9uUGxhY2VtZW50KHBsYWNlbWVudCkgewogIHJldHVybiBwbGFjZW1lbnQucmVwbGFjZSgvc3RhcnR8ZW5kL2csIGZ1bmN0aW9uIChtYXRjaGVkKSB7CiAgICByZXR1cm4gaGFzaFttYXRjaGVkXTsKICB9KTsKfQoKLyoqKi8gfSksCgovKioqLyAiLi9ub2RlX21vZHVsZXMvQHBvcHBlcmpzL2NvcmUvbGliL3V0aWxzL2dldFZhcmlhdGlvbi5qcyI6Ci8qISoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiEqXAogICEqKiogLi9ub2RlX21vZHVsZXMvQHBvcHBlcmpzL2NvcmUvbGliL3V0aWxzL2dldFZhcmlhdGlvbi5qcyAqKiohCiAgXCoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKi8KLyoqKi8gKGZ1bmN0aW9uKF9fdW51c2VkX3dlYnBhY2tfbW9kdWxlLCBfX3dlYnBhY2tfZXhwb3J0c19fLCBfX3dlYnBhY2tfcmVxdWlyZV9fKSB7CgoidXNlIHN0cmljdCI7Cl9fd2VicGFja19yZXF1aXJlX18ucihfX3dlYnBhY2tfZXhwb3J0c19fKTsKLyogaGFybW9ueSBleHBvcnQgKi8gX193ZWJwYWNrX3JlcXVpcmVfXy5kKF9fd2VicGFja19leHBvcnRzX18sIHsKLyogaGFybW9ueSBleHBvcnQgKi8gICAiZGVmYXVsdCI6IGZ1bmN0aW9uKCkgeyByZXR1cm4gLyogYmluZGluZyAqLyBnZXRWYXJpYXRpb247IH0KLyogaGFybW9ueSBleHBvcnQgKi8gfSk7CmZ1bmN0aW9uIGdldFZhcmlhdGlvbihwbGFjZW1lbnQpIHsKICByZXR1cm4gcGxhY2VtZW50LnNwbGl0KCctJylbMV07Cn0KCi8qKiovIH0pLAoKLyoqKi8gIi4vbm9kZV9tb2R1bGVzL0Bwb3BwZXJqcy9jb3JlL2xpYi91dGlscy9tYXRoLmpzIjoKLyohKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiEqXAogICEqKiogLi9ub2RlX21vZHVsZXMvQHBvcHBlcmpzL2NvcmUvbGliL3V0aWxzL21hdGguanMgKioqIQogIFwqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqLwovKioqLyAoZnVuY3Rpb24oX191bnVzZWRfd2VicGFja19tb2R1bGUsIF9fd2VicGFja19leHBvcnRzX18sIF9fd2VicGFja19yZXF1aXJlX18pIHsKCiJ1c2Ugc3RyaWN0IjsKX193ZWJwYWNrX3JlcXVpcmVfXy5yKF9fd2VicGFja19leHBvcnRzX18pOwovKiBoYXJtb255IGV4cG9ydCAqLyBfX3dlYnBhY2tfcmVxdWlyZV9fLmQoX193ZWJwYWNrX2V4cG9ydHNfXywgewovKiBoYXJtb255IGV4cG9ydCAqLyAgICJtYXgiOiBmdW5jdGlvbigpIHsgcmV0dXJuIC8qIGJpbmRpbmcgKi8gbWF4OyB9LAovKiBoYXJtb255IGV4cG9ydCAqLyAgICJtaW4iOiBmdW5jdGlvbigpIHsgcmV0dXJuIC8qIGJpbmRpbmcgKi8gbWluOyB9LAovKiBoYXJtb255IGV4cG9ydCAqLyAgICJyb3VuZCI6IGZ1bmN0aW9uKCkgeyByZXR1cm4gLyogYmluZGluZyAqLyByb3VuZDsgfQovKiBoYXJtb255IGV4cG9ydCAqLyB9KTsKdmFyIG1heCA9IE1hdGgubWF4Owp2YXIgbWluID0gTWF0aC5taW47CnZhciByb3VuZCA9IE1hdGgucm91bmQ7CgovKioqLyB9KSwKCi8qKiovICIuL25vZGVfbW9kdWxlcy9AcG9wcGVyanMvY29yZS9saWIvdXRpbHMvbWVyZ2VCeU5hbWUuanMiOgovKiEqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiEqXAogICEqKiogLi9ub2RlX21vZHVsZXMvQHBvcHBlcmpzL2NvcmUvbGliL3V0aWxzL21lcmdlQnlOYW1lLmpzICoqKiEKICBcKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiovCi8qKiovIChmdW5jdGlvbihfX3VudXNlZF93ZWJwYWNrX21vZHVsZSwgX193ZWJwYWNrX2V4cG9ydHNfXywgX193ZWJwYWNrX3JlcXVpcmVfXykgewoKInVzZSBzdHJpY3QiOwpfX3dlYnBhY2tfcmVxdWlyZV9fLnIoX193ZWJwYWNrX2V4cG9ydHNfXyk7Ci8qIGhhcm1vbnkgZXhwb3J0ICovIF9fd2VicGFja19yZXF1aXJlX18uZChfX3dlYnBhY2tfZXhwb3J0c19fLCB7Ci8qIGhhcm1vbnkgZXhwb3J0ICovICAgImRlZmF1bHQiOiBmdW5jdGlvbigpIHsgcmV0dXJuIC8qIGJpbmRpbmcgKi8gbWVyZ2VCeU5hbWU7IH0KLyogaGFybW9ueSBleHBvcnQgKi8gfSk7CmZ1bmN0aW9uIG1lcmdlQnlOYW1lKG1vZGlmaWVycykgewogIHZhciBtZXJnZWQgPSBtb2RpZmllcnMucmVkdWNlKGZ1bmN0aW9uIChtZXJnZWQsIGN1cnJlbnQpIHsKICAgIHZhciBleGlzdGluZyA9IG1lcmdlZFtjdXJyZW50Lm5hbWVdOwogICAgbWVyZ2VkW2N1cnJlbnQubmFtZV0gPSBleGlzdGluZyA/IE9iamVjdC5hc3NpZ24oe30sIGV4aXN0aW5nLCBjdXJyZW50LCB7CiAgICAgIG9wdGlvbnM6IE9iamVjdC5hc3NpZ24oe30sIGV4aXN0aW5nLm9wdGlvbnMsIGN1cnJlbnQub3B0aW9ucyksCiAgICAgIGRhdGE6IE9iamVjdC5hc3NpZ24oe30sIGV4aXN0aW5nLmRhdGEsIGN1cnJlbnQuZGF0YSkKICAgIH0pIDogY3VycmVudDsKICAgIHJldHVybiBtZXJnZWQ7CiAgfSwge30pOyAvLyBJRTExIGRvZXMgbm90IHN1cHBvcnQgT2JqZWN0LnZhbHVlcwoKICByZXR1cm4gT2JqZWN0LmtleXMobWVyZ2VkKS5tYXAoZnVuY3Rpb24gKGtleSkgewogICAgcmV0dXJuIG1lcmdlZFtrZXldOwogIH0pOwp9CgovKioqLyB9KSwKCi8qKiovICIuL25vZGVfbW9kdWxlcy9AcG9wcGVyanMvY29yZS9saWIvdXRpbHMvbWVyZ2VQYWRkaW5nT2JqZWN0LmpzIjoKLyohKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqISpcCiAgISoqKiAuL25vZGVfbW9kdWxlcy9AcG9wcGVyanMvY29yZS9saWIvdXRpbHMvbWVyZ2VQYWRkaW5nT2JqZWN0LmpzICoqKiEKICBcKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqLwovKioqLyAoZnVuY3Rpb24oX191bnVzZWRfd2VicGFja19tb2R1bGUsIF9fd2VicGFja19leHBvcnRzX18sIF9fd2VicGFja19yZXF1aXJlX18pIHsKCiJ1c2Ugc3RyaWN0IjsKX193ZWJwYWNrX3JlcXVpcmVfXy5yKF9fd2VicGFja19leHBvcnRzX18pOwovKiBoYXJtb255IGV4cG9ydCAqLyBfX3dlYnBhY2tfcmVxdWlyZV9fLmQoX193ZWJwYWNrX2V4cG9ydHNfXywgewovKiBoYXJtb255IGV4cG9ydCAqLyAgICJkZWZhdWx0IjogZnVuY3Rpb24oKSB7IHJldHVybiAvKiBiaW5kaW5nICovIG1lcmdlUGFkZGluZ09iamVjdDsgfQovKiBoYXJtb255IGV4cG9ydCAqLyB9KTsKLyogaGFybW9ueSBpbXBvcnQgKi8gdmFyIF9nZXRGcmVzaFNpZGVPYmplY3RfanNfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzBfXyA9IF9fd2VicGFja19yZXF1aXJlX18oLyohIC4vZ2V0RnJlc2hTaWRlT2JqZWN0LmpzICovICIuL25vZGVfbW9kdWxlcy9AcG9wcGVyanMvY29yZS9saWIvdXRpbHMvZ2V0RnJlc2hTaWRlT2JqZWN0LmpzIik7CgpmdW5jdGlvbiBtZXJnZVBhZGRpbmdPYmplY3QocGFkZGluZ09iamVjdCkgewogIHJldHVybiBPYmplY3QuYXNzaWduKHt9LCAoMCxfZ2V0RnJlc2hTaWRlT2JqZWN0X2pzX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8wX19bImRlZmF1bHQiXSkoKSwgcGFkZGluZ09iamVjdCk7Cn0KCi8qKiovIH0pLAoKLyoqKi8gIi4vbm9kZV9tb2R1bGVzL0Bwb3BwZXJqcy9jb3JlL2xpYi91dGlscy9vcmRlck1vZGlmaWVycy5qcyI6Ci8qISoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqISpcCiAgISoqKiAuL25vZGVfbW9kdWxlcy9AcG9wcGVyanMvY29yZS9saWIvdXRpbHMvb3JkZXJNb2RpZmllcnMuanMgKioqIQogIFwqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKi8KLyoqKi8gKGZ1bmN0aW9uKF9fdW51c2VkX3dlYnBhY2tfbW9kdWxlLCBfX3dlYnBhY2tfZXhwb3J0c19fLCBfX3dlYnBhY2tfcmVxdWlyZV9fKSB7CgoidXNlIHN0cmljdCI7Cl9fd2VicGFja19yZXF1aXJlX18ucihfX3dlYnBhY2tfZXhwb3J0c19fKTsKLyogaGFybW9ueSBleHBvcnQgKi8gX193ZWJwYWNrX3JlcXVpcmVfXy5kKF9fd2VicGFja19leHBvcnRzX18sIHsKLyogaGFybW9ueSBleHBvcnQgKi8gICAiZGVmYXVsdCI6IGZ1bmN0aW9uKCkgeyByZXR1cm4gLyogYmluZGluZyAqLyBvcmRlck1vZGlmaWVyczsgfQovKiBoYXJtb255IGV4cG9ydCAqLyB9KTsKLyogaGFybW9ueSBpbXBvcnQgKi8gdmFyIF9lbnVtc19qc19fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMF9fID0gX193ZWJwYWNrX3JlcXVpcmVfXygvKiEgLi4vZW51bXMuanMgKi8gIi4vbm9kZV9tb2R1bGVzL0Bwb3BwZXJqcy9jb3JlL2xpYi9lbnVtcy5qcyIpOwogLy8gc291cmNlOiBodHRwczovL3N0YWNrb3ZlcmZsb3cuY29tL3F1ZXN0aW9ucy80OTg3NTI1NQoKZnVuY3Rpb24gb3JkZXIobW9kaWZpZXJzKSB7CiAgdmFyIG1hcCA9IG5ldyBNYXAoKTsKICB2YXIgdmlzaXRlZCA9IG5ldyBTZXQoKTsKICB2YXIgcmVzdWx0ID0gW107CiAgbW9kaWZpZXJzLmZvckVhY2goZnVuY3Rpb24gKG1vZGlmaWVyKSB7CiAgICBtYXAuc2V0KG1vZGlmaWVyLm5hbWUsIG1vZGlmaWVyKTsKICB9KTsgLy8gT24gdmlzaXRpbmcgb2JqZWN0LCBjaGVjayBmb3IgaXRzIGRlcGVuZGVuY2llcyBhbmQgdmlzaXQgdGhlbSByZWN1cnNpdmVseQoKICBmdW5jdGlvbiBzb3J0KG1vZGlmaWVyKSB7CiAgICB2aXNpdGVkLmFkZChtb2RpZmllci5uYW1lKTsKICAgIHZhciByZXF1aXJlcyA9IFtdLmNvbmNhdChtb2RpZmllci5yZXF1aXJlcyB8fCBbXSwgbW9kaWZpZXIucmVxdWlyZXNJZkV4aXN0cyB8fCBbXSk7CiAgICByZXF1aXJlcy5mb3JFYWNoKGZ1bmN0aW9uIChkZXApIHsKICAgICAgaWYgKCF2aXNpdGVkLmhhcyhkZXApKSB7CiAgICAgICAgdmFyIGRlcE1vZGlmaWVyID0gbWFwLmdldChkZXApOwoKICAgICAgICBpZiAoZGVwTW9kaWZpZXIpIHsKICAgICAgICAgIHNvcnQoZGVwTW9kaWZpZXIpOwogICAgICAgIH0KICAgICAgfQogICAgfSk7CiAgICByZXN1bHQucHVzaChtb2RpZmllcik7CiAgfQoKICBtb2RpZmllcnMuZm9yRWFjaChmdW5jdGlvbiAobW9kaWZpZXIpIHsKICAgIGlmICghdmlzaXRlZC5oYXMobW9kaWZpZXIubmFtZSkpIHsKICAgICAgLy8gY2hlY2sgZm9yIHZpc2l0ZWQgb2JqZWN0CiAgICAgIHNvcnQobW9kaWZpZXIpOwogICAgfQogIH0pOwogIHJldHVybiByZXN1bHQ7Cn0KCmZ1bmN0aW9uIG9yZGVyTW9kaWZpZXJzKG1vZGlmaWVycykgewogIC8vIG9yZGVyIGJhc2VkIG9uIGRlcGVuZGVuY2llcwogIHZhciBvcmRlcmVkTW9kaWZpZXJzID0gb3JkZXIobW9kaWZpZXJzKTsgLy8gb3JkZXIgYmFzZWQgb24gcGhhc2UKCiAgcmV0dXJuIF9lbnVtc19qc19fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMF9fLm1vZGlmaWVyUGhhc2VzLnJlZHVjZShmdW5jdGlvbiAoYWNjLCBwaGFzZSkgewogICAgcmV0dXJuIGFjYy5jb25jYXQob3JkZXJlZE1vZGlmaWVycy5maWx0ZXIoZnVuY3Rpb24gKG1vZGlmaWVyKSB7CiAgICAgIHJldHVybiBtb2RpZmllci5waGFzZSA9PT0gcGhhc2U7CiAgICB9KSk7CiAgfSwgW10pOwp9CgovKioqLyB9KSwKCi8qKiovICIuL25vZGVfbW9kdWxlcy9AcG9wcGVyanMvY29yZS9saWIvdXRpbHMvcmVjdFRvQ2xpZW50UmVjdC5qcyI6Ci8qISoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiohKlwKICAhKioqIC4vbm9kZV9tb2R1bGVzL0Bwb3BwZXJqcy9jb3JlL2xpYi91dGlscy9yZWN0VG9DbGllbnRSZWN0LmpzICoqKiEKICBcKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKi8KLyoqKi8gKGZ1bmN0aW9uKF9fdW51c2VkX3dlYnBhY2tfbW9kdWxlLCBfX3dlYnBhY2tfZXhwb3J0c19fLCBfX3dlYnBhY2tfcmVxdWlyZV9fKSB7CgoidXNlIHN0cmljdCI7Cl9fd2VicGFja19yZXF1aXJlX18ucihfX3dlYnBhY2tfZXhwb3J0c19fKTsKLyogaGFybW9ueSBleHBvcnQgKi8gX193ZWJwYWNrX3JlcXVpcmVfXy5kKF9fd2VicGFja19leHBvcnRzX18sIHsKLyogaGFybW9ueSBleHBvcnQgKi8gICAiZGVmYXVsdCI6IGZ1bmN0aW9uKCkgeyByZXR1cm4gLyogYmluZGluZyAqLyByZWN0VG9DbGllbnRSZWN0OyB9Ci8qIGhhcm1vbnkgZXhwb3J0ICovIH0pOwpmdW5jdGlvbiByZWN0VG9DbGllbnRSZWN0KHJlY3QpIHsKICByZXR1cm4gT2JqZWN0LmFzc2lnbih7fSwgcmVjdCwgewogICAgbGVmdDogcmVjdC54LAogICAgdG9wOiByZWN0LnksCiAgICByaWdodDogcmVjdC54ICsgcmVjdC53aWR0aCwKICAgIGJvdHRvbTogcmVjdC55ICsgcmVjdC5oZWlnaHQKICB9KTsKfQoKLyoqKi8gfSksCgovKioqLyAiLi9ub2RlX21vZHVsZXMvQHBvcHBlcmpzL2NvcmUvbGliL3V0aWxzL3VuaXF1ZUJ5LmpzIjoKLyohKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiohKlwKICAhKioqIC4vbm9kZV9tb2R1bGVzL0Bwb3BwZXJqcy9jb3JlL2xpYi91dGlscy91bmlxdWVCeS5qcyAqKiohCiAgXCoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqLwovKioqLyAoZnVuY3Rpb24oX191bnVzZWRfd2VicGFja19tb2R1bGUsIF9fd2VicGFja19leHBvcnRzX18sIF9fd2VicGFja19yZXF1aXJlX18pIHsKCiJ1c2Ugc3RyaWN0IjsKX193ZWJwYWNrX3JlcXVpcmVfXy5yKF9fd2VicGFja19leHBvcnRzX18pOwovKiBoYXJtb255IGV4cG9ydCAqLyBfX3dlYnBhY2tfcmVxdWlyZV9fLmQoX193ZWJwYWNrX2V4cG9ydHNfXywgewovKiBoYXJtb255IGV4cG9ydCAqLyAgICJkZWZhdWx0IjogZnVuY3Rpb24oKSB7IHJldHVybiAvKiBiaW5kaW5nICovIHVuaXF1ZUJ5OyB9Ci8qIGhhcm1vbnkgZXhwb3J0ICovIH0pOwpmdW5jdGlvbiB1bmlxdWVCeShhcnIsIGZuKSB7CiAgdmFyIGlkZW50aWZpZXJzID0gbmV3IFNldCgpOwogIHJldHVybiBhcnIuZmlsdGVyKGZ1bmN0aW9uIChpdGVtKSB7CiAgICB2YXIgaWRlbnRpZmllciA9IGZuKGl0ZW0pOwoKICAgIGlmICghaWRlbnRpZmllcnMuaGFzKGlkZW50aWZpZXIpKSB7CiAgICAgIGlkZW50aWZpZXJzLmFkZChpZGVudGlmaWVyKTsKICAgICAgcmV0dXJuIHRydWU7CiAgICB9CiAgfSk7Cn0KCi8qKiovIH0pLAoKLyoqKi8gIi4vbm9kZV9tb2R1bGVzL0Bwb3BwZXJqcy9jb3JlL2xpYi91dGlscy91c2VyQWdlbnQuanMiOgovKiEqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiohKlwKICAhKioqIC4vbm9kZV9tb2R1bGVzL0Bwb3BwZXJqcy9jb3JlL2xpYi91dGlscy91c2VyQWdlbnQuanMgKioqIQogIFwqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiovCi8qKiovIChmdW5jdGlvbihfX3VudXNlZF93ZWJwYWNrX21vZHVsZSwgX193ZWJwYWNrX2V4cG9ydHNfXywgX193ZWJwYWNrX3JlcXVpcmVfXykgewoKInVzZSBzdHJpY3QiOwpfX3dlYnBhY2tfcmVxdWlyZV9fLnIoX193ZWJwYWNrX2V4cG9ydHNfXyk7Ci8qIGhhcm1vbnkgZXhwb3J0ICovIF9fd2VicGFja19yZXF1aXJlX18uZChfX3dlYnBhY2tfZXhwb3J0c19fLCB7Ci8qIGhhcm1vbnkgZXhwb3J0ICovICAgImRlZmF1bHQiOiBmdW5jdGlvbigpIHsgcmV0dXJuIC8qIGJpbmRpbmcgKi8gZ2V0VUFTdHJpbmc7IH0KLyogaGFybW9ueSBleHBvcnQgKi8gfSk7CmZ1bmN0aW9uIGdldFVBU3RyaW5nKCkgewogIHZhciB1YURhdGEgPSBuYXZpZ2F0b3IudXNlckFnZW50RGF0YTsKCiAgaWYgKHVhRGF0YSAhPSBudWxsICYmIHVhRGF0YS5icmFuZHMpIHsKICAgIHJldHVybiB1YURhdGEuYnJhbmRzLm1hcChmdW5jdGlvbiAoaXRlbSkgewogICAgICByZXR1cm4gaXRlbS5icmFuZCArICIvIiArIGl0ZW0udmVyc2lvbjsKICAgIH0pLmpvaW4oJyAnKTsKICB9CgogIHJldHVybiBuYXZpZ2F0b3IudXNlckFnZW50Owp9CgovKioqLyB9KSwKCi8qKiovICIuL25vZGVfbW9kdWxlcy9AcG9wcGVyanMvY29yZS9saWIvdXRpbHMvdmFsaWRhdGVNb2RpZmllcnMuanMiOgovKiEqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiEqXAogICEqKiogLi9ub2RlX21vZHVsZXMvQHBvcHBlcmpzL2NvcmUvbGliL3V0aWxzL3ZhbGlkYXRlTW9kaWZpZXJzLmpzICoqKiEKICBcKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiovCi8qKiovIChmdW5jdGlvbihfX3VudXNlZF93ZWJwYWNrX21vZHVsZSwgX193ZWJwYWNrX2V4cG9ydHNfXywgX193ZWJwYWNrX3JlcXVpcmVfXykgewoKInVzZSBzdHJpY3QiOwpfX3dlYnBhY2tfcmVxdWlyZV9fLnIoX193ZWJwYWNrX2V4cG9ydHNfXyk7Ci8qIGhhcm1vbnkgZXhwb3J0ICovIF9fd2VicGFja19yZXF1aXJlX18uZChfX3dlYnBhY2tfZXhwb3J0c19fLCB7Ci8qIGhhcm1vbnkgZXhwb3J0ICovICAgImRlZmF1bHQiOiBmdW5jdGlvbigpIHsgcmV0dXJuIC8qIGJpbmRpbmcgKi8gdmFsaWRhdGVNb2RpZmllcnM7IH0KLyogaGFybW9ueSBleHBvcnQgKi8gfSk7Ci8qIGhhcm1vbnkgaW1wb3J0ICovIHZhciBfZm9ybWF0X2pzX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8wX18gPSBfX3dlYnBhY2tfcmVxdWlyZV9fKC8qISAuL2Zvcm1hdC5qcyAqLyAiLi9ub2RlX21vZHVsZXMvQHBvcHBlcmpzL2NvcmUvbGliL3V0aWxzL2Zvcm1hdC5qcyIpOwovKiBoYXJtb255IGltcG9ydCAqLyB2YXIgX2VudW1zX2pzX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8xX18gPSBfX3dlYnBhY2tfcmVxdWlyZV9fKC8qISAuLi9lbnVtcy5qcyAqLyAiLi9ub2RlX21vZHVsZXMvQHBvcHBlcmpzL2NvcmUvbGliL2VudW1zLmpzIik7CgoKdmFyIElOVkFMSURfTU9ESUZJRVJfRVJST1IgPSAnUG9wcGVyOiBtb2RpZmllciAiJXMiIHByb3ZpZGVkIGFuIGludmFsaWQgJXMgcHJvcGVydHksIGV4cGVjdGVkICVzIGJ1dCBnb3QgJXMnOwp2YXIgTUlTU0lOR19ERVBFTkRFTkNZX0VSUk9SID0gJ1BvcHBlcjogbW9kaWZpZXIgIiVzIiByZXF1aXJlcyAiJXMiLCBidXQgIiVzIiBtb2RpZmllciBpcyBub3QgYXZhaWxhYmxlJzsKdmFyIFZBTElEX1BST1BFUlRJRVMgPSBbJ25hbWUnLCAnZW5hYmxlZCcsICdwaGFzZScsICdmbicsICdlZmZlY3QnLCAncmVxdWlyZXMnLCAnb3B0aW9ucyddOwpmdW5jdGlvbiB2YWxpZGF0ZU1vZGlmaWVycyhtb2RpZmllcnMpIHsKICBtb2RpZmllcnMuZm9yRWFjaChmdW5jdGlvbiAobW9kaWZpZXIpIHsKICAgIFtdLmNvbmNhdChPYmplY3Qua2V5cyhtb2RpZmllciksIFZBTElEX1BST1BFUlRJRVMpIC8vIElFMTEtY29tcGF0aWJsZSByZXBsYWNlbWVudCBmb3IgYG5ldyBTZXQoaXRlcmFibGUpYAogICAgLmZpbHRlcihmdW5jdGlvbiAodmFsdWUsIGluZGV4LCBzZWxmKSB7CiAgICAgIHJldHVybiBzZWxmLmluZGV4T2YodmFsdWUpID09PSBpbmRleDsKICAgIH0pLmZvckVhY2goZnVuY3Rpb24gKGtleSkgewogICAgICBzd2l0Y2ggKGtleSkgewogICAgICAgIGNhc2UgJ25hbWUnOgogICAgICAgICAgaWYgKHR5cGVvZiBtb2RpZmllci5uYW1lICE9PSAnc3RyaW5nJykgewogICAgICAgICAgICBjb25zb2xlLmVycm9yKCgwLF9mb3JtYXRfanNfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzBfX1siZGVmYXVsdCJdKShJTlZBTElEX01PRElGSUVSX0VSUk9SLCBTdHJpbmcobW9kaWZpZXIubmFtZSksICcibmFtZSInLCAnInN0cmluZyInLCAiXCIiICsgU3RyaW5nKG1vZGlmaWVyLm5hbWUpICsgIlwiIikpOwogICAgICAgICAgfQoKICAgICAgICAgIGJyZWFrOwoKICAgICAgICBjYXNlICdlbmFibGVkJzoKICAgICAgICAgIGlmICh0eXBlb2YgbW9kaWZpZXIuZW5hYmxlZCAhPT0gJ2Jvb2xlYW4nKSB7CiAgICAgICAgICAgIGNvbnNvbGUuZXJyb3IoKDAsX2Zvcm1hdF9qc19fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMF9fWyJkZWZhdWx0Il0pKElOVkFMSURfTU9ESUZJRVJfRVJST1IsIG1vZGlmaWVyLm5hbWUsICciZW5hYmxlZCInLCAnImJvb2xlYW4iJywgIlwiIiArIFN0cmluZyhtb2RpZmllci5lbmFibGVkKSArICJcIiIpKTsKICAgICAgICAgIH0KCiAgICAgICAgICBicmVhazsKCiAgICAgICAgY2FzZSAncGhhc2UnOgogICAgICAgICAgaWYgKF9lbnVtc19qc19fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMV9fLm1vZGlmaWVyUGhhc2VzLmluZGV4T2YobW9kaWZpZXIucGhhc2UpIDwgMCkgewogICAgICAgICAgICBjb25zb2xlLmVycm9yKCgwLF9mb3JtYXRfanNfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzBfX1siZGVmYXVsdCJdKShJTlZBTElEX01PRElGSUVSX0VSUk9SLCBtb2RpZmllci5uYW1lLCAnInBoYXNlIicsICJlaXRoZXIgIiArIF9lbnVtc19qc19fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMV9fLm1vZGlmaWVyUGhhc2VzLmpvaW4oJywgJyksICJcIiIgKyBTdHJpbmcobW9kaWZpZXIucGhhc2UpICsgIlwiIikpOwogICAgICAgICAgfQoKICAgICAgICAgIGJyZWFrOwoKICAgICAgICBjYXNlICdmbic6CiAgICAgICAgICBpZiAodHlwZW9mIG1vZGlmaWVyLmZuICE9PSAnZnVuY3Rpb24nKSB7CiAgICAgICAgICAgIGNvbnNvbGUuZXJyb3IoKDAsX2Zvcm1hdF9qc19fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMF9fWyJkZWZhdWx0Il0pKElOVkFMSURfTU9ESUZJRVJfRVJST1IsIG1vZGlmaWVyLm5hbWUsICciZm4iJywgJyJmdW5jdGlvbiInLCAiXCIiICsgU3RyaW5nKG1vZGlmaWVyLmZuKSArICJcIiIpKTsKICAgICAgICAgIH0KCiAgICAgICAgICBicmVhazsKCiAgICAgICAgY2FzZSAnZWZmZWN0JzoKICAgICAgICAgIGlmIChtb2RpZmllci5lZmZlY3QgIT0gbnVsbCAmJiB0eXBlb2YgbW9kaWZpZXIuZWZmZWN0ICE9PSAnZnVuY3Rpb24nKSB7CiAgICAgICAgICAgIGNvbnNvbGUuZXJyb3IoKDAsX2Zvcm1hdF9qc19fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMF9fWyJkZWZhdWx0Il0pKElOVkFMSURfTU9ESUZJRVJfRVJST1IsIG1vZGlmaWVyLm5hbWUsICciZWZmZWN0IicsICciZnVuY3Rpb24iJywgIlwiIiArIFN0cmluZyhtb2RpZmllci5mbikgKyAiXCIiKSk7CiAgICAgICAgICB9CgogICAgICAgICAgYnJlYWs7CgogICAgICAgIGNhc2UgJ3JlcXVpcmVzJzoKICAgICAgICAgIGlmIChtb2RpZmllci5yZXF1aXJlcyAhPSBudWxsICYmICFBcnJheS5pc0FycmF5KG1vZGlmaWVyLnJlcXVpcmVzKSkgewogICAgICAgICAgICBjb25zb2xlLmVycm9yKCgwLF9mb3JtYXRfanNfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzBfX1siZGVmYXVsdCJdKShJTlZBTElEX01PRElGSUVSX0VSUk9SLCBtb2RpZmllci5uYW1lLCAnInJlcXVpcmVzIicsICciYXJyYXkiJywgIlwiIiArIFN0cmluZyhtb2RpZmllci5yZXF1aXJlcykgKyAiXCIiKSk7CiAgICAgICAgICB9CgogICAgICAgICAgYnJlYWs7CgogICAgICAgIGNhc2UgJ3JlcXVpcmVzSWZFeGlzdHMnOgogICAgICAgICAgaWYgKCFBcnJheS5pc0FycmF5KG1vZGlmaWVyLnJlcXVpcmVzSWZFeGlzdHMpKSB7CiAgICAgICAgICAgIGNvbnNvbGUuZXJyb3IoKDAsX2Zvcm1hdF9qc19fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMF9fWyJkZWZhdWx0Il0pKElOVkFMSURfTU9ESUZJRVJfRVJST1IsIG1vZGlmaWVyLm5hbWUsICcicmVxdWlyZXNJZkV4aXN0cyInLCAnImFycmF5IicsICJcIiIgKyBTdHJpbmcobW9kaWZpZXIucmVxdWlyZXNJZkV4aXN0cykgKyAiXCIiKSk7CiAgICAgICAgICB9CgogICAgICAgICAgYnJlYWs7CgogICAgICAgIGNhc2UgJ29wdGlvbnMnOgogICAgICAgIGNhc2UgJ2RhdGEnOgogICAgICAgICAgYnJlYWs7CgogICAgICAgIGRlZmF1bHQ6CiAgICAgICAgICBjb25zb2xlLmVycm9yKCJQb3BwZXJKUzogYW4gaW52YWxpZCBwcm9wZXJ0eSBoYXMgYmVlbiBwcm92aWRlZCB0byB0aGUgXCIiICsgbW9kaWZpZXIubmFtZSArICJcIiBtb2RpZmllciwgdmFsaWQgcHJvcGVydGllcyBhcmUgIiArIFZBTElEX1BST1BFUlRJRVMubWFwKGZ1bmN0aW9uIChzKSB7CiAgICAgICAgICAgIHJldHVybiAiXCIiICsgcyArICJcIiI7CiAgICAgICAgICB9KS5qb2luKCcsICcpICsgIjsgYnV0IFwiIiArIGtleSArICJcIiB3YXMgcHJvdmlkZWQuIik7CiAgICAgIH0KCiAgICAgIG1vZGlmaWVyLnJlcXVpcmVzICYmIG1vZGlmaWVyLnJlcXVpcmVzLmZvckVhY2goZnVuY3Rpb24gKHJlcXVpcmVtZW50KSB7CiAgICAgICAgaWYgKG1vZGlmaWVycy5maW5kKGZ1bmN0aW9uIChtb2QpIHsKICAgICAgICAgIHJldHVybiBtb2QubmFtZSA9PT0gcmVxdWlyZW1lbnQ7CiAgICAgICAgfSkgPT0gbnVsbCkgewogICAgICAgICAgY29uc29sZS5lcnJvcigoMCxfZm9ybWF0X2pzX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8wX19bImRlZmF1bHQiXSkoTUlTU0lOR19ERVBFTkRFTkNZX0VSUk9SLCBTdHJpbmcobW9kaWZpZXIubmFtZSksIHJlcXVpcmVtZW50LCByZXF1aXJlbWVudCkpOwogICAgICAgIH0KICAgICAgfSk7CiAgICB9KTsKICB9KTsKfQoKLyoqKi8gfSksCgovKioqLyAiLi9ub2RlX21vZHVsZXMvQHBvcHBlcmpzL2NvcmUvbGliL3V0aWxzL3dpdGhpbi5qcyI6Ci8qISoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiEqXAogICEqKiogLi9ub2RlX21vZHVsZXMvQHBvcHBlcmpzL2NvcmUvbGliL3V0aWxzL3dpdGhpbi5qcyAqKiohCiAgXCoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKi8KLyoqKi8gKGZ1bmN0aW9uKF9fdW51c2VkX3dlYnBhY2tfbW9kdWxlLCBfX3dlYnBhY2tfZXhwb3J0c19fLCBfX3dlYnBhY2tfcmVxdWlyZV9fKSB7CgoidXNlIHN0cmljdCI7Cl9fd2VicGFja19yZXF1aXJlX18ucihfX3dlYnBhY2tfZXhwb3J0c19fKTsKLyogaGFybW9ueSBleHBvcnQgKi8gX193ZWJwYWNrX3JlcXVpcmVfXy5kKF9fd2VicGFja19leHBvcnRzX18sIHsKLyogaGFybW9ueSBleHBvcnQgKi8gICAid2l0aGluIjogZnVuY3Rpb24oKSB7IHJldHVybiAvKiBiaW5kaW5nICovIHdpdGhpbjsgfSwKLyogaGFybW9ueSBleHBvcnQgKi8gICAid2l0aGluTWF4Q2xhbXAiOiBmdW5jdGlvbigpIHsgcmV0dXJuIC8qIGJpbmRpbmcgKi8gd2l0aGluTWF4Q2xhbXA7IH0KLyogaGFybW9ueSBleHBvcnQgKi8gfSk7Ci8qIGhhcm1vbnkgaW1wb3J0ICovIHZhciBfbWF0aF9qc19fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMF9fID0gX193ZWJwYWNrX3JlcXVpcmVfXygvKiEgLi9tYXRoLmpzICovICIuL25vZGVfbW9kdWxlcy9AcG9wcGVyanMvY29yZS9saWIvdXRpbHMvbWF0aC5qcyIpOwoKZnVuY3Rpb24gd2l0aGluKG1pbiwgdmFsdWUsIG1heCkgewogIHJldHVybiAoMCxfbWF0aF9qc19fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMF9fLm1heCkobWluLCAoMCxfbWF0aF9qc19fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMF9fLm1pbikodmFsdWUsIG1heCkpOwp9CmZ1bmN0aW9uIHdpdGhpbk1heENsYW1wKG1pbiwgdmFsdWUsIG1heCkgewogIHZhciB2ID0gd2l0aGluKG1pbiwgdmFsdWUsIG1heCk7CiAgcmV0dXJuIHYgPiBtYXggPyBtYXggOiB2Owp9CgovKioqLyB9KSwKCi8qKiovICIuL25vZGVfbW9kdWxlcy9ib290c3RyYXAvanMvZGlzdC9iYXNlLWNvbXBvbmVudC5qcyI6Ci8qISoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiohKlwKICAhKioqIC4vbm9kZV9tb2R1bGVzL2Jvb3RzdHJhcC9qcy9kaXN0L2Jhc2UtY29tcG9uZW50LmpzICoqKiEKICBcKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKi8KLyoqKi8gKGZ1bmN0aW9uKG1vZHVsZSwgX191bnVzZWRfd2VicGFja19leHBvcnRzLCBfX3dlYnBhY2tfcmVxdWlyZV9fKSB7CgovKiEKICAqIEJvb3RzdHJhcCBiYXNlLWNvbXBvbmVudC5qcyB2NS4yLjMgKGh0dHBzOi8vZ2V0Ym9vdHN0cmFwLmNvbS8pCiAgKiBDb3B5cmlnaHQgMjAxMS0yMDIyIFRoZSBCb290c3RyYXAgQXV0aG9ycyAoaHR0cHM6Ly9naXRodWIuY29tL3R3YnMvYm9vdHN0cmFwL2dyYXBocy9jb250cmlidXRvcnMpCiAgKiBMaWNlbnNlZCB1bmRlciBNSVQgKGh0dHBzOi8vZ2l0aHViLmNvbS90d2JzL2Jvb3RzdHJhcC9ibG9iL21haW4vTElDRU5TRSkKICAqLwooZnVuY3Rpb24gKGdsb2JhbCwgZmFjdG9yeSkgewogICB0cnVlID8gbW9kdWxlLmV4cG9ydHMgPSBmYWN0b3J5KF9fd2VicGFja19yZXF1aXJlX18oLyohIC4vZG9tL2RhdGEgKi8gIi4vbm9kZV9tb2R1bGVzL2Jvb3RzdHJhcC9qcy9kaXN0L2RvbS9kYXRhLmpzIiksIF9fd2VicGFja19yZXF1aXJlX18oLyohIC4vdXRpbC9pbmRleCAqLyAiLi9ub2RlX21vZHVsZXMvYm9vdHN0cmFwL2pzL2Rpc3QvdXRpbC9pbmRleC5qcyIpLCBfX3dlYnBhY2tfcmVxdWlyZV9fKC8qISAuL2RvbS9ldmVudC1oYW5kbGVyICovICIuL25vZGVfbW9kdWxlcy9ib290c3RyYXAvanMvZGlzdC9kb20vZXZlbnQtaGFuZGxlci5qcyIpLCBfX3dlYnBhY2tfcmVxdWlyZV9fKC8qISAuL3V0aWwvY29uZmlnICovICIuL25vZGVfbW9kdWxlcy9ib290c3RyYXAvanMvZGlzdC91dGlsL2NvbmZpZy5qcyIpKSA6CiAgMDsKfSkodGhpcywgKGZ1bmN0aW9uIChEYXRhLCBpbmRleCwgRXZlbnRIYW5kbGVyLCBDb25maWcpIHsgJ3VzZSBzdHJpY3QnOwoKICBjb25zdCBfaW50ZXJvcERlZmF1bHRMZWdhY3kgPSBlID0+IGUgJiYgdHlwZW9mIGUgPT09ICdvYmplY3QnICYmICdkZWZhdWx0JyBpbiBlID8gZSA6IHsgZGVmYXVsdDogZSB9OwoKICBjb25zdCBEYXRhX19kZWZhdWx0ID0gLyojX19QVVJFX18qL19pbnRlcm9wRGVmYXVsdExlZ2FjeShEYXRhKTsKICBjb25zdCBFdmVudEhhbmRsZXJfX2RlZmF1bHQgPSAvKiNfX1BVUkVfXyovX2ludGVyb3BEZWZhdWx0TGVnYWN5KEV2ZW50SGFuZGxlcik7CiAgY29uc3QgQ29uZmlnX19kZWZhdWx0ID0gLyojX19QVVJFX18qL19pbnRlcm9wRGVmYXVsdExlZ2FjeShDb25maWcpOwoKICAvKioKICAgKiAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLQogICAqIEJvb3RzdHJhcCAodjUuMi4zKTogYmFzZS1jb21wb25lbnQuanMKICAgKiBMaWNlbnNlZCB1bmRlciBNSVQgKGh0dHBzOi8vZ2l0aHViLmNvbS90d2JzL2Jvb3RzdHJhcC9ibG9iL21haW4vTElDRU5TRSkKICAgKiAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLQogICAqLwogIC8qKgogICAqIENvbnN0YW50cwogICAqLwoKICBjb25zdCBWRVJTSU9OID0gJzUuMi4zJzsKICAvKioKICAgKiBDbGFzcyBkZWZpbml0aW9uCiAgICovCgogIGNsYXNzIEJhc2VDb21wb25lbnQgZXh0ZW5kcyBDb25maWdfX2RlZmF1bHQuZGVmYXVsdCB7CiAgICBjb25zdHJ1Y3RvcihlbGVtZW50LCBjb25maWcpIHsKICAgICAgc3VwZXIoKTsKICAgICAgZWxlbWVudCA9IGluZGV4LmdldEVsZW1lbnQoZWxlbWVudCk7CgogICAgICBpZiAoIWVsZW1lbnQpIHsKICAgICAgICByZXR1cm47CiAgICAgIH0KCiAgICAgIHRoaXMuX2VsZW1lbnQgPSBlbGVtZW50OwogICAgICB0aGlzLl9jb25maWcgPSB0aGlzLl9nZXRDb25maWcoY29uZmlnKTsKICAgICAgRGF0YV9fZGVmYXVsdC5kZWZhdWx0LnNldCh0aGlzLl9lbGVtZW50LCB0aGlzLmNvbnN0cnVjdG9yLkRBVEFfS0VZLCB0aGlzKTsKICAgIH0gLy8gUHVibGljCgoKICAgIGRpc3Bvc2UoKSB7CiAgICAgIERhdGFfX2RlZmF1bHQuZGVmYXVsdC5yZW1vdmUodGhpcy5fZWxlbWVudCwgdGhpcy5jb25zdHJ1Y3Rvci5EQVRBX0tFWSk7CiAgICAgIEV2ZW50SGFuZGxlcl9fZGVmYXVsdC5kZWZhdWx0Lm9mZih0aGlzLl9lbGVtZW50LCB0aGlzLmNvbnN0cnVjdG9yLkVWRU5UX0tFWSk7CgogICAgICBmb3IgKGNvbnN0IHByb3BlcnR5TmFtZSBvZiBPYmplY3QuZ2V0T3duUHJvcGVydHlOYW1lcyh0aGlzKSkgewogICAgICAgIHRoaXNbcHJvcGVydHlOYW1lXSA9IG51bGw7CiAgICAgIH0KICAgIH0KCiAgICBfcXVldWVDYWxsYmFjayhjYWxsYmFjaywgZWxlbWVudCwgaXNBbmltYXRlZCA9IHRydWUpIHsKICAgICAgaW5kZXguZXhlY3V0ZUFmdGVyVHJhbnNpdGlvbihjYWxsYmFjaywgZWxlbWVudCwgaXNBbmltYXRlZCk7CiAgICB9CgogICAgX2dldENvbmZpZyhjb25maWcpIHsKICAgICAgY29uZmlnID0gdGhpcy5fbWVyZ2VDb25maWdPYmooY29uZmlnLCB0aGlzLl9lbGVtZW50KTsKICAgICAgY29uZmlnID0gdGhpcy5fY29uZmlnQWZ0ZXJNZXJnZShjb25maWcpOwoKICAgICAgdGhpcy5fdHlwZUNoZWNrQ29uZmlnKGNvbmZpZyk7CgogICAgICByZXR1cm4gY29uZmlnOwogICAgfSAvLyBTdGF0aWMKCgogICAgc3RhdGljIGdldEluc3RhbmNlKGVsZW1lbnQpIHsKICAgICAgcmV0dXJuIERhdGFfX2RlZmF1bHQuZGVmYXVsdC5nZXQoaW5kZXguZ2V0RWxlbWVudChlbGVtZW50KSwgdGhpcy5EQVRBX0tFWSk7CiAgICB9CgogICAgc3RhdGljIGdldE9yQ3JlYXRlSW5zdGFuY2UoZWxlbWVudCwgY29uZmlnID0ge30pIHsKICAgICAgcmV0dXJuIHRoaXMuZ2V0SW5zdGFuY2UoZWxlbWVudCkgfHwgbmV3IHRoaXMoZWxlbWVudCwgdHlwZW9mIGNvbmZpZyA9PT0gJ29iamVjdCcgPyBjb25maWcgOiBudWxsKTsKICAgIH0KCiAgICBzdGF0aWMgZ2V0IFZFUlNJT04oKSB7CiAgICAgIHJldHVybiBWRVJTSU9OOwogICAgfQoKICAgIHN0YXRpYyBnZXQgREFUQV9LRVkoKSB7CiAgICAgIHJldHVybiBgYnMuJHt0aGlzLk5BTUV9YDsKICAgIH0KCiAgICBzdGF0aWMgZ2V0IEVWRU5UX0tFWSgpIHsKICAgICAgcmV0dXJuIGAuJHt0aGlzLkRBVEFfS0VZfWA7CiAgICB9CgogICAgc3RhdGljIGV2ZW50TmFtZShuYW1lKSB7CiAgICAgIHJldHVybiBgJHtuYW1lfSR7dGhpcy5FVkVOVF9LRVl9YDsKICAgIH0KCiAgfQoKICByZXR1cm4gQmFzZUNvbXBvbmVudDsKCn0pKTsKLy8jIHNvdXJjZU1hcHBpbmdVUkw9YmFzZS1jb21wb25lbnQuanMubWFwCgoKLyoqKi8gfSksCgovKioqLyAiLi9ub2RlX21vZHVsZXMvYm9vdHN0cmFwL2pzL2Rpc3QvYnV0dG9uLmpzIjoKLyohKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiohKlwKICAhKioqIC4vbm9kZV9tb2R1bGVzL2Jvb3RzdHJhcC9qcy9kaXN0L2J1dHRvbi5qcyAqKiohCiAgXCoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqLwovKioqLyAoZnVuY3Rpb24obW9kdWxlLCBfX3VudXNlZF93ZWJwYWNrX2V4cG9ydHMsIF9fd2VicGFja19yZXF1aXJlX18pIHsKCi8qIQogICogQm9vdHN0cmFwIGJ1dHRvbi5qcyB2NS4yLjMgKGh0dHBzOi8vZ2V0Ym9vdHN0cmFwLmNvbS8pCiAgKiBDb3B5cmlnaHQgMjAxMS0yMDIyIFRoZSBCb290c3RyYXAgQXV0aG9ycyAoaHR0cHM6Ly9naXRodWIuY29tL3R3YnMvYm9vdHN0cmFwL2dyYXBocy9jb250cmlidXRvcnMpCiAgKiBMaWNlbnNlZCB1bmRlciBNSVQgKGh0dHBzOi8vZ2l0aHViLmNvbS90d2JzL2Jvb3RzdHJhcC9ibG9iL21haW4vTElDRU5TRSkKICAqLwooZnVuY3Rpb24gKGdsb2JhbCwgZmFjdG9yeSkgewogICB0cnVlID8gbW9kdWxlLmV4cG9ydHMgPSBmYWN0b3J5KF9fd2VicGFja19yZXF1aXJlX18oLyohIC4vdXRpbC9pbmRleCAqLyAiLi9ub2RlX21vZHVsZXMvYm9vdHN0cmFwL2pzL2Rpc3QvdXRpbC9pbmRleC5qcyIpLCBfX3dlYnBhY2tfcmVxdWlyZV9fKC8qISAuL2RvbS9ldmVudC1oYW5kbGVyICovICIuL25vZGVfbW9kdWxlcy9ib290c3RyYXAvanMvZGlzdC9kb20vZXZlbnQtaGFuZGxlci5qcyIpLCBfX3dlYnBhY2tfcmVxdWlyZV9fKC8qISAuL2Jhc2UtY29tcG9uZW50ICovICIuL25vZGVfbW9kdWxlcy9ib290c3RyYXAvanMvZGlzdC9iYXNlLWNvbXBvbmVudC5qcyIpKSA6CiAgMDsKfSkodGhpcywgKGZ1bmN0aW9uIChpbmRleCwgRXZlbnRIYW5kbGVyLCBCYXNlQ29tcG9uZW50KSB7ICd1c2Ugc3RyaWN0JzsKCiAgY29uc3QgX2ludGVyb3BEZWZhdWx0TGVnYWN5ID0gZSA9PiBlICYmIHR5cGVvZiBlID09PSAnb2JqZWN0JyAmJiAnZGVmYXVsdCcgaW4gZSA/IGUgOiB7IGRlZmF1bHQ6IGUgfTsKCiAgY29uc3QgRXZlbnRIYW5kbGVyX19kZWZhdWx0ID0gLyojX19QVVJFX18qL19pbnRlcm9wRGVmYXVsdExlZ2FjeShFdmVudEhhbmRsZXIpOwogIGNvbnN0IEJhc2VDb21wb25lbnRfX2RlZmF1bHQgPSAvKiNfX1BVUkVfXyovX2ludGVyb3BEZWZhdWx0TGVnYWN5KEJhc2VDb21wb25lbnQpOwoKICAvKioKICAgKiAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLQogICAqIEJvb3RzdHJhcCAodjUuMi4zKTogYnV0dG9uLmpzCiAgICogTGljZW5zZWQgdW5kZXIgTUlUIChodHRwczovL2dpdGh1Yi5jb20vdHdicy9ib290c3RyYXAvYmxvYi9tYWluL0xJQ0VOU0UpCiAgICogLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0KICAgKi8KICAvKioKICAgKiBDb25zdGFudHMKICAgKi8KCiAgY29uc3QgTkFNRSA9ICdidXR0b24nOwogIGNvbnN0IERBVEFfS0VZID0gJ2JzLmJ1dHRvbic7CiAgY29uc3QgRVZFTlRfS0VZID0gYC4ke0RBVEFfS0VZfWA7CiAgY29uc3QgREFUQV9BUElfS0VZID0gJy5kYXRhLWFwaSc7CiAgY29uc3QgQ0xBU1NfTkFNRV9BQ1RJVkUgPSAnYWN0aXZlJzsKICBjb25zdCBTRUxFQ1RPUl9EQVRBX1RPR0dMRSA9ICdbZGF0YS1icy10b2dnbGU9ImJ1dHRvbiJdJzsKICBjb25zdCBFVkVOVF9DTElDS19EQVRBX0FQSSA9IGBjbGljayR7RVZFTlRfS0VZfSR7REFUQV9BUElfS0VZfWA7CiAgLyoqCiAgICogQ2xhc3MgZGVmaW5pdGlvbgogICAqLwoKICBjbGFzcyBCdXR0b24gZXh0ZW5kcyBCYXNlQ29tcG9uZW50X19kZWZhdWx0LmRlZmF1bHQgewogICAgLy8gR2V0dGVycwogICAgc3RhdGljIGdldCBOQU1FKCkgewogICAgICByZXR1cm4gTkFNRTsKICAgIH0gLy8gUHVibGljCgoKICAgIHRvZ2dsZSgpIHsKICAgICAgLy8gVG9nZ2xlIGNsYXNzIGFuZCBzeW5jIHRoZSBgYXJpYS1wcmVzc2VkYCBhdHRyaWJ1dGUgd2l0aCB0aGUgcmV0dXJuIHZhbHVlIG9mIHRoZSBgLnRvZ2dsZSgpYCBtZXRob2QKICAgICAgdGhpcy5fZWxlbWVudC5zZXRBdHRyaWJ1dGUoJ2FyaWEtcHJlc3NlZCcsIHRoaXMuX2VsZW1lbnQuY2xhc3NMaXN0LnRvZ2dsZShDTEFTU19OQU1FX0FDVElWRSkpOwogICAgfSAvLyBTdGF0aWMKCgogICAgc3RhdGljIGpRdWVyeUludGVyZmFjZShjb25maWcpIHsKICAgICAgcmV0dXJuIHRoaXMuZWFjaChmdW5jdGlvbiAoKSB7CiAgICAgICAgY29uc3QgZGF0YSA9IEJ1dHRvbi5nZXRPckNyZWF0ZUluc3RhbmNlKHRoaXMpOwoKICAgICAgICBpZiAoY29uZmlnID09PSAndG9nZ2xlJykgewogICAgICAgICAgZGF0YVtjb25maWddKCk7CiAgICAgICAgfQogICAgICB9KTsKICAgIH0KCiAgfQogIC8qKgogICAqIERhdGEgQVBJIGltcGxlbWVudGF0aW9uCiAgICovCgoKICBFdmVudEhhbmRsZXJfX2RlZmF1bHQuZGVmYXVsdC5vbihkb2N1bWVudCwgRVZFTlRfQ0xJQ0tfREFUQV9BUEksIFNFTEVDVE9SX0RBVEFfVE9HR0xFLCBldmVudCA9PiB7CiAgICBldmVudC5wcmV2ZW50RGVmYXVsdCgpOwogICAgY29uc3QgYnV0dG9uID0gZXZlbnQudGFyZ2V0LmNsb3Nlc3QoU0VMRUNUT1JfREFUQV9UT0dHTEUpOwogICAgY29uc3QgZGF0YSA9IEJ1dHRvbi5nZXRPckNyZWF0ZUluc3RhbmNlKGJ1dHRvbik7CiAgICBkYXRhLnRvZ2dsZSgpOwogIH0pOwogIC8qKgogICAqIGpRdWVyeQogICAqLwoKICBpbmRleC5kZWZpbmVKUXVlcnlQbHVnaW4oQnV0dG9uKTsKCiAgcmV0dXJuIEJ1dHRvbjsKCn0pKTsKLy8jIHNvdXJjZU1hcHBpbmdVUkw9YnV0dG9uLmpzLm1hcAoKCi8qKiovIH0pLAoKLyoqKi8gIi4vbm9kZV9tb2R1bGVzL2Jvb3RzdHJhcC9qcy9kaXN0L2NvbGxhcHNlLmpzIjoKLyohKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiEqXAogICEqKiogLi9ub2RlX21vZHVsZXMvYm9vdHN0cmFwL2pzL2Rpc3QvY29sbGFwc2UuanMgKioqIQogIFwqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqLwovKioqLyAoZnVuY3Rpb24obW9kdWxlLCBfX3VudXNlZF93ZWJwYWNrX2V4cG9ydHMsIF9fd2VicGFja19yZXF1aXJlX18pIHsKCi8qIQogICogQm9vdHN0cmFwIGNvbGxhcHNlLmpzIHY1LjIuMyAoaHR0cHM6Ly9nZXRib290c3RyYXAuY29tLykKICAqIENvcHlyaWdodCAyMDExLTIwMjIgVGhlIEJvb3RzdHJhcCBBdXRob3JzIChodHRwczovL2dpdGh1Yi5jb20vdHdicy9ib290c3RyYXAvZ3JhcGhzL2NvbnRyaWJ1dG9ycykKICAqIExpY2Vuc2VkIHVuZGVyIE1JVCAoaHR0cHM6Ly9naXRodWIuY29tL3R3YnMvYm9vdHN0cmFwL2Jsb2IvbWFpbi9MSUNFTlNFKQogICovCihmdW5jdGlvbiAoZ2xvYmFsLCBmYWN0b3J5KSB7CiAgIHRydWUgPyBtb2R1bGUuZXhwb3J0cyA9IGZhY3RvcnkoX193ZWJwYWNrX3JlcXVpcmVfXygvKiEgLi91dGlsL2luZGV4ICovICIuL25vZGVfbW9kdWxlcy9ib290c3RyYXAvanMvZGlzdC91dGlsL2luZGV4LmpzIiksIF9fd2VicGFja19yZXF1aXJlX18oLyohIC4vZG9tL2V2ZW50LWhhbmRsZXIgKi8gIi4vbm9kZV9tb2R1bGVzL2Jvb3RzdHJhcC9qcy9kaXN0L2RvbS9ldmVudC1oYW5kbGVyLmpzIiksIF9fd2VicGFja19yZXF1aXJlX18oLyohIC4vZG9tL3NlbGVjdG9yLWVuZ2luZSAqLyAiLi9ub2RlX21vZHVsZXMvYm9vdHN0cmFwL2pzL2Rpc3QvZG9tL3NlbGVjdG9yLWVuZ2luZS5qcyIpLCBfX3dlYnBhY2tfcmVxdWlyZV9fKC8qISAuL2Jhc2UtY29tcG9uZW50ICovICIuL25vZGVfbW9kdWxlcy9ib290c3RyYXAvanMvZGlzdC9iYXNlLWNvbXBvbmVudC5qcyIpKSA6CiAgMDsKfSkodGhpcywgKGZ1bmN0aW9uIChpbmRleCwgRXZlbnRIYW5kbGVyLCBTZWxlY3RvckVuZ2luZSwgQmFzZUNvbXBvbmVudCkgeyAndXNlIHN0cmljdCc7CgogIGNvbnN0IF9pbnRlcm9wRGVmYXVsdExlZ2FjeSA9IGUgPT4gZSAmJiB0eXBlb2YgZSA9PT0gJ29iamVjdCcgJiYgJ2RlZmF1bHQnIGluIGUgPyBlIDogeyBkZWZhdWx0OiBlIH07CgogIGNvbnN0IEV2ZW50SGFuZGxlcl9fZGVmYXVsdCA9IC8qI19fUFVSRV9fKi9faW50ZXJvcERlZmF1bHRMZWdhY3koRXZlbnRIYW5kbGVyKTsKICBjb25zdCBTZWxlY3RvckVuZ2luZV9fZGVmYXVsdCA9IC8qI19fUFVSRV9fKi9faW50ZXJvcERlZmF1bHRMZWdhY3koU2VsZWN0b3JFbmdpbmUpOwogIGNvbnN0IEJhc2VDb21wb25lbnRfX2RlZmF1bHQgPSAvKiNfX1BVUkVfXyovX2ludGVyb3BEZWZhdWx0TGVnYWN5KEJhc2VDb21wb25lbnQpOwoKICAvKioKICAgKiAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLQogICAqIEJvb3RzdHJhcCAodjUuMi4zKTogY29sbGFwc2UuanMKICAgKiBMaWNlbnNlZCB1bmRlciBNSVQgKGh0dHBzOi8vZ2l0aHViLmNvbS90d2JzL2Jvb3RzdHJhcC9ibG9iL21haW4vTElDRU5TRSkKICAgKiAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLQogICAqLwogIC8qKgogICAqIENvbnN0YW50cwogICAqLwoKICBjb25zdCBOQU1FID0gJ2NvbGxhcHNlJzsKICBjb25zdCBEQVRBX0tFWSA9ICdicy5jb2xsYXBzZSc7CiAgY29uc3QgRVZFTlRfS0VZID0gYC4ke0RBVEFfS0VZfWA7CiAgY29uc3QgREFUQV9BUElfS0VZID0gJy5kYXRhLWFwaSc7CiAgY29uc3QgRVZFTlRfU0hPVyA9IGBzaG93JHtFVkVOVF9LRVl9YDsKICBjb25zdCBFVkVOVF9TSE9XTiA9IGBzaG93biR7RVZFTlRfS0VZfWA7CiAgY29uc3QgRVZFTlRfSElERSA9IGBoaWRlJHtFVkVOVF9LRVl9YDsKICBjb25zdCBFVkVOVF9ISURERU4gPSBgaGlkZGVuJHtFVkVOVF9LRVl9YDsKICBjb25zdCBFVkVOVF9DTElDS19EQVRBX0FQSSA9IGBjbGljayR7RVZFTlRfS0VZfSR7REFUQV9BUElfS0VZfWA7CiAgY29uc3QgQ0xBU1NfTkFNRV9TSE9XID0gJ3Nob3cnOwogIGNvbnN0IENMQVNTX05BTUVfQ09MTEFQU0UgPSAnY29sbGFwc2UnOwogIGNvbnN0IENMQVNTX05BTUVfQ09MTEFQU0lORyA9ICdjb2xsYXBzaW5nJzsKICBjb25zdCBDTEFTU19OQU1FX0NPTExBUFNFRCA9ICdjb2xsYXBzZWQnOwogIGNvbnN0IENMQVNTX05BTUVfREVFUEVSX0NISUxEUkVOID0gYDpzY29wZSAuJHtDTEFTU19OQU1FX0NPTExBUFNFfSAuJHtDTEFTU19OQU1FX0NPTExBUFNFfWA7CiAgY29uc3QgQ0xBU1NfTkFNRV9IT1JJWk9OVEFMID0gJ2NvbGxhcHNlLWhvcml6b250YWwnOwogIGNvbnN0IFdJRFRIID0gJ3dpZHRoJzsKICBjb25zdCBIRUlHSFQgPSAnaGVpZ2h0JzsKICBjb25zdCBTRUxFQ1RPUl9BQ1RJVkVTID0gJy5jb2xsYXBzZS5zaG93LCAuY29sbGFwc2UuY29sbGFwc2luZyc7CiAgY29uc3QgU0VMRUNUT1JfREFUQV9UT0dHTEUgPSAnW2RhdGEtYnMtdG9nZ2xlPSJjb2xsYXBzZSJdJzsKICBjb25zdCBEZWZhdWx0ID0gewogICAgcGFyZW50OiBudWxsLAogICAgdG9nZ2xlOiB0cnVlCiAgfTsKICBjb25zdCBEZWZhdWx0VHlwZSA9IHsKICAgIHBhcmVudDogJyhudWxsfGVsZW1lbnQpJywKICAgIHRvZ2dsZTogJ2Jvb2xlYW4nCiAgfTsKICAvKioKICAgKiBDbGFzcyBkZWZpbml0aW9uCiAgICovCgogIGNsYXNzIENvbGxhcHNlIGV4dGVuZHMgQmFzZUNvbXBvbmVudF9fZGVmYXVsdC5kZWZhdWx0IHsKICAgIGNvbnN0cnVjdG9yKGVsZW1lbnQsIGNvbmZpZykgewogICAgICBzdXBlcihlbGVtZW50LCBjb25maWcpOwogICAgICB0aGlzLl9pc1RyYW5zaXRpb25pbmcgPSBmYWxzZTsKICAgICAgdGhpcy5fdHJpZ2dlckFycmF5ID0gW107CiAgICAgIGNvbnN0IHRvZ2dsZUxpc3QgPSBTZWxlY3RvckVuZ2luZV9fZGVmYXVsdC5kZWZhdWx0LmZpbmQoU0VMRUNUT1JfREFUQV9UT0dHTEUpOwoKICAgICAgZm9yIChjb25zdCBlbGVtIG9mIHRvZ2dsZUxpc3QpIHsKICAgICAgICBjb25zdCBzZWxlY3RvciA9IGluZGV4LmdldFNlbGVjdG9yRnJvbUVsZW1lbnQoZWxlbSk7CiAgICAgICAgY29uc3QgZmlsdGVyRWxlbWVudCA9IFNlbGVjdG9yRW5naW5lX19kZWZhdWx0LmRlZmF1bHQuZmluZChzZWxlY3RvcikuZmlsdGVyKGZvdW5kRWxlbWVudCA9PiBmb3VuZEVsZW1lbnQgPT09IHRoaXMuX2VsZW1lbnQpOwoKICAgICAgICBpZiAoc2VsZWN0b3IgIT09IG51bGwgJiYgZmlsdGVyRWxlbWVudC5sZW5ndGgpIHsKICAgICAgICAgIHRoaXMuX3RyaWdnZXJBcnJheS5wdXNoKGVsZW0pOwogICAgICAgIH0KICAgICAgfQoKICAgICAgdGhpcy5faW5pdGlhbGl6ZUNoaWxkcmVuKCk7CgogICAgICBpZiAoIXRoaXMuX2NvbmZpZy5wYXJlbnQpIHsKICAgICAgICB0aGlzLl9hZGRBcmlhQW5kQ29sbGFwc2VkQ2xhc3ModGhpcy5fdHJpZ2dlckFycmF5LCB0aGlzLl9pc1Nob3duKCkpOwogICAgICB9CgogICAgICBpZiAodGhpcy5fY29uZmlnLnRvZ2dsZSkgewogICAgICAgIHRoaXMudG9nZ2xlKCk7CiAgICAgIH0KICAgIH0gLy8gR2V0dGVycwoKCiAgICBzdGF0aWMgZ2V0IERlZmF1bHQoKSB7CiAgICAgIHJldHVybiBEZWZhdWx0OwogICAgfQoKICAgIHN0YXRpYyBnZXQgRGVmYXVsdFR5cGUoKSB7CiAgICAgIHJldHVybiBEZWZhdWx0VHlwZTsKICAgIH0KCiAgICBzdGF0aWMgZ2V0IE5BTUUoKSB7CiAgICAgIHJldHVybiBOQU1FOwogICAgfSAvLyBQdWJsaWMKCgogICAgdG9nZ2xlKCkgewogICAgICBpZiAodGhpcy5faXNTaG93bigpKSB7CiAgICAgICAgdGhpcy5oaWRlKCk7CiAgICAgIH0gZWxzZSB7CiAgICAgICAgdGhpcy5zaG93KCk7CiAgICAgIH0KICAgIH0KCiAgICBzaG93KCkgewogICAgICBpZiAodGhpcy5faXNUcmFuc2l0aW9uaW5nIHx8IHRoaXMuX2lzU2hvd24oKSkgewogICAgICAgIHJldHVybjsKICAgICAgfQoKICAgICAgbGV0IGFjdGl2ZUNoaWxkcmVuID0gW107IC8vIGZpbmQgYWN0aXZlIGNoaWxkcmVuCgogICAgICBpZiAodGhpcy5fY29uZmlnLnBhcmVudCkgewogICAgICAgIGFjdGl2ZUNoaWxkcmVuID0gdGhpcy5fZ2V0Rmlyc3RMZXZlbENoaWxkcmVuKFNFTEVDVE9SX0FDVElWRVMpLmZpbHRlcihlbGVtZW50ID0+IGVsZW1lbnQgIT09IHRoaXMuX2VsZW1lbnQpLm1hcChlbGVtZW50ID0+IENvbGxhcHNlLmdldE9yQ3JlYXRlSW5zdGFuY2UoZWxlbWVudCwgewogICAgICAgICAgdG9nZ2xlOiBmYWxzZQogICAgICAgIH0pKTsKICAgICAgfQoKICAgICAgaWYgKGFjdGl2ZUNoaWxkcmVuLmxlbmd0aCAmJiBhY3RpdmVDaGlsZHJlblswXS5faXNUcmFuc2l0aW9uaW5nKSB7CiAgICAgICAgcmV0dXJuOwogICAgICB9CgogICAgICBjb25zdCBzdGFydEV2ZW50ID0gRXZlbnRIYW5kbGVyX19kZWZhdWx0LmRlZmF1bHQudHJpZ2dlcih0aGlzLl9lbGVtZW50LCBFVkVOVF9TSE9XKTsKCiAgICAgIGlmIChzdGFydEV2ZW50LmRlZmF1bHRQcmV2ZW50ZWQpIHsKICAgICAgICByZXR1cm47CiAgICAgIH0KCiAgICAgIGZvciAoY29uc3QgYWN0aXZlSW5zdGFuY2Ugb2YgYWN0aXZlQ2hpbGRyZW4pIHsKICAgICAgICBhY3RpdmVJbnN0YW5jZS5oaWRlKCk7CiAgICAgIH0KCiAgICAgIGNvbnN0IGRpbWVuc2lvbiA9IHRoaXMuX2dldERpbWVuc2lvbigpOwoKICAgICAgdGhpcy5fZWxlbWVudC5jbGFzc0xpc3QucmVtb3ZlKENMQVNTX05BTUVfQ09MTEFQU0UpOwoKICAgICAgdGhpcy5fZWxlbWVudC5jbGFzc0xpc3QuYWRkKENMQVNTX05BTUVfQ09MTEFQU0lORyk7CgogICAgICB0aGlzLl9lbGVtZW50LnN0eWxlW2RpbWVuc2lvbl0gPSAwOwoKICAgICAgdGhpcy5fYWRkQXJpYUFuZENvbGxhcHNlZENsYXNzKHRoaXMuX3RyaWdnZXJBcnJheSwgdHJ1ZSk7CgogICAgICB0aGlzLl9pc1RyYW5zaXRpb25pbmcgPSB0cnVlOwoKICAgICAgY29uc3QgY29tcGxldGUgPSAoKSA9PiB7CiAgICAgICAgdGhpcy5faXNUcmFuc2l0aW9uaW5nID0gZmFsc2U7CgogICAgICAgIHRoaXMuX2VsZW1lbnQuY2xhc3NMaXN0LnJlbW92ZShDTEFTU19OQU1FX0NPTExBUFNJTkcpOwoKICAgICAgICB0aGlzLl9lbGVtZW50LmNsYXNzTGlzdC5hZGQoQ0xBU1NfTkFNRV9DT0xMQVBTRSwgQ0xBU1NfTkFNRV9TSE9XKTsKCiAgICAgICAgdGhpcy5fZWxlbWVudC5zdHlsZVtkaW1lbnNpb25dID0gJyc7CiAgICAgICAgRXZlbnRIYW5kbGVyX19kZWZhdWx0LmRlZmF1bHQudHJpZ2dlcih0aGlzLl9lbGVtZW50LCBFVkVOVF9TSE9XTik7CiAgICAgIH07CgogICAgICBjb25zdCBjYXBpdGFsaXplZERpbWVuc2lvbiA9IGRpbWVuc2lvblswXS50b1VwcGVyQ2FzZSgpICsgZGltZW5zaW9uLnNsaWNlKDEpOwogICAgICBjb25zdCBzY3JvbGxTaXplID0gYHNjcm9sbCR7Y2FwaXRhbGl6ZWREaW1lbnNpb259YDsKCiAgICAgIHRoaXMuX3F1ZXVlQ2FsbGJhY2soY29tcGxldGUsIHRoaXMuX2VsZW1lbnQsIHRydWUpOwoKICAgICAgdGhpcy5fZWxlbWVudC5zdHlsZVtkaW1lbnNpb25dID0gYCR7dGhpcy5fZWxlbWVudFtzY3JvbGxTaXplXX1weGA7CiAgICB9CgogICAgaGlkZSgpIHsKICAgICAgaWYgKHRoaXMuX2lzVHJhbnNpdGlvbmluZyB8fCAhdGhpcy5faXNTaG93bigpKSB7CiAgICAgICAgcmV0dXJuOwogICAgICB9CgogICAgICBjb25zdCBzdGFydEV2ZW50ID0gRXZlbnRIYW5kbGVyX19kZWZhdWx0LmRlZmF1bHQudHJpZ2dlcih0aGlzLl9lbGVtZW50LCBFVkVOVF9ISURFKTsKCiAgICAgIGlmIChzdGFydEV2ZW50LmRlZmF1bHRQcmV2ZW50ZWQpIHsKICAgICAgICByZXR1cm47CiAgICAgIH0KCiAgICAgIGNvbnN0IGRpbWVuc2lvbiA9IHRoaXMuX2dldERpbWVuc2lvbigpOwoKICAgICAgdGhpcy5fZWxlbWVudC5zdHlsZVtkaW1lbnNpb25dID0gYCR7dGhpcy5fZWxlbWVudC5nZXRCb3VuZGluZ0NsaWVudFJlY3QoKVtkaW1lbnNpb25dfXB4YDsKICAgICAgaW5kZXgucmVmbG93KHRoaXMuX2VsZW1lbnQpOwoKICAgICAgdGhpcy5fZWxlbWVudC5jbGFzc0xpc3QuYWRkKENMQVNTX05BTUVfQ09MTEFQU0lORyk7CgogICAgICB0aGlzLl9lbGVtZW50LmNsYXNzTGlzdC5yZW1vdmUoQ0xBU1NfTkFNRV9DT0xMQVBTRSwgQ0xBU1NfTkFNRV9TSE9XKTsKCiAgICAgIGZvciAoY29uc3QgdHJpZ2dlciBvZiB0aGlzLl90cmlnZ2VyQXJyYXkpIHsKICAgICAgICBjb25zdCBlbGVtZW50ID0gaW5kZXguZ2V0RWxlbWVudEZyb21TZWxlY3Rvcih0cmlnZ2VyKTsKCiAgICAgICAgaWYgKGVsZW1lbnQgJiYgIXRoaXMuX2lzU2hvd24oZWxlbWVudCkpIHsKICAgICAgICAgIHRoaXMuX2FkZEFyaWFBbmRDb2xsYXBzZWRDbGFzcyhbdHJpZ2dlcl0sIGZhbHNlKTsKICAgICAgICB9CiAgICAgIH0KCiAgICAgIHRoaXMuX2lzVHJhbnNpdGlvbmluZyA9IHRydWU7CgogICAgICBjb25zdCBjb21wbGV0ZSA9ICgpID0+IHsKICAgICAgICB0aGlzLl9pc1RyYW5zaXRpb25pbmcgPSBmYWxzZTsKCiAgICAgICAgdGhpcy5fZWxlbWVudC5jbGFzc0xpc3QucmVtb3ZlKENMQVNTX05BTUVfQ09MTEFQU0lORyk7CgogICAgICAgIHRoaXMuX2VsZW1lbnQuY2xhc3NMaXN0LmFkZChDTEFTU19OQU1FX0NPTExBUFNFKTsKCiAgICAgICAgRXZlbnRIYW5kbGVyX19kZWZhdWx0LmRlZmF1bHQudHJpZ2dlcih0aGlzLl9lbGVtZW50LCBFVkVOVF9ISURERU4pOwogICAgICB9OwoKICAgICAgdGhpcy5fZWxlbWVudC5zdHlsZVtkaW1lbnNpb25dID0gJyc7CgogICAgICB0aGlzLl9xdWV1ZUNhbGxiYWNrKGNvbXBsZXRlLCB0aGlzLl9lbGVtZW50LCB0cnVlKTsKICAgIH0KCiAgICBfaXNTaG93bihlbGVtZW50ID0gdGhpcy5fZWxlbWVudCkgewogICAgICByZXR1cm4gZWxlbWVudC5jbGFzc0xpc3QuY29udGFpbnMoQ0xBU1NfTkFNRV9TSE9XKTsKICAgIH0gLy8gUHJpdmF0ZQoKCiAgICBfY29uZmlnQWZ0ZXJNZXJnZShjb25maWcpIHsKICAgICAgY29uZmlnLnRvZ2dsZSA9IEJvb2xlYW4oY29uZmlnLnRvZ2dsZSk7IC8vIENvZXJjZSBzdHJpbmcgdmFsdWVzCgogICAgICBjb25maWcucGFyZW50ID0gaW5kZXguZ2V0RWxlbWVudChjb25maWcucGFyZW50KTsKICAgICAgcmV0dXJuIGNvbmZpZzsKICAgIH0KCiAgICBfZ2V0RGltZW5zaW9uKCkgewogICAgICByZXR1cm4gdGhpcy5fZWxlbWVudC5jbGFzc0xpc3QuY29udGFpbnMoQ0xBU1NfTkFNRV9IT1JJWk9OVEFMKSA/IFdJRFRIIDogSEVJR0hUOwogICAgfQoKICAgIF9pbml0aWFsaXplQ2hpbGRyZW4oKSB7CiAgICAgIGlmICghdGhpcy5fY29uZmlnLnBhcmVudCkgewogICAgICAgIHJldHVybjsKICAgICAgfQoKICAgICAgY29uc3QgY2hpbGRyZW4gPSB0aGlzLl9nZXRGaXJzdExldmVsQ2hpbGRyZW4oU0VMRUNUT1JfREFUQV9UT0dHTEUpOwoKICAgICAgZm9yIChjb25zdCBlbGVtZW50IG9mIGNoaWxkcmVuKSB7CiAgICAgICAgY29uc3Qgc2VsZWN0ZWQgPSBpbmRleC5nZXRFbGVtZW50RnJvbVNlbGVjdG9yKGVsZW1lbnQpOwoKICAgICAgICBpZiAoc2VsZWN0ZWQpIHsKICAgICAgICAgIHRoaXMuX2FkZEFyaWFBbmRDb2xsYXBzZWRDbGFzcyhbZWxlbWVudF0sIHRoaXMuX2lzU2hvd24oc2VsZWN0ZWQpKTsKICAgICAgICB9CiAgICAgIH0KICAgIH0KCiAgICBfZ2V0Rmlyc3RMZXZlbENoaWxkcmVuKHNlbGVjdG9yKSB7CiAgICAgIGNvbnN0IGNoaWxkcmVuID0gU2VsZWN0b3JFbmdpbmVfX2RlZmF1bHQuZGVmYXVsdC5maW5kKENMQVNTX05BTUVfREVFUEVSX0NISUxEUkVOLCB0aGlzLl9jb25maWcucGFyZW50KTsgLy8gcmVtb3ZlIGNoaWxkcmVuIGlmIGdyZWF0ZXIgZGVwdGgKCiAgICAgIHJldHVybiBTZWxlY3RvckVuZ2luZV9fZGVmYXVsdC5kZWZhdWx0LmZpbmQoc2VsZWN0b3IsIHRoaXMuX2NvbmZpZy5wYXJlbnQpLmZpbHRlcihlbGVtZW50ID0+ICFjaGlsZHJlbi5pbmNsdWRlcyhlbGVtZW50KSk7CiAgICB9CgogICAgX2FkZEFyaWFBbmRDb2xsYXBzZWRDbGFzcyh0cmlnZ2VyQXJyYXksIGlzT3BlbikgewogICAgICBpZiAoIXRyaWdnZXJBcnJheS5sZW5ndGgpIHsKICAgICAgICByZXR1cm47CiAgICAgIH0KCiAgICAgIGZvciAoY29uc3QgZWxlbWVudCBvZiB0cmlnZ2VyQXJyYXkpIHsKICAgICAgICBlbGVtZW50LmNsYXNzTGlzdC50b2dnbGUoQ0xBU1NfTkFNRV9DT0xMQVBTRUQsICFpc09wZW4pOwogICAgICAgIGVsZW1lbnQuc2V0QXR0cmlidXRlKCdhcmlhLWV4cGFuZGVkJywgaXNPcGVuKTsKICAgICAgfQogICAgfSAvLyBTdGF0aWMKCgogICAgc3RhdGljIGpRdWVyeUludGVyZmFjZShjb25maWcpIHsKICAgICAgY29uc3QgX2NvbmZpZyA9IHt9OwoKICAgICAgaWYgKHR5cGVvZiBjb25maWcgPT09ICdzdHJpbmcnICYmIC9zaG93fGhpZGUvLnRlc3QoY29uZmlnKSkgewogICAgICAgIF9jb25maWcudG9nZ2xlID0gZmFsc2U7CiAgICAgIH0KCiAgICAgIHJldHVybiB0aGlzLmVhY2goZnVuY3Rpb24gKCkgewogICAgICAgIGNvbnN0IGRhdGEgPSBDb2xsYXBzZS5nZXRPckNyZWF0ZUluc3RhbmNlKHRoaXMsIF9jb25maWcpOwoKICAgICAgICBpZiAodHlwZW9mIGNvbmZpZyA9PT0gJ3N0cmluZycpIHsKICAgICAgICAgIGlmICh0eXBlb2YgZGF0YVtjb25maWddID09PSAndW5kZWZpbmVkJykgewogICAgICAgICAgICB0aHJvdyBuZXcgVHlwZUVycm9yKGBObyBtZXRob2QgbmFtZWQgIiR7Y29uZmlnfSJgKTsKICAgICAgICAgIH0KCiAgICAgICAgICBkYXRhW2NvbmZpZ10oKTsKICAgICAgICB9CiAgICAgIH0pOwogICAgfQoKICB9CiAgLyoqCiAgICogRGF0YSBBUEkgaW1wbGVtZW50YXRpb24KICAgKi8KCgogIEV2ZW50SGFuZGxlcl9fZGVmYXVsdC5kZWZhdWx0Lm9uKGRvY3VtZW50LCBFVkVOVF9DTElDS19EQVRBX0FQSSwgU0VMRUNUT1JfREFUQV9UT0dHTEUsIGZ1bmN0aW9uIChldmVudCkgewogICAgLy8gcHJldmVudERlZmF1bHQgb25seSBmb3IgPGE+IGVsZW1lbnRzICh3aGljaCBjaGFuZ2UgdGhlIFVSTCkgbm90IGluc2lkZSB0aGUgY29sbGFwc2libGUgZWxlbWVudAogICAgaWYgKGV2ZW50LnRhcmdldC50YWdOYW1lID09PSAnQScgfHwgZXZlbnQuZGVsZWdhdGVUYXJnZXQgJiYgZXZlbnQuZGVsZWdhdGVUYXJnZXQudGFnTmFtZSA9PT0gJ0EnKSB7CiAgICAgIGV2ZW50LnByZXZlbnREZWZhdWx0KCk7CiAgICB9CgogICAgY29uc3Qgc2VsZWN0b3IgPSBpbmRleC5nZXRTZWxlY3RvckZyb21FbGVtZW50KHRoaXMpOwogICAgY29uc3Qgc2VsZWN0b3JFbGVtZW50cyA9IFNlbGVjdG9yRW5naW5lX19kZWZhdWx0LmRlZmF1bHQuZmluZChzZWxlY3Rvcik7CgogICAgZm9yIChjb25zdCBlbGVtZW50IG9mIHNlbGVjdG9yRWxlbWVudHMpIHsKICAgICAgQ29sbGFwc2UuZ2V0T3JDcmVhdGVJbnN0YW5jZShlbGVtZW50LCB7CiAgICAgICAgdG9nZ2xlOiBmYWxzZQogICAgICB9KS50b2dnbGUoKTsKICAgIH0KICB9KTsKICAvKioKICAgKiBqUXVlcnkKICAgKi8KCiAgaW5kZXguZGVmaW5lSlF1ZXJ5UGx1Z2luKENvbGxhcHNlKTsKCiAgcmV0dXJuIENvbGxhcHNlOwoKfSkpOwovLyMgc291cmNlTWFwcGluZ1VSTD1jb2xsYXBzZS5qcy5tYXAKCgovKioqLyB9KSwKCi8qKiovICIuL25vZGVfbW9kdWxlcy9ib290c3RyYXAvanMvZGlzdC9kb20vZGF0YS5qcyI6Ci8qISoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiohKlwKICAhKioqIC4vbm9kZV9tb2R1bGVzL2Jvb3RzdHJhcC9qcy9kaXN0L2RvbS9kYXRhLmpzICoqKiEKICBcKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKi8KLyoqKi8gKGZ1bmN0aW9uKG1vZHVsZSkgewoKLyohCiAgKiBCb290c3RyYXAgZGF0YS5qcyB2NS4yLjMgKGh0dHBzOi8vZ2V0Ym9vdHN0cmFwLmNvbS8pCiAgKiBDb3B5cmlnaHQgMjAxMS0yMDIyIFRoZSBCb290c3RyYXAgQXV0aG9ycyAoaHR0cHM6Ly9naXRodWIuY29tL3R3YnMvYm9vdHN0cmFwL2dyYXBocy9jb250cmlidXRvcnMpCiAgKiBMaWNlbnNlZCB1bmRlciBNSVQgKGh0dHBzOi8vZ2l0aHViLmNvbS90d2JzL2Jvb3RzdHJhcC9ibG9iL21haW4vTElDRU5TRSkKICAqLwooZnVuY3Rpb24gKGdsb2JhbCwgZmFjdG9yeSkgewogICB0cnVlID8gbW9kdWxlLmV4cG9ydHMgPSBmYWN0b3J5KCkgOgogIDA7Cn0pKHRoaXMsIChmdW5jdGlvbiAoKSB7ICd1c2Ugc3RyaWN0JzsKCiAgLyoqCiAgICogLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0KICAgKiBCb290c3RyYXAgKHY1LjIuMyk6IGRvbS9kYXRhLmpzCiAgICogTGljZW5zZWQgdW5kZXIgTUlUIChodHRwczovL2dpdGh1Yi5jb20vdHdicy9ib290c3RyYXAvYmxvYi9tYWluL0xJQ0VOU0UpCiAgICogLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0KICAgKi8KCiAgLyoqCiAgICogQ29uc3RhbnRzCiAgICovCiAgY29uc3QgZWxlbWVudE1hcCA9IG5ldyBNYXAoKTsKICBjb25zdCBkYXRhID0gewogICAgc2V0KGVsZW1lbnQsIGtleSwgaW5zdGFuY2UpIHsKICAgICAgaWYgKCFlbGVtZW50TWFwLmhhcyhlbGVtZW50KSkgewogICAgICAgIGVsZW1lbnRNYXAuc2V0KGVsZW1lbnQsIG5ldyBNYXAoKSk7CiAgICAgIH0KCiAgICAgIGNvbnN0IGluc3RhbmNlTWFwID0gZWxlbWVudE1hcC5nZXQoZWxlbWVudCk7IC8vIG1ha2UgaXQgY2xlYXIgd2Ugb25seSB3YW50IG9uZSBpbnN0YW5jZSBwZXIgZWxlbWVudAogICAgICAvLyBjYW4gYmUgcmVtb3ZlZCBsYXRlciB3aGVuIG11bHRpcGxlIGtleS9pbnN0YW5jZXMgYXJlIGZpbmUgdG8gYmUgdXNlZAoKICAgICAgaWYgKCFpbnN0YW5jZU1hcC5oYXMoa2V5KSAmJiBpbnN0YW5jZU1hcC5zaXplICE9PSAwKSB7CiAgICAgICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIG5vLWNvbnNvbGUKICAgICAgICBjb25zb2xlLmVycm9yKGBCb290c3RyYXAgZG9lc24ndCBhbGxvdyBtb3JlIHRoYW4gb25lIGluc3RhbmNlIHBlciBlbGVtZW50LiBCb3VuZCBpbnN0YW5jZTogJHtBcnJheS5mcm9tKGluc3RhbmNlTWFwLmtleXMoKSlbMF19LmApOwogICAgICAgIHJldHVybjsKICAgICAgfQoKICAgICAgaW5zdGFuY2VNYXAuc2V0KGtleSwgaW5zdGFuY2UpOwogICAgfSwKCiAgICBnZXQoZWxlbWVudCwga2V5KSB7CiAgICAgIGlmIChlbGVtZW50TWFwLmhhcyhlbGVtZW50KSkgewogICAgICAgIHJldHVybiBlbGVtZW50TWFwLmdldChlbGVtZW50KS5nZXQoa2V5KSB8fCBudWxsOwogICAgICB9CgogICAgICByZXR1cm4gbnVsbDsKICAgIH0sCgogICAgcmVtb3ZlKGVsZW1lbnQsIGtleSkgewogICAgICBpZiAoIWVsZW1lbnRNYXAuaGFzKGVsZW1lbnQpKSB7CiAgICAgICAgcmV0dXJuOwogICAgICB9CgogICAgICBjb25zdCBpbnN0YW5jZU1hcCA9IGVsZW1lbnRNYXAuZ2V0KGVsZW1lbnQpOwogICAgICBpbnN0YW5jZU1hcC5kZWxldGUoa2V5KTsgLy8gZnJlZSB1cCBlbGVtZW50IHJlZmVyZW5jZXMgaWYgdGhlcmUgYXJlIG5vIGluc3RhbmNlcyBsZWZ0IGZvciBhbiBlbGVtZW50CgogICAgICBpZiAoaW5zdGFuY2VNYXAuc2l6ZSA9PT0gMCkgewogICAgICAgIGVsZW1lbnRNYXAuZGVsZXRlKGVsZW1lbnQpOwogICAgICB9CiAgICB9CgogIH07CgogIHJldHVybiBkYXRhOwoKfSkpOwovLyMgc291cmNlTWFwcGluZ1VSTD1kYXRhLmpzLm1hcAoKCi8qKiovIH0pLAoKLyoqKi8gIi4vbm9kZV9tb2R1bGVzL2Jvb3RzdHJhcC9qcy9kaXN0L2RvbS9ldmVudC1oYW5kbGVyLmpzIjoKLyohKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiEqXAogICEqKiogLi9ub2RlX21vZHVsZXMvYm9vdHN0cmFwL2pzL2Rpc3QvZG9tL2V2ZW50LWhhbmRsZXIuanMgKioqIQogIFwqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqLwovKioqLyAoZnVuY3Rpb24obW9kdWxlLCBfX3VudXNlZF93ZWJwYWNrX2V4cG9ydHMsIF9fd2VicGFja19yZXF1aXJlX18pIHsKCi8qIQogICogQm9vdHN0cmFwIGV2ZW50LWhhbmRsZXIuanMgdjUuMi4zIChodHRwczovL2dldGJvb3RzdHJhcC5jb20vKQogICogQ29weXJpZ2h0IDIwMTEtMjAyMiBUaGUgQm9vdHN0cmFwIEF1dGhvcnMgKGh0dHBzOi8vZ2l0aHViLmNvbS90d2JzL2Jvb3RzdHJhcC9ncmFwaHMvY29udHJpYnV0b3JzKQogICogTGljZW5zZWQgdW5kZXIgTUlUIChodHRwczovL2dpdGh1Yi5jb20vdHdicy9ib290c3RyYXAvYmxvYi9tYWluL0xJQ0VOU0UpCiAgKi8KKGZ1bmN0aW9uIChnbG9iYWwsIGZhY3RvcnkpIHsKICAgdHJ1ZSA/IG1vZHVsZS5leHBvcnRzID0gZmFjdG9yeShfX3dlYnBhY2tfcmVxdWlyZV9fKC8qISAuLi91dGlsL2luZGV4ICovICIuL25vZGVfbW9kdWxlcy9ib290c3RyYXAvanMvZGlzdC91dGlsL2luZGV4LmpzIikpIDoKICAwOwp9KSh0aGlzLCAoZnVuY3Rpb24gKGluZGV4KSB7ICd1c2Ugc3RyaWN0JzsKCiAgLyoqCiAgICogLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0KICAgKiBCb290c3RyYXAgKHY1LjIuMyk6IGRvbS9ldmVudC1oYW5kbGVyLmpzCiAgICogTGljZW5zZWQgdW5kZXIgTUlUIChodHRwczovL2dpdGh1Yi5jb20vdHdicy9ib290c3RyYXAvYmxvYi9tYWluL0xJQ0VOU0UpCiAgICogLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0KICAgKi8KICAvKioKICAgKiBDb25zdGFudHMKICAgKi8KCiAgY29uc3QgbmFtZXNwYWNlUmVnZXggPSAvW14uXSooPz1cLi4qKVwufC4qLzsKICBjb25zdCBzdHJpcE5hbWVSZWdleCA9IC9cLi4qLzsKICBjb25zdCBzdHJpcFVpZFJlZ2V4ID0gLzo6XGQrJC87CiAgY29uc3QgZXZlbnRSZWdpc3RyeSA9IHt9OyAvLyBFdmVudHMgc3RvcmFnZQoKICBsZXQgdWlkRXZlbnQgPSAxOwogIGNvbnN0IGN1c3RvbUV2ZW50cyA9IHsKICAgIG1vdXNlZW50ZXI6ICdtb3VzZW92ZXInLAogICAgbW91c2VsZWF2ZTogJ21vdXNlb3V0JwogIH07CiAgY29uc3QgbmF0aXZlRXZlbnRzID0gbmV3IFNldChbJ2NsaWNrJywgJ2RibGNsaWNrJywgJ21vdXNldXAnLCAnbW91c2Vkb3duJywgJ2NvbnRleHRtZW51JywgJ21vdXNld2hlZWwnLCAnRE9NTW91c2VTY3JvbGwnLCAnbW91c2VvdmVyJywgJ21vdXNlb3V0JywgJ21vdXNlbW92ZScsICdzZWxlY3RzdGFydCcsICdzZWxlY3RlbmQnLCAna2V5ZG93bicsICdrZXlwcmVzcycsICdrZXl1cCcsICdvcmllbnRhdGlvbmNoYW5nZScsICd0b3VjaHN0YXJ0JywgJ3RvdWNobW92ZScsICd0b3VjaGVuZCcsICd0b3VjaGNhbmNlbCcsICdwb2ludGVyZG93bicsICdwb2ludGVybW92ZScsICdwb2ludGVydXAnLCAncG9pbnRlcmxlYXZlJywgJ3BvaW50ZXJjYW5jZWwnLCAnZ2VzdHVyZXN0YXJ0JywgJ2dlc3R1cmVjaGFuZ2UnLCAnZ2VzdHVyZWVuZCcsICdmb2N1cycsICdibHVyJywgJ2NoYW5nZScsICdyZXNldCcsICdzZWxlY3QnLCAnc3VibWl0JywgJ2ZvY3VzaW4nLCAnZm9jdXNvdXQnLCAnbG9hZCcsICd1bmxvYWQnLCAnYmVmb3JldW5sb2FkJywgJ3Jlc2l6ZScsICdtb3ZlJywgJ0RPTUNvbnRlbnRMb2FkZWQnLCAncmVhZHlzdGF0ZWNoYW5nZScsICdlcnJvcicsICdhYm9ydCcsICdzY3JvbGwnXSk7CiAgLyoqCiAgICogUHJpdmF0ZSBtZXRob2RzCiAgICovCgogIGZ1bmN0aW9uIG1ha2VFdmVudFVpZChlbGVtZW50LCB1aWQpIHsKICAgIHJldHVybiB1aWQgJiYgYCR7dWlkfTo6JHt1aWRFdmVudCsrfWAgfHwgZWxlbWVudC51aWRFdmVudCB8fCB1aWRFdmVudCsrOwogIH0KCiAgZnVuY3Rpb24gZ2V0RWxlbWVudEV2ZW50cyhlbGVtZW50KSB7CiAgICBjb25zdCB1aWQgPSBtYWtlRXZlbnRVaWQoZWxlbWVudCk7CiAgICBlbGVtZW50LnVpZEV2ZW50ID0gdWlkOwogICAgZXZlbnRSZWdpc3RyeVt1aWRdID0gZXZlbnRSZWdpc3RyeVt1aWRdIHx8IHt9OwogICAgcmV0dXJuIGV2ZW50UmVnaXN0cnlbdWlkXTsKICB9CgogIGZ1bmN0aW9uIGJvb3RzdHJhcEhhbmRsZXIoZWxlbWVudCwgZm4pIHsKICAgIHJldHVybiBmdW5jdGlvbiBoYW5kbGVyKGV2ZW50KSB7CiAgICAgIGh5ZHJhdGVPYmooZXZlbnQsIHsKICAgICAgICBkZWxlZ2F0ZVRhcmdldDogZWxlbWVudAogICAgICB9KTsKCiAgICAgIGlmIChoYW5kbGVyLm9uZU9mZikgewogICAgICAgIEV2ZW50SGFuZGxlci5vZmYoZWxlbWVudCwgZXZlbnQudHlwZSwgZm4pOwogICAgICB9CgogICAgICByZXR1cm4gZm4uYXBwbHkoZWxlbWVudCwgW2V2ZW50XSk7CiAgICB9OwogIH0KCiAgZnVuY3Rpb24gYm9vdHN0cmFwRGVsZWdhdGlvbkhhbmRsZXIoZWxlbWVudCwgc2VsZWN0b3IsIGZuKSB7CiAgICByZXR1cm4gZnVuY3Rpb24gaGFuZGxlcihldmVudCkgewogICAgICBjb25zdCBkb21FbGVtZW50cyA9IGVsZW1lbnQucXVlcnlTZWxlY3RvckFsbChzZWxlY3Rvcik7CgogICAgICBmb3IgKGxldCB7CiAgICAgICAgdGFyZ2V0CiAgICAgIH0gPSBldmVudDsgdGFyZ2V0ICYmIHRhcmdldCAhPT0gdGhpczsgdGFyZ2V0ID0gdGFyZ2V0LnBhcmVudE5vZGUpIHsKICAgICAgICBmb3IgKGNvbnN0IGRvbUVsZW1lbnQgb2YgZG9tRWxlbWVudHMpIHsKICAgICAgICAgIGlmIChkb21FbGVtZW50ICE9PSB0YXJnZXQpIHsKICAgICAgICAgICAgY29udGludWU7CiAgICAgICAgICB9CgogICAgICAgICAgaHlkcmF0ZU9iaihldmVudCwgewogICAgICAgICAgICBkZWxlZ2F0ZVRhcmdldDogdGFyZ2V0CiAgICAgICAgICB9KTsKCiAgICAgICAgICBpZiAoaGFuZGxlci5vbmVPZmYpIHsKICAgICAgICAgICAgRXZlbnRIYW5kbGVyLm9mZihlbGVtZW50LCBldmVudC50eXBlLCBzZWxlY3RvciwgZm4pOwogICAgICAgICAgfQoKICAgICAgICAgIHJldHVybiBmbi5hcHBseSh0YXJnZXQsIFtldmVudF0pOwogICAgICAgIH0KICAgICAgfQogICAgfTsKICB9CgogIGZ1bmN0aW9uIGZpbmRIYW5kbGVyKGV2ZW50cywgY2FsbGFibGUsIGRlbGVnYXRpb25TZWxlY3RvciA9IG51bGwpIHsKICAgIHJldHVybiBPYmplY3QudmFsdWVzKGV2ZW50cykuZmluZChldmVudCA9PiBldmVudC5jYWxsYWJsZSA9PT0gY2FsbGFibGUgJiYgZXZlbnQuZGVsZWdhdGlvblNlbGVjdG9yID09PSBkZWxlZ2F0aW9uU2VsZWN0b3IpOwogIH0KCiAgZnVuY3Rpb24gbm9ybWFsaXplUGFyYW1ldGVycyhvcmlnaW5hbFR5cGVFdmVudCwgaGFuZGxlciwgZGVsZWdhdGlvbkZ1bmN0aW9uKSB7CiAgICBjb25zdCBpc0RlbGVnYXRlZCA9IHR5cGVvZiBoYW5kbGVyID09PSAnc3RyaW5nJzsgLy8gdG9kbzogdG9vbHRpcCBwYXNzZXMgYGZhbHNlYCBpbnN0ZWFkIG9mIHNlbGVjdG9yLCBzbyB3ZSBuZWVkIHRvIGNoZWNrCgogICAgY29uc3QgY2FsbGFibGUgPSBpc0RlbGVnYXRlZCA/IGRlbGVnYXRpb25GdW5jdGlvbiA6IGhhbmRsZXIgfHwgZGVsZWdhdGlvbkZ1bmN0aW9uOwogICAgbGV0IHR5cGVFdmVudCA9IGdldFR5cGVFdmVudChvcmlnaW5hbFR5cGVFdmVudCk7CgogICAgaWYgKCFuYXRpdmVFdmVudHMuaGFzKHR5cGVFdmVudCkpIHsKICAgICAgdHlwZUV2ZW50ID0gb3JpZ2luYWxUeXBlRXZlbnQ7CiAgICB9CgogICAgcmV0dXJuIFtpc0RlbGVnYXRlZCwgY2FsbGFibGUsIHR5cGVFdmVudF07CiAgfQoKICBmdW5jdGlvbiBhZGRIYW5kbGVyKGVsZW1lbnQsIG9yaWdpbmFsVHlwZUV2ZW50LCBoYW5kbGVyLCBkZWxlZ2F0aW9uRnVuY3Rpb24sIG9uZU9mZikgewogICAgaWYgKHR5cGVvZiBvcmlnaW5hbFR5cGVFdmVudCAhPT0gJ3N0cmluZycgfHwgIWVsZW1lbnQpIHsKICAgICAgcmV0dXJuOwogICAgfQoKICAgIGxldCBbaXNEZWxlZ2F0ZWQsIGNhbGxhYmxlLCB0eXBlRXZlbnRdID0gbm9ybWFsaXplUGFyYW1ldGVycyhvcmlnaW5hbFR5cGVFdmVudCwgaGFuZGxlciwgZGVsZWdhdGlvbkZ1bmN0aW9uKTsgLy8gaW4gY2FzZSBvZiBtb3VzZWVudGVyIG9yIG1vdXNlbGVhdmUgd3JhcCB0aGUgaGFuZGxlciB3aXRoaW4gYSBmdW5jdGlvbiB0aGF0IGNoZWNrcyBmb3IgaXRzIERPTSBwb3NpdGlvbgogICAgLy8gdGhpcyBwcmV2ZW50cyB0aGUgaGFuZGxlciBmcm9tIGJlaW5nIGRpc3BhdGNoZWQgdGhlIHNhbWUgd2F5IGFzIG1vdXNlb3ZlciBvciBtb3VzZW91dCBkb2VzCgogICAgaWYgKG9yaWdpbmFsVHlwZUV2ZW50IGluIGN1c3RvbUV2ZW50cykgewogICAgICBjb25zdCB3cmFwRnVuY3Rpb24gPSBmbiA9PiB7CiAgICAgICAgcmV0dXJuIGZ1bmN0aW9uIChldmVudCkgewogICAgICAgICAgaWYgKCFldmVudC5yZWxhdGVkVGFyZ2V0IHx8IGV2ZW50LnJlbGF0ZWRUYXJnZXQgIT09IGV2ZW50LmRlbGVnYXRlVGFyZ2V0ICYmICFldmVudC5kZWxlZ2F0ZVRhcmdldC5jb250YWlucyhldmVudC5yZWxhdGVkVGFyZ2V0KSkgewogICAgICAgICAgICByZXR1cm4gZm4uY2FsbCh0aGlzLCBldmVudCk7CiAgICAgICAgICB9CiAgICAgICAgfTsKICAgICAgfTsKCiAgICAgIGNhbGxhYmxlID0gd3JhcEZ1bmN0aW9uKGNhbGxhYmxlKTsKICAgIH0KCiAgICBjb25zdCBldmVudHMgPSBnZXRFbGVtZW50RXZlbnRzKGVsZW1lbnQpOwogICAgY29uc3QgaGFuZGxlcnMgPSBldmVudHNbdHlwZUV2ZW50XSB8fCAoZXZlbnRzW3R5cGVFdmVudF0gPSB7fSk7CiAgICBjb25zdCBwcmV2aW91c0Z1bmN0aW9uID0gZmluZEhhbmRsZXIoaGFuZGxlcnMsIGNhbGxhYmxlLCBpc0RlbGVnYXRlZCA/IGhhbmRsZXIgOiBudWxsKTsKCiAgICBpZiAocHJldmlvdXNGdW5jdGlvbikgewogICAgICBwcmV2aW91c0Z1bmN0aW9uLm9uZU9mZiA9IHByZXZpb3VzRnVuY3Rpb24ub25lT2ZmICYmIG9uZU9mZjsKICAgICAgcmV0dXJuOwogICAgfQoKICAgIGNvbnN0IHVpZCA9IG1ha2VFdmVudFVpZChjYWxsYWJsZSwgb3JpZ2luYWxUeXBlRXZlbnQucmVwbGFjZShuYW1lc3BhY2VSZWdleCwgJycpKTsKICAgIGNvbnN0IGZuID0gaXNEZWxlZ2F0ZWQgPyBib290c3RyYXBEZWxlZ2F0aW9uSGFuZGxlcihlbGVtZW50LCBoYW5kbGVyLCBjYWxsYWJsZSkgOiBib290c3RyYXBIYW5kbGVyKGVsZW1lbnQsIGNhbGxhYmxlKTsKICAgIGZuLmRlbGVnYXRpb25TZWxlY3RvciA9IGlzRGVsZWdhdGVkID8gaGFuZGxlciA6IG51bGw7CiAgICBmbi5jYWxsYWJsZSA9IGNhbGxhYmxlOwogICAgZm4ub25lT2ZmID0gb25lT2ZmOwogICAgZm4udWlkRXZlbnQgPSB1aWQ7CiAgICBoYW5kbGVyc1t1aWRdID0gZm47CiAgICBlbGVtZW50LmFkZEV2ZW50TGlzdGVuZXIodHlwZUV2ZW50LCBmbiwgaXNEZWxlZ2F0ZWQpOwogIH0KCiAgZnVuY3Rpb24gcmVtb3ZlSGFuZGxlcihlbGVtZW50LCBldmVudHMsIHR5cGVFdmVudCwgaGFuZGxlciwgZGVsZWdhdGlvblNlbGVjdG9yKSB7CiAgICBjb25zdCBmbiA9IGZpbmRIYW5kbGVyKGV2ZW50c1t0eXBlRXZlbnRdLCBoYW5kbGVyLCBkZWxlZ2F0aW9uU2VsZWN0b3IpOwoKICAgIGlmICghZm4pIHsKICAgICAgcmV0dXJuOwogICAgfQoKICAgIGVsZW1lbnQucmVtb3ZlRXZlbnRMaXN0ZW5lcih0eXBlRXZlbnQsIGZuLCBCb29sZWFuKGRlbGVnYXRpb25TZWxlY3RvcikpOwogICAgZGVsZXRlIGV2ZW50c1t0eXBlRXZlbnRdW2ZuLnVpZEV2ZW50XTsKICB9CgogIGZ1bmN0aW9uIHJlbW92ZU5hbWVzcGFjZWRIYW5kbGVycyhlbGVtZW50LCBldmVudHMsIHR5cGVFdmVudCwgbmFtZXNwYWNlKSB7CiAgICBjb25zdCBzdG9yZUVsZW1lbnRFdmVudCA9IGV2ZW50c1t0eXBlRXZlbnRdIHx8IHt9OwoKICAgIGZvciAoY29uc3QgaGFuZGxlcktleSBvZiBPYmplY3Qua2V5cyhzdG9yZUVsZW1lbnRFdmVudCkpIHsKICAgICAgaWYgKGhhbmRsZXJLZXkuaW5jbHVkZXMobmFtZXNwYWNlKSkgewogICAgICAgIGNvbnN0IGV2ZW50ID0gc3RvcmVFbGVtZW50RXZlbnRbaGFuZGxlcktleV07CiAgICAgICAgcmVtb3ZlSGFuZGxlcihlbGVtZW50LCBldmVudHMsIHR5cGVFdmVudCwgZXZlbnQuY2FsbGFibGUsIGV2ZW50LmRlbGVnYXRpb25TZWxlY3Rvcik7CiAgICAgIH0KICAgIH0KICB9CgogIGZ1bmN0aW9uIGdldFR5cGVFdmVudChldmVudCkgewogICAgLy8gYWxsb3cgdG8gZ2V0IHRoZSBuYXRpdmUgZXZlbnRzIGZyb20gbmFtZXNwYWNlZCBldmVudHMgKCdjbGljay5icy5idXR0b24nIC0tPiAnY2xpY2snKQogICAgZXZlbnQgPSBldmVudC5yZXBsYWNlKHN0cmlwTmFtZVJlZ2V4LCAnJyk7CiAgICByZXR1cm4gY3VzdG9tRXZlbnRzW2V2ZW50XSB8fCBldmVudDsKICB9CgogIGNvbnN0IEV2ZW50SGFuZGxlciA9IHsKICAgIG9uKGVsZW1lbnQsIGV2ZW50LCBoYW5kbGVyLCBkZWxlZ2F0aW9uRnVuY3Rpb24pIHsKICAgICAgYWRkSGFuZGxlcihlbGVtZW50LCBldmVudCwgaGFuZGxlciwgZGVsZWdhdGlvbkZ1bmN0aW9uLCBmYWxzZSk7CiAgICB9LAoKICAgIG9uZShlbGVtZW50LCBldmVudCwgaGFuZGxlciwgZGVsZWdhdGlvbkZ1bmN0aW9uKSB7CiAgICAgIGFkZEhhbmRsZXIoZWxlbWVudCwgZXZlbnQsIGhhbmRsZXIsIGRlbGVnYXRpb25GdW5jdGlvbiwgdHJ1ZSk7CiAgICB9LAoKICAgIG9mZihlbGVtZW50LCBvcmlnaW5hbFR5cGVFdmVudCwgaGFuZGxlciwgZGVsZWdhdGlvbkZ1bmN0aW9uKSB7CiAgICAgIGlmICh0eXBlb2Ygb3JpZ2luYWxUeXBlRXZlbnQgIT09ICdzdHJpbmcnIHx8ICFlbGVtZW50KSB7CiAgICAgICAgcmV0dXJuOwogICAgICB9CgogICAgICBjb25zdCBbaXNEZWxlZ2F0ZWQsIGNhbGxhYmxlLCB0eXBlRXZlbnRdID0gbm9ybWFsaXplUGFyYW1ldGVycyhvcmlnaW5hbFR5cGVFdmVudCwgaGFuZGxlciwgZGVsZWdhdGlvbkZ1bmN0aW9uKTsKICAgICAgY29uc3QgaW5OYW1lc3BhY2UgPSB0eXBlRXZlbnQgIT09IG9yaWdpbmFsVHlwZUV2ZW50OwogICAgICBjb25zdCBldmVudHMgPSBnZXRFbGVtZW50RXZlbnRzKGVsZW1lbnQpOwogICAgICBjb25zdCBzdG9yZUVsZW1lbnRFdmVudCA9IGV2ZW50c1t0eXBlRXZlbnRdIHx8IHt9OwogICAgICBjb25zdCBpc05hbWVzcGFjZSA9IG9yaWdpbmFsVHlwZUV2ZW50LnN0YXJ0c1dpdGgoJy4nKTsKCiAgICAgIGlmICh0eXBlb2YgY2FsbGFibGUgIT09ICd1bmRlZmluZWQnKSB7CiAgICAgICAgLy8gU2ltcGxlc3QgY2FzZTogaGFuZGxlciBpcyBwYXNzZWQsIHJlbW92ZSB0aGF0IGxpc3RlbmVyIE9OTFkuCiAgICAgICAgaWYgKCFPYmplY3Qua2V5cyhzdG9yZUVsZW1lbnRFdmVudCkubGVuZ3RoKSB7CiAgICAgICAgICByZXR1cm47CiAgICAgICAgfQoKICAgICAgICByZW1vdmVIYW5kbGVyKGVsZW1lbnQsIGV2ZW50cywgdHlwZUV2ZW50LCBjYWxsYWJsZSwgaXNEZWxlZ2F0ZWQgPyBoYW5kbGVyIDogbnVsbCk7CiAgICAgICAgcmV0dXJuOwogICAgICB9CgogICAgICBpZiAoaXNOYW1lc3BhY2UpIHsKICAgICAgICBmb3IgKGNvbnN0IGVsZW1lbnRFdmVudCBvZiBPYmplY3Qua2V5cyhldmVudHMpKSB7CiAgICAgICAgICByZW1vdmVOYW1lc3BhY2VkSGFuZGxlcnMoZWxlbWVudCwgZXZlbnRzLCBlbGVtZW50RXZlbnQsIG9yaWdpbmFsVHlwZUV2ZW50LnNsaWNlKDEpKTsKICAgICAgICB9CiAgICAgIH0KCiAgICAgIGZvciAoY29uc3Qga2V5SGFuZGxlcnMgb2YgT2JqZWN0LmtleXMoc3RvcmVFbGVtZW50RXZlbnQpKSB7CiAgICAgICAgY29uc3QgaGFuZGxlcktleSA9IGtleUhhbmRsZXJzLnJlcGxhY2Uoc3RyaXBVaWRSZWdleCwgJycpOwoKICAgICAgICBpZiAoIWluTmFtZXNwYWNlIHx8IG9yaWdpbmFsVHlwZUV2ZW50LmluY2x1ZGVzKGhhbmRsZXJLZXkpKSB7CiAgICAgICAgICBjb25zdCBldmVudCA9IHN0b3JlRWxlbWVudEV2ZW50W2tleUhhbmRsZXJzXTsKICAgICAgICAgIHJlbW92ZUhhbmRsZXIoZWxlbWVudCwgZXZlbnRzLCB0eXBlRXZlbnQsIGV2ZW50LmNhbGxhYmxlLCBldmVudC5kZWxlZ2F0aW9uU2VsZWN0b3IpOwogICAgICAgIH0KICAgICAgfQogICAgfSwKCiAgICB0cmlnZ2VyKGVsZW1lbnQsIGV2ZW50LCBhcmdzKSB7CiAgICAgIGlmICh0eXBlb2YgZXZlbnQgIT09ICdzdHJpbmcnIHx8ICFlbGVtZW50KSB7CiAgICAgICAgcmV0dXJuIG51bGw7CiAgICAgIH0KCiAgICAgIGNvbnN0ICQgPSBpbmRleC5nZXRqUXVlcnkoKTsKICAgICAgY29uc3QgdHlwZUV2ZW50ID0gZ2V0VHlwZUV2ZW50KGV2ZW50KTsKICAgICAgY29uc3QgaW5OYW1lc3BhY2UgPSBldmVudCAhPT0gdHlwZUV2ZW50OwogICAgICBsZXQgalF1ZXJ5RXZlbnQgPSBudWxsOwogICAgICBsZXQgYnViYmxlcyA9IHRydWU7CiAgICAgIGxldCBuYXRpdmVEaXNwYXRjaCA9IHRydWU7CiAgICAgIGxldCBkZWZhdWx0UHJldmVudGVkID0gZmFsc2U7CgogICAgICBpZiAoaW5OYW1lc3BhY2UgJiYgJCkgewogICAgICAgIGpRdWVyeUV2ZW50ID0gJC5FdmVudChldmVudCwgYXJncyk7CiAgICAgICAgJChlbGVtZW50KS50cmlnZ2VyKGpRdWVyeUV2ZW50KTsKICAgICAgICBidWJibGVzID0gIWpRdWVyeUV2ZW50LmlzUHJvcGFnYXRpb25TdG9wcGVkKCk7CiAgICAgICAgbmF0aXZlRGlzcGF0Y2ggPSAhalF1ZXJ5RXZlbnQuaXNJbW1lZGlhdGVQcm9wYWdhdGlvblN0b3BwZWQoKTsKICAgICAgICBkZWZhdWx0UHJldmVudGVkID0galF1ZXJ5RXZlbnQuaXNEZWZhdWx0UHJldmVudGVkKCk7CiAgICAgIH0KCiAgICAgIGxldCBldnQgPSBuZXcgRXZlbnQoZXZlbnQsIHsKICAgICAgICBidWJibGVzLAogICAgICAgIGNhbmNlbGFibGU6IHRydWUKICAgICAgfSk7CiAgICAgIGV2dCA9IGh5ZHJhdGVPYmooZXZ0LCBhcmdzKTsKCiAgICAgIGlmIChkZWZhdWx0UHJldmVudGVkKSB7CiAgICAgICAgZXZ0LnByZXZlbnREZWZhdWx0KCk7CiAgICAgIH0KCiAgICAgIGlmIChuYXRpdmVEaXNwYXRjaCkgewogICAgICAgIGVsZW1lbnQuZGlzcGF0Y2hFdmVudChldnQpOwogICAgICB9CgogICAgICBpZiAoZXZ0LmRlZmF1bHRQcmV2ZW50ZWQgJiYgalF1ZXJ5RXZlbnQpIHsKICAgICAgICBqUXVlcnlFdmVudC5wcmV2ZW50RGVmYXVsdCgpOwogICAgICB9CgogICAgICByZXR1cm4gZXZ0OwogICAgfQoKICB9OwoKICBmdW5jdGlvbiBoeWRyYXRlT2JqKG9iaiwgbWV0YSkgewogICAgZm9yIChjb25zdCBba2V5LCB2YWx1ZV0gb2YgT2JqZWN0LmVudHJpZXMobWV0YSB8fCB7fSkpIHsKICAgICAgdHJ5IHsKICAgICAgICBvYmpba2V5XSA9IHZhbHVlOwogICAgICB9IGNhdGNoIChfdW51c2VkKSB7CiAgICAgICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KG9iaiwga2V5LCB7CiAgICAgICAgICBjb25maWd1cmFibGU6IHRydWUsCgogICAgICAgICAgZ2V0KCkgewogICAgICAgICAgICByZXR1cm4gdmFsdWU7CiAgICAgICAgICB9CgogICAgICAgIH0pOwogICAgICB9CiAgICB9CgogICAgcmV0dXJuIG9iajsKICB9CgogIHJldHVybiBFdmVudEhhbmRsZXI7Cgp9KSk7Ci8vIyBzb3VyY2VNYXBwaW5nVVJMPWV2ZW50LWhhbmRsZXIuanMubWFwCgoKLyoqKi8gfSksCgovKioqLyAiLi9ub2RlX21vZHVsZXMvYm9vdHN0cmFwL2pzL2Rpc3QvZG9tL21hbmlwdWxhdG9yLmpzIjoKLyohKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiohKlwKICAhKioqIC4vbm9kZV9tb2R1bGVzL2Jvb3RzdHJhcC9qcy9kaXN0L2RvbS9tYW5pcHVsYXRvci5qcyAqKiohCiAgXCoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqLwovKioqLyAoZnVuY3Rpb24obW9kdWxlKSB7CgovKiEKICAqIEJvb3RzdHJhcCBtYW5pcHVsYXRvci5qcyB2NS4yLjMgKGh0dHBzOi8vZ2V0Ym9vdHN0cmFwLmNvbS8pCiAgKiBDb3B5cmlnaHQgMjAxMS0yMDIyIFRoZSBCb290c3RyYXAgQXV0aG9ycyAoaHR0cHM6Ly9naXRodWIuY29tL3R3YnMvYm9vdHN0cmFwL2dyYXBocy9jb250cmlidXRvcnMpCiAgKiBMaWNlbnNlZCB1bmRlciBNSVQgKGh0dHBzOi8vZ2l0aHViLmNvbS90d2JzL2Jvb3RzdHJhcC9ibG9iL21haW4vTElDRU5TRSkKICAqLwooZnVuY3Rpb24gKGdsb2JhbCwgZmFjdG9yeSkgewogICB0cnVlID8gbW9kdWxlLmV4cG9ydHMgPSBmYWN0b3J5KCkgOgogIDA7Cn0pKHRoaXMsIChmdW5jdGlvbiAoKSB7ICd1c2Ugc3RyaWN0JzsKCiAgLyoqCiAgICogLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0KICAgKiBCb290c3RyYXAgKHY1LjIuMyk6IGRvbS9tYW5pcHVsYXRvci5qcwogICAqIExpY2Vuc2VkIHVuZGVyIE1JVCAoaHR0cHM6Ly9naXRodWIuY29tL3R3YnMvYm9vdHN0cmFwL2Jsb2IvbWFpbi9MSUNFTlNFKQogICAqIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tCiAgICovCiAgZnVuY3Rpb24gbm9ybWFsaXplRGF0YSh2YWx1ZSkgewogICAgaWYgKHZhbHVlID09PSAndHJ1ZScpIHsKICAgICAgcmV0dXJuIHRydWU7CiAgICB9CgogICAgaWYgKHZhbHVlID09PSAnZmFsc2UnKSB7CiAgICAgIHJldHVybiBmYWxzZTsKICAgIH0KCiAgICBpZiAodmFsdWUgPT09IE51bWJlcih2YWx1ZSkudG9TdHJpbmcoKSkgewogICAgICByZXR1cm4gTnVtYmVyKHZhbHVlKTsKICAgIH0KCiAgICBpZiAodmFsdWUgPT09ICcnIHx8IHZhbHVlID09PSAnbnVsbCcpIHsKICAgICAgcmV0dXJuIG51bGw7CiAgICB9CgogICAgaWYgKHR5cGVvZiB2YWx1ZSAhPT0gJ3N0cmluZycpIHsKICAgICAgcmV0dXJuIHZhbHVlOwogICAgfQoKICAgIHRyeSB7CiAgICAgIHJldHVybiBKU09OLnBhcnNlKGRlY29kZVVSSUNvbXBvbmVudCh2YWx1ZSkpOwogICAgfSBjYXRjaCAoX3VudXNlZCkgewogICAgICByZXR1cm4gdmFsdWU7CiAgICB9CiAgfQoKICBmdW5jdGlvbiBub3JtYWxpemVEYXRhS2V5KGtleSkgewogICAgcmV0dXJuIGtleS5yZXBsYWNlKC9bQS1aXS9nLCBjaHIgPT4gYC0ke2Noci50b0xvd2VyQ2FzZSgpfWApOwogIH0KCiAgY29uc3QgTWFuaXB1bGF0b3IgPSB7CiAgICBzZXREYXRhQXR0cmlidXRlKGVsZW1lbnQsIGtleSwgdmFsdWUpIHsKICAgICAgZWxlbWVudC5zZXRBdHRyaWJ1dGUoYGRhdGEtYnMtJHtub3JtYWxpemVEYXRhS2V5KGtleSl9YCwgdmFsdWUpOwogICAgfSwKCiAgICByZW1vdmVEYXRhQXR0cmlidXRlKGVsZW1lbnQsIGtleSkgewogICAgICBlbGVtZW50LnJlbW92ZUF0dHJpYnV0ZShgZGF0YS1icy0ke25vcm1hbGl6ZURhdGFLZXkoa2V5KX1gKTsKICAgIH0sCgogICAgZ2V0RGF0YUF0dHJpYnV0ZXMoZWxlbWVudCkgewogICAgICBpZiAoIWVsZW1lbnQpIHsKICAgICAgICByZXR1cm4ge307CiAgICAgIH0KCiAgICAgIGNvbnN0IGF0dHJpYnV0ZXMgPSB7fTsKICAgICAgY29uc3QgYnNLZXlzID0gT2JqZWN0LmtleXMoZWxlbWVudC5kYXRhc2V0KS5maWx0ZXIoa2V5ID0+IGtleS5zdGFydHNXaXRoKCdicycpICYmICFrZXkuc3RhcnRzV2l0aCgnYnNDb25maWcnKSk7CgogICAgICBmb3IgKGNvbnN0IGtleSBvZiBic0tleXMpIHsKICAgICAgICBsZXQgcHVyZUtleSA9IGtleS5yZXBsYWNlKC9eYnMvLCAnJyk7CiAgICAgICAgcHVyZUtleSA9IHB1cmVLZXkuY2hhckF0KDApLnRvTG93ZXJDYXNlKCkgKyBwdXJlS2V5LnNsaWNlKDEsIHB1cmVLZXkubGVuZ3RoKTsKICAgICAgICBhdHRyaWJ1dGVzW3B1cmVLZXldID0gbm9ybWFsaXplRGF0YShlbGVtZW50LmRhdGFzZXRba2V5XSk7CiAgICAgIH0KCiAgICAgIHJldHVybiBhdHRyaWJ1dGVzOwogICAgfSwKCiAgICBnZXREYXRhQXR0cmlidXRlKGVsZW1lbnQsIGtleSkgewogICAgICByZXR1cm4gbm9ybWFsaXplRGF0YShlbGVtZW50LmdldEF0dHJpYnV0ZShgZGF0YS1icy0ke25vcm1hbGl6ZURhdGFLZXkoa2V5KX1gKSk7CiAgICB9CgogIH07CgogIHJldHVybiBNYW5pcHVsYXRvcjsKCn0pKTsKLy8jIHNvdXJjZU1hcHBpbmdVUkw9bWFuaXB1bGF0b3IuanMubWFwCgoKLyoqKi8gfSksCgovKioqLyAiLi9ub2RlX21vZHVsZXMvYm9vdHN0cmFwL2pzL2Rpc3QvZG9tL3NlbGVjdG9yLWVuZ2luZS5qcyI6Ci8qISoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiEqXAogICEqKiogLi9ub2RlX21vZHVsZXMvYm9vdHN0cmFwL2pzL2Rpc3QvZG9tL3NlbGVjdG9yLWVuZ2luZS5qcyAqKiohCiAgXCoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKi8KLyoqKi8gKGZ1bmN0aW9uKG1vZHVsZSwgX191bnVzZWRfd2VicGFja19leHBvcnRzLCBfX3dlYnBhY2tfcmVxdWlyZV9fKSB7CgovKiEKICAqIEJvb3RzdHJhcCBzZWxlY3Rvci1lbmdpbmUuanMgdjUuMi4zIChodHRwczovL2dldGJvb3RzdHJhcC5jb20vKQogICogQ29weXJpZ2h0IDIwMTEtMjAyMiBUaGUgQm9vdHN0cmFwIEF1dGhvcnMgKGh0dHBzOi8vZ2l0aHViLmNvbS90d2JzL2Jvb3RzdHJhcC9ncmFwaHMvY29udHJpYnV0b3JzKQogICogTGljZW5zZWQgdW5kZXIgTUlUIChodHRwczovL2dpdGh1Yi5jb20vdHdicy9ib290c3RyYXAvYmxvYi9tYWluL0xJQ0VOU0UpCiAgKi8KKGZ1bmN0aW9uIChnbG9iYWwsIGZhY3RvcnkpIHsKICAgdHJ1ZSA/IG1vZHVsZS5leHBvcnRzID0gZmFjdG9yeShfX3dlYnBhY2tfcmVxdWlyZV9fKC8qISAuLi91dGlsL2luZGV4ICovICIuL25vZGVfbW9kdWxlcy9ib290c3RyYXAvanMvZGlzdC91dGlsL2luZGV4LmpzIikpIDoKICAwOwp9KSh0aGlzLCAoZnVuY3Rpb24gKGluZGV4KSB7ICd1c2Ugc3RyaWN0JzsKCiAgLyoqCiAgICogLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0KICAgKiBCb290c3RyYXAgKHY1LjIuMyk6IGRvbS9zZWxlY3Rvci1lbmdpbmUuanMKICAgKiBMaWNlbnNlZCB1bmRlciBNSVQgKGh0dHBzOi8vZ2l0aHViLmNvbS90d2JzL2Jvb3RzdHJhcC9ibG9iL21haW4vTElDRU5TRSkKICAgKiAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLQogICAqLwogIC8qKgogICAqIENvbnN0YW50cwogICAqLwoKICBjb25zdCBTZWxlY3RvckVuZ2luZSA9IHsKICAgIGZpbmQoc2VsZWN0b3IsIGVsZW1lbnQgPSBkb2N1bWVudC5kb2N1bWVudEVsZW1lbnQpIHsKICAgICAgcmV0dXJuIFtdLmNvbmNhdCguLi5FbGVtZW50LnByb3RvdHlwZS5xdWVyeVNlbGVjdG9yQWxsLmNhbGwoZWxlbWVudCwgc2VsZWN0b3IpKTsKICAgIH0sCgogICAgZmluZE9uZShzZWxlY3RvciwgZWxlbWVudCA9IGRvY3VtZW50LmRvY3VtZW50RWxlbWVudCkgewogICAgICByZXR1cm4gRWxlbWVudC5wcm90b3R5cGUucXVlcnlTZWxlY3Rvci5jYWxsKGVsZW1lbnQsIHNlbGVjdG9yKTsKICAgIH0sCgogICAgY2hpbGRyZW4oZWxlbWVudCwgc2VsZWN0b3IpIHsKICAgICAgcmV0dXJuIFtdLmNvbmNhdCguLi5lbGVtZW50LmNoaWxkcmVuKS5maWx0ZXIoY2hpbGQgPT4gY2hpbGQubWF0Y2hlcyhzZWxlY3RvcikpOwogICAgfSwKCiAgICBwYXJlbnRzKGVsZW1lbnQsIHNlbGVjdG9yKSB7CiAgICAgIGNvbnN0IHBhcmVudHMgPSBbXTsKICAgICAgbGV0IGFuY2VzdG9yID0gZWxlbWVudC5wYXJlbnROb2RlLmNsb3Nlc3Qoc2VsZWN0b3IpOwoKICAgICAgd2hpbGUgKGFuY2VzdG9yKSB7CiAgICAgICAgcGFyZW50cy5wdXNoKGFuY2VzdG9yKTsKICAgICAgICBhbmNlc3RvciA9IGFuY2VzdG9yLnBhcmVudE5vZGUuY2xvc2VzdChzZWxlY3Rvcik7CiAgICAgIH0KCiAgICAgIHJldHVybiBwYXJlbnRzOwogICAgfSwKCiAgICBwcmV2KGVsZW1lbnQsIHNlbGVjdG9yKSB7CiAgICAgIGxldCBwcmV2aW91cyA9IGVsZW1lbnQucHJldmlvdXNFbGVtZW50U2libGluZzsKCiAgICAgIHdoaWxlIChwcmV2aW91cykgewogICAgICAgIGlmIChwcmV2aW91cy5tYXRjaGVzKHNlbGVjdG9yKSkgewogICAgICAgICAgcmV0dXJuIFtwcmV2aW91c107CiAgICAgICAgfQoKICAgICAgICBwcmV2aW91cyA9IHByZXZpb3VzLnByZXZpb3VzRWxlbWVudFNpYmxpbmc7CiAgICAgIH0KCiAgICAgIHJldHVybiBbXTsKICAgIH0sCgogICAgLy8gVE9ETzogdGhpcyBpcyBub3cgdW51c2VkOyByZW1vdmUgbGF0ZXIgYWxvbmcgd2l0aCBwcmV2KCkKICAgIG5leHQoZWxlbWVudCwgc2VsZWN0b3IpIHsKICAgICAgbGV0IG5leHQgPSBlbGVtZW50Lm5leHRFbGVtZW50U2libGluZzsKCiAgICAgIHdoaWxlIChuZXh0KSB7CiAgICAgICAgaWYgKG5leHQubWF0Y2hlcyhzZWxlY3RvcikpIHsKICAgICAgICAgIHJldHVybiBbbmV4dF07CiAgICAgICAgfQoKICAgICAgICBuZXh0ID0gbmV4dC5uZXh0RWxlbWVudFNpYmxpbmc7CiAgICAgIH0KCiAgICAgIHJldHVybiBbXTsKICAgIH0sCgogICAgZm9jdXNhYmxlQ2hpbGRyZW4oZWxlbWVudCkgewogICAgICBjb25zdCBmb2N1c2FibGVzID0gWydhJywgJ2J1dHRvbicsICdpbnB1dCcsICd0ZXh0YXJlYScsICdzZWxlY3QnLCAnZGV0YWlscycsICdbdGFiaW5kZXhdJywgJ1tjb250ZW50ZWRpdGFibGU9InRydWUiXSddLm1hcChzZWxlY3RvciA9PiBgJHtzZWxlY3Rvcn06bm90KFt0YWJpbmRleF49Ii0iXSlgKS5qb2luKCcsJyk7CiAgICAgIHJldHVybiB0aGlzLmZpbmQoZm9jdXNhYmxlcywgZWxlbWVudCkuZmlsdGVyKGVsID0+ICFpbmRleC5pc0Rpc2FibGVkKGVsKSAmJiBpbmRleC5pc1Zpc2libGUoZWwpKTsKICAgIH0KCiAgfTsKCiAgcmV0dXJuIFNlbGVjdG9yRW5naW5lOwoKfSkpOwovLyMgc291cmNlTWFwcGluZ1VSTD1zZWxlY3Rvci1lbmdpbmUuanMubWFwCgoKLyoqKi8gfSksCgovKioqLyAiLi9ub2RlX21vZHVsZXMvYm9vdHN0cmFwL2pzL2Rpc3QvbW9kYWwuanMiOgovKiEqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqISpcCiAgISoqKiAuL25vZGVfbW9kdWxlcy9ib290c3RyYXAvanMvZGlzdC9tb2RhbC5qcyAqKiohCiAgXCoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiovCi8qKiovIChmdW5jdGlvbihtb2R1bGUsIF9fdW51c2VkX3dlYnBhY2tfZXhwb3J0cywgX193ZWJwYWNrX3JlcXVpcmVfXykgewoKLyohCiAgKiBCb290c3RyYXAgbW9kYWwuanMgdjUuMi4zIChodHRwczovL2dldGJvb3RzdHJhcC5jb20vKQogICogQ29weXJpZ2h0IDIwMTEtMjAyMiBUaGUgQm9vdHN0cmFwIEF1dGhvcnMgKGh0dHBzOi8vZ2l0aHViLmNvbS90d2JzL2Jvb3RzdHJhcC9ncmFwaHMvY29udHJpYnV0b3JzKQogICogTGljZW5zZWQgdW5kZXIgTUlUIChodHRwczovL2dpdGh1Yi5jb20vdHdicy9ib290c3RyYXAvYmxvYi9tYWluL0xJQ0VOU0UpCiAgKi8KKGZ1bmN0aW9uIChnbG9iYWwsIGZhY3RvcnkpIHsKICAgdHJ1ZSA/IG1vZHVsZS5leHBvcnRzID0gZmFjdG9yeShfX3dlYnBhY2tfcmVxdWlyZV9fKC8qISAuL3V0aWwvaW5kZXggKi8gIi4vbm9kZV9tb2R1bGVzL2Jvb3RzdHJhcC9qcy9kaXN0L3V0aWwvaW5kZXguanMiKSwgX193ZWJwYWNrX3JlcXVpcmVfXygvKiEgLi9kb20vZXZlbnQtaGFuZGxlciAqLyAiLi9ub2RlX21vZHVsZXMvYm9vdHN0cmFwL2pzL2Rpc3QvZG9tL2V2ZW50LWhhbmRsZXIuanMiKSwgX193ZWJwYWNrX3JlcXVpcmVfXygvKiEgLi9kb20vc2VsZWN0b3ItZW5naW5lICovICIuL25vZGVfbW9kdWxlcy9ib290c3RyYXAvanMvZGlzdC9kb20vc2VsZWN0b3ItZW5naW5lLmpzIiksIF9fd2VicGFja19yZXF1aXJlX18oLyohIC4vdXRpbC9zY3JvbGxiYXIgKi8gIi4vbm9kZV9tb2R1bGVzL2Jvb3RzdHJhcC9qcy9kaXN0L3V0aWwvc2Nyb2xsYmFyLmpzIiksIF9fd2VicGFja19yZXF1aXJlX18oLyohIC4vYmFzZS1jb21wb25lbnQgKi8gIi4vbm9kZV9tb2R1bGVzL2Jvb3RzdHJhcC9qcy9kaXN0L2Jhc2UtY29tcG9uZW50LmpzIiksIF9fd2VicGFja19yZXF1aXJlX18oLyohIC4vdXRpbC9iYWNrZHJvcCAqLyAiLi9ub2RlX21vZHVsZXMvYm9vdHN0cmFwL2pzL2Rpc3QvdXRpbC9iYWNrZHJvcC5qcyIpLCBfX3dlYnBhY2tfcmVxdWlyZV9fKC8qISAuL3V0aWwvZm9jdXN0cmFwICovICIuL25vZGVfbW9kdWxlcy9ib290c3RyYXAvanMvZGlzdC91dGlsL2ZvY3VzdHJhcC5qcyIpLCBfX3dlYnBhY2tfcmVxdWlyZV9fKC8qISAuL3V0aWwvY29tcG9uZW50LWZ1bmN0aW9ucyAqLyAiLi9ub2RlX21vZHVsZXMvYm9vdHN0cmFwL2pzL2Rpc3QvdXRpbC9jb21wb25lbnQtZnVuY3Rpb25zLmpzIikpIDoKICAwOwp9KSh0aGlzLCAoZnVuY3Rpb24gKGluZGV4LCBFdmVudEhhbmRsZXIsIFNlbGVjdG9yRW5naW5lLCBTY3JvbGxCYXJIZWxwZXIsIEJhc2VDb21wb25lbnQsIEJhY2tkcm9wLCBGb2N1c1RyYXAsIGNvbXBvbmVudEZ1bmN0aW9ucykgeyAndXNlIHN0cmljdCc7CgogIGNvbnN0IF9pbnRlcm9wRGVmYXVsdExlZ2FjeSA9IGUgPT4gZSAmJiB0eXBlb2YgZSA9PT0gJ29iamVjdCcgJiYgJ2RlZmF1bHQnIGluIGUgPyBlIDogeyBkZWZhdWx0OiBlIH07CgogIGNvbnN0IEV2ZW50SGFuZGxlcl9fZGVmYXVsdCA9IC8qI19fUFVSRV9fKi9faW50ZXJvcERlZmF1bHRMZWdhY3koRXZlbnRIYW5kbGVyKTsKICBjb25zdCBTZWxlY3RvckVuZ2luZV9fZGVmYXVsdCA9IC8qI19fUFVSRV9fKi9faW50ZXJvcERlZmF1bHRMZWdhY3koU2VsZWN0b3JFbmdpbmUpOwogIGNvbnN0IFNjcm9sbEJhckhlbHBlcl9fZGVmYXVsdCA9IC8qI19fUFVSRV9fKi9faW50ZXJvcERlZmF1bHRMZWdhY3koU2Nyb2xsQmFySGVscGVyKTsKICBjb25zdCBCYXNlQ29tcG9uZW50X19kZWZhdWx0ID0gLyojX19QVVJFX18qL19pbnRlcm9wRGVmYXVsdExlZ2FjeShCYXNlQ29tcG9uZW50KTsKICBjb25zdCBCYWNrZHJvcF9fZGVmYXVsdCA9IC8qI19fUFVSRV9fKi9faW50ZXJvcERlZmF1bHRMZWdhY3koQmFja2Ryb3ApOwogIGNvbnN0IEZvY3VzVHJhcF9fZGVmYXVsdCA9IC8qI19fUFVSRV9fKi9faW50ZXJvcERlZmF1bHRMZWdhY3koRm9jdXNUcmFwKTsKCiAgLyoqCiAgICogLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0KICAgKiBCb290c3RyYXAgKHY1LjIuMyk6IG1vZGFsLmpzCiAgICogTGljZW5zZWQgdW5kZXIgTUlUIChodHRwczovL2dpdGh1Yi5jb20vdHdicy9ib290c3RyYXAvYmxvYi9tYWluL0xJQ0VOU0UpCiAgICogLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0KICAgKi8KICAvKioKICAgKiBDb25zdGFudHMKICAgKi8KCiAgY29uc3QgTkFNRSA9ICdtb2RhbCc7CiAgY29uc3QgREFUQV9LRVkgPSAnYnMubW9kYWwnOwogIGNvbnN0IEVWRU5UX0tFWSA9IGAuJHtEQVRBX0tFWX1gOwogIGNvbnN0IERBVEFfQVBJX0tFWSA9ICcuZGF0YS1hcGknOwogIGNvbnN0IEVTQ0FQRV9LRVkgPSAnRXNjYXBlJzsKICBjb25zdCBFVkVOVF9ISURFID0gYGhpZGUke0VWRU5UX0tFWX1gOwogIGNvbnN0IEVWRU5UX0hJREVfUFJFVkVOVEVEID0gYGhpZGVQcmV2ZW50ZWQke0VWRU5UX0tFWX1gOwogIGNvbnN0IEVWRU5UX0hJRERFTiA9IGBoaWRkZW4ke0VWRU5UX0tFWX1gOwogIGNvbnN0IEVWRU5UX1NIT1cgPSBgc2hvdyR7RVZFTlRfS0VZfWA7CiAgY29uc3QgRVZFTlRfU0hPV04gPSBgc2hvd24ke0VWRU5UX0tFWX1gOwogIGNvbnN0IEVWRU5UX1JFU0laRSA9IGByZXNpemUke0VWRU5UX0tFWX1gOwogIGNvbnN0IEVWRU5UX0NMSUNLX0RJU01JU1MgPSBgY2xpY2suZGlzbWlzcyR7RVZFTlRfS0VZfWA7CiAgY29uc3QgRVZFTlRfTU9VU0VET1dOX0RJU01JU1MgPSBgbW91c2Vkb3duLmRpc21pc3Mke0VWRU5UX0tFWX1gOwogIGNvbnN0IEVWRU5UX0tFWURPV05fRElTTUlTUyA9IGBrZXlkb3duLmRpc21pc3Mke0VWRU5UX0tFWX1gOwogIGNvbnN0IEVWRU5UX0NMSUNLX0RBVEFfQVBJID0gYGNsaWNrJHtFVkVOVF9LRVl9JHtEQVRBX0FQSV9LRVl9YDsKICBjb25zdCBDTEFTU19OQU1FX09QRU4gPSAnbW9kYWwtb3Blbic7CiAgY29uc3QgQ0xBU1NfTkFNRV9GQURFID0gJ2ZhZGUnOwogIGNvbnN0IENMQVNTX05BTUVfU0hPVyA9ICdzaG93JzsKICBjb25zdCBDTEFTU19OQU1FX1NUQVRJQyA9ICdtb2RhbC1zdGF0aWMnOwogIGNvbnN0IE9QRU5fU0VMRUNUT1IgPSAnLm1vZGFsLnNob3cnOwogIGNvbnN0IFNFTEVDVE9SX0RJQUxPRyA9ICcubW9kYWwtZGlhbG9nJzsKICBjb25zdCBTRUxFQ1RPUl9NT0RBTF9CT0RZID0gJy5tb2RhbC1ib2R5JzsKICBjb25zdCBTRUxFQ1RPUl9EQVRBX1RPR0dMRSA9ICdbZGF0YS1icy10b2dnbGU9Im1vZGFsIl0nOwogIGNvbnN0IERlZmF1bHQgPSB7CiAgICBiYWNrZHJvcDogdHJ1ZSwKICAgIGZvY3VzOiB0cnVlLAogICAga2V5Ym9hcmQ6IHRydWUKICB9OwogIGNvbnN0IERlZmF1bHRUeXBlID0gewogICAgYmFja2Ryb3A6ICcoYm9vbGVhbnxzdHJpbmcpJywKICAgIGZvY3VzOiAnYm9vbGVhbicsCiAgICBrZXlib2FyZDogJ2Jvb2xlYW4nCiAgfTsKICAvKioKICAgKiBDbGFzcyBkZWZpbml0aW9uCiAgICovCgogIGNsYXNzIE1vZGFsIGV4dGVuZHMgQmFzZUNvbXBvbmVudF9fZGVmYXVsdC5kZWZhdWx0IHsKICAgIGNvbnN0cnVjdG9yKGVsZW1lbnQsIGNvbmZpZykgewogICAgICBzdXBlcihlbGVtZW50LCBjb25maWcpOwogICAgICB0aGlzLl9kaWFsb2cgPSBTZWxlY3RvckVuZ2luZV9fZGVmYXVsdC5kZWZhdWx0LmZpbmRPbmUoU0VMRUNUT1JfRElBTE9HLCB0aGlzLl9lbGVtZW50KTsKICAgICAgdGhpcy5fYmFja2Ryb3AgPSB0aGlzLl9pbml0aWFsaXplQmFja0Ryb3AoKTsKICAgICAgdGhpcy5fZm9jdXN0cmFwID0gdGhpcy5faW5pdGlhbGl6ZUZvY3VzVHJhcCgpOwogICAgICB0aGlzLl9pc1Nob3duID0gZmFsc2U7CiAgICAgIHRoaXMuX2lzVHJhbnNpdGlvbmluZyA9IGZhbHNlOwogICAgICB0aGlzLl9zY3JvbGxCYXIgPSBuZXcgU2Nyb2xsQmFySGVscGVyX19kZWZhdWx0LmRlZmF1bHQoKTsKCiAgICAgIHRoaXMuX2FkZEV2ZW50TGlzdGVuZXJzKCk7CiAgICB9IC8vIEdldHRlcnMKCgogICAgc3RhdGljIGdldCBEZWZhdWx0KCkgewogICAgICByZXR1cm4gRGVmYXVsdDsKICAgIH0KCiAgICBzdGF0aWMgZ2V0IERlZmF1bHRUeXBlKCkgewogICAgICByZXR1cm4gRGVmYXVsdFR5cGU7CiAgICB9CgogICAgc3RhdGljIGdldCBOQU1FKCkgewogICAgICByZXR1cm4gTkFNRTsKICAgIH0gLy8gUHVibGljCgoKICAgIHRvZ2dsZShyZWxhdGVkVGFyZ2V0KSB7CiAgICAgIHJldHVybiB0aGlzLl9pc1Nob3duID8gdGhpcy5oaWRlKCkgOiB0aGlzLnNob3cocmVsYXRlZFRhcmdldCk7CiAgICB9CgogICAgc2hvdyhyZWxhdGVkVGFyZ2V0KSB7CiAgICAgIGlmICh0aGlzLl9pc1Nob3duIHx8IHRoaXMuX2lzVHJhbnNpdGlvbmluZykgewogICAgICAgIHJldHVybjsKICAgICAgfQoKICAgICAgY29uc3Qgc2hvd0V2ZW50ID0gRXZlbnRIYW5kbGVyX19kZWZhdWx0LmRlZmF1bHQudHJpZ2dlcih0aGlzLl9lbGVtZW50LCBFVkVOVF9TSE9XLCB7CiAgICAgICAgcmVsYXRlZFRhcmdldAogICAgICB9KTsKCiAgICAgIGlmIChzaG93RXZlbnQuZGVmYXVsdFByZXZlbnRlZCkgewogICAgICAgIHJldHVybjsKICAgICAgfQoKICAgICAgdGhpcy5faXNTaG93biA9IHRydWU7CiAgICAgIHRoaXMuX2lzVHJhbnNpdGlvbmluZyA9IHRydWU7CgogICAgICB0aGlzLl9zY3JvbGxCYXIuaGlkZSgpOwoKICAgICAgZG9jdW1lbnQuYm9keS5jbGFzc0xpc3QuYWRkKENMQVNTX05BTUVfT1BFTik7CgogICAgICB0aGlzLl9hZGp1c3REaWFsb2coKTsKCiAgICAgIHRoaXMuX2JhY2tkcm9wLnNob3coKCkgPT4gdGhpcy5fc2hvd0VsZW1lbnQocmVsYXRlZFRhcmdldCkpOwogICAgfQoKICAgIGhpZGUoKSB7CiAgICAgIGlmICghdGhpcy5faXNTaG93biB8fCB0aGlzLl9pc1RyYW5zaXRpb25pbmcpIHsKICAgICAgICByZXR1cm47CiAgICAgIH0KCiAgICAgIGNvbnN0IGhpZGVFdmVudCA9IEV2ZW50SGFuZGxlcl9fZGVmYXVsdC5kZWZhdWx0LnRyaWdnZXIodGhpcy5fZWxlbWVudCwgRVZFTlRfSElERSk7CgogICAgICBpZiAoaGlkZUV2ZW50LmRlZmF1bHRQcmV2ZW50ZWQpIHsKICAgICAgICByZXR1cm47CiAgICAgIH0KCiAgICAgIHRoaXMuX2lzU2hvd24gPSBmYWxzZTsKICAgICAgdGhpcy5faXNUcmFuc2l0aW9uaW5nID0gdHJ1ZTsKCiAgICAgIHRoaXMuX2ZvY3VzdHJhcC5kZWFjdGl2YXRlKCk7CgogICAgICB0aGlzLl9lbGVtZW50LmNsYXNzTGlzdC5yZW1vdmUoQ0xBU1NfTkFNRV9TSE9XKTsKCiAgICAgIHRoaXMuX3F1ZXVlQ2FsbGJhY2soKCkgPT4gdGhpcy5faGlkZU1vZGFsKCksIHRoaXMuX2VsZW1lbnQsIHRoaXMuX2lzQW5pbWF0ZWQoKSk7CiAgICB9CgogICAgZGlzcG9zZSgpIHsKICAgICAgZm9yIChjb25zdCBodG1sRWxlbWVudCBvZiBbd2luZG93LCB0aGlzLl9kaWFsb2ddKSB7CiAgICAgICAgRXZlbnRIYW5kbGVyX19kZWZhdWx0LmRlZmF1bHQub2ZmKGh0bWxFbGVtZW50LCBFVkVOVF9LRVkpOwogICAgICB9CgogICAgICB0aGlzLl9iYWNrZHJvcC5kaXNwb3NlKCk7CgogICAgICB0aGlzLl9mb2N1c3RyYXAuZGVhY3RpdmF0ZSgpOwoKICAgICAgc3VwZXIuZGlzcG9zZSgpOwogICAgfQoKICAgIGhhbmRsZVVwZGF0ZSgpIHsKICAgICAgdGhpcy5fYWRqdXN0RGlhbG9nKCk7CiAgICB9IC8vIFByaXZhdGUKCgogICAgX2luaXRpYWxpemVCYWNrRHJvcCgpIHsKICAgICAgcmV0dXJuIG5ldyBCYWNrZHJvcF9fZGVmYXVsdC5kZWZhdWx0KHsKICAgICAgICBpc1Zpc2libGU6IEJvb2xlYW4odGhpcy5fY29uZmlnLmJhY2tkcm9wKSwKICAgICAgICAvLyAnc3RhdGljJyBvcHRpb24gd2lsbCBiZSB0cmFuc2xhdGVkIHRvIHRydWUsIGFuZCBib29sZWFucyB3aWxsIGtlZXAgdGhlaXIgdmFsdWUsCiAgICAgICAgaXNBbmltYXRlZDogdGhpcy5faXNBbmltYXRlZCgpCiAgICAgIH0pOwogICAgfQoKICAgIF9pbml0aWFsaXplRm9jdXNUcmFwKCkgewogICAgICByZXR1cm4gbmV3IEZvY3VzVHJhcF9fZGVmYXVsdC5kZWZhdWx0KHsKICAgICAgICB0cmFwRWxlbWVudDogdGhpcy5fZWxlbWVudAogICAgICB9KTsKICAgIH0KCiAgICBfc2hvd0VsZW1lbnQocmVsYXRlZFRhcmdldCkgewogICAgICAvLyB0cnkgdG8gYXBwZW5kIGR5bmFtaWMgbW9kYWwKICAgICAgaWYgKCFkb2N1bWVudC5ib2R5LmNvbnRhaW5zKHRoaXMuX2VsZW1lbnQpKSB7CiAgICAgICAgZG9jdW1lbnQuYm9keS5hcHBlbmQodGhpcy5fZWxlbWVudCk7CiAgICAgIH0KCiAgICAgIHRoaXMuX2VsZW1lbnQuc3R5bGUuZGlzcGxheSA9ICdibG9jayc7CgogICAgICB0aGlzLl9lbGVtZW50LnJlbW92ZUF0dHJpYnV0ZSgnYXJpYS1oaWRkZW4nKTsKCiAgICAgIHRoaXMuX2VsZW1lbnQuc2V0QXR0cmlidXRlKCdhcmlhLW1vZGFsJywgdHJ1ZSk7CgogICAgICB0aGlzLl9lbGVtZW50LnNldEF0dHJpYnV0ZSgncm9sZScsICdkaWFsb2cnKTsKCiAgICAgIHRoaXMuX2VsZW1lbnQuc2Nyb2xsVG9wID0gMDsKICAgICAgY29uc3QgbW9kYWxCb2R5ID0gU2VsZWN0b3JFbmdpbmVfX2RlZmF1bHQuZGVmYXVsdC5maW5kT25lKFNFTEVDVE9SX01PREFMX0JPRFksIHRoaXMuX2RpYWxvZyk7CgogICAgICBpZiAobW9kYWxCb2R5KSB7CiAgICAgICAgbW9kYWxCb2R5LnNjcm9sbFRvcCA9IDA7CiAgICAgIH0KCiAgICAgIGluZGV4LnJlZmxvdyh0aGlzLl9lbGVtZW50KTsKCiAgICAgIHRoaXMuX2VsZW1lbnQuY2xhc3NMaXN0LmFkZChDTEFTU19OQU1FX1NIT1cpOwoKICAgICAgY29uc3QgdHJhbnNpdGlvbkNvbXBsZXRlID0gKCkgPT4gewogICAgICAgIGlmICh0aGlzLl9jb25maWcuZm9jdXMpIHsKICAgICAgICAgIHRoaXMuX2ZvY3VzdHJhcC5hY3RpdmF0ZSgpOwogICAgICAgIH0KCiAgICAgICAgdGhpcy5faXNUcmFuc2l0aW9uaW5nID0gZmFsc2U7CiAgICAgICAgRXZlbnRIYW5kbGVyX19kZWZhdWx0LmRlZmF1bHQudHJpZ2dlcih0aGlzLl9lbGVtZW50LCBFVkVOVF9TSE9XTiwgewogICAgICAgICAgcmVsYXRlZFRhcmdldAogICAgICAgIH0pOwogICAgICB9OwoKICAgICAgdGhpcy5fcXVldWVDYWxsYmFjayh0cmFuc2l0aW9uQ29tcGxldGUsIHRoaXMuX2RpYWxvZywgdGhpcy5faXNBbmltYXRlZCgpKTsKICAgIH0KCiAgICBfYWRkRXZlbnRMaXN0ZW5lcnMoKSB7CiAgICAgIEV2ZW50SGFuZGxlcl9fZGVmYXVsdC5kZWZhdWx0Lm9uKHRoaXMuX2VsZW1lbnQsIEVWRU5UX0tFWURPV05fRElTTUlTUywgZXZlbnQgPT4gewogICAgICAgIGlmIChldmVudC5rZXkgIT09IEVTQ0FQRV9LRVkpIHsKICAgICAgICAgIHJldHVybjsKICAgICAgICB9CgogICAgICAgIGlmICh0aGlzLl9jb25maWcua2V5Ym9hcmQpIHsKICAgICAgICAgIGV2ZW50LnByZXZlbnREZWZhdWx0KCk7CiAgICAgICAgICB0aGlzLmhpZGUoKTsKICAgICAgICAgIHJldHVybjsKICAgICAgICB9CgogICAgICAgIHRoaXMuX3RyaWdnZXJCYWNrZHJvcFRyYW5zaXRpb24oKTsKICAgICAgfSk7CiAgICAgIEV2ZW50SGFuZGxlcl9fZGVmYXVsdC5kZWZhdWx0Lm9uKHdpbmRvdywgRVZFTlRfUkVTSVpFLCAoKSA9PiB7CiAgICAgICAgaWYgKHRoaXMuX2lzU2hvd24gJiYgIXRoaXMuX2lzVHJhbnNpdGlvbmluZykgewogICAgICAgICAgdGhpcy5fYWRqdXN0RGlhbG9nKCk7CiAgICAgICAgfQogICAgICB9KTsKICAgICAgRXZlbnRIYW5kbGVyX19kZWZhdWx0LmRlZmF1bHQub24odGhpcy5fZWxlbWVudCwgRVZFTlRfTU9VU0VET1dOX0RJU01JU1MsIGV2ZW50ID0+IHsKICAgICAgICAvLyBhIGJhZCB0cmljayB0byBzZWdyZWdhdGUgY2xpY2tzIHRoYXQgbWF5IHN0YXJ0IGluc2lkZSBkaWFsb2cgYnV0IGVuZCBvdXRzaWRlLCBhbmQgYXZvaWQgbGlzdGVuIHRvIHNjcm9sbGJhciBjbGlja3MKICAgICAgICBFdmVudEhhbmRsZXJfX2RlZmF1bHQuZGVmYXVsdC5vbmUodGhpcy5fZWxlbWVudCwgRVZFTlRfQ0xJQ0tfRElTTUlTUywgZXZlbnQyID0+IHsKICAgICAgICAgIGlmICh0aGlzLl9lbGVtZW50ICE9PSBldmVudC50YXJnZXQgfHwgdGhpcy5fZWxlbWVudCAhPT0gZXZlbnQyLnRhcmdldCkgewogICAgICAgICAgICByZXR1cm47CiAgICAgICAgICB9CgogICAgICAgICAgaWYgKHRoaXMuX2NvbmZpZy5iYWNrZHJvcCA9PT0gJ3N0YXRpYycpIHsKICAgICAgICAgICAgdGhpcy5fdHJpZ2dlckJhY2tkcm9wVHJhbnNpdGlvbigpOwoKICAgICAgICAgICAgcmV0dXJuOwogICAgICAgICAgfQoKICAgICAgICAgIGlmICh0aGlzLl9jb25maWcuYmFja2Ryb3ApIHsKICAgICAgICAgICAgdGhpcy5oaWRlKCk7CiAgICAgICAgICB9CiAgICAgICAgfSk7CiAgICAgIH0pOwogICAgfQoKICAgIF9oaWRlTW9kYWwoKSB7CiAgICAgIHRoaXMuX2VsZW1lbnQuc3R5bGUuZGlzcGxheSA9ICdub25lJzsKCiAgICAgIHRoaXMuX2VsZW1lbnQuc2V0QXR0cmlidXRlKCdhcmlhLWhpZGRlbicsIHRydWUpOwoKICAgICAgdGhpcy5fZWxlbWVudC5yZW1vdmVBdHRyaWJ1dGUoJ2FyaWEtbW9kYWwnKTsKCiAgICAgIHRoaXMuX2VsZW1lbnQucmVtb3ZlQXR0cmlidXRlKCdyb2xlJyk7CgogICAgICB0aGlzLl9pc1RyYW5zaXRpb25pbmcgPSBmYWxzZTsKCiAgICAgIHRoaXMuX2JhY2tkcm9wLmhpZGUoKCkgPT4gewogICAgICAgIGRvY3VtZW50LmJvZHkuY2xhc3NMaXN0LnJlbW92ZShDTEFTU19OQU1FX09QRU4pOwoKICAgICAgICB0aGlzLl9yZXNldEFkanVzdG1lbnRzKCk7CgogICAgICAgIHRoaXMuX3Njcm9sbEJhci5yZXNldCgpOwoKICAgICAgICBFdmVudEhhbmRsZXJfX2RlZmF1bHQuZGVmYXVsdC50cmlnZ2VyKHRoaXMuX2VsZW1lbnQsIEVWRU5UX0hJRERFTik7CiAgICAgIH0pOwogICAgfQoKICAgIF9pc0FuaW1hdGVkKCkgewogICAgICByZXR1cm4gdGhpcy5fZWxlbWVudC5jbGFzc0xpc3QuY29udGFpbnMoQ0xBU1NfTkFNRV9GQURFKTsKICAgIH0KCiAgICBfdHJpZ2dlckJhY2tkcm9wVHJhbnNpdGlvbigpIHsKICAgICAgY29uc3QgaGlkZUV2ZW50ID0gRXZlbnRIYW5kbGVyX19kZWZhdWx0LmRlZmF1bHQudHJpZ2dlcih0aGlzLl9lbGVtZW50LCBFVkVOVF9ISURFX1BSRVZFTlRFRCk7CgogICAgICBpZiAoaGlkZUV2ZW50LmRlZmF1bHRQcmV2ZW50ZWQpIHsKICAgICAgICByZXR1cm47CiAgICAgIH0KCiAgICAgIGNvbnN0IGlzTW9kYWxPdmVyZmxvd2luZyA9IHRoaXMuX2VsZW1lbnQuc2Nyb2xsSGVpZ2h0ID4gZG9jdW1lbnQuZG9jdW1lbnRFbGVtZW50LmNsaWVudEhlaWdodDsKICAgICAgY29uc3QgaW5pdGlhbE92ZXJmbG93WSA9IHRoaXMuX2VsZW1lbnQuc3R5bGUub3ZlcmZsb3dZOyAvLyByZXR1cm4gaWYgdGhlIGZvbGxvd2luZyBiYWNrZ3JvdW5kIHRyYW5zaXRpb24gaGFzbid0IHlldCBjb21wbGV0ZWQKCiAgICAgIGlmIChpbml0aWFsT3ZlcmZsb3dZID09PSAnaGlkZGVuJyB8fCB0aGlzLl9lbGVtZW50LmNsYXNzTGlzdC5jb250YWlucyhDTEFTU19OQU1FX1NUQVRJQykpIHsKICAgICAgICByZXR1cm47CiAgICAgIH0KCiAgICAgIGlmICghaXNNb2RhbE92ZXJmbG93aW5nKSB7CiAgICAgICAgdGhpcy5fZWxlbWVudC5zdHlsZS5vdmVyZmxvd1kgPSAnaGlkZGVuJzsKICAgICAgfQoKICAgICAgdGhpcy5fZWxlbWVudC5jbGFzc0xpc3QuYWRkKENMQVNTX05BTUVfU1RBVElDKTsKCiAgICAgIHRoaXMuX3F1ZXVlQ2FsbGJhY2soKCkgPT4gewogICAgICAgIHRoaXMuX2VsZW1lbnQuY2xhc3NMaXN0LnJlbW92ZShDTEFTU19OQU1FX1NUQVRJQyk7CgogICAgICAgIHRoaXMuX3F1ZXVlQ2FsbGJhY2soKCkgPT4gewogICAgICAgICAgdGhpcy5fZWxlbWVudC5zdHlsZS5vdmVyZmxvd1kgPSBpbml0aWFsT3ZlcmZsb3dZOwogICAgICAgIH0sIHRoaXMuX2RpYWxvZyk7CiAgICAgIH0sIHRoaXMuX2RpYWxvZyk7CgogICAgICB0aGlzLl9lbGVtZW50LmZvY3VzKCk7CiAgICB9CiAgICAvKioKICAgICAqIFRoZSBmb2xsb3dpbmcgbWV0aG9kcyBhcmUgdXNlZCB0byBoYW5kbGUgb3ZlcmZsb3dpbmcgbW9kYWxzCiAgICAgKi8KCgogICAgX2FkanVzdERpYWxvZygpIHsKICAgICAgY29uc3QgaXNNb2RhbE92ZXJmbG93aW5nID0gdGhpcy5fZWxlbWVudC5zY3JvbGxIZWlnaHQgPiBkb2N1bWVudC5kb2N1bWVudEVsZW1lbnQuY2xpZW50SGVpZ2h0OwoKICAgICAgY29uc3Qgc2Nyb2xsYmFyV2lkdGggPSB0aGlzLl9zY3JvbGxCYXIuZ2V0V2lkdGgoKTsKCiAgICAgIGNvbnN0IGlzQm9keU92ZXJmbG93aW5nID0gc2Nyb2xsYmFyV2lkdGggPiAwOwoKICAgICAgaWYgKGlzQm9keU92ZXJmbG93aW5nICYmICFpc01vZGFsT3ZlcmZsb3dpbmcpIHsKICAgICAgICBjb25zdCBwcm9wZXJ0eSA9IGluZGV4LmlzUlRMKCkgPyAncGFkZGluZ0xlZnQnIDogJ3BhZGRpbmdSaWdodCc7CiAgICAgICAgdGhpcy5fZWxlbWVudC5zdHlsZVtwcm9wZXJ0eV0gPSBgJHtzY3JvbGxiYXJXaWR0aH1weGA7CiAgICAgIH0KCiAgICAgIGlmICghaXNCb2R5T3ZlcmZsb3dpbmcgJiYgaXNNb2RhbE92ZXJmbG93aW5nKSB7CiAgICAgICAgY29uc3QgcHJvcGVydHkgPSBpbmRleC5pc1JUTCgpID8gJ3BhZGRpbmdSaWdodCcgOiAncGFkZGluZ0xlZnQnOwogICAgICAgIHRoaXMuX2VsZW1lbnQuc3R5bGVbcHJvcGVydHldID0gYCR7c2Nyb2xsYmFyV2lkdGh9cHhgOwogICAgICB9CiAgICB9CgogICAgX3Jlc2V0QWRqdXN0bWVudHMoKSB7CiAgICAgIHRoaXMuX2VsZW1lbnQuc3R5bGUucGFkZGluZ0xlZnQgPSAnJzsKICAgICAgdGhpcy5fZWxlbWVudC5zdHlsZS5wYWRkaW5nUmlnaHQgPSAnJzsKICAgIH0gLy8gU3RhdGljCgoKICAgIHN0YXRpYyBqUXVlcnlJbnRlcmZhY2UoY29uZmlnLCByZWxhdGVkVGFyZ2V0KSB7CiAgICAgIHJldHVybiB0aGlzLmVhY2goZnVuY3Rpb24gKCkgewogICAgICAgIGNvbnN0IGRhdGEgPSBNb2RhbC5nZXRPckNyZWF0ZUluc3RhbmNlKHRoaXMsIGNvbmZpZyk7CgogICAgICAgIGlmICh0eXBlb2YgY29uZmlnICE9PSAnc3RyaW5nJykgewogICAgICAgICAgcmV0dXJuOwogICAgICAgIH0KCiAgICAgICAgaWYgKHR5cGVvZiBkYXRhW2NvbmZpZ10gPT09ICd1bmRlZmluZWQnKSB7CiAgICAgICAgICB0aHJvdyBuZXcgVHlwZUVycm9yKGBObyBtZXRob2QgbmFtZWQgIiR7Y29uZmlnfSJgKTsKICAgICAgICB9CgogICAgICAgIGRhdGFbY29uZmlnXShyZWxhdGVkVGFyZ2V0KTsKICAgICAgfSk7CiAgICB9CgogIH0KICAvKioKICAgKiBEYXRhIEFQSSBpbXBsZW1lbnRhdGlvbgogICAqLwoKCiAgRXZlbnRIYW5kbGVyX19kZWZhdWx0LmRlZmF1bHQub24oZG9jdW1lbnQsIEVWRU5UX0NMSUNLX0RBVEFfQVBJLCBTRUxFQ1RPUl9EQVRBX1RPR0dMRSwgZnVuY3Rpb24gKGV2ZW50KSB7CiAgICBjb25zdCB0YXJnZXQgPSBpbmRleC5nZXRFbGVtZW50RnJvbVNlbGVjdG9yKHRoaXMpOwoKICAgIGlmIChbJ0EnLCAnQVJFQSddLmluY2x1ZGVzKHRoaXMudGFnTmFtZSkpIHsKICAgICAgZXZlbnQucHJldmVudERlZmF1bHQoKTsKICAgIH0KCiAgICBFdmVudEhhbmRsZXJfX2RlZmF1bHQuZGVmYXVsdC5vbmUodGFyZ2V0LCBFVkVOVF9TSE9XLCBzaG93RXZlbnQgPT4gewogICAgICBpZiAoc2hvd0V2ZW50LmRlZmF1bHRQcmV2ZW50ZWQpIHsKICAgICAgICAvLyBvbmx5IHJlZ2lzdGVyIGZvY3VzIHJlc3RvcmVyIGlmIG1vZGFsIHdpbGwgYWN0dWFsbHkgZ2V0IHNob3duCiAgICAgICAgcmV0dXJuOwogICAgICB9CgogICAgICBFdmVudEhhbmRsZXJfX2RlZmF1bHQuZGVmYXVsdC5vbmUodGFyZ2V0LCBFVkVOVF9ISURERU4sICgpID0+IHsKICAgICAgICBpZiAoaW5kZXguaXNWaXNpYmxlKHRoaXMpKSB7CiAgICAgICAgICB0aGlzLmZvY3VzKCk7CiAgICAgICAgfQogICAgICB9KTsKICAgIH0pOyAvLyBhdm9pZCBjb25mbGljdCB3aGVuIGNsaWNraW5nIG1vZGFsIHRvZ2dsZXIgd2hpbGUgYW5vdGhlciBvbmUgaXMgb3BlbgoKICAgIGNvbnN0IGFscmVhZHlPcGVuID0gU2VsZWN0b3JFbmdpbmVfX2RlZmF1bHQuZGVmYXVsdC5maW5kT25lKE9QRU5fU0VMRUNUT1IpOwoKICAgIGlmIChhbHJlYWR5T3BlbikgewogICAgICBNb2RhbC5nZXRJbnN0YW5jZShhbHJlYWR5T3BlbikuaGlkZSgpOwogICAgfQoKICAgIGNvbnN0IGRhdGEgPSBNb2RhbC5nZXRPckNyZWF0ZUluc3RhbmNlKHRhcmdldCk7CiAgICBkYXRhLnRvZ2dsZSh0aGlzKTsKICB9KTsKICBjb21wb25lbnRGdW5jdGlvbnMuZW5hYmxlRGlzbWlzc1RyaWdnZXIoTW9kYWwpOwogIC8qKgogICAqIGpRdWVyeQogICAqLwoKICBpbmRleC5kZWZpbmVKUXVlcnlQbHVnaW4oTW9kYWwpOwoKICByZXR1cm4gTW9kYWw7Cgp9KSk7Ci8vIyBzb3VyY2VNYXBwaW5nVVJMPW1vZGFsLmpzLm1hcAoKCi8qKiovIH0pLAoKLyoqKi8gIi4vbm9kZV9tb2R1bGVzL2Jvb3RzdHJhcC9qcy9kaXN0L3BvcG92ZXIuanMiOgovKiEqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiohKlwKICAhKioqIC4vbm9kZV9tb2R1bGVzL2Jvb3RzdHJhcC9qcy9kaXN0L3BvcG92ZXIuanMgKioqIQogIFwqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiovCi8qKiovIChmdW5jdGlvbihtb2R1bGUsIF9fdW51c2VkX3dlYnBhY2tfZXhwb3J0cywgX193ZWJwYWNrX3JlcXVpcmVfXykgewoKLyohCiAgKiBCb290c3RyYXAgcG9wb3Zlci5qcyB2NS4yLjMgKGh0dHBzOi8vZ2V0Ym9vdHN0cmFwLmNvbS8pCiAgKiBDb3B5cmlnaHQgMjAxMS0yMDIyIFRoZSBCb290c3RyYXAgQXV0aG9ycyAoaHR0cHM6Ly9naXRodWIuY29tL3R3YnMvYm9vdHN0cmFwL2dyYXBocy9jb250cmlidXRvcnMpCiAgKiBMaWNlbnNlZCB1bmRlciBNSVQgKGh0dHBzOi8vZ2l0aHViLmNvbS90d2JzL2Jvb3RzdHJhcC9ibG9iL21haW4vTElDRU5TRSkKICAqLwooZnVuY3Rpb24gKGdsb2JhbCwgZmFjdG9yeSkgewogICB0cnVlID8gbW9kdWxlLmV4cG9ydHMgPSBmYWN0b3J5KF9fd2VicGFja19yZXF1aXJlX18oLyohIC4vdXRpbC9pbmRleCAqLyAiLi9ub2RlX21vZHVsZXMvYm9vdHN0cmFwL2pzL2Rpc3QvdXRpbC9pbmRleC5qcyIpLCBfX3dlYnBhY2tfcmVxdWlyZV9fKC8qISAuL3Rvb2x0aXAgKi8gIi4vbm9kZV9tb2R1bGVzL2Jvb3RzdHJhcC9qcy9kaXN0L3Rvb2x0aXAuanMiKSkgOgogIDA7Cn0pKHRoaXMsIChmdW5jdGlvbiAoaW5kZXgsIFRvb2x0aXApIHsgJ3VzZSBzdHJpY3QnOwoKICBjb25zdCBfaW50ZXJvcERlZmF1bHRMZWdhY3kgPSBlID0+IGUgJiYgdHlwZW9mIGUgPT09ICdvYmplY3QnICYmICdkZWZhdWx0JyBpbiBlID8gZSA6IHsgZGVmYXVsdDogZSB9OwoKICBjb25zdCBUb29sdGlwX19kZWZhdWx0ID0gLyojX19QVVJFX18qL19pbnRlcm9wRGVmYXVsdExlZ2FjeShUb29sdGlwKTsKCiAgLyoqCiAgICogLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0KICAgKiBCb290c3RyYXAgKHY1LjIuMyk6IHBvcG92ZXIuanMKICAgKiBMaWNlbnNlZCB1bmRlciBNSVQgKGh0dHBzOi8vZ2l0aHViLmNvbS90d2JzL2Jvb3RzdHJhcC9ibG9iL21haW4vTElDRU5TRSkKICAgKiAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLQogICAqLwogIC8qKgogICAqIENvbnN0YW50cwogICAqLwoKICBjb25zdCBOQU1FID0gJ3BvcG92ZXInOwogIGNvbnN0IFNFTEVDVE9SX1RJVExFID0gJy5wb3BvdmVyLWhlYWRlcic7CiAgY29uc3QgU0VMRUNUT1JfQ09OVEVOVCA9ICcucG9wb3Zlci1ib2R5JzsKICBjb25zdCBEZWZhdWx0ID0geyAuLi5Ub29sdGlwX19kZWZhdWx0LmRlZmF1bHQuRGVmYXVsdCwKICAgIGNvbnRlbnQ6ICcnLAogICAgb2Zmc2V0OiBbMCwgOF0sCiAgICBwbGFjZW1lbnQ6ICdyaWdodCcsCiAgICB0ZW1wbGF0ZTogJzxkaXYgY2xhc3M9InBvcG92ZXIiIHJvbGU9InRvb2x0aXAiPicgKyAnPGRpdiBjbGFzcz0icG9wb3Zlci1hcnJvdyI+PC9kaXY+JyArICc8aDMgY2xhc3M9InBvcG92ZXItaGVhZGVyIj48L2gzPicgKyAnPGRpdiBjbGFzcz0icG9wb3Zlci1ib2R5Ij48L2Rpdj4nICsgJzwvZGl2PicsCiAgICB0cmlnZ2VyOiAnY2xpY2snCiAgfTsKICBjb25zdCBEZWZhdWx0VHlwZSA9IHsgLi4uVG9vbHRpcF9fZGVmYXVsdC5kZWZhdWx0LkRlZmF1bHRUeXBlLAogICAgY29udGVudDogJyhudWxsfHN0cmluZ3xlbGVtZW50fGZ1bmN0aW9uKScKICB9OwogIC8qKgogICAqIENsYXNzIGRlZmluaXRpb24KICAgKi8KCiAgY2xhc3MgUG9wb3ZlciBleHRlbmRzIFRvb2x0aXBfX2RlZmF1bHQuZGVmYXVsdCB7CiAgICAvLyBHZXR0ZXJzCiAgICBzdGF0aWMgZ2V0IERlZmF1bHQoKSB7CiAgICAgIHJldHVybiBEZWZhdWx0OwogICAgfQoKICAgIHN0YXRpYyBnZXQgRGVmYXVsdFR5cGUoKSB7CiAgICAgIHJldHVybiBEZWZhdWx0VHlwZTsKICAgIH0KCiAgICBzdGF0aWMgZ2V0IE5BTUUoKSB7CiAgICAgIHJldHVybiBOQU1FOwogICAgfSAvLyBPdmVycmlkZXMKCgogICAgX2lzV2l0aENvbnRlbnQoKSB7CiAgICAgIHJldHVybiB0aGlzLl9nZXRUaXRsZSgpIHx8IHRoaXMuX2dldENvbnRlbnQoKTsKICAgIH0gLy8gUHJpdmF0ZQoKCiAgICBfZ2V0Q29udGVudEZvclRlbXBsYXRlKCkgewogICAgICByZXR1cm4gewogICAgICAgIFtTRUxFQ1RPUl9USVRMRV06IHRoaXMuX2dldFRpdGxlKCksCiAgICAgICAgW1NFTEVDVE9SX0NPTlRFTlRdOiB0aGlzLl9nZXRDb250ZW50KCkKICAgICAgfTsKICAgIH0KCiAgICBfZ2V0Q29udGVudCgpIHsKICAgICAgcmV0dXJuIHRoaXMuX3Jlc29sdmVQb3NzaWJsZUZ1bmN0aW9uKHRoaXMuX2NvbmZpZy5jb250ZW50KTsKICAgIH0gLy8gU3RhdGljCgoKICAgIHN0YXRpYyBqUXVlcnlJbnRlcmZhY2UoY29uZmlnKSB7CiAgICAgIHJldHVybiB0aGlzLmVhY2goZnVuY3Rpb24gKCkgewogICAgICAgIGNvbnN0IGRhdGEgPSBQb3BvdmVyLmdldE9yQ3JlYXRlSW5zdGFuY2UodGhpcywgY29uZmlnKTsKCiAgICAgICAgaWYgKHR5cGVvZiBjb25maWcgIT09ICdzdHJpbmcnKSB7CiAgICAgICAgICByZXR1cm47CiAgICAgICAgfQoKICAgICAgICBpZiAodHlwZW9mIGRhdGFbY29uZmlnXSA9PT0gJ3VuZGVmaW5lZCcpIHsKICAgICAgICAgIHRocm93IG5ldyBUeXBlRXJyb3IoYE5vIG1ldGhvZCBuYW1lZCAiJHtjb25maWd9ImApOwogICAgICAgIH0KCiAgICAgICAgZGF0YVtjb25maWddKCk7CiAgICAgIH0pOwogICAgfQoKICB9CiAgLyoqCiAgICogalF1ZXJ5CiAgICovCgoKICBpbmRleC5kZWZpbmVKUXVlcnlQbHVnaW4oUG9wb3Zlcik7CgogIHJldHVybiBQb3BvdmVyOwoKfSkpOwovLyMgc291cmNlTWFwcGluZ1VSTD1wb3BvdmVyLmpzLm1hcAoKCi8qKiovIH0pLAoKLyoqKi8gIi4vbm9kZV9tb2R1bGVzL2Jvb3RzdHJhcC9qcy9kaXN0L3Njcm9sbHNweS5qcyI6Ci8qISoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqISpcCiAgISoqKiAuL25vZGVfbW9kdWxlcy9ib290c3RyYXAvanMvZGlzdC9zY3JvbGxzcHkuanMgKioqIQogIFwqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKi8KLyoqKi8gKGZ1bmN0aW9uKG1vZHVsZSwgX191bnVzZWRfd2VicGFja19leHBvcnRzLCBfX3dlYnBhY2tfcmVxdWlyZV9fKSB7CgovKiEKICAqIEJvb3RzdHJhcCBzY3JvbGxzcHkuanMgdjUuMi4zIChodHRwczovL2dldGJvb3RzdHJhcC5jb20vKQogICogQ29weXJpZ2h0IDIwMTEtMjAyMiBUaGUgQm9vdHN0cmFwIEF1dGhvcnMgKGh0dHBzOi8vZ2l0aHViLmNvbS90d2JzL2Jvb3RzdHJhcC9ncmFwaHMvY29udHJpYnV0b3JzKQogICogTGljZW5zZWQgdW5kZXIgTUlUIChodHRwczovL2dpdGh1Yi5jb20vdHdicy9ib290c3RyYXAvYmxvYi9tYWluL0xJQ0VOU0UpCiAgKi8KKGZ1bmN0aW9uIChnbG9iYWwsIGZhY3RvcnkpIHsKICAgdHJ1ZSA/IG1vZHVsZS5leHBvcnRzID0gZmFjdG9yeShfX3dlYnBhY2tfcmVxdWlyZV9fKC8qISAuL3V0aWwvaW5kZXggKi8gIi4vbm9kZV9tb2R1bGVzL2Jvb3RzdHJhcC9qcy9kaXN0L3V0aWwvaW5kZXguanMiKSwgX193ZWJwYWNrX3JlcXVpcmVfXygvKiEgLi9kb20vZXZlbnQtaGFuZGxlciAqLyAiLi9ub2RlX21vZHVsZXMvYm9vdHN0cmFwL2pzL2Rpc3QvZG9tL2V2ZW50LWhhbmRsZXIuanMiKSwgX193ZWJwYWNrX3JlcXVpcmVfXygvKiEgLi9kb20vc2VsZWN0b3ItZW5naW5lICovICIuL25vZGVfbW9kdWxlcy9ib290c3RyYXAvanMvZGlzdC9kb20vc2VsZWN0b3ItZW5naW5lLmpzIiksIF9fd2VicGFja19yZXF1aXJlX18oLyohIC4vYmFzZS1jb21wb25lbnQgKi8gIi4vbm9kZV9tb2R1bGVzL2Jvb3RzdHJhcC9qcy9kaXN0L2Jhc2UtY29tcG9uZW50LmpzIikpIDoKICAwOwp9KSh0aGlzLCAoZnVuY3Rpb24gKGluZGV4LCBFdmVudEhhbmRsZXIsIFNlbGVjdG9yRW5naW5lLCBCYXNlQ29tcG9uZW50KSB7ICd1c2Ugc3RyaWN0JzsKCiAgY29uc3QgX2ludGVyb3BEZWZhdWx0TGVnYWN5ID0gZSA9PiBlICYmIHR5cGVvZiBlID09PSAnb2JqZWN0JyAmJiAnZGVmYXVsdCcgaW4gZSA/IGUgOiB7IGRlZmF1bHQ6IGUgfTsKCiAgY29uc3QgRXZlbnRIYW5kbGVyX19kZWZhdWx0ID0gLyojX19QVVJFX18qL19pbnRlcm9wRGVmYXVsdExlZ2FjeShFdmVudEhhbmRsZXIpOwogIGNvbnN0IFNlbGVjdG9yRW5naW5lX19kZWZhdWx0ID0gLyojX19QVVJFX18qL19pbnRlcm9wRGVmYXVsdExlZ2FjeShTZWxlY3RvckVuZ2luZSk7CiAgY29uc3QgQmFzZUNvbXBvbmVudF9fZGVmYXVsdCA9IC8qI19fUFVSRV9fKi9faW50ZXJvcERlZmF1bHRMZWdhY3koQmFzZUNvbXBvbmVudCk7CgogIC8qKgogICAqIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tCiAgICogQm9vdHN0cmFwICh2NS4yLjMpOiBzY3JvbGxzcHkuanMKICAgKiBMaWNlbnNlZCB1bmRlciBNSVQgKGh0dHBzOi8vZ2l0aHViLmNvbS90d2JzL2Jvb3RzdHJhcC9ibG9iL21haW4vTElDRU5TRSkKICAgKiAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLQogICAqLwogIC8qKgogICAqIENvbnN0YW50cwogICAqLwoKICBjb25zdCBOQU1FID0gJ3Njcm9sbHNweSc7CiAgY29uc3QgREFUQV9LRVkgPSAnYnMuc2Nyb2xsc3B5JzsKICBjb25zdCBFVkVOVF9LRVkgPSBgLiR7REFUQV9LRVl9YDsKICBjb25zdCBEQVRBX0FQSV9LRVkgPSAnLmRhdGEtYXBpJzsKICBjb25zdCBFVkVOVF9BQ1RJVkFURSA9IGBhY3RpdmF0ZSR7RVZFTlRfS0VZfWA7CiAgY29uc3QgRVZFTlRfQ0xJQ0sgPSBgY2xpY2ske0VWRU5UX0tFWX1gOwogIGNvbnN0IEVWRU5UX0xPQURfREFUQV9BUEkgPSBgbG9hZCR7RVZFTlRfS0VZfSR7REFUQV9BUElfS0VZfWA7CiAgY29uc3QgQ0xBU1NfTkFNRV9EUk9QRE9XTl9JVEVNID0gJ2Ryb3Bkb3duLWl0ZW0nOwogIGNvbnN0IENMQVNTX05BTUVfQUNUSVZFID0gJ2FjdGl2ZSc7CiAgY29uc3QgU0VMRUNUT1JfREFUQV9TUFkgPSAnW2RhdGEtYnMtc3B5PSJzY3JvbGwiXSc7CiAgY29uc3QgU0VMRUNUT1JfVEFSR0VUX0xJTktTID0gJ1tocmVmXSc7CiAgY29uc3QgU0VMRUNUT1JfTkFWX0xJU1RfR1JPVVAgPSAnLm5hdiwgLmxpc3QtZ3JvdXAnOwogIGNvbnN0IFNFTEVDVE9SX05BVl9MSU5LUyA9ICcubmF2LWxpbmsnOwogIGNvbnN0IFNFTEVDVE9SX05BVl9JVEVNUyA9ICcubmF2LWl0ZW0nOwogIGNvbnN0IFNFTEVDVE9SX0xJU1RfSVRFTVMgPSAnLmxpc3QtZ3JvdXAtaXRlbSc7CiAgY29uc3QgU0VMRUNUT1JfTElOS19JVEVNUyA9IGAke1NFTEVDVE9SX05BVl9MSU5LU30sICR7U0VMRUNUT1JfTkFWX0lURU1TfSA+ICR7U0VMRUNUT1JfTkFWX0xJTktTfSwgJHtTRUxFQ1RPUl9MSVNUX0lURU1TfWA7CiAgY29uc3QgU0VMRUNUT1JfRFJPUERPV04gPSAnLmRyb3Bkb3duJzsKICBjb25zdCBTRUxFQ1RPUl9EUk9QRE9XTl9UT0dHTEUgPSAnLmRyb3Bkb3duLXRvZ2dsZSc7CiAgY29uc3QgRGVmYXVsdCA9IHsKICAgIG9mZnNldDogbnVsbCwKICAgIC8vIFRPRE86IHY2IEBkZXByZWNhdGVkLCBrZWVwIGl0IGZvciBiYWNrd2FyZHMgY29tcGF0aWJpbGl0eSByZWFzb25zCiAgICByb290TWFyZ2luOiAnMHB4IDBweCAtMjUlJywKICAgIHNtb290aFNjcm9sbDogZmFsc2UsCiAgICB0YXJnZXQ6IG51bGwsCiAgICB0aHJlc2hvbGQ6IFswLjEsIDAuNSwgMV0KICB9OwogIGNvbnN0IERlZmF1bHRUeXBlID0gewogICAgb2Zmc2V0OiAnKG51bWJlcnxudWxsKScsCiAgICAvLyBUT0RPIHY2IEBkZXByZWNhdGVkLCBrZWVwIGl0IGZvciBiYWNrd2FyZHMgY29tcGF0aWJpbGl0eSByZWFzb25zCiAgICByb290TWFyZ2luOiAnc3RyaW5nJywKICAgIHNtb290aFNjcm9sbDogJ2Jvb2xlYW4nLAogICAgdGFyZ2V0OiAnZWxlbWVudCcsCiAgICB0aHJlc2hvbGQ6ICdhcnJheScKICB9OwogIC8qKgogICAqIENsYXNzIGRlZmluaXRpb24KICAgKi8KCiAgY2xhc3MgU2Nyb2xsU3B5IGV4dGVuZHMgQmFzZUNvbXBvbmVudF9fZGVmYXVsdC5kZWZhdWx0IHsKICAgIGNvbnN0cnVjdG9yKGVsZW1lbnQsIGNvbmZpZykgewogICAgICBzdXBlcihlbGVtZW50LCBjb25maWcpOyAvLyB0aGlzLl9lbGVtZW50IGlzIHRoZSBvYnNlcnZhYmxlc0NvbnRhaW5lciBhbmQgY29uZmlnLnRhcmdldCB0aGUgbWVudSBsaW5rcyB3cmFwcGVyCgogICAgICB0aGlzLl90YXJnZXRMaW5rcyA9IG5ldyBNYXAoKTsKICAgICAgdGhpcy5fb2JzZXJ2YWJsZVNlY3Rpb25zID0gbmV3IE1hcCgpOwogICAgICB0aGlzLl9yb290RWxlbWVudCA9IGdldENvbXB1dGVkU3R5bGUodGhpcy5fZWxlbWVudCkub3ZlcmZsb3dZID09PSAndmlzaWJsZScgPyBudWxsIDogdGhpcy5fZWxlbWVudDsKICAgICAgdGhpcy5fYWN0aXZlVGFyZ2V0ID0gbnVsbDsKICAgICAgdGhpcy5fb2JzZXJ2ZXIgPSBudWxsOwogICAgICB0aGlzLl9wcmV2aW91c1Njcm9sbERhdGEgPSB7CiAgICAgICAgdmlzaWJsZUVudHJ5VG9wOiAwLAogICAgICAgIHBhcmVudFNjcm9sbFRvcDogMAogICAgICB9OwogICAgICB0aGlzLnJlZnJlc2goKTsgLy8gaW5pdGlhbGl6ZQogICAgfSAvLyBHZXR0ZXJzCgoKICAgIHN0YXRpYyBnZXQgRGVmYXVsdCgpIHsKICAgICAgcmV0dXJuIERlZmF1bHQ7CiAgICB9CgogICAgc3RhdGljIGdldCBEZWZhdWx0VHlwZSgpIHsKICAgICAgcmV0dXJuIERlZmF1bHRUeXBlOwogICAgfQoKICAgIHN0YXRpYyBnZXQgTkFNRSgpIHsKICAgICAgcmV0dXJuIE5BTUU7CiAgICB9IC8vIFB1YmxpYwoKCiAgICByZWZyZXNoKCkgewogICAgICB0aGlzLl9pbml0aWFsaXplVGFyZ2V0c0FuZE9ic2VydmFibGVzKCk7CgogICAgICB0aGlzLl9tYXliZUVuYWJsZVNtb290aFNjcm9sbCgpOwoKICAgICAgaWYgKHRoaXMuX29ic2VydmVyKSB7CiAgICAgICAgdGhpcy5fb2JzZXJ2ZXIuZGlzY29ubmVjdCgpOwogICAgICB9IGVsc2UgewogICAgICAgIHRoaXMuX29ic2VydmVyID0gdGhpcy5fZ2V0TmV3T2JzZXJ2ZXIoKTsKICAgICAgfQoKICAgICAgZm9yIChjb25zdCBzZWN0aW9uIG9mIHRoaXMuX29ic2VydmFibGVTZWN0aW9ucy52YWx1ZXMoKSkgewogICAgICAgIHRoaXMuX29ic2VydmVyLm9ic2VydmUoc2VjdGlvbik7CiAgICAgIH0KICAgIH0KCiAgICBkaXNwb3NlKCkgewogICAgICB0aGlzLl9vYnNlcnZlci5kaXNjb25uZWN0KCk7CgogICAgICBzdXBlci5kaXNwb3NlKCk7CiAgICB9IC8vIFByaXZhdGUKCgogICAgX2NvbmZpZ0FmdGVyTWVyZ2UoY29uZmlnKSB7CiAgICAgIC8vIFRPRE86IG9uIHY2IHRhcmdldCBzaG91bGQgYmUgZ2l2ZW4gZXhwbGljaXRseSAmIHJlbW92ZSB0aGUge3RhcmdldDogJ3NzLXRhcmdldCd9IGNhc2UKICAgICAgY29uZmlnLnRhcmdldCA9IGluZGV4LmdldEVsZW1lbnQoY29uZmlnLnRhcmdldCkgfHwgZG9jdW1lbnQuYm9keTsgLy8gVE9ETzogdjYgT25seSBmb3IgYmFja3dhcmRzIGNvbXBhdGliaWxpdHkgcmVhc29ucy4gVXNlIHJvb3RNYXJnaW4gb25seQoKICAgICAgY29uZmlnLnJvb3RNYXJnaW4gPSBjb25maWcub2Zmc2V0ID8gYCR7Y29uZmlnLm9mZnNldH1weCAwcHggLTMwJWAgOiBjb25maWcucm9vdE1hcmdpbjsKCiAgICAgIGlmICh0eXBlb2YgY29uZmlnLnRocmVzaG9sZCA9PT0gJ3N0cmluZycpIHsKICAgICAgICBjb25maWcudGhyZXNob2xkID0gY29uZmlnLnRocmVzaG9sZC5zcGxpdCgnLCcpLm1hcCh2YWx1ZSA9PiBOdW1iZXIucGFyc2VGbG9hdCh2YWx1ZSkpOwogICAgICB9CgogICAgICByZXR1cm4gY29uZmlnOwogICAgfQoKICAgIF9tYXliZUVuYWJsZVNtb290aFNjcm9sbCgpIHsKICAgICAgaWYgKCF0aGlzLl9jb25maWcuc21vb3RoU2Nyb2xsKSB7CiAgICAgICAgcmV0dXJuOwogICAgICB9IC8vIHVucmVnaXN0ZXIgYW55IHByZXZpb3VzIGxpc3RlbmVycwoKCiAgICAgIEV2ZW50SGFuZGxlcl9fZGVmYXVsdC5kZWZhdWx0Lm9mZih0aGlzLl9jb25maWcudGFyZ2V0LCBFVkVOVF9DTElDSyk7CiAgICAgIEV2ZW50SGFuZGxlcl9fZGVmYXVsdC5kZWZhdWx0Lm9uKHRoaXMuX2NvbmZpZy50YXJnZXQsIEVWRU5UX0NMSUNLLCBTRUxFQ1RPUl9UQVJHRVRfTElOS1MsIGV2ZW50ID0+IHsKICAgICAgICBjb25zdCBvYnNlcnZhYmxlU2VjdGlvbiA9IHRoaXMuX29ic2VydmFibGVTZWN0aW9ucy5nZXQoZXZlbnQudGFyZ2V0Lmhhc2gpOwoKICAgICAgICBpZiAob2JzZXJ2YWJsZVNlY3Rpb24pIHsKICAgICAgICAgIGV2ZW50LnByZXZlbnREZWZhdWx0KCk7CiAgICAgICAgICBjb25zdCByb290ID0gdGhpcy5fcm9vdEVsZW1lbnQgfHwgd2luZG93OwogICAgICAgICAgY29uc3QgaGVpZ2h0ID0gb2JzZXJ2YWJsZVNlY3Rpb24ub2Zmc2V0VG9wIC0gdGhpcy5fZWxlbWVudC5vZmZzZXRUb3A7CgogICAgICAgICAgaWYgKHJvb3Quc2Nyb2xsVG8pIHsKICAgICAgICAgICAgcm9vdC5zY3JvbGxUbyh7CiAgICAgICAgICAgICAgdG9wOiBoZWlnaHQsCiAgICAgICAgICAgICAgYmVoYXZpb3I6ICdzbW9vdGgnCiAgICAgICAgICAgIH0pOwogICAgICAgICAgICByZXR1cm47CiAgICAgICAgICB9IC8vIENocm9tZSA2MCBkb2Vzbid0IHN1cHBvcnQgYHNjcm9sbFRvYAoKCiAgICAgICAgICByb290LnNjcm9sbFRvcCA9IGhlaWdodDsKICAgICAgICB9CiAgICAgIH0pOwogICAgfQoKICAgIF9nZXROZXdPYnNlcnZlcigpIHsKICAgICAgY29uc3Qgb3B0aW9ucyA9IHsKICAgICAgICByb290OiB0aGlzLl9yb290RWxlbWVudCwKICAgICAgICB0aHJlc2hvbGQ6IHRoaXMuX2NvbmZpZy50aHJlc2hvbGQsCiAgICAgICAgcm9vdE1hcmdpbjogdGhpcy5fY29uZmlnLnJvb3RNYXJnaW4KICAgICAgfTsKICAgICAgcmV0dXJuIG5ldyBJbnRlcnNlY3Rpb25PYnNlcnZlcihlbnRyaWVzID0+IHRoaXMuX29ic2VydmVyQ2FsbGJhY2soZW50cmllcyksIG9wdGlvbnMpOwogICAgfSAvLyBUaGUgbG9naWMgb2Ygc2VsZWN0aW9uCgoKICAgIF9vYnNlcnZlckNhbGxiYWNrKGVudHJpZXMpIHsKICAgICAgY29uc3QgdGFyZ2V0RWxlbWVudCA9IGVudHJ5ID0+IHRoaXMuX3RhcmdldExpbmtzLmdldChgIyR7ZW50cnkudGFyZ2V0LmlkfWApOwoKICAgICAgY29uc3QgYWN0aXZhdGUgPSBlbnRyeSA9PiB7CiAgICAgICAgdGhpcy5fcHJldmlvdXNTY3JvbGxEYXRhLnZpc2libGVFbnRyeVRvcCA9IGVudHJ5LnRhcmdldC5vZmZzZXRUb3A7CgogICAgICAgIHRoaXMuX3Byb2Nlc3ModGFyZ2V0RWxlbWVudChlbnRyeSkpOwogICAgICB9OwoKICAgICAgY29uc3QgcGFyZW50U2Nyb2xsVG9wID0gKHRoaXMuX3Jvb3RFbGVtZW50IHx8IGRvY3VtZW50LmRvY3VtZW50RWxlbWVudCkuc2Nyb2xsVG9wOwogICAgICBjb25zdCB1c2VyU2Nyb2xsc0Rvd24gPSBwYXJlbnRTY3JvbGxUb3AgPj0gdGhpcy5fcHJldmlvdXNTY3JvbGxEYXRhLnBhcmVudFNjcm9sbFRvcDsKICAgICAgdGhpcy5fcHJldmlvdXNTY3JvbGxEYXRhLnBhcmVudFNjcm9sbFRvcCA9IHBhcmVudFNjcm9sbFRvcDsKCiAgICAgIGZvciAoY29uc3QgZW50cnkgb2YgZW50cmllcykgewogICAgICAgIGlmICghZW50cnkuaXNJbnRlcnNlY3RpbmcpIHsKICAgICAgICAgIHRoaXMuX2FjdGl2ZVRhcmdldCA9IG51bGw7CgogICAgICAgICAgdGhpcy5fY2xlYXJBY3RpdmVDbGFzcyh0YXJnZXRFbGVtZW50KGVudHJ5KSk7CgogICAgICAgICAgY29udGludWU7CiAgICAgICAgfQoKICAgICAgICBjb25zdCBlbnRyeUlzTG93ZXJUaGFuUHJldmlvdXMgPSBlbnRyeS50YXJnZXQub2Zmc2V0VG9wID49IHRoaXMuX3ByZXZpb3VzU2Nyb2xsRGF0YS52aXNpYmxlRW50cnlUb3A7IC8vIGlmIHdlIGFyZSBzY3JvbGxpbmcgZG93biwgcGljayB0aGUgYmlnZ2VyIG9mZnNldFRvcAoKICAgICAgICBpZiAodXNlclNjcm9sbHNEb3duICYmIGVudHJ5SXNMb3dlclRoYW5QcmV2aW91cykgewogICAgICAgICAgYWN0aXZhdGUoZW50cnkpOyAvLyBpZiBwYXJlbnQgaXNuJ3Qgc2Nyb2xsZWQsIGxldCdzIGtlZXAgdGhlIGZpcnN0IHZpc2libGUgaXRlbSwgYnJlYWtpbmcgdGhlIGl0ZXJhdGlvbgoKICAgICAgICAgIGlmICghcGFyZW50U2Nyb2xsVG9wKSB7CiAgICAgICAgICAgIHJldHVybjsKICAgICAgICAgIH0KCiAgICAgICAgICBjb250aW51ZTsKICAgICAgICB9IC8vIGlmIHdlIGFyZSBzY3JvbGxpbmcgdXAsIHBpY2sgdGhlIHNtYWxsZXN0IG9mZnNldFRvcAoKCiAgICAgICAgaWYgKCF1c2VyU2Nyb2xsc0Rvd24gJiYgIWVudHJ5SXNMb3dlclRoYW5QcmV2aW91cykgewogICAgICAgICAgYWN0aXZhdGUoZW50cnkpOwogICAgICAgIH0KICAgICAgfQogICAgfQoKICAgIF9pbml0aWFsaXplVGFyZ2V0c0FuZE9ic2VydmFibGVzKCkgewogICAgICB0aGlzLl90YXJnZXRMaW5rcyA9IG5ldyBNYXAoKTsKICAgICAgdGhpcy5fb2JzZXJ2YWJsZVNlY3Rpb25zID0gbmV3IE1hcCgpOwogICAgICBjb25zdCB0YXJnZXRMaW5rcyA9IFNlbGVjdG9yRW5naW5lX19kZWZhdWx0LmRlZmF1bHQuZmluZChTRUxFQ1RPUl9UQVJHRVRfTElOS1MsIHRoaXMuX2NvbmZpZy50YXJnZXQpOwoKICAgICAgZm9yIChjb25zdCBhbmNob3Igb2YgdGFyZ2V0TGlua3MpIHsKICAgICAgICAvLyBlbnN1cmUgdGhhdCB0aGUgYW5jaG9yIGhhcyBhbiBpZCBhbmQgaXMgbm90IGRpc2FibGVkCiAgICAgICAgaWYgKCFhbmNob3IuaGFzaCB8fCBpbmRleC5pc0Rpc2FibGVkKGFuY2hvcikpIHsKICAgICAgICAgIGNvbnRpbnVlOwogICAgICAgIH0KCiAgICAgICAgY29uc3Qgb2JzZXJ2YWJsZVNlY3Rpb24gPSBTZWxlY3RvckVuZ2luZV9fZGVmYXVsdC5kZWZhdWx0LmZpbmRPbmUoYW5jaG9yLmhhc2gsIHRoaXMuX2VsZW1lbnQpOyAvLyBlbnN1cmUgdGhhdCB0aGUgb2JzZXJ2YWJsZVNlY3Rpb24gZXhpc3RzICYgaXMgdmlzaWJsZQoKICAgICAgICBpZiAoaW5kZXguaXNWaXNpYmxlKG9ic2VydmFibGVTZWN0aW9uKSkgewogICAgICAgICAgdGhpcy5fdGFyZ2V0TGlua3Muc2V0KGFuY2hvci5oYXNoLCBhbmNob3IpOwoKICAgICAgICAgIHRoaXMuX29ic2VydmFibGVTZWN0aW9ucy5zZXQoYW5jaG9yLmhhc2gsIG9ic2VydmFibGVTZWN0aW9uKTsKICAgICAgICB9CiAgICAgIH0KICAgIH0KCiAgICBfcHJvY2Vzcyh0YXJnZXQpIHsKICAgICAgaWYgKHRoaXMuX2FjdGl2ZVRhcmdldCA9PT0gdGFyZ2V0KSB7CiAgICAgICAgcmV0dXJuOwogICAgICB9CgogICAgICB0aGlzLl9jbGVhckFjdGl2ZUNsYXNzKHRoaXMuX2NvbmZpZy50YXJnZXQpOwoKICAgICAgdGhpcy5fYWN0aXZlVGFyZ2V0ID0gdGFyZ2V0OwogICAgICB0YXJnZXQuY2xhc3NMaXN0LmFkZChDTEFTU19OQU1FX0FDVElWRSk7CgogICAgICB0aGlzLl9hY3RpdmF0ZVBhcmVudHModGFyZ2V0KTsKCiAgICAgIEV2ZW50SGFuZGxlcl9fZGVmYXVsdC5kZWZhdWx0LnRyaWdnZXIodGhpcy5fZWxlbWVudCwgRVZFTlRfQUNUSVZBVEUsIHsKICAgICAgICByZWxhdGVkVGFyZ2V0OiB0YXJnZXQKICAgICAgfSk7CiAgICB9CgogICAgX2FjdGl2YXRlUGFyZW50cyh0YXJnZXQpIHsKICAgICAgLy8gQWN0aXZhdGUgZHJvcGRvd24gcGFyZW50cwogICAgICBpZiAodGFyZ2V0LmNsYXNzTGlzdC5jb250YWlucyhDTEFTU19OQU1FX0RST1BET1dOX0lURU0pKSB7CiAgICAgICAgU2VsZWN0b3JFbmdpbmVfX2RlZmF1bHQuZGVmYXVsdC5maW5kT25lKFNFTEVDVE9SX0RST1BET1dOX1RPR0dMRSwgdGFyZ2V0LmNsb3Nlc3QoU0VMRUNUT1JfRFJPUERPV04pKS5jbGFzc0xpc3QuYWRkKENMQVNTX05BTUVfQUNUSVZFKTsKICAgICAgICByZXR1cm47CiAgICAgIH0KCiAgICAgIGZvciAoY29uc3QgbGlzdEdyb3VwIG9mIFNlbGVjdG9yRW5naW5lX19kZWZhdWx0LmRlZmF1bHQucGFyZW50cyh0YXJnZXQsIFNFTEVDVE9SX05BVl9MSVNUX0dST1VQKSkgewogICAgICAgIC8vIFNldCB0cmlnZ2VyZWQgbGlua3MgcGFyZW50cyBhcyBhY3RpdmUKICAgICAgICAvLyBXaXRoIGJvdGggPHVsPiBhbmQgPG5hdj4gbWFya3VwIGEgcGFyZW50IGlzIHRoZSBwcmV2aW91cyBzaWJsaW5nIG9mIGFueSBuYXYgYW5jZXN0b3IKICAgICAgICBmb3IgKGNvbnN0IGl0ZW0gb2YgU2VsZWN0b3JFbmdpbmVfX2RlZmF1bHQuZGVmYXVsdC5wcmV2KGxpc3RHcm91cCwgU0VMRUNUT1JfTElOS19JVEVNUykpIHsKICAgICAgICAgIGl0ZW0uY2xhc3NMaXN0LmFkZChDTEFTU19OQU1FX0FDVElWRSk7CiAgICAgICAgfQogICAgICB9CiAgICB9CgogICAgX2NsZWFyQWN0aXZlQ2xhc3MocGFyZW50KSB7CiAgICAgIHBhcmVudC5jbGFzc0xpc3QucmVtb3ZlKENMQVNTX05BTUVfQUNUSVZFKTsKICAgICAgY29uc3QgYWN0aXZlTm9kZXMgPSBTZWxlY3RvckVuZ2luZV9fZGVmYXVsdC5kZWZhdWx0LmZpbmQoYCR7U0VMRUNUT1JfVEFSR0VUX0xJTktTfS4ke0NMQVNTX05BTUVfQUNUSVZFfWAsIHBhcmVudCk7CgogICAgICBmb3IgKGNvbnN0IG5vZGUgb2YgYWN0aXZlTm9kZXMpIHsKICAgICAgICBub2RlLmNsYXNzTGlzdC5yZW1vdmUoQ0xBU1NfTkFNRV9BQ1RJVkUpOwogICAgICB9CiAgICB9IC8vIFN0YXRpYwoKCiAgICBzdGF0aWMgalF1ZXJ5SW50ZXJmYWNlKGNvbmZpZykgewogICAgICByZXR1cm4gdGhpcy5lYWNoKGZ1bmN0aW9uICgpIHsKICAgICAgICBjb25zdCBkYXRhID0gU2Nyb2xsU3B5LmdldE9yQ3JlYXRlSW5zdGFuY2UodGhpcywgY29uZmlnKTsKCiAgICAgICAgaWYgKHR5cGVvZiBjb25maWcgIT09ICdzdHJpbmcnKSB7CiAgICAgICAgICByZXR1cm47CiAgICAgICAgfQoKICAgICAgICBpZiAoZGF0YVtjb25maWddID09PSB1bmRlZmluZWQgfHwgY29uZmlnLnN0YXJ0c1dpdGgoJ18nKSB8fCBjb25maWcgPT09ICdjb25zdHJ1Y3RvcicpIHsKICAgICAgICAgIHRocm93IG5ldyBUeXBlRXJyb3IoYE5vIG1ldGhvZCBuYW1lZCAiJHtjb25maWd9ImApOwogICAgICAgIH0KCiAgICAgICAgZGF0YVtjb25maWddKCk7CiAgICAgIH0pOwogICAgfQoKICB9CiAgLyoqCiAgICogRGF0YSBBUEkgaW1wbGVtZW50YXRpb24KICAgKi8KCgogIEV2ZW50SGFuZGxlcl9fZGVmYXVsdC5kZWZhdWx0Lm9uKHdpbmRvdywgRVZFTlRfTE9BRF9EQVRBX0FQSSwgKCkgPT4gewogICAgZm9yIChjb25zdCBzcHkgb2YgU2VsZWN0b3JFbmdpbmVfX2RlZmF1bHQuZGVmYXVsdC5maW5kKFNFTEVDVE9SX0RBVEFfU1BZKSkgewogICAgICBTY3JvbGxTcHkuZ2V0T3JDcmVhdGVJbnN0YW5jZShzcHkpOwogICAgfQogIH0pOwogIC8qKgogICAqIGpRdWVyeQogICAqLwoKICBpbmRleC5kZWZpbmVKUXVlcnlQbHVnaW4oU2Nyb2xsU3B5KTsKCiAgcmV0dXJuIFNjcm9sbFNweTsKCn0pKTsKLy8jIHNvdXJjZU1hcHBpbmdVUkw9c2Nyb2xsc3B5LmpzLm1hcAoKCi8qKiovIH0pLAoKLyoqKi8gIi4vbm9kZV9tb2R1bGVzL2Jvb3RzdHJhcC9qcy9kaXN0L3RhYi5qcyI6Ci8qISoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqISpcCiAgISoqKiAuL25vZGVfbW9kdWxlcy9ib290c3RyYXAvanMvZGlzdC90YWIuanMgKioqIQogIFwqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKi8KLyoqKi8gKGZ1bmN0aW9uKG1vZHVsZSwgX191bnVzZWRfd2VicGFja19leHBvcnRzLCBfX3dlYnBhY2tfcmVxdWlyZV9fKSB7CgovKiEKICAqIEJvb3RzdHJhcCB0YWIuanMgdjUuMi4zIChodHRwczovL2dldGJvb3RzdHJhcC5jb20vKQogICogQ29weXJpZ2h0IDIwMTEtMjAyMiBUaGUgQm9vdHN0cmFwIEF1dGhvcnMgKGh0dHBzOi8vZ2l0aHViLmNvbS90d2JzL2Jvb3RzdHJhcC9ncmFwaHMvY29udHJpYnV0b3JzKQogICogTGljZW5zZWQgdW5kZXIgTUlUIChodHRwczovL2dpdGh1Yi5jb20vdHdicy9ib290c3RyYXAvYmxvYi9tYWluL0xJQ0VOU0UpCiAgKi8KKGZ1bmN0aW9uIChnbG9iYWwsIGZhY3RvcnkpIHsKICAgdHJ1ZSA/IG1vZHVsZS5leHBvcnRzID0gZmFjdG9yeShfX3dlYnBhY2tfcmVxdWlyZV9fKC8qISAuL3V0aWwvaW5kZXggKi8gIi4vbm9kZV9tb2R1bGVzL2Jvb3RzdHJhcC9qcy9kaXN0L3V0aWwvaW5kZXguanMiKSwgX193ZWJwYWNrX3JlcXVpcmVfXygvKiEgLi9kb20vZXZlbnQtaGFuZGxlciAqLyAiLi9ub2RlX21vZHVsZXMvYm9vdHN0cmFwL2pzL2Rpc3QvZG9tL2V2ZW50LWhhbmRsZXIuanMiKSwgX193ZWJwYWNrX3JlcXVpcmVfXygvKiEgLi9kb20vc2VsZWN0b3ItZW5naW5lICovICIuL25vZGVfbW9kdWxlcy9ib290c3RyYXAvanMvZGlzdC9kb20vc2VsZWN0b3ItZW5naW5lLmpzIiksIF9fd2VicGFja19yZXF1aXJlX18oLyohIC4vYmFzZS1jb21wb25lbnQgKi8gIi4vbm9kZV9tb2R1bGVzL2Jvb3RzdHJhcC9qcy9kaXN0L2Jhc2UtY29tcG9uZW50LmpzIikpIDoKICAwOwp9KSh0aGlzLCAoZnVuY3Rpb24gKGluZGV4LCBFdmVudEhhbmRsZXIsIFNlbGVjdG9yRW5naW5lLCBCYXNlQ29tcG9uZW50KSB7ICd1c2Ugc3RyaWN0JzsKCiAgY29uc3QgX2ludGVyb3BEZWZhdWx0TGVnYWN5ID0gZSA9PiBlICYmIHR5cGVvZiBlID09PSAnb2JqZWN0JyAmJiAnZGVmYXVsdCcgaW4gZSA/IGUgOiB7IGRlZmF1bHQ6IGUgfTsKCiAgY29uc3QgRXZlbnRIYW5kbGVyX19kZWZhdWx0ID0gLyojX19QVVJFX18qL19pbnRlcm9wRGVmYXVsdExlZ2FjeShFdmVudEhhbmRsZXIpOwogIGNvbnN0IFNlbGVjdG9yRW5naW5lX19kZWZhdWx0ID0gLyojX19QVVJFX18qL19pbnRlcm9wRGVmYXVsdExlZ2FjeShTZWxlY3RvckVuZ2luZSk7CiAgY29uc3QgQmFzZUNvbXBvbmVudF9fZGVmYXVsdCA9IC8qI19fUFVSRV9fKi9faW50ZXJvcERlZmF1bHRMZWdhY3koQmFzZUNvbXBvbmVudCk7CgogIC8qKgogICAqIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tCiAgICogQm9vdHN0cmFwICh2NS4yLjMpOiB0YWIuanMKICAgKiBMaWNlbnNlZCB1bmRlciBNSVQgKGh0dHBzOi8vZ2l0aHViLmNvbS90d2JzL2Jvb3RzdHJhcC9ibG9iL21haW4vTElDRU5TRSkKICAgKiAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLQogICAqLwogIC8qKgogICAqIENvbnN0YW50cwogICAqLwoKICBjb25zdCBOQU1FID0gJ3RhYic7CiAgY29uc3QgREFUQV9LRVkgPSAnYnMudGFiJzsKICBjb25zdCBFVkVOVF9LRVkgPSBgLiR7REFUQV9LRVl9YDsKICBjb25zdCBFVkVOVF9ISURFID0gYGhpZGUke0VWRU5UX0tFWX1gOwogIGNvbnN0IEVWRU5UX0hJRERFTiA9IGBoaWRkZW4ke0VWRU5UX0tFWX1gOwogIGNvbnN0IEVWRU5UX1NIT1cgPSBgc2hvdyR7RVZFTlRfS0VZfWA7CiAgY29uc3QgRVZFTlRfU0hPV04gPSBgc2hvd24ke0VWRU5UX0tFWX1gOwogIGNvbnN0IEVWRU5UX0NMSUNLX0RBVEFfQVBJID0gYGNsaWNrJHtFVkVOVF9LRVl9YDsKICBjb25zdCBFVkVOVF9LRVlET1dOID0gYGtleWRvd24ke0VWRU5UX0tFWX1gOwogIGNvbnN0IEVWRU5UX0xPQURfREFUQV9BUEkgPSBgbG9hZCR7RVZFTlRfS0VZfWA7CiAgY29uc3QgQVJST1dfTEVGVF9LRVkgPSAnQXJyb3dMZWZ0JzsKICBjb25zdCBBUlJPV19SSUdIVF9LRVkgPSAnQXJyb3dSaWdodCc7CiAgY29uc3QgQVJST1dfVVBfS0VZID0gJ0Fycm93VXAnOwogIGNvbnN0IEFSUk9XX0RPV05fS0VZID0gJ0Fycm93RG93bic7CiAgY29uc3QgQ0xBU1NfTkFNRV9BQ1RJVkUgPSAnYWN0aXZlJzsKICBjb25zdCBDTEFTU19OQU1FX0ZBREUgPSAnZmFkZSc7CiAgY29uc3QgQ0xBU1NfTkFNRV9TSE9XID0gJ3Nob3cnOwogIGNvbnN0IENMQVNTX0RST1BET1dOID0gJ2Ryb3Bkb3duJzsKICBjb25zdCBTRUxFQ1RPUl9EUk9QRE9XTl9UT0dHTEUgPSAnLmRyb3Bkb3duLXRvZ2dsZSc7CiAgY29uc3QgU0VMRUNUT1JfRFJPUERPV05fTUVOVSA9ICcuZHJvcGRvd24tbWVudSc7CiAgY29uc3QgTk9UX1NFTEVDVE9SX0RST1BET1dOX1RPR0dMRSA9ICc6bm90KC5kcm9wZG93bi10b2dnbGUpJzsKICBjb25zdCBTRUxFQ1RPUl9UQUJfUEFORUwgPSAnLmxpc3QtZ3JvdXAsIC5uYXYsIFtyb2xlPSJ0YWJsaXN0Il0nOwogIGNvbnN0IFNFTEVDVE9SX09VVEVSID0gJy5uYXYtaXRlbSwgLmxpc3QtZ3JvdXAtaXRlbSc7CiAgY29uc3QgU0VMRUNUT1JfSU5ORVIgPSBgLm5hdi1saW5rJHtOT1RfU0VMRUNUT1JfRFJPUERPV05fVE9HR0xFfSwgLmxpc3QtZ3JvdXAtaXRlbSR7Tk9UX1NFTEVDVE9SX0RST1BET1dOX1RPR0dMRX0sIFtyb2xlPSJ0YWIiXSR7Tk9UX1NFTEVDVE9SX0RST1BET1dOX1RPR0dMRX1gOwogIGNvbnN0IFNFTEVDVE9SX0RBVEFfVE9HR0xFID0gJ1tkYXRhLWJzLXRvZ2dsZT0idGFiIl0sIFtkYXRhLWJzLXRvZ2dsZT0icGlsbCJdLCBbZGF0YS1icy10b2dnbGU9Imxpc3QiXSc7IC8vIHRvZG86djY6IGNvdWxkIGJlIG9ubHkgYHRhYmAKCiAgY29uc3QgU0VMRUNUT1JfSU5ORVJfRUxFTSA9IGAke1NFTEVDVE9SX0lOTkVSfSwgJHtTRUxFQ1RPUl9EQVRBX1RPR0dMRX1gOwogIGNvbnN0IFNFTEVDVE9SX0RBVEFfVE9HR0xFX0FDVElWRSA9IGAuJHtDTEFTU19OQU1FX0FDVElWRX1bZGF0YS1icy10b2dnbGU9InRhYiJdLCAuJHtDTEFTU19OQU1FX0FDVElWRX1bZGF0YS1icy10b2dnbGU9InBpbGwiXSwgLiR7Q0xBU1NfTkFNRV9BQ1RJVkV9W2RhdGEtYnMtdG9nZ2xlPSJsaXN0Il1gOwogIC8qKgogICAqIENsYXNzIGRlZmluaXRpb24KICAgKi8KCiAgY2xhc3MgVGFiIGV4dGVuZHMgQmFzZUNvbXBvbmVudF9fZGVmYXVsdC5kZWZhdWx0IHsKICAgIGNvbnN0cnVjdG9yKGVsZW1lbnQpIHsKICAgICAgc3VwZXIoZWxlbWVudCk7CiAgICAgIHRoaXMuX3BhcmVudCA9IHRoaXMuX2VsZW1lbnQuY2xvc2VzdChTRUxFQ1RPUl9UQUJfUEFORUwpOwoKICAgICAgaWYgKCF0aGlzLl9wYXJlbnQpIHsKICAgICAgICByZXR1cm47IC8vIHRvZG86IHNob3VsZCBUaHJvdyBleGNlcHRpb24gb24gdjYKICAgICAgICAvLyB0aHJvdyBuZXcgVHlwZUVycm9yKGAke2VsZW1lbnQub3V0ZXJIVE1MfSBoYXMgbm90IGEgdmFsaWQgcGFyZW50ICR7U0VMRUNUT1JfSU5ORVJfRUxFTX1gKQogICAgICB9IC8vIFNldCB1cCBpbml0aWFsIGFyaWEgYXR0cmlidXRlcwoKCiAgICAgIHRoaXMuX3NldEluaXRpYWxBdHRyaWJ1dGVzKHRoaXMuX3BhcmVudCwgdGhpcy5fZ2V0Q2hpbGRyZW4oKSk7CgogICAgICBFdmVudEhhbmRsZXJfX2RlZmF1bHQuZGVmYXVsdC5vbih0aGlzLl9lbGVtZW50LCBFVkVOVF9LRVlET1dOLCBldmVudCA9PiB0aGlzLl9rZXlkb3duKGV2ZW50KSk7CiAgICB9IC8vIEdldHRlcnMKCgogICAgc3RhdGljIGdldCBOQU1FKCkgewogICAgICByZXR1cm4gTkFNRTsKICAgIH0gLy8gUHVibGljCgoKICAgIHNob3coKSB7CiAgICAgIC8vIFNob3dzIHRoaXMgZWxlbSBhbmQgZGVhY3RpdmF0ZSB0aGUgYWN0aXZlIHNpYmxpbmcgaWYgZXhpc3RzCiAgICAgIGNvbnN0IGlubmVyRWxlbSA9IHRoaXMuX2VsZW1lbnQ7CgogICAgICBpZiAodGhpcy5fZWxlbUlzQWN0aXZlKGlubmVyRWxlbSkpIHsKICAgICAgICByZXR1cm47CiAgICAgIH0gLy8gU2VhcmNoIGZvciBhY3RpdmUgdGFiIG9uIHNhbWUgcGFyZW50IHRvIGRlYWN0aXZhdGUgaXQKCgogICAgICBjb25zdCBhY3RpdmUgPSB0aGlzLl9nZXRBY3RpdmVFbGVtKCk7CgogICAgICBjb25zdCBoaWRlRXZlbnQgPSBhY3RpdmUgPyBFdmVudEhhbmRsZXJfX2RlZmF1bHQuZGVmYXVsdC50cmlnZ2VyKGFjdGl2ZSwgRVZFTlRfSElERSwgewogICAgICAgIHJlbGF0ZWRUYXJnZXQ6IGlubmVyRWxlbQogICAgICB9KSA6IG51bGw7CiAgICAgIGNvbnN0IHNob3dFdmVudCA9IEV2ZW50SGFuZGxlcl9fZGVmYXVsdC5kZWZhdWx0LnRyaWdnZXIoaW5uZXJFbGVtLCBFVkVOVF9TSE9XLCB7CiAgICAgICAgcmVsYXRlZFRhcmdldDogYWN0aXZlCiAgICAgIH0pOwoKICAgICAgaWYgKHNob3dFdmVudC5kZWZhdWx0UHJldmVudGVkIHx8IGhpZGVFdmVudCAmJiBoaWRlRXZlbnQuZGVmYXVsdFByZXZlbnRlZCkgewogICAgICAgIHJldHVybjsKICAgICAgfQoKICAgICAgdGhpcy5fZGVhY3RpdmF0ZShhY3RpdmUsIGlubmVyRWxlbSk7CgogICAgICB0aGlzLl9hY3RpdmF0ZShpbm5lckVsZW0sIGFjdGl2ZSk7CiAgICB9IC8vIFByaXZhdGUKCgogICAgX2FjdGl2YXRlKGVsZW1lbnQsIHJlbGF0ZWRFbGVtKSB7CiAgICAgIGlmICghZWxlbWVudCkgewogICAgICAgIHJldHVybjsKICAgICAgfQoKICAgICAgZWxlbWVudC5jbGFzc0xpc3QuYWRkKENMQVNTX05BTUVfQUNUSVZFKTsKCiAgICAgIHRoaXMuX2FjdGl2YXRlKGluZGV4LmdldEVsZW1lbnRGcm9tU2VsZWN0b3IoZWxlbWVudCkpOyAvLyBTZWFyY2ggYW5kIGFjdGl2YXRlL3Nob3cgdGhlIHByb3BlciBzZWN0aW9uCgoKICAgICAgY29uc3QgY29tcGxldGUgPSAoKSA9PiB7CiAgICAgICAgaWYgKGVsZW1lbnQuZ2V0QXR0cmlidXRlKCdyb2xlJykgIT09ICd0YWInKSB7CiAgICAgICAgICBlbGVtZW50LmNsYXNzTGlzdC5hZGQoQ0xBU1NfTkFNRV9TSE9XKTsKICAgICAgICAgIHJldHVybjsKICAgICAgICB9CgogICAgICAgIGVsZW1lbnQucmVtb3ZlQXR0cmlidXRlKCd0YWJpbmRleCcpOwogICAgICAgIGVsZW1lbnQuc2V0QXR0cmlidXRlKCdhcmlhLXNlbGVjdGVkJywgdHJ1ZSk7CgogICAgICAgIHRoaXMuX3RvZ2dsZURyb3BEb3duKGVsZW1lbnQsIHRydWUpOwoKICAgICAgICBFdmVudEhhbmRsZXJfX2RlZmF1bHQuZGVmYXVsdC50cmlnZ2VyKGVsZW1lbnQsIEVWRU5UX1NIT1dOLCB7CiAgICAgICAgICByZWxhdGVkVGFyZ2V0OiByZWxhdGVkRWxlbQogICAgICAgIH0pOwogICAgICB9OwoKICAgICAgdGhpcy5fcXVldWVDYWxsYmFjayhjb21wbGV0ZSwgZWxlbWVudCwgZWxlbWVudC5jbGFzc0xpc3QuY29udGFpbnMoQ0xBU1NfTkFNRV9GQURFKSk7CiAgICB9CgogICAgX2RlYWN0aXZhdGUoZWxlbWVudCwgcmVsYXRlZEVsZW0pIHsKICAgICAgaWYgKCFlbGVtZW50KSB7CiAgICAgICAgcmV0dXJuOwogICAgICB9CgogICAgICBlbGVtZW50LmNsYXNzTGlzdC5yZW1vdmUoQ0xBU1NfTkFNRV9BQ1RJVkUpOwogICAgICBlbGVtZW50LmJsdXIoKTsKCiAgICAgIHRoaXMuX2RlYWN0aXZhdGUoaW5kZXguZ2V0RWxlbWVudEZyb21TZWxlY3RvcihlbGVtZW50KSk7IC8vIFNlYXJjaCBhbmQgZGVhY3RpdmF0ZSB0aGUgc2hvd24gc2VjdGlvbiB0b28KCgogICAgICBjb25zdCBjb21wbGV0ZSA9ICgpID0+IHsKICAgICAgICBpZiAoZWxlbWVudC5nZXRBdHRyaWJ1dGUoJ3JvbGUnKSAhPT0gJ3RhYicpIHsKICAgICAgICAgIGVsZW1lbnQuY2xhc3NMaXN0LnJlbW92ZShDTEFTU19OQU1FX1NIT1cpOwogICAgICAgICAgcmV0dXJuOwogICAgICAgIH0KCiAgICAgICAgZWxlbWVudC5zZXRBdHRyaWJ1dGUoJ2FyaWEtc2VsZWN0ZWQnLCBmYWxzZSk7CiAgICAgICAgZWxlbWVudC5zZXRBdHRyaWJ1dGUoJ3RhYmluZGV4JywgJy0xJyk7CgogICAgICAgIHRoaXMuX3RvZ2dsZURyb3BEb3duKGVsZW1lbnQsIGZhbHNlKTsKCiAgICAgICAgRXZlbnRIYW5kbGVyX19kZWZhdWx0LmRlZmF1bHQudHJpZ2dlcihlbGVtZW50LCBFVkVOVF9ISURERU4sIHsKICAgICAgICAgIHJlbGF0ZWRUYXJnZXQ6IHJlbGF0ZWRFbGVtCiAgICAgICAgfSk7CiAgICAgIH07CgogICAgICB0aGlzLl9xdWV1ZUNhbGxiYWNrKGNvbXBsZXRlLCBlbGVtZW50LCBlbGVtZW50LmNsYXNzTGlzdC5jb250YWlucyhDTEFTU19OQU1FX0ZBREUpKTsKICAgIH0KCiAgICBfa2V5ZG93bihldmVudCkgewogICAgICBpZiAoIVtBUlJPV19MRUZUX0tFWSwgQVJST1dfUklHSFRfS0VZLCBBUlJPV19VUF9LRVksIEFSUk9XX0RPV05fS0VZXS5pbmNsdWRlcyhldmVudC5rZXkpKSB7CiAgICAgICAgcmV0dXJuOwogICAgICB9CgogICAgICBldmVudC5zdG9wUHJvcGFnYXRpb24oKTsgLy8gc3RvcFByb3BhZ2F0aW9uL3ByZXZlbnREZWZhdWx0IGJvdGggYWRkZWQgdG8gc3VwcG9ydCB1cC9kb3duIGtleXMgd2l0aG91dCBzY3JvbGxpbmcgdGhlIHBhZ2UKCiAgICAgIGV2ZW50LnByZXZlbnREZWZhdWx0KCk7CiAgICAgIGNvbnN0IGlzTmV4dCA9IFtBUlJPV19SSUdIVF9LRVksIEFSUk9XX0RPV05fS0VZXS5pbmNsdWRlcyhldmVudC5rZXkpOwogICAgICBjb25zdCBuZXh0QWN0aXZlRWxlbWVudCA9IGluZGV4LmdldE5leHRBY3RpdmVFbGVtZW50KHRoaXMuX2dldENoaWxkcmVuKCkuZmlsdGVyKGVsZW1lbnQgPT4gIWluZGV4LmlzRGlzYWJsZWQoZWxlbWVudCkpLCBldmVudC50YXJnZXQsIGlzTmV4dCwgdHJ1ZSk7CgogICAgICBpZiAobmV4dEFjdGl2ZUVsZW1lbnQpIHsKICAgICAgICBuZXh0QWN0aXZlRWxlbWVudC5mb2N1cyh7CiAgICAgICAgICBwcmV2ZW50U2Nyb2xsOiB0cnVlCiAgICAgICAgfSk7CiAgICAgICAgVGFiLmdldE9yQ3JlYXRlSW5zdGFuY2UobmV4dEFjdGl2ZUVsZW1lbnQpLnNob3coKTsKICAgICAgfQogICAgfQoKICAgIF9nZXRDaGlsZHJlbigpIHsKICAgICAgLy8gY29sbGVjdGlvbiBvZiBpbm5lciBlbGVtZW50cwogICAgICByZXR1cm4gU2VsZWN0b3JFbmdpbmVfX2RlZmF1bHQuZGVmYXVsdC5maW5kKFNFTEVDVE9SX0lOTkVSX0VMRU0sIHRoaXMuX3BhcmVudCk7CiAgICB9CgogICAgX2dldEFjdGl2ZUVsZW0oKSB7CiAgICAgIHJldHVybiB0aGlzLl9nZXRDaGlsZHJlbigpLmZpbmQoY2hpbGQgPT4gdGhpcy5fZWxlbUlzQWN0aXZlKGNoaWxkKSkgfHwgbnVsbDsKICAgIH0KCiAgICBfc2V0SW5pdGlhbEF0dHJpYnV0ZXMocGFyZW50LCBjaGlsZHJlbikgewogICAgICB0aGlzLl9zZXRBdHRyaWJ1dGVJZk5vdEV4aXN0cyhwYXJlbnQsICdyb2xlJywgJ3RhYmxpc3QnKTsKCiAgICAgIGZvciAoY29uc3QgY2hpbGQgb2YgY2hpbGRyZW4pIHsKICAgICAgICB0aGlzLl9zZXRJbml0aWFsQXR0cmlidXRlc09uQ2hpbGQoY2hpbGQpOwogICAgICB9CiAgICB9CgogICAgX3NldEluaXRpYWxBdHRyaWJ1dGVzT25DaGlsZChjaGlsZCkgewogICAgICBjaGlsZCA9IHRoaXMuX2dldElubmVyRWxlbWVudChjaGlsZCk7CgogICAgICBjb25zdCBpc0FjdGl2ZSA9IHRoaXMuX2VsZW1Jc0FjdGl2ZShjaGlsZCk7CgogICAgICBjb25zdCBvdXRlckVsZW0gPSB0aGlzLl9nZXRPdXRlckVsZW1lbnQoY2hpbGQpOwoKICAgICAgY2hpbGQuc2V0QXR0cmlidXRlKCdhcmlhLXNlbGVjdGVkJywgaXNBY3RpdmUpOwoKICAgICAgaWYgKG91dGVyRWxlbSAhPT0gY2hpbGQpIHsKICAgICAgICB0aGlzLl9zZXRBdHRyaWJ1dGVJZk5vdEV4aXN0cyhvdXRlckVsZW0sICdyb2xlJywgJ3ByZXNlbnRhdGlvbicpOwogICAgICB9CgogICAgICBpZiAoIWlzQWN0aXZlKSB7CiAgICAgICAgY2hpbGQuc2V0QXR0cmlidXRlKCd0YWJpbmRleCcsICctMScpOwogICAgICB9CgogICAgICB0aGlzLl9zZXRBdHRyaWJ1dGVJZk5vdEV4aXN0cyhjaGlsZCwgJ3JvbGUnLCAndGFiJyk7IC8vIHNldCBhdHRyaWJ1dGVzIHRvIHRoZSByZWxhdGVkIHBhbmVsIHRvbwoKCiAgICAgIHRoaXMuX3NldEluaXRpYWxBdHRyaWJ1dGVzT25UYXJnZXRQYW5lbChjaGlsZCk7CiAgICB9CgogICAgX3NldEluaXRpYWxBdHRyaWJ1dGVzT25UYXJnZXRQYW5lbChjaGlsZCkgewogICAgICBjb25zdCB0YXJnZXQgPSBpbmRleC5nZXRFbGVtZW50RnJvbVNlbGVjdG9yKGNoaWxkKTsKCiAgICAgIGlmICghdGFyZ2V0KSB7CiAgICAgICAgcmV0dXJuOwogICAgICB9CgogICAgICB0aGlzLl9zZXRBdHRyaWJ1dGVJZk5vdEV4aXN0cyh0YXJnZXQsICdyb2xlJywgJ3RhYnBhbmVsJyk7CgogICAgICBpZiAoY2hpbGQuaWQpIHsKICAgICAgICB0aGlzLl9zZXRBdHRyaWJ1dGVJZk5vdEV4aXN0cyh0YXJnZXQsICdhcmlhLWxhYmVsbGVkYnknLCBgIyR7Y2hpbGQuaWR9YCk7CiAgICAgIH0KICAgIH0KCiAgICBfdG9nZ2xlRHJvcERvd24oZWxlbWVudCwgb3BlbikgewogICAgICBjb25zdCBvdXRlckVsZW0gPSB0aGlzLl9nZXRPdXRlckVsZW1lbnQoZWxlbWVudCk7CgogICAgICBpZiAoIW91dGVyRWxlbS5jbGFzc0xpc3QuY29udGFpbnMoQ0xBU1NfRFJPUERPV04pKSB7CiAgICAgICAgcmV0dXJuOwogICAgICB9CgogICAgICBjb25zdCB0b2dnbGUgPSAoc2VsZWN0b3IsIGNsYXNzTmFtZSkgPT4gewogICAgICAgIGNvbnN0IGVsZW1lbnQgPSBTZWxlY3RvckVuZ2luZV9fZGVmYXVsdC5kZWZhdWx0LmZpbmRPbmUoc2VsZWN0b3IsIG91dGVyRWxlbSk7CgogICAgICAgIGlmIChlbGVtZW50KSB7CiAgICAgICAgICBlbGVtZW50LmNsYXNzTGlzdC50b2dnbGUoY2xhc3NOYW1lLCBvcGVuKTsKICAgICAgICB9CiAgICAgIH07CgogICAgICB0b2dnbGUoU0VMRUNUT1JfRFJPUERPV05fVE9HR0xFLCBDTEFTU19OQU1FX0FDVElWRSk7CiAgICAgIHRvZ2dsZShTRUxFQ1RPUl9EUk9QRE9XTl9NRU5VLCBDTEFTU19OQU1FX1NIT1cpOwogICAgICBvdXRlckVsZW0uc2V0QXR0cmlidXRlKCdhcmlhLWV4cGFuZGVkJywgb3Blbik7CiAgICB9CgogICAgX3NldEF0dHJpYnV0ZUlmTm90RXhpc3RzKGVsZW1lbnQsIGF0dHJpYnV0ZSwgdmFsdWUpIHsKICAgICAgaWYgKCFlbGVtZW50Lmhhc0F0dHJpYnV0ZShhdHRyaWJ1dGUpKSB7CiAgICAgICAgZWxlbWVudC5zZXRBdHRyaWJ1dGUoYXR0cmlidXRlLCB2YWx1ZSk7CiAgICAgIH0KICAgIH0KCiAgICBfZWxlbUlzQWN0aXZlKGVsZW0pIHsKICAgICAgcmV0dXJuIGVsZW0uY2xhc3NMaXN0LmNvbnRhaW5zKENMQVNTX05BTUVfQUNUSVZFKTsKICAgIH0gLy8gVHJ5IHRvIGdldCB0aGUgaW5uZXIgZWxlbWVudCAodXN1YWxseSB0aGUgLm5hdi1saW5rKQoKCiAgICBfZ2V0SW5uZXJFbGVtZW50KGVsZW0pIHsKICAgICAgcmV0dXJuIGVsZW0ubWF0Y2hlcyhTRUxFQ1RPUl9JTk5FUl9FTEVNKSA/IGVsZW0gOiBTZWxlY3RvckVuZ2luZV9fZGVmYXVsdC5kZWZhdWx0LmZpbmRPbmUoU0VMRUNUT1JfSU5ORVJfRUxFTSwgZWxlbSk7CiAgICB9IC8vIFRyeSB0byBnZXQgdGhlIG91dGVyIGVsZW1lbnQgKHVzdWFsbHkgdGhlIC5uYXYtaXRlbSkKCgogICAgX2dldE91dGVyRWxlbWVudChlbGVtKSB7CiAgICAgIHJldHVybiBlbGVtLmNsb3Nlc3QoU0VMRUNUT1JfT1VURVIpIHx8IGVsZW07CiAgICB9IC8vIFN0YXRpYwoKCiAgICBzdGF0aWMgalF1ZXJ5SW50ZXJmYWNlKGNvbmZpZykgewogICAgICByZXR1cm4gdGhpcy5lYWNoKGZ1bmN0aW9uICgpIHsKICAgICAgICBjb25zdCBkYXRhID0gVGFiLmdldE9yQ3JlYXRlSW5zdGFuY2UodGhpcyk7CgogICAgICAgIGlmICh0eXBlb2YgY29uZmlnICE9PSAnc3RyaW5nJykgewogICAgICAgICAgcmV0dXJuOwogICAgICAgIH0KCiAgICAgICAgaWYgKGRhdGFbY29uZmlnXSA9PT0gdW5kZWZpbmVkIHx8IGNvbmZpZy5zdGFydHNXaXRoKCdfJykgfHwgY29uZmlnID09PSAnY29uc3RydWN0b3InKSB7CiAgICAgICAgICB0aHJvdyBuZXcgVHlwZUVycm9yKGBObyBtZXRob2QgbmFtZWQgIiR7Y29uZmlnfSJgKTsKICAgICAgICB9CgogICAgICAgIGRhdGFbY29uZmlnXSgpOwogICAgICB9KTsKICAgIH0KCiAgfQogIC8qKgogICAqIERhdGEgQVBJIGltcGxlbWVudGF0aW9uCiAgICovCgoKICBFdmVudEhhbmRsZXJfX2RlZmF1bHQuZGVmYXVsdC5vbihkb2N1bWVudCwgRVZFTlRfQ0xJQ0tfREFUQV9BUEksIFNFTEVDVE9SX0RBVEFfVE9HR0xFLCBmdW5jdGlvbiAoZXZlbnQpIHsKICAgIGlmIChbJ0EnLCAnQVJFQSddLmluY2x1ZGVzKHRoaXMudGFnTmFtZSkpIHsKICAgICAgZXZlbnQucHJldmVudERlZmF1bHQoKTsKICAgIH0KCiAgICBpZiAoaW5kZXguaXNEaXNhYmxlZCh0aGlzKSkgewogICAgICByZXR1cm47CiAgICB9CgogICAgVGFiLmdldE9yQ3JlYXRlSW5zdGFuY2UodGhpcykuc2hvdygpOwogIH0pOwogIC8qKgogICAqIEluaXRpYWxpemUgb24gZm9jdXMKICAgKi8KCiAgRXZlbnRIYW5kbGVyX19kZWZhdWx0LmRlZmF1bHQub24od2luZG93LCBFVkVOVF9MT0FEX0RBVEFfQVBJLCAoKSA9PiB7CiAgICBmb3IgKGNvbnN0IGVsZW1lbnQgb2YgU2VsZWN0b3JFbmdpbmVfX2RlZmF1bHQuZGVmYXVsdC5maW5kKFNFTEVDVE9SX0RBVEFfVE9HR0xFX0FDVElWRSkpIHsKICAgICAgVGFiLmdldE9yQ3JlYXRlSW5zdGFuY2UoZWxlbWVudCk7CiAgICB9CiAgfSk7CiAgLyoqCiAgICogalF1ZXJ5CiAgICovCgogIGluZGV4LmRlZmluZUpRdWVyeVBsdWdpbihUYWIpOwoKICByZXR1cm4gVGFiOwoKfSkpOwovLyMgc291cmNlTWFwcGluZ1VSTD10YWIuanMubWFwCgoKLyoqKi8gfSksCgovKioqLyAiLi9ub2RlX21vZHVsZXMvYm9vdHN0cmFwL2pzL2Rpc3QvdG9vbHRpcC5qcyI6Ci8qISoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiEqXAogICEqKiogLi9ub2RlX21vZHVsZXMvYm9vdHN0cmFwL2pzL2Rpc3QvdG9vbHRpcC5qcyAqKiohCiAgXCoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKi8KLyoqKi8gKGZ1bmN0aW9uKG1vZHVsZSwgX191bnVzZWRfd2VicGFja19leHBvcnRzLCBfX3dlYnBhY2tfcmVxdWlyZV9fKSB7CgovKiEKICAqIEJvb3RzdHJhcCB0b29sdGlwLmpzIHY1LjIuMyAoaHR0cHM6Ly9nZXRib290c3RyYXAuY29tLykKICAqIENvcHlyaWdodCAyMDExLTIwMjIgVGhlIEJvb3RzdHJhcCBBdXRob3JzIChodHRwczovL2dpdGh1Yi5jb20vdHdicy9ib290c3RyYXAvZ3JhcGhzL2NvbnRyaWJ1dG9ycykKICAqIExpY2Vuc2VkIHVuZGVyIE1JVCAoaHR0cHM6Ly9naXRodWIuY29tL3R3YnMvYm9vdHN0cmFwL2Jsb2IvbWFpbi9MSUNFTlNFKQogICovCihmdW5jdGlvbiAoZ2xvYmFsLCBmYWN0b3J5KSB7CiAgIHRydWUgPyBtb2R1bGUuZXhwb3J0cyA9IGZhY3RvcnkoX193ZWJwYWNrX3JlcXVpcmVfXygvKiEgQHBvcHBlcmpzL2NvcmUgKi8gIi4vbm9kZV9tb2R1bGVzL0Bwb3BwZXJqcy9jb3JlL2xpYi9pbmRleC5qcyIpLCBfX3dlYnBhY2tfcmVxdWlyZV9fKC8qISAuL3V0aWwvaW5kZXggKi8gIi4vbm9kZV9tb2R1bGVzL2Jvb3RzdHJhcC9qcy9kaXN0L3V0aWwvaW5kZXguanMiKSwgX193ZWJwYWNrX3JlcXVpcmVfXygvKiEgLi91dGlsL3Nhbml0aXplciAqLyAiLi9ub2RlX21vZHVsZXMvYm9vdHN0cmFwL2pzL2Rpc3QvdXRpbC9zYW5pdGl6ZXIuanMiKSwgX193ZWJwYWNrX3JlcXVpcmVfXygvKiEgLi9kb20vZXZlbnQtaGFuZGxlciAqLyAiLi9ub2RlX21vZHVsZXMvYm9vdHN0cmFwL2pzL2Rpc3QvZG9tL2V2ZW50LWhhbmRsZXIuanMiKSwgX193ZWJwYWNrX3JlcXVpcmVfXygvKiEgLi9kb20vbWFuaXB1bGF0b3IgKi8gIi4vbm9kZV9tb2R1bGVzL2Jvb3RzdHJhcC9qcy9kaXN0L2RvbS9tYW5pcHVsYXRvci5qcyIpLCBfX3dlYnBhY2tfcmVxdWlyZV9fKC8qISAuL2Jhc2UtY29tcG9uZW50ICovICIuL25vZGVfbW9kdWxlcy9ib290c3RyYXAvanMvZGlzdC9iYXNlLWNvbXBvbmVudC5qcyIpLCBfX3dlYnBhY2tfcmVxdWlyZV9fKC8qISAuL3V0aWwvdGVtcGxhdGUtZmFjdG9yeSAqLyAiLi9ub2RlX21vZHVsZXMvYm9vdHN0cmFwL2pzL2Rpc3QvdXRpbC90ZW1wbGF0ZS1mYWN0b3J5LmpzIikpIDoKICAwOwp9KSh0aGlzLCAoZnVuY3Rpb24gKFBvcHBlciwgaW5kZXgsIHNhbml0aXplciwgRXZlbnRIYW5kbGVyLCBNYW5pcHVsYXRvciwgQmFzZUNvbXBvbmVudCwgVGVtcGxhdGVGYWN0b3J5KSB7ICd1c2Ugc3RyaWN0JzsKCiAgY29uc3QgX2ludGVyb3BEZWZhdWx0TGVnYWN5ID0gZSA9PiBlICYmIHR5cGVvZiBlID09PSAnb2JqZWN0JyAmJiAnZGVmYXVsdCcgaW4gZSA/IGUgOiB7IGRlZmF1bHQ6IGUgfTsKCiAgZnVuY3Rpb24gX2ludGVyb3BOYW1lc3BhY2UoZSkgewogICAgaWYgKGUgJiYgZS5fX2VzTW9kdWxlKSByZXR1cm4gZTsKICAgIGNvbnN0IG4gPSBPYmplY3QuY3JlYXRlKG51bGwsIHsgW1N5bWJvbC50b1N0cmluZ1RhZ106IHsgdmFsdWU6ICdNb2R1bGUnIH0gfSk7CiAgICBpZiAoZSkgewogICAgICBmb3IgKGNvbnN0IGsgaW4gZSkgewogICAgICAgIGlmIChrICE9PSAnZGVmYXVsdCcpIHsKICAgICAgICAgIGNvbnN0IGQgPSBPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yKGUsIGspOwogICAgICAgICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KG4sIGssIGQuZ2V0ID8gZCA6IHsKICAgICAgICAgICAgZW51bWVyYWJsZTogdHJ1ZSwKICAgICAgICAgICAgZ2V0OiAoKSA9PiBlW2tdCiAgICAgICAgICB9KTsKICAgICAgICB9CiAgICAgIH0KICAgIH0KICAgIG4uZGVmYXVsdCA9IGU7CiAgICByZXR1cm4gT2JqZWN0LmZyZWV6ZShuKTsKICB9CgogIGNvbnN0IFBvcHBlcl9fbmFtZXNwYWNlID0gLyojX19QVVJFX18qL19pbnRlcm9wTmFtZXNwYWNlKFBvcHBlcik7CiAgY29uc3QgRXZlbnRIYW5kbGVyX19kZWZhdWx0ID0gLyojX19QVVJFX18qL19pbnRlcm9wRGVmYXVsdExlZ2FjeShFdmVudEhhbmRsZXIpOwogIGNvbnN0IE1hbmlwdWxhdG9yX19kZWZhdWx0ID0gLyojX19QVVJFX18qL19pbnRlcm9wRGVmYXVsdExlZ2FjeShNYW5pcHVsYXRvcik7CiAgY29uc3QgQmFzZUNvbXBvbmVudF9fZGVmYXVsdCA9IC8qI19fUFVSRV9fKi9faW50ZXJvcERlZmF1bHRMZWdhY3koQmFzZUNvbXBvbmVudCk7CiAgY29uc3QgVGVtcGxhdGVGYWN0b3J5X19kZWZhdWx0ID0gLyojX19QVVJFX18qL19pbnRlcm9wRGVmYXVsdExlZ2FjeShUZW1wbGF0ZUZhY3RvcnkpOwoKICAvKioKICAgKiAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLQogICAqIEJvb3RzdHJhcCAodjUuMi4zKTogdG9vbHRpcC5qcwogICAqIExpY2Vuc2VkIHVuZGVyIE1JVCAoaHR0cHM6Ly9naXRodWIuY29tL3R3YnMvYm9vdHN0cmFwL2Jsb2IvbWFpbi9MSUNFTlNFKQogICAqIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tCiAgICovCiAgLyoqCiAgICogQ29uc3RhbnRzCiAgICovCgogIGNvbnN0IE5BTUUgPSAndG9vbHRpcCc7CiAgY29uc3QgRElTQUxMT1dFRF9BVFRSSUJVVEVTID0gbmV3IFNldChbJ3Nhbml0aXplJywgJ2FsbG93TGlzdCcsICdzYW5pdGl6ZUZuJ10pOwogIGNvbnN0IENMQVNTX05BTUVfRkFERSA9ICdmYWRlJzsKICBjb25zdCBDTEFTU19OQU1FX01PREFMID0gJ21vZGFsJzsKICBjb25zdCBDTEFTU19OQU1FX1NIT1cgPSAnc2hvdyc7CiAgY29uc3QgU0VMRUNUT1JfVE9PTFRJUF9JTk5FUiA9ICcudG9vbHRpcC1pbm5lcic7CiAgY29uc3QgU0VMRUNUT1JfTU9EQUwgPSBgLiR7Q0xBU1NfTkFNRV9NT0RBTH1gOwogIGNvbnN0IEVWRU5UX01PREFMX0hJREUgPSAnaGlkZS5icy5tb2RhbCc7CiAgY29uc3QgVFJJR0dFUl9IT1ZFUiA9ICdob3Zlcic7CiAgY29uc3QgVFJJR0dFUl9GT0NVUyA9ICdmb2N1cyc7CiAgY29uc3QgVFJJR0dFUl9DTElDSyA9ICdjbGljayc7CiAgY29uc3QgVFJJR0dFUl9NQU5VQUwgPSAnbWFudWFsJzsKICBjb25zdCBFVkVOVF9ISURFID0gJ2hpZGUnOwogIGNvbnN0IEVWRU5UX0hJRERFTiA9ICdoaWRkZW4nOwogIGNvbnN0IEVWRU5UX1NIT1cgPSAnc2hvdyc7CiAgY29uc3QgRVZFTlRfU0hPV04gPSAnc2hvd24nOwogIGNvbnN0IEVWRU5UX0lOU0VSVEVEID0gJ2luc2VydGVkJzsKICBjb25zdCBFVkVOVF9DTElDSyA9ICdjbGljayc7CiAgY29uc3QgRVZFTlRfRk9DVVNJTiA9ICdmb2N1c2luJzsKICBjb25zdCBFVkVOVF9GT0NVU09VVCA9ICdmb2N1c291dCc7CiAgY29uc3QgRVZFTlRfTU9VU0VFTlRFUiA9ICdtb3VzZWVudGVyJzsKICBjb25zdCBFVkVOVF9NT1VTRUxFQVZFID0gJ21vdXNlbGVhdmUnOwogIGNvbnN0IEF0dGFjaG1lbnRNYXAgPSB7CiAgICBBVVRPOiAnYXV0bycsCiAgICBUT1A6ICd0b3AnLAogICAgUklHSFQ6IGluZGV4LmlzUlRMKCkgPyAnbGVmdCcgOiAncmlnaHQnLAogICAgQk9UVE9NOiAnYm90dG9tJywKICAgIExFRlQ6IGluZGV4LmlzUlRMKCkgPyAncmlnaHQnIDogJ2xlZnQnCiAgfTsKICBjb25zdCBEZWZhdWx0ID0gewogICAgYWxsb3dMaXN0OiBzYW5pdGl6ZXIuRGVmYXVsdEFsbG93bGlzdCwKICAgIGFuaW1hdGlvbjogdHJ1ZSwKICAgIGJvdW5kYXJ5OiAnY2xpcHBpbmdQYXJlbnRzJywKICAgIGNvbnRhaW5lcjogZmFsc2UsCiAgICBjdXN0b21DbGFzczogJycsCiAgICBkZWxheTogMCwKICAgIGZhbGxiYWNrUGxhY2VtZW50czogWyd0b3AnLCAncmlnaHQnLCAnYm90dG9tJywgJ2xlZnQnXSwKICAgIGh0bWw6IGZhbHNlLAogICAgb2Zmc2V0OiBbMCwgMF0sCiAgICBwbGFjZW1lbnQ6ICd0b3AnLAogICAgcG9wcGVyQ29uZmlnOiBudWxsLAogICAgc2FuaXRpemU6IHRydWUsCiAgICBzYW5pdGl6ZUZuOiBudWxsLAogICAgc2VsZWN0b3I6IGZhbHNlLAogICAgdGVtcGxhdGU6ICc8ZGl2IGNsYXNzPSJ0b29sdGlwIiByb2xlPSJ0b29sdGlwIj4nICsgJzxkaXYgY2xhc3M9InRvb2x0aXAtYXJyb3ciPjwvZGl2PicgKyAnPGRpdiBjbGFzcz0idG9vbHRpcC1pbm5lciI+PC9kaXY+JyArICc8L2Rpdj4nLAogICAgdGl0bGU6ICcnLAogICAgdHJpZ2dlcjogJ2hvdmVyIGZvY3VzJwogIH07CiAgY29uc3QgRGVmYXVsdFR5cGUgPSB7CiAgICBhbGxvd0xpc3Q6ICdvYmplY3QnLAogICAgYW5pbWF0aW9uOiAnYm9vbGVhbicsCiAgICBib3VuZGFyeTogJyhzdHJpbmd8ZWxlbWVudCknLAogICAgY29udGFpbmVyOiAnKHN0cmluZ3xlbGVtZW50fGJvb2xlYW4pJywKICAgIGN1c3RvbUNsYXNzOiAnKHN0cmluZ3xmdW5jdGlvbiknLAogICAgZGVsYXk6ICcobnVtYmVyfG9iamVjdCknLAogICAgZmFsbGJhY2tQbGFjZW1lbnRzOiAnYXJyYXknLAogICAgaHRtbDogJ2Jvb2xlYW4nLAogICAgb2Zmc2V0OiAnKGFycmF5fHN0cmluZ3xmdW5jdGlvbiknLAogICAgcGxhY2VtZW50OiAnKHN0cmluZ3xmdW5jdGlvbiknLAogICAgcG9wcGVyQ29uZmlnOiAnKG51bGx8b2JqZWN0fGZ1bmN0aW9uKScsCiAgICBzYW5pdGl6ZTogJ2Jvb2xlYW4nLAogICAgc2FuaXRpemVGbjogJyhudWxsfGZ1bmN0aW9uKScsCiAgICBzZWxlY3RvcjogJyhzdHJpbmd8Ym9vbGVhbiknLAogICAgdGVtcGxhdGU6ICdzdHJpbmcnLAogICAgdGl0bGU6ICcoc3RyaW5nfGVsZW1lbnR8ZnVuY3Rpb24pJywKICAgIHRyaWdnZXI6ICdzdHJpbmcnCiAgfTsKICAvKioKICAgKiBDbGFzcyBkZWZpbml0aW9uCiAgICovCgogIGNsYXNzIFRvb2x0aXAgZXh0ZW5kcyBCYXNlQ29tcG9uZW50X19kZWZhdWx0LmRlZmF1bHQgewogICAgY29uc3RydWN0b3IoZWxlbWVudCwgY29uZmlnKSB7CiAgICAgIGlmICh0eXBlb2YgUG9wcGVyX19uYW1lc3BhY2UgPT09ICd1bmRlZmluZWQnKSB7CiAgICAgICAgdGhyb3cgbmV3IFR5cGVFcnJvcignQm9vdHN0cmFwXCdzIHRvb2x0aXBzIHJlcXVpcmUgUG9wcGVyIChodHRwczovL3BvcHBlci5qcy5vcmcpJyk7CiAgICAgIH0KCiAgICAgIHN1cGVyKGVsZW1lbnQsIGNvbmZpZyk7IC8vIFByaXZhdGUKCiAgICAgIHRoaXMuX2lzRW5hYmxlZCA9IHRydWU7CiAgICAgIHRoaXMuX3RpbWVvdXQgPSAwOwogICAgICB0aGlzLl9pc0hvdmVyZWQgPSBudWxsOwogICAgICB0aGlzLl9hY3RpdmVUcmlnZ2VyID0ge307CiAgICAgIHRoaXMuX3BvcHBlciA9IG51bGw7CiAgICAgIHRoaXMuX3RlbXBsYXRlRmFjdG9yeSA9IG51bGw7CiAgICAgIHRoaXMuX25ld0NvbnRlbnQgPSBudWxsOyAvLyBQcm90ZWN0ZWQKCiAgICAgIHRoaXMudGlwID0gbnVsbDsKCiAgICAgIHRoaXMuX3NldExpc3RlbmVycygpOwoKICAgICAgaWYgKCF0aGlzLl9jb25maWcuc2VsZWN0b3IpIHsKICAgICAgICB0aGlzLl9maXhUaXRsZSgpOwogICAgICB9CiAgICB9IC8vIEdldHRlcnMKCgogICAgc3RhdGljIGdldCBEZWZhdWx0KCkgewogICAgICByZXR1cm4gRGVmYXVsdDsKICAgIH0KCiAgICBzdGF0aWMgZ2V0IERlZmF1bHRUeXBlKCkgewogICAgICByZXR1cm4gRGVmYXVsdFR5cGU7CiAgICB9CgogICAgc3RhdGljIGdldCBOQU1FKCkgewogICAgICByZXR1cm4gTkFNRTsKICAgIH0gLy8gUHVibGljCgoKICAgIGVuYWJsZSgpIHsKICAgICAgdGhpcy5faXNFbmFibGVkID0gdHJ1ZTsKICAgIH0KCiAgICBkaXNhYmxlKCkgewogICAgICB0aGlzLl9pc0VuYWJsZWQgPSBmYWxzZTsKICAgIH0KCiAgICB0b2dnbGVFbmFibGVkKCkgewogICAgICB0aGlzLl9pc0VuYWJsZWQgPSAhdGhpcy5faXNFbmFibGVkOwogICAgfQoKICAgIHRvZ2dsZSgpIHsKICAgICAgaWYgKCF0aGlzLl9pc0VuYWJsZWQpIHsKICAgICAgICByZXR1cm47CiAgICAgIH0KCiAgICAgIHRoaXMuX2FjdGl2ZVRyaWdnZXIuY2xpY2sgPSAhdGhpcy5fYWN0aXZlVHJpZ2dlci5jbGljazsKCiAgICAgIGlmICh0aGlzLl9pc1Nob3duKCkpIHsKICAgICAgICB0aGlzLl9sZWF2ZSgpOwoKICAgICAgICByZXR1cm47CiAgICAgIH0KCiAgICAgIHRoaXMuX2VudGVyKCk7CiAgICB9CgogICAgZGlzcG9zZSgpIHsKICAgICAgY2xlYXJUaW1lb3V0KHRoaXMuX3RpbWVvdXQpOwogICAgICBFdmVudEhhbmRsZXJfX2RlZmF1bHQuZGVmYXVsdC5vZmYodGhpcy5fZWxlbWVudC5jbG9zZXN0KFNFTEVDVE9SX01PREFMKSwgRVZFTlRfTU9EQUxfSElERSwgdGhpcy5faGlkZU1vZGFsSGFuZGxlcik7CgogICAgICBpZiAodGhpcy5fZWxlbWVudC5nZXRBdHRyaWJ1dGUoJ2RhdGEtYnMtb3JpZ2luYWwtdGl0bGUnKSkgewogICAgICAgIHRoaXMuX2VsZW1lbnQuc2V0QXR0cmlidXRlKCd0aXRsZScsIHRoaXMuX2VsZW1lbnQuZ2V0QXR0cmlidXRlKCdkYXRhLWJzLW9yaWdpbmFsLXRpdGxlJykpOwogICAgICB9CgogICAgICB0aGlzLl9kaXNwb3NlUG9wcGVyKCk7CgogICAgICBzdXBlci5kaXNwb3NlKCk7CiAgICB9CgogICAgc2hvdygpIHsKICAgICAgaWYgKHRoaXMuX2VsZW1lbnQuc3R5bGUuZGlzcGxheSA9PT0gJ25vbmUnKSB7CiAgICAgICAgdGhyb3cgbmV3IEVycm9yKCdQbGVhc2UgdXNlIHNob3cgb24gdmlzaWJsZSBlbGVtZW50cycpOwogICAgICB9CgogICAgICBpZiAoISh0aGlzLl9pc1dpdGhDb250ZW50KCkgJiYgdGhpcy5faXNFbmFibGVkKSkgewogICAgICAgIHJldHVybjsKICAgICAgfQoKICAgICAgY29uc3Qgc2hvd0V2ZW50ID0gRXZlbnRIYW5kbGVyX19kZWZhdWx0LmRlZmF1bHQudHJpZ2dlcih0aGlzLl9lbGVtZW50LCB0aGlzLmNvbnN0cnVjdG9yLmV2ZW50TmFtZShFVkVOVF9TSE9XKSk7CiAgICAgIGNvbnN0IHNoYWRvd1Jvb3QgPSBpbmRleC5maW5kU2hhZG93Um9vdCh0aGlzLl9lbGVtZW50KTsKCiAgICAgIGNvbnN0IGlzSW5UaGVEb20gPSAoc2hhZG93Um9vdCB8fCB0aGlzLl9lbGVtZW50Lm93bmVyRG9jdW1lbnQuZG9jdW1lbnRFbGVtZW50KS5jb250YWlucyh0aGlzLl9lbGVtZW50KTsKCiAgICAgIGlmIChzaG93RXZlbnQuZGVmYXVsdFByZXZlbnRlZCB8fCAhaXNJblRoZURvbSkgewogICAgICAgIHJldHVybjsKICAgICAgfSAvLyB0b2RvIHY2IHJlbW92ZSB0aGlzIE9SIG1ha2UgaXQgb3B0aW9uYWwKCgogICAgICB0aGlzLl9kaXNwb3NlUG9wcGVyKCk7CgogICAgICBjb25zdCB0aXAgPSB0aGlzLl9nZXRUaXBFbGVtZW50KCk7CgogICAgICB0aGlzLl9lbGVtZW50LnNldEF0dHJpYnV0ZSgnYXJpYS1kZXNjcmliZWRieScsIHRpcC5nZXRBdHRyaWJ1dGUoJ2lkJykpOwoKICAgICAgY29uc3QgewogICAgICAgIGNvbnRhaW5lcgogICAgICB9ID0gdGhpcy5fY29uZmlnOwoKICAgICAgaWYgKCF0aGlzLl9lbGVtZW50Lm93bmVyRG9jdW1lbnQuZG9jdW1lbnRFbGVtZW50LmNvbnRhaW5zKHRoaXMudGlwKSkgewogICAgICAgIGNvbnRhaW5lci5hcHBlbmQodGlwKTsKICAgICAgICBFdmVudEhhbmRsZXJfX2RlZmF1bHQuZGVmYXVsdC50cmlnZ2VyKHRoaXMuX2VsZW1lbnQsIHRoaXMuY29uc3RydWN0b3IuZXZlbnROYW1lKEVWRU5UX0lOU0VSVEVEKSk7CiAgICAgIH0KCiAgICAgIHRoaXMuX3BvcHBlciA9IHRoaXMuX2NyZWF0ZVBvcHBlcih0aXApOwogICAgICB0aXAuY2xhc3NMaXN0LmFkZChDTEFTU19OQU1FX1NIT1cpOyAvLyBJZiB0aGlzIGlzIGEgdG91Y2gtZW5hYmxlZCBkZXZpY2Ugd2UgYWRkIGV4dHJhCiAgICAgIC8vIGVtcHR5IG1vdXNlb3ZlciBsaXN0ZW5lcnMgdG8gdGhlIGJvZHkncyBpbW1lZGlhdGUgY2hpbGRyZW47CiAgICAgIC8vIG9ubHkgbmVlZGVkIGJlY2F1c2Ugb2YgYnJva2VuIGV2ZW50IGRlbGVnYXRpb24gb24gaU9TCiAgICAgIC8vIGh0dHBzOi8vd3d3LnF1aXJrc21vZGUub3JnL2Jsb2cvYXJjaGl2ZXMvMjAxNC8wMi9tb3VzZV9ldmVudF9idWIuaHRtbAoKICAgICAgaWYgKCdvbnRvdWNoc3RhcnQnIGluIGRvY3VtZW50LmRvY3VtZW50RWxlbWVudCkgewogICAgICAgIGZvciAoY29uc3QgZWxlbWVudCBvZiBbXS5jb25jYXQoLi4uZG9jdW1lbnQuYm9keS5jaGlsZHJlbikpIHsKICAgICAgICAgIEV2ZW50SGFuZGxlcl9fZGVmYXVsdC5kZWZhdWx0Lm9uKGVsZW1lbnQsICdtb3VzZW92ZXInLCBpbmRleC5ub29wKTsKICAgICAgICB9CiAgICAgIH0KCiAgICAgIGNvbnN0IGNvbXBsZXRlID0gKCkgPT4gewogICAgICAgIEV2ZW50SGFuZGxlcl9fZGVmYXVsdC5kZWZhdWx0LnRyaWdnZXIodGhpcy5fZWxlbWVudCwgdGhpcy5jb25zdHJ1Y3Rvci5ldmVudE5hbWUoRVZFTlRfU0hPV04pKTsKCiAgICAgICAgaWYgKHRoaXMuX2lzSG92ZXJlZCA9PT0gZmFsc2UpIHsKICAgICAgICAgIHRoaXMuX2xlYXZlKCk7CiAgICAgICAgfQoKICAgICAgICB0aGlzLl9pc0hvdmVyZWQgPSBmYWxzZTsKICAgICAgfTsKCiAgICAgIHRoaXMuX3F1ZXVlQ2FsbGJhY2soY29tcGxldGUsIHRoaXMudGlwLCB0aGlzLl9pc0FuaW1hdGVkKCkpOwogICAgfQoKICAgIGhpZGUoKSB7CiAgICAgIGlmICghdGhpcy5faXNTaG93bigpKSB7CiAgICAgICAgcmV0dXJuOwogICAgICB9CgogICAgICBjb25zdCBoaWRlRXZlbnQgPSBFdmVudEhhbmRsZXJfX2RlZmF1bHQuZGVmYXVsdC50cmlnZ2VyKHRoaXMuX2VsZW1lbnQsIHRoaXMuY29uc3RydWN0b3IuZXZlbnROYW1lKEVWRU5UX0hJREUpKTsKCiAgICAgIGlmIChoaWRlRXZlbnQuZGVmYXVsdFByZXZlbnRlZCkgewogICAgICAgIHJldHVybjsKICAgICAgfQoKICAgICAgY29uc3QgdGlwID0gdGhpcy5fZ2V0VGlwRWxlbWVudCgpOwoKICAgICAgdGlwLmNsYXNzTGlzdC5yZW1vdmUoQ0xBU1NfTkFNRV9TSE9XKTsgLy8gSWYgdGhpcyBpcyBhIHRvdWNoLWVuYWJsZWQgZGV2aWNlIHdlIHJlbW92ZSB0aGUgZXh0cmEKICAgICAgLy8gZW1wdHkgbW91c2VvdmVyIGxpc3RlbmVycyB3ZSBhZGRlZCBmb3IgaU9TIHN1cHBvcnQKCiAgICAgIGlmICgnb250b3VjaHN0YXJ0JyBpbiBkb2N1bWVudC5kb2N1bWVudEVsZW1lbnQpIHsKICAgICAgICBmb3IgKGNvbnN0IGVsZW1lbnQgb2YgW10uY29uY2F0KC4uLmRvY3VtZW50LmJvZHkuY2hpbGRyZW4pKSB7CiAgICAgICAgICBFdmVudEhhbmRsZXJfX2RlZmF1bHQuZGVmYXVsdC5vZmYoZWxlbWVudCwgJ21vdXNlb3ZlcicsIGluZGV4Lm5vb3ApOwogICAgICAgIH0KICAgICAgfQoKICAgICAgdGhpcy5fYWN0aXZlVHJpZ2dlcltUUklHR0VSX0NMSUNLXSA9IGZhbHNlOwogICAgICB0aGlzLl9hY3RpdmVUcmlnZ2VyW1RSSUdHRVJfRk9DVVNdID0gZmFsc2U7CiAgICAgIHRoaXMuX2FjdGl2ZVRyaWdnZXJbVFJJR0dFUl9IT1ZFUl0gPSBmYWxzZTsKICAgICAgdGhpcy5faXNIb3ZlcmVkID0gbnVsbDsgLy8gaXQgaXMgYSB0cmljayB0byBzdXBwb3J0IG1hbnVhbCB0cmlnZ2VyaW5nCgogICAgICBjb25zdCBjb21wbGV0ZSA9ICgpID0+IHsKICAgICAgICBpZiAodGhpcy5faXNXaXRoQWN0aXZlVHJpZ2dlcigpKSB7CiAgICAgICAgICByZXR1cm47CiAgICAgICAgfQoKICAgICAgICBpZiAoIXRoaXMuX2lzSG92ZXJlZCkgewogICAgICAgICAgdGhpcy5fZGlzcG9zZVBvcHBlcigpOwogICAgICAgIH0KCiAgICAgICAgdGhpcy5fZWxlbWVudC5yZW1vdmVBdHRyaWJ1dGUoJ2FyaWEtZGVzY3JpYmVkYnknKTsKCiAgICAgICAgRXZlbnRIYW5kbGVyX19kZWZhdWx0LmRlZmF1bHQudHJpZ2dlcih0aGlzLl9lbGVtZW50LCB0aGlzLmNvbnN0cnVjdG9yLmV2ZW50TmFtZShFVkVOVF9ISURERU4pKTsKICAgICAgfTsKCiAgICAgIHRoaXMuX3F1ZXVlQ2FsbGJhY2soY29tcGxldGUsIHRoaXMudGlwLCB0aGlzLl9pc0FuaW1hdGVkKCkpOwogICAgfQoKICAgIHVwZGF0ZSgpIHsKICAgICAgaWYgKHRoaXMuX3BvcHBlcikgewogICAgICAgIHRoaXMuX3BvcHBlci51cGRhdGUoKTsKICAgICAgfQogICAgfSAvLyBQcm90ZWN0ZWQKCgogICAgX2lzV2l0aENvbnRlbnQoKSB7CiAgICAgIHJldHVybiBCb29sZWFuKHRoaXMuX2dldFRpdGxlKCkpOwogICAgfQoKICAgIF9nZXRUaXBFbGVtZW50KCkgewogICAgICBpZiAoIXRoaXMudGlwKSB7CiAgICAgICAgdGhpcy50aXAgPSB0aGlzLl9jcmVhdGVUaXBFbGVtZW50KHRoaXMuX25ld0NvbnRlbnQgfHwgdGhpcy5fZ2V0Q29udGVudEZvclRlbXBsYXRlKCkpOwogICAgICB9CgogICAgICByZXR1cm4gdGhpcy50aXA7CiAgICB9CgogICAgX2NyZWF0ZVRpcEVsZW1lbnQoY29udGVudCkgewogICAgICBjb25zdCB0aXAgPSB0aGlzLl9nZXRUZW1wbGF0ZUZhY3RvcnkoY29udGVudCkudG9IdG1sKCk7IC8vIHRvZG86IHJlbW92ZSB0aGlzIGNoZWNrIG9uIHY2CgoKICAgICAgaWYgKCF0aXApIHsKICAgICAgICByZXR1cm4gbnVsbDsKICAgICAgfQoKICAgICAgdGlwLmNsYXNzTGlzdC5yZW1vdmUoQ0xBU1NfTkFNRV9GQURFLCBDTEFTU19OQU1FX1NIT1cpOyAvLyB0b2RvOiBvbiB2NiB0aGUgZm9sbG93aW5nIGNhbiBiZSBhY2hpZXZlZCB3aXRoIENTUyBvbmx5CgogICAgICB0aXAuY2xhc3NMaXN0LmFkZChgYnMtJHt0aGlzLmNvbnN0cnVjdG9yLk5BTUV9LWF1dG9gKTsKICAgICAgY29uc3QgdGlwSWQgPSBpbmRleC5nZXRVSUQodGhpcy5jb25zdHJ1Y3Rvci5OQU1FKS50b1N0cmluZygpOwogICAgICB0aXAuc2V0QXR0cmlidXRlKCdpZCcsIHRpcElkKTsKCiAgICAgIGlmICh0aGlzLl9pc0FuaW1hdGVkKCkpIHsKICAgICAgICB0aXAuY2xhc3NMaXN0LmFkZChDTEFTU19OQU1FX0ZBREUpOwogICAgICB9CgogICAgICByZXR1cm4gdGlwOwogICAgfQoKICAgIHNldENvbnRlbnQoY29udGVudCkgewogICAgICB0aGlzLl9uZXdDb250ZW50ID0gY29udGVudDsKCiAgICAgIGlmICh0aGlzLl9pc1Nob3duKCkpIHsKICAgICAgICB0aGlzLl9kaXNwb3NlUG9wcGVyKCk7CgogICAgICAgIHRoaXMuc2hvdygpOwogICAgICB9CiAgICB9CgogICAgX2dldFRlbXBsYXRlRmFjdG9yeShjb250ZW50KSB7CiAgICAgIGlmICh0aGlzLl90ZW1wbGF0ZUZhY3RvcnkpIHsKICAgICAgICB0aGlzLl90ZW1wbGF0ZUZhY3RvcnkuY2hhbmdlQ29udGVudChjb250ZW50KTsKICAgICAgfSBlbHNlIHsKICAgICAgICB0aGlzLl90ZW1wbGF0ZUZhY3RvcnkgPSBuZXcgVGVtcGxhdGVGYWN0b3J5X19kZWZhdWx0LmRlZmF1bHQoeyAuLi50aGlzLl9jb25maWcsCiAgICAgICAgICAvLyB0aGUgYGNvbnRlbnRgIHZhciBoYXMgdG8gYmUgYWZ0ZXIgYHRoaXMuX2NvbmZpZ2AKICAgICAgICAgIC8vIHRvIG92ZXJyaWRlIGNvbmZpZy5jb250ZW50IGluIGNhc2Ugb2YgcG9wb3ZlcgogICAgICAgICAgY29udGVudCwKICAgICAgICAgIGV4dHJhQ2xhc3M6IHRoaXMuX3Jlc29sdmVQb3NzaWJsZUZ1bmN0aW9uKHRoaXMuX2NvbmZpZy5jdXN0b21DbGFzcykKICAgICAgICB9KTsKICAgICAgfQoKICAgICAgcmV0dXJuIHRoaXMuX3RlbXBsYXRlRmFjdG9yeTsKICAgIH0KCiAgICBfZ2V0Q29udGVudEZvclRlbXBsYXRlKCkgewogICAgICByZXR1cm4gewogICAgICAgIFtTRUxFQ1RPUl9UT09MVElQX0lOTkVSXTogdGhpcy5fZ2V0VGl0bGUoKQogICAgICB9OwogICAgfQoKICAgIF9nZXRUaXRsZSgpIHsKICAgICAgcmV0dXJuIHRoaXMuX3Jlc29sdmVQb3NzaWJsZUZ1bmN0aW9uKHRoaXMuX2NvbmZpZy50aXRsZSkgfHwgdGhpcy5fZWxlbWVudC5nZXRBdHRyaWJ1dGUoJ2RhdGEtYnMtb3JpZ2luYWwtdGl0bGUnKTsKICAgIH0gLy8gUHJpdmF0ZQoKCiAgICBfaW5pdGlhbGl6ZU9uRGVsZWdhdGVkVGFyZ2V0KGV2ZW50KSB7CiAgICAgIHJldHVybiB0aGlzLmNvbnN0cnVjdG9yLmdldE9yQ3JlYXRlSW5zdGFuY2UoZXZlbnQuZGVsZWdhdGVUYXJnZXQsIHRoaXMuX2dldERlbGVnYXRlQ29uZmlnKCkpOwogICAgfQoKICAgIF9pc0FuaW1hdGVkKCkgewogICAgICByZXR1cm4gdGhpcy5fY29uZmlnLmFuaW1hdGlvbiB8fCB0aGlzLnRpcCAmJiB0aGlzLnRpcC5jbGFzc0xpc3QuY29udGFpbnMoQ0xBU1NfTkFNRV9GQURFKTsKICAgIH0KCiAgICBfaXNTaG93bigpIHsKICAgICAgcmV0dXJuIHRoaXMudGlwICYmIHRoaXMudGlwLmNsYXNzTGlzdC5jb250YWlucyhDTEFTU19OQU1FX1NIT1cpOwogICAgfQoKICAgIF9jcmVhdGVQb3BwZXIodGlwKSB7CiAgICAgIGNvbnN0IHBsYWNlbWVudCA9IHR5cGVvZiB0aGlzLl9jb25maWcucGxhY2VtZW50ID09PSAnZnVuY3Rpb24nID8gdGhpcy5fY29uZmlnLnBsYWNlbWVudC5jYWxsKHRoaXMsIHRpcCwgdGhpcy5fZWxlbWVudCkgOiB0aGlzLl9jb25maWcucGxhY2VtZW50OwogICAgICBjb25zdCBhdHRhY2htZW50ID0gQXR0YWNobWVudE1hcFtwbGFjZW1lbnQudG9VcHBlckNhc2UoKV07CiAgICAgIHJldHVybiBQb3BwZXJfX25hbWVzcGFjZS5jcmVhdGVQb3BwZXIodGhpcy5fZWxlbWVudCwgdGlwLCB0aGlzLl9nZXRQb3BwZXJDb25maWcoYXR0YWNobWVudCkpOwogICAgfQoKICAgIF9nZXRPZmZzZXQoKSB7CiAgICAgIGNvbnN0IHsKICAgICAgICBvZmZzZXQKICAgICAgfSA9IHRoaXMuX2NvbmZpZzsKCiAgICAgIGlmICh0eXBlb2Ygb2Zmc2V0ID09PSAnc3RyaW5nJykgewogICAgICAgIHJldHVybiBvZmZzZXQuc3BsaXQoJywnKS5tYXAodmFsdWUgPT4gTnVtYmVyLnBhcnNlSW50KHZhbHVlLCAxMCkpOwogICAgICB9CgogICAgICBpZiAodHlwZW9mIG9mZnNldCA9PT0gJ2Z1bmN0aW9uJykgewogICAgICAgIHJldHVybiBwb3BwZXJEYXRhID0+IG9mZnNldChwb3BwZXJEYXRhLCB0aGlzLl9lbGVtZW50KTsKICAgICAgfQoKICAgICAgcmV0dXJuIG9mZnNldDsKICAgIH0KCiAgICBfcmVzb2x2ZVBvc3NpYmxlRnVuY3Rpb24oYXJnKSB7CiAgICAgIHJldHVybiB0eXBlb2YgYXJnID09PSAnZnVuY3Rpb24nID8gYXJnLmNhbGwodGhpcy5fZWxlbWVudCkgOiBhcmc7CiAgICB9CgogICAgX2dldFBvcHBlckNvbmZpZyhhdHRhY2htZW50KSB7CiAgICAgIGNvbnN0IGRlZmF1bHRCc1BvcHBlckNvbmZpZyA9IHsKICAgICAgICBwbGFjZW1lbnQ6IGF0dGFjaG1lbnQsCiAgICAgICAgbW9kaWZpZXJzOiBbewogICAgICAgICAgbmFtZTogJ2ZsaXAnLAogICAgICAgICAgb3B0aW9uczogewogICAgICAgICAgICBmYWxsYmFja1BsYWNlbWVudHM6IHRoaXMuX2NvbmZpZy5mYWxsYmFja1BsYWNlbWVudHMKICAgICAgICAgIH0KICAgICAgICB9LCB7CiAgICAgICAgICBuYW1lOiAnb2Zmc2V0JywKICAgICAgICAgIG9wdGlvbnM6IHsKICAgICAgICAgICAgb2Zmc2V0OiB0aGlzLl9nZXRPZmZzZXQoKQogICAgICAgICAgfQogICAgICAgIH0sIHsKICAgICAgICAgIG5hbWU6ICdwcmV2ZW50T3ZlcmZsb3cnLAogICAgICAgICAgb3B0aW9uczogewogICAgICAgICAgICBib3VuZGFyeTogdGhpcy5fY29uZmlnLmJvdW5kYXJ5CiAgICAgICAgICB9CiAgICAgICAgfSwgewogICAgICAgICAgbmFtZTogJ2Fycm93JywKICAgICAgICAgIG9wdGlvbnM6IHsKICAgICAgICAgICAgZWxlbWVudDogYC4ke3RoaXMuY29uc3RydWN0b3IuTkFNRX0tYXJyb3dgCiAgICAgICAgICB9CiAgICAgICAgfSwgewogICAgICAgICAgbmFtZTogJ3ByZVNldFBsYWNlbWVudCcsCiAgICAgICAgICBlbmFibGVkOiB0cnVlLAogICAgICAgICAgcGhhc2U6ICdiZWZvcmVNYWluJywKICAgICAgICAgIGZuOiBkYXRhID0+IHsKICAgICAgICAgICAgLy8gUHJlLXNldCBQb3BwZXIncyBwbGFjZW1lbnQgYXR0cmlidXRlIGluIG9yZGVyIHRvIHJlYWQgdGhlIGFycm93IHNpemVzIHByb3Blcmx5LgogICAgICAgICAgICAvLyBPdGhlcndpc2UsIFBvcHBlciBtaXhlcyB1cCB0aGUgd2lkdGggYW5kIGhlaWdodCBkaW1lbnNpb25zIHNpbmNlIHRoZSBpbml0aWFsIGFycm93IHN0eWxlIGlzIGZvciB0b3AgcGxhY2VtZW50CiAgICAgICAgICAgIHRoaXMuX2dldFRpcEVsZW1lbnQoKS5zZXRBdHRyaWJ1dGUoJ2RhdGEtcG9wcGVyLXBsYWNlbWVudCcsIGRhdGEuc3RhdGUucGxhY2VtZW50KTsKICAgICAgICAgIH0KICAgICAgICB9XQogICAgICB9OwogICAgICByZXR1cm4geyAuLi5kZWZhdWx0QnNQb3BwZXJDb25maWcsCiAgICAgICAgLi4uKHR5cGVvZiB0aGlzLl9jb25maWcucG9wcGVyQ29uZmlnID09PSAnZnVuY3Rpb24nID8gdGhpcy5fY29uZmlnLnBvcHBlckNvbmZpZyhkZWZhdWx0QnNQb3BwZXJDb25maWcpIDogdGhpcy5fY29uZmlnLnBvcHBlckNvbmZpZykKICAgICAgfTsKICAgIH0KCiAgICBfc2V0TGlzdGVuZXJzKCkgewogICAgICBjb25zdCB0cmlnZ2VycyA9IHRoaXMuX2NvbmZpZy50cmlnZ2VyLnNwbGl0KCcgJyk7CgogICAgICBmb3IgKGNvbnN0IHRyaWdnZXIgb2YgdHJpZ2dlcnMpIHsKICAgICAgICBpZiAodHJpZ2dlciA9PT0gJ2NsaWNrJykgewogICAgICAgICAgRXZlbnRIYW5kbGVyX19kZWZhdWx0LmRlZmF1bHQub24odGhpcy5fZWxlbWVudCwgdGhpcy5jb25zdHJ1Y3Rvci5ldmVudE5hbWUoRVZFTlRfQ0xJQ0spLCB0aGlzLl9jb25maWcuc2VsZWN0b3IsIGV2ZW50ID0+IHsKICAgICAgICAgICAgY29uc3QgY29udGV4dCA9IHRoaXMuX2luaXRpYWxpemVPbkRlbGVnYXRlZFRhcmdldChldmVudCk7CgogICAgICAgICAgICBjb250ZXh0LnRvZ2dsZSgpOwogICAgICAgICAgfSk7CiAgICAgICAgfSBlbHNlIGlmICh0cmlnZ2VyICE9PSBUUklHR0VSX01BTlVBTCkgewogICAgICAgICAgY29uc3QgZXZlbnRJbiA9IHRyaWdnZXIgPT09IFRSSUdHRVJfSE9WRVIgPyB0aGlzLmNvbnN0cnVjdG9yLmV2ZW50TmFtZShFVkVOVF9NT1VTRUVOVEVSKSA6IHRoaXMuY29uc3RydWN0b3IuZXZlbnROYW1lKEVWRU5UX0ZPQ1VTSU4pOwogICAgICAgICAgY29uc3QgZXZlbnRPdXQgPSB0cmlnZ2VyID09PSBUUklHR0VSX0hPVkVSID8gdGhpcy5jb25zdHJ1Y3Rvci5ldmVudE5hbWUoRVZFTlRfTU9VU0VMRUFWRSkgOiB0aGlzLmNvbnN0cnVjdG9yLmV2ZW50TmFtZShFVkVOVF9GT0NVU09VVCk7CiAgICAgICAgICBFdmVudEhhbmRsZXJfX2RlZmF1bHQuZGVmYXVsdC5vbih0aGlzLl9lbGVtZW50LCBldmVudEluLCB0aGlzLl9jb25maWcuc2VsZWN0b3IsIGV2ZW50ID0+IHsKICAgICAgICAgICAgY29uc3QgY29udGV4dCA9IHRoaXMuX2luaXRpYWxpemVPbkRlbGVnYXRlZFRhcmdldChldmVudCk7CgogICAgICAgICAgICBjb250ZXh0Ll9hY3RpdmVUcmlnZ2VyW2V2ZW50LnR5cGUgPT09ICdmb2N1c2luJyA/IFRSSUdHRVJfRk9DVVMgOiBUUklHR0VSX0hPVkVSXSA9IHRydWU7CgogICAgICAgICAgICBjb250ZXh0Ll9lbnRlcigpOwogICAgICAgICAgfSk7CiAgICAgICAgICBFdmVudEhhbmRsZXJfX2RlZmF1bHQuZGVmYXVsdC5vbih0aGlzLl9lbGVtZW50LCBldmVudE91dCwgdGhpcy5fY29uZmlnLnNlbGVjdG9yLCBldmVudCA9PiB7CiAgICAgICAgICAgIGNvbnN0IGNvbnRleHQgPSB0aGlzLl9pbml0aWFsaXplT25EZWxlZ2F0ZWRUYXJnZXQoZXZlbnQpOwoKICAgICAgICAgICAgY29udGV4dC5fYWN0aXZlVHJpZ2dlcltldmVudC50eXBlID09PSAnZm9jdXNvdXQnID8gVFJJR0dFUl9GT0NVUyA6IFRSSUdHRVJfSE9WRVJdID0gY29udGV4dC5fZWxlbWVudC5jb250YWlucyhldmVudC5yZWxhdGVkVGFyZ2V0KTsKCiAgICAgICAgICAgIGNvbnRleHQuX2xlYXZlKCk7CiAgICAgICAgICB9KTsKICAgICAgICB9CiAgICAgIH0KCiAgICAgIHRoaXMuX2hpZGVNb2RhbEhhbmRsZXIgPSAoKSA9PiB7CiAgICAgICAgaWYgKHRoaXMuX2VsZW1lbnQpIHsKICAgICAgICAgIHRoaXMuaGlkZSgpOwogICAgICAgIH0KICAgICAgfTsKCiAgICAgIEV2ZW50SGFuZGxlcl9fZGVmYXVsdC5kZWZhdWx0Lm9uKHRoaXMuX2VsZW1lbnQuY2xvc2VzdChTRUxFQ1RPUl9NT0RBTCksIEVWRU5UX01PREFMX0hJREUsIHRoaXMuX2hpZGVNb2RhbEhhbmRsZXIpOwogICAgfQoKICAgIF9maXhUaXRsZSgpIHsKICAgICAgY29uc3QgdGl0bGUgPSB0aGlzLl9lbGVtZW50LmdldEF0dHJpYnV0ZSgndGl0bGUnKTsKCiAgICAgIGlmICghdGl0bGUpIHsKICAgICAgICByZXR1cm47CiAgICAgIH0KCiAgICAgIGlmICghdGhpcy5fZWxlbWVudC5nZXRBdHRyaWJ1dGUoJ2FyaWEtbGFiZWwnKSAmJiAhdGhpcy5fZWxlbWVudC50ZXh0Q29udGVudC50cmltKCkpIHsKICAgICAgICB0aGlzLl9lbGVtZW50LnNldEF0dHJpYnV0ZSgnYXJpYS1sYWJlbCcsIHRpdGxlKTsKICAgICAgfQoKICAgICAgdGhpcy5fZWxlbWVudC5zZXRBdHRyaWJ1dGUoJ2RhdGEtYnMtb3JpZ2luYWwtdGl0bGUnLCB0aXRsZSk7IC8vIERPIE5PVCBVU0UgSVQuIElzIG9ubHkgZm9yIGJhY2t3YXJkcyBjb21wYXRpYmlsaXR5CgoKICAgICAgdGhpcy5fZWxlbWVudC5yZW1vdmVBdHRyaWJ1dGUoJ3RpdGxlJyk7CiAgICB9CgogICAgX2VudGVyKCkgewogICAgICBpZiAodGhpcy5faXNTaG93bigpIHx8IHRoaXMuX2lzSG92ZXJlZCkgewogICAgICAgIHRoaXMuX2lzSG92ZXJlZCA9IHRydWU7CiAgICAgICAgcmV0dXJuOwogICAgICB9CgogICAgICB0aGlzLl9pc0hvdmVyZWQgPSB0cnVlOwoKICAgICAgdGhpcy5fc2V0VGltZW91dCgoKSA9PiB7CiAgICAgICAgaWYgKHRoaXMuX2lzSG92ZXJlZCkgewogICAgICAgICAgdGhpcy5zaG93KCk7CiAgICAgICAgfQogICAgICB9LCB0aGlzLl9jb25maWcuZGVsYXkuc2hvdyk7CiAgICB9CgogICAgX2xlYXZlKCkgewogICAgICBpZiAodGhpcy5faXNXaXRoQWN0aXZlVHJpZ2dlcigpKSB7CiAgICAgICAgcmV0dXJuOwogICAgICB9CgogICAgICB0aGlzLl9pc0hvdmVyZWQgPSBmYWxzZTsKCiAgICAgIHRoaXMuX3NldFRpbWVvdXQoKCkgPT4gewogICAgICAgIGlmICghdGhpcy5faXNIb3ZlcmVkKSB7CiAgICAgICAgICB0aGlzLmhpZGUoKTsKICAgICAgICB9CiAgICAgIH0sIHRoaXMuX2NvbmZpZy5kZWxheS5oaWRlKTsKICAgIH0KCiAgICBfc2V0VGltZW91dChoYW5kbGVyLCB0aW1lb3V0KSB7CiAgICAgIGNsZWFyVGltZW91dCh0aGlzLl90aW1lb3V0KTsKICAgICAgdGhpcy5fdGltZW91dCA9IHNldFRpbWVvdXQoaGFuZGxlciwgdGltZW91dCk7CiAgICB9CgogICAgX2lzV2l0aEFjdGl2ZVRyaWdnZXIoKSB7CiAgICAgIHJldHVybiBPYmplY3QudmFsdWVzKHRoaXMuX2FjdGl2ZVRyaWdnZXIpLmluY2x1ZGVzKHRydWUpOwogICAgfQoKICAgIF9nZXRDb25maWcoY29uZmlnKSB7CiAgICAgIGNvbnN0IGRhdGFBdHRyaWJ1dGVzID0gTWFuaXB1bGF0b3JfX2RlZmF1bHQuZGVmYXVsdC5nZXREYXRhQXR0cmlidXRlcyh0aGlzLl9lbGVtZW50KTsKCiAgICAgIGZvciAoY29uc3QgZGF0YUF0dHJpYnV0ZSBvZiBPYmplY3Qua2V5cyhkYXRhQXR0cmlidXRlcykpIHsKICAgICAgICBpZiAoRElTQUxMT1dFRF9BVFRSSUJVVEVTLmhhcyhkYXRhQXR0cmlidXRlKSkgewogICAgICAgICAgZGVsZXRlIGRhdGFBdHRyaWJ1dGVzW2RhdGFBdHRyaWJ1dGVdOwogICAgICAgIH0KICAgICAgfQoKICAgICAgY29uZmlnID0geyAuLi5kYXRhQXR0cmlidXRlcywKICAgICAgICAuLi4odHlwZW9mIGNvbmZpZyA9PT0gJ29iamVjdCcgJiYgY29uZmlnID8gY29uZmlnIDoge30pCiAgICAgIH07CiAgICAgIGNvbmZpZyA9IHRoaXMuX21lcmdlQ29uZmlnT2JqKGNvbmZpZyk7CiAgICAgIGNvbmZpZyA9IHRoaXMuX2NvbmZpZ0FmdGVyTWVyZ2UoY29uZmlnKTsKCiAgICAgIHRoaXMuX3R5cGVDaGVja0NvbmZpZyhjb25maWcpOwoKICAgICAgcmV0dXJuIGNvbmZpZzsKICAgIH0KCiAgICBfY29uZmlnQWZ0ZXJNZXJnZShjb25maWcpIHsKICAgICAgY29uZmlnLmNvbnRhaW5lciA9IGNvbmZpZy5jb250YWluZXIgPT09IGZhbHNlID8gZG9jdW1lbnQuYm9keSA6IGluZGV4LmdldEVsZW1lbnQoY29uZmlnLmNvbnRhaW5lcik7CgogICAgICBpZiAodHlwZW9mIGNvbmZpZy5kZWxheSA9PT0gJ251bWJlcicpIHsKICAgICAgICBjb25maWcuZGVsYXkgPSB7CiAgICAgICAgICBzaG93OiBjb25maWcuZGVsYXksCiAgICAgICAgICBoaWRlOiBjb25maWcuZGVsYXkKICAgICAgICB9OwogICAgICB9CgogICAgICBpZiAodHlwZW9mIGNvbmZpZy50aXRsZSA9PT0gJ251bWJlcicpIHsKICAgICAgICBjb25maWcudGl0bGUgPSBjb25maWcudGl0bGUudG9TdHJpbmcoKTsKICAgICAgfQoKICAgICAgaWYgKHR5cGVvZiBjb25maWcuY29udGVudCA9PT0gJ251bWJlcicpIHsKICAgICAgICBjb25maWcuY29udGVudCA9IGNvbmZpZy5jb250ZW50LnRvU3RyaW5nKCk7CiAgICAgIH0KCiAgICAgIHJldHVybiBjb25maWc7CiAgICB9CgogICAgX2dldERlbGVnYXRlQ29uZmlnKCkgewogICAgICBjb25zdCBjb25maWcgPSB7fTsKCiAgICAgIGZvciAoY29uc3Qga2V5IGluIHRoaXMuX2NvbmZpZykgewogICAgICAgIGlmICh0aGlzLmNvbnN0cnVjdG9yLkRlZmF1bHRba2V5XSAhPT0gdGhpcy5fY29uZmlnW2tleV0pIHsKICAgICAgICAgIGNvbmZpZ1trZXldID0gdGhpcy5fY29uZmlnW2tleV07CiAgICAgICAgfQogICAgICB9CgogICAgICBjb25maWcuc2VsZWN0b3IgPSBmYWxzZTsKICAgICAgY29uZmlnLnRyaWdnZXIgPSAnbWFudWFsJzsgLy8gSW4gdGhlIGZ1dHVyZSBjYW4gYmUgcmVwbGFjZWQgd2l0aDoKICAgICAgLy8gY29uc3Qga2V5c1dpdGhEaWZmZXJlbnRWYWx1ZXMgPSBPYmplY3QuZW50cmllcyh0aGlzLl9jb25maWcpLmZpbHRlcihlbnRyeSA9PiB0aGlzLmNvbnN0cnVjdG9yLkRlZmF1bHRbZW50cnlbMF1dICE9PSB0aGlzLl9jb25maWdbZW50cnlbMF1dKQogICAgICAvLyBgT2JqZWN0LmZyb21FbnRyaWVzKGtleXNXaXRoRGlmZmVyZW50VmFsdWVzKWAKCiAgICAgIHJldHVybiBjb25maWc7CiAgICB9CgogICAgX2Rpc3Bvc2VQb3BwZXIoKSB7CiAgICAgIGlmICh0aGlzLl9wb3BwZXIpIHsKICAgICAgICB0aGlzLl9wb3BwZXIuZGVzdHJveSgpOwoKICAgICAgICB0aGlzLl9wb3BwZXIgPSBudWxsOwogICAgICB9CgogICAgICBpZiAodGhpcy50aXApIHsKICAgICAgICB0aGlzLnRpcC5yZW1vdmUoKTsKICAgICAgICB0aGlzLnRpcCA9IG51bGw7CiAgICAgIH0KICAgIH0gLy8gU3RhdGljCgoKICAgIHN0YXRpYyBqUXVlcnlJbnRlcmZhY2UoY29uZmlnKSB7CiAgICAgIHJldHVybiB0aGlzLmVhY2goZnVuY3Rpb24gKCkgewogICAgICAgIGNvbnN0IGRhdGEgPSBUb29sdGlwLmdldE9yQ3JlYXRlSW5zdGFuY2UodGhpcywgY29uZmlnKTsKCiAgICAgICAgaWYgKHR5cGVvZiBjb25maWcgIT09ICdzdHJpbmcnKSB7CiAgICAgICAgICByZXR1cm47CiAgICAgICAgfQoKICAgICAgICBpZiAodHlwZW9mIGRhdGFbY29uZmlnXSA9PT0gJ3VuZGVmaW5lZCcpIHsKICAgICAgICAgIHRocm93IG5ldyBUeXBlRXJyb3IoYE5vIG1ldGhvZCBuYW1lZCAiJHtjb25maWd9ImApOwogICAgICAgIH0KCiAgICAgICAgZGF0YVtjb25maWddKCk7CiAgICAgIH0pOwogICAgfQoKICB9CiAgLyoqCiAgICogalF1ZXJ5CiAgICovCgoKICBpbmRleC5kZWZpbmVKUXVlcnlQbHVnaW4oVG9vbHRpcCk7CgogIHJldHVybiBUb29sdGlwOwoKfSkpOwovLyMgc291cmNlTWFwcGluZ1VSTD10b29sdGlwLmpzLm1hcAoKCi8qKiovIH0pLAoKLyoqKi8gIi4vbm9kZV9tb2R1bGVzL2Jvb3RzdHJhcC9qcy9kaXN0L3V0aWwvYmFja2Ryb3AuanMiOgovKiEqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiohKlwKICAhKioqIC4vbm9kZV9tb2R1bGVzL2Jvb3RzdHJhcC9qcy9kaXN0L3V0aWwvYmFja2Ryb3AuanMgKioqIQogIFwqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiovCi8qKiovIChmdW5jdGlvbihtb2R1bGUsIF9fdW51c2VkX3dlYnBhY2tfZXhwb3J0cywgX193ZWJwYWNrX3JlcXVpcmVfXykgewoKLyohCiAgKiBCb290c3RyYXAgYmFja2Ryb3AuanMgdjUuMi4zIChodHRwczovL2dldGJvb3RzdHJhcC5jb20vKQogICogQ29weXJpZ2h0IDIwMTEtMjAyMiBUaGUgQm9vdHN0cmFwIEF1dGhvcnMgKGh0dHBzOi8vZ2l0aHViLmNvbS90d2JzL2Jvb3RzdHJhcC9ncmFwaHMvY29udHJpYnV0b3JzKQogICogTGljZW5zZWQgdW5kZXIgTUlUIChodHRwczovL2dpdGh1Yi5jb20vdHdicy9ib290c3RyYXAvYmxvYi9tYWluL0xJQ0VOU0UpCiAgKi8KKGZ1bmN0aW9uIChnbG9iYWwsIGZhY3RvcnkpIHsKICAgdHJ1ZSA/IG1vZHVsZS5leHBvcnRzID0gZmFjdG9yeShfX3dlYnBhY2tfcmVxdWlyZV9fKC8qISAuLi9kb20vZXZlbnQtaGFuZGxlciAqLyAiLi9ub2RlX21vZHVsZXMvYm9vdHN0cmFwL2pzL2Rpc3QvZG9tL2V2ZW50LWhhbmRsZXIuanMiKSwgX193ZWJwYWNrX3JlcXVpcmVfXygvKiEgLi9pbmRleCAqLyAiLi9ub2RlX21vZHVsZXMvYm9vdHN0cmFwL2pzL2Rpc3QvdXRpbC9pbmRleC5qcyIpLCBfX3dlYnBhY2tfcmVxdWlyZV9fKC8qISAuL2NvbmZpZyAqLyAiLi9ub2RlX21vZHVsZXMvYm9vdHN0cmFwL2pzL2Rpc3QvdXRpbC9jb25maWcuanMiKSkgOgogIDA7Cn0pKHRoaXMsIChmdW5jdGlvbiAoRXZlbnRIYW5kbGVyLCBpbmRleCwgQ29uZmlnKSB7ICd1c2Ugc3RyaWN0JzsKCiAgY29uc3QgX2ludGVyb3BEZWZhdWx0TGVnYWN5ID0gZSA9PiBlICYmIHR5cGVvZiBlID09PSAnb2JqZWN0JyAmJiAnZGVmYXVsdCcgaW4gZSA/IGUgOiB7IGRlZmF1bHQ6IGUgfTsKCiAgY29uc3QgRXZlbnRIYW5kbGVyX19kZWZhdWx0ID0gLyojX19QVVJFX18qL19pbnRlcm9wRGVmYXVsdExlZ2FjeShFdmVudEhhbmRsZXIpOwogIGNvbnN0IENvbmZpZ19fZGVmYXVsdCA9IC8qI19fUFVSRV9fKi9faW50ZXJvcERlZmF1bHRMZWdhY3koQ29uZmlnKTsKCiAgLyoqCiAgICogLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0KICAgKiBCb290c3RyYXAgKHY1LjIuMyk6IHV0aWwvYmFja2Ryb3AuanMKICAgKiBMaWNlbnNlZCB1bmRlciBNSVQgKGh0dHBzOi8vZ2l0aHViLmNvbS90d2JzL2Jvb3RzdHJhcC9ibG9iL21haW4vTElDRU5TRSkKICAgKiAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLQogICAqLwogIC8qKgogICAqIENvbnN0YW50cwogICAqLwoKICBjb25zdCBOQU1FID0gJ2JhY2tkcm9wJzsKICBjb25zdCBDTEFTU19OQU1FX0ZBREUgPSAnZmFkZSc7CiAgY29uc3QgQ0xBU1NfTkFNRV9TSE9XID0gJ3Nob3cnOwogIGNvbnN0IEVWRU5UX01PVVNFRE9XTiA9IGBtb3VzZWRvd24uYnMuJHtOQU1FfWA7CiAgY29uc3QgRGVmYXVsdCA9IHsKICAgIGNsYXNzTmFtZTogJ21vZGFsLWJhY2tkcm9wJywKICAgIGNsaWNrQ2FsbGJhY2s6IG51bGwsCiAgICBpc0FuaW1hdGVkOiBmYWxzZSwKICAgIGlzVmlzaWJsZTogdHJ1ZSwKICAgIC8vIGlmIGZhbHNlLCB3ZSB1c2UgdGhlIGJhY2tkcm9wIGhlbHBlciB3aXRob3V0IGFkZGluZyBhbnkgZWxlbWVudCB0byB0aGUgZG9tCiAgICByb290RWxlbWVudDogJ2JvZHknIC8vIGdpdmUgdGhlIGNob2ljZSB0byBwbGFjZSBiYWNrZHJvcCB1bmRlciBkaWZmZXJlbnQgZWxlbWVudHMKCiAgfTsKICBjb25zdCBEZWZhdWx0VHlwZSA9IHsKICAgIGNsYXNzTmFtZTogJ3N0cmluZycsCiAgICBjbGlja0NhbGxiYWNrOiAnKGZ1bmN0aW9ufG51bGwpJywKICAgIGlzQW5pbWF0ZWQ6ICdib29sZWFuJywKICAgIGlzVmlzaWJsZTogJ2Jvb2xlYW4nLAogICAgcm9vdEVsZW1lbnQ6ICcoZWxlbWVudHxzdHJpbmcpJwogIH07CiAgLyoqCiAgICogQ2xhc3MgZGVmaW5pdGlvbgogICAqLwoKICBjbGFzcyBCYWNrZHJvcCBleHRlbmRzIENvbmZpZ19fZGVmYXVsdC5kZWZhdWx0IHsKICAgIGNvbnN0cnVjdG9yKGNvbmZpZykgewogICAgICBzdXBlcigpOwogICAgICB0aGlzLl9jb25maWcgPSB0aGlzLl9nZXRDb25maWcoY29uZmlnKTsKICAgICAgdGhpcy5faXNBcHBlbmRlZCA9IGZhbHNlOwogICAgICB0aGlzLl9lbGVtZW50ID0gbnVsbDsKICAgIH0gLy8gR2V0dGVycwoKCiAgICBzdGF0aWMgZ2V0IERlZmF1bHQoKSB7CiAgICAgIHJldHVybiBEZWZhdWx0OwogICAgfQoKICAgIHN0YXRpYyBnZXQgRGVmYXVsdFR5cGUoKSB7CiAgICAgIHJldHVybiBEZWZhdWx0VHlwZTsKICAgIH0KCiAgICBzdGF0aWMgZ2V0IE5BTUUoKSB7CiAgICAgIHJldHVybiBOQU1FOwogICAgfSAvLyBQdWJsaWMKCgogICAgc2hvdyhjYWxsYmFjaykgewogICAgICBpZiAoIXRoaXMuX2NvbmZpZy5pc1Zpc2libGUpIHsKICAgICAgICBpbmRleC5leGVjdXRlKGNhbGxiYWNrKTsKICAgICAgICByZXR1cm47CiAgICAgIH0KCiAgICAgIHRoaXMuX2FwcGVuZCgpOwoKICAgICAgY29uc3QgZWxlbWVudCA9IHRoaXMuX2dldEVsZW1lbnQoKTsKCiAgICAgIGlmICh0aGlzLl9jb25maWcuaXNBbmltYXRlZCkgewogICAgICAgIGluZGV4LnJlZmxvdyhlbGVtZW50KTsKICAgICAgfQoKICAgICAgZWxlbWVudC5jbGFzc0xpc3QuYWRkKENMQVNTX05BTUVfU0hPVyk7CgogICAgICB0aGlzLl9lbXVsYXRlQW5pbWF0aW9uKCgpID0+IHsKICAgICAgICBpbmRleC5leGVjdXRlKGNhbGxiYWNrKTsKICAgICAgfSk7CiAgICB9CgogICAgaGlkZShjYWxsYmFjaykgewogICAgICBpZiAoIXRoaXMuX2NvbmZpZy5pc1Zpc2libGUpIHsKICAgICAgICBpbmRleC5leGVjdXRlKGNhbGxiYWNrKTsKICAgICAgICByZXR1cm47CiAgICAgIH0KCiAgICAgIHRoaXMuX2dldEVsZW1lbnQoKS5jbGFzc0xpc3QucmVtb3ZlKENMQVNTX05BTUVfU0hPVyk7CgogICAgICB0aGlzLl9lbXVsYXRlQW5pbWF0aW9uKCgpID0+IHsKICAgICAgICB0aGlzLmRpc3Bvc2UoKTsKICAgICAgICBpbmRleC5leGVjdXRlKGNhbGxiYWNrKTsKICAgICAgfSk7CiAgICB9CgogICAgZGlzcG9zZSgpIHsKICAgICAgaWYgKCF0aGlzLl9pc0FwcGVuZGVkKSB7CiAgICAgICAgcmV0dXJuOwogICAgICB9CgogICAgICBFdmVudEhhbmRsZXJfX2RlZmF1bHQuZGVmYXVsdC5vZmYodGhpcy5fZWxlbWVudCwgRVZFTlRfTU9VU0VET1dOKTsKCiAgICAgIHRoaXMuX2VsZW1lbnQucmVtb3ZlKCk7CgogICAgICB0aGlzLl9pc0FwcGVuZGVkID0gZmFsc2U7CiAgICB9IC8vIFByaXZhdGUKCgogICAgX2dldEVsZW1lbnQoKSB7CiAgICAgIGlmICghdGhpcy5fZWxlbWVudCkgewogICAgICAgIGNvbnN0IGJhY2tkcm9wID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnZGl2Jyk7CiAgICAgICAgYmFja2Ryb3AuY2xhc3NOYW1lID0gdGhpcy5fY29uZmlnLmNsYXNzTmFtZTsKCiAgICAgICAgaWYgKHRoaXMuX2NvbmZpZy5pc0FuaW1hdGVkKSB7CiAgICAgICAgICBiYWNrZHJvcC5jbGFzc0xpc3QuYWRkKENMQVNTX05BTUVfRkFERSk7CiAgICAgICAgfQoKICAgICAgICB0aGlzLl9lbGVtZW50ID0gYmFja2Ryb3A7CiAgICAgIH0KCiAgICAgIHJldHVybiB0aGlzLl9lbGVtZW50OwogICAgfQoKICAgIF9jb25maWdBZnRlck1lcmdlKGNvbmZpZykgewogICAgICAvLyB1c2UgZ2V0RWxlbWVudCgpIHdpdGggdGhlIGRlZmF1bHQgImJvZHkiIHRvIGdldCBhIGZyZXNoIEVsZW1lbnQgb24gZWFjaCBpbnN0YW50aWF0aW9uCiAgICAgIGNvbmZpZy5yb290RWxlbWVudCA9IGluZGV4LmdldEVsZW1lbnQoY29uZmlnLnJvb3RFbGVtZW50KTsKICAgICAgcmV0dXJuIGNvbmZpZzsKICAgIH0KCiAgICBfYXBwZW5kKCkgewogICAgICBpZiAodGhpcy5faXNBcHBlbmRlZCkgewogICAgICAgIHJldHVybjsKICAgICAgfQoKICAgICAgY29uc3QgZWxlbWVudCA9IHRoaXMuX2dldEVsZW1lbnQoKTsKCiAgICAgIHRoaXMuX2NvbmZpZy5yb290RWxlbWVudC5hcHBlbmQoZWxlbWVudCk7CgogICAgICBFdmVudEhhbmRsZXJfX2RlZmF1bHQuZGVmYXVsdC5vbihlbGVtZW50LCBFVkVOVF9NT1VTRURPV04sICgpID0+IHsKICAgICAgICBpbmRleC5leGVjdXRlKHRoaXMuX2NvbmZpZy5jbGlja0NhbGxiYWNrKTsKICAgICAgfSk7CiAgICAgIHRoaXMuX2lzQXBwZW5kZWQgPSB0cnVlOwogICAgfQoKICAgIF9lbXVsYXRlQW5pbWF0aW9uKGNhbGxiYWNrKSB7CiAgICAgIGluZGV4LmV4ZWN1dGVBZnRlclRyYW5zaXRpb24oY2FsbGJhY2ssIHRoaXMuX2dldEVsZW1lbnQoKSwgdGhpcy5fY29uZmlnLmlzQW5pbWF0ZWQpOwogICAgfQoKICB9CgogIHJldHVybiBCYWNrZHJvcDsKCn0pKTsKLy8jIHNvdXJjZU1hcHBpbmdVUkw9YmFja2Ryb3AuanMubWFwCgoKLyoqKi8gfSksCgovKioqLyAiLi9ub2RlX21vZHVsZXMvYm9vdHN0cmFwL2pzL2Rpc3QvdXRpbC9jb21wb25lbnQtZnVuY3Rpb25zLmpzIjoKLyohKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiohKlwKICAhKioqIC4vbm9kZV9tb2R1bGVzL2Jvb3RzdHJhcC9qcy9kaXN0L3V0aWwvY29tcG9uZW50LWZ1bmN0aW9ucy5qcyAqKiohCiAgXCoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqLwovKioqLyAoZnVuY3Rpb24oX191bnVzZWRfd2VicGFja19tb2R1bGUsIGV4cG9ydHMsIF9fd2VicGFja19yZXF1aXJlX18pIHsKCi8qIQogICogQm9vdHN0cmFwIGNvbXBvbmVudC1mdW5jdGlvbnMuanMgdjUuMi4zIChodHRwczovL2dldGJvb3RzdHJhcC5jb20vKQogICogQ29weXJpZ2h0IDIwMTEtMjAyMiBUaGUgQm9vdHN0cmFwIEF1dGhvcnMgKGh0dHBzOi8vZ2l0aHViLmNvbS90d2JzL2Jvb3RzdHJhcC9ncmFwaHMvY29udHJpYnV0b3JzKQogICogTGljZW5zZWQgdW5kZXIgTUlUIChodHRwczovL2dpdGh1Yi5jb20vdHdicy9ib290c3RyYXAvYmxvYi9tYWluL0xJQ0VOU0UpCiAgKi8KKGZ1bmN0aW9uIChnbG9iYWwsIGZhY3RvcnkpIHsKICAgdHJ1ZSA/IGZhY3RvcnkoZXhwb3J0cywgX193ZWJwYWNrX3JlcXVpcmVfXygvKiEgLi4vZG9tL2V2ZW50LWhhbmRsZXIgKi8gIi4vbm9kZV9tb2R1bGVzL2Jvb3RzdHJhcC9qcy9kaXN0L2RvbS9ldmVudC1oYW5kbGVyLmpzIiksIF9fd2VicGFja19yZXF1aXJlX18oLyohIC4vaW5kZXggKi8gIi4vbm9kZV9tb2R1bGVzL2Jvb3RzdHJhcC9qcy9kaXN0L3V0aWwvaW5kZXguanMiKSkgOgogIDA7Cn0pKHRoaXMsIChmdW5jdGlvbiAoZXhwb3J0cywgRXZlbnRIYW5kbGVyLCBpbmRleCkgeyAndXNlIHN0cmljdCc7CgogIGNvbnN0IF9pbnRlcm9wRGVmYXVsdExlZ2FjeSA9IGUgPT4gZSAmJiB0eXBlb2YgZSA9PT0gJ29iamVjdCcgJiYgJ2RlZmF1bHQnIGluIGUgPyBlIDogeyBkZWZhdWx0OiBlIH07CgogIGNvbnN0IEV2ZW50SGFuZGxlcl9fZGVmYXVsdCA9IC8qI19fUFVSRV9fKi9faW50ZXJvcERlZmF1bHRMZWdhY3koRXZlbnRIYW5kbGVyKTsKCiAgLyoqCiAgICogLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0KICAgKiBCb290c3RyYXAgKHY1LjIuMyk6IHV0aWwvY29tcG9uZW50LWZ1bmN0aW9ucy5qcwogICAqIExpY2Vuc2VkIHVuZGVyIE1JVCAoaHR0cHM6Ly9naXRodWIuY29tL3R3YnMvYm9vdHN0cmFwL2Jsb2IvbWFpbi9MSUNFTlNFKQogICAqIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tCiAgICovCgogIGNvbnN0IGVuYWJsZURpc21pc3NUcmlnZ2VyID0gKGNvbXBvbmVudCwgbWV0aG9kID0gJ2hpZGUnKSA9PiB7CiAgICBjb25zdCBjbGlja0V2ZW50ID0gYGNsaWNrLmRpc21pc3Mke2NvbXBvbmVudC5FVkVOVF9LRVl9YDsKICAgIGNvbnN0IG5hbWUgPSBjb21wb25lbnQuTkFNRTsKICAgIEV2ZW50SGFuZGxlcl9fZGVmYXVsdC5kZWZhdWx0Lm9uKGRvY3VtZW50LCBjbGlja0V2ZW50LCBgW2RhdGEtYnMtZGlzbWlzcz0iJHtuYW1lfSJdYCwgZnVuY3Rpb24gKGV2ZW50KSB7CiAgICAgIGlmIChbJ0EnLCAnQVJFQSddLmluY2x1ZGVzKHRoaXMudGFnTmFtZSkpIHsKICAgICAgICBldmVudC5wcmV2ZW50RGVmYXVsdCgpOwogICAgICB9CgogICAgICBpZiAoaW5kZXguaXNEaXNhYmxlZCh0aGlzKSkgewogICAgICAgIHJldHVybjsKICAgICAgfQoKICAgICAgY29uc3QgdGFyZ2V0ID0gaW5kZXguZ2V0RWxlbWVudEZyb21TZWxlY3Rvcih0aGlzKSB8fCB0aGlzLmNsb3Nlc3QoYC4ke25hbWV9YCk7CiAgICAgIGNvbnN0IGluc3RhbmNlID0gY29tcG9uZW50LmdldE9yQ3JlYXRlSW5zdGFuY2UodGFyZ2V0KTsgLy8gTWV0aG9kIGFyZ3VtZW50IGlzIGxlZnQsIGZvciBBbGVydCBhbmQgb25seSwgYXMgaXQgZG9lc24ndCBpbXBsZW1lbnQgdGhlICdoaWRlJyBtZXRob2QKCiAgICAgIGluc3RhbmNlW21ldGhvZF0oKTsKICAgIH0pOwogIH07CgogIGV4cG9ydHMuZW5hYmxlRGlzbWlzc1RyaWdnZXIgPSBlbmFibGVEaXNtaXNzVHJpZ2dlcjsKCiAgT2JqZWN0LmRlZmluZVByb3BlcnRpZXMoZXhwb3J0cywgeyBfX2VzTW9kdWxlOiB7IHZhbHVlOiB0cnVlIH0sIFtTeW1ib2wudG9TdHJpbmdUYWddOiB7IHZhbHVlOiAnTW9kdWxlJyB9IH0pOwoKfSkpOwovLyMgc291cmNlTWFwcGluZ1VSTD1jb21wb25lbnQtZnVuY3Rpb25zLmpzLm1hcAoKCi8qKiovIH0pLAoKLyoqKi8gIi4vbm9kZV9tb2R1bGVzL2Jvb3RzdHJhcC9qcy9kaXN0L3V0aWwvY29uZmlnLmpzIjoKLyohKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiEqXAogICEqKiogLi9ub2RlX21vZHVsZXMvYm9vdHN0cmFwL2pzL2Rpc3QvdXRpbC9jb25maWcuanMgKioqIQogIFwqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqLwovKioqLyAoZnVuY3Rpb24obW9kdWxlLCBfX3VudXNlZF93ZWJwYWNrX2V4cG9ydHMsIF9fd2VicGFja19yZXF1aXJlX18pIHsKCi8qIQogICogQm9vdHN0cmFwIGNvbmZpZy5qcyB2NS4yLjMgKGh0dHBzOi8vZ2V0Ym9vdHN0cmFwLmNvbS8pCiAgKiBDb3B5cmlnaHQgMjAxMS0yMDIyIFRoZSBCb290c3RyYXAgQXV0aG9ycyAoaHR0cHM6Ly9naXRodWIuY29tL3R3YnMvYm9vdHN0cmFwL2dyYXBocy9jb250cmlidXRvcnMpCiAgKiBMaWNlbnNlZCB1bmRlciBNSVQgKGh0dHBzOi8vZ2l0aHViLmNvbS90d2JzL2Jvb3RzdHJhcC9ibG9iL21haW4vTElDRU5TRSkKICAqLwooZnVuY3Rpb24gKGdsb2JhbCwgZmFjdG9yeSkgewogICB0cnVlID8gbW9kdWxlLmV4cG9ydHMgPSBmYWN0b3J5KF9fd2VicGFja19yZXF1aXJlX18oLyohIC4vaW5kZXggKi8gIi4vbm9kZV9tb2R1bGVzL2Jvb3RzdHJhcC9qcy9kaXN0L3V0aWwvaW5kZXguanMiKSwgX193ZWJwYWNrX3JlcXVpcmVfXygvKiEgLi4vZG9tL21hbmlwdWxhdG9yICovICIuL25vZGVfbW9kdWxlcy9ib290c3RyYXAvanMvZGlzdC9kb20vbWFuaXB1bGF0b3IuanMiKSkgOgogIDA7Cn0pKHRoaXMsIChmdW5jdGlvbiAoaW5kZXgsIE1hbmlwdWxhdG9yKSB7ICd1c2Ugc3RyaWN0JzsKCiAgY29uc3QgX2ludGVyb3BEZWZhdWx0TGVnYWN5ID0gZSA9PiBlICYmIHR5cGVvZiBlID09PSAnb2JqZWN0JyAmJiAnZGVmYXVsdCcgaW4gZSA/IGUgOiB7IGRlZmF1bHQ6IGUgfTsKCiAgY29uc3QgTWFuaXB1bGF0b3JfX2RlZmF1bHQgPSAvKiNfX1BVUkVfXyovX2ludGVyb3BEZWZhdWx0TGVnYWN5KE1hbmlwdWxhdG9yKTsKCiAgLyoqCiAgICogLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0KICAgKiBCb290c3RyYXAgKHY1LjIuMyk6IHV0aWwvY29uZmlnLmpzCiAgICogTGljZW5zZWQgdW5kZXIgTUlUIChodHRwczovL2dpdGh1Yi5jb20vdHdicy9ib290c3RyYXAvYmxvYi9tYWluL0xJQ0VOU0UpCiAgICogLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0KICAgKi8KICAvKioKICAgKiBDbGFzcyBkZWZpbml0aW9uCiAgICovCgogIGNsYXNzIENvbmZpZyB7CiAgICAvLyBHZXR0ZXJzCiAgICBzdGF0aWMgZ2V0IERlZmF1bHQoKSB7CiAgICAgIHJldHVybiB7fTsKICAgIH0KCiAgICBzdGF0aWMgZ2V0IERlZmF1bHRUeXBlKCkgewogICAgICByZXR1cm4ge307CiAgICB9CgogICAgc3RhdGljIGdldCBOQU1FKCkgewogICAgICB0aHJvdyBuZXcgRXJyb3IoJ1lvdSBoYXZlIHRvIGltcGxlbWVudCB0aGUgc3RhdGljIG1ldGhvZCAiTkFNRSIsIGZvciBlYWNoIGNvbXBvbmVudCEnKTsKICAgIH0KCiAgICBfZ2V0Q29uZmlnKGNvbmZpZykgewogICAgICBjb25maWcgPSB0aGlzLl9tZXJnZUNvbmZpZ09iaihjb25maWcpOwogICAgICBjb25maWcgPSB0aGlzLl9jb25maWdBZnRlck1lcmdlKGNvbmZpZyk7CgogICAgICB0aGlzLl90eXBlQ2hlY2tDb25maWcoY29uZmlnKTsKCiAgICAgIHJldHVybiBjb25maWc7CiAgICB9CgogICAgX2NvbmZpZ0FmdGVyTWVyZ2UoY29uZmlnKSB7CiAgICAgIHJldHVybiBjb25maWc7CiAgICB9CgogICAgX21lcmdlQ29uZmlnT2JqKGNvbmZpZywgZWxlbWVudCkgewogICAgICBjb25zdCBqc29uQ29uZmlnID0gaW5kZXguaXNFbGVtZW50KGVsZW1lbnQpID8gTWFuaXB1bGF0b3JfX2RlZmF1bHQuZGVmYXVsdC5nZXREYXRhQXR0cmlidXRlKGVsZW1lbnQsICdjb25maWcnKSA6IHt9OyAvLyB0cnkgdG8gcGFyc2UKCiAgICAgIHJldHVybiB7IC4uLnRoaXMuY29uc3RydWN0b3IuRGVmYXVsdCwKICAgICAgICAuLi4odHlwZW9mIGpzb25Db25maWcgPT09ICdvYmplY3QnID8ganNvbkNvbmZpZyA6IHt9KSwKICAgICAgICAuLi4oaW5kZXguaXNFbGVtZW50KGVsZW1lbnQpID8gTWFuaXB1bGF0b3JfX2RlZmF1bHQuZGVmYXVsdC5nZXREYXRhQXR0cmlidXRlcyhlbGVtZW50KSA6IHt9KSwKICAgICAgICAuLi4odHlwZW9mIGNvbmZpZyA9PT0gJ29iamVjdCcgPyBjb25maWcgOiB7fSkKICAgICAgfTsKICAgIH0KCiAgICBfdHlwZUNoZWNrQ29uZmlnKGNvbmZpZywgY29uZmlnVHlwZXMgPSB0aGlzLmNvbnN0cnVjdG9yLkRlZmF1bHRUeXBlKSB7CiAgICAgIGZvciAoY29uc3QgcHJvcGVydHkgb2YgT2JqZWN0LmtleXMoY29uZmlnVHlwZXMpKSB7CiAgICAgICAgY29uc3QgZXhwZWN0ZWRUeXBlcyA9IGNvbmZpZ1R5cGVzW3Byb3BlcnR5XTsKICAgICAgICBjb25zdCB2YWx1ZSA9IGNvbmZpZ1twcm9wZXJ0eV07CiAgICAgICAgY29uc3QgdmFsdWVUeXBlID0gaW5kZXguaXNFbGVtZW50KHZhbHVlKSA/ICdlbGVtZW50JyA6IGluZGV4LnRvVHlwZSh2YWx1ZSk7CgogICAgICAgIGlmICghbmV3IFJlZ0V4cChleHBlY3RlZFR5cGVzKS50ZXN0KHZhbHVlVHlwZSkpIHsKICAgICAgICAgIHRocm93IG5ldyBUeXBlRXJyb3IoYCR7dGhpcy5jb25zdHJ1Y3Rvci5OQU1FLnRvVXBwZXJDYXNlKCl9OiBPcHRpb24gIiR7cHJvcGVydHl9IiBwcm92aWRlZCB0eXBlICIke3ZhbHVlVHlwZX0iIGJ1dCBleHBlY3RlZCB0eXBlICIke2V4cGVjdGVkVHlwZXN9Ii5gKTsKICAgICAgICB9CiAgICAgIH0KICAgIH0KCiAgfQoKICByZXR1cm4gQ29uZmlnOwoKfSkpOwovLyMgc291cmNlTWFwcGluZ1VSTD1jb25maWcuanMubWFwCgoKLyoqKi8gfSksCgovKioqLyAiLi9ub2RlX21vZHVsZXMvYm9vdHN0cmFwL2pzL2Rpc3QvdXRpbC9mb2N1c3RyYXAuanMiOgovKiEqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqISpcCiAgISoqKiAuL25vZGVfbW9kdWxlcy9ib290c3RyYXAvanMvZGlzdC91dGlsL2ZvY3VzdHJhcC5qcyAqKiohCiAgXCoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiovCi8qKiovIChmdW5jdGlvbihtb2R1bGUsIF9fdW51c2VkX3dlYnBhY2tfZXhwb3J0cywgX193ZWJwYWNrX3JlcXVpcmVfXykgewoKLyohCiAgKiBCb290c3RyYXAgZm9jdXN0cmFwLmpzIHY1LjIuMyAoaHR0cHM6Ly9nZXRib290c3RyYXAuY29tLykKICAqIENvcHlyaWdodCAyMDExLTIwMjIgVGhlIEJvb3RzdHJhcCBBdXRob3JzIChodHRwczovL2dpdGh1Yi5jb20vdHdicy9ib290c3RyYXAvZ3JhcGhzL2NvbnRyaWJ1dG9ycykKICAqIExpY2Vuc2VkIHVuZGVyIE1JVCAoaHR0cHM6Ly9naXRodWIuY29tL3R3YnMvYm9vdHN0cmFwL2Jsb2IvbWFpbi9MSUNFTlNFKQogICovCihmdW5jdGlvbiAoZ2xvYmFsLCBmYWN0b3J5KSB7CiAgIHRydWUgPyBtb2R1bGUuZXhwb3J0cyA9IGZhY3RvcnkoX193ZWJwYWNrX3JlcXVpcmVfXygvKiEgLi4vZG9tL2V2ZW50LWhhbmRsZXIgKi8gIi4vbm9kZV9tb2R1bGVzL2Jvb3RzdHJhcC9qcy9kaXN0L2RvbS9ldmVudC1oYW5kbGVyLmpzIiksIF9fd2VicGFja19yZXF1aXJlX18oLyohIC4uL2RvbS9zZWxlY3Rvci1lbmdpbmUgKi8gIi4vbm9kZV9tb2R1bGVzL2Jvb3RzdHJhcC9qcy9kaXN0L2RvbS9zZWxlY3Rvci1lbmdpbmUuanMiKSwgX193ZWJwYWNrX3JlcXVpcmVfXygvKiEgLi9jb25maWcgKi8gIi4vbm9kZV9tb2R1bGVzL2Jvb3RzdHJhcC9qcy9kaXN0L3V0aWwvY29uZmlnLmpzIikpIDoKICAwOwp9KSh0aGlzLCAoZnVuY3Rpb24gKEV2ZW50SGFuZGxlciwgU2VsZWN0b3JFbmdpbmUsIENvbmZpZykgeyAndXNlIHN0cmljdCc7CgogIGNvbnN0IF9pbnRlcm9wRGVmYXVsdExlZ2FjeSA9IGUgPT4gZSAmJiB0eXBlb2YgZSA9PT0gJ29iamVjdCcgJiYgJ2RlZmF1bHQnIGluIGUgPyBlIDogeyBkZWZhdWx0OiBlIH07CgogIGNvbnN0IEV2ZW50SGFuZGxlcl9fZGVmYXVsdCA9IC8qI19fUFVSRV9fKi9faW50ZXJvcERlZmF1bHRMZWdhY3koRXZlbnRIYW5kbGVyKTsKICBjb25zdCBTZWxlY3RvckVuZ2luZV9fZGVmYXVsdCA9IC8qI19fUFVSRV9fKi9faW50ZXJvcERlZmF1bHRMZWdhY3koU2VsZWN0b3JFbmdpbmUpOwogIGNvbnN0IENvbmZpZ19fZGVmYXVsdCA9IC8qI19fUFVSRV9fKi9faW50ZXJvcERlZmF1bHRMZWdhY3koQ29uZmlnKTsKCiAgLyoqCiAgICogLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0KICAgKiBCb290c3RyYXAgKHY1LjIuMyk6IHV0aWwvZm9jdXN0cmFwLmpzCiAgICogTGljZW5zZWQgdW5kZXIgTUlUIChodHRwczovL2dpdGh1Yi5jb20vdHdicy9ib290c3RyYXAvYmxvYi9tYWluL0xJQ0VOU0UpCiAgICogLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0KICAgKi8KICAvKioKICAgKiBDb25zdGFudHMKICAgKi8KCiAgY29uc3QgTkFNRSA9ICdmb2N1c3RyYXAnOwogIGNvbnN0IERBVEFfS0VZID0gJ2JzLmZvY3VzdHJhcCc7CiAgY29uc3QgRVZFTlRfS0VZID0gYC4ke0RBVEFfS0VZfWA7CiAgY29uc3QgRVZFTlRfRk9DVVNJTiA9IGBmb2N1c2luJHtFVkVOVF9LRVl9YDsKICBjb25zdCBFVkVOVF9LRVlET1dOX1RBQiA9IGBrZXlkb3duLnRhYiR7RVZFTlRfS0VZfWA7CiAgY29uc3QgVEFCX0tFWSA9ICdUYWInOwogIGNvbnN0IFRBQl9OQVZfRk9SV0FSRCA9ICdmb3J3YXJkJzsKICBjb25zdCBUQUJfTkFWX0JBQ0tXQVJEID0gJ2JhY2t3YXJkJzsKICBjb25zdCBEZWZhdWx0ID0gewogICAgYXV0b2ZvY3VzOiB0cnVlLAogICAgdHJhcEVsZW1lbnQ6IG51bGwgLy8gVGhlIGVsZW1lbnQgdG8gdHJhcCBmb2N1cyBpbnNpZGUgb2YKCiAgfTsKICBjb25zdCBEZWZhdWx0VHlwZSA9IHsKICAgIGF1dG9mb2N1czogJ2Jvb2xlYW4nLAogICAgdHJhcEVsZW1lbnQ6ICdlbGVtZW50JwogIH07CiAgLyoqCiAgICogQ2xhc3MgZGVmaW5pdGlvbgogICAqLwoKICBjbGFzcyBGb2N1c1RyYXAgZXh0ZW5kcyBDb25maWdfX2RlZmF1bHQuZGVmYXVsdCB7CiAgICBjb25zdHJ1Y3Rvcihjb25maWcpIHsKICAgICAgc3VwZXIoKTsKICAgICAgdGhpcy5fY29uZmlnID0gdGhpcy5fZ2V0Q29uZmlnKGNvbmZpZyk7CiAgICAgIHRoaXMuX2lzQWN0aXZlID0gZmFsc2U7CiAgICAgIHRoaXMuX2xhc3RUYWJOYXZEaXJlY3Rpb24gPSBudWxsOwogICAgfSAvLyBHZXR0ZXJzCgoKICAgIHN0YXRpYyBnZXQgRGVmYXVsdCgpIHsKICAgICAgcmV0dXJuIERlZmF1bHQ7CiAgICB9CgogICAgc3RhdGljIGdldCBEZWZhdWx0VHlwZSgpIHsKICAgICAgcmV0dXJuIERlZmF1bHRUeXBlOwogICAgfQoKICAgIHN0YXRpYyBnZXQgTkFNRSgpIHsKICAgICAgcmV0dXJuIE5BTUU7CiAgICB9IC8vIFB1YmxpYwoKCiAgICBhY3RpdmF0ZSgpIHsKICAgICAgaWYgKHRoaXMuX2lzQWN0aXZlKSB7CiAgICAgICAgcmV0dXJuOwogICAgICB9CgogICAgICBpZiAodGhpcy5fY29uZmlnLmF1dG9mb2N1cykgewogICAgICAgIHRoaXMuX2NvbmZpZy50cmFwRWxlbWVudC5mb2N1cygpOwogICAgICB9CgogICAgICBFdmVudEhhbmRsZXJfX2RlZmF1bHQuZGVmYXVsdC5vZmYoZG9jdW1lbnQsIEVWRU5UX0tFWSk7IC8vIGd1YXJkIGFnYWluc3QgaW5maW5pdGUgZm9jdXMgbG9vcAoKICAgICAgRXZlbnRIYW5kbGVyX19kZWZhdWx0LmRlZmF1bHQub24oZG9jdW1lbnQsIEVWRU5UX0ZPQ1VTSU4sIGV2ZW50ID0+IHRoaXMuX2hhbmRsZUZvY3VzaW4oZXZlbnQpKTsKICAgICAgRXZlbnRIYW5kbGVyX19kZWZhdWx0LmRlZmF1bHQub24oZG9jdW1lbnQsIEVWRU5UX0tFWURPV05fVEFCLCBldmVudCA9PiB0aGlzLl9oYW5kbGVLZXlkb3duKGV2ZW50KSk7CiAgICAgIHRoaXMuX2lzQWN0aXZlID0gdHJ1ZTsKICAgIH0KCiAgICBkZWFjdGl2YXRlKCkgewogICAgICBpZiAoIXRoaXMuX2lzQWN0aXZlKSB7CiAgICAgICAgcmV0dXJuOwogICAgICB9CgogICAgICB0aGlzLl9pc0FjdGl2ZSA9IGZhbHNlOwogICAgICBFdmVudEhhbmRsZXJfX2RlZmF1bHQuZGVmYXVsdC5vZmYoZG9jdW1lbnQsIEVWRU5UX0tFWSk7CiAgICB9IC8vIFByaXZhdGUKCgogICAgX2hhbmRsZUZvY3VzaW4oZXZlbnQpIHsKICAgICAgY29uc3QgewogICAgICAgIHRyYXBFbGVtZW50CiAgICAgIH0gPSB0aGlzLl9jb25maWc7CgogICAgICBpZiAoZXZlbnQudGFyZ2V0ID09PSBkb2N1bWVudCB8fCBldmVudC50YXJnZXQgPT09IHRyYXBFbGVtZW50IHx8IHRyYXBFbGVtZW50LmNvbnRhaW5zKGV2ZW50LnRhcmdldCkpIHsKICAgICAgICByZXR1cm47CiAgICAgIH0KCiAgICAgIGNvbnN0IGVsZW1lbnRzID0gU2VsZWN0b3JFbmdpbmVfX2RlZmF1bHQuZGVmYXVsdC5mb2N1c2FibGVDaGlsZHJlbih0cmFwRWxlbWVudCk7CgogICAgICBpZiAoZWxlbWVudHMubGVuZ3RoID09PSAwKSB7CiAgICAgICAgdHJhcEVsZW1lbnQuZm9jdXMoKTsKICAgICAgfSBlbHNlIGlmICh0aGlzLl9sYXN0VGFiTmF2RGlyZWN0aW9uID09PSBUQUJfTkFWX0JBQ0tXQVJEKSB7CiAgICAgICAgZWxlbWVudHNbZWxlbWVudHMubGVuZ3RoIC0gMV0uZm9jdXMoKTsKICAgICAgfSBlbHNlIHsKICAgICAgICBlbGVtZW50c1swXS5mb2N1cygpOwogICAgICB9CiAgICB9CgogICAgX2hhbmRsZUtleWRvd24oZXZlbnQpIHsKICAgICAgaWYgKGV2ZW50LmtleSAhPT0gVEFCX0tFWSkgewogICAgICAgIHJldHVybjsKICAgICAgfQoKICAgICAgdGhpcy5fbGFzdFRhYk5hdkRpcmVjdGlvbiA9IGV2ZW50LnNoaWZ0S2V5ID8gVEFCX05BVl9CQUNLV0FSRCA6IFRBQl9OQVZfRk9SV0FSRDsKICAgIH0KCiAgfQoKICByZXR1cm4gRm9jdXNUcmFwOwoKfSkpOwovLyMgc291cmNlTWFwcGluZ1VSTD1mb2N1c3RyYXAuanMubWFwCgoKLyoqKi8gfSksCgovKioqLyAiLi9ub2RlX21vZHVsZXMvYm9vdHN0cmFwL2pzL2Rpc3QvdXRpbC9pbmRleC5qcyI6Ci8qISoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiEqXAogICEqKiogLi9ub2RlX21vZHVsZXMvYm9vdHN0cmFwL2pzL2Rpc3QvdXRpbC9pbmRleC5qcyAqKiohCiAgXCoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKi8KLyoqKi8gKGZ1bmN0aW9uKF9fdW51c2VkX3dlYnBhY2tfbW9kdWxlLCBleHBvcnRzKSB7CgovKiEKICAqIEJvb3RzdHJhcCBpbmRleC5qcyB2NS4yLjMgKGh0dHBzOi8vZ2V0Ym9vdHN0cmFwLmNvbS8pCiAgKiBDb3B5cmlnaHQgMjAxMS0yMDIyIFRoZSBCb290c3RyYXAgQXV0aG9ycyAoaHR0cHM6Ly9naXRodWIuY29tL3R3YnMvYm9vdHN0cmFwL2dyYXBocy9jb250cmlidXRvcnMpCiAgKiBMaWNlbnNlZCB1bmRlciBNSVQgKGh0dHBzOi8vZ2l0aHViLmNvbS90d2JzL2Jvb3RzdHJhcC9ibG9iL21haW4vTElDRU5TRSkKICAqLwooZnVuY3Rpb24gKGdsb2JhbCwgZmFjdG9yeSkgewogICB0cnVlID8gZmFjdG9yeShleHBvcnRzKSA6CiAgMDsKfSkodGhpcywgKGZ1bmN0aW9uIChleHBvcnRzKSB7ICd1c2Ugc3RyaWN0JzsKCiAgLyoqCiAgICogLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0KICAgKiBCb290c3RyYXAgKHY1LjIuMyk6IHV0aWwvaW5kZXguanMKICAgKiBMaWNlbnNlZCB1bmRlciBNSVQgKGh0dHBzOi8vZ2l0aHViLmNvbS90d2JzL2Jvb3RzdHJhcC9ibG9iL21haW4vTElDRU5TRSkKICAgKiAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLQogICAqLwogIGNvbnN0IE1BWF9VSUQgPSAxMDAwMDAwOwogIGNvbnN0IE1JTExJU0VDT05EU19NVUxUSVBMSUVSID0gMTAwMDsKICBjb25zdCBUUkFOU0lUSU9OX0VORCA9ICd0cmFuc2l0aW9uZW5kJzsgLy8gU2hvdXQtb3V0IEFuZ3VzIENyb2xsIChodHRwczovL2dvby5nbC9weHdRR3ApCgogIGNvbnN0IHRvVHlwZSA9IG9iamVjdCA9PiB7CiAgICBpZiAob2JqZWN0ID09PSBudWxsIHx8IG9iamVjdCA9PT0gdW5kZWZpbmVkKSB7CiAgICAgIHJldHVybiBgJHtvYmplY3R9YDsKICAgIH0KCiAgICByZXR1cm4gT2JqZWN0LnByb3RvdHlwZS50b1N0cmluZy5jYWxsKG9iamVjdCkubWF0Y2goL1xzKFthLXpdKykvaSlbMV0udG9Mb3dlckNhc2UoKTsKICB9OwogIC8qKgogICAqIFB1YmxpYyBVdGlsIEFQSQogICAqLwoKCiAgY29uc3QgZ2V0VUlEID0gcHJlZml4ID0+IHsKICAgIGRvIHsKICAgICAgcHJlZml4ICs9IE1hdGguZmxvb3IoTWF0aC5yYW5kb20oKSAqIE1BWF9VSUQpOwogICAgfSB3aGlsZSAoZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQocHJlZml4KSk7CgogICAgcmV0dXJuIHByZWZpeDsKICB9OwoKICBjb25zdCBnZXRTZWxlY3RvciA9IGVsZW1lbnQgPT4gewogICAgbGV0IHNlbGVjdG9yID0gZWxlbWVudC5nZXRBdHRyaWJ1dGUoJ2RhdGEtYnMtdGFyZ2V0Jyk7CgogICAgaWYgKCFzZWxlY3RvciB8fCBzZWxlY3RvciA9PT0gJyMnKSB7CiAgICAgIGxldCBocmVmQXR0cmlidXRlID0gZWxlbWVudC5nZXRBdHRyaWJ1dGUoJ2hyZWYnKTsgLy8gVGhlIG9ubHkgdmFsaWQgY29udGVudCB0aGF0IGNvdWxkIGRvdWJsZSBhcyBhIHNlbGVjdG9yIGFyZSBJRHMgb3IgY2xhc3NlcywKICAgICAgLy8gc28gZXZlcnl0aGluZyBzdGFydGluZyB3aXRoIGAjYCBvciBgLmAuIElmIGEgInJlYWwiIFVSTCBpcyB1c2VkIGFzIHRoZSBzZWxlY3RvciwKICAgICAgLy8gYGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3JgIHdpbGwgcmlnaHRmdWxseSBjb21wbGFpbiBpdCBpcyBpbnZhbGlkLgogICAgICAvLyBTZWUgaHR0cHM6Ly9naXRodWIuY29tL3R3YnMvYm9vdHN0cmFwL2lzc3Vlcy8zMjI3MwoKICAgICAgaWYgKCFocmVmQXR0cmlidXRlIHx8ICFocmVmQXR0cmlidXRlLmluY2x1ZGVzKCcjJykgJiYgIWhyZWZBdHRyaWJ1dGUuc3RhcnRzV2l0aCgnLicpKSB7CiAgICAgICAgcmV0dXJuIG51bGw7CiAgICAgIH0gLy8gSnVzdCBpbiBjYXNlIHNvbWUgQ01TIHB1dHMgb3V0IGEgZnVsbCBVUkwgd2l0aCB0aGUgYW5jaG9yIGFwcGVuZGVkCgoKICAgICAgaWYgKGhyZWZBdHRyaWJ1dGUuaW5jbHVkZXMoJyMnKSAmJiAhaHJlZkF0dHJpYnV0ZS5zdGFydHNXaXRoKCcjJykpIHsKICAgICAgICBocmVmQXR0cmlidXRlID0gYCMke2hyZWZBdHRyaWJ1dGUuc3BsaXQoJyMnKVsxXX1gOwogICAgICB9CgogICAgICBzZWxlY3RvciA9IGhyZWZBdHRyaWJ1dGUgJiYgaHJlZkF0dHJpYnV0ZSAhPT0gJyMnID8gaHJlZkF0dHJpYnV0ZS50cmltKCkgOiBudWxsOwogICAgfQoKICAgIHJldHVybiBzZWxlY3RvcjsKICB9OwoKICBjb25zdCBnZXRTZWxlY3RvckZyb21FbGVtZW50ID0gZWxlbWVudCA9PiB7CiAgICBjb25zdCBzZWxlY3RvciA9IGdldFNlbGVjdG9yKGVsZW1lbnQpOwoKICAgIGlmIChzZWxlY3RvcikgewogICAgICByZXR1cm4gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihzZWxlY3RvcikgPyBzZWxlY3RvciA6IG51bGw7CiAgICB9CgogICAgcmV0dXJuIG51bGw7CiAgfTsKCiAgY29uc3QgZ2V0RWxlbWVudEZyb21TZWxlY3RvciA9IGVsZW1lbnQgPT4gewogICAgY29uc3Qgc2VsZWN0b3IgPSBnZXRTZWxlY3RvcihlbGVtZW50KTsKICAgIHJldHVybiBzZWxlY3RvciA/IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3Ioc2VsZWN0b3IpIDogbnVsbDsKICB9OwoKICBjb25zdCBnZXRUcmFuc2l0aW9uRHVyYXRpb25Gcm9tRWxlbWVudCA9IGVsZW1lbnQgPT4gewogICAgaWYgKCFlbGVtZW50KSB7CiAgICAgIHJldHVybiAwOwogICAgfSAvLyBHZXQgdHJhbnNpdGlvbi1kdXJhdGlvbiBvZiB0aGUgZWxlbWVudAoKCiAgICBsZXQgewogICAgICB0cmFuc2l0aW9uRHVyYXRpb24sCiAgICAgIHRyYW5zaXRpb25EZWxheQogICAgfSA9IHdpbmRvdy5nZXRDb21wdXRlZFN0eWxlKGVsZW1lbnQpOwogICAgY29uc3QgZmxvYXRUcmFuc2l0aW9uRHVyYXRpb24gPSBOdW1iZXIucGFyc2VGbG9hdCh0cmFuc2l0aW9uRHVyYXRpb24pOwogICAgY29uc3QgZmxvYXRUcmFuc2l0aW9uRGVsYXkgPSBOdW1iZXIucGFyc2VGbG9hdCh0cmFuc2l0aW9uRGVsYXkpOyAvLyBSZXR1cm4gMCBpZiBlbGVtZW50IG9yIHRyYW5zaXRpb24gZHVyYXRpb24gaXMgbm90IGZvdW5kCgogICAgaWYgKCFmbG9hdFRyYW5zaXRpb25EdXJhdGlvbiAmJiAhZmxvYXRUcmFuc2l0aW9uRGVsYXkpIHsKICAgICAgcmV0dXJuIDA7CiAgICB9IC8vIElmIG11bHRpcGxlIGR1cmF0aW9ucyBhcmUgZGVmaW5lZCwgdGFrZSB0aGUgZmlyc3QKCgogICAgdHJhbnNpdGlvbkR1cmF0aW9uID0gdHJhbnNpdGlvbkR1cmF0aW9uLnNwbGl0KCcsJylbMF07CiAgICB0cmFuc2l0aW9uRGVsYXkgPSB0cmFuc2l0aW9uRGVsYXkuc3BsaXQoJywnKVswXTsKICAgIHJldHVybiAoTnVtYmVyLnBhcnNlRmxvYXQodHJhbnNpdGlvbkR1cmF0aW9uKSArIE51bWJlci5wYXJzZUZsb2F0KHRyYW5zaXRpb25EZWxheSkpICogTUlMTElTRUNPTkRTX01VTFRJUExJRVI7CiAgfTsKCiAgY29uc3QgdHJpZ2dlclRyYW5zaXRpb25FbmQgPSBlbGVtZW50ID0+IHsKICAgIGVsZW1lbnQuZGlzcGF0Y2hFdmVudChuZXcgRXZlbnQoVFJBTlNJVElPTl9FTkQpKTsKICB9OwoKICBjb25zdCBpc0VsZW1lbnQgPSBvYmplY3QgPT4gewogICAgaWYgKCFvYmplY3QgfHwgdHlwZW9mIG9iamVjdCAhPT0gJ29iamVjdCcpIHsKICAgICAgcmV0dXJuIGZhbHNlOwogICAgfQoKICAgIGlmICh0eXBlb2Ygb2JqZWN0LmpxdWVyeSAhPT0gJ3VuZGVmaW5lZCcpIHsKICAgICAgb2JqZWN0ID0gb2JqZWN0WzBdOwogICAgfQoKICAgIHJldHVybiB0eXBlb2Ygb2JqZWN0Lm5vZGVUeXBlICE9PSAndW5kZWZpbmVkJzsKICB9OwoKICBjb25zdCBnZXRFbGVtZW50ID0gb2JqZWN0ID0+IHsKICAgIC8vIGl0J3MgYSBqUXVlcnkgb2JqZWN0IG9yIGEgbm9kZSBlbGVtZW50CiAgICBpZiAoaXNFbGVtZW50KG9iamVjdCkpIHsKICAgICAgcmV0dXJuIG9iamVjdC5qcXVlcnkgPyBvYmplY3RbMF0gOiBvYmplY3Q7CiAgICB9CgogICAgaWYgKHR5cGVvZiBvYmplY3QgPT09ICdzdHJpbmcnICYmIG9iamVjdC5sZW5ndGggPiAwKSB7CiAgICAgIHJldHVybiBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKG9iamVjdCk7CiAgICB9CgogICAgcmV0dXJuIG51bGw7CiAgfTsKCiAgY29uc3QgaXNWaXNpYmxlID0gZWxlbWVudCA9PiB7CiAgICBpZiAoIWlzRWxlbWVudChlbGVtZW50KSB8fCBlbGVtZW50LmdldENsaWVudFJlY3RzKCkubGVuZ3RoID09PSAwKSB7CiAgICAgIHJldHVybiBmYWxzZTsKICAgIH0KCiAgICBjb25zdCBlbGVtZW50SXNWaXNpYmxlID0gZ2V0Q29tcHV0ZWRTdHlsZShlbGVtZW50KS5nZXRQcm9wZXJ0eVZhbHVlKCd2aXNpYmlsaXR5JykgPT09ICd2aXNpYmxlJzsgLy8gSGFuZGxlIGBkZXRhaWxzYCBlbGVtZW50IGFzIGl0cyBjb250ZW50IG1heSBmYWxzaWUgYXBwZWFyIHZpc2libGUgd2hlbiBpdCBpcyBjbG9zZWQKCiAgICBjb25zdCBjbG9zZWREZXRhaWxzID0gZWxlbWVudC5jbG9zZXN0KCdkZXRhaWxzOm5vdChbb3Blbl0pJyk7CgogICAgaWYgKCFjbG9zZWREZXRhaWxzKSB7CiAgICAgIHJldHVybiBlbGVtZW50SXNWaXNpYmxlOwogICAgfQoKICAgIGlmIChjbG9zZWREZXRhaWxzICE9PSBlbGVtZW50KSB7CiAgICAgIGNvbnN0IHN1bW1hcnkgPSBlbGVtZW50LmNsb3Nlc3QoJ3N1bW1hcnknKTsKCiAgICAgIGlmIChzdW1tYXJ5ICYmIHN1bW1hcnkucGFyZW50Tm9kZSAhPT0gY2xvc2VkRGV0YWlscykgewogICAgICAgIHJldHVybiBmYWxzZTsKICAgICAgfQoKICAgICAgaWYgKHN1bW1hcnkgPT09IG51bGwpIHsKICAgICAgICByZXR1cm4gZmFsc2U7CiAgICAgIH0KICAgIH0KCiAgICByZXR1cm4gZWxlbWVudElzVmlzaWJsZTsKICB9OwoKICBjb25zdCBpc0Rpc2FibGVkID0gZWxlbWVudCA9PiB7CiAgICBpZiAoIWVsZW1lbnQgfHwgZWxlbWVudC5ub2RlVHlwZSAhPT0gTm9kZS5FTEVNRU5UX05PREUpIHsKICAgICAgcmV0dXJuIHRydWU7CiAgICB9CgogICAgaWYgKGVsZW1lbnQuY2xhc3NMaXN0LmNvbnRhaW5zKCdkaXNhYmxlZCcpKSB7CiAgICAgIHJldHVybiB0cnVlOwogICAgfQoKICAgIGlmICh0eXBlb2YgZWxlbWVudC5kaXNhYmxlZCAhPT0gJ3VuZGVmaW5lZCcpIHsKICAgICAgcmV0dXJuIGVsZW1lbnQuZGlzYWJsZWQ7CiAgICB9CgogICAgcmV0dXJuIGVsZW1lbnQuaGFzQXR0cmlidXRlKCdkaXNhYmxlZCcpICYmIGVsZW1lbnQuZ2V0QXR0cmlidXRlKCdkaXNhYmxlZCcpICE9PSAnZmFsc2UnOwogIH07CgogIGNvbnN0IGZpbmRTaGFkb3dSb290ID0gZWxlbWVudCA9PiB7CiAgICBpZiAoIWRvY3VtZW50LmRvY3VtZW50RWxlbWVudC5hdHRhY2hTaGFkb3cpIHsKICAgICAgcmV0dXJuIG51bGw7CiAgICB9IC8vIENhbiBmaW5kIHRoZSBzaGFkb3cgcm9vdCBvdGhlcndpc2UgaXQnbGwgcmV0dXJuIHRoZSBkb2N1bWVudAoKCiAgICBpZiAodHlwZW9mIGVsZW1lbnQuZ2V0Um9vdE5vZGUgPT09ICdmdW5jdGlvbicpIHsKICAgICAgY29uc3Qgcm9vdCA9IGVsZW1lbnQuZ2V0Um9vdE5vZGUoKTsKICAgICAgcmV0dXJuIHJvb3QgaW5zdGFuY2VvZiBTaGFkb3dSb290ID8gcm9vdCA6IG51bGw7CiAgICB9CgogICAgaWYgKGVsZW1lbnQgaW5zdGFuY2VvZiBTaGFkb3dSb290KSB7CiAgICAgIHJldHVybiBlbGVtZW50OwogICAgfSAvLyB3aGVuIHdlIGRvbid0IGZpbmQgYSBzaGFkb3cgcm9vdAoKCiAgICBpZiAoIWVsZW1lbnQucGFyZW50Tm9kZSkgewogICAgICByZXR1cm4gbnVsbDsKICAgIH0KCiAgICByZXR1cm4gZmluZFNoYWRvd1Jvb3QoZWxlbWVudC5wYXJlbnROb2RlKTsKICB9OwoKICBjb25zdCBub29wID0gKCkgPT4ge307CiAgLyoqCiAgICogVHJpY2sgdG8gcmVzdGFydCBhbiBlbGVtZW50J3MgYW5pbWF0aW9uCiAgICoKICAgKiBAcGFyYW0ge0hUTUxFbGVtZW50fSBlbGVtZW50CiAgICogQHJldHVybiB2b2lkCiAgICoKICAgKiBAc2VlIGh0dHBzOi8vd3d3LmNoYXJpc3RoZW8uaW8vYmxvZy8yMDIxLzAyL3Jlc3RhcnQtYS1jc3MtYW5pbWF0aW9uLXdpdGgtamF2YXNjcmlwdC8jcmVzdGFydGluZy1hLWNzcy1hbmltYXRpb24KICAgKi8KCgogIGNvbnN0IHJlZmxvdyA9IGVsZW1lbnQgPT4gewogICAgZWxlbWVudC5vZmZzZXRIZWlnaHQ7IC8vIGVzbGludC1kaXNhYmxlLWxpbmUgbm8tdW51c2VkLWV4cHJlc3Npb25zCiAgfTsKCiAgY29uc3QgZ2V0alF1ZXJ5ID0gKCkgPT4gewogICAgaWYgKHdpbmRvdy5qUXVlcnkgJiYgIWRvY3VtZW50LmJvZHkuaGFzQXR0cmlidXRlKCdkYXRhLWJzLW5vLWpxdWVyeScpKSB7CiAgICAgIHJldHVybiB3aW5kb3cualF1ZXJ5OwogICAgfQoKICAgIHJldHVybiBudWxsOwogIH07CgogIGNvbnN0IERPTUNvbnRlbnRMb2FkZWRDYWxsYmFja3MgPSBbXTsKCiAgY29uc3Qgb25ET01Db250ZW50TG9hZGVkID0gY2FsbGJhY2sgPT4gewogICAgaWYgKGRvY3VtZW50LnJlYWR5U3RhdGUgPT09ICdsb2FkaW5nJykgewogICAgICAvLyBhZGQgbGlzdGVuZXIgb24gdGhlIGZpcnN0IGNhbGwgd2hlbiB0aGUgZG9jdW1lbnQgaXMgaW4gbG9hZGluZyBzdGF0ZQogICAgICBpZiAoIURPTUNvbnRlbnRMb2FkZWRDYWxsYmFja3MubGVuZ3RoKSB7CiAgICAgICAgZG9jdW1lbnQuYWRkRXZlbnRMaXN0ZW5lcignRE9NQ29udGVudExvYWRlZCcsICgpID0+IHsKICAgICAgICAgIGZvciAoY29uc3QgY2FsbGJhY2sgb2YgRE9NQ29udGVudExvYWRlZENhbGxiYWNrcykgewogICAgICAgICAgICBjYWxsYmFjaygpOwogICAgICAgICAgfQogICAgICAgIH0pOwogICAgICB9CgogICAgICBET01Db250ZW50TG9hZGVkQ2FsbGJhY2tzLnB1c2goY2FsbGJhY2spOwogICAgfSBlbHNlIHsKICAgICAgY2FsbGJhY2soKTsKICAgIH0KICB9OwoKICBjb25zdCBpc1JUTCA9ICgpID0+IGRvY3VtZW50LmRvY3VtZW50RWxlbWVudC5kaXIgPT09ICdydGwnOwoKICBjb25zdCBkZWZpbmVKUXVlcnlQbHVnaW4gPSBwbHVnaW4gPT4gewogICAgb25ET01Db250ZW50TG9hZGVkKCgpID0+IHsKICAgICAgY29uc3QgJCA9IGdldGpRdWVyeSgpOwogICAgICAvKiBpc3RhbmJ1bCBpZ25vcmUgaWYgKi8KCiAgICAgIGlmICgkKSB7CiAgICAgICAgY29uc3QgbmFtZSA9IHBsdWdpbi5OQU1FOwogICAgICAgIGNvbnN0IEpRVUVSWV9OT19DT05GTElDVCA9ICQuZm5bbmFtZV07CiAgICAgICAgJC5mbltuYW1lXSA9IHBsdWdpbi5qUXVlcnlJbnRlcmZhY2U7CiAgICAgICAgJC5mbltuYW1lXS5Db25zdHJ1Y3RvciA9IHBsdWdpbjsKCiAgICAgICAgJC5mbltuYW1lXS5ub0NvbmZsaWN0ID0gKCkgPT4gewogICAgICAgICAgJC5mbltuYW1lXSA9IEpRVUVSWV9OT19DT05GTElDVDsKICAgICAgICAgIHJldHVybiBwbHVnaW4ualF1ZXJ5SW50ZXJmYWNlOwogICAgICAgIH07CiAgICAgIH0KICAgIH0pOwogIH07CgogIGNvbnN0IGV4ZWN1dGUgPSBjYWxsYmFjayA9PiB7CiAgICBpZiAodHlwZW9mIGNhbGxiYWNrID09PSAnZnVuY3Rpb24nKSB7CiAgICAgIGNhbGxiYWNrKCk7CiAgICB9CiAgfTsKCiAgY29uc3QgZXhlY3V0ZUFmdGVyVHJhbnNpdGlvbiA9IChjYWxsYmFjaywgdHJhbnNpdGlvbkVsZW1lbnQsIHdhaXRGb3JUcmFuc2l0aW9uID0gdHJ1ZSkgPT4gewogICAgaWYgKCF3YWl0Rm9yVHJhbnNpdGlvbikgewogICAgICBleGVjdXRlKGNhbGxiYWNrKTsKICAgICAgcmV0dXJuOwogICAgfQoKICAgIGNvbnN0IGR1cmF0aW9uUGFkZGluZyA9IDU7CiAgICBjb25zdCBlbXVsYXRlZER1cmF0aW9uID0gZ2V0VHJhbnNpdGlvbkR1cmF0aW9uRnJvbUVsZW1lbnQodHJhbnNpdGlvbkVsZW1lbnQpICsgZHVyYXRpb25QYWRkaW5nOwogICAgbGV0IGNhbGxlZCA9IGZhbHNlOwoKICAgIGNvbnN0IGhhbmRsZXIgPSAoewogICAgICB0YXJnZXQKICAgIH0pID0+IHsKICAgICAgaWYgKHRhcmdldCAhPT0gdHJhbnNpdGlvbkVsZW1lbnQpIHsKICAgICAgICByZXR1cm47CiAgICAgIH0KCiAgICAgIGNhbGxlZCA9IHRydWU7CiAgICAgIHRyYW5zaXRpb25FbGVtZW50LnJlbW92ZUV2ZW50TGlzdGVuZXIoVFJBTlNJVElPTl9FTkQsIGhhbmRsZXIpOwogICAgICBleGVjdXRlKGNhbGxiYWNrKTsKICAgIH07CgogICAgdHJhbnNpdGlvbkVsZW1lbnQuYWRkRXZlbnRMaXN0ZW5lcihUUkFOU0lUSU9OX0VORCwgaGFuZGxlcik7CiAgICBzZXRUaW1lb3V0KCgpID0+IHsKICAgICAgaWYgKCFjYWxsZWQpIHsKICAgICAgICB0cmlnZ2VyVHJhbnNpdGlvbkVuZCh0cmFuc2l0aW9uRWxlbWVudCk7CiAgICAgIH0KICAgIH0sIGVtdWxhdGVkRHVyYXRpb24pOwogIH07CiAgLyoqCiAgICogUmV0dXJuIHRoZSBwcmV2aW91cy9uZXh0IGVsZW1lbnQgb2YgYSBsaXN0LgogICAqCiAgICogQHBhcmFtIHthcnJheX0gbGlzdCAgICBUaGUgbGlzdCBvZiBlbGVtZW50cwogICAqIEBwYXJhbSBhY3RpdmVFbGVtZW50ICAgVGhlIGFjdGl2ZSBlbGVtZW50CiAgICogQHBhcmFtIHNob3VsZEdldE5leHQgICBDaG9vc2UgdG8gZ2V0IG5leHQgb3IgcHJldmlvdXMgZWxlbWVudAogICAqIEBwYXJhbSBpc0N5Y2xlQWxsb3dlZAogICAqIEByZXR1cm4ge0VsZW1lbnR8ZWxlbX0gVGhlIHByb3BlciBlbGVtZW50CiAgICovCgoKICBjb25zdCBnZXROZXh0QWN0aXZlRWxlbWVudCA9IChsaXN0LCBhY3RpdmVFbGVtZW50LCBzaG91bGRHZXROZXh0LCBpc0N5Y2xlQWxsb3dlZCkgPT4gewogICAgY29uc3QgbGlzdExlbmd0aCA9IGxpc3QubGVuZ3RoOwogICAgbGV0IGluZGV4ID0gbGlzdC5pbmRleE9mKGFjdGl2ZUVsZW1lbnQpOyAvLyBpZiB0aGUgZWxlbWVudCBkb2VzIG5vdCBleGlzdCBpbiB0aGUgbGlzdCByZXR1cm4gYW4gZWxlbWVudAogICAgLy8gZGVwZW5kaW5nIG9uIHRoZSBkaXJlY3Rpb24gYW5kIGlmIGN5Y2xlIGlzIGFsbG93ZWQKCiAgICBpZiAoaW5kZXggPT09IC0xKSB7CiAgICAgIHJldHVybiAhc2hvdWxkR2V0TmV4dCAmJiBpc0N5Y2xlQWxsb3dlZCA/IGxpc3RbbGlzdExlbmd0aCAtIDFdIDogbGlzdFswXTsKICAgIH0KCiAgICBpbmRleCArPSBzaG91bGRHZXROZXh0ID8gMSA6IC0xOwoKICAgIGlmIChpc0N5Y2xlQWxsb3dlZCkgewogICAgICBpbmRleCA9IChpbmRleCArIGxpc3RMZW5ndGgpICUgbGlzdExlbmd0aDsKICAgIH0KCiAgICByZXR1cm4gbGlzdFtNYXRoLm1heCgwLCBNYXRoLm1pbihpbmRleCwgbGlzdExlbmd0aCAtIDEpKV07CiAgfTsKCiAgZXhwb3J0cy5kZWZpbmVKUXVlcnlQbHVnaW4gPSBkZWZpbmVKUXVlcnlQbHVnaW47CiAgZXhwb3J0cy5leGVjdXRlID0gZXhlY3V0ZTsKICBleHBvcnRzLmV4ZWN1dGVBZnRlclRyYW5zaXRpb24gPSBleGVjdXRlQWZ0ZXJUcmFuc2l0aW9uOwogIGV4cG9ydHMuZmluZFNoYWRvd1Jvb3QgPSBmaW5kU2hhZG93Um9vdDsKICBleHBvcnRzLmdldEVsZW1lbnQgPSBnZXRFbGVtZW50OwogIGV4cG9ydHMuZ2V0RWxlbWVudEZyb21TZWxlY3RvciA9IGdldEVsZW1lbnRGcm9tU2VsZWN0b3I7CiAgZXhwb3J0cy5nZXROZXh0QWN0aXZlRWxlbWVudCA9IGdldE5leHRBY3RpdmVFbGVtZW50OwogIGV4cG9ydHMuZ2V0U2VsZWN0b3JGcm9tRWxlbWVudCA9IGdldFNlbGVjdG9yRnJvbUVsZW1lbnQ7CiAgZXhwb3J0cy5nZXRUcmFuc2l0aW9uRHVyYXRpb25Gcm9tRWxlbWVudCA9IGdldFRyYW5zaXRpb25EdXJhdGlvbkZyb21FbGVtZW50OwogIGV4cG9ydHMuZ2V0VUlEID0gZ2V0VUlEOwogIGV4cG9ydHMuZ2V0alF1ZXJ5ID0gZ2V0alF1ZXJ5OwogIGV4cG9ydHMuaXNEaXNhYmxlZCA9IGlzRGlzYWJsZWQ7CiAgZXhwb3J0cy5pc0VsZW1lbnQgPSBpc0VsZW1lbnQ7CiAgZXhwb3J0cy5pc1JUTCA9IGlzUlRMOwogIGV4cG9ydHMuaXNWaXNpYmxlID0gaXNWaXNpYmxlOwogIGV4cG9ydHMubm9vcCA9IG5vb3A7CiAgZXhwb3J0cy5vbkRPTUNvbnRlbnRMb2FkZWQgPSBvbkRPTUNvbnRlbnRMb2FkZWQ7CiAgZXhwb3J0cy5yZWZsb3cgPSByZWZsb3c7CiAgZXhwb3J0cy50b1R5cGUgPSB0b1R5cGU7CiAgZXhwb3J0cy50cmlnZ2VyVHJhbnNpdGlvbkVuZCA9IHRyaWdnZXJUcmFuc2l0aW9uRW5kOwoKICBPYmplY3QuZGVmaW5lUHJvcGVydGllcyhleHBvcnRzLCB7IF9fZXNNb2R1bGU6IHsgdmFsdWU6IHRydWUgfSwgW1N5bWJvbC50b1N0cmluZ1RhZ106IHsgdmFsdWU6ICdNb2R1bGUnIH0gfSk7Cgp9KSk7Ci8vIyBzb3VyY2VNYXBwaW5nVVJMPWluZGV4LmpzLm1hcAoKCi8qKiovIH0pLAoKLyoqKi8gIi4vbm9kZV9tb2R1bGVzL2Jvb3RzdHJhcC9qcy9kaXN0L3V0aWwvc2FuaXRpemVyLmpzIjoKLyohKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiEqXAogICEqKiogLi9ub2RlX21vZHVsZXMvYm9vdHN0cmFwL2pzL2Rpc3QvdXRpbC9zYW5pdGl6ZXIuanMgKioqIQogIFwqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqLwovKioqLyAoZnVuY3Rpb24oX191bnVzZWRfd2VicGFja19tb2R1bGUsIGV4cG9ydHMpIHsKCi8qIQogICogQm9vdHN0cmFwIHNhbml0aXplci5qcyB2NS4yLjMgKGh0dHBzOi8vZ2V0Ym9vdHN0cmFwLmNvbS8pCiAgKiBDb3B5cmlnaHQgMjAxMS0yMDIyIFRoZSBCb290c3RyYXAgQXV0aG9ycyAoaHR0cHM6Ly9naXRodWIuY29tL3R3YnMvYm9vdHN0cmFwL2dyYXBocy9jb250cmlidXRvcnMpCiAgKiBMaWNlbnNlZCB1bmRlciBNSVQgKGh0dHBzOi8vZ2l0aHViLmNvbS90d2JzL2Jvb3RzdHJhcC9ibG9iL21haW4vTElDRU5TRSkKICAqLwooZnVuY3Rpb24gKGdsb2JhbCwgZmFjdG9yeSkgewogICB0cnVlID8gZmFjdG9yeShleHBvcnRzKSA6CiAgMDsKfSkodGhpcywgKGZ1bmN0aW9uIChleHBvcnRzKSB7ICd1c2Ugc3RyaWN0JzsKCiAgLyoqCiAgICogLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0KICAgKiBCb290c3RyYXAgKHY1LjIuMyk6IHV0aWwvc2FuaXRpemVyLmpzCiAgICogTGljZW5zZWQgdW5kZXIgTUlUIChodHRwczovL2dpdGh1Yi5jb20vdHdicy9ib290c3RyYXAvYmxvYi9tYWluL0xJQ0VOU0UpCiAgICogLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0KICAgKi8KICBjb25zdCB1cmlBdHRyaWJ1dGVzID0gbmV3IFNldChbJ2JhY2tncm91bmQnLCAnY2l0ZScsICdocmVmJywgJ2l0ZW10eXBlJywgJ2xvbmdkZXNjJywgJ3Bvc3RlcicsICdzcmMnLCAneGxpbms6aHJlZiddKTsKICBjb25zdCBBUklBX0FUVFJJQlVURV9QQVRURVJOID0gL15hcmlhLVtcdy1dKiQvaTsKICAvKioKICAgKiBBIHBhdHRlcm4gdGhhdCByZWNvZ25pemVzIGEgY29tbW9ubHkgdXNlZnVsIHN1YnNldCBvZiBVUkxzIHRoYXQgYXJlIHNhZmUuCiAgICoKICAgKiBTaG91dC1vdXQgdG8gQW5ndWxhciBodHRwczovL2dpdGh1Yi5jb20vYW5ndWxhci9hbmd1bGFyL2Jsb2IvMTIuMi54L3BhY2thZ2VzL2NvcmUvc3JjL3Nhbml0aXphdGlvbi91cmxfc2FuaXRpemVyLnRzCiAgICovCgogIGNvbnN0IFNBRkVfVVJMX1BBVFRFUk4gPSAvXig/Oig/Omh0dHBzP3xtYWlsdG98ZnRwfHRlbHxmaWxlfHNtcyk6fFteIyYvOj9dKig/OlsjLz9dfCQpKS9pOwogIC8qKgogICAqIEEgcGF0dGVybiB0aGF0IG1hdGNoZXMgc2FmZSBkYXRhIFVSTHMuIE9ubHkgbWF0Y2hlcyBpbWFnZSwgdmlkZW8gYW5kIGF1ZGlvIHR5cGVzLgogICAqCiAgICogU2hvdXQtb3V0IHRvIEFuZ3VsYXIgaHR0cHM6Ly9naXRodWIuY29tL2FuZ3VsYXIvYW5ndWxhci9ibG9iLzEyLjIueC9wYWNrYWdlcy9jb3JlL3NyYy9zYW5pdGl6YXRpb24vdXJsX3Nhbml0aXplci50cwogICAqLwoKICBjb25zdCBEQVRBX1VSTF9QQVRURVJOID0gL15kYXRhOig/OmltYWdlXC8oPzpibXB8Z2lmfGpwZWd8anBnfHBuZ3x0aWZmfHdlYnApfHZpZGVvXC8oPzptcGVnfG1wNHxvZ2d8d2VibSl8YXVkaW9cLyg/Om1wM3xvZ2F8b2dnfG9wdXMpKTtiYXNlNjQsW1xkKy9hLXpdKz0qJC9pOwoKICBjb25zdCBhbGxvd2VkQXR0cmlidXRlID0gKGF0dHJpYnV0ZSwgYWxsb3dlZEF0dHJpYnV0ZUxpc3QpID0+IHsKICAgIGNvbnN0IGF0dHJpYnV0ZU5hbWUgPSBhdHRyaWJ1dGUubm9kZU5hbWUudG9Mb3dlckNhc2UoKTsKCiAgICBpZiAoYWxsb3dlZEF0dHJpYnV0ZUxpc3QuaW5jbHVkZXMoYXR0cmlidXRlTmFtZSkpIHsKICAgICAgaWYgKHVyaUF0dHJpYnV0ZXMuaGFzKGF0dHJpYnV0ZU5hbWUpKSB7CiAgICAgICAgcmV0dXJuIEJvb2xlYW4oU0FGRV9VUkxfUEFUVEVSTi50ZXN0KGF0dHJpYnV0ZS5ub2RlVmFsdWUpIHx8IERBVEFfVVJMX1BBVFRFUk4udGVzdChhdHRyaWJ1dGUubm9kZVZhbHVlKSk7CiAgICAgIH0KCiAgICAgIHJldHVybiB0cnVlOwogICAgfSAvLyBDaGVjayBpZiBhIHJlZ3VsYXIgZXhwcmVzc2lvbiB2YWxpZGF0ZXMgdGhlIGF0dHJpYnV0ZS4KCgogICAgcmV0dXJuIGFsbG93ZWRBdHRyaWJ1dGVMaXN0LmZpbHRlcihhdHRyaWJ1dGVSZWdleCA9PiBhdHRyaWJ1dGVSZWdleCBpbnN0YW5jZW9mIFJlZ0V4cCkuc29tZShyZWdleCA9PiByZWdleC50ZXN0KGF0dHJpYnV0ZU5hbWUpKTsKICB9OwoKICBjb25zdCBEZWZhdWx0QWxsb3dsaXN0ID0gewogICAgLy8gR2xvYmFsIGF0dHJpYnV0ZXMgYWxsb3dlZCBvbiBhbnkgc3VwcGxpZWQgZWxlbWVudCBiZWxvdy4KICAgICcqJzogWydjbGFzcycsICdkaXInLCAnaWQnLCAnbGFuZycsICdyb2xlJywgQVJJQV9BVFRSSUJVVEVfUEFUVEVSTl0sCiAgICBhOiBbJ3RhcmdldCcsICdocmVmJywgJ3RpdGxlJywgJ3JlbCddLAogICAgYXJlYTogW10sCiAgICBiOiBbXSwKICAgIGJyOiBbXSwKICAgIGNvbDogW10sCiAgICBjb2RlOiBbXSwKICAgIGRpdjogW10sCiAgICBlbTogW10sCiAgICBocjogW10sCiAgICBoMTogW10sCiAgICBoMjogW10sCiAgICBoMzogW10sCiAgICBoNDogW10sCiAgICBoNTogW10sCiAgICBoNjogW10sCiAgICBpOiBbXSwKICAgIGltZzogWydzcmMnLCAnc3Jjc2V0JywgJ2FsdCcsICd0aXRsZScsICd3aWR0aCcsICdoZWlnaHQnXSwKICAgIGxpOiBbXSwKICAgIG9sOiBbXSwKICAgIHA6IFtdLAogICAgcHJlOiBbXSwKICAgIHM6IFtdLAogICAgc21hbGw6IFtdLAogICAgc3BhbjogW10sCiAgICBzdWI6IFtdLAogICAgc3VwOiBbXSwKICAgIHN0cm9uZzogW10sCiAgICB1OiBbXSwKICAgIHVsOiBbXQogIH07CiAgZnVuY3Rpb24gc2FuaXRpemVIdG1sKHVuc2FmZUh0bWwsIGFsbG93TGlzdCwgc2FuaXRpemVGdW5jdGlvbikgewogICAgaWYgKCF1bnNhZmVIdG1sLmxlbmd0aCkgewogICAgICByZXR1cm4gdW5zYWZlSHRtbDsKICAgIH0KCiAgICBpZiAoc2FuaXRpemVGdW5jdGlvbiAmJiB0eXBlb2Ygc2FuaXRpemVGdW5jdGlvbiA9PT0gJ2Z1bmN0aW9uJykgewogICAgICByZXR1cm4gc2FuaXRpemVGdW5jdGlvbih1bnNhZmVIdG1sKTsKICAgIH0KCiAgICBjb25zdCBkb21QYXJzZXIgPSBuZXcgd2luZG93LkRPTVBhcnNlcigpOwogICAgY29uc3QgY3JlYXRlZERvY3VtZW50ID0gZG9tUGFyc2VyLnBhcnNlRnJvbVN0cmluZyh1bnNhZmVIdG1sLCAndGV4dC9odG1sJyk7CiAgICBjb25zdCBlbGVtZW50cyA9IFtdLmNvbmNhdCguLi5jcmVhdGVkRG9jdW1lbnQuYm9keS5xdWVyeVNlbGVjdG9yQWxsKCcqJykpOwoKICAgIGZvciAoY29uc3QgZWxlbWVudCBvZiBlbGVtZW50cykgewogICAgICBjb25zdCBlbGVtZW50TmFtZSA9IGVsZW1lbnQubm9kZU5hbWUudG9Mb3dlckNhc2UoKTsKCiAgICAgIGlmICghT2JqZWN0LmtleXMoYWxsb3dMaXN0KS5pbmNsdWRlcyhlbGVtZW50TmFtZSkpIHsKICAgICAgICBlbGVtZW50LnJlbW92ZSgpOwogICAgICAgIGNvbnRpbnVlOwogICAgICB9CgogICAgICBjb25zdCBhdHRyaWJ1dGVMaXN0ID0gW10uY29uY2F0KC4uLmVsZW1lbnQuYXR0cmlidXRlcyk7CiAgICAgIGNvbnN0IGFsbG93ZWRBdHRyaWJ1dGVzID0gW10uY29uY2F0KGFsbG93TGlzdFsnKiddIHx8IFtdLCBhbGxvd0xpc3RbZWxlbWVudE5hbWVdIHx8IFtdKTsKCiAgICAgIGZvciAoY29uc3QgYXR0cmlidXRlIG9mIGF0dHJpYnV0ZUxpc3QpIHsKICAgICAgICBpZiAoIWFsbG93ZWRBdHRyaWJ1dGUoYXR0cmlidXRlLCBhbGxvd2VkQXR0cmlidXRlcykpIHsKICAgICAgICAgIGVsZW1lbnQucmVtb3ZlQXR0cmlidXRlKGF0dHJpYnV0ZS5ub2RlTmFtZSk7CiAgICAgICAgfQogICAgICB9CiAgICB9CgogICAgcmV0dXJuIGNyZWF0ZWREb2N1bWVudC5ib2R5LmlubmVySFRNTDsKICB9CgogIGV4cG9ydHMuRGVmYXVsdEFsbG93bGlzdCA9IERlZmF1bHRBbGxvd2xpc3Q7CiAgZXhwb3J0cy5zYW5pdGl6ZUh0bWwgPSBzYW5pdGl6ZUh0bWw7CgogIE9iamVjdC5kZWZpbmVQcm9wZXJ0aWVzKGV4cG9ydHMsIHsgX19lc01vZHVsZTogeyB2YWx1ZTogdHJ1ZSB9LCBbU3ltYm9sLnRvU3RyaW5nVGFnXTogeyB2YWx1ZTogJ01vZHVsZScgfSB9KTsKCn0pKTsKLy8jIHNvdXJjZU1hcHBpbmdVUkw9c2FuaXRpemVyLmpzLm1hcAoKCi8qKiovIH0pLAoKLyoqKi8gIi4vbm9kZV9tb2R1bGVzL2Jvb3RzdHJhcC9qcy9kaXN0L3V0aWwvc2Nyb2xsYmFyLmpzIjoKLyohKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiEqXAogICEqKiogLi9ub2RlX21vZHVsZXMvYm9vdHN0cmFwL2pzL2Rpc3QvdXRpbC9zY3JvbGxiYXIuanMgKioqIQogIFwqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqLwovKioqLyAoZnVuY3Rpb24obW9kdWxlLCBfX3VudXNlZF93ZWJwYWNrX2V4cG9ydHMsIF9fd2VicGFja19yZXF1aXJlX18pIHsKCi8qIQogICogQm9vdHN0cmFwIHNjcm9sbGJhci5qcyB2NS4yLjMgKGh0dHBzOi8vZ2V0Ym9vdHN0cmFwLmNvbS8pCiAgKiBDb3B5cmlnaHQgMjAxMS0yMDIyIFRoZSBCb290c3RyYXAgQXV0aG9ycyAoaHR0cHM6Ly9naXRodWIuY29tL3R3YnMvYm9vdHN0cmFwL2dyYXBocy9jb250cmlidXRvcnMpCiAgKiBMaWNlbnNlZCB1bmRlciBNSVQgKGh0dHBzOi8vZ2l0aHViLmNvbS90d2JzL2Jvb3RzdHJhcC9ibG9iL21haW4vTElDRU5TRSkKICAqLwooZnVuY3Rpb24gKGdsb2JhbCwgZmFjdG9yeSkgewogICB0cnVlID8gbW9kdWxlLmV4cG9ydHMgPSBmYWN0b3J5KF9fd2VicGFja19yZXF1aXJlX18oLyohIC4uL2RvbS9zZWxlY3Rvci1lbmdpbmUgKi8gIi4vbm9kZV9tb2R1bGVzL2Jvb3RzdHJhcC9qcy9kaXN0L2RvbS9zZWxlY3Rvci1lbmdpbmUuanMiKSwgX193ZWJwYWNrX3JlcXVpcmVfXygvKiEgLi4vZG9tL21hbmlwdWxhdG9yICovICIuL25vZGVfbW9kdWxlcy9ib290c3RyYXAvanMvZGlzdC9kb20vbWFuaXB1bGF0b3IuanMiKSwgX193ZWJwYWNrX3JlcXVpcmVfXygvKiEgLi9pbmRleCAqLyAiLi9ub2RlX21vZHVsZXMvYm9vdHN0cmFwL2pzL2Rpc3QvdXRpbC9pbmRleC5qcyIpKSA6CiAgMDsKfSkodGhpcywgKGZ1bmN0aW9uIChTZWxlY3RvckVuZ2luZSwgTWFuaXB1bGF0b3IsIGluZGV4KSB7ICd1c2Ugc3RyaWN0JzsKCiAgY29uc3QgX2ludGVyb3BEZWZhdWx0TGVnYWN5ID0gZSA9PiBlICYmIHR5cGVvZiBlID09PSAnb2JqZWN0JyAmJiAnZGVmYXVsdCcgaW4gZSA/IGUgOiB7IGRlZmF1bHQ6IGUgfTsKCiAgY29uc3QgU2VsZWN0b3JFbmdpbmVfX2RlZmF1bHQgPSAvKiNfX1BVUkVfXyovX2ludGVyb3BEZWZhdWx0TGVnYWN5KFNlbGVjdG9yRW5naW5lKTsKICBjb25zdCBNYW5pcHVsYXRvcl9fZGVmYXVsdCA9IC8qI19fUFVSRV9fKi9faW50ZXJvcERlZmF1bHRMZWdhY3koTWFuaXB1bGF0b3IpOwoKICAvKioKICAgKiAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLQogICAqIEJvb3RzdHJhcCAodjUuMi4zKTogdXRpbC9zY3JvbGxCYXIuanMKICAgKiBMaWNlbnNlZCB1bmRlciBNSVQgKGh0dHBzOi8vZ2l0aHViLmNvbS90d2JzL2Jvb3RzdHJhcC9ibG9iL21haW4vTElDRU5TRSkKICAgKiAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLQogICAqLwogIC8qKgogICAqIENvbnN0YW50cwogICAqLwoKICBjb25zdCBTRUxFQ1RPUl9GSVhFRF9DT05URU5UID0gJy5maXhlZC10b3AsIC5maXhlZC1ib3R0b20sIC5pcy1maXhlZCwgLnN0aWNreS10b3AnOwogIGNvbnN0IFNFTEVDVE9SX1NUSUNLWV9DT05URU5UID0gJy5zdGlja3ktdG9wJzsKICBjb25zdCBQUk9QRVJUWV9QQURESU5HID0gJ3BhZGRpbmctcmlnaHQnOwogIGNvbnN0IFBST1BFUlRZX01BUkdJTiA9ICdtYXJnaW4tcmlnaHQnOwogIC8qKgogICAqIENsYXNzIGRlZmluaXRpb24KICAgKi8KCiAgY2xhc3MgU2Nyb2xsQmFySGVscGVyIHsKICAgIGNvbnN0cnVjdG9yKCkgewogICAgICB0aGlzLl9lbGVtZW50ID0gZG9jdW1lbnQuYm9keTsKICAgIH0gLy8gUHVibGljCgoKICAgIGdldFdpZHRoKCkgewogICAgICAvLyBodHRwczovL2RldmVsb3Blci5tb3ppbGxhLm9yZy9lbi1VUy9kb2NzL1dlYi9BUEkvV2luZG93L2lubmVyV2lkdGgjdXNhZ2Vfbm90ZXMKICAgICAgY29uc3QgZG9jdW1lbnRXaWR0aCA9IGRvY3VtZW50LmRvY3VtZW50RWxlbWVudC5jbGllbnRXaWR0aDsKICAgICAgcmV0dXJuIE1hdGguYWJzKHdpbmRvdy5pbm5lcldpZHRoIC0gZG9jdW1lbnRXaWR0aCk7CiAgICB9CgogICAgaGlkZSgpIHsKICAgICAgY29uc3Qgd2lkdGggPSB0aGlzLmdldFdpZHRoKCk7CgogICAgICB0aGlzLl9kaXNhYmxlT3ZlckZsb3coKTsgLy8gZ2l2ZSBwYWRkaW5nIHRvIGVsZW1lbnQgdG8gYmFsYW5jZSB0aGUgaGlkZGVuIHNjcm9sbGJhciB3aWR0aAoKCiAgICAgIHRoaXMuX3NldEVsZW1lbnRBdHRyaWJ1dGVzKHRoaXMuX2VsZW1lbnQsIFBST1BFUlRZX1BBRERJTkcsIGNhbGN1bGF0ZWRWYWx1ZSA9PiBjYWxjdWxhdGVkVmFsdWUgKyB3aWR0aCk7IC8vIHRyaWNrOiBXZSBhZGp1c3QgcG9zaXRpdmUgcGFkZGluZ1JpZ2h0IGFuZCBuZWdhdGl2ZSBtYXJnaW5SaWdodCB0byBzdGlja3ktdG9wIGVsZW1lbnRzIHRvIGtlZXAgc2hvd2luZyBmdWxsd2lkdGgKCgogICAgICB0aGlzLl9zZXRFbGVtZW50QXR0cmlidXRlcyhTRUxFQ1RPUl9GSVhFRF9DT05URU5ULCBQUk9QRVJUWV9QQURESU5HLCBjYWxjdWxhdGVkVmFsdWUgPT4gY2FsY3VsYXRlZFZhbHVlICsgd2lkdGgpOwoKICAgICAgdGhpcy5fc2V0RWxlbWVudEF0dHJpYnV0ZXMoU0VMRUNUT1JfU1RJQ0tZX0NPTlRFTlQsIFBST1BFUlRZX01BUkdJTiwgY2FsY3VsYXRlZFZhbHVlID0+IGNhbGN1bGF0ZWRWYWx1ZSAtIHdpZHRoKTsKICAgIH0KCiAgICByZXNldCgpIHsKICAgICAgdGhpcy5fcmVzZXRFbGVtZW50QXR0cmlidXRlcyh0aGlzLl9lbGVtZW50LCAnb3ZlcmZsb3cnKTsKCiAgICAgIHRoaXMuX3Jlc2V0RWxlbWVudEF0dHJpYnV0ZXModGhpcy5fZWxlbWVudCwgUFJPUEVSVFlfUEFERElORyk7CgogICAgICB0aGlzLl9yZXNldEVsZW1lbnRBdHRyaWJ1dGVzKFNFTEVDVE9SX0ZJWEVEX0NPTlRFTlQsIFBST1BFUlRZX1BBRERJTkcpOwoKICAgICAgdGhpcy5fcmVzZXRFbGVtZW50QXR0cmlidXRlcyhTRUxFQ1RPUl9TVElDS1lfQ09OVEVOVCwgUFJPUEVSVFlfTUFSR0lOKTsKICAgIH0KCiAgICBpc092ZXJmbG93aW5nKCkgewogICAgICByZXR1cm4gdGhpcy5nZXRXaWR0aCgpID4gMDsKICAgIH0gLy8gUHJpdmF0ZQoKCiAgICBfZGlzYWJsZU92ZXJGbG93KCkgewogICAgICB0aGlzLl9zYXZlSW5pdGlhbEF0dHJpYnV0ZSh0aGlzLl9lbGVtZW50LCAnb3ZlcmZsb3cnKTsKCiAgICAgIHRoaXMuX2VsZW1lbnQuc3R5bGUub3ZlcmZsb3cgPSAnaGlkZGVuJzsKICAgIH0KCiAgICBfc2V0RWxlbWVudEF0dHJpYnV0ZXMoc2VsZWN0b3IsIHN0eWxlUHJvcGVydHksIGNhbGxiYWNrKSB7CiAgICAgIGNvbnN0IHNjcm9sbGJhcldpZHRoID0gdGhpcy5nZXRXaWR0aCgpOwoKICAgICAgY29uc3QgbWFuaXB1bGF0aW9uQ2FsbEJhY2sgPSBlbGVtZW50ID0+IHsKICAgICAgICBpZiAoZWxlbWVudCAhPT0gdGhpcy5fZWxlbWVudCAmJiB3aW5kb3cuaW5uZXJXaWR0aCA+IGVsZW1lbnQuY2xpZW50V2lkdGggKyBzY3JvbGxiYXJXaWR0aCkgewogICAgICAgICAgcmV0dXJuOwogICAgICAgIH0KCiAgICAgICAgdGhpcy5fc2F2ZUluaXRpYWxBdHRyaWJ1dGUoZWxlbWVudCwgc3R5bGVQcm9wZXJ0eSk7CgogICAgICAgIGNvbnN0IGNhbGN1bGF0ZWRWYWx1ZSA9IHdpbmRvdy5nZXRDb21wdXRlZFN0eWxlKGVsZW1lbnQpLmdldFByb3BlcnR5VmFsdWUoc3R5bGVQcm9wZXJ0eSk7CiAgICAgICAgZWxlbWVudC5zdHlsZS5zZXRQcm9wZXJ0eShzdHlsZVByb3BlcnR5LCBgJHtjYWxsYmFjayhOdW1iZXIucGFyc2VGbG9hdChjYWxjdWxhdGVkVmFsdWUpKX1weGApOwogICAgICB9OwoKICAgICAgdGhpcy5fYXBwbHlNYW5pcHVsYXRpb25DYWxsYmFjayhzZWxlY3RvciwgbWFuaXB1bGF0aW9uQ2FsbEJhY2spOwogICAgfQoKICAgIF9zYXZlSW5pdGlhbEF0dHJpYnV0ZShlbGVtZW50LCBzdHlsZVByb3BlcnR5KSB7CiAgICAgIGNvbnN0IGFjdHVhbFZhbHVlID0gZWxlbWVudC5zdHlsZS5nZXRQcm9wZXJ0eVZhbHVlKHN0eWxlUHJvcGVydHkpOwoKICAgICAgaWYgKGFjdHVhbFZhbHVlKSB7CiAgICAgICAgTWFuaXB1bGF0b3JfX2RlZmF1bHQuZGVmYXVsdC5zZXREYXRhQXR0cmlidXRlKGVsZW1lbnQsIHN0eWxlUHJvcGVydHksIGFjdHVhbFZhbHVlKTsKICAgICAgfQogICAgfQoKICAgIF9yZXNldEVsZW1lbnRBdHRyaWJ1dGVzKHNlbGVjdG9yLCBzdHlsZVByb3BlcnR5KSB7CiAgICAgIGNvbnN0IG1hbmlwdWxhdGlvbkNhbGxCYWNrID0gZWxlbWVudCA9PiB7CiAgICAgICAgY29uc3QgdmFsdWUgPSBNYW5pcHVsYXRvcl9fZGVmYXVsdC5kZWZhdWx0LmdldERhdGFBdHRyaWJ1dGUoZWxlbWVudCwgc3R5bGVQcm9wZXJ0eSk7IC8vIFdlIG9ubHkgd2FudCB0byByZW1vdmUgdGhlIHByb3BlcnR5IGlmIHRoZSB2YWx1ZSBpcyBgbnVsbGA7IHRoZSB2YWx1ZSBjYW4gYWxzbyBiZSB6ZXJvCgogICAgICAgIGlmICh2YWx1ZSA9PT0gbnVsbCkgewogICAgICAgICAgZWxlbWVudC5zdHlsZS5yZW1vdmVQcm9wZXJ0eShzdHlsZVByb3BlcnR5KTsKICAgICAgICAgIHJldHVybjsKICAgICAgICB9CgogICAgICAgIE1hbmlwdWxhdG9yX19kZWZhdWx0LmRlZmF1bHQucmVtb3ZlRGF0YUF0dHJpYnV0ZShlbGVtZW50LCBzdHlsZVByb3BlcnR5KTsKICAgICAgICBlbGVtZW50LnN0eWxlLnNldFByb3BlcnR5KHN0eWxlUHJvcGVydHksIHZhbHVlKTsKICAgICAgfTsKCiAgICAgIHRoaXMuX2FwcGx5TWFuaXB1bGF0aW9uQ2FsbGJhY2soc2VsZWN0b3IsIG1hbmlwdWxhdGlvbkNhbGxCYWNrKTsKICAgIH0KCiAgICBfYXBwbHlNYW5pcHVsYXRpb25DYWxsYmFjayhzZWxlY3RvciwgY2FsbEJhY2spIHsKICAgICAgaWYgKGluZGV4LmlzRWxlbWVudChzZWxlY3RvcikpIHsKICAgICAgICBjYWxsQmFjayhzZWxlY3Rvcik7CiAgICAgICAgcmV0dXJuOwogICAgICB9CgogICAgICBmb3IgKGNvbnN0IHNlbCBvZiBTZWxlY3RvckVuZ2luZV9fZGVmYXVsdC5kZWZhdWx0LmZpbmQoc2VsZWN0b3IsIHRoaXMuX2VsZW1lbnQpKSB7CiAgICAgICAgY2FsbEJhY2soc2VsKTsKICAgICAgfQogICAgfQoKICB9CgogIHJldHVybiBTY3JvbGxCYXJIZWxwZXI7Cgp9KSk7Ci8vIyBzb3VyY2VNYXBwaW5nVVJMPXNjcm9sbGJhci5qcy5tYXAKCgovKioqLyB9KSwKCi8qKiovICIuL25vZGVfbW9kdWxlcy9ib290c3RyYXAvanMvZGlzdC91dGlsL3RlbXBsYXRlLWZhY3RvcnkuanMiOgovKiEqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiEqXAogICEqKiogLi9ub2RlX21vZHVsZXMvYm9vdHN0cmFwL2pzL2Rpc3QvdXRpbC90ZW1wbGF0ZS1mYWN0b3J5LmpzICoqKiEKICBcKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiovCi8qKiovIChmdW5jdGlvbihtb2R1bGUsIF9fdW51c2VkX3dlYnBhY2tfZXhwb3J0cywgX193ZWJwYWNrX3JlcXVpcmVfXykgewoKLyohCiAgKiBCb290c3RyYXAgdGVtcGxhdGUtZmFjdG9yeS5qcyB2NS4yLjMgKGh0dHBzOi8vZ2V0Ym9vdHN0cmFwLmNvbS8pCiAgKiBDb3B5cmlnaHQgMjAxMS0yMDIyIFRoZSBCb290c3RyYXAgQXV0aG9ycyAoaHR0cHM6Ly9naXRodWIuY29tL3R3YnMvYm9vdHN0cmFwL2dyYXBocy9jb250cmlidXRvcnMpCiAgKiBMaWNlbnNlZCB1bmRlciBNSVQgKGh0dHBzOi8vZ2l0aHViLmNvbS90d2JzL2Jvb3RzdHJhcC9ibG9iL21haW4vTElDRU5TRSkKICAqLwooZnVuY3Rpb24gKGdsb2JhbCwgZmFjdG9yeSkgewogICB0cnVlID8gbW9kdWxlLmV4cG9ydHMgPSBmYWN0b3J5KF9fd2VicGFja19yZXF1aXJlX18oLyohIC4vc2FuaXRpemVyICovICIuL25vZGVfbW9kdWxlcy9ib290c3RyYXAvanMvZGlzdC91dGlsL3Nhbml0aXplci5qcyIpLCBfX3dlYnBhY2tfcmVxdWlyZV9fKC8qISAuL2luZGV4ICovICIuL25vZGVfbW9kdWxlcy9ib290c3RyYXAvanMvZGlzdC91dGlsL2luZGV4LmpzIiksIF9fd2VicGFja19yZXF1aXJlX18oLyohIC4uL2RvbS9zZWxlY3Rvci1lbmdpbmUgKi8gIi4vbm9kZV9tb2R1bGVzL2Jvb3RzdHJhcC9qcy9kaXN0L2RvbS9zZWxlY3Rvci1lbmdpbmUuanMiKSwgX193ZWJwYWNrX3JlcXVpcmVfXygvKiEgLi9jb25maWcgKi8gIi4vbm9kZV9tb2R1bGVzL2Jvb3RzdHJhcC9qcy9kaXN0L3V0aWwvY29uZmlnLmpzIikpIDoKICAwOwp9KSh0aGlzLCAoZnVuY3Rpb24gKHNhbml0aXplciwgaW5kZXgsIFNlbGVjdG9yRW5naW5lLCBDb25maWcpIHsgJ3VzZSBzdHJpY3QnOwoKICBjb25zdCBfaW50ZXJvcERlZmF1bHRMZWdhY3kgPSBlID0+IGUgJiYgdHlwZW9mIGUgPT09ICdvYmplY3QnICYmICdkZWZhdWx0JyBpbiBlID8gZSA6IHsgZGVmYXVsdDogZSB9OwoKICBjb25zdCBTZWxlY3RvckVuZ2luZV9fZGVmYXVsdCA9IC8qI19fUFVSRV9fKi9faW50ZXJvcERlZmF1bHRMZWdhY3koU2VsZWN0b3JFbmdpbmUpOwogIGNvbnN0IENvbmZpZ19fZGVmYXVsdCA9IC8qI19fUFVSRV9fKi9faW50ZXJvcERlZmF1bHRMZWdhY3koQ29uZmlnKTsKCiAgLyoqCiAgICogLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0KICAgKiBCb290c3RyYXAgKHY1LjIuMyk6IHV0aWwvdGVtcGxhdGUtZmFjdG9yeS5qcwogICAqIExpY2Vuc2VkIHVuZGVyIE1JVCAoaHR0cHM6Ly9naXRodWIuY29tL3R3YnMvYm9vdHN0cmFwL2Jsb2IvbWFpbi9MSUNFTlNFKQogICAqIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tCiAgICovCiAgLyoqCiAgICogQ29uc3RhbnRzCiAgICovCgogIGNvbnN0IE5BTUUgPSAnVGVtcGxhdGVGYWN0b3J5JzsKICBjb25zdCBEZWZhdWx0ID0gewogICAgYWxsb3dMaXN0OiBzYW5pdGl6ZXIuRGVmYXVsdEFsbG93bGlzdCwKICAgIGNvbnRlbnQ6IHt9LAogICAgLy8geyBzZWxlY3RvciA6IHRleHQgLCAgc2VsZWN0b3IyIDogdGV4dDIgLCB9CiAgICBleHRyYUNsYXNzOiAnJywKICAgIGh0bWw6IGZhbHNlLAogICAgc2FuaXRpemU6IHRydWUsCiAgICBzYW5pdGl6ZUZuOiBudWxsLAogICAgdGVtcGxhdGU6ICc8ZGl2PjwvZGl2PicKICB9OwogIGNvbnN0IERlZmF1bHRUeXBlID0gewogICAgYWxsb3dMaXN0OiAnb2JqZWN0JywKICAgIGNvbnRlbnQ6ICdvYmplY3QnLAogICAgZXh0cmFDbGFzczogJyhzdHJpbmd8ZnVuY3Rpb24pJywKICAgIGh0bWw6ICdib29sZWFuJywKICAgIHNhbml0aXplOiAnYm9vbGVhbicsCiAgICBzYW5pdGl6ZUZuOiAnKG51bGx8ZnVuY3Rpb24pJywKICAgIHRlbXBsYXRlOiAnc3RyaW5nJwogIH07CiAgY29uc3QgRGVmYXVsdENvbnRlbnRUeXBlID0gewogICAgZW50cnk6ICcoc3RyaW5nfGVsZW1lbnR8ZnVuY3Rpb258bnVsbCknLAogICAgc2VsZWN0b3I6ICcoc3RyaW5nfGVsZW1lbnQpJwogIH07CiAgLyoqCiAgICogQ2xhc3MgZGVmaW5pdGlvbgogICAqLwoKICBjbGFzcyBUZW1wbGF0ZUZhY3RvcnkgZXh0ZW5kcyBDb25maWdfX2RlZmF1bHQuZGVmYXVsdCB7CiAgICBjb25zdHJ1Y3Rvcihjb25maWcpIHsKICAgICAgc3VwZXIoKTsKICAgICAgdGhpcy5fY29uZmlnID0gdGhpcy5fZ2V0Q29uZmlnKGNvbmZpZyk7CiAgICB9IC8vIEdldHRlcnMKCgogICAgc3RhdGljIGdldCBEZWZhdWx0KCkgewogICAgICByZXR1cm4gRGVmYXVsdDsKICAgIH0KCiAgICBzdGF0aWMgZ2V0IERlZmF1bHRUeXBlKCkgewogICAgICByZXR1cm4gRGVmYXVsdFR5cGU7CiAgICB9CgogICAgc3RhdGljIGdldCBOQU1FKCkgewogICAgICByZXR1cm4gTkFNRTsKICAgIH0gLy8gUHVibGljCgoKICAgIGdldENvbnRlbnQoKSB7CiAgICAgIHJldHVybiBPYmplY3QudmFsdWVzKHRoaXMuX2NvbmZpZy5jb250ZW50KS5tYXAoY29uZmlnID0+IHRoaXMuX3Jlc29sdmVQb3NzaWJsZUZ1bmN0aW9uKGNvbmZpZykpLmZpbHRlcihCb29sZWFuKTsKICAgIH0KCiAgICBoYXNDb250ZW50KCkgewogICAgICByZXR1cm4gdGhpcy5nZXRDb250ZW50KCkubGVuZ3RoID4gMDsKICAgIH0KCiAgICBjaGFuZ2VDb250ZW50KGNvbnRlbnQpIHsKICAgICAgdGhpcy5fY2hlY2tDb250ZW50KGNvbnRlbnQpOwoKICAgICAgdGhpcy5fY29uZmlnLmNvbnRlbnQgPSB7IC4uLnRoaXMuX2NvbmZpZy5jb250ZW50LAogICAgICAgIC4uLmNvbnRlbnQKICAgICAgfTsKICAgICAgcmV0dXJuIHRoaXM7CiAgICB9CgogICAgdG9IdG1sKCkgewogICAgICBjb25zdCB0ZW1wbGF0ZVdyYXBwZXIgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdkaXYnKTsKICAgICAgdGVtcGxhdGVXcmFwcGVyLmlubmVySFRNTCA9IHRoaXMuX21heWJlU2FuaXRpemUodGhpcy5fY29uZmlnLnRlbXBsYXRlKTsKCiAgICAgIGZvciAoY29uc3QgW3NlbGVjdG9yLCB0ZXh0XSBvZiBPYmplY3QuZW50cmllcyh0aGlzLl9jb25maWcuY29udGVudCkpIHsKICAgICAgICB0aGlzLl9zZXRDb250ZW50KHRlbXBsYXRlV3JhcHBlciwgdGV4dCwgc2VsZWN0b3IpOwogICAgICB9CgogICAgICBjb25zdCB0ZW1wbGF0ZSA9IHRlbXBsYXRlV3JhcHBlci5jaGlsZHJlblswXTsKCiAgICAgIGNvbnN0IGV4dHJhQ2xhc3MgPSB0aGlzLl9yZXNvbHZlUG9zc2libGVGdW5jdGlvbih0aGlzLl9jb25maWcuZXh0cmFDbGFzcyk7CgogICAgICBpZiAoZXh0cmFDbGFzcykgewogICAgICAgIHRlbXBsYXRlLmNsYXNzTGlzdC5hZGQoLi4uZXh0cmFDbGFzcy5zcGxpdCgnICcpKTsKICAgICAgfQoKICAgICAgcmV0dXJuIHRlbXBsYXRlOwogICAgfSAvLyBQcml2YXRlCgoKICAgIF90eXBlQ2hlY2tDb25maWcoY29uZmlnKSB7CiAgICAgIHN1cGVyLl90eXBlQ2hlY2tDb25maWcoY29uZmlnKTsKCiAgICAgIHRoaXMuX2NoZWNrQ29udGVudChjb25maWcuY29udGVudCk7CiAgICB9CgogICAgX2NoZWNrQ29udGVudChhcmcpIHsKICAgICAgZm9yIChjb25zdCBbc2VsZWN0b3IsIGNvbnRlbnRdIG9mIE9iamVjdC5lbnRyaWVzKGFyZykpIHsKICAgICAgICBzdXBlci5fdHlwZUNoZWNrQ29uZmlnKHsKICAgICAgICAgIHNlbGVjdG9yLAogICAgICAgICAgZW50cnk6IGNvbnRlbnQKICAgICAgICB9LCBEZWZhdWx0Q29udGVudFR5cGUpOwogICAgICB9CiAgICB9CgogICAgX3NldENvbnRlbnQodGVtcGxhdGUsIGNvbnRlbnQsIHNlbGVjdG9yKSB7CiAgICAgIGNvbnN0IHRlbXBsYXRlRWxlbWVudCA9IFNlbGVjdG9yRW5naW5lX19kZWZhdWx0LmRlZmF1bHQuZmluZE9uZShzZWxlY3RvciwgdGVtcGxhdGUpOwoKICAgICAgaWYgKCF0ZW1wbGF0ZUVsZW1lbnQpIHsKICAgICAgICByZXR1cm47CiAgICAgIH0KCiAgICAgIGNvbnRlbnQgPSB0aGlzLl9yZXNvbHZlUG9zc2libGVGdW5jdGlvbihjb250ZW50KTsKCiAgICAgIGlmICghY29udGVudCkgewogICAgICAgIHRlbXBsYXRlRWxlbWVudC5yZW1vdmUoKTsKICAgICAgICByZXR1cm47CiAgICAgIH0KCiAgICAgIGlmIChpbmRleC5pc0VsZW1lbnQoY29udGVudCkpIHsKICAgICAgICB0aGlzLl9wdXRFbGVtZW50SW5UZW1wbGF0ZShpbmRleC5nZXRFbGVtZW50KGNvbnRlbnQpLCB0ZW1wbGF0ZUVsZW1lbnQpOwoKICAgICAgICByZXR1cm47CiAgICAgIH0KCiAgICAgIGlmICh0aGlzLl9jb25maWcuaHRtbCkgewogICAgICAgIHRlbXBsYXRlRWxlbWVudC5pbm5lckhUTUwgPSB0aGlzLl9tYXliZVNhbml0aXplKGNvbnRlbnQpOwogICAgICAgIHJldHVybjsKICAgICAgfQoKICAgICAgdGVtcGxhdGVFbGVtZW50LnRleHRDb250ZW50ID0gY29udGVudDsKICAgIH0KCiAgICBfbWF5YmVTYW5pdGl6ZShhcmcpIHsKICAgICAgcmV0dXJuIHRoaXMuX2NvbmZpZy5zYW5pdGl6ZSA/IHNhbml0aXplci5zYW5pdGl6ZUh0bWwoYXJnLCB0aGlzLl9jb25maWcuYWxsb3dMaXN0LCB0aGlzLl9jb25maWcuc2FuaXRpemVGbikgOiBhcmc7CiAgICB9CgogICAgX3Jlc29sdmVQb3NzaWJsZUZ1bmN0aW9uKGFyZykgewogICAgICByZXR1cm4gdHlwZW9mIGFyZyA9PT0gJ2Z1bmN0aW9uJyA/IGFyZyh0aGlzKSA6IGFyZzsKICAgIH0KCiAgICBfcHV0RWxlbWVudEluVGVtcGxhdGUoZWxlbWVudCwgdGVtcGxhdGVFbGVtZW50KSB7CiAgICAgIGlmICh0aGlzLl9jb25maWcuaHRtbCkgewogICAgICAgIHRlbXBsYXRlRWxlbWVudC5pbm5lckhUTUwgPSAnJzsKICAgICAgICB0ZW1wbGF0ZUVsZW1lbnQuYXBwZW5kKGVsZW1lbnQpOwogICAgICAgIHJldHVybjsKICAgICAgfQoKICAgICAgdGVtcGxhdGVFbGVtZW50LnRleHRDb250ZW50ID0gZWxlbWVudC50ZXh0Q29udGVudDsKICAgIH0KCiAgfQoKICByZXR1cm4gVGVtcGxhdGVGYWN0b3J5OwoKfSkpOwovLyMgc291cmNlTWFwcGluZ1VSTD10ZW1wbGF0ZS1mYWN0b3J5LmpzLm1hcAoKCi8qKiovIH0pLAoKLyoqKi8gIi4vbm9kZV9tb2R1bGVzL2pxdWVyeS9kaXN0L2pxdWVyeS5qcyI6Ci8qISoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqISpcCiAgISoqKiAuL25vZGVfbW9kdWxlcy9qcXVlcnkvZGlzdC9qcXVlcnkuanMgKioqIQogIFwqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKi8KLyoqKi8gKGZ1bmN0aW9uKG1vZHVsZSwgZXhwb3J0cykgewoKdmFyIF9fV0VCUEFDS19BTURfREVGSU5FX0FSUkFZX18sIF9fV0VCUEFDS19BTURfREVGSU5FX1JFU1VMVF9fOy8qIQogKiBqUXVlcnkgSmF2YVNjcmlwdCBMaWJyYXJ5IHYzLjYuMgogKiBodHRwczovL2pxdWVyeS5jb20vCiAqCiAqIEluY2x1ZGVzIFNpenpsZS5qcwogKiBodHRwczovL3NpenpsZWpzLmNvbS8KICoKICogQ29weXJpZ2h0IE9wZW5KUyBGb3VuZGF0aW9uIGFuZCBvdGhlciBjb250cmlidXRvcnMKICogUmVsZWFzZWQgdW5kZXIgdGhlIE1JVCBsaWNlbnNlCiAqIGh0dHBzOi8vanF1ZXJ5Lm9yZy9saWNlbnNlCiAqCiAqIERhdGU6IDIwMjItMTItMTNUMTQ6NTZaCiAqLwooIGZ1bmN0aW9uKCBnbG9iYWwsIGZhY3RvcnkgKSB7CgoJInVzZSBzdHJpY3QiOwoKCWlmICggIHRydWUgJiYgdHlwZW9mIG1vZHVsZS5leHBvcnRzID09PSAib2JqZWN0IiApIHsKCgkJLy8gRm9yIENvbW1vbkpTIGFuZCBDb21tb25KUy1saWtlIGVudmlyb25tZW50cyB3aGVyZSBhIHByb3BlciBgd2luZG93YAoJCS8vIGlzIHByZXNlbnQsIGV4ZWN1dGUgdGhlIGZhY3RvcnkgYW5kIGdldCBqUXVlcnkuCgkJLy8gRm9yIGVudmlyb25tZW50cyB0aGF0IGRvIG5vdCBoYXZlIGEgYHdpbmRvd2Agd2l0aCBhIGBkb2N1bWVudGAKCQkvLyAoc3VjaCBhcyBOb2RlLmpzKSwgZXhwb3NlIGEgZmFjdG9yeSBhcyBtb2R1bGUuZXhwb3J0cy4KCQkvLyBUaGlzIGFjY2VudHVhdGVzIHRoZSBuZWVkIGZvciB0aGUgY3JlYXRpb24gb2YgYSByZWFsIGB3aW5kb3dgLgoJCS8vIGUuZy4gdmFyIGpRdWVyeSA9IHJlcXVpcmUoImpxdWVyeSIpKHdpbmRvdyk7CgkJLy8gU2VlIHRpY2tldCB0cmFjLTE0NTQ5IGZvciBtb3JlIGluZm8uCgkJbW9kdWxlLmV4cG9ydHMgPSBnbG9iYWwuZG9jdW1lbnQgPwoJCQlmYWN0b3J5KCBnbG9iYWwsIHRydWUgKSA6CgkJCWZ1bmN0aW9uKCB3ICkgewoJCQkJaWYgKCAhdy5kb2N1bWVudCApIHsKCQkJCQl0aHJvdyBuZXcgRXJyb3IoICJqUXVlcnkgcmVxdWlyZXMgYSB3aW5kb3cgd2l0aCBhIGRvY3VtZW50IiApOwoJCQkJfQoJCQkJcmV0dXJuIGZhY3RvcnkoIHcgKTsKCQkJfTsKCX0gZWxzZSB7CgkJZmFjdG9yeSggZ2xvYmFsICk7Cgl9CgovLyBQYXNzIHRoaXMgaWYgd2luZG93IGlzIG5vdCBkZWZpbmVkIHlldAp9ICkoIHR5cGVvZiB3aW5kb3cgIT09ICJ1bmRlZmluZWQiID8gd2luZG93IDogdGhpcywgZnVuY3Rpb24oIHdpbmRvdywgbm9HbG9iYWwgKSB7CgovLyBFZGdlIDw9IDEyIC0gMTMrLCBGaXJlZm94IDw9MTggLSA0NSssIElFIDEwIC0gMTEsIFNhZmFyaSA1LjEgLSA5KywgaU9TIDYgLSA5LjEKLy8gdGhyb3cgZXhjZXB0aW9ucyB3aGVuIG5vbi1zdHJpY3QgY29kZSAoZS5nLiwgQVNQLk5FVCA0LjUpIGFjY2Vzc2VzIHN0cmljdCBtb2RlCi8vIGFyZ3VtZW50cy5jYWxsZWUuY2FsbGVyICh0cmFjLTEzMzM1KS4gQnV0IGFzIG9mIGpRdWVyeSAzLjAgKDIwMTYpLCBzdHJpY3QgbW9kZSBzaG91bGQgYmUgY29tbW9uCi8vIGVub3VnaCB0aGF0IGFsbCBzdWNoIGF0dGVtcHRzIGFyZSBndWFyZGVkIGluIGEgdHJ5IGJsb2NrLgoidXNlIHN0cmljdCI7Cgp2YXIgYXJyID0gW107Cgp2YXIgZ2V0UHJvdG8gPSBPYmplY3QuZ2V0UHJvdG90eXBlT2Y7Cgp2YXIgc2xpY2UgPSBhcnIuc2xpY2U7Cgp2YXIgZmxhdCA9IGFyci5mbGF0ID8gZnVuY3Rpb24oIGFycmF5ICkgewoJcmV0dXJuIGFyci5mbGF0LmNhbGwoIGFycmF5ICk7Cn0gOiBmdW5jdGlvbiggYXJyYXkgKSB7CglyZXR1cm4gYXJyLmNvbmNhdC5hcHBseSggW10sIGFycmF5ICk7Cn07CgoKdmFyIHB1c2ggPSBhcnIucHVzaDsKCnZhciBpbmRleE9mID0gYXJyLmluZGV4T2Y7Cgp2YXIgY2xhc3MydHlwZSA9IHt9OwoKdmFyIHRvU3RyaW5nID0gY2xhc3MydHlwZS50b1N0cmluZzsKCnZhciBoYXNPd24gPSBjbGFzczJ0eXBlLmhhc093blByb3BlcnR5OwoKdmFyIGZuVG9TdHJpbmcgPSBoYXNPd24udG9TdHJpbmc7Cgp2YXIgT2JqZWN0RnVuY3Rpb25TdHJpbmcgPSBmblRvU3RyaW5nLmNhbGwoIE9iamVjdCApOwoKdmFyIHN1cHBvcnQgPSB7fTsKCnZhciBpc0Z1bmN0aW9uID0gZnVuY3Rpb24gaXNGdW5jdGlvbiggb2JqICkgewoKCQkvLyBTdXBwb3J0OiBDaHJvbWUgPD01NywgRmlyZWZveCA8PTUyCgkJLy8gSW4gc29tZSBicm93c2VycywgdHlwZW9mIHJldHVybnMgImZ1bmN0aW9uIiBmb3IgSFRNTCA8b2JqZWN0PiBlbGVtZW50cwoJCS8vIChpLmUuLCBgdHlwZW9mIGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoICJvYmplY3QiICkgPT09ICJmdW5jdGlvbiJgKS4KCQkvLyBXZSBkb24ndCB3YW50IHRvIGNsYXNzaWZ5ICphbnkqIERPTSBub2RlIGFzIGEgZnVuY3Rpb24uCgkJLy8gU3VwcG9ydDogUXRXZWIgPD0zLjguNSwgV2ViS2l0IDw9NTM0LjM0LCB3a2h0bWx0b3BkZiB0b29sIDw9MC4xMi41CgkJLy8gUGx1cyBmb3Igb2xkIFdlYktpdCwgdHlwZW9mIHJldHVybnMgImZ1bmN0aW9uIiBmb3IgSFRNTCBjb2xsZWN0aW9ucwoJCS8vIChlLmcuLCBgdHlwZW9mIGRvY3VtZW50LmdldEVsZW1lbnRzQnlUYWdOYW1lKCJkaXYiKSA9PT0gImZ1bmN0aW9uImApLiAoZ2gtNDc1NikKCQlyZXR1cm4gdHlwZW9mIG9iaiA9PT0gImZ1bmN0aW9uIiAmJiB0eXBlb2Ygb2JqLm5vZGVUeXBlICE9PSAibnVtYmVyIiAmJgoJCQl0eXBlb2Ygb2JqLml0ZW0gIT09ICJmdW5jdGlvbiI7Cgl9OwoKCnZhciBpc1dpbmRvdyA9IGZ1bmN0aW9uIGlzV2luZG93KCBvYmogKSB7CgkJcmV0dXJuIG9iaiAhPSBudWxsICYmIG9iaiA9PT0gb2JqLndpbmRvdzsKCX07CgoKdmFyIGRvY3VtZW50ID0gd2luZG93LmRvY3VtZW50OwoKCgoJdmFyIHByZXNlcnZlZFNjcmlwdEF0dHJpYnV0ZXMgPSB7CgkJdHlwZTogdHJ1ZSwKCQlzcmM6IHRydWUsCgkJbm9uY2U6IHRydWUsCgkJbm9Nb2R1bGU6IHRydWUKCX07CgoJZnVuY3Rpb24gRE9NRXZhbCggY29kZSwgbm9kZSwgZG9jICkgewoJCWRvYyA9IGRvYyB8fCBkb2N1bWVudDsKCgkJdmFyIGksIHZhbCwKCQkJc2NyaXB0ID0gZG9jLmNyZWF0ZUVsZW1lbnQoICJzY3JpcHQiICk7CgoJCXNjcmlwdC50ZXh0ID0gY29kZTsKCQlpZiAoIG5vZGUgKSB7CgkJCWZvciAoIGkgaW4gcHJlc2VydmVkU2NyaXB0QXR0cmlidXRlcyApIHsKCgkJCQkvLyBTdXBwb3J0OiBGaXJlZm94IDY0KywgRWRnZSAxOCsKCQkJCS8vIFNvbWUgYnJvd3NlcnMgZG9uJ3Qgc3VwcG9ydCB0aGUgIm5vbmNlIiBwcm9wZXJ0eSBvbiBzY3JpcHRzLgoJCQkJLy8gT24gdGhlIG90aGVyIGhhbmQsIGp1c3QgdXNpbmcgYGdldEF0dHJpYnV0ZWAgaXMgbm90IGVub3VnaCBhcwoJCQkJLy8gdGhlIGBub25jZWAgYXR0cmlidXRlIGlzIHJlc2V0IHRvIGFuIGVtcHR5IHN0cmluZyB3aGVuZXZlciBpdAoJCQkJLy8gYmVjb21lcyBicm93c2luZy1jb250ZXh0IGNvbm5lY3RlZC4KCQkJCS8vIFNlZSBodHRwczovL2dpdGh1Yi5jb20vd2hhdHdnL2h0bWwvaXNzdWVzLzIzNjkKCQkJCS8vIFNlZSBodHRwczovL2h0bWwuc3BlYy53aGF0d2cub3JnLyNub25jZS1hdHRyaWJ1dGVzCgkJCQkvLyBUaGUgYG5vZGUuZ2V0QXR0cmlidXRlYCBjaGVjayB3YXMgYWRkZWQgZm9yIHRoZSBzYWtlIG9mCgkJCQkvLyBgalF1ZXJ5Lmdsb2JhbEV2YWxgIHNvIHRoYXQgaXQgY2FuIGZha2UgYSBub25jZS1jb250YWluaW5nIG5vZGUKCQkJCS8vIHZpYSBhbiBvYmplY3QuCgkJCQl2YWwgPSBub2RlWyBpIF0gfHwgbm9kZS5nZXRBdHRyaWJ1dGUgJiYgbm9kZS5nZXRBdHRyaWJ1dGUoIGkgKTsKCQkJCWlmICggdmFsICkgewoJCQkJCXNjcmlwdC5zZXRBdHRyaWJ1dGUoIGksIHZhbCApOwoJCQkJfQoJCQl9CgkJfQoJCWRvYy5oZWFkLmFwcGVuZENoaWxkKCBzY3JpcHQgKS5wYXJlbnROb2RlLnJlbW92ZUNoaWxkKCBzY3JpcHQgKTsKCX0KCgpmdW5jdGlvbiB0b1R5cGUoIG9iaiApIHsKCWlmICggb2JqID09IG51bGwgKSB7CgkJcmV0dXJuIG9iaiArICIiOwoJfQoKCS8vIFN1cHBvcnQ6IEFuZHJvaWQgPD0yLjMgb25seSAoZnVuY3Rpb25pc2ggUmVnRXhwKQoJcmV0dXJuIHR5cGVvZiBvYmogPT09ICJvYmplY3QiIHx8IHR5cGVvZiBvYmogPT09ICJmdW5jdGlvbiIgPwoJCWNsYXNzMnR5cGVbIHRvU3RyaW5nLmNhbGwoIG9iaiApIF0gfHwgIm9iamVjdCIgOgoJCXR5cGVvZiBvYmo7Cn0KLyogZ2xvYmFsIFN5bWJvbCAqLwovLyBEZWZpbmluZyB0aGlzIGdsb2JhbCBpbiAuZXNsaW50cmMuanNvbiB3b3VsZCBjcmVhdGUgYSBkYW5nZXIgb2YgdXNpbmcgdGhlIGdsb2JhbAovLyB1bmd1YXJkZWQgaW4gYW5vdGhlciBwbGFjZSwgaXQgc2VlbXMgc2FmZXIgdG8gZGVmaW5lIGdsb2JhbCBvbmx5IGZvciB0aGlzIG1vZHVsZQoKCgp2YXIKCXZlcnNpb24gPSAiMy42LjIiLAoKCS8vIERlZmluZSBhIGxvY2FsIGNvcHkgb2YgalF1ZXJ5CglqUXVlcnkgPSBmdW5jdGlvbiggc2VsZWN0b3IsIGNvbnRleHQgKSB7CgoJCS8vIFRoZSBqUXVlcnkgb2JqZWN0IGlzIGFjdHVhbGx5IGp1c3QgdGhlIGluaXQgY29uc3RydWN0b3IgJ2VuaGFuY2VkJwoJCS8vIE5lZWQgaW5pdCBpZiBqUXVlcnkgaXMgY2FsbGVkIChqdXN0IGFsbG93IGVycm9yIHRvIGJlIHRocm93biBpZiBub3QgaW5jbHVkZWQpCgkJcmV0dXJuIG5ldyBqUXVlcnkuZm4uaW5pdCggc2VsZWN0b3IsIGNvbnRleHQgKTsKCX07CgpqUXVlcnkuZm4gPSBqUXVlcnkucHJvdG90eXBlID0gewoKCS8vIFRoZSBjdXJyZW50IHZlcnNpb24gb2YgalF1ZXJ5IGJlaW5nIHVzZWQKCWpxdWVyeTogdmVyc2lvbiwKCgljb25zdHJ1Y3RvcjogalF1ZXJ5LAoKCS8vIFRoZSBkZWZhdWx0IGxlbmd0aCBvZiBhIGpRdWVyeSBvYmplY3QgaXMgMAoJbGVuZ3RoOiAwLAoKCXRvQXJyYXk6IGZ1bmN0aW9uKCkgewoJCXJldHVybiBzbGljZS5jYWxsKCB0aGlzICk7Cgl9LAoKCS8vIEdldCB0aGUgTnRoIGVsZW1lbnQgaW4gdGhlIG1hdGNoZWQgZWxlbWVudCBzZXQgT1IKCS8vIEdldCB0aGUgd2hvbGUgbWF0Y2hlZCBlbGVtZW50IHNldCBhcyBhIGNsZWFuIGFycmF5CglnZXQ6IGZ1bmN0aW9uKCBudW0gKSB7CgoJCS8vIFJldHVybiBhbGwgdGhlIGVsZW1lbnRzIGluIGEgY2xlYW4gYXJyYXkKCQlpZiAoIG51bSA9PSBudWxsICkgewoJCQlyZXR1cm4gc2xpY2UuY2FsbCggdGhpcyApOwoJCX0KCgkJLy8gUmV0dXJuIGp1c3QgdGhlIG9uZSBlbGVtZW50IGZyb20gdGhlIHNldAoJCXJldHVybiBudW0gPCAwID8gdGhpc1sgbnVtICsgdGhpcy5sZW5ndGggXSA6IHRoaXNbIG51bSBdOwoJfSwKCgkvLyBUYWtlIGFuIGFycmF5IG9mIGVsZW1lbnRzIGFuZCBwdXNoIGl0IG9udG8gdGhlIHN0YWNrCgkvLyAocmV0dXJuaW5nIHRoZSBuZXcgbWF0Y2hlZCBlbGVtZW50IHNldCkKCXB1c2hTdGFjazogZnVuY3Rpb24oIGVsZW1zICkgewoKCQkvLyBCdWlsZCBhIG5ldyBqUXVlcnkgbWF0Y2hlZCBlbGVtZW50IHNldAoJCXZhciByZXQgPSBqUXVlcnkubWVyZ2UoIHRoaXMuY29uc3RydWN0b3IoKSwgZWxlbXMgKTsKCgkJLy8gQWRkIHRoZSBvbGQgb2JqZWN0IG9udG8gdGhlIHN0YWNrIChhcyBhIHJlZmVyZW5jZSkKCQlyZXQucHJldk9iamVjdCA9IHRoaXM7CgoJCS8vIFJldHVybiB0aGUgbmV3bHktZm9ybWVkIGVsZW1lbnQgc2V0CgkJcmV0dXJuIHJldDsKCX0sCgoJLy8gRXhlY3V0ZSBhIGNhbGxiYWNrIGZvciBldmVyeSBlbGVtZW50IGluIHRoZSBtYXRjaGVkIHNldC4KCWVhY2g6IGZ1bmN0aW9uKCBjYWxsYmFjayApIHsKCQlyZXR1cm4galF1ZXJ5LmVhY2goIHRoaXMsIGNhbGxiYWNrICk7Cgl9LAoKCW1hcDogZnVuY3Rpb24oIGNhbGxiYWNrICkgewoJCXJldHVybiB0aGlzLnB1c2hTdGFjayggalF1ZXJ5Lm1hcCggdGhpcywgZnVuY3Rpb24oIGVsZW0sIGkgKSB7CgkJCXJldHVybiBjYWxsYmFjay5jYWxsKCBlbGVtLCBpLCBlbGVtICk7CgkJfSApICk7Cgl9LAoKCXNsaWNlOiBmdW5jdGlvbigpIHsKCQlyZXR1cm4gdGhpcy5wdXNoU3RhY2soIHNsaWNlLmFwcGx5KCB0aGlzLCBhcmd1bWVudHMgKSApOwoJfSwKCglmaXJzdDogZnVuY3Rpb24oKSB7CgkJcmV0dXJuIHRoaXMuZXEoIDAgKTsKCX0sCgoJbGFzdDogZnVuY3Rpb24oKSB7CgkJcmV0dXJuIHRoaXMuZXEoIC0xICk7Cgl9LAoKCWV2ZW46IGZ1bmN0aW9uKCkgewoJCXJldHVybiB0aGlzLnB1c2hTdGFjayggalF1ZXJ5LmdyZXAoIHRoaXMsIGZ1bmN0aW9uKCBfZWxlbSwgaSApIHsKCQkJcmV0dXJuICggaSArIDEgKSAlIDI7CgkJfSApICk7Cgl9LAoKCW9kZDogZnVuY3Rpb24oKSB7CgkJcmV0dXJuIHRoaXMucHVzaFN0YWNrKCBqUXVlcnkuZ3JlcCggdGhpcywgZnVuY3Rpb24oIF9lbGVtLCBpICkgewoJCQlyZXR1cm4gaSAlIDI7CgkJfSApICk7Cgl9LAoKCWVxOiBmdW5jdGlvbiggaSApIHsKCQl2YXIgbGVuID0gdGhpcy5sZW5ndGgsCgkJCWogPSAraSArICggaSA8IDAgPyBsZW4gOiAwICk7CgkJcmV0dXJuIHRoaXMucHVzaFN0YWNrKCBqID49IDAgJiYgaiA8IGxlbiA/IFsgdGhpc1sgaiBdIF0gOiBbXSApOwoJfSwKCgllbmQ6IGZ1bmN0aW9uKCkgewoJCXJldHVybiB0aGlzLnByZXZPYmplY3QgfHwgdGhpcy5jb25zdHJ1Y3RvcigpOwoJfSwKCgkvLyBGb3IgaW50ZXJuYWwgdXNlIG9ubHkuCgkvLyBCZWhhdmVzIGxpa2UgYW4gQXJyYXkncyBtZXRob2QsIG5vdCBsaWtlIGEgalF1ZXJ5IG1ldGhvZC4KCXB1c2g6IHB1c2gsCglzb3J0OiBhcnIuc29ydCwKCXNwbGljZTogYXJyLnNwbGljZQp9OwoKalF1ZXJ5LmV4dGVuZCA9IGpRdWVyeS5mbi5leHRlbmQgPSBmdW5jdGlvbigpIHsKCXZhciBvcHRpb25zLCBuYW1lLCBzcmMsIGNvcHksIGNvcHlJc0FycmF5LCBjbG9uZSwKCQl0YXJnZXQgPSBhcmd1bWVudHNbIDAgXSB8fCB7fSwKCQlpID0gMSwKCQlsZW5ndGggPSBhcmd1bWVudHMubGVuZ3RoLAoJCWRlZXAgPSBmYWxzZTsKCgkvLyBIYW5kbGUgYSBkZWVwIGNvcHkgc2l0dWF0aW9uCglpZiAoIHR5cGVvZiB0YXJnZXQgPT09ICJib29sZWFuIiApIHsKCQlkZWVwID0gdGFyZ2V0OwoKCQkvLyBTa2lwIHRoZSBib29sZWFuIGFuZCB0aGUgdGFyZ2V0CgkJdGFyZ2V0ID0gYXJndW1lbnRzWyBpIF0gfHwge307CgkJaSsrOwoJfQoKCS8vIEhhbmRsZSBjYXNlIHdoZW4gdGFyZ2V0IGlzIGEgc3RyaW5nIG9yIHNvbWV0aGluZyAocG9zc2libGUgaW4gZGVlcCBjb3B5KQoJaWYgKCB0eXBlb2YgdGFyZ2V0ICE9PSAib2JqZWN0IiAmJiAhaXNGdW5jdGlvbiggdGFyZ2V0ICkgKSB7CgkJdGFyZ2V0ID0ge307Cgl9CgoJLy8gRXh0ZW5kIGpRdWVyeSBpdHNlbGYgaWYgb25seSBvbmUgYXJndW1lbnQgaXMgcGFzc2VkCglpZiAoIGkgPT09IGxlbmd0aCApIHsKCQl0YXJnZXQgPSB0aGlzOwoJCWktLTsKCX0KCglmb3IgKCA7IGkgPCBsZW5ndGg7IGkrKyApIHsKCgkJLy8gT25seSBkZWFsIHdpdGggbm9uLW51bGwvdW5kZWZpbmVkIHZhbHVlcwoJCWlmICggKCBvcHRpb25zID0gYXJndW1lbnRzWyBpIF0gKSAhPSBudWxsICkgewoKCQkJLy8gRXh0ZW5kIHRoZSBiYXNlIG9iamVjdAoJCQlmb3IgKCBuYW1lIGluIG9wdGlvbnMgKSB7CgkJCQljb3B5ID0gb3B0aW9uc1sgbmFtZSBdOwoKCQkJCS8vIFByZXZlbnQgT2JqZWN0LnByb3RvdHlwZSBwb2xsdXRpb24KCQkJCS8vIFByZXZlbnQgbmV2ZXItZW5kaW5nIGxvb3AKCQkJCWlmICggbmFtZSA9PT0gIl9fcHJvdG9fXyIgfHwgdGFyZ2V0ID09PSBjb3B5ICkgewoJCQkJCWNvbnRpbnVlOwoJCQkJfQoKCQkJCS8vIFJlY3Vyc2UgaWYgd2UncmUgbWVyZ2luZyBwbGFpbiBvYmplY3RzIG9yIGFycmF5cwoJCQkJaWYgKCBkZWVwICYmIGNvcHkgJiYgKCBqUXVlcnkuaXNQbGFpbk9iamVjdCggY29weSApIHx8CgkJCQkJKCBjb3B5SXNBcnJheSA9IEFycmF5LmlzQXJyYXkoIGNvcHkgKSApICkgKSB7CgkJCQkJc3JjID0gdGFyZ2V0WyBuYW1lIF07CgoJCQkJCS8vIEVuc3VyZSBwcm9wZXIgdHlwZSBmb3IgdGhlIHNvdXJjZSB2YWx1ZQoJCQkJCWlmICggY29weUlzQXJyYXkgJiYgIUFycmF5LmlzQXJyYXkoIHNyYyApICkgewoJCQkJCQljbG9uZSA9IFtdOwoJCQkJCX0gZWxzZSBpZiAoICFjb3B5SXNBcnJheSAmJiAhalF1ZXJ5LmlzUGxhaW5PYmplY3QoIHNyYyApICkgewoJCQkJCQljbG9uZSA9IHt9OwoJCQkJCX0gZWxzZSB7CgkJCQkJCWNsb25lID0gc3JjOwoJCQkJCX0KCQkJCQljb3B5SXNBcnJheSA9IGZhbHNlOwoKCQkJCQkvLyBOZXZlciBtb3ZlIG9yaWdpbmFsIG9iamVjdHMsIGNsb25lIHRoZW0KCQkJCQl0YXJnZXRbIG5hbWUgXSA9IGpRdWVyeS5leHRlbmQoIGRlZXAsIGNsb25lLCBjb3B5ICk7CgoJCQkJLy8gRG9uJ3QgYnJpbmcgaW4gdW5kZWZpbmVkIHZhbHVlcwoJCQkJfSBlbHNlIGlmICggY29weSAhPT0gdW5kZWZpbmVkICkgewoJCQkJCXRhcmdldFsgbmFtZSBdID0gY29weTsKCQkJCX0KCQkJfQoJCX0KCX0KCgkvLyBSZXR1cm4gdGhlIG1vZGlmaWVkIG9iamVjdAoJcmV0dXJuIHRhcmdldDsKfTsKCmpRdWVyeS5leHRlbmQoIHsKCgkvLyBVbmlxdWUgZm9yIGVhY2ggY29weSBvZiBqUXVlcnkgb24gdGhlIHBhZ2UKCWV4cGFuZG86ICJqUXVlcnkiICsgKCB2ZXJzaW9uICsgTWF0aC5yYW5kb20oKSApLnJlcGxhY2UoIC9cRC9nLCAiIiApLAoKCS8vIEFzc3VtZSBqUXVlcnkgaXMgcmVhZHkgd2l0aG91dCB0aGUgcmVhZHkgbW9kdWxlCglpc1JlYWR5OiB0cnVlLAoKCWVycm9yOiBmdW5jdGlvbiggbXNnICkgewoJCXRocm93IG5ldyBFcnJvciggbXNnICk7Cgl9LAoKCW5vb3A6IGZ1bmN0aW9uKCkge30sCgoJaXNQbGFpbk9iamVjdDogZnVuY3Rpb24oIG9iaiApIHsKCQl2YXIgcHJvdG8sIEN0b3I7CgoJCS8vIERldGVjdCBvYnZpb3VzIG5lZ2F0aXZlcwoJCS8vIFVzZSB0b1N0cmluZyBpbnN0ZWFkIG9mIGpRdWVyeS50eXBlIHRvIGNhdGNoIGhvc3Qgb2JqZWN0cwoJCWlmICggIW9iaiB8fCB0b1N0cmluZy5jYWxsKCBvYmogKSAhPT0gIltvYmplY3QgT2JqZWN0XSIgKSB7CgkJCXJldHVybiBmYWxzZTsKCQl9CgoJCXByb3RvID0gZ2V0UHJvdG8oIG9iaiApOwoKCQkvLyBPYmplY3RzIHdpdGggbm8gcHJvdG90eXBlIChlLmcuLCBgT2JqZWN0LmNyZWF0ZSggbnVsbCApYCkgYXJlIHBsYWluCgkJaWYgKCAhcHJvdG8gKSB7CgkJCXJldHVybiB0cnVlOwoJCX0KCgkJLy8gT2JqZWN0cyB3aXRoIHByb3RvdHlwZSBhcmUgcGxhaW4gaWZmIHRoZXkgd2VyZSBjb25zdHJ1Y3RlZCBieSBhIGdsb2JhbCBPYmplY3QgZnVuY3Rpb24KCQlDdG9yID0gaGFzT3duLmNhbGwoIHByb3RvLCAiY29uc3RydWN0b3IiICkgJiYgcHJvdG8uY29uc3RydWN0b3I7CgkJcmV0dXJuIHR5cGVvZiBDdG9yID09PSAiZnVuY3Rpb24iICYmIGZuVG9TdHJpbmcuY2FsbCggQ3RvciApID09PSBPYmplY3RGdW5jdGlvblN0cmluZzsKCX0sCgoJaXNFbXB0eU9iamVjdDogZnVuY3Rpb24oIG9iaiApIHsKCQl2YXIgbmFtZTsKCgkJZm9yICggbmFtZSBpbiBvYmogKSB7CgkJCXJldHVybiBmYWxzZTsKCQl9CgkJcmV0dXJuIHRydWU7Cgl9LAoKCS8vIEV2YWx1YXRlcyBhIHNjcmlwdCBpbiBhIHByb3ZpZGVkIGNvbnRleHQ7IGZhbGxzIGJhY2sgdG8gdGhlIGdsb2JhbCBvbmUKCS8vIGlmIG5vdCBzcGVjaWZpZWQuCglnbG9iYWxFdmFsOiBmdW5jdGlvbiggY29kZSwgb3B0aW9ucywgZG9jICkgewoJCURPTUV2YWwoIGNvZGUsIHsgbm9uY2U6IG9wdGlvbnMgJiYgb3B0aW9ucy5ub25jZSB9LCBkb2MgKTsKCX0sCgoJZWFjaDogZnVuY3Rpb24oIG9iaiwgY2FsbGJhY2sgKSB7CgkJdmFyIGxlbmd0aCwgaSA9IDA7CgoJCWlmICggaXNBcnJheUxpa2UoIG9iaiApICkgewoJCQlsZW5ndGggPSBvYmoubGVuZ3RoOwoJCQlmb3IgKCA7IGkgPCBsZW5ndGg7IGkrKyApIHsKCQkJCWlmICggY2FsbGJhY2suY2FsbCggb2JqWyBpIF0sIGksIG9ialsgaSBdICkgPT09IGZhbHNlICkgewoJCQkJCWJyZWFrOwoJCQkJfQoJCQl9CgkJfSBlbHNlIHsKCQkJZm9yICggaSBpbiBvYmogKSB7CgkJCQlpZiAoIGNhbGxiYWNrLmNhbGwoIG9ialsgaSBdLCBpLCBvYmpbIGkgXSApID09PSBmYWxzZSApIHsKCQkJCQlicmVhazsKCQkJCX0KCQkJfQoJCX0KCgkJcmV0dXJuIG9iajsKCX0sCgoJLy8gcmVzdWx0cyBpcyBmb3IgaW50ZXJuYWwgdXNhZ2Ugb25seQoJbWFrZUFycmF5OiBmdW5jdGlvbiggYXJyLCByZXN1bHRzICkgewoJCXZhciByZXQgPSByZXN1bHRzIHx8IFtdOwoKCQlpZiAoIGFyciAhPSBudWxsICkgewoJCQlpZiAoIGlzQXJyYXlMaWtlKCBPYmplY3QoIGFyciApICkgKSB7CgkJCQlqUXVlcnkubWVyZ2UoIHJldCwKCQkJCQl0eXBlb2YgYXJyID09PSAic3RyaW5nIiA/CgkJCQkJCVsgYXJyIF0gOiBhcnIKCQkJCSk7CgkJCX0gZWxzZSB7CgkJCQlwdXNoLmNhbGwoIHJldCwgYXJyICk7CgkJCX0KCQl9CgoJCXJldHVybiByZXQ7Cgl9LAoKCWluQXJyYXk6IGZ1bmN0aW9uKCBlbGVtLCBhcnIsIGkgKSB7CgkJcmV0dXJuIGFyciA9PSBudWxsID8gLTEgOiBpbmRleE9mLmNhbGwoIGFyciwgZWxlbSwgaSApOwoJfSwKCgkvLyBTdXBwb3J0OiBBbmRyb2lkIDw9NC4wIG9ubHksIFBoYW50b21KUyAxIG9ubHkKCS8vIHB1c2guYXBwbHkoXywgYXJyYXlsaWtlKSB0aHJvd3Mgb24gYW5jaWVudCBXZWJLaXQKCW1lcmdlOiBmdW5jdGlvbiggZmlyc3QsIHNlY29uZCApIHsKCQl2YXIgbGVuID0gK3NlY29uZC5sZW5ndGgsCgkJCWogPSAwLAoJCQlpID0gZmlyc3QubGVuZ3RoOwoKCQlmb3IgKCA7IGogPCBsZW47IGorKyApIHsKCQkJZmlyc3RbIGkrKyBdID0gc2Vjb25kWyBqIF07CgkJfQoKCQlmaXJzdC5sZW5ndGggPSBpOwoKCQlyZXR1cm4gZmlyc3Q7Cgl9LAoKCWdyZXA6IGZ1bmN0aW9uKCBlbGVtcywgY2FsbGJhY2ssIGludmVydCApIHsKCQl2YXIgY2FsbGJhY2tJbnZlcnNlLAoJCQltYXRjaGVzID0gW10sCgkJCWkgPSAwLAoJCQlsZW5ndGggPSBlbGVtcy5sZW5ndGgsCgkJCWNhbGxiYWNrRXhwZWN0ID0gIWludmVydDsKCgkJLy8gR28gdGhyb3VnaCB0aGUgYXJyYXksIG9ubHkgc2F2aW5nIHRoZSBpdGVtcwoJCS8vIHRoYXQgcGFzcyB0aGUgdmFsaWRhdG9yIGZ1bmN0aW9uCgkJZm9yICggOyBpIDwgbGVuZ3RoOyBpKysgKSB7CgkJCWNhbGxiYWNrSW52ZXJzZSA9ICFjYWxsYmFjayggZWxlbXNbIGkgXSwgaSApOwoJCQlpZiAoIGNhbGxiYWNrSW52ZXJzZSAhPT0gY2FsbGJhY2tFeHBlY3QgKSB7CgkJCQltYXRjaGVzLnB1c2goIGVsZW1zWyBpIF0gKTsKCQkJfQoJCX0KCgkJcmV0dXJuIG1hdGNoZXM7Cgl9LAoKCS8vIGFyZyBpcyBmb3IgaW50ZXJuYWwgdXNhZ2Ugb25seQoJbWFwOiBmdW5jdGlvbiggZWxlbXMsIGNhbGxiYWNrLCBhcmcgKSB7CgkJdmFyIGxlbmd0aCwgdmFsdWUsCgkJCWkgPSAwLAoJCQlyZXQgPSBbXTsKCgkJLy8gR28gdGhyb3VnaCB0aGUgYXJyYXksIHRyYW5zbGF0aW5nIGVhY2ggb2YgdGhlIGl0ZW1zIHRvIHRoZWlyIG5ldyB2YWx1ZXMKCQlpZiAoIGlzQXJyYXlMaWtlKCBlbGVtcyApICkgewoJCQlsZW5ndGggPSBlbGVtcy5sZW5ndGg7CgkJCWZvciAoIDsgaSA8IGxlbmd0aDsgaSsrICkgewoJCQkJdmFsdWUgPSBjYWxsYmFjayggZWxlbXNbIGkgXSwgaSwgYXJnICk7CgoJCQkJaWYgKCB2YWx1ZSAhPSBudWxsICkgewoJCQkJCXJldC5wdXNoKCB2YWx1ZSApOwoJCQkJfQoJCQl9CgoJCS8vIEdvIHRocm91Z2ggZXZlcnkga2V5IG9uIHRoZSBvYmplY3QsCgkJfSBlbHNlIHsKCQkJZm9yICggaSBpbiBlbGVtcyApIHsKCQkJCXZhbHVlID0gY2FsbGJhY2soIGVsZW1zWyBpIF0sIGksIGFyZyApOwoKCQkJCWlmICggdmFsdWUgIT0gbnVsbCApIHsKCQkJCQlyZXQucHVzaCggdmFsdWUgKTsKCQkJCX0KCQkJfQoJCX0KCgkJLy8gRmxhdHRlbiBhbnkgbmVzdGVkIGFycmF5cwoJCXJldHVybiBmbGF0KCByZXQgKTsKCX0sCgoJLy8gQSBnbG9iYWwgR1VJRCBjb3VudGVyIGZvciBvYmplY3RzCglndWlkOiAxLAoKCS8vIGpRdWVyeS5zdXBwb3J0IGlzIG5vdCB1c2VkIGluIENvcmUgYnV0IG90aGVyIHByb2plY3RzIGF0dGFjaCB0aGVpcgoJLy8gcHJvcGVydGllcyB0byBpdCBzbyBpdCBuZWVkcyB0byBleGlzdC4KCXN1cHBvcnQ6IHN1cHBvcnQKfSApOwoKaWYgKCB0eXBlb2YgU3ltYm9sID09PSAiZnVuY3Rpb24iICkgewoJalF1ZXJ5LmZuWyBTeW1ib2wuaXRlcmF0b3IgXSA9IGFyclsgU3ltYm9sLml0ZXJhdG9yIF07Cn0KCi8vIFBvcHVsYXRlIHRoZSBjbGFzczJ0eXBlIG1hcApqUXVlcnkuZWFjaCggIkJvb2xlYW4gTnVtYmVyIFN0cmluZyBGdW5jdGlvbiBBcnJheSBEYXRlIFJlZ0V4cCBPYmplY3QgRXJyb3IgU3ltYm9sIi5zcGxpdCggIiAiICksCglmdW5jdGlvbiggX2ksIG5hbWUgKSB7CgkJY2xhc3MydHlwZVsgIltvYmplY3QgIiArIG5hbWUgKyAiXSIgXSA9IG5hbWUudG9Mb3dlckNhc2UoKTsKCX0gKTsKCmZ1bmN0aW9uIGlzQXJyYXlMaWtlKCBvYmogKSB7CgoJLy8gU3VwcG9ydDogcmVhbCBpT1MgOC4yIG9ubHkgKG5vdCByZXByb2R1Y2libGUgaW4gc2ltdWxhdG9yKQoJLy8gYGluYCBjaGVjayB1c2VkIHRvIHByZXZlbnQgSklUIGVycm9yIChnaC0yMTQ1KQoJLy8gaGFzT3duIGlzbid0IHVzZWQgaGVyZSBkdWUgdG8gZmFsc2UgbmVnYXRpdmVzCgkvLyByZWdhcmRpbmcgTm9kZWxpc3QgbGVuZ3RoIGluIElFCgl2YXIgbGVuZ3RoID0gISFvYmogJiYgImxlbmd0aCIgaW4gb2JqICYmIG9iai5sZW5ndGgsCgkJdHlwZSA9IHRvVHlwZSggb2JqICk7CgoJaWYgKCBpc0Z1bmN0aW9uKCBvYmogKSB8fCBpc1dpbmRvdyggb2JqICkgKSB7CgkJcmV0dXJuIGZhbHNlOwoJfQoKCXJldHVybiB0eXBlID09PSAiYXJyYXkiIHx8IGxlbmd0aCA9PT0gMCB8fAoJCXR5cGVvZiBsZW5ndGggPT09ICJudW1iZXIiICYmIGxlbmd0aCA+IDAgJiYgKCBsZW5ndGggLSAxICkgaW4gb2JqOwp9CnZhciBTaXp6bGUgPQovKiEKICogU2l6emxlIENTUyBTZWxlY3RvciBFbmdpbmUgdjIuMy44CiAqIGh0dHBzOi8vc2l6emxlanMuY29tLwogKgogKiBDb3B5cmlnaHQgSlMgRm91bmRhdGlvbiBhbmQgb3RoZXIgY29udHJpYnV0b3JzCiAqIFJlbGVhc2VkIHVuZGVyIHRoZSBNSVQgbGljZW5zZQogKiBodHRwczovL2pzLmZvdW5kYXRpb24vCiAqCiAqIERhdGU6IDIwMjItMTEtMTYKICovCiggZnVuY3Rpb24oIHdpbmRvdyApIHsKdmFyIGksCglzdXBwb3J0LAoJRXhwciwKCWdldFRleHQsCglpc1hNTCwKCXRva2VuaXplLAoJY29tcGlsZSwKCXNlbGVjdCwKCW91dGVybW9zdENvbnRleHQsCglzb3J0SW5wdXQsCgloYXNEdXBsaWNhdGUsCgoJLy8gTG9jYWwgZG9jdW1lbnQgdmFycwoJc2V0RG9jdW1lbnQsCglkb2N1bWVudCwKCWRvY0VsZW0sCglkb2N1bWVudElzSFRNTCwKCXJidWdneVFTQSwKCXJidWdneU1hdGNoZXMsCgltYXRjaGVzLAoJY29udGFpbnMsCgoJLy8gSW5zdGFuY2Utc3BlY2lmaWMgZGF0YQoJZXhwYW5kbyA9ICJzaXp6bGUiICsgMSAqIG5ldyBEYXRlKCksCglwcmVmZXJyZWREb2MgPSB3aW5kb3cuZG9jdW1lbnQsCglkaXJydW5zID0gMCwKCWRvbmUgPSAwLAoJY2xhc3NDYWNoZSA9IGNyZWF0ZUNhY2hlKCksCgl0b2tlbkNhY2hlID0gY3JlYXRlQ2FjaGUoKSwKCWNvbXBpbGVyQ2FjaGUgPSBjcmVhdGVDYWNoZSgpLAoJbm9ubmF0aXZlU2VsZWN0b3JDYWNoZSA9IGNyZWF0ZUNhY2hlKCksCglzb3J0T3JkZXIgPSBmdW5jdGlvbiggYSwgYiApIHsKCQlpZiAoIGEgPT09IGIgKSB7CgkJCWhhc0R1cGxpY2F0ZSA9IHRydWU7CgkJfQoJCXJldHVybiAwOwoJfSwKCgkvLyBJbnN0YW5jZSBtZXRob2RzCgloYXNPd24gPSAoIHt9ICkuaGFzT3duUHJvcGVydHksCglhcnIgPSBbXSwKCXBvcCA9IGFyci5wb3AsCglwdXNoTmF0aXZlID0gYXJyLnB1c2gsCglwdXNoID0gYXJyLnB1c2gsCglzbGljZSA9IGFyci5zbGljZSwKCgkvLyBVc2UgYSBzdHJpcHBlZC1kb3duIGluZGV4T2YgYXMgaXQncyBmYXN0ZXIgdGhhbiBuYXRpdmUKCS8vIGh0dHBzOi8vanNwZXJmLmNvbS90aG9yLWluZGV4b2YtdnMtZm9yLzUKCWluZGV4T2YgPSBmdW5jdGlvbiggbGlzdCwgZWxlbSApIHsKCQl2YXIgaSA9IDAsCgkJCWxlbiA9IGxpc3QubGVuZ3RoOwoJCWZvciAoIDsgaSA8IGxlbjsgaSsrICkgewoJCQlpZiAoIGxpc3RbIGkgXSA9PT0gZWxlbSApIHsKCQkJCXJldHVybiBpOwoJCQl9CgkJfQoJCXJldHVybiAtMTsKCX0sCgoJYm9vbGVhbnMgPSAiY2hlY2tlZHxzZWxlY3RlZHxhc3luY3xhdXRvZm9jdXN8YXV0b3BsYXl8Y29udHJvbHN8ZGVmZXJ8ZGlzYWJsZWR8aGlkZGVufCIgKwoJCSJpc21hcHxsb29wfG11bHRpcGxlfG9wZW58cmVhZG9ubHl8cmVxdWlyZWR8c2NvcGVkIiwKCgkvLyBSZWd1bGFyIGV4cHJlc3Npb25zCgoJLy8gaHR0cDovL3d3dy53My5vcmcvVFIvY3NzMy1zZWxlY3RvcnMvI3doaXRlc3BhY2UKCXdoaXRlc3BhY2UgPSAiW1xceDIwXFx0XFxyXFxuXFxmXSIsCgoJLy8gaHR0cHM6Ly93d3cudzMub3JnL1RSL2Nzcy1zeW50YXgtMy8jaWRlbnQtdG9rZW4tZGlhZ3JhbQoJaWRlbnRpZmllciA9ICIoPzpcXFxcW1xcZGEtZkEtRl17MSw2fSIgKyB3aGl0ZXNwYWNlICsKCQkiP3xcXFxcW15cXHJcXG5cXGZdfFtcXHctXXxbXlwwLVxceDdmXSkrIiwKCgkvLyBBdHRyaWJ1dGUgc2VsZWN0b3JzOiBodHRwOi8vd3d3LnczLm9yZy9UUi9zZWxlY3RvcnMvI2F0dHJpYnV0ZS1zZWxlY3RvcnMKCWF0dHJpYnV0ZXMgPSAiXFxbIiArIHdoaXRlc3BhY2UgKyAiKigiICsgaWRlbnRpZmllciArICIpKD86IiArIHdoaXRlc3BhY2UgKwoKCQkvLyBPcGVyYXRvciAoY2FwdHVyZSAyKQoJCSIqKFsqXiR8IX5dPz0pIiArIHdoaXRlc3BhY2UgKwoKCQkvLyAiQXR0cmlidXRlIHZhbHVlcyBtdXN0IGJlIENTUyBpZGVudGlmaWVycyBbY2FwdHVyZSA1XQoJCS8vIG9yIHN0cmluZ3MgW2NhcHR1cmUgMyBvciBjYXB0dXJlIDRdIgoJCSIqKD86JygoPzpcXFxcLnxbXlxcXFwnXSkqKSd8XCIoKD86XFxcXC58W15cXFxcXCJdKSopXCJ8KCIgKyBpZGVudGlmaWVyICsgIikpfCkiICsKCQl3aGl0ZXNwYWNlICsgIipcXF0iLAoKCXBzZXVkb3MgPSAiOigiICsgaWRlbnRpZmllciArICIpKD86XFwoKCIgKwoKCQkvLyBUbyByZWR1Y2UgdGhlIG51bWJlciBvZiBzZWxlY3RvcnMgbmVlZGluZyB0b2tlbml6ZSBpbiB0aGUgcHJlRmlsdGVyLCBwcmVmZXIgYXJndW1lbnRzOgoJCS8vIDEuIHF1b3RlZCAoY2FwdHVyZSAzOyBjYXB0dXJlIDQgb3IgY2FwdHVyZSA1KQoJCSIoJygoPzpcXFxcLnxbXlxcXFwnXSkqKSd8XCIoKD86XFxcXC58W15cXFxcXCJdKSopXCIpfCIgKwoKCQkvLyAyLiBzaW1wbGUgKGNhcHR1cmUgNikKCQkiKCg/OlxcXFwufFteXFxcXCgpW1xcXV18IiArIGF0dHJpYnV0ZXMgKyAiKSopfCIgKwoKCQkvLyAzLiBhbnl0aGluZyBlbHNlIChjYXB0dXJlIDIpCgkJIi4qIiArCgkJIilcXCl8KSIsCgoJLy8gTGVhZGluZyBhbmQgbm9uLWVzY2FwZWQgdHJhaWxpbmcgd2hpdGVzcGFjZSwgY2FwdHVyaW5nIHNvbWUgbm9uLXdoaXRlc3BhY2UgY2hhcmFjdGVycyBwcmVjZWRpbmcgdGhlIGxhdHRlcgoJcndoaXRlc3BhY2UgPSBuZXcgUmVnRXhwKCB3aGl0ZXNwYWNlICsgIisiLCAiZyIgKSwKCXJ0cmltID0gbmV3IFJlZ0V4cCggIl4iICsgd2hpdGVzcGFjZSArICIrfCgoPzpefFteXFxcXF0pKD86XFxcXC4pKikiICsKCQl3aGl0ZXNwYWNlICsgIiskIiwgImciICksCgoJcmNvbW1hID0gbmV3IFJlZ0V4cCggIl4iICsgd2hpdGVzcGFjZSArICIqLCIgKyB3aGl0ZXNwYWNlICsgIioiICksCglyY29tYmluYXRvcnMgPSBuZXcgUmVnRXhwKCAiXiIgKyB3aGl0ZXNwYWNlICsgIiooWz4rfl18IiArIHdoaXRlc3BhY2UgKyAiKSIgKyB3aGl0ZXNwYWNlICsKCQkiKiIgKSwKCXJkZXNjZW5kID0gbmV3IFJlZ0V4cCggd2hpdGVzcGFjZSArICJ8PiIgKSwKCglycHNldWRvID0gbmV3IFJlZ0V4cCggcHNldWRvcyApLAoJcmlkZW50aWZpZXIgPSBuZXcgUmVnRXhwKCAiXiIgKyBpZGVudGlmaWVyICsgIiQiICksCgoJbWF0Y2hFeHByID0gewoJCSJJRCI6IG5ldyBSZWdFeHAoICJeIygiICsgaWRlbnRpZmllciArICIpIiApLAoJCSJDTEFTUyI6IG5ldyBSZWdFeHAoICJeXFwuKCIgKyBpZGVudGlmaWVyICsgIikiICksCgkJIlRBRyI6IG5ldyBSZWdFeHAoICJeKCIgKyBpZGVudGlmaWVyICsgInxbKl0pIiApLAoJCSJBVFRSIjogbmV3IFJlZ0V4cCggIl4iICsgYXR0cmlidXRlcyApLAoJCSJQU0VVRE8iOiBuZXcgUmVnRXhwKCAiXiIgKyBwc2V1ZG9zICksCgkJIkNISUxEIjogbmV3IFJlZ0V4cCggIl46KG9ubHl8Zmlyc3R8bGFzdHxudGh8bnRoLWxhc3QpLShjaGlsZHxvZi10eXBlKSg/OlxcKCIgKwoJCQl3aGl0ZXNwYWNlICsgIiooZXZlbnxvZGR8KChbKy1dfCkoXFxkKilufCkiICsgd2hpdGVzcGFjZSArICIqKD86KFsrLV18KSIgKwoJCQl3aGl0ZXNwYWNlICsgIiooXFxkKyl8KSkiICsgd2hpdGVzcGFjZSArICIqXFwpfCkiLCAiaSIgKSwKCQkiYm9vbCI6IG5ldyBSZWdFeHAoICJeKD86IiArIGJvb2xlYW5zICsgIikkIiwgImkiICksCgoJCS8vIEZvciB1c2UgaW4gbGlicmFyaWVzIGltcGxlbWVudGluZyAuaXMoKQoJCS8vIFdlIHVzZSB0aGlzIGZvciBQT1MgbWF0Y2hpbmcgaW4gYHNlbGVjdGAKCQkibmVlZHNDb250ZXh0IjogbmV3IFJlZ0V4cCggIl4iICsgd2hpdGVzcGFjZSArCgkJCSIqWz4rfl18OihldmVufG9kZHxlcXxndHxsdHxudGh8Zmlyc3R8bGFzdCkoPzpcXCgiICsgd2hpdGVzcGFjZSArCgkJCSIqKCg/Oi1cXGQpP1xcZCopIiArIHdoaXRlc3BhY2UgKyAiKlxcKXwpKD89W14tXXwkKSIsICJpIiApCgl9LAoKCXJodG1sID0gL0hUTUwkL2ksCglyaW5wdXRzID0gL14oPzppbnB1dHxzZWxlY3R8dGV4dGFyZWF8YnV0dG9uKSQvaSwKCXJoZWFkZXIgPSAvXmhcZCQvaSwKCglybmF0aXZlID0gL15bXntdK1x7XHMqXFtuYXRpdmUgXHcvLAoKCS8vIEVhc2lseS1wYXJzZWFibGUvcmV0cmlldmFibGUgSUQgb3IgVEFHIG9yIENMQVNTIHNlbGVjdG9ycwoJcnF1aWNrRXhwciA9IC9eKD86IyhbXHctXSspfChcdyspfFwuKFtcdy1dKykpJC8sCgoJcnNpYmxpbmcgPSAvWyt+XS8sCgoJLy8gQ1NTIGVzY2FwZXMKCS8vIGh0dHA6Ly93d3cudzMub3JnL1RSL0NTUzIxL3N5bmRhdGEuaHRtbCNlc2NhcGVkLWNoYXJhY3RlcnMKCXJ1bmVzY2FwZSA9IG5ldyBSZWdFeHAoICJcXFxcW1xcZGEtZkEtRl17MSw2fSIgKyB3aGl0ZXNwYWNlICsgIj98XFxcXChbXlxcclxcblxcZl0pIiwgImciICksCglmdW5lc2NhcGUgPSBmdW5jdGlvbiggZXNjYXBlLCBub25IZXggKSB7CgkJdmFyIGhpZ2ggPSAiMHgiICsgZXNjYXBlLnNsaWNlKCAxICkgLSAweDEwMDAwOwoKCQlyZXR1cm4gbm9uSGV4ID8KCgkJCS8vIFN0cmlwIHRoZSBiYWNrc2xhc2ggcHJlZml4IGZyb20gYSBub24taGV4IGVzY2FwZSBzZXF1ZW5jZQoJCQlub25IZXggOgoKCQkJLy8gUmVwbGFjZSBhIGhleGFkZWNpbWFsIGVzY2FwZSBzZXF1ZW5jZSB3aXRoIHRoZSBlbmNvZGVkIFVuaWNvZGUgY29kZSBwb2ludAoJCQkvLyBTdXBwb3J0OiBJRSA8PTExKwoJCQkvLyBGb3IgdmFsdWVzIG91dHNpZGUgdGhlIEJhc2ljIE11bHRpbGluZ3VhbCBQbGFuZSAoQk1QKSwgbWFudWFsbHkgY29uc3RydWN0IGEKCQkJLy8gc3Vycm9nYXRlIHBhaXIKCQkJaGlnaCA8IDAgPwoJCQkJU3RyaW5nLmZyb21DaGFyQ29kZSggaGlnaCArIDB4MTAwMDAgKSA6CgkJCQlTdHJpbmcuZnJvbUNoYXJDb2RlKCBoaWdoID4+IDEwIHwgMHhEODAwLCBoaWdoICYgMHgzRkYgfCAweERDMDAgKTsKCX0sCgoJLy8gQ1NTIHN0cmluZy9pZGVudGlmaWVyIHNlcmlhbGl6YXRpb24KCS8vIGh0dHBzOi8vZHJhZnRzLmNzc3dnLm9yZy9jc3NvbS8jY29tbW9uLXNlcmlhbGl6aW5nLWlkaW9tcwoJcmNzc2VzY2FwZSA9IC8oW1wwLVx4MWZceDdmXXxeLT9cZCl8Xi0kfFteXDAtXHgxZlx4N2YtXHVGRkZGXHctXS9nLAoJZmNzc2VzY2FwZSA9IGZ1bmN0aW9uKCBjaCwgYXNDb2RlUG9pbnQgKSB7CgkJaWYgKCBhc0NvZGVQb2ludCApIHsKCgkJCS8vIFUrMDAwMCBOVUxMIGJlY29tZXMgVStGRkZEIFJFUExBQ0VNRU5UIENIQVJBQ1RFUgoJCQlpZiAoIGNoID09PSAiXDAiICkgewoJCQkJcmV0dXJuICJcdUZGRkQiOwoJCQl9CgoJCQkvLyBDb250cm9sIGNoYXJhY3RlcnMgYW5kIChkZXBlbmRlbnQgdXBvbiBwb3NpdGlvbikgbnVtYmVycyBnZXQgZXNjYXBlZCBhcyBjb2RlIHBvaW50cwoJCQlyZXR1cm4gY2guc2xpY2UoIDAsIC0xICkgKyAiXFwiICsKCQkJCWNoLmNoYXJDb2RlQXQoIGNoLmxlbmd0aCAtIDEgKS50b1N0cmluZyggMTYgKSArICIgIjsKCQl9CgoJCS8vIE90aGVyIHBvdGVudGlhbGx5LXNwZWNpYWwgQVNDSUkgY2hhcmFjdGVycyBnZXQgYmFja3NsYXNoLWVzY2FwZWQKCQlyZXR1cm4gIlxcIiArIGNoOwoJfSwKCgkvLyBVc2VkIGZvciBpZnJhbWVzCgkvLyBTZWUgc2V0RG9jdW1lbnQoKQoJLy8gUmVtb3ZpbmcgdGhlIGZ1bmN0aW9uIHdyYXBwZXIgY2F1c2VzIGEgIlBlcm1pc3Npb24gRGVuaWVkIgoJLy8gZXJyb3IgaW4gSUUKCXVubG9hZEhhbmRsZXIgPSBmdW5jdGlvbigpIHsKCQlzZXREb2N1bWVudCgpOwoJfSwKCglpbkRpc2FibGVkRmllbGRzZXQgPSBhZGRDb21iaW5hdG9yKAoJCWZ1bmN0aW9uKCBlbGVtICkgewoJCQlyZXR1cm4gZWxlbS5kaXNhYmxlZCA9PT0gdHJ1ZSAmJiBlbGVtLm5vZGVOYW1lLnRvTG93ZXJDYXNlKCkgPT09ICJmaWVsZHNldCI7CgkJfSwKCQl7IGRpcjogInBhcmVudE5vZGUiLCBuZXh0OiAibGVnZW5kIiB9CgkpOwoKLy8gT3B0aW1pemUgZm9yIHB1c2guYXBwbHkoIF8sIE5vZGVMaXN0ICkKdHJ5IHsKCXB1c2guYXBwbHkoCgkJKCBhcnIgPSBzbGljZS5jYWxsKCBwcmVmZXJyZWREb2MuY2hpbGROb2RlcyApICksCgkJcHJlZmVycmVkRG9jLmNoaWxkTm9kZXMKCSk7CgoJLy8gU3VwcG9ydDogQW5kcm9pZDw0LjAKCS8vIERldGVjdCBzaWxlbnRseSBmYWlsaW5nIHB1c2guYXBwbHkKCS8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBuby11bnVzZWQtZXhwcmVzc2lvbnMKCWFyclsgcHJlZmVycmVkRG9jLmNoaWxkTm9kZXMubGVuZ3RoIF0ubm9kZVR5cGU7Cn0gY2F0Y2ggKCBlICkgewoJcHVzaCA9IHsgYXBwbHk6IGFyci5sZW5ndGggPwoKCQkvLyBMZXZlcmFnZSBzbGljZSBpZiBwb3NzaWJsZQoJCWZ1bmN0aW9uKCB0YXJnZXQsIGVscyApIHsKCQkJcHVzaE5hdGl2ZS5hcHBseSggdGFyZ2V0LCBzbGljZS5jYWxsKCBlbHMgKSApOwoJCX0gOgoKCQkvLyBTdXBwb3J0OiBJRTw5CgkJLy8gT3RoZXJ3aXNlIGFwcGVuZCBkaXJlY3RseQoJCWZ1bmN0aW9uKCB0YXJnZXQsIGVscyApIHsKCQkJdmFyIGogPSB0YXJnZXQubGVuZ3RoLAoJCQkJaSA9IDA7CgoJCQkvLyBDYW4ndCB0cnVzdCBOb2RlTGlzdC5sZW5ndGgKCQkJd2hpbGUgKCAoIHRhcmdldFsgaisrIF0gPSBlbHNbIGkrKyBdICkgKSB7fQoJCQl0YXJnZXQubGVuZ3RoID0gaiAtIDE7CgkJfQoJfTsKfQoKZnVuY3Rpb24gU2l6emxlKCBzZWxlY3RvciwgY29udGV4dCwgcmVzdWx0cywgc2VlZCApIHsKCXZhciBtLCBpLCBlbGVtLCBuaWQsIG1hdGNoLCBncm91cHMsIG5ld1NlbGVjdG9yLAoJCW5ld0NvbnRleHQgPSBjb250ZXh0ICYmIGNvbnRleHQub3duZXJEb2N1bWVudCwKCgkJLy8gbm9kZVR5cGUgZGVmYXVsdHMgdG8gOSwgc2luY2UgY29udGV4dCBkZWZhdWx0cyB0byBkb2N1bWVudAoJCW5vZGVUeXBlID0gY29udGV4dCA/IGNvbnRleHQubm9kZVR5cGUgOiA5OwoKCXJlc3VsdHMgPSByZXN1bHRzIHx8IFtdOwoKCS8vIFJldHVybiBlYXJseSBmcm9tIGNhbGxzIHdpdGggaW52YWxpZCBzZWxlY3RvciBvciBjb250ZXh0CglpZiAoIHR5cGVvZiBzZWxlY3RvciAhPT0gInN0cmluZyIgfHwgIXNlbGVjdG9yIHx8CgkJbm9kZVR5cGUgIT09IDEgJiYgbm9kZVR5cGUgIT09IDkgJiYgbm9kZVR5cGUgIT09IDExICkgewoKCQlyZXR1cm4gcmVzdWx0czsKCX0KCgkvLyBUcnkgdG8gc2hvcnRjdXQgZmluZCBvcGVyYXRpb25zIChhcyBvcHBvc2VkIHRvIGZpbHRlcnMpIGluIEhUTUwgZG9jdW1lbnRzCglpZiAoICFzZWVkICkgewoJCXNldERvY3VtZW50KCBjb250ZXh0ICk7CgkJY29udGV4dCA9IGNvbnRleHQgfHwgZG9jdW1lbnQ7CgoJCWlmICggZG9jdW1lbnRJc0hUTUwgKSB7CgoJCQkvLyBJZiB0aGUgc2VsZWN0b3IgaXMgc3VmZmljaWVudGx5IHNpbXBsZSwgdHJ5IHVzaW5nIGEgImdldCpCeSoiIERPTSBtZXRob2QKCQkJLy8gKGV4Y2VwdGluZyBEb2N1bWVudEZyYWdtZW50IGNvbnRleHQsIHdoZXJlIHRoZSBtZXRob2RzIGRvbid0IGV4aXN0KQoJCQlpZiAoIG5vZGVUeXBlICE9PSAxMSAmJiAoIG1hdGNoID0gcnF1aWNrRXhwci5leGVjKCBzZWxlY3RvciApICkgKSB7CgoJCQkJLy8gSUQgc2VsZWN0b3IKCQkJCWlmICggKCBtID0gbWF0Y2hbIDEgXSApICkgewoKCQkJCQkvLyBEb2N1bWVudCBjb250ZXh0CgkJCQkJaWYgKCBub2RlVHlwZSA9PT0gOSApIHsKCQkJCQkJaWYgKCAoIGVsZW0gPSBjb250ZXh0LmdldEVsZW1lbnRCeUlkKCBtICkgKSApIHsKCgkJCQkJCQkvLyBTdXBwb3J0OiBJRSwgT3BlcmEsIFdlYmtpdAoJCQkJCQkJLy8gVE9ETzogaWRlbnRpZnkgdmVyc2lvbnMKCQkJCQkJCS8vIGdldEVsZW1lbnRCeUlkIGNhbiBtYXRjaCBlbGVtZW50cyBieSBuYW1lIGluc3RlYWQgb2YgSUQKCQkJCQkJCWlmICggZWxlbS5pZCA9PT0gbSApIHsKCQkJCQkJCQlyZXN1bHRzLnB1c2goIGVsZW0gKTsKCQkJCQkJCQlyZXR1cm4gcmVzdWx0czsKCQkJCQkJCX0KCQkJCQkJfSBlbHNlIHsKCQkJCQkJCXJldHVybiByZXN1bHRzOwoJCQkJCQl9CgoJCQkJCS8vIEVsZW1lbnQgY29udGV4dAoJCQkJCX0gZWxzZSB7CgoJCQkJCQkvLyBTdXBwb3J0OiBJRSwgT3BlcmEsIFdlYmtpdAoJCQkJCQkvLyBUT0RPOiBpZGVudGlmeSB2ZXJzaW9ucwoJCQkJCQkvLyBnZXRFbGVtZW50QnlJZCBjYW4gbWF0Y2ggZWxlbWVudHMgYnkgbmFtZSBpbnN0ZWFkIG9mIElECgkJCQkJCWlmICggbmV3Q29udGV4dCAmJiAoIGVsZW0gPSBuZXdDb250ZXh0LmdldEVsZW1lbnRCeUlkKCBtICkgKSAmJgoJCQkJCQkJY29udGFpbnMoIGNvbnRleHQsIGVsZW0gKSAmJgoJCQkJCQkJZWxlbS5pZCA9PT0gbSApIHsKCgkJCQkJCQlyZXN1bHRzLnB1c2goIGVsZW0gKTsKCQkJCQkJCXJldHVybiByZXN1bHRzOwoJCQkJCQl9CgkJCQkJfQoKCQkJCS8vIFR5cGUgc2VsZWN0b3IKCQkJCX0gZWxzZSBpZiAoIG1hdGNoWyAyIF0gKSB7CgkJCQkJcHVzaC5hcHBseSggcmVzdWx0cywgY29udGV4dC5nZXRFbGVtZW50c0J5VGFnTmFtZSggc2VsZWN0b3IgKSApOwoJCQkJCXJldHVybiByZXN1bHRzOwoKCQkJCS8vIENsYXNzIHNlbGVjdG9yCgkJCQl9IGVsc2UgaWYgKCAoIG0gPSBtYXRjaFsgMyBdICkgJiYgc3VwcG9ydC5nZXRFbGVtZW50c0J5Q2xhc3NOYW1lICYmCgkJCQkJY29udGV4dC5nZXRFbGVtZW50c0J5Q2xhc3NOYW1lICkgewoKCQkJCQlwdXNoLmFwcGx5KCByZXN1bHRzLCBjb250ZXh0LmdldEVsZW1lbnRzQnlDbGFzc05hbWUoIG0gKSApOwoJCQkJCXJldHVybiByZXN1bHRzOwoJCQkJfQoJCQl9CgoJCQkvLyBUYWtlIGFkdmFudGFnZSBvZiBxdWVyeVNlbGVjdG9yQWxsCgkJCWlmICggc3VwcG9ydC5xc2EgJiYKCQkJCSFub25uYXRpdmVTZWxlY3RvckNhY2hlWyBzZWxlY3RvciArICIgIiBdICYmCgkJCQkoICFyYnVnZ3lRU0EgfHwgIXJidWdneVFTQS50ZXN0KCBzZWxlY3RvciApICkgJiYKCgkJCQkvLyBTdXBwb3J0OiBJRSA4IG9ubHkKCQkJCS8vIEV4Y2x1ZGUgb2JqZWN0IGVsZW1lbnRzCgkJCQkoIG5vZGVUeXBlICE9PSAxIHx8IGNvbnRleHQubm9kZU5hbWUudG9Mb3dlckNhc2UoKSAhPT0gIm9iamVjdCIgKSApIHsKCgkJCQluZXdTZWxlY3RvciA9IHNlbGVjdG9yOwoJCQkJbmV3Q29udGV4dCA9IGNvbnRleHQ7CgoJCQkJLy8gcVNBIGNvbnNpZGVycyBlbGVtZW50cyBvdXRzaWRlIGEgc2NvcGluZyByb290IHdoZW4gZXZhbHVhdGluZyBjaGlsZCBvcgoJCQkJLy8gZGVzY2VuZGFudCBjb21iaW5hdG9ycywgd2hpY2ggaXMgbm90IHdoYXQgd2Ugd2FudC4KCQkJCS8vIEluIHN1Y2ggY2FzZXMsIHdlIHdvcmsgYXJvdW5kIHRoZSBiZWhhdmlvciBieSBwcmVmaXhpbmcgZXZlcnkgc2VsZWN0b3IgaW4gdGhlCgkJCQkvLyBsaXN0IHdpdGggYW4gSUQgc2VsZWN0b3IgcmVmZXJlbmNpbmcgdGhlIHNjb3BlIGNvbnRleHQuCgkJCQkvLyBUaGUgdGVjaG5pcXVlIGhhcyB0byBiZSB1c2VkIGFzIHdlbGwgd2hlbiBhIGxlYWRpbmcgY29tYmluYXRvciBpcyB1c2VkCgkJCQkvLyBhcyBzdWNoIHNlbGVjdG9ycyBhcmUgbm90IHJlY29nbml6ZWQgYnkgcXVlcnlTZWxlY3RvckFsbC4KCQkJCS8vIFRoYW5rcyB0byBBbmRyZXcgRHVwb250IGZvciB0aGlzIHRlY2huaXF1ZS4KCQkJCWlmICggbm9kZVR5cGUgPT09IDEgJiYKCQkJCQkoIHJkZXNjZW5kLnRlc3QoIHNlbGVjdG9yICkgfHwgcmNvbWJpbmF0b3JzLnRlc3QoIHNlbGVjdG9yICkgKSApIHsKCgkJCQkJLy8gRXhwYW5kIGNvbnRleHQgZm9yIHNpYmxpbmcgc2VsZWN0b3JzCgkJCQkJbmV3Q29udGV4dCA9IHJzaWJsaW5nLnRlc3QoIHNlbGVjdG9yICkgJiYgdGVzdENvbnRleHQoIGNvbnRleHQucGFyZW50Tm9kZSApIHx8CgkJCQkJCWNvbnRleHQ7CgoJCQkJCS8vIFdlIGNhbiB1c2UgOnNjb3BlIGluc3RlYWQgb2YgdGhlIElEIGhhY2sgaWYgdGhlIGJyb3dzZXIKCQkJCQkvLyBzdXBwb3J0cyBpdCAmIGlmIHdlJ3JlIG5vdCBjaGFuZ2luZyB0aGUgY29udGV4dC4KCQkJCQlpZiAoIG5ld0NvbnRleHQgIT09IGNvbnRleHQgfHwgIXN1cHBvcnQuc2NvcGUgKSB7CgoJCQkJCQkvLyBDYXB0dXJlIHRoZSBjb250ZXh0IElELCBzZXR0aW5nIGl0IGZpcnN0IGlmIG5lY2Vzc2FyeQoJCQkJCQlpZiAoICggbmlkID0gY29udGV4dC5nZXRBdHRyaWJ1dGUoICJpZCIgKSApICkgewoJCQkJCQkJbmlkID0gbmlkLnJlcGxhY2UoIHJjc3Nlc2NhcGUsIGZjc3Nlc2NhcGUgKTsKCQkJCQkJfSBlbHNlIHsKCQkJCQkJCWNvbnRleHQuc2V0QXR0cmlidXRlKCAiaWQiLCAoIG5pZCA9IGV4cGFuZG8gKSApOwoJCQkJCQl9CgkJCQkJfQoKCQkJCQkvLyBQcmVmaXggZXZlcnkgc2VsZWN0b3IgaW4gdGhlIGxpc3QKCQkJCQlncm91cHMgPSB0b2tlbml6ZSggc2VsZWN0b3IgKTsKCQkJCQlpID0gZ3JvdXBzLmxlbmd0aDsKCQkJCQl3aGlsZSAoIGktLSApIHsKCQkJCQkJZ3JvdXBzWyBpIF0gPSAoIG5pZCA/ICIjIiArIG5pZCA6ICI6c2NvcGUiICkgKyAiICIgKwoJCQkJCQkJdG9TZWxlY3RvciggZ3JvdXBzWyBpIF0gKTsKCQkJCQl9CgkJCQkJbmV3U2VsZWN0b3IgPSBncm91cHMuam9pbiggIiwiICk7CgkJCQl9CgoJCQkJdHJ5IHsKCgkJCQkJLy8gYHFTQWAgbWF5IG5vdCB0aHJvdyBmb3IgdW5yZWNvZ25pemVkIHBhcnRzIHVzaW5nIGZvcmdpdmluZyBwYXJzaW5nOgoJCQkJCS8vIGh0dHBzOi8vZHJhZnRzLmNzc3dnLm9yZy9zZWxlY3RvcnMvI2ZvcmdpdmluZy1zZWxlY3RvcgoJCQkJCS8vIGxpa2UgdGhlIGA6aGFzKClgIHBzZXVkby1jbGFzczoKCQkJCQkvLyBodHRwczovL2RyYWZ0cy5jc3N3Zy5vcmcvc2VsZWN0b3JzLyNyZWxhdGlvbmFsCgkJCQkJLy8gYENTUy5zdXBwb3J0c2AgaXMgc3RpbGwgZXhwZWN0ZWQgdG8gcmV0dXJuIGBmYWxzZWAgdGhlbjoKCQkJCQkvLyBodHRwczovL2RyYWZ0cy5jc3N3Zy5vcmcvY3NzLWNvbmRpdGlvbmFsLTQvI3R5cGVkZWYtc3VwcG9ydHMtc2VsZWN0b3ItZm4KCQkJCQkvLyBodHRwczovL2RyYWZ0cy5jc3N3Zy5vcmcvY3NzLWNvbmRpdGlvbmFsLTQvI2Rmbi1zdXBwb3J0LXNlbGVjdG9yCgkJCQkJaWYgKCBzdXBwb3J0LmNzc1N1cHBvcnRzU2VsZWN0b3IgJiYKCgkJCQkJCS8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBuby11bmRlZgoJCQkJCQkhQ1NTLnN1cHBvcnRzKCAic2VsZWN0b3IoIiArIG5ld1NlbGVjdG9yICsgIikiICkgKSB7CgoJCQkJCQkvLyBTdXBwb3J0OiBJRSAxMSsKCQkJCQkJLy8gVGhyb3cgdG8gZ2V0IHRvIHRoZSBzYW1lIGNvZGUgcGF0aCBhcyBhbiBlcnJvciBkaXJlY3RseSBpbiBxU0EuCgkJCQkJCS8vIE5vdGU6IG9uY2Ugd2Ugb25seSBzdXBwb3J0IGJyb3dzZXIgc3VwcG9ydGluZwoJCQkJCQkvLyBgQ1NTLnN1cHBvcnRzKCdzZWxlY3RvciguLi4pJylgLCB3ZSBjYW4gbW9zdCBsaWtlbHkgZHJvcAoJCQkJCQkvLyB0aGUgYHRyeS1jYXRjaGAuIElFIGRvZXNuJ3QgaW1wbGVtZW50IHRoZSBBUEkuCgkJCQkJCXRocm93IG5ldyBFcnJvcigpOwoJCQkJCX0KCgkJCQkJcHVzaC5hcHBseSggcmVzdWx0cywKCQkJCQkJbmV3Q29udGV4dC5xdWVyeVNlbGVjdG9yQWxsKCBuZXdTZWxlY3RvciApCgkJCQkJKTsKCQkJCQlyZXR1cm4gcmVzdWx0czsKCQkJCX0gY2F0Y2ggKCBxc2FFcnJvciApIHsKCQkJCQlub25uYXRpdmVTZWxlY3RvckNhY2hlKCBzZWxlY3RvciwgdHJ1ZSApOwoJCQkJfSBmaW5hbGx5IHsKCQkJCQlpZiAoIG5pZCA9PT0gZXhwYW5kbyApIHsKCQkJCQkJY29udGV4dC5yZW1vdmVBdHRyaWJ1dGUoICJpZCIgKTsKCQkJCQl9CgkJCQl9CgkJCX0KCQl9Cgl9CgoJLy8gQWxsIG90aGVycwoJcmV0dXJuIHNlbGVjdCggc2VsZWN0b3IucmVwbGFjZSggcnRyaW0sICIkMSIgKSwgY29udGV4dCwgcmVzdWx0cywgc2VlZCApOwp9CgovKioKICogQ3JlYXRlIGtleS12YWx1ZSBjYWNoZXMgb2YgbGltaXRlZCBzaXplCiAqIEByZXR1cm5zIHtmdW5jdGlvbihzdHJpbmcsIG9iamVjdCl9IFJldHVybnMgdGhlIE9iamVjdCBkYXRhIGFmdGVyIHN0b3JpbmcgaXQgb24gaXRzZWxmIHdpdGgKICoJcHJvcGVydHkgbmFtZSB0aGUgKHNwYWNlLXN1ZmZpeGVkKSBzdHJpbmcgYW5kIChpZiB0aGUgY2FjaGUgaXMgbGFyZ2VyIHRoYW4gRXhwci5jYWNoZUxlbmd0aCkKICoJZGVsZXRpbmcgdGhlIG9sZGVzdCBlbnRyeQogKi8KZnVuY3Rpb24gY3JlYXRlQ2FjaGUoKSB7Cgl2YXIga2V5cyA9IFtdOwoKCWZ1bmN0aW9uIGNhY2hlKCBrZXksIHZhbHVlICkgewoKCQkvLyBVc2UgKGtleSArICIgIikgdG8gYXZvaWQgY29sbGlzaW9uIHdpdGggbmF0aXZlIHByb3RvdHlwZSBwcm9wZXJ0aWVzIChzZWUgSXNzdWUgIzE1NykKCQlpZiAoIGtleXMucHVzaCgga2V5ICsgIiAiICkgPiBFeHByLmNhY2hlTGVuZ3RoICkgewoKCQkJLy8gT25seSBrZWVwIHRoZSBtb3N0IHJlY2VudCBlbnRyaWVzCgkJCWRlbGV0ZSBjYWNoZVsga2V5cy5zaGlmdCgpIF07CgkJfQoJCXJldHVybiAoIGNhY2hlWyBrZXkgKyAiICIgXSA9IHZhbHVlICk7Cgl9CglyZXR1cm4gY2FjaGU7Cn0KCi8qKgogKiBNYXJrIGEgZnVuY3Rpb24gZm9yIHNwZWNpYWwgdXNlIGJ5IFNpenpsZQogKiBAcGFyYW0ge0Z1bmN0aW9ufSBmbiBUaGUgZnVuY3Rpb24gdG8gbWFyawogKi8KZnVuY3Rpb24gbWFya0Z1bmN0aW9uKCBmbiApIHsKCWZuWyBleHBhbmRvIF0gPSB0cnVlOwoJcmV0dXJuIGZuOwp9CgovKioKICogU3VwcG9ydCB0ZXN0aW5nIHVzaW5nIGFuIGVsZW1lbnQKICogQHBhcmFtIHtGdW5jdGlvbn0gZm4gUGFzc2VkIHRoZSBjcmVhdGVkIGVsZW1lbnQgYW5kIHJldHVybnMgYSBib29sZWFuIHJlc3VsdAogKi8KZnVuY3Rpb24gYXNzZXJ0KCBmbiApIHsKCXZhciBlbCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoICJmaWVsZHNldCIgKTsKCgl0cnkgewoJCXJldHVybiAhIWZuKCBlbCApOwoJfSBjYXRjaCAoIGUgKSB7CgkJcmV0dXJuIGZhbHNlOwoJfSBmaW5hbGx5IHsKCgkJLy8gUmVtb3ZlIGZyb20gaXRzIHBhcmVudCBieSBkZWZhdWx0CgkJaWYgKCBlbC5wYXJlbnROb2RlICkgewoJCQllbC5wYXJlbnROb2RlLnJlbW92ZUNoaWxkKCBlbCApOwoJCX0KCgkJLy8gcmVsZWFzZSBtZW1vcnkgaW4gSUUKCQllbCA9IG51bGw7Cgl9Cn0KCi8qKgogKiBBZGRzIHRoZSBzYW1lIGhhbmRsZXIgZm9yIGFsbCBvZiB0aGUgc3BlY2lmaWVkIGF0dHJzCiAqIEBwYXJhbSB7U3RyaW5nfSBhdHRycyBQaXBlLXNlcGFyYXRlZCBsaXN0IG9mIGF0dHJpYnV0ZXMKICogQHBhcmFtIHtGdW5jdGlvbn0gaGFuZGxlciBUaGUgbWV0aG9kIHRoYXQgd2lsbCBiZSBhcHBsaWVkCiAqLwpmdW5jdGlvbiBhZGRIYW5kbGUoIGF0dHJzLCBoYW5kbGVyICkgewoJdmFyIGFyciA9IGF0dHJzLnNwbGl0KCAifCIgKSwKCQlpID0gYXJyLmxlbmd0aDsKCgl3aGlsZSAoIGktLSApIHsKCQlFeHByLmF0dHJIYW5kbGVbIGFyclsgaSBdIF0gPSBoYW5kbGVyOwoJfQp9CgovKioKICogQ2hlY2tzIGRvY3VtZW50IG9yZGVyIG9mIHR3byBzaWJsaW5ncwogKiBAcGFyYW0ge0VsZW1lbnR9IGEKICogQHBhcmFtIHtFbGVtZW50fSBiCiAqIEByZXR1cm5zIHtOdW1iZXJ9IFJldHVybnMgbGVzcyB0aGFuIDAgaWYgYSBwcmVjZWRlcyBiLCBncmVhdGVyIHRoYW4gMCBpZiBhIGZvbGxvd3MgYgogKi8KZnVuY3Rpb24gc2libGluZ0NoZWNrKCBhLCBiICkgewoJdmFyIGN1ciA9IGIgJiYgYSwKCQlkaWZmID0gY3VyICYmIGEubm9kZVR5cGUgPT09IDEgJiYgYi5ub2RlVHlwZSA9PT0gMSAmJgoJCQlhLnNvdXJjZUluZGV4IC0gYi5zb3VyY2VJbmRleDsKCgkvLyBVc2UgSUUgc291cmNlSW5kZXggaWYgYXZhaWxhYmxlIG9uIGJvdGggbm9kZXMKCWlmICggZGlmZiApIHsKCQlyZXR1cm4gZGlmZjsKCX0KCgkvLyBDaGVjayBpZiBiIGZvbGxvd3MgYQoJaWYgKCBjdXIgKSB7CgkJd2hpbGUgKCAoIGN1ciA9IGN1ci5uZXh0U2libGluZyApICkgewoJCQlpZiAoIGN1ciA9PT0gYiApIHsKCQkJCXJldHVybiAtMTsKCQkJfQoJCX0KCX0KCglyZXR1cm4gYSA/IDEgOiAtMTsKfQoKLyoqCiAqIFJldHVybnMgYSBmdW5jdGlvbiB0byB1c2UgaW4gcHNldWRvcyBmb3IgaW5wdXQgdHlwZXMKICogQHBhcmFtIHtTdHJpbmd9IHR5cGUKICovCmZ1bmN0aW9uIGNyZWF0ZUlucHV0UHNldWRvKCB0eXBlICkgewoJcmV0dXJuIGZ1bmN0aW9uKCBlbGVtICkgewoJCXZhciBuYW1lID0gZWxlbS5ub2RlTmFtZS50b0xvd2VyQ2FzZSgpOwoJCXJldHVybiBuYW1lID09PSAiaW5wdXQiICYmIGVsZW0udHlwZSA9PT0gdHlwZTsKCX07Cn0KCi8qKgogKiBSZXR1cm5zIGEgZnVuY3Rpb24gdG8gdXNlIGluIHBzZXVkb3MgZm9yIGJ1dHRvbnMKICogQHBhcmFtIHtTdHJpbmd9IHR5cGUKICovCmZ1bmN0aW9uIGNyZWF0ZUJ1dHRvblBzZXVkbyggdHlwZSApIHsKCXJldHVybiBmdW5jdGlvbiggZWxlbSApIHsKCQl2YXIgbmFtZSA9IGVsZW0ubm9kZU5hbWUudG9Mb3dlckNhc2UoKTsKCQlyZXR1cm4gKCBuYW1lID09PSAiaW5wdXQiIHx8IG5hbWUgPT09ICJidXR0b24iICkgJiYgZWxlbS50eXBlID09PSB0eXBlOwoJfTsKfQoKLyoqCiAqIFJldHVybnMgYSBmdW5jdGlvbiB0byB1c2UgaW4gcHNldWRvcyBmb3IgOmVuYWJsZWQvOmRpc2FibGVkCiAqIEBwYXJhbSB7Qm9vbGVhbn0gZGlzYWJsZWQgdHJ1ZSBmb3IgOmRpc2FibGVkOyBmYWxzZSBmb3IgOmVuYWJsZWQKICovCmZ1bmN0aW9uIGNyZWF0ZURpc2FibGVkUHNldWRvKCBkaXNhYmxlZCApIHsKCgkvLyBLbm93biA6ZGlzYWJsZWQgZmFsc2UgcG9zaXRpdmVzOiBmaWVsZHNldFtkaXNhYmxlZF0gPiBsZWdlbmQ6bnRoLW9mLXR5cGUobisyKSA6Y2FuLWRpc2FibGUKCXJldHVybiBmdW5jdGlvbiggZWxlbSApIHsKCgkJLy8gT25seSBjZXJ0YWluIGVsZW1lbnRzIGNhbiBtYXRjaCA6ZW5hYmxlZCBvciA6ZGlzYWJsZWQKCQkvLyBodHRwczovL2h0bWwuc3BlYy53aGF0d2cub3JnL211bHRpcGFnZS9zY3JpcHRpbmcuaHRtbCNzZWxlY3Rvci1lbmFibGVkCgkJLy8gaHR0cHM6Ly9odG1sLnNwZWMud2hhdHdnLm9yZy9tdWx0aXBhZ2Uvc2NyaXB0aW5nLmh0bWwjc2VsZWN0b3ItZGlzYWJsZWQKCQlpZiAoICJmb3JtIiBpbiBlbGVtICkgewoKCQkJLy8gQ2hlY2sgZm9yIGluaGVyaXRlZCBkaXNhYmxlZG5lc3Mgb24gcmVsZXZhbnQgbm9uLWRpc2FibGVkIGVsZW1lbnRzOgoJCQkvLyAqIGxpc3RlZCBmb3JtLWFzc29jaWF0ZWQgZWxlbWVudHMgaW4gYSBkaXNhYmxlZCBmaWVsZHNldAoJCQkvLyAgIGh0dHBzOi8vaHRtbC5zcGVjLndoYXR3Zy5vcmcvbXVsdGlwYWdlL2Zvcm1zLmh0bWwjY2F0ZWdvcnktbGlzdGVkCgkJCS8vICAgaHR0cHM6Ly9odG1sLnNwZWMud2hhdHdnLm9yZy9tdWx0aXBhZ2UvZm9ybXMuaHRtbCNjb25jZXB0LWZlLWRpc2FibGVkCgkJCS8vICogb3B0aW9uIGVsZW1lbnRzIGluIGEgZGlzYWJsZWQgb3B0Z3JvdXAKCQkJLy8gICBodHRwczovL2h0bWwuc3BlYy53aGF0d2cub3JnL211bHRpcGFnZS9mb3Jtcy5odG1sI2NvbmNlcHQtb3B0aW9uLWRpc2FibGVkCgkJCS8vIEFsbCBzdWNoIGVsZW1lbnRzIGhhdmUgYSAiZm9ybSIgcHJvcGVydHkuCgkJCWlmICggZWxlbS5wYXJlbnROb2RlICYmIGVsZW0uZGlzYWJsZWQgPT09IGZhbHNlICkgewoKCQkJCS8vIE9wdGlvbiBlbGVtZW50cyBkZWZlciB0byBhIHBhcmVudCBvcHRncm91cCBpZiBwcmVzZW50CgkJCQlpZiAoICJsYWJlbCIgaW4gZWxlbSApIHsKCQkJCQlpZiAoICJsYWJlbCIgaW4gZWxlbS5wYXJlbnROb2RlICkgewoJCQkJCQlyZXR1cm4gZWxlbS5wYXJlbnROb2RlLmRpc2FibGVkID09PSBkaXNhYmxlZDsKCQkJCQl9IGVsc2UgewoJCQkJCQlyZXR1cm4gZWxlbS5kaXNhYmxlZCA9PT0gZGlzYWJsZWQ7CgkJCQkJfQoJCQkJfQoKCQkJCS8vIFN1cHBvcnQ6IElFIDYgLSAxMQoJCQkJLy8gVXNlIHRoZSBpc0Rpc2FibGVkIHNob3J0Y3V0IHByb3BlcnR5IHRvIGNoZWNrIGZvciBkaXNhYmxlZCBmaWVsZHNldCBhbmNlc3RvcnMKCQkJCXJldHVybiBlbGVtLmlzRGlzYWJsZWQgPT09IGRpc2FibGVkIHx8CgoJCQkJCS8vIFdoZXJlIHRoZXJlIGlzIG5vIGlzRGlzYWJsZWQsIGNoZWNrIG1hbnVhbGx5CgkJCQkJLyoganNoaW50IC1XMDE4ICovCgkJCQkJZWxlbS5pc0Rpc2FibGVkICE9PSAhZGlzYWJsZWQgJiYKCQkJCQlpbkRpc2FibGVkRmllbGRzZXQoIGVsZW0gKSA9PT0gZGlzYWJsZWQ7CgkJCX0KCgkJCXJldHVybiBlbGVtLmRpc2FibGVkID09PSBkaXNhYmxlZDsKCgkJLy8gVHJ5IHRvIHdpbm5vdyBvdXQgZWxlbWVudHMgdGhhdCBjYW4ndCBiZSBkaXNhYmxlZCBiZWZvcmUgdHJ1c3RpbmcgdGhlIGRpc2FibGVkIHByb3BlcnR5LgoJCS8vIFNvbWUgdmljdGltcyBnZXQgY2F1Z2h0IGluIG91ciBuZXQgKGxhYmVsLCBsZWdlbmQsIG1lbnUsIHRyYWNrKSwgYnV0IGl0IHNob3VsZG4ndAoJCS8vIGV2ZW4gZXhpc3Qgb24gdGhlbSwgbGV0IGFsb25lIGhhdmUgYSBib29sZWFuIHZhbHVlLgoJCX0gZWxzZSBpZiAoICJsYWJlbCIgaW4gZWxlbSApIHsKCQkJcmV0dXJuIGVsZW0uZGlzYWJsZWQgPT09IGRpc2FibGVkOwoJCX0KCgkJLy8gUmVtYWluaW5nIGVsZW1lbnRzIGFyZSBuZWl0aGVyIDplbmFibGVkIG5vciA6ZGlzYWJsZWQKCQlyZXR1cm4gZmFsc2U7Cgl9Owp9CgovKioKICogUmV0dXJucyBhIGZ1bmN0aW9uIHRvIHVzZSBpbiBwc2V1ZG9zIGZvciBwb3NpdGlvbmFscwogKiBAcGFyYW0ge0Z1bmN0aW9ufSBmbgogKi8KZnVuY3Rpb24gY3JlYXRlUG9zaXRpb25hbFBzZXVkbyggZm4gKSB7CglyZXR1cm4gbWFya0Z1bmN0aW9uKCBmdW5jdGlvbiggYXJndW1lbnQgKSB7CgkJYXJndW1lbnQgPSArYXJndW1lbnQ7CgkJcmV0dXJuIG1hcmtGdW5jdGlvbiggZnVuY3Rpb24oIHNlZWQsIG1hdGNoZXMgKSB7CgkJCXZhciBqLAoJCQkJbWF0Y2hJbmRleGVzID0gZm4oIFtdLCBzZWVkLmxlbmd0aCwgYXJndW1lbnQgKSwKCQkJCWkgPSBtYXRjaEluZGV4ZXMubGVuZ3RoOwoKCQkJLy8gTWF0Y2ggZWxlbWVudHMgZm91bmQgYXQgdGhlIHNwZWNpZmllZCBpbmRleGVzCgkJCXdoaWxlICggaS0tICkgewoJCQkJaWYgKCBzZWVkWyAoIGogPSBtYXRjaEluZGV4ZXNbIGkgXSApIF0gKSB7CgkJCQkJc2VlZFsgaiBdID0gISggbWF0Y2hlc1sgaiBdID0gc2VlZFsgaiBdICk7CgkJCQl9CgkJCX0KCQl9ICk7Cgl9ICk7Cn0KCi8qKgogKiBDaGVja3MgYSBub2RlIGZvciB2YWxpZGl0eSBhcyBhIFNpenpsZSBjb250ZXh0CiAqIEBwYXJhbSB7RWxlbWVudHxPYmplY3Q9fSBjb250ZXh0CiAqIEByZXR1cm5zIHtFbGVtZW50fE9iamVjdHxCb29sZWFufSBUaGUgaW5wdXQgbm9kZSBpZiBhY2NlcHRhYmxlLCBvdGhlcndpc2UgYSBmYWxzeSB2YWx1ZQogKi8KZnVuY3Rpb24gdGVzdENvbnRleHQoIGNvbnRleHQgKSB7CglyZXR1cm4gY29udGV4dCAmJiB0eXBlb2YgY29udGV4dC5nZXRFbGVtZW50c0J5VGFnTmFtZSAhPT0gInVuZGVmaW5lZCIgJiYgY29udGV4dDsKfQoKLy8gRXhwb3NlIHN1cHBvcnQgdmFycyBmb3IgY29udmVuaWVuY2UKc3VwcG9ydCA9IFNpenpsZS5zdXBwb3J0ID0ge307CgovKioKICogRGV0ZWN0cyBYTUwgbm9kZXMKICogQHBhcmFtIHtFbGVtZW50fE9iamVjdH0gZWxlbSBBbiBlbGVtZW50IG9yIGEgZG9jdW1lbnQKICogQHJldHVybnMge0Jvb2xlYW59IFRydWUgaWZmIGVsZW0gaXMgYSBub24tSFRNTCBYTUwgbm9kZQogKi8KaXNYTUwgPSBTaXp6bGUuaXNYTUwgPSBmdW5jdGlvbiggZWxlbSApIHsKCXZhciBuYW1lc3BhY2UgPSBlbGVtICYmIGVsZW0ubmFtZXNwYWNlVVJJLAoJCWRvY0VsZW0gPSBlbGVtICYmICggZWxlbS5vd25lckRvY3VtZW50IHx8IGVsZW0gKS5kb2N1bWVudEVsZW1lbnQ7CgoJLy8gU3VwcG9ydDogSUUgPD04CgkvLyBBc3N1bWUgSFRNTCB3aGVuIGRvY3VtZW50RWxlbWVudCBkb2Vzbid0IHlldCBleGlzdCwgc3VjaCBhcyBpbnNpZGUgbG9hZGluZyBpZnJhbWVzCgkvLyBodHRwczovL2J1Z3MuanF1ZXJ5LmNvbS90aWNrZXQvNDgzMwoJcmV0dXJuICFyaHRtbC50ZXN0KCBuYW1lc3BhY2UgfHwgZG9jRWxlbSAmJiBkb2NFbGVtLm5vZGVOYW1lIHx8ICJIVE1MIiApOwp9OwoKLyoqCiAqIFNldHMgZG9jdW1lbnQtcmVsYXRlZCB2YXJpYWJsZXMgb25jZSBiYXNlZCBvbiB0aGUgY3VycmVudCBkb2N1bWVudAogKiBAcGFyYW0ge0VsZW1lbnR8T2JqZWN0fSBbZG9jXSBBbiBlbGVtZW50IG9yIGRvY3VtZW50IG9iamVjdCB0byB1c2UgdG8gc2V0IHRoZSBkb2N1bWVudAogKiBAcmV0dXJucyB7T2JqZWN0fSBSZXR1cm5zIHRoZSBjdXJyZW50IGRvY3VtZW50CiAqLwpzZXREb2N1bWVudCA9IFNpenpsZS5zZXREb2N1bWVudCA9IGZ1bmN0aW9uKCBub2RlICkgewoJdmFyIGhhc0NvbXBhcmUsIHN1YldpbmRvdywKCQlkb2MgPSBub2RlID8gbm9kZS5vd25lckRvY3VtZW50IHx8IG5vZGUgOiBwcmVmZXJyZWREb2M7CgoJLy8gUmV0dXJuIGVhcmx5IGlmIGRvYyBpcyBpbnZhbGlkIG9yIGFscmVhZHkgc2VsZWN0ZWQKCS8vIFN1cHBvcnQ6IElFIDExKywgRWRnZSAxNyAtIDE4KwoJLy8gSUUvRWRnZSBzb21ldGltZXMgdGhyb3cgYSAiUGVybWlzc2lvbiBkZW5pZWQiIGVycm9yIHdoZW4gc3RyaWN0LWNvbXBhcmluZwoJLy8gdHdvIGRvY3VtZW50czsgc2hhbGxvdyBjb21wYXJpc29ucyB3b3JrLgoJLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIGVxZXFlcQoJaWYgKCBkb2MgPT0gZG9jdW1lbnQgfHwgZG9jLm5vZGVUeXBlICE9PSA5IHx8ICFkb2MuZG9jdW1lbnRFbGVtZW50ICkgewoJCXJldHVybiBkb2N1bWVudDsKCX0KCgkvLyBVcGRhdGUgZ2xvYmFsIHZhcmlhYmxlcwoJZG9jdW1lbnQgPSBkb2M7Cglkb2NFbGVtID0gZG9jdW1lbnQuZG9jdW1lbnRFbGVtZW50OwoJZG9jdW1lbnRJc0hUTUwgPSAhaXNYTUwoIGRvY3VtZW50ICk7CgoJLy8gU3VwcG9ydDogSUUgOSAtIDExKywgRWRnZSAxMiAtIDE4KwoJLy8gQWNjZXNzaW5nIGlmcmFtZSBkb2N1bWVudHMgYWZ0ZXIgdW5sb2FkIHRocm93cyAicGVybWlzc2lvbiBkZW5pZWQiIGVycm9ycyAoalF1ZXJ5ICMxMzkzNikKCS8vIFN1cHBvcnQ6IElFIDExKywgRWRnZSAxNyAtIDE4KwoJLy8gSUUvRWRnZSBzb21ldGltZXMgdGhyb3cgYSAiUGVybWlzc2lvbiBkZW5pZWQiIGVycm9yIHdoZW4gc3RyaWN0LWNvbXBhcmluZwoJLy8gdHdvIGRvY3VtZW50czsgc2hhbGxvdyBjb21wYXJpc29ucyB3b3JrLgoJLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIGVxZXFlcQoJaWYgKCBwcmVmZXJyZWREb2MgIT0gZG9jdW1lbnQgJiYKCQkoIHN1YldpbmRvdyA9IGRvY3VtZW50LmRlZmF1bHRWaWV3ICkgJiYgc3ViV2luZG93LnRvcCAhPT0gc3ViV2luZG93ICkgewoKCQkvLyBTdXBwb3J0OiBJRSAxMSwgRWRnZQoJCWlmICggc3ViV2luZG93LmFkZEV2ZW50TGlzdGVuZXIgKSB7CgkJCXN1YldpbmRvdy5hZGRFdmVudExpc3RlbmVyKCAidW5sb2FkIiwgdW5sb2FkSGFuZGxlciwgZmFsc2UgKTsKCgkJLy8gU3VwcG9ydDogSUUgOSAtIDEwIG9ubHkKCQl9IGVsc2UgaWYgKCBzdWJXaW5kb3cuYXR0YWNoRXZlbnQgKSB7CgkJCXN1YldpbmRvdy5hdHRhY2hFdmVudCggIm9udW5sb2FkIiwgdW5sb2FkSGFuZGxlciApOwoJCX0KCX0KCgkvLyBTdXBwb3J0OiBJRSA4IC0gMTErLCBFZGdlIDEyIC0gMTgrLCBDaHJvbWUgPD0xNiAtIDI1IG9ubHksIEZpcmVmb3ggPD0zLjYgLSAzMSBvbmx5LAoJLy8gU2FmYXJpIDQgLSA1IG9ubHksIE9wZXJhIDw9MTEuNiAtIDEyLnggb25seQoJLy8gSUUvRWRnZSAmIG9sZGVyIGJyb3dzZXJzIGRvbid0IHN1cHBvcnQgdGhlIDpzY29wZSBwc2V1ZG8tY2xhc3MuCgkvLyBTdXBwb3J0OiBTYWZhcmkgNi4wIG9ubHkKCS8vIFNhZmFyaSA2LjAgc3VwcG9ydHMgOnNjb3BlIGJ1dCBpdCdzIGFuIGFsaWFzIG9mIDpyb290IHRoZXJlLgoJc3VwcG9ydC5zY29wZSA9IGFzc2VydCggZnVuY3Rpb24oIGVsICkgewoJCWRvY0VsZW0uYXBwZW5kQ2hpbGQoIGVsICkuYXBwZW5kQ2hpbGQoIGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoICJkaXYiICkgKTsKCQlyZXR1cm4gdHlwZW9mIGVsLnF1ZXJ5U2VsZWN0b3JBbGwgIT09ICJ1bmRlZmluZWQiICYmCgkJCSFlbC5xdWVyeVNlbGVjdG9yQWxsKCAiOnNjb3BlIGZpZWxkc2V0IGRpdiIgKS5sZW5ndGg7Cgl9ICk7CgoJLy8gU3VwcG9ydDogQ2hyb21lIDEwNSssIEZpcmVmb3ggMTA0KywgU2FmYXJpIDE1LjQrCgkvLyBNYWtlIHN1cmUgZm9yZ2l2aW5nIG1vZGUgaXMgbm90IHVzZWQgaW4gYENTUy5zdXBwb3J0cyggInNlbGVjdG9yKC4uLikiIClgLgoJLy8KCS8vIGA6aXMoKWAgdXNlcyBhIGZvcmdpdmluZyBzZWxlY3RvciBsaXN0IGFzIGFuIGFyZ3VtZW50IGFuZCBpcyB3aWRlbHkKCS8vIGltcGxlbWVudGVkLCBzbyBpdCdzIGEgZ29vZCBvbmUgdG8gdGVzdCBhZ2FpbnN0LgoJc3VwcG9ydC5jc3NTdXBwb3J0c1NlbGVjdG9yID0gYXNzZXJ0KCBmdW5jdGlvbigpIHsKCQkvKiBlc2xpbnQtZGlzYWJsZSBuby11bmRlZiAqLwoKCQlyZXR1cm4gQ1NTLnN1cHBvcnRzKCAic2VsZWN0b3IoKikiICkgJiYKCgkJCS8vIFN1cHBvcnQ6IEZpcmVmb3ggNzgtODEgb25seQoJCQkvLyBJbiBvbGQgRmlyZWZveCwgYDppcygpYCBkaWRuJ3QgdXNlIGZvcmdpdmluZyBwYXJzaW5nLiBJbiB0aGF0IGNhc2UsCgkJCS8vIGZhaWwgdGhpcyB0ZXN0IGFzIHRoZXJlJ3Mgbm8gc2VsZWN0b3IgdG8gdGVzdCBhZ2FpbnN0IHRoYXQuCgkJCS8vIGBDU1Muc3VwcG9ydHNgIHVzZXMgdW5mb3JnaXZpbmcgcGFyc2luZwoJCQlkb2N1bWVudC5xdWVyeVNlbGVjdG9yQWxsKCAiOmlzKDpqcWZha2UpIiApICYmCgoJCQkvLyBgKmAgaXMgbmVlZGVkIGFzIFNhZmFyaSAmIG5ld2VyIENocm9tZSBpbXBsZW1lbnRlZCBzb21ldGhpbmcgaW4gYmV0d2VlbgoJCQkvLyBmb3IgYDpoYXMoKWAgLSBpdCB0aHJvd3MgaW4gYHFTQWAgaWYgaXQgb25seSBjb250YWlucyBhbiB1bnN1cHBvcnRlZAoJCQkvLyBhcmd1bWVudCBidXQgbXVsdGlwbGUgb25lcywgb25lIG9mIHdoaWNoIGlzIHN1cHBvcnRlZCwgYXJlIGZpbmUuCgkJCS8vIFdlIHdhbnQgdG8gcGxheSBzYWZlIGluIGNhc2UgYDppcygpYCBnZXRzIHRoZSBzYW1lIHRyZWF0bWVudC4KCQkJIUNTUy5zdXBwb3J0cyggInNlbGVjdG9yKDppcygqLDpqcWZha2UpKSIgKTsKCgkJLyogZXNsaW50LWVuYWJsZSAqLwoJfSApOwoKCS8qIEF0dHJpYnV0ZXMKCS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0gKi8KCgkvLyBTdXBwb3J0OiBJRTw4CgkvLyBWZXJpZnkgdGhhdCBnZXRBdHRyaWJ1dGUgcmVhbGx5IHJldHVybnMgYXR0cmlidXRlcyBhbmQgbm90IHByb3BlcnRpZXMKCS8vIChleGNlcHRpbmcgSUU4IGJvb2xlYW5zKQoJc3VwcG9ydC5hdHRyaWJ1dGVzID0gYXNzZXJ0KCBmdW5jdGlvbiggZWwgKSB7CgkJZWwuY2xhc3NOYW1lID0gImkiOwoJCXJldHVybiAhZWwuZ2V0QXR0cmlidXRlKCAiY2xhc3NOYW1lIiApOwoJfSApOwoKCS8qIGdldEVsZW1lbnQocylCeSoKCS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0gKi8KCgkvLyBDaGVjayBpZiBnZXRFbGVtZW50c0J5VGFnTmFtZSgiKiIpIHJldHVybnMgb25seSBlbGVtZW50cwoJc3VwcG9ydC5nZXRFbGVtZW50c0J5VGFnTmFtZSA9IGFzc2VydCggZnVuY3Rpb24oIGVsICkgewoJCWVsLmFwcGVuZENoaWxkKCBkb2N1bWVudC5jcmVhdGVDb21tZW50KCAiIiApICk7CgkJcmV0dXJuICFlbC5nZXRFbGVtZW50c0J5VGFnTmFtZSggIioiICkubGVuZ3RoOwoJfSApOwoKCS8vIFN1cHBvcnQ6IElFPDkKCXN1cHBvcnQuZ2V0RWxlbWVudHNCeUNsYXNzTmFtZSA9IHJuYXRpdmUudGVzdCggZG9jdW1lbnQuZ2V0RWxlbWVudHNCeUNsYXNzTmFtZSApOwoKCS8vIFN1cHBvcnQ6IElFPDEwCgkvLyBDaGVjayBpZiBnZXRFbGVtZW50QnlJZCByZXR1cm5zIGVsZW1lbnRzIGJ5IG5hbWUKCS8vIFRoZSBicm9rZW4gZ2V0RWxlbWVudEJ5SWQgbWV0aG9kcyBkb24ndCBwaWNrIHVwIHByb2dyYW1tYXRpY2FsbHktc2V0IG5hbWVzLAoJLy8gc28gdXNlIGEgcm91bmRhYm91dCBnZXRFbGVtZW50c0J5TmFtZSB0ZXN0CglzdXBwb3J0LmdldEJ5SWQgPSBhc3NlcnQoIGZ1bmN0aW9uKCBlbCApIHsKCQlkb2NFbGVtLmFwcGVuZENoaWxkKCBlbCApLmlkID0gZXhwYW5kbzsKCQlyZXR1cm4gIWRvY3VtZW50LmdldEVsZW1lbnRzQnlOYW1lIHx8ICFkb2N1bWVudC5nZXRFbGVtZW50c0J5TmFtZSggZXhwYW5kbyApLmxlbmd0aDsKCX0gKTsKCgkvLyBJRCBmaWx0ZXIgYW5kIGZpbmQKCWlmICggc3VwcG9ydC5nZXRCeUlkICkgewoJCUV4cHIuZmlsdGVyWyAiSUQiIF0gPSBmdW5jdGlvbiggaWQgKSB7CgkJCXZhciBhdHRySWQgPSBpZC5yZXBsYWNlKCBydW5lc2NhcGUsIGZ1bmVzY2FwZSApOwoJCQlyZXR1cm4gZnVuY3Rpb24oIGVsZW0gKSB7CgkJCQlyZXR1cm4gZWxlbS5nZXRBdHRyaWJ1dGUoICJpZCIgKSA9PT0gYXR0cklkOwoJCQl9OwoJCX07CgkJRXhwci5maW5kWyAiSUQiIF0gPSBmdW5jdGlvbiggaWQsIGNvbnRleHQgKSB7CgkJCWlmICggdHlwZW9mIGNvbnRleHQuZ2V0RWxlbWVudEJ5SWQgIT09ICJ1bmRlZmluZWQiICYmIGRvY3VtZW50SXNIVE1MICkgewoJCQkJdmFyIGVsZW0gPSBjb250ZXh0LmdldEVsZW1lbnRCeUlkKCBpZCApOwoJCQkJcmV0dXJuIGVsZW0gPyBbIGVsZW0gXSA6IFtdOwoJCQl9CgkJfTsKCX0gZWxzZSB7CgkJRXhwci5maWx0ZXJbICJJRCIgXSA9ICBmdW5jdGlvbiggaWQgKSB7CgkJCXZhciBhdHRySWQgPSBpZC5yZXBsYWNlKCBydW5lc2NhcGUsIGZ1bmVzY2FwZSApOwoJCQlyZXR1cm4gZnVuY3Rpb24oIGVsZW0gKSB7CgkJCQl2YXIgbm9kZSA9IHR5cGVvZiBlbGVtLmdldEF0dHJpYnV0ZU5vZGUgIT09ICJ1bmRlZmluZWQiICYmCgkJCQkJZWxlbS5nZXRBdHRyaWJ1dGVOb2RlKCAiaWQiICk7CgkJCQlyZXR1cm4gbm9kZSAmJiBub2RlLnZhbHVlID09PSBhdHRySWQ7CgkJCX07CgkJfTsKCgkJLy8gU3VwcG9ydDogSUUgNiAtIDcgb25seQoJCS8vIGdldEVsZW1lbnRCeUlkIGlzIG5vdCByZWxpYWJsZSBhcyBhIGZpbmQgc2hvcnRjdXQKCQlFeHByLmZpbmRbICJJRCIgXSA9IGZ1bmN0aW9uKCBpZCwgY29udGV4dCApIHsKCQkJaWYgKCB0eXBlb2YgY29udGV4dC5nZXRFbGVtZW50QnlJZCAhPT0gInVuZGVmaW5lZCIgJiYgZG9jdW1lbnRJc0hUTUwgKSB7CgkJCQl2YXIgbm9kZSwgaSwgZWxlbXMsCgkJCQkJZWxlbSA9IGNvbnRleHQuZ2V0RWxlbWVudEJ5SWQoIGlkICk7CgoJCQkJaWYgKCBlbGVtICkgewoKCQkJCQkvLyBWZXJpZnkgdGhlIGlkIGF0dHJpYnV0ZQoJCQkJCW5vZGUgPSBlbGVtLmdldEF0dHJpYnV0ZU5vZGUoICJpZCIgKTsKCQkJCQlpZiAoIG5vZGUgJiYgbm9kZS52YWx1ZSA9PT0gaWQgKSB7CgkJCQkJCXJldHVybiBbIGVsZW0gXTsKCQkJCQl9CgoJCQkJCS8vIEZhbGwgYmFjayBvbiBnZXRFbGVtZW50c0J5TmFtZQoJCQkJCWVsZW1zID0gY29udGV4dC5nZXRFbGVtZW50c0J5TmFtZSggaWQgKTsKCQkJCQlpID0gMDsKCQkJCQl3aGlsZSAoICggZWxlbSA9IGVsZW1zWyBpKysgXSApICkgewoJCQkJCQlub2RlID0gZWxlbS5nZXRBdHRyaWJ1dGVOb2RlKCAiaWQiICk7CgkJCQkJCWlmICggbm9kZSAmJiBub2RlLnZhbHVlID09PSBpZCApIHsKCQkJCQkJCXJldHVybiBbIGVsZW0gXTsKCQkJCQkJfQoJCQkJCX0KCQkJCX0KCgkJCQlyZXR1cm4gW107CgkJCX0KCQl9OwoJfQoKCS8vIFRhZwoJRXhwci5maW5kWyAiVEFHIiBdID0gc3VwcG9ydC5nZXRFbGVtZW50c0J5VGFnTmFtZSA/CgkJZnVuY3Rpb24oIHRhZywgY29udGV4dCApIHsKCQkJaWYgKCB0eXBlb2YgY29udGV4dC5nZXRFbGVtZW50c0J5VGFnTmFtZSAhPT0gInVuZGVmaW5lZCIgKSB7CgkJCQlyZXR1cm4gY29udGV4dC5nZXRFbGVtZW50c0J5VGFnTmFtZSggdGFnICk7CgoJCQkvLyBEb2N1bWVudEZyYWdtZW50IG5vZGVzIGRvbid0IGhhdmUgZ0VCVE4KCQkJfSBlbHNlIGlmICggc3VwcG9ydC5xc2EgKSB7CgkJCQlyZXR1cm4gY29udGV4dC5xdWVyeVNlbGVjdG9yQWxsKCB0YWcgKTsKCQkJfQoJCX0gOgoKCQlmdW5jdGlvbiggdGFnLCBjb250ZXh0ICkgewoJCQl2YXIgZWxlbSwKCQkJCXRtcCA9IFtdLAoJCQkJaSA9IDAsCgoJCQkJLy8gQnkgaGFwcHkgY29pbmNpZGVuY2UsIGEgKGJyb2tlbikgZ0VCVE4gYXBwZWFycyBvbiBEb2N1bWVudEZyYWdtZW50IG5vZGVzIHRvbwoJCQkJcmVzdWx0cyA9IGNvbnRleHQuZ2V0RWxlbWVudHNCeVRhZ05hbWUoIHRhZyApOwoKCQkJLy8gRmlsdGVyIG91dCBwb3NzaWJsZSBjb21tZW50cwoJCQlpZiAoIHRhZyA9PT0gIioiICkgewoJCQkJd2hpbGUgKCAoIGVsZW0gPSByZXN1bHRzWyBpKysgXSApICkgewoJCQkJCWlmICggZWxlbS5ub2RlVHlwZSA9PT0gMSApIHsKCQkJCQkJdG1wLnB1c2goIGVsZW0gKTsKCQkJCQl9CgkJCQl9CgoJCQkJcmV0dXJuIHRtcDsKCQkJfQoJCQlyZXR1cm4gcmVzdWx0czsKCQl9OwoKCS8vIENsYXNzCglFeHByLmZpbmRbICJDTEFTUyIgXSA9IHN1cHBvcnQuZ2V0RWxlbWVudHNCeUNsYXNzTmFtZSAmJiBmdW5jdGlvbiggY2xhc3NOYW1lLCBjb250ZXh0ICkgewoJCWlmICggdHlwZW9mIGNvbnRleHQuZ2V0RWxlbWVudHNCeUNsYXNzTmFtZSAhPT0gInVuZGVmaW5lZCIgJiYgZG9jdW1lbnRJc0hUTUwgKSB7CgkJCXJldHVybiBjb250ZXh0LmdldEVsZW1lbnRzQnlDbGFzc05hbWUoIGNsYXNzTmFtZSApOwoJCX0KCX07CgoJLyogUVNBL21hdGNoZXNTZWxlY3RvcgoJLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSAqLwoKCS8vIFFTQSBhbmQgbWF0Y2hlc1NlbGVjdG9yIHN1cHBvcnQKCgkvLyBtYXRjaGVzU2VsZWN0b3IoOmFjdGl2ZSkgcmVwb3J0cyBmYWxzZSB3aGVuIHRydWUgKElFOS9PcGVyYSAxMS41KQoJcmJ1Z2d5TWF0Y2hlcyA9IFtdOwoKCS8vIHFTYSg6Zm9jdXMpIHJlcG9ydHMgZmFsc2Ugd2hlbiB0cnVlIChDaHJvbWUgMjEpCgkvLyBXZSBhbGxvdyB0aGlzIGJlY2F1c2Ugb2YgYSBidWcgaW4gSUU4LzkgdGhhdCB0aHJvd3MgYW4gZXJyb3IKCS8vIHdoZW5ldmVyIGBkb2N1bWVudC5hY3RpdmVFbGVtZW50YCBpcyBhY2Nlc3NlZCBvbiBhbiBpZnJhbWUKCS8vIFNvLCB3ZSBhbGxvdyA6Zm9jdXMgdG8gcGFzcyB0aHJvdWdoIFFTQSBhbGwgdGhlIHRpbWUgdG8gYXZvaWQgdGhlIElFIGVycm9yCgkvLyBTZWUgaHR0cHM6Ly9idWdzLmpxdWVyeS5jb20vdGlja2V0LzEzMzc4CglyYnVnZ3lRU0EgPSBbXTsKCglpZiAoICggc3VwcG9ydC5xc2EgPSBybmF0aXZlLnRlc3QoIGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3JBbGwgKSApICkgewoKCQkvLyBCdWlsZCBRU0EgcmVnZXgKCQkvLyBSZWdleCBzdHJhdGVneSBhZG9wdGVkIGZyb20gRGllZ28gUGVyaW5pCgkJYXNzZXJ0KCBmdW5jdGlvbiggZWwgKSB7CgoJCQl2YXIgaW5wdXQ7CgoJCQkvLyBTZWxlY3QgaXMgc2V0IHRvIGVtcHR5IHN0cmluZyBvbiBwdXJwb3NlCgkJCS8vIFRoaXMgaXMgdG8gdGVzdCBJRSdzIHRyZWF0bWVudCBvZiBub3QgZXhwbGljaXRseQoJCQkvLyBzZXR0aW5nIGEgYm9vbGVhbiBjb250ZW50IGF0dHJpYnV0ZSwKCQkJLy8gc2luY2UgaXRzIHByZXNlbmNlIHNob3VsZCBiZSBlbm91Z2gKCQkJLy8gaHR0cHM6Ly9idWdzLmpxdWVyeS5jb20vdGlja2V0LzEyMzU5CgkJCWRvY0VsZW0uYXBwZW5kQ2hpbGQoIGVsICkuaW5uZXJIVE1MID0gIjxhIGlkPSciICsgZXhwYW5kbyArICInPjwvYT4iICsKCQkJCSI8c2VsZWN0IGlkPSciICsgZXhwYW5kbyArICItXHJcXCcgbXNhbGxvd2NhcHR1cmU9Jyc+IiArCgkJCQkiPG9wdGlvbiBzZWxlY3RlZD0nJz48L29wdGlvbj48L3NlbGVjdD4iOwoKCQkJLy8gU3VwcG9ydDogSUU4LCBPcGVyYSAxMS0xMi4xNgoJCQkvLyBOb3RoaW5nIHNob3VsZCBiZSBzZWxlY3RlZCB3aGVuIGVtcHR5IHN0cmluZ3MgZm9sbG93IF49IG9yICQ9IG9yICo9CgkJCS8vIFRoZSB0ZXN0IGF0dHJpYnV0ZSBtdXN0IGJlIHVua25vd24gaW4gT3BlcmEgYnV0ICJzYWZlIiBmb3IgV2luUlQKCQkJLy8gaHR0cHM6Ly9tc2RuLm1pY3Jvc29mdC5jb20vZW4tdXMvbGlicmFyeS9pZS9oaDQ2NTM4OC5hc3B4I2F0dHJpYnV0ZV9zZWN0aW9uCgkJCWlmICggZWwucXVlcnlTZWxlY3RvckFsbCggIlttc2FsbG93Y2FwdHVyZV49JyddIiApLmxlbmd0aCApIHsKCQkJCXJidWdneVFTQS5wdXNoKCAiWypeJF09IiArIHdoaXRlc3BhY2UgKyAiKig/OicnfFwiXCIpIiApOwoJCQl9CgoJCQkvLyBTdXBwb3J0OiBJRTgKCQkJLy8gQm9vbGVhbiBhdHRyaWJ1dGVzIGFuZCAidmFsdWUiIGFyZSBub3QgdHJlYXRlZCBjb3JyZWN0bHkKCQkJaWYgKCAhZWwucXVlcnlTZWxlY3RvckFsbCggIltzZWxlY3RlZF0iICkubGVuZ3RoICkgewoJCQkJcmJ1Z2d5UVNBLnB1c2goICJcXFsiICsgd2hpdGVzcGFjZSArICIqKD86dmFsdWV8IiArIGJvb2xlYW5zICsgIikiICk7CgkJCX0KCgkJCS8vIFN1cHBvcnQ6IENocm9tZTwyOSwgQW5kcm9pZDw0LjQsIFNhZmFyaTw3LjArLCBpT1M8Ny4wKywgUGhhbnRvbUpTPDEuOS44KwoJCQlpZiAoICFlbC5xdWVyeVNlbGVjdG9yQWxsKCAiW2lkfj0iICsgZXhwYW5kbyArICItXSIgKS5sZW5ndGggKSB7CgkJCQlyYnVnZ3lRU0EucHVzaCggIn49IiApOwoJCQl9CgoJCQkvLyBTdXBwb3J0OiBJRSAxMSssIEVkZ2UgMTUgLSAxOCsKCQkJLy8gSUUgMTEvRWRnZSBkb24ndCBmaW5kIGVsZW1lbnRzIG9uIGEgYFtuYW1lPScnXWAgcXVlcnkgaW4gc29tZSBjYXNlcy4KCQkJLy8gQWRkaW5nIGEgdGVtcG9yYXJ5IGF0dHJpYnV0ZSB0byB0aGUgZG9jdW1lbnQgYmVmb3JlIHRoZSBzZWxlY3Rpb24gd29ya3MKCQkJLy8gYXJvdW5kIHRoZSBpc3N1ZS4KCQkJLy8gSW50ZXJlc3RpbmdseSwgSUUgMTAgJiBvbGRlciBkb24ndCBzZWVtIHRvIGhhdmUgdGhlIGlzc3VlLgoJCQlpbnB1dCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoICJpbnB1dCIgKTsKCQkJaW5wdXQuc2V0QXR0cmlidXRlKCAibmFtZSIsICIiICk7CgkJCWVsLmFwcGVuZENoaWxkKCBpbnB1dCApOwoJCQlpZiAoICFlbC5xdWVyeVNlbGVjdG9yQWxsKCAiW25hbWU9JyddIiApLmxlbmd0aCApIHsKCQkJCXJidWdneVFTQS5wdXNoKCAiXFxbIiArIHdoaXRlc3BhY2UgKyAiKm5hbWUiICsgd2hpdGVzcGFjZSArICIqPSIgKwoJCQkJCXdoaXRlc3BhY2UgKyAiKig/OicnfFwiXCIpIiApOwoJCQl9CgoJCQkvLyBXZWJraXQvT3BlcmEgLSA6Y2hlY2tlZCBzaG91bGQgcmV0dXJuIHNlbGVjdGVkIG9wdGlvbiBlbGVtZW50cwoJCQkvLyBodHRwOi8vd3d3LnczLm9yZy9UUi8yMDExL1JFQy1jc3MzLXNlbGVjdG9ycy0yMDExMDkyOS8jY2hlY2tlZAoJCQkvLyBJRTggdGhyb3dzIGVycm9yIGhlcmUgYW5kIHdpbGwgbm90IHNlZSBsYXRlciB0ZXN0cwoJCQlpZiAoICFlbC5xdWVyeVNlbGVjdG9yQWxsKCAiOmNoZWNrZWQiICkubGVuZ3RoICkgewoJCQkJcmJ1Z2d5UVNBLnB1c2goICI6Y2hlY2tlZCIgKTsKCQkJfQoKCQkJLy8gU3VwcG9ydDogU2FmYXJpIDgrLCBpT1MgOCsKCQkJLy8gaHR0cHM6Ly9idWdzLndlYmtpdC5vcmcvc2hvd19idWcuY2dpP2lkPTEzNjg1MQoJCQkvLyBJbi1wYWdlIGBzZWxlY3RvciNpZCBzaWJsaW5nLWNvbWJpbmF0b3Igc2VsZWN0b3JgIGZhaWxzCgkJCWlmICggIWVsLnF1ZXJ5U2VsZWN0b3JBbGwoICJhIyIgKyBleHBhbmRvICsgIisqIiApLmxlbmd0aCApIHsKCQkJCXJidWdneVFTQS5wdXNoKCAiLiMuK1srfl0iICk7CgkJCX0KCgkJCS8vIFN1cHBvcnQ6IEZpcmVmb3ggPD0zLjYgLSA1IG9ubHkKCQkJLy8gT2xkIEZpcmVmb3ggZG9lc24ndCB0aHJvdyBvbiBhIGJhZGx5LWVzY2FwZWQgaWRlbnRpZmllci4KCQkJZWwucXVlcnlTZWxlY3RvckFsbCggIlxcXGYiICk7CgkJCXJidWdneVFTQS5wdXNoKCAiW1xcclxcblxcZl0iICk7CgkJfSApOwoKCQlhc3NlcnQoIGZ1bmN0aW9uKCBlbCApIHsKCQkJZWwuaW5uZXJIVE1MID0gIjxhIGhyZWY9JycgZGlzYWJsZWQ9J2Rpc2FibGVkJz48L2E+IiArCgkJCQkiPHNlbGVjdCBkaXNhYmxlZD0nZGlzYWJsZWQnPjxvcHRpb24vPjwvc2VsZWN0PiI7CgoJCQkvLyBTdXBwb3J0OiBXaW5kb3dzIDggTmF0aXZlIEFwcHMKCQkJLy8gVGhlIHR5cGUgYW5kIG5hbWUgYXR0cmlidXRlcyBhcmUgcmVzdHJpY3RlZCBkdXJpbmcgLmlubmVySFRNTCBhc3NpZ25tZW50CgkJCXZhciBpbnB1dCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoICJpbnB1dCIgKTsKCQkJaW5wdXQuc2V0QXR0cmlidXRlKCAidHlwZSIsICJoaWRkZW4iICk7CgkJCWVsLmFwcGVuZENoaWxkKCBpbnB1dCApLnNldEF0dHJpYnV0ZSggIm5hbWUiLCAiRCIgKTsKCgkJCS8vIFN1cHBvcnQ6IElFOAoJCQkvLyBFbmZvcmNlIGNhc2Utc2Vuc2l0aXZpdHkgb2YgbmFtZSBhdHRyaWJ1dGUKCQkJaWYgKCBlbC5xdWVyeVNlbGVjdG9yQWxsKCAiW25hbWU9ZF0iICkubGVuZ3RoICkgewoJCQkJcmJ1Z2d5UVNBLnB1c2goICJuYW1lIiArIHdoaXRlc3BhY2UgKyAiKlsqXiR8IX5dPz0iICk7CgkJCX0KCgkJCS8vIEZGIDMuNSAtIDplbmFibGVkLzpkaXNhYmxlZCBhbmQgaGlkZGVuIGVsZW1lbnRzIChoaWRkZW4gZWxlbWVudHMgYXJlIHN0aWxsIGVuYWJsZWQpCgkJCS8vIElFOCB0aHJvd3MgZXJyb3IgaGVyZSBhbmQgd2lsbCBub3Qgc2VlIGxhdGVyIHRlc3RzCgkJCWlmICggZWwucXVlcnlTZWxlY3RvckFsbCggIjplbmFibGVkIiApLmxlbmd0aCAhPT0gMiApIHsKCQkJCXJidWdneVFTQS5wdXNoKCAiOmVuYWJsZWQiLCAiOmRpc2FibGVkIiApOwoJCQl9CgoJCQkvLyBTdXBwb3J0OiBJRTktMTErCgkJCS8vIElFJ3MgOmRpc2FibGVkIHNlbGVjdG9yIGRvZXMgbm90IHBpY2sgdXAgdGhlIGNoaWxkcmVuIG9mIGRpc2FibGVkIGZpZWxkc2V0cwoJCQlkb2NFbGVtLmFwcGVuZENoaWxkKCBlbCApLmRpc2FibGVkID0gdHJ1ZTsKCQkJaWYgKCBlbC5xdWVyeVNlbGVjdG9yQWxsKCAiOmRpc2FibGVkIiApLmxlbmd0aCAhPT0gMiApIHsKCQkJCXJidWdneVFTQS5wdXNoKCAiOmVuYWJsZWQiLCAiOmRpc2FibGVkIiApOwoJCQl9CgoJCQkvLyBTdXBwb3J0OiBPcGVyYSAxMCAtIDExIG9ubHkKCQkJLy8gT3BlcmEgMTAtMTEgZG9lcyBub3QgdGhyb3cgb24gcG9zdC1jb21tYSBpbnZhbGlkIHBzZXVkb3MKCQkJZWwucXVlcnlTZWxlY3RvckFsbCggIiosOngiICk7CgkJCXJidWdneVFTQS5wdXNoKCAiLC4qOiIgKTsKCQl9ICk7Cgl9CgoJaWYgKCAoIHN1cHBvcnQubWF0Y2hlc1NlbGVjdG9yID0gcm5hdGl2ZS50ZXN0KCAoIG1hdGNoZXMgPSBkb2NFbGVtLm1hdGNoZXMgfHwKCQlkb2NFbGVtLndlYmtpdE1hdGNoZXNTZWxlY3RvciB8fAoJCWRvY0VsZW0ubW96TWF0Y2hlc1NlbGVjdG9yIHx8CgkJZG9jRWxlbS5vTWF0Y2hlc1NlbGVjdG9yIHx8CgkJZG9jRWxlbS5tc01hdGNoZXNTZWxlY3RvciApICkgKSApIHsKCgkJYXNzZXJ0KCBmdW5jdGlvbiggZWwgKSB7CgoJCQkvLyBDaGVjayB0byBzZWUgaWYgaXQncyBwb3NzaWJsZSB0byBkbyBtYXRjaGVzU2VsZWN0b3IKCQkJLy8gb24gYSBkaXNjb25uZWN0ZWQgbm9kZSAoSUUgOSkKCQkJc3VwcG9ydC5kaXNjb25uZWN0ZWRNYXRjaCA9IG1hdGNoZXMuY2FsbCggZWwsICIqIiApOwoKCQkJLy8gVGhpcyBzaG91bGQgZmFpbCB3aXRoIGFuIGV4Y2VwdGlvbgoJCQkvLyBHZWNrbyBkb2VzIG5vdCBlcnJvciwgcmV0dXJucyBmYWxzZSBpbnN0ZWFkCgkJCW1hdGNoZXMuY2FsbCggZWwsICJbcyE9JyddOngiICk7CgkJCXJidWdneU1hdGNoZXMucHVzaCggIiE9IiwgcHNldWRvcyApOwoJCX0gKTsKCX0KCglpZiAoICFzdXBwb3J0LmNzc1N1cHBvcnRzU2VsZWN0b3IgKSB7CgoJCS8vIFN1cHBvcnQ6IENocm9tZSAxMDUrLCBTYWZhcmkgMTUuNCsKCQkvLyBgOmhhcygpYCB1c2VzIGEgZm9yZ2l2aW5nIHNlbGVjdG9yIGxpc3QgYXMgYW4gYXJndW1lbnQgc28gb3VyIHJlZ3VsYXIKCQkvLyBgdHJ5LWNhdGNoYCBtZWNoYW5pc20gZmFpbHMgdG8gY2F0Y2ggYDpoYXMoKWAgd2l0aCBhcmd1bWVudHMgbm90IHN1cHBvcnRlZAoJCS8vIG5hdGl2ZWx5IGxpa2UgYDpoYXMoOmNvbnRhaW5zKCJGb28iKSlgLiBXaGVyZSBzdXBwb3J0ZWQgJiBzcGVjLWNvbXBsaWFudCwKCQkvLyB3ZSBub3cgdXNlIGBDU1Muc3VwcG9ydHMoInNlbGVjdG9yKFNFTEVDVE9SX1RPX0JFX1RFU1RFRCkiKWAgYnV0IG91dHNpZGUKCQkvLyB0aGF0LCBsZXQncyBtYXJrIGA6aGFzYCBhcyBidWdneSB0byBhbHdheXMgdXNlIGpRdWVyeSB0cmF2ZXJzYWwgZm9yCgkJLy8gYDpoYXMoKWAuCgkJcmJ1Z2d5UVNBLnB1c2goICI6aGFzIiApOwoJfQoKCXJidWdneVFTQSA9IHJidWdneVFTQS5sZW5ndGggJiYgbmV3IFJlZ0V4cCggcmJ1Z2d5UVNBLmpvaW4oICJ8IiApICk7CglyYnVnZ3lNYXRjaGVzID0gcmJ1Z2d5TWF0Y2hlcy5sZW5ndGggJiYgbmV3IFJlZ0V4cCggcmJ1Z2d5TWF0Y2hlcy5qb2luKCAifCIgKSApOwoKCS8qIENvbnRhaW5zCgktLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tICovCgloYXNDb21wYXJlID0gcm5hdGl2ZS50ZXN0KCBkb2NFbGVtLmNvbXBhcmVEb2N1bWVudFBvc2l0aW9uICk7CgoJLy8gRWxlbWVudCBjb250YWlucyBhbm90aGVyCgkvLyBQdXJwb3NlZnVsbHkgc2VsZi1leGNsdXNpdmUKCS8vIEFzIGluLCBhbiBlbGVtZW50IGRvZXMgbm90IGNvbnRhaW4gaXRzZWxmCgljb250YWlucyA9IGhhc0NvbXBhcmUgfHwgcm5hdGl2ZS50ZXN0KCBkb2NFbGVtLmNvbnRhaW5zICkgPwoJCWZ1bmN0aW9uKCBhLCBiICkgewoKCQkJLy8gU3VwcG9ydDogSUUgPDkgb25seQoJCQkvLyBJRSBkb2Vzbid0IGhhdmUgYGNvbnRhaW5zYCBvbiBgZG9jdW1lbnRgIHNvIHdlIG5lZWQgdG8gY2hlY2sgZm9yCgkJCS8vIGBkb2N1bWVudEVsZW1lbnRgIHByZXNlbmNlLgoJCQkvLyBXZSBuZWVkIHRvIGZhbGwgYmFjayB0byBgYWAgd2hlbiBgZG9jdW1lbnRFbGVtZW50YCBpcyBtaXNzaW5nCgkJCS8vIGFzIGBvd25lckRvY3VtZW50YCBvZiBlbGVtZW50cyB3aXRoaW4gYDx0ZW1wbGF0ZS8+YCBtYXkgaGF2ZQoJCQkvLyBhIG51bGwgb25lIC0gYSBkZWZhdWx0IGJlaGF2aW9yIG9mIGFsbCBtb2Rlcm4gYnJvd3NlcnMuCgkJCXZhciBhZG93biA9IGEubm9kZVR5cGUgPT09IDkgJiYgYS5kb2N1bWVudEVsZW1lbnQgfHwgYSwKCQkJCWJ1cCA9IGIgJiYgYi5wYXJlbnROb2RlOwoJCQlyZXR1cm4gYSA9PT0gYnVwIHx8ICEhKCBidXAgJiYgYnVwLm5vZGVUeXBlID09PSAxICYmICgKCQkJCWFkb3duLmNvbnRhaW5zID8KCQkJCQlhZG93bi5jb250YWlucyggYnVwICkgOgoJCQkJCWEuY29tcGFyZURvY3VtZW50UG9zaXRpb24gJiYgYS5jb21wYXJlRG9jdW1lbnRQb3NpdGlvbiggYnVwICkgJiAxNgoJCQkpICk7CgkJfSA6CgkJZnVuY3Rpb24oIGEsIGIgKSB7CgkJCWlmICggYiApIHsKCQkJCXdoaWxlICggKCBiID0gYi5wYXJlbnROb2RlICkgKSB7CgkJCQkJaWYgKCBiID09PSBhICkgewoJCQkJCQlyZXR1cm4gdHJ1ZTsKCQkJCQl9CgkJCQl9CgkJCX0KCQkJcmV0dXJuIGZhbHNlOwoJCX07CgoJLyogU29ydGluZwoJLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSAqLwoKCS8vIERvY3VtZW50IG9yZGVyIHNvcnRpbmcKCXNvcnRPcmRlciA9IGhhc0NvbXBhcmUgPwoJZnVuY3Rpb24oIGEsIGIgKSB7CgoJCS8vIEZsYWcgZm9yIGR1cGxpY2F0ZSByZW1vdmFsCgkJaWYgKCBhID09PSBiICkgewoJCQloYXNEdXBsaWNhdGUgPSB0cnVlOwoJCQlyZXR1cm4gMDsKCQl9CgoJCS8vIFNvcnQgb24gbWV0aG9kIGV4aXN0ZW5jZSBpZiBvbmx5IG9uZSBpbnB1dCBoYXMgY29tcGFyZURvY3VtZW50UG9zaXRpb24KCQl2YXIgY29tcGFyZSA9ICFhLmNvbXBhcmVEb2N1bWVudFBvc2l0aW9uIC0gIWIuY29tcGFyZURvY3VtZW50UG9zaXRpb247CgkJaWYgKCBjb21wYXJlICkgewoJCQlyZXR1cm4gY29tcGFyZTsKCQl9CgoJCS8vIENhbGN1bGF0ZSBwb3NpdGlvbiBpZiBib3RoIGlucHV0cyBiZWxvbmcgdG8gdGhlIHNhbWUgZG9jdW1lbnQKCQkvLyBTdXBwb3J0OiBJRSAxMSssIEVkZ2UgMTcgLSAxOCsKCQkvLyBJRS9FZGdlIHNvbWV0aW1lcyB0aHJvdyBhICJQZXJtaXNzaW9uIGRlbmllZCIgZXJyb3Igd2hlbiBzdHJpY3QtY29tcGFyaW5nCgkJLy8gdHdvIGRvY3VtZW50czsgc2hhbGxvdyBjb21wYXJpc29ucyB3b3JrLgoJCS8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBlcWVxZXEKCQljb21wYXJlID0gKCBhLm93bmVyRG9jdW1lbnQgfHwgYSApID09ICggYi5vd25lckRvY3VtZW50IHx8IGIgKSA/CgkJCWEuY29tcGFyZURvY3VtZW50UG9zaXRpb24oIGIgKSA6CgoJCQkvLyBPdGhlcndpc2Ugd2Uga25vdyB0aGV5IGFyZSBkaXNjb25uZWN0ZWQKCQkJMTsKCgkJLy8gRGlzY29ubmVjdGVkIG5vZGVzCgkJaWYgKCBjb21wYXJlICYgMSB8fAoJCQkoICFzdXBwb3J0LnNvcnREZXRhY2hlZCAmJiBiLmNvbXBhcmVEb2N1bWVudFBvc2l0aW9uKCBhICkgPT09IGNvbXBhcmUgKSApIHsKCgkJCS8vIENob29zZSB0aGUgZmlyc3QgZWxlbWVudCB0aGF0IGlzIHJlbGF0ZWQgdG8gb3VyIHByZWZlcnJlZCBkb2N1bWVudAoJCQkvLyBTdXBwb3J0OiBJRSAxMSssIEVkZ2UgMTcgLSAxOCsKCQkJLy8gSUUvRWRnZSBzb21ldGltZXMgdGhyb3cgYSAiUGVybWlzc2lvbiBkZW5pZWQiIGVycm9yIHdoZW4gc3RyaWN0LWNvbXBhcmluZwoJCQkvLyB0d28gZG9jdW1lbnRzOyBzaGFsbG93IGNvbXBhcmlzb25zIHdvcmsuCgkJCS8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBlcWVxZXEKCQkJaWYgKCBhID09IGRvY3VtZW50IHx8IGEub3duZXJEb2N1bWVudCA9PSBwcmVmZXJyZWREb2MgJiYKCQkJCWNvbnRhaW5zKCBwcmVmZXJyZWREb2MsIGEgKSApIHsKCQkJCXJldHVybiAtMTsKCQkJfQoKCQkJLy8gU3VwcG9ydDogSUUgMTErLCBFZGdlIDE3IC0gMTgrCgkJCS8vIElFL0VkZ2Ugc29tZXRpbWVzIHRocm93IGEgIlBlcm1pc3Npb24gZGVuaWVkIiBlcnJvciB3aGVuIHN0cmljdC1jb21wYXJpbmcKCQkJLy8gdHdvIGRvY3VtZW50czsgc2hhbGxvdyBjb21wYXJpc29ucyB3b3JrLgoJCQkvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgZXFlcWVxCgkJCWlmICggYiA9PSBkb2N1bWVudCB8fCBiLm93bmVyRG9jdW1lbnQgPT0gcHJlZmVycmVkRG9jICYmCgkJCQljb250YWlucyggcHJlZmVycmVkRG9jLCBiICkgKSB7CgkJCQlyZXR1cm4gMTsKCQkJfQoKCQkJLy8gTWFpbnRhaW4gb3JpZ2luYWwgb3JkZXIKCQkJcmV0dXJuIHNvcnRJbnB1dCA/CgkJCQkoIGluZGV4T2YoIHNvcnRJbnB1dCwgYSApIC0gaW5kZXhPZiggc29ydElucHV0LCBiICkgKSA6CgkJCQkwOwoJCX0KCgkJcmV0dXJuIGNvbXBhcmUgJiA0ID8gLTEgOiAxOwoJfSA6CglmdW5jdGlvbiggYSwgYiApIHsKCgkJLy8gRXhpdCBlYXJseSBpZiB0aGUgbm9kZXMgYXJlIGlkZW50aWNhbAoJCWlmICggYSA9PT0gYiApIHsKCQkJaGFzRHVwbGljYXRlID0gdHJ1ZTsKCQkJcmV0dXJuIDA7CgkJfQoKCQl2YXIgY3VyLAoJCQlpID0gMCwKCQkJYXVwID0gYS5wYXJlbnROb2RlLAoJCQlidXAgPSBiLnBhcmVudE5vZGUsCgkJCWFwID0gWyBhIF0sCgkJCWJwID0gWyBiIF07CgoJCS8vIFBhcmVudGxlc3Mgbm9kZXMgYXJlIGVpdGhlciBkb2N1bWVudHMgb3IgZGlzY29ubmVjdGVkCgkJaWYgKCAhYXVwIHx8ICFidXAgKSB7CgoJCQkvLyBTdXBwb3J0OiBJRSAxMSssIEVkZ2UgMTcgLSAxOCsKCQkJLy8gSUUvRWRnZSBzb21ldGltZXMgdGhyb3cgYSAiUGVybWlzc2lvbiBkZW5pZWQiIGVycm9yIHdoZW4gc3RyaWN0LWNvbXBhcmluZwoJCQkvLyB0d28gZG9jdW1lbnRzOyBzaGFsbG93IGNvbXBhcmlzb25zIHdvcmsuCgkJCS8qIGVzbGludC1kaXNhYmxlIGVxZXFlcSAqLwoJCQlyZXR1cm4gYSA9PSBkb2N1bWVudCA/IC0xIDoKCQkJCWIgPT0gZG9jdW1lbnQgPyAxIDoKCQkJCS8qIGVzbGludC1lbmFibGUgZXFlcWVxICovCgkJCQlhdXAgPyAtMSA6CgkJCQlidXAgPyAxIDoKCQkJCXNvcnRJbnB1dCA/CgkJCQkoIGluZGV4T2YoIHNvcnRJbnB1dCwgYSApIC0gaW5kZXhPZiggc29ydElucHV0LCBiICkgKSA6CgkJCQkwOwoKCQkvLyBJZiB0aGUgbm9kZXMgYXJlIHNpYmxpbmdzLCB3ZSBjYW4gZG8gYSBxdWljayBjaGVjawoJCX0gZWxzZSBpZiAoIGF1cCA9PT0gYnVwICkgewoJCQlyZXR1cm4gc2libGluZ0NoZWNrKCBhLCBiICk7CgkJfQoKCQkvLyBPdGhlcndpc2Ugd2UgbmVlZCBmdWxsIGxpc3RzIG9mIHRoZWlyIGFuY2VzdG9ycyBmb3IgY29tcGFyaXNvbgoJCWN1ciA9IGE7CgkJd2hpbGUgKCAoIGN1ciA9IGN1ci5wYXJlbnROb2RlICkgKSB7CgkJCWFwLnVuc2hpZnQoIGN1ciApOwoJCX0KCQljdXIgPSBiOwoJCXdoaWxlICggKCBjdXIgPSBjdXIucGFyZW50Tm9kZSApICkgewoJCQlicC51bnNoaWZ0KCBjdXIgKTsKCQl9CgoJCS8vIFdhbGsgZG93biB0aGUgdHJlZSBsb29raW5nIGZvciBhIGRpc2NyZXBhbmN5CgkJd2hpbGUgKCBhcFsgaSBdID09PSBicFsgaSBdICkgewoJCQlpKys7CgkJfQoKCQlyZXR1cm4gaSA/CgoJCQkvLyBEbyBhIHNpYmxpbmcgY2hlY2sgaWYgdGhlIG5vZGVzIGhhdmUgYSBjb21tb24gYW5jZXN0b3IKCQkJc2libGluZ0NoZWNrKCBhcFsgaSBdLCBicFsgaSBdICkgOgoKCQkJLy8gT3RoZXJ3aXNlIG5vZGVzIGluIG91ciBkb2N1bWVudCBzb3J0IGZpcnN0CgkJCS8vIFN1cHBvcnQ6IElFIDExKywgRWRnZSAxNyAtIDE4KwoJCQkvLyBJRS9FZGdlIHNvbWV0aW1lcyB0aHJvdyBhICJQZXJtaXNzaW9uIGRlbmllZCIgZXJyb3Igd2hlbiBzdHJpY3QtY29tcGFyaW5nCgkJCS8vIHR3byBkb2N1bWVudHM7IHNoYWxsb3cgY29tcGFyaXNvbnMgd29yay4KCQkJLyogZXNsaW50LWRpc2FibGUgZXFlcWVxICovCgkJCWFwWyBpIF0gPT0gcHJlZmVycmVkRG9jID8gLTEgOgoJCQlicFsgaSBdID09IHByZWZlcnJlZERvYyA/IDEgOgoJCQkvKiBlc2xpbnQtZW5hYmxlIGVxZXFlcSAqLwoJCQkwOwoJfTsKCglyZXR1cm4gZG9jdW1lbnQ7Cn07CgpTaXp6bGUubWF0Y2hlcyA9IGZ1bmN0aW9uKCBleHByLCBlbGVtZW50cyApIHsKCXJldHVybiBTaXp6bGUoIGV4cHIsIG51bGwsIG51bGwsIGVsZW1lbnRzICk7Cn07CgpTaXp6bGUubWF0Y2hlc1NlbGVjdG9yID0gZnVuY3Rpb24oIGVsZW0sIGV4cHIgKSB7CglzZXREb2N1bWVudCggZWxlbSApOwoKCWlmICggc3VwcG9ydC5tYXRjaGVzU2VsZWN0b3IgJiYgZG9jdW1lbnRJc0hUTUwgJiYKCQkhbm9ubmF0aXZlU2VsZWN0b3JDYWNoZVsgZXhwciArICIgIiBdICYmCgkJKCAhcmJ1Z2d5TWF0Y2hlcyB8fCAhcmJ1Z2d5TWF0Y2hlcy50ZXN0KCBleHByICkgKSAmJgoJCSggIXJidWdneVFTQSAgICAgfHwgIXJidWdneVFTQS50ZXN0KCBleHByICkgKSApIHsKCgkJdHJ5IHsKCQkJdmFyIHJldCA9IG1hdGNoZXMuY2FsbCggZWxlbSwgZXhwciApOwoKCQkJLy8gSUUgOSdzIG1hdGNoZXNTZWxlY3RvciByZXR1cm5zIGZhbHNlIG9uIGRpc2Nvbm5lY3RlZCBub2RlcwoJCQlpZiAoIHJldCB8fCBzdXBwb3J0LmRpc2Nvbm5lY3RlZE1hdGNoIHx8CgoJCQkJLy8gQXMgd2VsbCwgZGlzY29ubmVjdGVkIG5vZGVzIGFyZSBzYWlkIHRvIGJlIGluIGEgZG9jdW1lbnQKCQkJCS8vIGZyYWdtZW50IGluIElFIDkKCQkJCWVsZW0uZG9jdW1lbnQgJiYgZWxlbS5kb2N1bWVudC5ub2RlVHlwZSAhPT0gMTEgKSB7CgkJCQlyZXR1cm4gcmV0OwoJCQl9CgkJfSBjYXRjaCAoIGUgKSB7CgkJCW5vbm5hdGl2ZVNlbGVjdG9yQ2FjaGUoIGV4cHIsIHRydWUgKTsKCQl9Cgl9CgoJcmV0dXJuIFNpenpsZSggZXhwciwgZG9jdW1lbnQsIG51bGwsIFsgZWxlbSBdICkubGVuZ3RoID4gMDsKfTsKClNpenpsZS5jb250YWlucyA9IGZ1bmN0aW9uKCBjb250ZXh0LCBlbGVtICkgewoKCS8vIFNldCBkb2N1bWVudCB2YXJzIGlmIG5lZWRlZAoJLy8gU3VwcG9ydDogSUUgMTErLCBFZGdlIDE3IC0gMTgrCgkvLyBJRS9FZGdlIHNvbWV0aW1lcyB0aHJvdyBhICJQZXJtaXNzaW9uIGRlbmllZCIgZXJyb3Igd2hlbiBzdHJpY3QtY29tcGFyaW5nCgkvLyB0d28gZG9jdW1lbnRzOyBzaGFsbG93IGNvbXBhcmlzb25zIHdvcmsuCgkvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgZXFlcWVxCglpZiAoICggY29udGV4dC5vd25lckRvY3VtZW50IHx8IGNvbnRleHQgKSAhPSBkb2N1bWVudCApIHsKCQlzZXREb2N1bWVudCggY29udGV4dCApOwoJfQoJcmV0dXJuIGNvbnRhaW5zKCBjb250ZXh0LCBlbGVtICk7Cn07CgpTaXp6bGUuYXR0ciA9IGZ1bmN0aW9uKCBlbGVtLCBuYW1lICkgewoKCS8vIFNldCBkb2N1bWVudCB2YXJzIGlmIG5lZWRlZAoJLy8gU3VwcG9ydDogSUUgMTErLCBFZGdlIDE3IC0gMTgrCgkvLyBJRS9FZGdlIHNvbWV0aW1lcyB0aHJvdyBhICJQZXJtaXNzaW9uIGRlbmllZCIgZXJyb3Igd2hlbiBzdHJpY3QtY29tcGFyaW5nCgkvLyB0d28gZG9jdW1lbnRzOyBzaGFsbG93IGNvbXBhcmlzb25zIHdvcmsuCgkvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgZXFlcWVxCglpZiAoICggZWxlbS5vd25lckRvY3VtZW50IHx8IGVsZW0gKSAhPSBkb2N1bWVudCApIHsKCQlzZXREb2N1bWVudCggZWxlbSApOwoJfQoKCXZhciBmbiA9IEV4cHIuYXR0ckhhbmRsZVsgbmFtZS50b0xvd2VyQ2FzZSgpIF0sCgoJCS8vIERvbid0IGdldCBmb29sZWQgYnkgT2JqZWN0LnByb3RvdHlwZSBwcm9wZXJ0aWVzIChqUXVlcnkgIzEzODA3KQoJCXZhbCA9IGZuICYmIGhhc093bi5jYWxsKCBFeHByLmF0dHJIYW5kbGUsIG5hbWUudG9Mb3dlckNhc2UoKSApID8KCQkJZm4oIGVsZW0sIG5hbWUsICFkb2N1bWVudElzSFRNTCApIDoKCQkJdW5kZWZpbmVkOwoKCXJldHVybiB2YWwgIT09IHVuZGVmaW5lZCA/CgkJdmFsIDoKCQlzdXBwb3J0LmF0dHJpYnV0ZXMgfHwgIWRvY3VtZW50SXNIVE1MID8KCQkJZWxlbS5nZXRBdHRyaWJ1dGUoIG5hbWUgKSA6CgkJCSggdmFsID0gZWxlbS5nZXRBdHRyaWJ1dGVOb2RlKCBuYW1lICkgKSAmJiB2YWwuc3BlY2lmaWVkID8KCQkJCXZhbC52YWx1ZSA6CgkJCQludWxsOwp9OwoKU2l6emxlLmVzY2FwZSA9IGZ1bmN0aW9uKCBzZWwgKSB7CglyZXR1cm4gKCBzZWwgKyAiIiApLnJlcGxhY2UoIHJjc3Nlc2NhcGUsIGZjc3Nlc2NhcGUgKTsKfTsKClNpenpsZS5lcnJvciA9IGZ1bmN0aW9uKCBtc2cgKSB7Cgl0aHJvdyBuZXcgRXJyb3IoICJTeW50YXggZXJyb3IsIHVucmVjb2duaXplZCBleHByZXNzaW9uOiAiICsgbXNnICk7Cn07CgovKioKICogRG9jdW1lbnQgc29ydGluZyBhbmQgcmVtb3ZpbmcgZHVwbGljYXRlcwogKiBAcGFyYW0ge0FycmF5TGlrZX0gcmVzdWx0cwogKi8KU2l6emxlLnVuaXF1ZVNvcnQgPSBmdW5jdGlvbiggcmVzdWx0cyApIHsKCXZhciBlbGVtLAoJCWR1cGxpY2F0ZXMgPSBbXSwKCQlqID0gMCwKCQlpID0gMDsKCgkvLyBVbmxlc3Mgd2UgKmtub3cqIHdlIGNhbiBkZXRlY3QgZHVwbGljYXRlcywgYXNzdW1lIHRoZWlyIHByZXNlbmNlCgloYXNEdXBsaWNhdGUgPSAhc3VwcG9ydC5kZXRlY3REdXBsaWNhdGVzOwoJc29ydElucHV0ID0gIXN1cHBvcnQuc29ydFN0YWJsZSAmJiByZXN1bHRzLnNsaWNlKCAwICk7CglyZXN1bHRzLnNvcnQoIHNvcnRPcmRlciApOwoKCWlmICggaGFzRHVwbGljYXRlICkgewoJCXdoaWxlICggKCBlbGVtID0gcmVzdWx0c1sgaSsrIF0gKSApIHsKCQkJaWYgKCBlbGVtID09PSByZXN1bHRzWyBpIF0gKSB7CgkJCQlqID0gZHVwbGljYXRlcy5wdXNoKCBpICk7CgkJCX0KCQl9CgkJd2hpbGUgKCBqLS0gKSB7CgkJCXJlc3VsdHMuc3BsaWNlKCBkdXBsaWNhdGVzWyBqIF0sIDEgKTsKCQl9Cgl9CgoJLy8gQ2xlYXIgaW5wdXQgYWZ0ZXIgc29ydGluZyB0byByZWxlYXNlIG9iamVjdHMKCS8vIFNlZSBodHRwczovL2dpdGh1Yi5jb20vanF1ZXJ5L3NpenpsZS9wdWxsLzIyNQoJc29ydElucHV0ID0gbnVsbDsKCglyZXR1cm4gcmVzdWx0czsKfTsKCi8qKgogKiBVdGlsaXR5IGZ1bmN0aW9uIGZvciByZXRyaWV2aW5nIHRoZSB0ZXh0IHZhbHVlIG9mIGFuIGFycmF5IG9mIERPTSBub2RlcwogKiBAcGFyYW0ge0FycmF5fEVsZW1lbnR9IGVsZW0KICovCmdldFRleHQgPSBTaXp6bGUuZ2V0VGV4dCA9IGZ1bmN0aW9uKCBlbGVtICkgewoJdmFyIG5vZGUsCgkJcmV0ID0gIiIsCgkJaSA9IDAsCgkJbm9kZVR5cGUgPSBlbGVtLm5vZGVUeXBlOwoKCWlmICggIW5vZGVUeXBlICkgewoKCQkvLyBJZiBubyBub2RlVHlwZSwgdGhpcyBpcyBleHBlY3RlZCB0byBiZSBhbiBhcnJheQoJCXdoaWxlICggKCBub2RlID0gZWxlbVsgaSsrIF0gKSApIHsKCgkJCS8vIERvIG5vdCB0cmF2ZXJzZSBjb21tZW50IG5vZGVzCgkJCXJldCArPSBnZXRUZXh0KCBub2RlICk7CgkJfQoJfSBlbHNlIGlmICggbm9kZVR5cGUgPT09IDEgfHwgbm9kZVR5cGUgPT09IDkgfHwgbm9kZVR5cGUgPT09IDExICkgewoKCQkvLyBVc2UgdGV4dENvbnRlbnQgZm9yIGVsZW1lbnRzCgkJLy8gaW5uZXJUZXh0IHVzYWdlIHJlbW92ZWQgZm9yIGNvbnNpc3RlbmN5IG9mIG5ldyBsaW5lcyAoalF1ZXJ5ICMxMTE1MykKCQlpZiAoIHR5cGVvZiBlbGVtLnRleHRDb250ZW50ID09PSAic3RyaW5nIiApIHsKCQkJcmV0dXJuIGVsZW0udGV4dENvbnRlbnQ7CgkJfSBlbHNlIHsKCgkJCS8vIFRyYXZlcnNlIGl0cyBjaGlsZHJlbgoJCQlmb3IgKCBlbGVtID0gZWxlbS5maXJzdENoaWxkOyBlbGVtOyBlbGVtID0gZWxlbS5uZXh0U2libGluZyApIHsKCQkJCXJldCArPSBnZXRUZXh0KCBlbGVtICk7CgkJCX0KCQl9Cgl9IGVsc2UgaWYgKCBub2RlVHlwZSA9PT0gMyB8fCBub2RlVHlwZSA9PT0gNCApIHsKCQlyZXR1cm4gZWxlbS5ub2RlVmFsdWU7Cgl9CgoJLy8gRG8gbm90IGluY2x1ZGUgY29tbWVudCBvciBwcm9jZXNzaW5nIGluc3RydWN0aW9uIG5vZGVzCgoJcmV0dXJuIHJldDsKfTsKCkV4cHIgPSBTaXp6bGUuc2VsZWN0b3JzID0gewoKCS8vIENhbiBiZSBhZGp1c3RlZCBieSB0aGUgdXNlcgoJY2FjaGVMZW5ndGg6IDUwLAoKCWNyZWF0ZVBzZXVkbzogbWFya0Z1bmN0aW9uLAoKCW1hdGNoOiBtYXRjaEV4cHIsCgoJYXR0ckhhbmRsZToge30sCgoJZmluZDoge30sCgoJcmVsYXRpdmU6IHsKCQkiPiI6IHsgZGlyOiAicGFyZW50Tm9kZSIsIGZpcnN0OiB0cnVlIH0sCgkJIiAiOiB7IGRpcjogInBhcmVudE5vZGUiIH0sCgkJIisiOiB7IGRpcjogInByZXZpb3VzU2libGluZyIsIGZpcnN0OiB0cnVlIH0sCgkJIn4iOiB7IGRpcjogInByZXZpb3VzU2libGluZyIgfQoJfSwKCglwcmVGaWx0ZXI6IHsKCQkiQVRUUiI6IGZ1bmN0aW9uKCBtYXRjaCApIHsKCQkJbWF0Y2hbIDEgXSA9IG1hdGNoWyAxIF0ucmVwbGFjZSggcnVuZXNjYXBlLCBmdW5lc2NhcGUgKTsKCgkJCS8vIE1vdmUgdGhlIGdpdmVuIHZhbHVlIHRvIG1hdGNoWzNdIHdoZXRoZXIgcXVvdGVkIG9yIHVucXVvdGVkCgkJCW1hdGNoWyAzIF0gPSAoIG1hdGNoWyAzIF0gfHwgbWF0Y2hbIDQgXSB8fAoJCQkJbWF0Y2hbIDUgXSB8fCAiIiApLnJlcGxhY2UoIHJ1bmVzY2FwZSwgZnVuZXNjYXBlICk7CgoJCQlpZiAoIG1hdGNoWyAyIF0gPT09ICJ+PSIgKSB7CgkJCQltYXRjaFsgMyBdID0gIiAiICsgbWF0Y2hbIDMgXSArICIgIjsKCQkJfQoKCQkJcmV0dXJuIG1hdGNoLnNsaWNlKCAwLCA0ICk7CgkJfSwKCgkJIkNISUxEIjogZnVuY3Rpb24oIG1hdGNoICkgewoKCQkJLyogbWF0Y2hlcyBmcm9tIG1hdGNoRXhwclsiQ0hJTEQiXQoJCQkJMSB0eXBlIChvbmx5fG50aHwuLi4pCgkJCQkyIHdoYXQgKGNoaWxkfG9mLXR5cGUpCgkJCQkzIGFyZ3VtZW50IChldmVufG9kZHxcZCp8XGQqbihbKy1dXGQrKT98Li4uKQoJCQkJNCB4bi1jb21wb25lbnQgb2YgeG4reSBhcmd1bWVudCAoWystXT9cZCpufCkKCQkJCTUgc2lnbiBvZiB4bi1jb21wb25lbnQKCQkJCTYgeCBvZiB4bi1jb21wb25lbnQKCQkJCTcgc2lnbiBvZiB5LWNvbXBvbmVudAoJCQkJOCB5IG9mIHktY29tcG9uZW50CgkJCSovCgkJCW1hdGNoWyAxIF0gPSBtYXRjaFsgMSBdLnRvTG93ZXJDYXNlKCk7CgoJCQlpZiAoIG1hdGNoWyAxIF0uc2xpY2UoIDAsIDMgKSA9PT0gIm50aCIgKSB7CgoJCQkJLy8gbnRoLSogcmVxdWlyZXMgYXJndW1lbnQKCQkJCWlmICggIW1hdGNoWyAzIF0gKSB7CgkJCQkJU2l6emxlLmVycm9yKCBtYXRjaFsgMCBdICk7CgkJCQl9CgoJCQkJLy8gbnVtZXJpYyB4IGFuZCB5IHBhcmFtZXRlcnMgZm9yIEV4cHIuZmlsdGVyLkNISUxECgkJCQkvLyByZW1lbWJlciB0aGF0IGZhbHNlL3RydWUgY2FzdCByZXNwZWN0aXZlbHkgdG8gMC8xCgkJCQltYXRjaFsgNCBdID0gKyggbWF0Y2hbIDQgXSA/CgkJCQkJbWF0Y2hbIDUgXSArICggbWF0Y2hbIDYgXSB8fCAxICkgOgoJCQkJCTIgKiAoIG1hdGNoWyAzIF0gPT09ICJldmVuIiB8fCBtYXRjaFsgMyBdID09PSAib2RkIiApICk7CgkJCQltYXRjaFsgNSBdID0gKyggKCBtYXRjaFsgNyBdICsgbWF0Y2hbIDggXSApIHx8IG1hdGNoWyAzIF0gPT09ICJvZGQiICk7CgoJCQkJLy8gb3RoZXIgdHlwZXMgcHJvaGliaXQgYXJndW1lbnRzCgkJCX0gZWxzZSBpZiAoIG1hdGNoWyAzIF0gKSB7CgkJCQlTaXp6bGUuZXJyb3IoIG1hdGNoWyAwIF0gKTsKCQkJfQoKCQkJcmV0dXJuIG1hdGNoOwoJCX0sCgoJCSJQU0VVRE8iOiBmdW5jdGlvbiggbWF0Y2ggKSB7CgkJCXZhciBleGNlc3MsCgkJCQl1bnF1b3RlZCA9ICFtYXRjaFsgNiBdICYmIG1hdGNoWyAyIF07CgoJCQlpZiAoIG1hdGNoRXhwclsgIkNISUxEIiBdLnRlc3QoIG1hdGNoWyAwIF0gKSApIHsKCQkJCXJldHVybiBudWxsOwoJCQl9CgoJCQkvLyBBY2NlcHQgcXVvdGVkIGFyZ3VtZW50cyBhcy1pcwoJCQlpZiAoIG1hdGNoWyAzIF0gKSB7CgkJCQltYXRjaFsgMiBdID0gbWF0Y2hbIDQgXSB8fCBtYXRjaFsgNSBdIHx8ICIiOwoKCQkJLy8gU3RyaXAgZXhjZXNzIGNoYXJhY3RlcnMgZnJvbSB1bnF1b3RlZCBhcmd1bWVudHMKCQkJfSBlbHNlIGlmICggdW5xdW90ZWQgJiYgcnBzZXVkby50ZXN0KCB1bnF1b3RlZCApICYmCgoJCQkJLy8gR2V0IGV4Y2VzcyBmcm9tIHRva2VuaXplIChyZWN1cnNpdmVseSkKCQkJCSggZXhjZXNzID0gdG9rZW5pemUoIHVucXVvdGVkLCB0cnVlICkgKSAmJgoKCQkJCS8vIGFkdmFuY2UgdG8gdGhlIG5leHQgY2xvc2luZyBwYXJlbnRoZXNpcwoJCQkJKCBleGNlc3MgPSB1bnF1b3RlZC5pbmRleE9mKCAiKSIsIHVucXVvdGVkLmxlbmd0aCAtIGV4Y2VzcyApIC0gdW5xdW90ZWQubGVuZ3RoICkgKSB7CgoJCQkJLy8gZXhjZXNzIGlzIGEgbmVnYXRpdmUgaW5kZXgKCQkJCW1hdGNoWyAwIF0gPSBtYXRjaFsgMCBdLnNsaWNlKCAwLCBleGNlc3MgKTsKCQkJCW1hdGNoWyAyIF0gPSB1bnF1b3RlZC5zbGljZSggMCwgZXhjZXNzICk7CgkJCX0KCgkJCS8vIFJldHVybiBvbmx5IGNhcHR1cmVzIG5lZWRlZCBieSB0aGUgcHNldWRvIGZpbHRlciBtZXRob2QgKHR5cGUgYW5kIGFyZ3VtZW50KQoJCQlyZXR1cm4gbWF0Y2guc2xpY2UoIDAsIDMgKTsKCQl9Cgl9LAoKCWZpbHRlcjogewoKCQkiVEFHIjogZnVuY3Rpb24oIG5vZGVOYW1lU2VsZWN0b3IgKSB7CgkJCXZhciBub2RlTmFtZSA9IG5vZGVOYW1lU2VsZWN0b3IucmVwbGFjZSggcnVuZXNjYXBlLCBmdW5lc2NhcGUgKS50b0xvd2VyQ2FzZSgpOwoJCQlyZXR1cm4gbm9kZU5hbWVTZWxlY3RvciA9PT0gIioiID8KCQkJCWZ1bmN0aW9uKCkgewoJCQkJCXJldHVybiB0cnVlOwoJCQkJfSA6CgkJCQlmdW5jdGlvbiggZWxlbSApIHsKCQkJCQlyZXR1cm4gZWxlbS5ub2RlTmFtZSAmJiBlbGVtLm5vZGVOYW1lLnRvTG93ZXJDYXNlKCkgPT09IG5vZGVOYW1lOwoJCQkJfTsKCQl9LAoKCQkiQ0xBU1MiOiBmdW5jdGlvbiggY2xhc3NOYW1lICkgewoJCQl2YXIgcGF0dGVybiA9IGNsYXNzQ2FjaGVbIGNsYXNzTmFtZSArICIgIiBdOwoKCQkJcmV0dXJuIHBhdHRlcm4gfHwKCQkJCSggcGF0dGVybiA9IG5ldyBSZWdFeHAoICIoXnwiICsgd2hpdGVzcGFjZSArCgkJCQkJIikiICsgY2xhc3NOYW1lICsgIigiICsgd2hpdGVzcGFjZSArICJ8JCkiICkgKSAmJiBjbGFzc0NhY2hlKAoJCQkJCQljbGFzc05hbWUsIGZ1bmN0aW9uKCBlbGVtICkgewoJCQkJCQkJcmV0dXJuIHBhdHRlcm4udGVzdCgKCQkJCQkJCQl0eXBlb2YgZWxlbS5jbGFzc05hbWUgPT09ICJzdHJpbmciICYmIGVsZW0uY2xhc3NOYW1lIHx8CgkJCQkJCQkJdHlwZW9mIGVsZW0uZ2V0QXR0cmlidXRlICE9PSAidW5kZWZpbmVkIiAmJgoJCQkJCQkJCQllbGVtLmdldEF0dHJpYnV0ZSggImNsYXNzIiApIHx8CgkJCQkJCQkJIiIKCQkJCQkJCSk7CgkJCQl9ICk7CgkJfSwKCgkJIkFUVFIiOiBmdW5jdGlvbiggbmFtZSwgb3BlcmF0b3IsIGNoZWNrICkgewoJCQlyZXR1cm4gZnVuY3Rpb24oIGVsZW0gKSB7CgkJCQl2YXIgcmVzdWx0ID0gU2l6emxlLmF0dHIoIGVsZW0sIG5hbWUgKTsKCgkJCQlpZiAoIHJlc3VsdCA9PSBudWxsICkgewoJCQkJCXJldHVybiBvcGVyYXRvciA9PT0gIiE9IjsKCQkJCX0KCQkJCWlmICggIW9wZXJhdG9yICkgewoJCQkJCXJldHVybiB0cnVlOwoJCQkJfQoKCQkJCXJlc3VsdCArPSAiIjsKCgkJCQkvKiBlc2xpbnQtZGlzYWJsZSBtYXgtbGVuICovCgoJCQkJcmV0dXJuIG9wZXJhdG9yID09PSAiPSIgPyByZXN1bHQgPT09IGNoZWNrIDoKCQkJCQlvcGVyYXRvciA9PT0gIiE9IiA/IHJlc3VsdCAhPT0gY2hlY2sgOgoJCQkJCW9wZXJhdG9yID09PSAiXj0iID8gY2hlY2sgJiYgcmVzdWx0LmluZGV4T2YoIGNoZWNrICkgPT09IDAgOgoJCQkJCW9wZXJhdG9yID09PSAiKj0iID8gY2hlY2sgJiYgcmVzdWx0LmluZGV4T2YoIGNoZWNrICkgPiAtMSA6CgkJCQkJb3BlcmF0b3IgPT09ICIkPSIgPyBjaGVjayAmJiByZXN1bHQuc2xpY2UoIC1jaGVjay5sZW5ndGggKSA9PT0gY2hlY2sgOgoJCQkJCW9wZXJhdG9yID09PSAifj0iID8gKCAiICIgKyByZXN1bHQucmVwbGFjZSggcndoaXRlc3BhY2UsICIgIiApICsgIiAiICkuaW5kZXhPZiggY2hlY2sgKSA+IC0xIDoKCQkJCQlvcGVyYXRvciA9PT0gInw9IiA/IHJlc3VsdCA9PT0gY2hlY2sgfHwgcmVzdWx0LnNsaWNlKCAwLCBjaGVjay5sZW5ndGggKyAxICkgPT09IGNoZWNrICsgIi0iIDoKCQkJCQlmYWxzZTsKCQkJCS8qIGVzbGludC1lbmFibGUgbWF4LWxlbiAqLwoKCQkJfTsKCQl9LAoKCQkiQ0hJTEQiOiBmdW5jdGlvbiggdHlwZSwgd2hhdCwgX2FyZ3VtZW50LCBmaXJzdCwgbGFzdCApIHsKCQkJdmFyIHNpbXBsZSA9IHR5cGUuc2xpY2UoIDAsIDMgKSAhPT0gIm50aCIsCgkJCQlmb3J3YXJkID0gdHlwZS5zbGljZSggLTQgKSAhPT0gImxhc3QiLAoJCQkJb2ZUeXBlID0gd2hhdCA9PT0gIm9mLXR5cGUiOwoKCQkJcmV0dXJuIGZpcnN0ID09PSAxICYmIGxhc3QgPT09IDAgPwoKCQkJCS8vIFNob3J0Y3V0IGZvciA6bnRoLSoobikKCQkJCWZ1bmN0aW9uKCBlbGVtICkgewoJCQkJCXJldHVybiAhIWVsZW0ucGFyZW50Tm9kZTsKCQkJCX0gOgoKCQkJCWZ1bmN0aW9uKCBlbGVtLCBfY29udGV4dCwgeG1sICkgewoJCQkJCXZhciBjYWNoZSwgdW5pcXVlQ2FjaGUsIG91dGVyQ2FjaGUsIG5vZGUsIG5vZGVJbmRleCwgc3RhcnQsCgkJCQkJCWRpciA9IHNpbXBsZSAhPT0gZm9yd2FyZCA/ICJuZXh0U2libGluZyIgOiAicHJldmlvdXNTaWJsaW5nIiwKCQkJCQkJcGFyZW50ID0gZWxlbS5wYXJlbnROb2RlLAoJCQkJCQluYW1lID0gb2ZUeXBlICYmIGVsZW0ubm9kZU5hbWUudG9Mb3dlckNhc2UoKSwKCQkJCQkJdXNlQ2FjaGUgPSAheG1sICYmICFvZlR5cGUsCgkJCQkJCWRpZmYgPSBmYWxzZTsKCgkJCQkJaWYgKCBwYXJlbnQgKSB7CgoJCQkJCQkvLyA6KGZpcnN0fGxhc3R8b25seSktKGNoaWxkfG9mLXR5cGUpCgkJCQkJCWlmICggc2ltcGxlICkgewoJCQkJCQkJd2hpbGUgKCBkaXIgKSB7CgkJCQkJCQkJbm9kZSA9IGVsZW07CgkJCQkJCQkJd2hpbGUgKCAoIG5vZGUgPSBub2RlWyBkaXIgXSApICkgewoJCQkJCQkJCQlpZiAoIG9mVHlwZSA/CgkJCQkJCQkJCQlub2RlLm5vZGVOYW1lLnRvTG93ZXJDYXNlKCkgPT09IG5hbWUgOgoJCQkJCQkJCQkJbm9kZS5ub2RlVHlwZSA9PT0gMSApIHsKCgkJCQkJCQkJCQlyZXR1cm4gZmFsc2U7CgkJCQkJCQkJCX0KCQkJCQkJCQl9CgoJCQkJCQkJCS8vIFJldmVyc2UgZGlyZWN0aW9uIGZvciA6b25seS0qIChpZiB3ZSBoYXZlbid0IHlldCBkb25lIHNvKQoJCQkJCQkJCXN0YXJ0ID0gZGlyID0gdHlwZSA9PT0gIm9ubHkiICYmICFzdGFydCAmJiAibmV4dFNpYmxpbmciOwoJCQkJCQkJfQoJCQkJCQkJcmV0dXJuIHRydWU7CgkJCQkJCX0KCgkJCQkJCXN0YXJ0ID0gWyBmb3J3YXJkID8gcGFyZW50LmZpcnN0Q2hpbGQgOiBwYXJlbnQubGFzdENoaWxkIF07CgoJCQkJCQkvLyBub24teG1sIDpudGgtY2hpbGQoLi4uKSBzdG9yZXMgY2FjaGUgZGF0YSBvbiBgcGFyZW50YAoJCQkJCQlpZiAoIGZvcndhcmQgJiYgdXNlQ2FjaGUgKSB7CgoJCQkJCQkJLy8gU2VlayBgZWxlbWAgZnJvbSBhIHByZXZpb3VzbHktY2FjaGVkIGluZGV4CgoJCQkJCQkJLy8gLi4uaW4gYSBnemlwLWZyaWVuZGx5IHdheQoJCQkJCQkJbm9kZSA9IHBhcmVudDsKCQkJCQkJCW91dGVyQ2FjaGUgPSBub2RlWyBleHBhbmRvIF0gfHwgKCBub2RlWyBleHBhbmRvIF0gPSB7fSApOwoKCQkJCQkJCS8vIFN1cHBvcnQ6IElFIDw5IG9ubHkKCQkJCQkJCS8vIERlZmVuZCBhZ2FpbnN0IGNsb25lZCBhdHRyb3BlcnRpZXMgKGpRdWVyeSBnaC0xNzA5KQoJCQkJCQkJdW5pcXVlQ2FjaGUgPSBvdXRlckNhY2hlWyBub2RlLnVuaXF1ZUlEIF0gfHwKCQkJCQkJCQkoIG91dGVyQ2FjaGVbIG5vZGUudW5pcXVlSUQgXSA9IHt9ICk7CgoJCQkJCQkJY2FjaGUgPSB1bmlxdWVDYWNoZVsgdHlwZSBdIHx8IFtdOwoJCQkJCQkJbm9kZUluZGV4ID0gY2FjaGVbIDAgXSA9PT0gZGlycnVucyAmJiBjYWNoZVsgMSBdOwoJCQkJCQkJZGlmZiA9IG5vZGVJbmRleCAmJiBjYWNoZVsgMiBdOwoJCQkJCQkJbm9kZSA9IG5vZGVJbmRleCAmJiBwYXJlbnQuY2hpbGROb2Rlc1sgbm9kZUluZGV4IF07CgoJCQkJCQkJd2hpbGUgKCAoIG5vZGUgPSArK25vZGVJbmRleCAmJiBub2RlICYmIG5vZGVbIGRpciBdIHx8CgoJCQkJCQkJCS8vIEZhbGxiYWNrIHRvIHNlZWtpbmcgYGVsZW1gIGZyb20gdGhlIHN0YXJ0CgkJCQkJCQkJKCBkaWZmID0gbm9kZUluZGV4ID0gMCApIHx8IHN0YXJ0LnBvcCgpICkgKSB7CgoJCQkJCQkJCS8vIFdoZW4gZm91bmQsIGNhY2hlIGluZGV4ZXMgb24gYHBhcmVudGAgYW5kIGJyZWFrCgkJCQkJCQkJaWYgKCBub2RlLm5vZGVUeXBlID09PSAxICYmICsrZGlmZiAmJiBub2RlID09PSBlbGVtICkgewoJCQkJCQkJCQl1bmlxdWVDYWNoZVsgdHlwZSBdID0gWyBkaXJydW5zLCBub2RlSW5kZXgsIGRpZmYgXTsKCQkJCQkJCQkJYnJlYWs7CgkJCQkJCQkJfQoJCQkJCQkJfQoKCQkJCQkJfSBlbHNlIHsKCgkJCQkJCQkvLyBVc2UgcHJldmlvdXNseS1jYWNoZWQgZWxlbWVudCBpbmRleCBpZiBhdmFpbGFibGUKCQkJCQkJCWlmICggdXNlQ2FjaGUgKSB7CgoJCQkJCQkJCS8vIC4uLmluIGEgZ3ppcC1mcmllbmRseSB3YXkKCQkJCQkJCQlub2RlID0gZWxlbTsKCQkJCQkJCQlvdXRlckNhY2hlID0gbm9kZVsgZXhwYW5kbyBdIHx8ICggbm9kZVsgZXhwYW5kbyBdID0ge30gKTsKCgkJCQkJCQkJLy8gU3VwcG9ydDogSUUgPDkgb25seQoJCQkJCQkJCS8vIERlZmVuZCBhZ2FpbnN0IGNsb25lZCBhdHRyb3BlcnRpZXMgKGpRdWVyeSBnaC0xNzA5KQoJCQkJCQkJCXVuaXF1ZUNhY2hlID0gb3V0ZXJDYWNoZVsgbm9kZS51bmlxdWVJRCBdIHx8CgkJCQkJCQkJCSggb3V0ZXJDYWNoZVsgbm9kZS51bmlxdWVJRCBdID0ge30gKTsKCgkJCQkJCQkJY2FjaGUgPSB1bmlxdWVDYWNoZVsgdHlwZSBdIHx8IFtdOwoJCQkJCQkJCW5vZGVJbmRleCA9IGNhY2hlWyAwIF0gPT09IGRpcnJ1bnMgJiYgY2FjaGVbIDEgXTsKCQkJCQkJCQlkaWZmID0gbm9kZUluZGV4OwoJCQkJCQkJfQoKCQkJCQkJCS8vIHhtbCA6bnRoLWNoaWxkKC4uLikKCQkJCQkJCS8vIG9yIDpudGgtbGFzdC1jaGlsZCguLi4pIG9yIDpudGgoLWxhc3QpPy1vZi10eXBlKC4uLikKCQkJCQkJCWlmICggZGlmZiA9PT0gZmFsc2UgKSB7CgoJCQkJCQkJCS8vIFVzZSB0aGUgc2FtZSBsb29wIGFzIGFib3ZlIHRvIHNlZWsgYGVsZW1gIGZyb20gdGhlIHN0YXJ0CgkJCQkJCQkJd2hpbGUgKCAoIG5vZGUgPSArK25vZGVJbmRleCAmJiBub2RlICYmIG5vZGVbIGRpciBdIHx8CgkJCQkJCQkJCSggZGlmZiA9IG5vZGVJbmRleCA9IDAgKSB8fCBzdGFydC5wb3AoKSApICkgewoKCQkJCQkJCQkJaWYgKCAoIG9mVHlwZSA/CgkJCQkJCQkJCQlub2RlLm5vZGVOYW1lLnRvTG93ZXJDYXNlKCkgPT09IG5hbWUgOgoJCQkJCQkJCQkJbm9kZS5ub2RlVHlwZSA9PT0gMSApICYmCgkJCQkJCQkJCQkrK2RpZmYgKSB7CgoJCQkJCQkJCQkJLy8gQ2FjaGUgdGhlIGluZGV4IG9mIGVhY2ggZW5jb3VudGVyZWQgZWxlbWVudAoJCQkJCQkJCQkJaWYgKCB1c2VDYWNoZSApIHsKCQkJCQkJCQkJCQlvdXRlckNhY2hlID0gbm9kZVsgZXhwYW5kbyBdIHx8CgkJCQkJCQkJCQkJCSggbm9kZVsgZXhwYW5kbyBdID0ge30gKTsKCgkJCQkJCQkJCQkJLy8gU3VwcG9ydDogSUUgPDkgb25seQoJCQkJCQkJCQkJCS8vIERlZmVuZCBhZ2FpbnN0IGNsb25lZCBhdHRyb3BlcnRpZXMgKGpRdWVyeSBnaC0xNzA5KQoJCQkJCQkJCQkJCXVuaXF1ZUNhY2hlID0gb3V0ZXJDYWNoZVsgbm9kZS51bmlxdWVJRCBdIHx8CgkJCQkJCQkJCQkJCSggb3V0ZXJDYWNoZVsgbm9kZS51bmlxdWVJRCBdID0ge30gKTsKCgkJCQkJCQkJCQkJdW5pcXVlQ2FjaGVbIHR5cGUgXSA9IFsgZGlycnVucywgZGlmZiBdOwoJCQkJCQkJCQkJfQoKCQkJCQkJCQkJCWlmICggbm9kZSA9PT0gZWxlbSApIHsKCQkJCQkJCQkJCQlicmVhazsKCQkJCQkJCQkJCX0KCQkJCQkJCQkJfQoJCQkJCQkJCX0KCQkJCQkJCX0KCQkJCQkJfQoKCQkJCQkJLy8gSW5jb3Jwb3JhdGUgdGhlIG9mZnNldCwgdGhlbiBjaGVjayBhZ2FpbnN0IGN5Y2xlIHNpemUKCQkJCQkJZGlmZiAtPSBsYXN0OwoJCQkJCQlyZXR1cm4gZGlmZiA9PT0gZmlyc3QgfHwgKCBkaWZmICUgZmlyc3QgPT09IDAgJiYgZGlmZiAvIGZpcnN0ID49IDAgKTsKCQkJCQl9CgkJCQl9OwoJCX0sCgoJCSJQU0VVRE8iOiBmdW5jdGlvbiggcHNldWRvLCBhcmd1bWVudCApIHsKCgkJCS8vIHBzZXVkby1jbGFzcyBuYW1lcyBhcmUgY2FzZS1pbnNlbnNpdGl2ZQoJCQkvLyBodHRwOi8vd3d3LnczLm9yZy9UUi9zZWxlY3RvcnMvI3BzZXVkby1jbGFzc2VzCgkJCS8vIFByaW9yaXRpemUgYnkgY2FzZSBzZW5zaXRpdml0eSBpbiBjYXNlIGN1c3RvbSBwc2V1ZG9zIGFyZSBhZGRlZCB3aXRoIHVwcGVyY2FzZSBsZXR0ZXJzCgkJCS8vIFJlbWVtYmVyIHRoYXQgc2V0RmlsdGVycyBpbmhlcml0cyBmcm9tIHBzZXVkb3MKCQkJdmFyIGFyZ3MsCgkJCQlmbiA9IEV4cHIucHNldWRvc1sgcHNldWRvIF0gfHwgRXhwci5zZXRGaWx0ZXJzWyBwc2V1ZG8udG9Mb3dlckNhc2UoKSBdIHx8CgkJCQkJU2l6emxlLmVycm9yKCAidW5zdXBwb3J0ZWQgcHNldWRvOiAiICsgcHNldWRvICk7CgoJCQkvLyBUaGUgdXNlciBtYXkgdXNlIGNyZWF0ZVBzZXVkbyB0byBpbmRpY2F0ZSB0aGF0CgkJCS8vIGFyZ3VtZW50cyBhcmUgbmVlZGVkIHRvIGNyZWF0ZSB0aGUgZmlsdGVyIGZ1bmN0aW9uCgkJCS8vIGp1c3QgYXMgU2l6emxlIGRvZXMKCQkJaWYgKCBmblsgZXhwYW5kbyBdICkgewoJCQkJcmV0dXJuIGZuKCBhcmd1bWVudCApOwoJCQl9CgoJCQkvLyBCdXQgbWFpbnRhaW4gc3VwcG9ydCBmb3Igb2xkIHNpZ25hdHVyZXMKCQkJaWYgKCBmbi5sZW5ndGggPiAxICkgewoJCQkJYXJncyA9IFsgcHNldWRvLCBwc2V1ZG8sICIiLCBhcmd1bWVudCBdOwoJCQkJcmV0dXJuIEV4cHIuc2V0RmlsdGVycy5oYXNPd25Qcm9wZXJ0eSggcHNldWRvLnRvTG93ZXJDYXNlKCkgKSA/CgkJCQkJbWFya0Z1bmN0aW9uKCBmdW5jdGlvbiggc2VlZCwgbWF0Y2hlcyApIHsKCQkJCQkJdmFyIGlkeCwKCQkJCQkJCW1hdGNoZWQgPSBmbiggc2VlZCwgYXJndW1lbnQgKSwKCQkJCQkJCWkgPSBtYXRjaGVkLmxlbmd0aDsKCQkJCQkJd2hpbGUgKCBpLS0gKSB7CgkJCQkJCQlpZHggPSBpbmRleE9mKCBzZWVkLCBtYXRjaGVkWyBpIF0gKTsKCQkJCQkJCXNlZWRbIGlkeCBdID0gISggbWF0Y2hlc1sgaWR4IF0gPSBtYXRjaGVkWyBpIF0gKTsKCQkJCQkJfQoJCQkJCX0gKSA6CgkJCQkJZnVuY3Rpb24oIGVsZW0gKSB7CgkJCQkJCXJldHVybiBmbiggZWxlbSwgMCwgYXJncyApOwoJCQkJCX07CgkJCX0KCgkJCXJldHVybiBmbjsKCQl9Cgl9LAoKCXBzZXVkb3M6IHsKCgkJLy8gUG90ZW50aWFsbHkgY29tcGxleCBwc2V1ZG9zCgkJIm5vdCI6IG1hcmtGdW5jdGlvbiggZnVuY3Rpb24oIHNlbGVjdG9yICkgewoKCQkJLy8gVHJpbSB0aGUgc2VsZWN0b3IgcGFzc2VkIHRvIGNvbXBpbGUKCQkJLy8gdG8gYXZvaWQgdHJlYXRpbmcgbGVhZGluZyBhbmQgdHJhaWxpbmcKCQkJLy8gc3BhY2VzIGFzIGNvbWJpbmF0b3JzCgkJCXZhciBpbnB1dCA9IFtdLAoJCQkJcmVzdWx0cyA9IFtdLAoJCQkJbWF0Y2hlciA9IGNvbXBpbGUoIHNlbGVjdG9yLnJlcGxhY2UoIHJ0cmltLCAiJDEiICkgKTsKCgkJCXJldHVybiBtYXRjaGVyWyBleHBhbmRvIF0gPwoJCQkJbWFya0Z1bmN0aW9uKCBmdW5jdGlvbiggc2VlZCwgbWF0Y2hlcywgX2NvbnRleHQsIHhtbCApIHsKCQkJCQl2YXIgZWxlbSwKCQkJCQkJdW5tYXRjaGVkID0gbWF0Y2hlciggc2VlZCwgbnVsbCwgeG1sLCBbXSApLAoJCQkJCQlpID0gc2VlZC5sZW5ndGg7CgoJCQkJCS8vIE1hdGNoIGVsZW1lbnRzIHVubWF0Y2hlZCBieSBgbWF0Y2hlcmAKCQkJCQl3aGlsZSAoIGktLSApIHsKCQkJCQkJaWYgKCAoIGVsZW0gPSB1bm1hdGNoZWRbIGkgXSApICkgewoJCQkJCQkJc2VlZFsgaSBdID0gISggbWF0Y2hlc1sgaSBdID0gZWxlbSApOwoJCQkJCQl9CgkJCQkJfQoJCQkJfSApIDoKCQkJCWZ1bmN0aW9uKCBlbGVtLCBfY29udGV4dCwgeG1sICkgewoJCQkJCWlucHV0WyAwIF0gPSBlbGVtOwoJCQkJCW1hdGNoZXIoIGlucHV0LCBudWxsLCB4bWwsIHJlc3VsdHMgKTsKCgkJCQkJLy8gRG9uJ3Qga2VlcCB0aGUgZWxlbWVudCAoaXNzdWUgIzI5OSkKCQkJCQlpbnB1dFsgMCBdID0gbnVsbDsKCQkJCQlyZXR1cm4gIXJlc3VsdHMucG9wKCk7CgkJCQl9OwoJCX0gKSwKCgkJImhhcyI6IG1hcmtGdW5jdGlvbiggZnVuY3Rpb24oIHNlbGVjdG9yICkgewoJCQlyZXR1cm4gZnVuY3Rpb24oIGVsZW0gKSB7CgkJCQlyZXR1cm4gU2l6emxlKCBzZWxlY3RvciwgZWxlbSApLmxlbmd0aCA+IDA7CgkJCX07CgkJfSApLAoKCQkiY29udGFpbnMiOiBtYXJrRnVuY3Rpb24oIGZ1bmN0aW9uKCB0ZXh0ICkgewoJCQl0ZXh0ID0gdGV4dC5yZXBsYWNlKCBydW5lc2NhcGUsIGZ1bmVzY2FwZSApOwoJCQlyZXR1cm4gZnVuY3Rpb24oIGVsZW0gKSB7CgkJCQlyZXR1cm4gKCBlbGVtLnRleHRDb250ZW50IHx8IGdldFRleHQoIGVsZW0gKSApLmluZGV4T2YoIHRleHQgKSA+IC0xOwoJCQl9OwoJCX0gKSwKCgkJLy8gIldoZXRoZXIgYW4gZWxlbWVudCBpcyByZXByZXNlbnRlZCBieSBhIDpsYW5nKCkgc2VsZWN0b3IKCQkvLyBpcyBiYXNlZCBzb2xlbHkgb24gdGhlIGVsZW1lbnQncyBsYW5ndWFnZSB2YWx1ZQoJCS8vIGJlaW5nIGVxdWFsIHRvIHRoZSBpZGVudGlmaWVyIEMsCgkJLy8gb3IgYmVnaW5uaW5nIHdpdGggdGhlIGlkZW50aWZpZXIgQyBpbW1lZGlhdGVseSBmb2xsb3dlZCBieSAiLSIuCgkJLy8gVGhlIG1hdGNoaW5nIG9mIEMgYWdhaW5zdCB0aGUgZWxlbWVudCdzIGxhbmd1YWdlIHZhbHVlIGlzIHBlcmZvcm1lZCBjYXNlLWluc2Vuc2l0aXZlbHkuCgkJLy8gVGhlIGlkZW50aWZpZXIgQyBkb2VzIG5vdCBoYXZlIHRvIGJlIGEgdmFsaWQgbGFuZ3VhZ2UgbmFtZS4iCgkJLy8gaHR0cDovL3d3dy53My5vcmcvVFIvc2VsZWN0b3JzLyNsYW5nLXBzZXVkbwoJCSJsYW5nIjogbWFya0Z1bmN0aW9uKCBmdW5jdGlvbiggbGFuZyApIHsKCgkJCS8vIGxhbmcgdmFsdWUgbXVzdCBiZSBhIHZhbGlkIGlkZW50aWZpZXIKCQkJaWYgKCAhcmlkZW50aWZpZXIudGVzdCggbGFuZyB8fCAiIiApICkgewoJCQkJU2l6emxlLmVycm9yKCAidW5zdXBwb3J0ZWQgbGFuZzogIiArIGxhbmcgKTsKCQkJfQoJCQlsYW5nID0gbGFuZy5yZXBsYWNlKCBydW5lc2NhcGUsIGZ1bmVzY2FwZSApLnRvTG93ZXJDYXNlKCk7CgkJCXJldHVybiBmdW5jdGlvbiggZWxlbSApIHsKCQkJCXZhciBlbGVtTGFuZzsKCQkJCWRvIHsKCQkJCQlpZiAoICggZWxlbUxhbmcgPSBkb2N1bWVudElzSFRNTCA/CgkJCQkJCWVsZW0ubGFuZyA6CgkJCQkJCWVsZW0uZ2V0QXR0cmlidXRlKCAieG1sOmxhbmciICkgfHwgZWxlbS5nZXRBdHRyaWJ1dGUoICJsYW5nIiApICkgKSB7CgoJCQkJCQllbGVtTGFuZyA9IGVsZW1MYW5nLnRvTG93ZXJDYXNlKCk7CgkJCQkJCXJldHVybiBlbGVtTGFuZyA9PT0gbGFuZyB8fCBlbGVtTGFuZy5pbmRleE9mKCBsYW5nICsgIi0iICkgPT09IDA7CgkJCQkJfQoJCQkJfSB3aGlsZSAoICggZWxlbSA9IGVsZW0ucGFyZW50Tm9kZSApICYmIGVsZW0ubm9kZVR5cGUgPT09IDEgKTsKCQkJCXJldHVybiBmYWxzZTsKCQkJfTsKCQl9ICksCgoJCS8vIE1pc2NlbGxhbmVvdXMKCQkidGFyZ2V0IjogZnVuY3Rpb24oIGVsZW0gKSB7CgkJCXZhciBoYXNoID0gd2luZG93LmxvY2F0aW9uICYmIHdpbmRvdy5sb2NhdGlvbi5oYXNoOwoJCQlyZXR1cm4gaGFzaCAmJiBoYXNoLnNsaWNlKCAxICkgPT09IGVsZW0uaWQ7CgkJfSwKCgkJInJvb3QiOiBmdW5jdGlvbiggZWxlbSApIHsKCQkJcmV0dXJuIGVsZW0gPT09IGRvY0VsZW07CgkJfSwKCgkJImZvY3VzIjogZnVuY3Rpb24oIGVsZW0gKSB7CgkJCXJldHVybiBlbGVtID09PSBkb2N1bWVudC5hY3RpdmVFbGVtZW50ICYmCgkJCQkoICFkb2N1bWVudC5oYXNGb2N1cyB8fCBkb2N1bWVudC5oYXNGb2N1cygpICkgJiYKCQkJCSEhKCBlbGVtLnR5cGUgfHwgZWxlbS5ocmVmIHx8IH5lbGVtLnRhYkluZGV4ICk7CgkJfSwKCgkJLy8gQm9vbGVhbiBwcm9wZXJ0aWVzCgkJImVuYWJsZWQiOiBjcmVhdGVEaXNhYmxlZFBzZXVkbyggZmFsc2UgKSwKCQkiZGlzYWJsZWQiOiBjcmVhdGVEaXNhYmxlZFBzZXVkbyggdHJ1ZSApLAoKCQkiY2hlY2tlZCI6IGZ1bmN0aW9uKCBlbGVtICkgewoKCQkJLy8gSW4gQ1NTMywgOmNoZWNrZWQgc2hvdWxkIHJldHVybiBib3RoIGNoZWNrZWQgYW5kIHNlbGVjdGVkIGVsZW1lbnRzCgkJCS8vIGh0dHA6Ly93d3cudzMub3JnL1RSLzIwMTEvUkVDLWNzczMtc2VsZWN0b3JzLTIwMTEwOTI5LyNjaGVja2VkCgkJCXZhciBub2RlTmFtZSA9IGVsZW0ubm9kZU5hbWUudG9Mb3dlckNhc2UoKTsKCQkJcmV0dXJuICggbm9kZU5hbWUgPT09ICJpbnB1dCIgJiYgISFlbGVtLmNoZWNrZWQgKSB8fAoJCQkJKCBub2RlTmFtZSA9PT0gIm9wdGlvbiIgJiYgISFlbGVtLnNlbGVjdGVkICk7CgkJfSwKCgkJInNlbGVjdGVkIjogZnVuY3Rpb24oIGVsZW0gKSB7CgoJCQkvLyBBY2Nlc3NpbmcgdGhpcyBwcm9wZXJ0eSBtYWtlcyBzZWxlY3RlZC1ieS1kZWZhdWx0CgkJCS8vIG9wdGlvbnMgaW4gU2FmYXJpIHdvcmsgcHJvcGVybHkKCQkJaWYgKCBlbGVtLnBhcmVudE5vZGUgKSB7CgkJCQkvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgbm8tdW51c2VkLWV4cHJlc3Npb25zCgkJCQllbGVtLnBhcmVudE5vZGUuc2VsZWN0ZWRJbmRleDsKCQkJfQoKCQkJcmV0dXJuIGVsZW0uc2VsZWN0ZWQgPT09IHRydWU7CgkJfSwKCgkJLy8gQ29udGVudHMKCQkiZW1wdHkiOiBmdW5jdGlvbiggZWxlbSApIHsKCgkJCS8vIGh0dHA6Ly93d3cudzMub3JnL1RSL3NlbGVjdG9ycy8jZW1wdHktcHNldWRvCgkJCS8vIDplbXB0eSBpcyBuZWdhdGVkIGJ5IGVsZW1lbnQgKDEpIG9yIGNvbnRlbnQgbm9kZXMgKHRleHQ6IDM7IGNkYXRhOiA0OyBlbnRpdHkgcmVmOiA1KSwKCQkJLy8gICBidXQgbm90IGJ5IG90aGVycyAoY29tbWVudDogODsgcHJvY2Vzc2luZyBpbnN0cnVjdGlvbjogNzsgZXRjLikKCQkJLy8gbm9kZVR5cGUgPCA2IHdvcmtzIGJlY2F1c2UgYXR0cmlidXRlcyAoMikgZG8gbm90IGFwcGVhciBhcyBjaGlsZHJlbgoJCQlmb3IgKCBlbGVtID0gZWxlbS5maXJzdENoaWxkOyBlbGVtOyBlbGVtID0gZWxlbS5uZXh0U2libGluZyApIHsKCQkJCWlmICggZWxlbS5ub2RlVHlwZSA8IDYgKSB7CgkJCQkJcmV0dXJuIGZhbHNlOwoJCQkJfQoJCQl9CgkJCXJldHVybiB0cnVlOwoJCX0sCgoJCSJwYXJlbnQiOiBmdW5jdGlvbiggZWxlbSApIHsKCQkJcmV0dXJuICFFeHByLnBzZXVkb3NbICJlbXB0eSIgXSggZWxlbSApOwoJCX0sCgoJCS8vIEVsZW1lbnQvaW5wdXQgdHlwZXMKCQkiaGVhZGVyIjogZnVuY3Rpb24oIGVsZW0gKSB7CgkJCXJldHVybiByaGVhZGVyLnRlc3QoIGVsZW0ubm9kZU5hbWUgKTsKCQl9LAoKCQkiaW5wdXQiOiBmdW5jdGlvbiggZWxlbSApIHsKCQkJcmV0dXJuIHJpbnB1dHMudGVzdCggZWxlbS5ub2RlTmFtZSApOwoJCX0sCgoJCSJidXR0b24iOiBmdW5jdGlvbiggZWxlbSApIHsKCQkJdmFyIG5hbWUgPSBlbGVtLm5vZGVOYW1lLnRvTG93ZXJDYXNlKCk7CgkJCXJldHVybiBuYW1lID09PSAiaW5wdXQiICYmIGVsZW0udHlwZSA9PT0gImJ1dHRvbiIgfHwgbmFtZSA9PT0gImJ1dHRvbiI7CgkJfSwKCgkJInRleHQiOiBmdW5jdGlvbiggZWxlbSApIHsKCQkJdmFyIGF0dHI7CgkJCXJldHVybiBlbGVtLm5vZGVOYW1lLnRvTG93ZXJDYXNlKCkgPT09ICJpbnB1dCIgJiYKCQkJCWVsZW0udHlwZSA9PT0gInRleHQiICYmCgoJCQkJLy8gU3VwcG9ydDogSUUgPDEwIG9ubHkKCQkJCS8vIE5ldyBIVE1MNSBhdHRyaWJ1dGUgdmFsdWVzIChlLmcuLCAic2VhcmNoIikgYXBwZWFyIHdpdGggZWxlbS50eXBlID09PSAidGV4dCIKCQkJCSggKCBhdHRyID0gZWxlbS5nZXRBdHRyaWJ1dGUoICJ0eXBlIiApICkgPT0gbnVsbCB8fAoJCQkJCWF0dHIudG9Mb3dlckNhc2UoKSA9PT0gInRleHQiICk7CgkJfSwKCgkJLy8gUG9zaXRpb24taW4tY29sbGVjdGlvbgoJCSJmaXJzdCI6IGNyZWF0ZVBvc2l0aW9uYWxQc2V1ZG8oIGZ1bmN0aW9uKCkgewoJCQlyZXR1cm4gWyAwIF07CgkJfSApLAoKCQkibGFzdCI6IGNyZWF0ZVBvc2l0aW9uYWxQc2V1ZG8oIGZ1bmN0aW9uKCBfbWF0Y2hJbmRleGVzLCBsZW5ndGggKSB7CgkJCXJldHVybiBbIGxlbmd0aCAtIDEgXTsKCQl9ICksCgoJCSJlcSI6IGNyZWF0ZVBvc2l0aW9uYWxQc2V1ZG8oIGZ1bmN0aW9uKCBfbWF0Y2hJbmRleGVzLCBsZW5ndGgsIGFyZ3VtZW50ICkgewoJCQlyZXR1cm4gWyBhcmd1bWVudCA8IDAgPyBhcmd1bWVudCArIGxlbmd0aCA6IGFyZ3VtZW50IF07CgkJfSApLAoKCQkiZXZlbiI6IGNyZWF0ZVBvc2l0aW9uYWxQc2V1ZG8oIGZ1bmN0aW9uKCBtYXRjaEluZGV4ZXMsIGxlbmd0aCApIHsKCQkJdmFyIGkgPSAwOwoJCQlmb3IgKCA7IGkgPCBsZW5ndGg7IGkgKz0gMiApIHsKCQkJCW1hdGNoSW5kZXhlcy5wdXNoKCBpICk7CgkJCX0KCQkJcmV0dXJuIG1hdGNoSW5kZXhlczsKCQl9ICksCgoJCSJvZGQiOiBjcmVhdGVQb3NpdGlvbmFsUHNldWRvKCBmdW5jdGlvbiggbWF0Y2hJbmRleGVzLCBsZW5ndGggKSB7CgkJCXZhciBpID0gMTsKCQkJZm9yICggOyBpIDwgbGVuZ3RoOyBpICs9IDIgKSB7CgkJCQltYXRjaEluZGV4ZXMucHVzaCggaSApOwoJCQl9CgkJCXJldHVybiBtYXRjaEluZGV4ZXM7CgkJfSApLAoKCQkibHQiOiBjcmVhdGVQb3NpdGlvbmFsUHNldWRvKCBmdW5jdGlvbiggbWF0Y2hJbmRleGVzLCBsZW5ndGgsIGFyZ3VtZW50ICkgewoJCQl2YXIgaSA9IGFyZ3VtZW50IDwgMCA/CgkJCQlhcmd1bWVudCArIGxlbmd0aCA6CgkJCQlhcmd1bWVudCA+IGxlbmd0aCA/CgkJCQkJbGVuZ3RoIDoKCQkJCQlhcmd1bWVudDsKCQkJZm9yICggOyAtLWkgPj0gMDsgKSB7CgkJCQltYXRjaEluZGV4ZXMucHVzaCggaSApOwoJCQl9CgkJCXJldHVybiBtYXRjaEluZGV4ZXM7CgkJfSApLAoKCQkiZ3QiOiBjcmVhdGVQb3NpdGlvbmFsUHNldWRvKCBmdW5jdGlvbiggbWF0Y2hJbmRleGVzLCBsZW5ndGgsIGFyZ3VtZW50ICkgewoJCQl2YXIgaSA9IGFyZ3VtZW50IDwgMCA/IGFyZ3VtZW50ICsgbGVuZ3RoIDogYXJndW1lbnQ7CgkJCWZvciAoIDsgKytpIDwgbGVuZ3RoOyApIHsKCQkJCW1hdGNoSW5kZXhlcy5wdXNoKCBpICk7CgkJCX0KCQkJcmV0dXJuIG1hdGNoSW5kZXhlczsKCQl9ICkKCX0KfTsKCkV4cHIucHNldWRvc1sgIm50aCIgXSA9IEV4cHIucHNldWRvc1sgImVxIiBdOwoKLy8gQWRkIGJ1dHRvbi9pbnB1dCB0eXBlIHBzZXVkb3MKZm9yICggaSBpbiB7IHJhZGlvOiB0cnVlLCBjaGVja2JveDogdHJ1ZSwgZmlsZTogdHJ1ZSwgcGFzc3dvcmQ6IHRydWUsIGltYWdlOiB0cnVlIH0gKSB7CglFeHByLnBzZXVkb3NbIGkgXSA9IGNyZWF0ZUlucHV0UHNldWRvKCBpICk7Cn0KZm9yICggaSBpbiB7IHN1Ym1pdDogdHJ1ZSwgcmVzZXQ6IHRydWUgfSApIHsKCUV4cHIucHNldWRvc1sgaSBdID0gY3JlYXRlQnV0dG9uUHNldWRvKCBpICk7Cn0KCi8vIEVhc3kgQVBJIGZvciBjcmVhdGluZyBuZXcgc2V0RmlsdGVycwpmdW5jdGlvbiBzZXRGaWx0ZXJzKCkge30Kc2V0RmlsdGVycy5wcm90b3R5cGUgPSBFeHByLmZpbHRlcnMgPSBFeHByLnBzZXVkb3M7CkV4cHIuc2V0RmlsdGVycyA9IG5ldyBzZXRGaWx0ZXJzKCk7Cgp0b2tlbml6ZSA9IFNpenpsZS50b2tlbml6ZSA9IGZ1bmN0aW9uKCBzZWxlY3RvciwgcGFyc2VPbmx5ICkgewoJdmFyIG1hdGNoZWQsIG1hdGNoLCB0b2tlbnMsIHR5cGUsCgkJc29GYXIsIGdyb3VwcywgcHJlRmlsdGVycywKCQljYWNoZWQgPSB0b2tlbkNhY2hlWyBzZWxlY3RvciArICIgIiBdOwoKCWlmICggY2FjaGVkICkgewoJCXJldHVybiBwYXJzZU9ubHkgPyAwIDogY2FjaGVkLnNsaWNlKCAwICk7Cgl9CgoJc29GYXIgPSBzZWxlY3RvcjsKCWdyb3VwcyA9IFtdOwoJcHJlRmlsdGVycyA9IEV4cHIucHJlRmlsdGVyOwoKCXdoaWxlICggc29GYXIgKSB7CgoJCS8vIENvbW1hIGFuZCBmaXJzdCBydW4KCQlpZiAoICFtYXRjaGVkIHx8ICggbWF0Y2ggPSByY29tbWEuZXhlYyggc29GYXIgKSApICkgewoJCQlpZiAoIG1hdGNoICkgewoKCQkJCS8vIERvbid0IGNvbnN1bWUgdHJhaWxpbmcgY29tbWFzIGFzIHZhbGlkCgkJCQlzb0ZhciA9IHNvRmFyLnNsaWNlKCBtYXRjaFsgMCBdLmxlbmd0aCApIHx8IHNvRmFyOwoJCQl9CgkJCWdyb3Vwcy5wdXNoKCAoIHRva2VucyA9IFtdICkgKTsKCQl9CgoJCW1hdGNoZWQgPSBmYWxzZTsKCgkJLy8gQ29tYmluYXRvcnMKCQlpZiAoICggbWF0Y2ggPSByY29tYmluYXRvcnMuZXhlYyggc29GYXIgKSApICkgewoJCQltYXRjaGVkID0gbWF0Y2guc2hpZnQoKTsKCQkJdG9rZW5zLnB1c2goIHsKCQkJCXZhbHVlOiBtYXRjaGVkLAoKCQkJCS8vIENhc3QgZGVzY2VuZGFudCBjb21iaW5hdG9ycyB0byBzcGFjZQoJCQkJdHlwZTogbWF0Y2hbIDAgXS5yZXBsYWNlKCBydHJpbSwgIiAiICkKCQkJfSApOwoJCQlzb0ZhciA9IHNvRmFyLnNsaWNlKCBtYXRjaGVkLmxlbmd0aCApOwoJCX0KCgkJLy8gRmlsdGVycwoJCWZvciAoIHR5cGUgaW4gRXhwci5maWx0ZXIgKSB7CgkJCWlmICggKCBtYXRjaCA9IG1hdGNoRXhwclsgdHlwZSBdLmV4ZWMoIHNvRmFyICkgKSAmJiAoICFwcmVGaWx0ZXJzWyB0eXBlIF0gfHwKCQkJCSggbWF0Y2ggPSBwcmVGaWx0ZXJzWyB0eXBlIF0oIG1hdGNoICkgKSApICkgewoJCQkJbWF0Y2hlZCA9IG1hdGNoLnNoaWZ0KCk7CgkJCQl0b2tlbnMucHVzaCggewoJCQkJCXZhbHVlOiBtYXRjaGVkLAoJCQkJCXR5cGU6IHR5cGUsCgkJCQkJbWF0Y2hlczogbWF0Y2gKCQkJCX0gKTsKCQkJCXNvRmFyID0gc29GYXIuc2xpY2UoIG1hdGNoZWQubGVuZ3RoICk7CgkJCX0KCQl9CgoJCWlmICggIW1hdGNoZWQgKSB7CgkJCWJyZWFrOwoJCX0KCX0KCgkvLyBSZXR1cm4gdGhlIGxlbmd0aCBvZiB0aGUgaW52YWxpZCBleGNlc3MKCS8vIGlmIHdlJ3JlIGp1c3QgcGFyc2luZwoJLy8gT3RoZXJ3aXNlLCB0aHJvdyBhbiBlcnJvciBvciByZXR1cm4gdG9rZW5zCglyZXR1cm4gcGFyc2VPbmx5ID8KCQlzb0Zhci5sZW5ndGggOgoJCXNvRmFyID8KCQkJU2l6emxlLmVycm9yKCBzZWxlY3RvciApIDoKCgkJCS8vIENhY2hlIHRoZSB0b2tlbnMKCQkJdG9rZW5DYWNoZSggc2VsZWN0b3IsIGdyb3VwcyApLnNsaWNlKCAwICk7Cn07CgpmdW5jdGlvbiB0b1NlbGVjdG9yKCB0b2tlbnMgKSB7Cgl2YXIgaSA9IDAsCgkJbGVuID0gdG9rZW5zLmxlbmd0aCwKCQlzZWxlY3RvciA9ICIiOwoJZm9yICggOyBpIDwgbGVuOyBpKysgKSB7CgkJc2VsZWN0b3IgKz0gdG9rZW5zWyBpIF0udmFsdWU7Cgl9CglyZXR1cm4gc2VsZWN0b3I7Cn0KCmZ1bmN0aW9uIGFkZENvbWJpbmF0b3IoIG1hdGNoZXIsIGNvbWJpbmF0b3IsIGJhc2UgKSB7Cgl2YXIgZGlyID0gY29tYmluYXRvci5kaXIsCgkJc2tpcCA9IGNvbWJpbmF0b3IubmV4dCwKCQlrZXkgPSBza2lwIHx8IGRpciwKCQljaGVja05vbkVsZW1lbnRzID0gYmFzZSAmJiBrZXkgPT09ICJwYXJlbnROb2RlIiwKCQlkb25lTmFtZSA9IGRvbmUrKzsKCglyZXR1cm4gY29tYmluYXRvci5maXJzdCA/CgoJCS8vIENoZWNrIGFnYWluc3QgY2xvc2VzdCBhbmNlc3Rvci9wcmVjZWRpbmcgZWxlbWVudAoJCWZ1bmN0aW9uKCBlbGVtLCBjb250ZXh0LCB4bWwgKSB7CgkJCXdoaWxlICggKCBlbGVtID0gZWxlbVsgZGlyIF0gKSApIHsKCQkJCWlmICggZWxlbS5ub2RlVHlwZSA9PT0gMSB8fCBjaGVja05vbkVsZW1lbnRzICkgewoJCQkJCXJldHVybiBtYXRjaGVyKCBlbGVtLCBjb250ZXh0LCB4bWwgKTsKCQkJCX0KCQkJfQoJCQlyZXR1cm4gZmFsc2U7CgkJfSA6CgoJCS8vIENoZWNrIGFnYWluc3QgYWxsIGFuY2VzdG9yL3ByZWNlZGluZyBlbGVtZW50cwoJCWZ1bmN0aW9uKCBlbGVtLCBjb250ZXh0LCB4bWwgKSB7CgkJCXZhciBvbGRDYWNoZSwgdW5pcXVlQ2FjaGUsIG91dGVyQ2FjaGUsCgkJCQluZXdDYWNoZSA9IFsgZGlycnVucywgZG9uZU5hbWUgXTsKCgkJCS8vIFdlIGNhbid0IHNldCBhcmJpdHJhcnkgZGF0YSBvbiBYTUwgbm9kZXMsIHNvIHRoZXkgZG9uJ3QgYmVuZWZpdCBmcm9tIGNvbWJpbmF0b3IgY2FjaGluZwoJCQlpZiAoIHhtbCApIHsKCQkJCXdoaWxlICggKCBlbGVtID0gZWxlbVsgZGlyIF0gKSApIHsKCQkJCQlpZiAoIGVsZW0ubm9kZVR5cGUgPT09IDEgfHwgY2hlY2tOb25FbGVtZW50cyApIHsKCQkJCQkJaWYgKCBtYXRjaGVyKCBlbGVtLCBjb250ZXh0LCB4bWwgKSApIHsKCQkJCQkJCXJldHVybiB0cnVlOwoJCQkJCQl9CgkJCQkJfQoJCQkJfQoJCQl9IGVsc2UgewoJCQkJd2hpbGUgKCAoIGVsZW0gPSBlbGVtWyBkaXIgXSApICkgewoJCQkJCWlmICggZWxlbS5ub2RlVHlwZSA9PT0gMSB8fCBjaGVja05vbkVsZW1lbnRzICkgewoJCQkJCQlvdXRlckNhY2hlID0gZWxlbVsgZXhwYW5kbyBdIHx8ICggZWxlbVsgZXhwYW5kbyBdID0ge30gKTsKCgkJCQkJCS8vIFN1cHBvcnQ6IElFIDw5IG9ubHkKCQkJCQkJLy8gRGVmZW5kIGFnYWluc3QgY2xvbmVkIGF0dHJvcGVydGllcyAoalF1ZXJ5IGdoLTE3MDkpCgkJCQkJCXVuaXF1ZUNhY2hlID0gb3V0ZXJDYWNoZVsgZWxlbS51bmlxdWVJRCBdIHx8CgkJCQkJCQkoIG91dGVyQ2FjaGVbIGVsZW0udW5pcXVlSUQgXSA9IHt9ICk7CgoJCQkJCQlpZiAoIHNraXAgJiYgc2tpcCA9PT0gZWxlbS5ub2RlTmFtZS50b0xvd2VyQ2FzZSgpICkgewoJCQkJCQkJZWxlbSA9IGVsZW1bIGRpciBdIHx8IGVsZW07CgkJCQkJCX0gZWxzZSBpZiAoICggb2xkQ2FjaGUgPSB1bmlxdWVDYWNoZVsga2V5IF0gKSAmJgoJCQkJCQkJb2xkQ2FjaGVbIDAgXSA9PT0gZGlycnVucyAmJiBvbGRDYWNoZVsgMSBdID09PSBkb25lTmFtZSApIHsKCgkJCQkJCQkvLyBBc3NpZ24gdG8gbmV3Q2FjaGUgc28gcmVzdWx0cyBiYWNrLXByb3BhZ2F0ZSB0byBwcmV2aW91cyBlbGVtZW50cwoJCQkJCQkJcmV0dXJuICggbmV3Q2FjaGVbIDIgXSA9IG9sZENhY2hlWyAyIF0gKTsKCQkJCQkJfSBlbHNlIHsKCgkJCQkJCQkvLyBSZXVzZSBuZXdjYWNoZSBzbyByZXN1bHRzIGJhY2stcHJvcGFnYXRlIHRvIHByZXZpb3VzIGVsZW1lbnRzCgkJCQkJCQl1bmlxdWVDYWNoZVsga2V5IF0gPSBuZXdDYWNoZTsKCgkJCQkJCQkvLyBBIG1hdGNoIG1lYW5zIHdlJ3JlIGRvbmU7IGEgZmFpbCBtZWFucyB3ZSBoYXZlIHRvIGtlZXAgY2hlY2tpbmcKCQkJCQkJCWlmICggKCBuZXdDYWNoZVsgMiBdID0gbWF0Y2hlciggZWxlbSwgY29udGV4dCwgeG1sICkgKSApIHsKCQkJCQkJCQlyZXR1cm4gdHJ1ZTsKCQkJCQkJCX0KCQkJCQkJfQoJCQkJCX0KCQkJCX0KCQkJfQoJCQlyZXR1cm4gZmFsc2U7CgkJfTsKfQoKZnVuY3Rpb24gZWxlbWVudE1hdGNoZXIoIG1hdGNoZXJzICkgewoJcmV0dXJuIG1hdGNoZXJzLmxlbmd0aCA+IDEgPwoJCWZ1bmN0aW9uKCBlbGVtLCBjb250ZXh0LCB4bWwgKSB7CgkJCXZhciBpID0gbWF0Y2hlcnMubGVuZ3RoOwoJCQl3aGlsZSAoIGktLSApIHsKCQkJCWlmICggIW1hdGNoZXJzWyBpIF0oIGVsZW0sIGNvbnRleHQsIHhtbCApICkgewoJCQkJCXJldHVybiBmYWxzZTsKCQkJCX0KCQkJfQoJCQlyZXR1cm4gdHJ1ZTsKCQl9IDoKCQltYXRjaGVyc1sgMCBdOwp9CgpmdW5jdGlvbiBtdWx0aXBsZUNvbnRleHRzKCBzZWxlY3RvciwgY29udGV4dHMsIHJlc3VsdHMgKSB7Cgl2YXIgaSA9IDAsCgkJbGVuID0gY29udGV4dHMubGVuZ3RoOwoJZm9yICggOyBpIDwgbGVuOyBpKysgKSB7CgkJU2l6emxlKCBzZWxlY3RvciwgY29udGV4dHNbIGkgXSwgcmVzdWx0cyApOwoJfQoJcmV0dXJuIHJlc3VsdHM7Cn0KCmZ1bmN0aW9uIGNvbmRlbnNlKCB1bm1hdGNoZWQsIG1hcCwgZmlsdGVyLCBjb250ZXh0LCB4bWwgKSB7Cgl2YXIgZWxlbSwKCQluZXdVbm1hdGNoZWQgPSBbXSwKCQlpID0gMCwKCQlsZW4gPSB1bm1hdGNoZWQubGVuZ3RoLAoJCW1hcHBlZCA9IG1hcCAhPSBudWxsOwoKCWZvciAoIDsgaSA8IGxlbjsgaSsrICkgewoJCWlmICggKCBlbGVtID0gdW5tYXRjaGVkWyBpIF0gKSApIHsKCQkJaWYgKCAhZmlsdGVyIHx8IGZpbHRlciggZWxlbSwgY29udGV4dCwgeG1sICkgKSB7CgkJCQluZXdVbm1hdGNoZWQucHVzaCggZWxlbSApOwoJCQkJaWYgKCBtYXBwZWQgKSB7CgkJCQkJbWFwLnB1c2goIGkgKTsKCQkJCX0KCQkJfQoJCX0KCX0KCglyZXR1cm4gbmV3VW5tYXRjaGVkOwp9CgpmdW5jdGlvbiBzZXRNYXRjaGVyKCBwcmVGaWx0ZXIsIHNlbGVjdG9yLCBtYXRjaGVyLCBwb3N0RmlsdGVyLCBwb3N0RmluZGVyLCBwb3N0U2VsZWN0b3IgKSB7CglpZiAoIHBvc3RGaWx0ZXIgJiYgIXBvc3RGaWx0ZXJbIGV4cGFuZG8gXSApIHsKCQlwb3N0RmlsdGVyID0gc2V0TWF0Y2hlciggcG9zdEZpbHRlciApOwoJfQoJaWYgKCBwb3N0RmluZGVyICYmICFwb3N0RmluZGVyWyBleHBhbmRvIF0gKSB7CgkJcG9zdEZpbmRlciA9IHNldE1hdGNoZXIoIHBvc3RGaW5kZXIsIHBvc3RTZWxlY3RvciApOwoJfQoJcmV0dXJuIG1hcmtGdW5jdGlvbiggZnVuY3Rpb24oIHNlZWQsIHJlc3VsdHMsIGNvbnRleHQsIHhtbCApIHsKCQl2YXIgdGVtcCwgaSwgZWxlbSwKCQkJcHJlTWFwID0gW10sCgkJCXBvc3RNYXAgPSBbXSwKCQkJcHJlZXhpc3RpbmcgPSByZXN1bHRzLmxlbmd0aCwKCgkJCS8vIEdldCBpbml0aWFsIGVsZW1lbnRzIGZyb20gc2VlZCBvciBjb250ZXh0CgkJCWVsZW1zID0gc2VlZCB8fCBtdWx0aXBsZUNvbnRleHRzKAoJCQkJc2VsZWN0b3IgfHwgIioiLAoJCQkJY29udGV4dC5ub2RlVHlwZSA/IFsgY29udGV4dCBdIDogY29udGV4dCwKCQkJCVtdCgkJCSksCgoJCQkvLyBQcmVmaWx0ZXIgdG8gZ2V0IG1hdGNoZXIgaW5wdXQsIHByZXNlcnZpbmcgYSBtYXAgZm9yIHNlZWQtcmVzdWx0cyBzeW5jaHJvbml6YXRpb24KCQkJbWF0Y2hlckluID0gcHJlRmlsdGVyICYmICggc2VlZCB8fCAhc2VsZWN0b3IgKSA/CgkJCQljb25kZW5zZSggZWxlbXMsIHByZU1hcCwgcHJlRmlsdGVyLCBjb250ZXh0LCB4bWwgKSA6CgkJCQllbGVtcywKCgkJCW1hdGNoZXJPdXQgPSBtYXRjaGVyID8KCgkJCQkvLyBJZiB3ZSBoYXZlIGEgcG9zdEZpbmRlciwgb3IgZmlsdGVyZWQgc2VlZCwgb3Igbm9uLXNlZWQgcG9zdEZpbHRlciBvciBwcmVleGlzdGluZyByZXN1bHRzLAoJCQkJcG9zdEZpbmRlciB8fCAoIHNlZWQgPyBwcmVGaWx0ZXIgOiBwcmVleGlzdGluZyB8fCBwb3N0RmlsdGVyICkgPwoKCQkJCQkvLyAuLi5pbnRlcm1lZGlhdGUgcHJvY2Vzc2luZyBpcyBuZWNlc3NhcnkKCQkJCQlbXSA6CgoJCQkJCS8vIC4uLm90aGVyd2lzZSB1c2UgcmVzdWx0cyBkaXJlY3RseQoJCQkJCXJlc3VsdHMgOgoJCQkJbWF0Y2hlckluOwoKCQkvLyBGaW5kIHByaW1hcnkgbWF0Y2hlcwoJCWlmICggbWF0Y2hlciApIHsKCQkJbWF0Y2hlciggbWF0Y2hlckluLCBtYXRjaGVyT3V0LCBjb250ZXh0LCB4bWwgKTsKCQl9CgoJCS8vIEFwcGx5IHBvc3RGaWx0ZXIKCQlpZiAoIHBvc3RGaWx0ZXIgKSB7CgkJCXRlbXAgPSBjb25kZW5zZSggbWF0Y2hlck91dCwgcG9zdE1hcCApOwoJCQlwb3N0RmlsdGVyKCB0ZW1wLCBbXSwgY29udGV4dCwgeG1sICk7CgoJCQkvLyBVbi1tYXRjaCBmYWlsaW5nIGVsZW1lbnRzIGJ5IG1vdmluZyB0aGVtIGJhY2sgdG8gbWF0Y2hlckluCgkJCWkgPSB0ZW1wLmxlbmd0aDsKCQkJd2hpbGUgKCBpLS0gKSB7CgkJCQlpZiAoICggZWxlbSA9IHRlbXBbIGkgXSApICkgewoJCQkJCW1hdGNoZXJPdXRbIHBvc3RNYXBbIGkgXSBdID0gISggbWF0Y2hlckluWyBwb3N0TWFwWyBpIF0gXSA9IGVsZW0gKTsKCQkJCX0KCQkJfQoJCX0KCgkJaWYgKCBzZWVkICkgewoJCQlpZiAoIHBvc3RGaW5kZXIgfHwgcHJlRmlsdGVyICkgewoJCQkJaWYgKCBwb3N0RmluZGVyICkgewoKCQkJCQkvLyBHZXQgdGhlIGZpbmFsIG1hdGNoZXJPdXQgYnkgY29uZGVuc2luZyB0aGlzIGludGVybWVkaWF0ZSBpbnRvIHBvc3RGaW5kZXIgY29udGV4dHMKCQkJCQl0ZW1wID0gW107CgkJCQkJaSA9IG1hdGNoZXJPdXQubGVuZ3RoOwoJCQkJCXdoaWxlICggaS0tICkgewoJCQkJCQlpZiAoICggZWxlbSA9IG1hdGNoZXJPdXRbIGkgXSApICkgewoKCQkJCQkJCS8vIFJlc3RvcmUgbWF0Y2hlckluIHNpbmNlIGVsZW0gaXMgbm90IHlldCBhIGZpbmFsIG1hdGNoCgkJCQkJCQl0ZW1wLnB1c2goICggbWF0Y2hlckluWyBpIF0gPSBlbGVtICkgKTsKCQkJCQkJfQoJCQkJCX0KCQkJCQlwb3N0RmluZGVyKCBudWxsLCAoIG1hdGNoZXJPdXQgPSBbXSApLCB0ZW1wLCB4bWwgKTsKCQkJCX0KCgkJCQkvLyBNb3ZlIG1hdGNoZWQgZWxlbWVudHMgZnJvbSBzZWVkIHRvIHJlc3VsdHMgdG8ga2VlcCB0aGVtIHN5bmNocm9uaXplZAoJCQkJaSA9IG1hdGNoZXJPdXQubGVuZ3RoOwoJCQkJd2hpbGUgKCBpLS0gKSB7CgkJCQkJaWYgKCAoIGVsZW0gPSBtYXRjaGVyT3V0WyBpIF0gKSAmJgoJCQkJCQkoIHRlbXAgPSBwb3N0RmluZGVyID8gaW5kZXhPZiggc2VlZCwgZWxlbSApIDogcHJlTWFwWyBpIF0gKSA+IC0xICkgewoKCQkJCQkJc2VlZFsgdGVtcCBdID0gISggcmVzdWx0c1sgdGVtcCBdID0gZWxlbSApOwoJCQkJCX0KCQkJCX0KCQkJfQoKCQkvLyBBZGQgZWxlbWVudHMgdG8gcmVzdWx0cywgdGhyb3VnaCBwb3N0RmluZGVyIGlmIGRlZmluZWQKCQl9IGVsc2UgewoJCQltYXRjaGVyT3V0ID0gY29uZGVuc2UoCgkJCQltYXRjaGVyT3V0ID09PSByZXN1bHRzID8KCQkJCQltYXRjaGVyT3V0LnNwbGljZSggcHJlZXhpc3RpbmcsIG1hdGNoZXJPdXQubGVuZ3RoICkgOgoJCQkJCW1hdGNoZXJPdXQKCQkJKTsKCQkJaWYgKCBwb3N0RmluZGVyICkgewoJCQkJcG9zdEZpbmRlciggbnVsbCwgcmVzdWx0cywgbWF0Y2hlck91dCwgeG1sICk7CgkJCX0gZWxzZSB7CgkJCQlwdXNoLmFwcGx5KCByZXN1bHRzLCBtYXRjaGVyT3V0ICk7CgkJCX0KCQl9Cgl9ICk7Cn0KCmZ1bmN0aW9uIG1hdGNoZXJGcm9tVG9rZW5zKCB0b2tlbnMgKSB7Cgl2YXIgY2hlY2tDb250ZXh0LCBtYXRjaGVyLCBqLAoJCWxlbiA9IHRva2Vucy5sZW5ndGgsCgkJbGVhZGluZ1JlbGF0aXZlID0gRXhwci5yZWxhdGl2ZVsgdG9rZW5zWyAwIF0udHlwZSBdLAoJCWltcGxpY2l0UmVsYXRpdmUgPSBsZWFkaW5nUmVsYXRpdmUgfHwgRXhwci5yZWxhdGl2ZVsgIiAiIF0sCgkJaSA9IGxlYWRpbmdSZWxhdGl2ZSA/IDEgOiAwLAoKCQkvLyBUaGUgZm91bmRhdGlvbmFsIG1hdGNoZXIgZW5zdXJlcyB0aGF0IGVsZW1lbnRzIGFyZSByZWFjaGFibGUgZnJvbSB0b3AtbGV2ZWwgY29udGV4dChzKQoJCW1hdGNoQ29udGV4dCA9IGFkZENvbWJpbmF0b3IoIGZ1bmN0aW9uKCBlbGVtICkgewoJCQlyZXR1cm4gZWxlbSA9PT0gY2hlY2tDb250ZXh0OwoJCX0sIGltcGxpY2l0UmVsYXRpdmUsIHRydWUgKSwKCQltYXRjaEFueUNvbnRleHQgPSBhZGRDb21iaW5hdG9yKCBmdW5jdGlvbiggZWxlbSApIHsKCQkJcmV0dXJuIGluZGV4T2YoIGNoZWNrQ29udGV4dCwgZWxlbSApID4gLTE7CgkJfSwgaW1wbGljaXRSZWxhdGl2ZSwgdHJ1ZSApLAoJCW1hdGNoZXJzID0gWyBmdW5jdGlvbiggZWxlbSwgY29udGV4dCwgeG1sICkgewoJCQl2YXIgcmV0ID0gKCAhbGVhZGluZ1JlbGF0aXZlICYmICggeG1sIHx8IGNvbnRleHQgIT09IG91dGVybW9zdENvbnRleHQgKSApIHx8ICgKCQkJCSggY2hlY2tDb250ZXh0ID0gY29udGV4dCApLm5vZGVUeXBlID8KCQkJCQltYXRjaENvbnRleHQoIGVsZW0sIGNvbnRleHQsIHhtbCApIDoKCQkJCQltYXRjaEFueUNvbnRleHQoIGVsZW0sIGNvbnRleHQsIHhtbCApICk7CgoJCQkvLyBBdm9pZCBoYW5naW5nIG9udG8gZWxlbWVudCAoaXNzdWUgIzI5OSkKCQkJY2hlY2tDb250ZXh0ID0gbnVsbDsKCQkJcmV0dXJuIHJldDsKCQl9IF07CgoJZm9yICggOyBpIDwgbGVuOyBpKysgKSB7CgkJaWYgKCAoIG1hdGNoZXIgPSBFeHByLnJlbGF0aXZlWyB0b2tlbnNbIGkgXS50eXBlIF0gKSApIHsKCQkJbWF0Y2hlcnMgPSBbIGFkZENvbWJpbmF0b3IoIGVsZW1lbnRNYXRjaGVyKCBtYXRjaGVycyApLCBtYXRjaGVyICkgXTsKCQl9IGVsc2UgewoJCQltYXRjaGVyID0gRXhwci5maWx0ZXJbIHRva2Vuc1sgaSBdLnR5cGUgXS5hcHBseSggbnVsbCwgdG9rZW5zWyBpIF0ubWF0Y2hlcyApOwoKCQkJLy8gUmV0dXJuIHNwZWNpYWwgdXBvbiBzZWVpbmcgYSBwb3NpdGlvbmFsIG1hdGNoZXIKCQkJaWYgKCBtYXRjaGVyWyBleHBhbmRvIF0gKSB7CgoJCQkJLy8gRmluZCB0aGUgbmV4dCByZWxhdGl2ZSBvcGVyYXRvciAoaWYgYW55KSBmb3IgcHJvcGVyIGhhbmRsaW5nCgkJCQlqID0gKytpOwoJCQkJZm9yICggOyBqIDwgbGVuOyBqKysgKSB7CgkJCQkJaWYgKCBFeHByLnJlbGF0aXZlWyB0b2tlbnNbIGogXS50eXBlIF0gKSB7CgkJCQkJCWJyZWFrOwoJCQkJCX0KCQkJCX0KCQkJCXJldHVybiBzZXRNYXRjaGVyKAoJCQkJCWkgPiAxICYmIGVsZW1lbnRNYXRjaGVyKCBtYXRjaGVycyApLAoJCQkJCWkgPiAxICYmIHRvU2VsZWN0b3IoCgoJCQkJCS8vIElmIHRoZSBwcmVjZWRpbmcgdG9rZW4gd2FzIGEgZGVzY2VuZGFudCBjb21iaW5hdG9yLCBpbnNlcnQgYW4gaW1wbGljaXQgYW55LWVsZW1lbnQgYCpgCgkJCQkJdG9rZW5zCgkJCQkJCS5zbGljZSggMCwgaSAtIDEgKQoJCQkJCQkuY29uY2F0KCB7IHZhbHVlOiB0b2tlbnNbIGkgLSAyIF0udHlwZSA9PT0gIiAiID8gIioiIDogIiIgfSApCgkJCQkJKS5yZXBsYWNlKCBydHJpbSwgIiQxIiApLAoJCQkJCW1hdGNoZXIsCgkJCQkJaSA8IGogJiYgbWF0Y2hlckZyb21Ub2tlbnMoIHRva2Vucy5zbGljZSggaSwgaiApICksCgkJCQkJaiA8IGxlbiAmJiBtYXRjaGVyRnJvbVRva2VucyggKCB0b2tlbnMgPSB0b2tlbnMuc2xpY2UoIGogKSApICksCgkJCQkJaiA8IGxlbiAmJiB0b1NlbGVjdG9yKCB0b2tlbnMgKQoJCQkJKTsKCQkJfQoJCQltYXRjaGVycy5wdXNoKCBtYXRjaGVyICk7CgkJfQoJfQoKCXJldHVybiBlbGVtZW50TWF0Y2hlciggbWF0Y2hlcnMgKTsKfQoKZnVuY3Rpb24gbWF0Y2hlckZyb21Hcm91cE1hdGNoZXJzKCBlbGVtZW50TWF0Y2hlcnMsIHNldE1hdGNoZXJzICkgewoJdmFyIGJ5U2V0ID0gc2V0TWF0Y2hlcnMubGVuZ3RoID4gMCwKCQlieUVsZW1lbnQgPSBlbGVtZW50TWF0Y2hlcnMubGVuZ3RoID4gMCwKCQlzdXBlck1hdGNoZXIgPSBmdW5jdGlvbiggc2VlZCwgY29udGV4dCwgeG1sLCByZXN1bHRzLCBvdXRlcm1vc3QgKSB7CgkJCXZhciBlbGVtLCBqLCBtYXRjaGVyLAoJCQkJbWF0Y2hlZENvdW50ID0gMCwKCQkJCWkgPSAiMCIsCgkJCQl1bm1hdGNoZWQgPSBzZWVkICYmIFtdLAoJCQkJc2V0TWF0Y2hlZCA9IFtdLAoJCQkJY29udGV4dEJhY2t1cCA9IG91dGVybW9zdENvbnRleHQsCgoJCQkJLy8gV2UgbXVzdCBhbHdheXMgaGF2ZSBlaXRoZXIgc2VlZCBlbGVtZW50cyBvciBvdXRlcm1vc3QgY29udGV4dAoJCQkJZWxlbXMgPSBzZWVkIHx8IGJ5RWxlbWVudCAmJiBFeHByLmZpbmRbICJUQUciIF0oICIqIiwgb3V0ZXJtb3N0ICksCgoJCQkJLy8gVXNlIGludGVnZXIgZGlycnVucyBpZmYgdGhpcyBpcyB0aGUgb3V0ZXJtb3N0IG1hdGNoZXIKCQkJCWRpcnJ1bnNVbmlxdWUgPSAoIGRpcnJ1bnMgKz0gY29udGV4dEJhY2t1cCA9PSBudWxsID8gMSA6IE1hdGgucmFuZG9tKCkgfHwgMC4xICksCgkJCQlsZW4gPSBlbGVtcy5sZW5ndGg7CgoJCQlpZiAoIG91dGVybW9zdCApIHsKCgkJCQkvLyBTdXBwb3J0OiBJRSAxMSssIEVkZ2UgMTcgLSAxOCsKCQkJCS8vIElFL0VkZ2Ugc29tZXRpbWVzIHRocm93IGEgIlBlcm1pc3Npb24gZGVuaWVkIiBlcnJvciB3aGVuIHN0cmljdC1jb21wYXJpbmcKCQkJCS8vIHR3byBkb2N1bWVudHM7IHNoYWxsb3cgY29tcGFyaXNvbnMgd29yay4KCQkJCS8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBlcWVxZXEKCQkJCW91dGVybW9zdENvbnRleHQgPSBjb250ZXh0ID09IGRvY3VtZW50IHx8IGNvbnRleHQgfHwgb3V0ZXJtb3N0OwoJCQl9CgoJCQkvLyBBZGQgZWxlbWVudHMgcGFzc2luZyBlbGVtZW50TWF0Y2hlcnMgZGlyZWN0bHkgdG8gcmVzdWx0cwoJCQkvLyBTdXBwb3J0OiBJRTw5LCBTYWZhcmkKCQkJLy8gVG9sZXJhdGUgTm9kZUxpc3QgcHJvcGVydGllcyAoSUU6ICJsZW5ndGgiOyBTYWZhcmk6IDxudW1iZXI+KSBtYXRjaGluZyBlbGVtZW50cyBieSBpZAoJCQlmb3IgKCA7IGkgIT09IGxlbiAmJiAoIGVsZW0gPSBlbGVtc1sgaSBdICkgIT0gbnVsbDsgaSsrICkgewoJCQkJaWYgKCBieUVsZW1lbnQgJiYgZWxlbSApIHsKCQkJCQlqID0gMDsKCgkJCQkJLy8gU3VwcG9ydDogSUUgMTErLCBFZGdlIDE3IC0gMTgrCgkJCQkJLy8gSUUvRWRnZSBzb21ldGltZXMgdGhyb3cgYSAiUGVybWlzc2lvbiBkZW5pZWQiIGVycm9yIHdoZW4gc3RyaWN0LWNvbXBhcmluZwoJCQkJCS8vIHR3byBkb2N1bWVudHM7IHNoYWxsb3cgY29tcGFyaXNvbnMgd29yay4KCQkJCQkvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgZXFlcWVxCgkJCQkJaWYgKCAhY29udGV4dCAmJiBlbGVtLm93bmVyRG9jdW1lbnQgIT0gZG9jdW1lbnQgKSB7CgkJCQkJCXNldERvY3VtZW50KCBlbGVtICk7CgkJCQkJCXhtbCA9ICFkb2N1bWVudElzSFRNTDsKCQkJCQl9CgkJCQkJd2hpbGUgKCAoIG1hdGNoZXIgPSBlbGVtZW50TWF0Y2hlcnNbIGorKyBdICkgKSB7CgkJCQkJCWlmICggbWF0Y2hlciggZWxlbSwgY29udGV4dCB8fCBkb2N1bWVudCwgeG1sICkgKSB7CgkJCQkJCQlyZXN1bHRzLnB1c2goIGVsZW0gKTsKCQkJCQkJCWJyZWFrOwoJCQkJCQl9CgkJCQkJfQoJCQkJCWlmICggb3V0ZXJtb3N0ICkgewoJCQkJCQlkaXJydW5zID0gZGlycnVuc1VuaXF1ZTsKCQkJCQl9CgkJCQl9CgoJCQkJLy8gVHJhY2sgdW5tYXRjaGVkIGVsZW1lbnRzIGZvciBzZXQgZmlsdGVycwoJCQkJaWYgKCBieVNldCApIHsKCgkJCQkJLy8gVGhleSB3aWxsIGhhdmUgZ29uZSB0aHJvdWdoIGFsbCBwb3NzaWJsZSBtYXRjaGVycwoJCQkJCWlmICggKCBlbGVtID0gIW1hdGNoZXIgJiYgZWxlbSApICkgewoJCQkJCQltYXRjaGVkQ291bnQtLTsKCQkJCQl9CgoJCQkJCS8vIExlbmd0aGVuIHRoZSBhcnJheSBmb3IgZXZlcnkgZWxlbWVudCwgbWF0Y2hlZCBvciBub3QKCQkJCQlpZiAoIHNlZWQgKSB7CgkJCQkJCXVubWF0Y2hlZC5wdXNoKCBlbGVtICk7CgkJCQkJfQoJCQkJfQoJCQl9CgoJCQkvLyBgaWAgaXMgbm93IHRoZSBjb3VudCBvZiBlbGVtZW50cyB2aXNpdGVkIGFib3ZlLCBhbmQgYWRkaW5nIGl0IHRvIGBtYXRjaGVkQ291bnRgCgkJCS8vIG1ha2VzIHRoZSBsYXR0ZXIgbm9ubmVnYXRpdmUuCgkJCW1hdGNoZWRDb3VudCArPSBpOwoKCQkJLy8gQXBwbHkgc2V0IGZpbHRlcnMgdG8gdW5tYXRjaGVkIGVsZW1lbnRzCgkJCS8vIE5PVEU6IFRoaXMgY2FuIGJlIHNraXBwZWQgaWYgdGhlcmUgYXJlIG5vIHVubWF0Y2hlZCBlbGVtZW50cyAoaS5lLiwgYG1hdGNoZWRDb3VudGAKCQkJLy8gZXF1YWxzIGBpYCksIHVubGVzcyB3ZSBkaWRuJ3QgdmlzaXQgX2FueV8gZWxlbWVudHMgaW4gdGhlIGFib3ZlIGxvb3AgYmVjYXVzZSB3ZSBoYXZlCgkJCS8vIG5vIGVsZW1lbnQgbWF0Y2hlcnMgYW5kIG5vIHNlZWQuCgkJCS8vIEluY3JlbWVudGluZyBhbiBpbml0aWFsbHktc3RyaW5nICIwIiBgaWAgYWxsb3dzIGBpYCB0byByZW1haW4gYSBzdHJpbmcgb25seSBpbiB0aGF0CgkJCS8vIGNhc2UsIHdoaWNoIHdpbGwgcmVzdWx0IGluIGEgIjAwIiBgbWF0Y2hlZENvdW50YCB0aGF0IGRpZmZlcnMgZnJvbSBgaWAgYnV0IGlzIGFsc28KCQkJLy8gbnVtZXJpY2FsbHkgemVyby4KCQkJaWYgKCBieVNldCAmJiBpICE9PSBtYXRjaGVkQ291bnQgKSB7CgkJCQlqID0gMDsKCQkJCXdoaWxlICggKCBtYXRjaGVyID0gc2V0TWF0Y2hlcnNbIGorKyBdICkgKSB7CgkJCQkJbWF0Y2hlciggdW5tYXRjaGVkLCBzZXRNYXRjaGVkLCBjb250ZXh0LCB4bWwgKTsKCQkJCX0KCgkJCQlpZiAoIHNlZWQgKSB7CgoJCQkJCS8vIFJlaW50ZWdyYXRlIGVsZW1lbnQgbWF0Y2hlcyB0byBlbGltaW5hdGUgdGhlIG5lZWQgZm9yIHNvcnRpbmcKCQkJCQlpZiAoIG1hdGNoZWRDb3VudCA+IDAgKSB7CgkJCQkJCXdoaWxlICggaS0tICkgewoJCQkJCQkJaWYgKCAhKCB1bm1hdGNoZWRbIGkgXSB8fCBzZXRNYXRjaGVkWyBpIF0gKSApIHsKCQkJCQkJCQlzZXRNYXRjaGVkWyBpIF0gPSBwb3AuY2FsbCggcmVzdWx0cyApOwoJCQkJCQkJfQoJCQkJCQl9CgkJCQkJfQoKCQkJCQkvLyBEaXNjYXJkIGluZGV4IHBsYWNlaG9sZGVyIHZhbHVlcyB0byBnZXQgb25seSBhY3R1YWwgbWF0Y2hlcwoJCQkJCXNldE1hdGNoZWQgPSBjb25kZW5zZSggc2V0TWF0Y2hlZCApOwoJCQkJfQoKCQkJCS8vIEFkZCBtYXRjaGVzIHRvIHJlc3VsdHMKCQkJCXB1c2guYXBwbHkoIHJlc3VsdHMsIHNldE1hdGNoZWQgKTsKCgkJCQkvLyBTZWVkbGVzcyBzZXQgbWF0Y2hlcyBzdWNjZWVkaW5nIG11bHRpcGxlIHN1Y2Nlc3NmdWwgbWF0Y2hlcnMgc3RpcHVsYXRlIHNvcnRpbmcKCQkJCWlmICggb3V0ZXJtb3N0ICYmICFzZWVkICYmIHNldE1hdGNoZWQubGVuZ3RoID4gMCAmJgoJCQkJCSggbWF0Y2hlZENvdW50ICsgc2V0TWF0Y2hlcnMubGVuZ3RoICkgPiAxICkgewoKCQkJCQlTaXp6bGUudW5pcXVlU29ydCggcmVzdWx0cyApOwoJCQkJfQoJCQl9CgoJCQkvLyBPdmVycmlkZSBtYW5pcHVsYXRpb24gb2YgZ2xvYmFscyBieSBuZXN0ZWQgbWF0Y2hlcnMKCQkJaWYgKCBvdXRlcm1vc3QgKSB7CgkJCQlkaXJydW5zID0gZGlycnVuc1VuaXF1ZTsKCQkJCW91dGVybW9zdENvbnRleHQgPSBjb250ZXh0QmFja3VwOwoJCQl9CgoJCQlyZXR1cm4gdW5tYXRjaGVkOwoJCX07CgoJcmV0dXJuIGJ5U2V0ID8KCQltYXJrRnVuY3Rpb24oIHN1cGVyTWF0Y2hlciApIDoKCQlzdXBlck1hdGNoZXI7Cn0KCmNvbXBpbGUgPSBTaXp6bGUuY29tcGlsZSA9IGZ1bmN0aW9uKCBzZWxlY3RvciwgbWF0Y2ggLyogSW50ZXJuYWwgVXNlIE9ubHkgKi8gKSB7Cgl2YXIgaSwKCQlzZXRNYXRjaGVycyA9IFtdLAoJCWVsZW1lbnRNYXRjaGVycyA9IFtdLAoJCWNhY2hlZCA9IGNvbXBpbGVyQ2FjaGVbIHNlbGVjdG9yICsgIiAiIF07CgoJaWYgKCAhY2FjaGVkICkgewoKCQkvLyBHZW5lcmF0ZSBhIGZ1bmN0aW9uIG9mIHJlY3Vyc2l2ZSBmdW5jdGlvbnMgdGhhdCBjYW4gYmUgdXNlZCB0byBjaGVjayBlYWNoIGVsZW1lbnQKCQlpZiAoICFtYXRjaCApIHsKCQkJbWF0Y2ggPSB0b2tlbml6ZSggc2VsZWN0b3IgKTsKCQl9CgkJaSA9IG1hdGNoLmxlbmd0aDsKCQl3aGlsZSAoIGktLSApIHsKCQkJY2FjaGVkID0gbWF0Y2hlckZyb21Ub2tlbnMoIG1hdGNoWyBpIF0gKTsKCQkJaWYgKCBjYWNoZWRbIGV4cGFuZG8gXSApIHsKCQkJCXNldE1hdGNoZXJzLnB1c2goIGNhY2hlZCApOwoJCQl9IGVsc2UgewoJCQkJZWxlbWVudE1hdGNoZXJzLnB1c2goIGNhY2hlZCApOwoJCQl9CgkJfQoKCQkvLyBDYWNoZSB0aGUgY29tcGlsZWQgZnVuY3Rpb24KCQljYWNoZWQgPSBjb21waWxlckNhY2hlKAoJCQlzZWxlY3RvciwKCQkJbWF0Y2hlckZyb21Hcm91cE1hdGNoZXJzKCBlbGVtZW50TWF0Y2hlcnMsIHNldE1hdGNoZXJzICkKCQkpOwoKCQkvLyBTYXZlIHNlbGVjdG9yIGFuZCB0b2tlbml6YXRpb24KCQljYWNoZWQuc2VsZWN0b3IgPSBzZWxlY3RvcjsKCX0KCXJldHVybiBjYWNoZWQ7Cn07CgovKioKICogQSBsb3ctbGV2ZWwgc2VsZWN0aW9uIGZ1bmN0aW9uIHRoYXQgd29ya3Mgd2l0aCBTaXp6bGUncyBjb21waWxlZAogKiAgc2VsZWN0b3IgZnVuY3Rpb25zCiAqIEBwYXJhbSB7U3RyaW5nfEZ1bmN0aW9ufSBzZWxlY3RvciBBIHNlbGVjdG9yIG9yIGEgcHJlLWNvbXBpbGVkCiAqICBzZWxlY3RvciBmdW5jdGlvbiBidWlsdCB3aXRoIFNpenpsZS5jb21waWxlCiAqIEBwYXJhbSB7RWxlbWVudH0gY29udGV4dAogKiBAcGFyYW0ge0FycmF5fSBbcmVzdWx0c10KICogQHBhcmFtIHtBcnJheX0gW3NlZWRdIEEgc2V0IG9mIGVsZW1lbnRzIHRvIG1hdGNoIGFnYWluc3QKICovCnNlbGVjdCA9IFNpenpsZS5zZWxlY3QgPSBmdW5jdGlvbiggc2VsZWN0b3IsIGNvbnRleHQsIHJlc3VsdHMsIHNlZWQgKSB7Cgl2YXIgaSwgdG9rZW5zLCB0b2tlbiwgdHlwZSwgZmluZCwKCQljb21waWxlZCA9IHR5cGVvZiBzZWxlY3RvciA9PT0gImZ1bmN0aW9uIiAmJiBzZWxlY3RvciwKCQltYXRjaCA9ICFzZWVkICYmIHRva2VuaXplKCAoIHNlbGVjdG9yID0gY29tcGlsZWQuc2VsZWN0b3IgfHwgc2VsZWN0b3IgKSApOwoKCXJlc3VsdHMgPSByZXN1bHRzIHx8IFtdOwoKCS8vIFRyeSB0byBtaW5pbWl6ZSBvcGVyYXRpb25zIGlmIHRoZXJlIGlzIG9ubHkgb25lIHNlbGVjdG9yIGluIHRoZSBsaXN0IGFuZCBubyBzZWVkCgkvLyAodGhlIGxhdHRlciBvZiB3aGljaCBndWFyYW50ZWVzIHVzIGNvbnRleHQpCglpZiAoIG1hdGNoLmxlbmd0aCA9PT0gMSApIHsKCgkJLy8gUmVkdWNlIGNvbnRleHQgaWYgdGhlIGxlYWRpbmcgY29tcG91bmQgc2VsZWN0b3IgaXMgYW4gSUQKCQl0b2tlbnMgPSBtYXRjaFsgMCBdID0gbWF0Y2hbIDAgXS5zbGljZSggMCApOwoJCWlmICggdG9rZW5zLmxlbmd0aCA+IDIgJiYgKCB0b2tlbiA9IHRva2Vuc1sgMCBdICkudHlwZSA9PT0gIklEIiAmJgoJCQljb250ZXh0Lm5vZGVUeXBlID09PSA5ICYmIGRvY3VtZW50SXNIVE1MICYmIEV4cHIucmVsYXRpdmVbIHRva2Vuc1sgMSBdLnR5cGUgXSApIHsKCgkJCWNvbnRleHQgPSAoIEV4cHIuZmluZFsgIklEIiBdKCB0b2tlbi5tYXRjaGVzWyAwIF0KCQkJCS5yZXBsYWNlKCBydW5lc2NhcGUsIGZ1bmVzY2FwZSApLCBjb250ZXh0ICkgfHwgW10gKVsgMCBdOwoJCQlpZiAoICFjb250ZXh0ICkgewoJCQkJcmV0dXJuIHJlc3VsdHM7CgoJCQkvLyBQcmVjb21waWxlZCBtYXRjaGVycyB3aWxsIHN0aWxsIHZlcmlmeSBhbmNlc3RyeSwgc28gc3RlcCB1cCBhIGxldmVsCgkJCX0gZWxzZSBpZiAoIGNvbXBpbGVkICkgewoJCQkJY29udGV4dCA9IGNvbnRleHQucGFyZW50Tm9kZTsKCQkJfQoKCQkJc2VsZWN0b3IgPSBzZWxlY3Rvci5zbGljZSggdG9rZW5zLnNoaWZ0KCkudmFsdWUubGVuZ3RoICk7CgkJfQoKCQkvLyBGZXRjaCBhIHNlZWQgc2V0IGZvciByaWdodC10by1sZWZ0IG1hdGNoaW5nCgkJaSA9IG1hdGNoRXhwclsgIm5lZWRzQ29udGV4dCIgXS50ZXN0KCBzZWxlY3RvciApID8gMCA6IHRva2Vucy5sZW5ndGg7CgkJd2hpbGUgKCBpLS0gKSB7CgkJCXRva2VuID0gdG9rZW5zWyBpIF07CgoJCQkvLyBBYm9ydCBpZiB3ZSBoaXQgYSBjb21iaW5hdG9yCgkJCWlmICggRXhwci5yZWxhdGl2ZVsgKCB0eXBlID0gdG9rZW4udHlwZSApIF0gKSB7CgkJCQlicmVhazsKCQkJfQoJCQlpZiAoICggZmluZCA9IEV4cHIuZmluZFsgdHlwZSBdICkgKSB7CgoJCQkJLy8gU2VhcmNoLCBleHBhbmRpbmcgY29udGV4dCBmb3IgbGVhZGluZyBzaWJsaW5nIGNvbWJpbmF0b3JzCgkJCQlpZiAoICggc2VlZCA9IGZpbmQoCgkJCQkJdG9rZW4ubWF0Y2hlc1sgMCBdLnJlcGxhY2UoIHJ1bmVzY2FwZSwgZnVuZXNjYXBlICksCgkJCQkJcnNpYmxpbmcudGVzdCggdG9rZW5zWyAwIF0udHlwZSApICYmIHRlc3RDb250ZXh0KCBjb250ZXh0LnBhcmVudE5vZGUgKSB8fAoJCQkJCQljb250ZXh0CgkJCQkpICkgKSB7CgoJCQkJCS8vIElmIHNlZWQgaXMgZW1wdHkgb3Igbm8gdG9rZW5zIHJlbWFpbiwgd2UgY2FuIHJldHVybiBlYXJseQoJCQkJCXRva2Vucy5zcGxpY2UoIGksIDEgKTsKCQkJCQlzZWxlY3RvciA9IHNlZWQubGVuZ3RoICYmIHRvU2VsZWN0b3IoIHRva2VucyApOwoJCQkJCWlmICggIXNlbGVjdG9yICkgewoJCQkJCQlwdXNoLmFwcGx5KCByZXN1bHRzLCBzZWVkICk7CgkJCQkJCXJldHVybiByZXN1bHRzOwoJCQkJCX0KCgkJCQkJYnJlYWs7CgkJCQl9CgkJCX0KCQl9Cgl9CgoJLy8gQ29tcGlsZSBhbmQgZXhlY3V0ZSBhIGZpbHRlcmluZyBmdW5jdGlvbiBpZiBvbmUgaXMgbm90IHByb3ZpZGVkCgkvLyBQcm92aWRlIGBtYXRjaGAgdG8gYXZvaWQgcmV0b2tlbml6YXRpb24gaWYgd2UgbW9kaWZpZWQgdGhlIHNlbGVjdG9yIGFib3ZlCgkoIGNvbXBpbGVkIHx8IGNvbXBpbGUoIHNlbGVjdG9yLCBtYXRjaCApICkoCgkJc2VlZCwKCQljb250ZXh0LAoJCSFkb2N1bWVudElzSFRNTCwKCQlyZXN1bHRzLAoJCSFjb250ZXh0IHx8IHJzaWJsaW5nLnRlc3QoIHNlbGVjdG9yICkgJiYgdGVzdENvbnRleHQoIGNvbnRleHQucGFyZW50Tm9kZSApIHx8IGNvbnRleHQKCSk7CglyZXR1cm4gcmVzdWx0czsKfTsKCi8vIE9uZS10aW1lIGFzc2lnbm1lbnRzCgovLyBTb3J0IHN0YWJpbGl0eQpzdXBwb3J0LnNvcnRTdGFibGUgPSBleHBhbmRvLnNwbGl0KCAiIiApLnNvcnQoIHNvcnRPcmRlciApLmpvaW4oICIiICkgPT09IGV4cGFuZG87CgovLyBTdXBwb3J0OiBDaHJvbWUgMTQtMzUrCi8vIEFsd2F5cyBhc3N1bWUgZHVwbGljYXRlcyBpZiB0aGV5IGFyZW4ndCBwYXNzZWQgdG8gdGhlIGNvbXBhcmlzb24gZnVuY3Rpb24Kc3VwcG9ydC5kZXRlY3REdXBsaWNhdGVzID0gISFoYXNEdXBsaWNhdGU7CgovLyBJbml0aWFsaXplIGFnYWluc3QgdGhlIGRlZmF1bHQgZG9jdW1lbnQKc2V0RG9jdW1lbnQoKTsKCi8vIFN1cHBvcnQ6IFdlYmtpdDw1MzcuMzIgLSBTYWZhcmkgNi4wLjMvQ2hyb21lIDI1IChmaXhlZCBpbiBDaHJvbWUgMjcpCi8vIERldGFjaGVkIG5vZGVzIGNvbmZvdW5kaW5nbHkgZm9sbG93ICplYWNoIG90aGVyKgpzdXBwb3J0LnNvcnREZXRhY2hlZCA9IGFzc2VydCggZnVuY3Rpb24oIGVsICkgewoKCS8vIFNob3VsZCByZXR1cm4gMSwgYnV0IHJldHVybnMgNCAoZm9sbG93aW5nKQoJcmV0dXJuIGVsLmNvbXBhcmVEb2N1bWVudFBvc2l0aW9uKCBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCAiZmllbGRzZXQiICkgKSAmIDE7Cn0gKTsKCi8vIFN1cHBvcnQ6IElFPDgKLy8gUHJldmVudCBhdHRyaWJ1dGUvcHJvcGVydHkgImludGVycG9sYXRpb24iCi8vIGh0dHBzOi8vbXNkbi5taWNyb3NvZnQuY29tL2VuLXVzL2xpYnJhcnkvbXM1MzY0MjklMjhWUy44NSUyOS5hc3B4CmlmICggIWFzc2VydCggZnVuY3Rpb24oIGVsICkgewoJZWwuaW5uZXJIVE1MID0gIjxhIGhyZWY9JyMnPjwvYT4iOwoJcmV0dXJuIGVsLmZpcnN0Q2hpbGQuZ2V0QXR0cmlidXRlKCAiaHJlZiIgKSA9PT0gIiMiOwp9ICkgKSB7CglhZGRIYW5kbGUoICJ0eXBlfGhyZWZ8aGVpZ2h0fHdpZHRoIiwgZnVuY3Rpb24oIGVsZW0sIG5hbWUsIGlzWE1MICkgewoJCWlmICggIWlzWE1MICkgewoJCQlyZXR1cm4gZWxlbS5nZXRBdHRyaWJ1dGUoIG5hbWUsIG5hbWUudG9Mb3dlckNhc2UoKSA9PT0gInR5cGUiID8gMSA6IDIgKTsKCQl9Cgl9ICk7Cn0KCi8vIFN1cHBvcnQ6IElFPDkKLy8gVXNlIGRlZmF1bHRWYWx1ZSBpbiBwbGFjZSBvZiBnZXRBdHRyaWJ1dGUoInZhbHVlIikKaWYgKCAhc3VwcG9ydC5hdHRyaWJ1dGVzIHx8ICFhc3NlcnQoIGZ1bmN0aW9uKCBlbCApIHsKCWVsLmlubmVySFRNTCA9ICI8aW5wdXQvPiI7CgllbC5maXJzdENoaWxkLnNldEF0dHJpYnV0ZSggInZhbHVlIiwgIiIgKTsKCXJldHVybiBlbC5maXJzdENoaWxkLmdldEF0dHJpYnV0ZSggInZhbHVlIiApID09PSAiIjsKfSApICkgewoJYWRkSGFuZGxlKCAidmFsdWUiLCBmdW5jdGlvbiggZWxlbSwgX25hbWUsIGlzWE1MICkgewoJCWlmICggIWlzWE1MICYmIGVsZW0ubm9kZU5hbWUudG9Mb3dlckNhc2UoKSA9PT0gImlucHV0IiApIHsKCQkJcmV0dXJuIGVsZW0uZGVmYXVsdFZhbHVlOwoJCX0KCX0gKTsKfQoKLy8gU3VwcG9ydDogSUU8OQovLyBVc2UgZ2V0QXR0cmlidXRlTm9kZSB0byBmZXRjaCBib29sZWFucyB3aGVuIGdldEF0dHJpYnV0ZSBsaWVzCmlmICggIWFzc2VydCggZnVuY3Rpb24oIGVsICkgewoJcmV0dXJuIGVsLmdldEF0dHJpYnV0ZSggImRpc2FibGVkIiApID09IG51bGw7Cn0gKSApIHsKCWFkZEhhbmRsZSggYm9vbGVhbnMsIGZ1bmN0aW9uKCBlbGVtLCBuYW1lLCBpc1hNTCApIHsKCQl2YXIgdmFsOwoJCWlmICggIWlzWE1MICkgewoJCQlyZXR1cm4gZWxlbVsgbmFtZSBdID09PSB0cnVlID8gbmFtZS50b0xvd2VyQ2FzZSgpIDoKCQkJCSggdmFsID0gZWxlbS5nZXRBdHRyaWJ1dGVOb2RlKCBuYW1lICkgKSAmJiB2YWwuc3BlY2lmaWVkID8KCQkJCQl2YWwudmFsdWUgOgoJCQkJCW51bGw7CgkJfQoJfSApOwp9CgpyZXR1cm4gU2l6emxlOwoKfSApKCB3aW5kb3cgKTsKCgoKalF1ZXJ5LmZpbmQgPSBTaXp6bGU7CmpRdWVyeS5leHByID0gU2l6emxlLnNlbGVjdG9yczsKCi8vIERlcHJlY2F0ZWQKalF1ZXJ5LmV4cHJbICI6IiBdID0galF1ZXJ5LmV4cHIucHNldWRvczsKalF1ZXJ5LnVuaXF1ZVNvcnQgPSBqUXVlcnkudW5pcXVlID0gU2l6emxlLnVuaXF1ZVNvcnQ7CmpRdWVyeS50ZXh0ID0gU2l6emxlLmdldFRleHQ7CmpRdWVyeS5pc1hNTERvYyA9IFNpenpsZS5pc1hNTDsKalF1ZXJ5LmNvbnRhaW5zID0gU2l6emxlLmNvbnRhaW5zOwpqUXVlcnkuZXNjYXBlU2VsZWN0b3IgPSBTaXp6bGUuZXNjYXBlOwoKCgoKdmFyIGRpciA9IGZ1bmN0aW9uKCBlbGVtLCBkaXIsIHVudGlsICkgewoJdmFyIG1hdGNoZWQgPSBbXSwKCQl0cnVuY2F0ZSA9IHVudGlsICE9PSB1bmRlZmluZWQ7CgoJd2hpbGUgKCAoIGVsZW0gPSBlbGVtWyBkaXIgXSApICYmIGVsZW0ubm9kZVR5cGUgIT09IDkgKSB7CgkJaWYgKCBlbGVtLm5vZGVUeXBlID09PSAxICkgewoJCQlpZiAoIHRydW5jYXRlICYmIGpRdWVyeSggZWxlbSApLmlzKCB1bnRpbCApICkgewoJCQkJYnJlYWs7CgkJCX0KCQkJbWF0Y2hlZC5wdXNoKCBlbGVtICk7CgkJfQoJfQoJcmV0dXJuIG1hdGNoZWQ7Cn07CgoKdmFyIHNpYmxpbmdzID0gZnVuY3Rpb24oIG4sIGVsZW0gKSB7Cgl2YXIgbWF0Y2hlZCA9IFtdOwoKCWZvciAoIDsgbjsgbiA9IG4ubmV4dFNpYmxpbmcgKSB7CgkJaWYgKCBuLm5vZGVUeXBlID09PSAxICYmIG4gIT09IGVsZW0gKSB7CgkJCW1hdGNoZWQucHVzaCggbiApOwoJCX0KCX0KCglyZXR1cm4gbWF0Y2hlZDsKfTsKCgp2YXIgcm5lZWRzQ29udGV4dCA9IGpRdWVyeS5leHByLm1hdGNoLm5lZWRzQ29udGV4dDsKCgoKZnVuY3Rpb24gbm9kZU5hbWUoIGVsZW0sIG5hbWUgKSB7CgoJcmV0dXJuIGVsZW0ubm9kZU5hbWUgJiYgZWxlbS5ub2RlTmFtZS50b0xvd2VyQ2FzZSgpID09PSBuYW1lLnRvTG93ZXJDYXNlKCk7Cgp9CnZhciByc2luZ2xlVGFnID0gKCAvXjwoW2Etel1bXlwvXDA+Olx4MjBcdFxyXG5cZl0qKVtceDIwXHRcclxuXGZdKlwvPz4oPzo8XC9cMT58KSQvaSApOwoKCgovLyBJbXBsZW1lbnQgdGhlIGlkZW50aWNhbCBmdW5jdGlvbmFsaXR5IGZvciBmaWx0ZXIgYW5kIG5vdApmdW5jdGlvbiB3aW5ub3coIGVsZW1lbnRzLCBxdWFsaWZpZXIsIG5vdCApIHsKCWlmICggaXNGdW5jdGlvbiggcXVhbGlmaWVyICkgKSB7CgkJcmV0dXJuIGpRdWVyeS5ncmVwKCBlbGVtZW50cywgZnVuY3Rpb24oIGVsZW0sIGkgKSB7CgkJCXJldHVybiAhIXF1YWxpZmllci5jYWxsKCBlbGVtLCBpLCBlbGVtICkgIT09IG5vdDsKCQl9ICk7Cgl9CgoJLy8gU2luZ2xlIGVsZW1lbnQKCWlmICggcXVhbGlmaWVyLm5vZGVUeXBlICkgewoJCXJldHVybiBqUXVlcnkuZ3JlcCggZWxlbWVudHMsIGZ1bmN0aW9uKCBlbGVtICkgewoJCQlyZXR1cm4gKCBlbGVtID09PSBxdWFsaWZpZXIgKSAhPT0gbm90OwoJCX0gKTsKCX0KCgkvLyBBcnJheWxpa2Ugb2YgZWxlbWVudHMgKGpRdWVyeSwgYXJndW1lbnRzLCBBcnJheSkKCWlmICggdHlwZW9mIHF1YWxpZmllciAhPT0gInN0cmluZyIgKSB7CgkJcmV0dXJuIGpRdWVyeS5ncmVwKCBlbGVtZW50cywgZnVuY3Rpb24oIGVsZW0gKSB7CgkJCXJldHVybiAoIGluZGV4T2YuY2FsbCggcXVhbGlmaWVyLCBlbGVtICkgPiAtMSApICE9PSBub3Q7CgkJfSApOwoJfQoKCS8vIEZpbHRlcmVkIGRpcmVjdGx5IGZvciBib3RoIHNpbXBsZSBhbmQgY29tcGxleCBzZWxlY3RvcnMKCXJldHVybiBqUXVlcnkuZmlsdGVyKCBxdWFsaWZpZXIsIGVsZW1lbnRzLCBub3QgKTsKfQoKalF1ZXJ5LmZpbHRlciA9IGZ1bmN0aW9uKCBleHByLCBlbGVtcywgbm90ICkgewoJdmFyIGVsZW0gPSBlbGVtc1sgMCBdOwoKCWlmICggbm90ICkgewoJCWV4cHIgPSAiOm5vdCgiICsgZXhwciArICIpIjsKCX0KCglpZiAoIGVsZW1zLmxlbmd0aCA9PT0gMSAmJiBlbGVtLm5vZGVUeXBlID09PSAxICkgewoJCXJldHVybiBqUXVlcnkuZmluZC5tYXRjaGVzU2VsZWN0b3IoIGVsZW0sIGV4cHIgKSA/IFsgZWxlbSBdIDogW107Cgl9CgoJcmV0dXJuIGpRdWVyeS5maW5kLm1hdGNoZXMoIGV4cHIsIGpRdWVyeS5ncmVwKCBlbGVtcywgZnVuY3Rpb24oIGVsZW0gKSB7CgkJcmV0dXJuIGVsZW0ubm9kZVR5cGUgPT09IDE7Cgl9ICkgKTsKfTsKCmpRdWVyeS5mbi5leHRlbmQoIHsKCWZpbmQ6IGZ1bmN0aW9uKCBzZWxlY3RvciApIHsKCQl2YXIgaSwgcmV0LAoJCQlsZW4gPSB0aGlzLmxlbmd0aCwKCQkJc2VsZiA9IHRoaXM7CgoJCWlmICggdHlwZW9mIHNlbGVjdG9yICE9PSAic3RyaW5nIiApIHsKCQkJcmV0dXJuIHRoaXMucHVzaFN0YWNrKCBqUXVlcnkoIHNlbGVjdG9yICkuZmlsdGVyKCBmdW5jdGlvbigpIHsKCQkJCWZvciAoIGkgPSAwOyBpIDwgbGVuOyBpKysgKSB7CgkJCQkJaWYgKCBqUXVlcnkuY29udGFpbnMoIHNlbGZbIGkgXSwgdGhpcyApICkgewoJCQkJCQlyZXR1cm4gdHJ1ZTsKCQkJCQl9CgkJCQl9CgkJCX0gKSApOwoJCX0KCgkJcmV0ID0gdGhpcy5wdXNoU3RhY2soIFtdICk7CgoJCWZvciAoIGkgPSAwOyBpIDwgbGVuOyBpKysgKSB7CgkJCWpRdWVyeS5maW5kKCBzZWxlY3Rvciwgc2VsZlsgaSBdLCByZXQgKTsKCQl9CgoJCXJldHVybiBsZW4gPiAxID8galF1ZXJ5LnVuaXF1ZVNvcnQoIHJldCApIDogcmV0OwoJfSwKCWZpbHRlcjogZnVuY3Rpb24oIHNlbGVjdG9yICkgewoJCXJldHVybiB0aGlzLnB1c2hTdGFjayggd2lubm93KCB0aGlzLCBzZWxlY3RvciB8fCBbXSwgZmFsc2UgKSApOwoJfSwKCW5vdDogZnVuY3Rpb24oIHNlbGVjdG9yICkgewoJCXJldHVybiB0aGlzLnB1c2hTdGFjayggd2lubm93KCB0aGlzLCBzZWxlY3RvciB8fCBbXSwgdHJ1ZSApICk7Cgl9LAoJaXM6IGZ1bmN0aW9uKCBzZWxlY3RvciApIHsKCQlyZXR1cm4gISF3aW5ub3coCgkJCXRoaXMsCgoJCQkvLyBJZiB0aGlzIGlzIGEgcG9zaXRpb25hbC9yZWxhdGl2ZSBzZWxlY3RvciwgY2hlY2sgbWVtYmVyc2hpcCBpbiB0aGUgcmV0dXJuZWQgc2V0CgkJCS8vIHNvICQoInA6Zmlyc3QiKS5pcygicDpsYXN0Iikgd29uJ3QgcmV0dXJuIHRydWUgZm9yIGEgZG9jIHdpdGggdHdvICJwIi4KCQkJdHlwZW9mIHNlbGVjdG9yID09PSAic3RyaW5nIiAmJiBybmVlZHNDb250ZXh0LnRlc3QoIHNlbGVjdG9yICkgPwoJCQkJalF1ZXJ5KCBzZWxlY3RvciApIDoKCQkJCXNlbGVjdG9yIHx8IFtdLAoJCQlmYWxzZQoJCSkubGVuZ3RoOwoJfQp9ICk7CgoKLy8gSW5pdGlhbGl6ZSBhIGpRdWVyeSBvYmplY3QKCgovLyBBIGNlbnRyYWwgcmVmZXJlbmNlIHRvIHRoZSByb290IGpRdWVyeShkb2N1bWVudCkKdmFyIHJvb3RqUXVlcnksCgoJLy8gQSBzaW1wbGUgd2F5IHRvIGNoZWNrIGZvciBIVE1MIHN0cmluZ3MKCS8vIFByaW9yaXRpemUgI2lkIG92ZXIgPHRhZz4gdG8gYXZvaWQgWFNTIHZpYSBsb2NhdGlvbi5oYXNoICh0cmFjLTk1MjEpCgkvLyBTdHJpY3QgSFRNTCByZWNvZ25pdGlvbiAodHJhYy0xMTI5MDogbXVzdCBzdGFydCB3aXRoIDwpCgkvLyBTaG9ydGN1dCBzaW1wbGUgI2lkIGNhc2UgZm9yIHNwZWVkCglycXVpY2tFeHByID0gL14oPzpccyooPFtcd1xXXSs+KVtePl0qfCMoW1x3LV0rKSkkLywKCglpbml0ID0galF1ZXJ5LmZuLmluaXQgPSBmdW5jdGlvbiggc2VsZWN0b3IsIGNvbnRleHQsIHJvb3QgKSB7CgkJdmFyIG1hdGNoLCBlbGVtOwoKCQkvLyBIQU5ETEU6ICQoIiIpLCAkKG51bGwpLCAkKHVuZGVmaW5lZCksICQoZmFsc2UpCgkJaWYgKCAhc2VsZWN0b3IgKSB7CgkJCXJldHVybiB0aGlzOwoJCX0KCgkJLy8gTWV0aG9kIGluaXQoKSBhY2NlcHRzIGFuIGFsdGVybmF0ZSByb290alF1ZXJ5CgkJLy8gc28gbWlncmF0ZSBjYW4gc3VwcG9ydCBqUXVlcnkuc3ViIChnaC0yMTAxKQoJCXJvb3QgPSByb290IHx8IHJvb3RqUXVlcnk7CgoJCS8vIEhhbmRsZSBIVE1MIHN0cmluZ3MKCQlpZiAoIHR5cGVvZiBzZWxlY3RvciA9PT0gInN0cmluZyIgKSB7CgkJCWlmICggc2VsZWN0b3JbIDAgXSA9PT0gIjwiICYmCgkJCQlzZWxlY3Rvclsgc2VsZWN0b3IubGVuZ3RoIC0gMSBdID09PSAiPiIgJiYKCQkJCXNlbGVjdG9yLmxlbmd0aCA+PSAzICkgewoKCQkJCS8vIEFzc3VtZSB0aGF0IHN0cmluZ3MgdGhhdCBzdGFydCBhbmQgZW5kIHdpdGggPD4gYXJlIEhUTUwgYW5kIHNraXAgdGhlIHJlZ2V4IGNoZWNrCgkJCQltYXRjaCA9IFsgbnVsbCwgc2VsZWN0b3IsIG51bGwgXTsKCgkJCX0gZWxzZSB7CgkJCQltYXRjaCA9IHJxdWlja0V4cHIuZXhlYyggc2VsZWN0b3IgKTsKCQkJfQoKCQkJLy8gTWF0Y2ggaHRtbCBvciBtYWtlIHN1cmUgbm8gY29udGV4dCBpcyBzcGVjaWZpZWQgZm9yICNpZAoJCQlpZiAoIG1hdGNoICYmICggbWF0Y2hbIDEgXSB8fCAhY29udGV4dCApICkgewoKCQkJCS8vIEhBTkRMRTogJChodG1sKSAtPiAkKGFycmF5KQoJCQkJaWYgKCBtYXRjaFsgMSBdICkgewoJCQkJCWNvbnRleHQgPSBjb250ZXh0IGluc3RhbmNlb2YgalF1ZXJ5ID8gY29udGV4dFsgMCBdIDogY29udGV4dDsKCgkJCQkJLy8gT3B0aW9uIHRvIHJ1biBzY3JpcHRzIGlzIHRydWUgZm9yIGJhY2stY29tcGF0CgkJCQkJLy8gSW50ZW50aW9uYWxseSBsZXQgdGhlIGVycm9yIGJlIHRocm93biBpZiBwYXJzZUhUTUwgaXMgbm90IHByZXNlbnQKCQkJCQlqUXVlcnkubWVyZ2UoIHRoaXMsIGpRdWVyeS5wYXJzZUhUTUwoCgkJCQkJCW1hdGNoWyAxIF0sCgkJCQkJCWNvbnRleHQgJiYgY29udGV4dC5ub2RlVHlwZSA/IGNvbnRleHQub3duZXJEb2N1bWVudCB8fCBjb250ZXh0IDogZG9jdW1lbnQsCgkJCQkJCXRydWUKCQkJCQkpICk7CgoJCQkJCS8vIEhBTkRMRTogJChodG1sLCBwcm9wcykKCQkJCQlpZiAoIHJzaW5nbGVUYWcudGVzdCggbWF0Y2hbIDEgXSApICYmIGpRdWVyeS5pc1BsYWluT2JqZWN0KCBjb250ZXh0ICkgKSB7CgkJCQkJCWZvciAoIG1hdGNoIGluIGNvbnRleHQgKSB7CgoJCQkJCQkJLy8gUHJvcGVydGllcyBvZiBjb250ZXh0IGFyZSBjYWxsZWQgYXMgbWV0aG9kcyBpZiBwb3NzaWJsZQoJCQkJCQkJaWYgKCBpc0Z1bmN0aW9uKCB0aGlzWyBtYXRjaCBdICkgKSB7CgkJCQkJCQkJdGhpc1sgbWF0Y2ggXSggY29udGV4dFsgbWF0Y2ggXSApOwoKCQkJCQkJCS8vIC4uLmFuZCBvdGhlcndpc2Ugc2V0IGFzIGF0dHJpYnV0ZXMKCQkJCQkJCX0gZWxzZSB7CgkJCQkJCQkJdGhpcy5hdHRyKCBtYXRjaCwgY29udGV4dFsgbWF0Y2ggXSApOwoJCQkJCQkJfQoJCQkJCQl9CgkJCQkJfQoKCQkJCQlyZXR1cm4gdGhpczsKCgkJCQkvLyBIQU5ETEU6ICQoI2lkKQoJCQkJfSBlbHNlIHsKCQkJCQllbGVtID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoIG1hdGNoWyAyIF0gKTsKCgkJCQkJaWYgKCBlbGVtICkgewoKCQkJCQkJLy8gSW5qZWN0IHRoZSBlbGVtZW50IGRpcmVjdGx5IGludG8gdGhlIGpRdWVyeSBvYmplY3QKCQkJCQkJdGhpc1sgMCBdID0gZWxlbTsKCQkJCQkJdGhpcy5sZW5ndGggPSAxOwoJCQkJCX0KCQkJCQlyZXR1cm4gdGhpczsKCQkJCX0KCgkJCS8vIEhBTkRMRTogJChleHByLCAkKC4uLikpCgkJCX0gZWxzZSBpZiAoICFjb250ZXh0IHx8IGNvbnRleHQuanF1ZXJ5ICkgewoJCQkJcmV0dXJuICggY29udGV4dCB8fCByb290ICkuZmluZCggc2VsZWN0b3IgKTsKCgkJCS8vIEhBTkRMRTogJChleHByLCBjb250ZXh0KQoJCQkvLyAod2hpY2ggaXMganVzdCBlcXVpdmFsZW50IHRvOiAkKGNvbnRleHQpLmZpbmQoZXhwcikKCQkJfSBlbHNlIHsKCQkJCXJldHVybiB0aGlzLmNvbnN0cnVjdG9yKCBjb250ZXh0ICkuZmluZCggc2VsZWN0b3IgKTsKCQkJfQoKCQkvLyBIQU5ETEU6ICQoRE9NRWxlbWVudCkKCQl9IGVsc2UgaWYgKCBzZWxlY3Rvci5ub2RlVHlwZSApIHsKCQkJdGhpc1sgMCBdID0gc2VsZWN0b3I7CgkJCXRoaXMubGVuZ3RoID0gMTsKCQkJcmV0dXJuIHRoaXM7CgoJCS8vIEhBTkRMRTogJChmdW5jdGlvbikKCQkvLyBTaG9ydGN1dCBmb3IgZG9jdW1lbnQgcmVhZHkKCQl9IGVsc2UgaWYgKCBpc0Z1bmN0aW9uKCBzZWxlY3RvciApICkgewoJCQlyZXR1cm4gcm9vdC5yZWFkeSAhPT0gdW5kZWZpbmVkID8KCQkJCXJvb3QucmVhZHkoIHNlbGVjdG9yICkgOgoKCQkJCS8vIEV4ZWN1dGUgaW1tZWRpYXRlbHkgaWYgcmVhZHkgaXMgbm90IHByZXNlbnQKCQkJCXNlbGVjdG9yKCBqUXVlcnkgKTsKCQl9CgoJCXJldHVybiBqUXVlcnkubWFrZUFycmF5KCBzZWxlY3RvciwgdGhpcyApOwoJfTsKCi8vIEdpdmUgdGhlIGluaXQgZnVuY3Rpb24gdGhlIGpRdWVyeSBwcm90b3R5cGUgZm9yIGxhdGVyIGluc3RhbnRpYXRpb24KaW5pdC5wcm90b3R5cGUgPSBqUXVlcnkuZm47CgovLyBJbml0aWFsaXplIGNlbnRyYWwgcmVmZXJlbmNlCnJvb3RqUXVlcnkgPSBqUXVlcnkoIGRvY3VtZW50ICk7CgoKdmFyIHJwYXJlbnRzcHJldiA9IC9eKD86cGFyZW50c3xwcmV2KD86VW50aWx8QWxsKSkvLAoKCS8vIE1ldGhvZHMgZ3VhcmFudGVlZCB0byBwcm9kdWNlIGEgdW5pcXVlIHNldCB3aGVuIHN0YXJ0aW5nIGZyb20gYSB1bmlxdWUgc2V0CglndWFyYW50ZWVkVW5pcXVlID0gewoJCWNoaWxkcmVuOiB0cnVlLAoJCWNvbnRlbnRzOiB0cnVlLAoJCW5leHQ6IHRydWUsCgkJcHJldjogdHJ1ZQoJfTsKCmpRdWVyeS5mbi5leHRlbmQoIHsKCWhhczogZnVuY3Rpb24oIHRhcmdldCApIHsKCQl2YXIgdGFyZ2V0cyA9IGpRdWVyeSggdGFyZ2V0LCB0aGlzICksCgkJCWwgPSB0YXJnZXRzLmxlbmd0aDsKCgkJcmV0dXJuIHRoaXMuZmlsdGVyKCBmdW5jdGlvbigpIHsKCQkJdmFyIGkgPSAwOwoJCQlmb3IgKCA7IGkgPCBsOyBpKysgKSB7CgkJCQlpZiAoIGpRdWVyeS5jb250YWlucyggdGhpcywgdGFyZ2V0c1sgaSBdICkgKSB7CgkJCQkJcmV0dXJuIHRydWU7CgkJCQl9CgkJCX0KCQl9ICk7Cgl9LAoKCWNsb3Nlc3Q6IGZ1bmN0aW9uKCBzZWxlY3RvcnMsIGNvbnRleHQgKSB7CgkJdmFyIGN1ciwKCQkJaSA9IDAsCgkJCWwgPSB0aGlzLmxlbmd0aCwKCQkJbWF0Y2hlZCA9IFtdLAoJCQl0YXJnZXRzID0gdHlwZW9mIHNlbGVjdG9ycyAhPT0gInN0cmluZyIgJiYgalF1ZXJ5KCBzZWxlY3RvcnMgKTsKCgkJLy8gUG9zaXRpb25hbCBzZWxlY3RvcnMgbmV2ZXIgbWF0Y2gsIHNpbmNlIHRoZXJlJ3Mgbm8gX3NlbGVjdGlvbl8gY29udGV4dAoJCWlmICggIXJuZWVkc0NvbnRleHQudGVzdCggc2VsZWN0b3JzICkgKSB7CgkJCWZvciAoIDsgaSA8IGw7IGkrKyApIHsKCQkJCWZvciAoIGN1ciA9IHRoaXNbIGkgXTsgY3VyICYmIGN1ciAhPT0gY29udGV4dDsgY3VyID0gY3VyLnBhcmVudE5vZGUgKSB7CgoJCQkJCS8vIEFsd2F5cyBza2lwIGRvY3VtZW50IGZyYWdtZW50cwoJCQkJCWlmICggY3VyLm5vZGVUeXBlIDwgMTEgJiYgKCB0YXJnZXRzID8KCQkJCQkJdGFyZ2V0cy5pbmRleCggY3VyICkgPiAtMSA6CgoJCQkJCQkvLyBEb24ndCBwYXNzIG5vbi1lbGVtZW50cyB0byBTaXp6bGUKCQkJCQkJY3VyLm5vZGVUeXBlID09PSAxICYmCgkJCQkJCQlqUXVlcnkuZmluZC5tYXRjaGVzU2VsZWN0b3IoIGN1ciwgc2VsZWN0b3JzICkgKSApIHsKCgkJCQkJCW1hdGNoZWQucHVzaCggY3VyICk7CgkJCQkJCWJyZWFrOwoJCQkJCX0KCQkJCX0KCQkJfQoJCX0KCgkJcmV0dXJuIHRoaXMucHVzaFN0YWNrKCBtYXRjaGVkLmxlbmd0aCA+IDEgPyBqUXVlcnkudW5pcXVlU29ydCggbWF0Y2hlZCApIDogbWF0Y2hlZCApOwoJfSwKCgkvLyBEZXRlcm1pbmUgdGhlIHBvc2l0aW9uIG9mIGFuIGVsZW1lbnQgd2l0aGluIHRoZSBzZXQKCWluZGV4OiBmdW5jdGlvbiggZWxlbSApIHsKCgkJLy8gTm8gYXJndW1lbnQsIHJldHVybiBpbmRleCBpbiBwYXJlbnQKCQlpZiAoICFlbGVtICkgewoJCQlyZXR1cm4gKCB0aGlzWyAwIF0gJiYgdGhpc1sgMCBdLnBhcmVudE5vZGUgKSA/IHRoaXMuZmlyc3QoKS5wcmV2QWxsKCkubGVuZ3RoIDogLTE7CgkJfQoKCQkvLyBJbmRleCBpbiBzZWxlY3RvcgoJCWlmICggdHlwZW9mIGVsZW0gPT09ICJzdHJpbmciICkgewoJCQlyZXR1cm4gaW5kZXhPZi5jYWxsKCBqUXVlcnkoIGVsZW0gKSwgdGhpc1sgMCBdICk7CgkJfQoKCQkvLyBMb2NhdGUgdGhlIHBvc2l0aW9uIG9mIHRoZSBkZXNpcmVkIGVsZW1lbnQKCQlyZXR1cm4gaW5kZXhPZi5jYWxsKCB0aGlzLAoKCQkJLy8gSWYgaXQgcmVjZWl2ZXMgYSBqUXVlcnkgb2JqZWN0LCB0aGUgZmlyc3QgZWxlbWVudCBpcyB1c2VkCgkJCWVsZW0uanF1ZXJ5ID8gZWxlbVsgMCBdIDogZWxlbQoJCSk7Cgl9LAoKCWFkZDogZnVuY3Rpb24oIHNlbGVjdG9yLCBjb250ZXh0ICkgewoJCXJldHVybiB0aGlzLnB1c2hTdGFjaygKCQkJalF1ZXJ5LnVuaXF1ZVNvcnQoCgkJCQlqUXVlcnkubWVyZ2UoIHRoaXMuZ2V0KCksIGpRdWVyeSggc2VsZWN0b3IsIGNvbnRleHQgKSApCgkJCSkKCQkpOwoJfSwKCglhZGRCYWNrOiBmdW5jdGlvbiggc2VsZWN0b3IgKSB7CgkJcmV0dXJuIHRoaXMuYWRkKCBzZWxlY3RvciA9PSBudWxsID8KCQkJdGhpcy5wcmV2T2JqZWN0IDogdGhpcy5wcmV2T2JqZWN0LmZpbHRlciggc2VsZWN0b3IgKQoJCSk7Cgl9Cn0gKTsKCmZ1bmN0aW9uIHNpYmxpbmcoIGN1ciwgZGlyICkgewoJd2hpbGUgKCAoIGN1ciA9IGN1clsgZGlyIF0gKSAmJiBjdXIubm9kZVR5cGUgIT09IDEgKSB7fQoJcmV0dXJuIGN1cjsKfQoKalF1ZXJ5LmVhY2goIHsKCXBhcmVudDogZnVuY3Rpb24oIGVsZW0gKSB7CgkJdmFyIHBhcmVudCA9IGVsZW0ucGFyZW50Tm9kZTsKCQlyZXR1cm4gcGFyZW50ICYmIHBhcmVudC5ub2RlVHlwZSAhPT0gMTEgPyBwYXJlbnQgOiBudWxsOwoJfSwKCXBhcmVudHM6IGZ1bmN0aW9uKCBlbGVtICkgewoJCXJldHVybiBkaXIoIGVsZW0sICJwYXJlbnROb2RlIiApOwoJfSwKCXBhcmVudHNVbnRpbDogZnVuY3Rpb24oIGVsZW0sIF9pLCB1bnRpbCApIHsKCQlyZXR1cm4gZGlyKCBlbGVtLCAicGFyZW50Tm9kZSIsIHVudGlsICk7Cgl9LAoJbmV4dDogZnVuY3Rpb24oIGVsZW0gKSB7CgkJcmV0dXJuIHNpYmxpbmcoIGVsZW0sICJuZXh0U2libGluZyIgKTsKCX0sCglwcmV2OiBmdW5jdGlvbiggZWxlbSApIHsKCQlyZXR1cm4gc2libGluZyggZWxlbSwgInByZXZpb3VzU2libGluZyIgKTsKCX0sCgluZXh0QWxsOiBmdW5jdGlvbiggZWxlbSApIHsKCQlyZXR1cm4gZGlyKCBlbGVtLCAibmV4dFNpYmxpbmciICk7Cgl9LAoJcHJldkFsbDogZnVuY3Rpb24oIGVsZW0gKSB7CgkJcmV0dXJuIGRpciggZWxlbSwgInByZXZpb3VzU2libGluZyIgKTsKCX0sCgluZXh0VW50aWw6IGZ1bmN0aW9uKCBlbGVtLCBfaSwgdW50aWwgKSB7CgkJcmV0dXJuIGRpciggZWxlbSwgIm5leHRTaWJsaW5nIiwgdW50aWwgKTsKCX0sCglwcmV2VW50aWw6IGZ1bmN0aW9uKCBlbGVtLCBfaSwgdW50aWwgKSB7CgkJcmV0dXJuIGRpciggZWxlbSwgInByZXZpb3VzU2libGluZyIsIHVudGlsICk7Cgl9LAoJc2libGluZ3M6IGZ1bmN0aW9uKCBlbGVtICkgewoJCXJldHVybiBzaWJsaW5ncyggKCBlbGVtLnBhcmVudE5vZGUgfHwge30gKS5maXJzdENoaWxkLCBlbGVtICk7Cgl9LAoJY2hpbGRyZW46IGZ1bmN0aW9uKCBlbGVtICkgewoJCXJldHVybiBzaWJsaW5ncyggZWxlbS5maXJzdENoaWxkICk7Cgl9LAoJY29udGVudHM6IGZ1bmN0aW9uKCBlbGVtICkgewoJCWlmICggZWxlbS5jb250ZW50RG9jdW1lbnQgIT0gbnVsbCAmJgoKCQkJLy8gU3VwcG9ydDogSUUgMTErCgkJCS8vIDxvYmplY3Q+IGVsZW1lbnRzIHdpdGggbm8gYGRhdGFgIGF0dHJpYnV0ZSBoYXMgYW4gb2JqZWN0CgkJCS8vIGBjb250ZW50RG9jdW1lbnRgIHdpdGggYSBgbnVsbGAgcHJvdG90eXBlLgoJCQlnZXRQcm90byggZWxlbS5jb250ZW50RG9jdW1lbnQgKSApIHsKCgkJCXJldHVybiBlbGVtLmNvbnRlbnREb2N1bWVudDsKCQl9CgoJCS8vIFN1cHBvcnQ6IElFIDkgLSAxMSBvbmx5LCBpT1MgNyBvbmx5LCBBbmRyb2lkIEJyb3dzZXIgPD00LjMgb25seQoJCS8vIFRyZWF0IHRoZSB0ZW1wbGF0ZSBlbGVtZW50IGFzIGEgcmVndWxhciBvbmUgaW4gYnJvd3NlcnMgdGhhdAoJCS8vIGRvbid0IHN1cHBvcnQgaXQuCgkJaWYgKCBub2RlTmFtZSggZWxlbSwgInRlbXBsYXRlIiApICkgewoJCQllbGVtID0gZWxlbS5jb250ZW50IHx8IGVsZW07CgkJfQoKCQlyZXR1cm4galF1ZXJ5Lm1lcmdlKCBbXSwgZWxlbS5jaGlsZE5vZGVzICk7Cgl9Cn0sIGZ1bmN0aW9uKCBuYW1lLCBmbiApIHsKCWpRdWVyeS5mblsgbmFtZSBdID0gZnVuY3Rpb24oIHVudGlsLCBzZWxlY3RvciApIHsKCQl2YXIgbWF0Y2hlZCA9IGpRdWVyeS5tYXAoIHRoaXMsIGZuLCB1bnRpbCApOwoKCQlpZiAoIG5hbWUuc2xpY2UoIC01ICkgIT09ICJVbnRpbCIgKSB7CgkJCXNlbGVjdG9yID0gdW50aWw7CgkJfQoKCQlpZiAoIHNlbGVjdG9yICYmIHR5cGVvZiBzZWxlY3RvciA9PT0gInN0cmluZyIgKSB7CgkJCW1hdGNoZWQgPSBqUXVlcnkuZmlsdGVyKCBzZWxlY3RvciwgbWF0Y2hlZCApOwoJCX0KCgkJaWYgKCB0aGlzLmxlbmd0aCA+IDEgKSB7CgoJCQkvLyBSZW1vdmUgZHVwbGljYXRlcwoJCQlpZiAoICFndWFyYW50ZWVkVW5pcXVlWyBuYW1lIF0gKSB7CgkJCQlqUXVlcnkudW5pcXVlU29ydCggbWF0Y2hlZCApOwoJCQl9CgoJCQkvLyBSZXZlcnNlIG9yZGVyIGZvciBwYXJlbnRzKiBhbmQgcHJldi1kZXJpdmF0aXZlcwoJCQlpZiAoIHJwYXJlbnRzcHJldi50ZXN0KCBuYW1lICkgKSB7CgkJCQltYXRjaGVkLnJldmVyc2UoKTsKCQkJfQoJCX0KCgkJcmV0dXJuIHRoaXMucHVzaFN0YWNrKCBtYXRjaGVkICk7Cgl9Owp9ICk7CnZhciBybm90aHRtbHdoaXRlID0gKCAvW15ceDIwXHRcclxuXGZdKy9nICk7CgoKCi8vIENvbnZlcnQgU3RyaW5nLWZvcm1hdHRlZCBvcHRpb25zIGludG8gT2JqZWN0LWZvcm1hdHRlZCBvbmVzCmZ1bmN0aW9uIGNyZWF0ZU9wdGlvbnMoIG9wdGlvbnMgKSB7Cgl2YXIgb2JqZWN0ID0ge307CglqUXVlcnkuZWFjaCggb3B0aW9ucy5tYXRjaCggcm5vdGh0bWx3aGl0ZSApIHx8IFtdLCBmdW5jdGlvbiggXywgZmxhZyApIHsKCQlvYmplY3RbIGZsYWcgXSA9IHRydWU7Cgl9ICk7CglyZXR1cm4gb2JqZWN0Owp9CgovKgogKiBDcmVhdGUgYSBjYWxsYmFjayBsaXN0IHVzaW5nIHRoZSBmb2xsb3dpbmcgcGFyYW1ldGVyczoKICoKICoJb3B0aW9uczogYW4gb3B0aW9uYWwgbGlzdCBvZiBzcGFjZS1zZXBhcmF0ZWQgb3B0aW9ucyB0aGF0IHdpbGwgY2hhbmdlIGhvdwogKgkJCXRoZSBjYWxsYmFjayBsaXN0IGJlaGF2ZXMgb3IgYSBtb3JlIHRyYWRpdGlvbmFsIG9wdGlvbiBvYmplY3QKICoKICogQnkgZGVmYXVsdCBhIGNhbGxiYWNrIGxpc3Qgd2lsbCBhY3QgbGlrZSBhbiBldmVudCBjYWxsYmFjayBsaXN0IGFuZCBjYW4gYmUKICogImZpcmVkIiBtdWx0aXBsZSB0aW1lcy4KICoKICogUG9zc2libGUgb3B0aW9uczoKICoKICoJb25jZToJCQl3aWxsIGVuc3VyZSB0aGUgY2FsbGJhY2sgbGlzdCBjYW4gb25seSBiZSBmaXJlZCBvbmNlIChsaWtlIGEgRGVmZXJyZWQpCiAqCiAqCW1lbW9yeToJCQl3aWxsIGtlZXAgdHJhY2sgb2YgcHJldmlvdXMgdmFsdWVzIGFuZCB3aWxsIGNhbGwgYW55IGNhbGxiYWNrIGFkZGVkCiAqCQkJCQlhZnRlciB0aGUgbGlzdCBoYXMgYmVlbiBmaXJlZCByaWdodCBhd2F5IHdpdGggdGhlIGxhdGVzdCAibWVtb3JpemVkIgogKgkJCQkJdmFsdWVzIChsaWtlIGEgRGVmZXJyZWQpCiAqCiAqCXVuaXF1ZToJCQl3aWxsIGVuc3VyZSBhIGNhbGxiYWNrIGNhbiBvbmx5IGJlIGFkZGVkIG9uY2UgKG5vIGR1cGxpY2F0ZSBpbiB0aGUgbGlzdCkKICoKICoJc3RvcE9uRmFsc2U6CWludGVycnVwdCBjYWxsaW5ncyB3aGVuIGEgY2FsbGJhY2sgcmV0dXJucyBmYWxzZQogKgogKi8KalF1ZXJ5LkNhbGxiYWNrcyA9IGZ1bmN0aW9uKCBvcHRpb25zICkgewoKCS8vIENvbnZlcnQgb3B0aW9ucyBmcm9tIFN0cmluZy1mb3JtYXR0ZWQgdG8gT2JqZWN0LWZvcm1hdHRlZCBpZiBuZWVkZWQKCS8vICh3ZSBjaGVjayBpbiBjYWNoZSBmaXJzdCkKCW9wdGlvbnMgPSB0eXBlb2Ygb3B0aW9ucyA9PT0gInN0cmluZyIgPwoJCWNyZWF0ZU9wdGlvbnMoIG9wdGlvbnMgKSA6CgkJalF1ZXJ5LmV4dGVuZCgge30sIG9wdGlvbnMgKTsKCgl2YXIgLy8gRmxhZyB0byBrbm93IGlmIGxpc3QgaXMgY3VycmVudGx5IGZpcmluZwoJCWZpcmluZywKCgkJLy8gTGFzdCBmaXJlIHZhbHVlIGZvciBub24tZm9yZ2V0dGFibGUgbGlzdHMKCQltZW1vcnksCgoJCS8vIEZsYWcgdG8ga25vdyBpZiBsaXN0IHdhcyBhbHJlYWR5IGZpcmVkCgkJZmlyZWQsCgoJCS8vIEZsYWcgdG8gcHJldmVudCBmaXJpbmcKCQlsb2NrZWQsCgoJCS8vIEFjdHVhbCBjYWxsYmFjayBsaXN0CgkJbGlzdCA9IFtdLAoKCQkvLyBRdWV1ZSBvZiBleGVjdXRpb24gZGF0YSBmb3IgcmVwZWF0YWJsZSBsaXN0cwoJCXF1ZXVlID0gW10sCgoJCS8vIEluZGV4IG9mIGN1cnJlbnRseSBmaXJpbmcgY2FsbGJhY2sgKG1vZGlmaWVkIGJ5IGFkZC9yZW1vdmUgYXMgbmVlZGVkKQoJCWZpcmluZ0luZGV4ID0gLTEsCgoJCS8vIEZpcmUgY2FsbGJhY2tzCgkJZmlyZSA9IGZ1bmN0aW9uKCkgewoKCQkJLy8gRW5mb3JjZSBzaW5nbGUtZmlyaW5nCgkJCWxvY2tlZCA9IGxvY2tlZCB8fCBvcHRpb25zLm9uY2U7CgoJCQkvLyBFeGVjdXRlIGNhbGxiYWNrcyBmb3IgYWxsIHBlbmRpbmcgZXhlY3V0aW9ucywKCQkJLy8gcmVzcGVjdGluZyBmaXJpbmdJbmRleCBvdmVycmlkZXMgYW5kIHJ1bnRpbWUgY2hhbmdlcwoJCQlmaXJlZCA9IGZpcmluZyA9IHRydWU7CgkJCWZvciAoIDsgcXVldWUubGVuZ3RoOyBmaXJpbmdJbmRleCA9IC0xICkgewoJCQkJbWVtb3J5ID0gcXVldWUuc2hpZnQoKTsKCQkJCXdoaWxlICggKytmaXJpbmdJbmRleCA8IGxpc3QubGVuZ3RoICkgewoKCQkJCQkvLyBSdW4gY2FsbGJhY2sgYW5kIGNoZWNrIGZvciBlYXJseSB0ZXJtaW5hdGlvbgoJCQkJCWlmICggbGlzdFsgZmlyaW5nSW5kZXggXS5hcHBseSggbWVtb3J5WyAwIF0sIG1lbW9yeVsgMSBdICkgPT09IGZhbHNlICYmCgkJCQkJCW9wdGlvbnMuc3RvcE9uRmFsc2UgKSB7CgoJCQkJCQkvLyBKdW1wIHRvIGVuZCBhbmQgZm9yZ2V0IHRoZSBkYXRhIHNvIC5hZGQgZG9lc24ndCByZS1maXJlCgkJCQkJCWZpcmluZ0luZGV4ID0gbGlzdC5sZW5ndGg7CgkJCQkJCW1lbW9yeSA9IGZhbHNlOwoJCQkJCX0KCQkJCX0KCQkJfQoKCQkJLy8gRm9yZ2V0IHRoZSBkYXRhIGlmIHdlJ3JlIGRvbmUgd2l0aCBpdAoJCQlpZiAoICFvcHRpb25zLm1lbW9yeSApIHsKCQkJCW1lbW9yeSA9IGZhbHNlOwoJCQl9CgoJCQlmaXJpbmcgPSBmYWxzZTsKCgkJCS8vIENsZWFuIHVwIGlmIHdlJ3JlIGRvbmUgZmlyaW5nIGZvciBnb29kCgkJCWlmICggbG9ja2VkICkgewoKCQkJCS8vIEtlZXAgYW4gZW1wdHkgbGlzdCBpZiB3ZSBoYXZlIGRhdGEgZm9yIGZ1dHVyZSBhZGQgY2FsbHMKCQkJCWlmICggbWVtb3J5ICkgewoJCQkJCWxpc3QgPSBbXTsKCgkJCQkvLyBPdGhlcndpc2UsIHRoaXMgb2JqZWN0IGlzIHNwZW50CgkJCQl9IGVsc2UgewoJCQkJCWxpc3QgPSAiIjsKCQkJCX0KCQkJfQoJCX0sCgoJCS8vIEFjdHVhbCBDYWxsYmFja3Mgb2JqZWN0CgkJc2VsZiA9IHsKCgkJCS8vIEFkZCBhIGNhbGxiYWNrIG9yIGEgY29sbGVjdGlvbiBvZiBjYWxsYmFja3MgdG8gdGhlIGxpc3QKCQkJYWRkOiBmdW5jdGlvbigpIHsKCQkJCWlmICggbGlzdCApIHsKCgkJCQkJLy8gSWYgd2UgaGF2ZSBtZW1vcnkgZnJvbSBhIHBhc3QgcnVuLCB3ZSBzaG91bGQgZmlyZSBhZnRlciBhZGRpbmcKCQkJCQlpZiAoIG1lbW9yeSAmJiAhZmlyaW5nICkgewoJCQkJCQlmaXJpbmdJbmRleCA9IGxpc3QubGVuZ3RoIC0gMTsKCQkJCQkJcXVldWUucHVzaCggbWVtb3J5ICk7CgkJCQkJfQoKCQkJCQkoIGZ1bmN0aW9uIGFkZCggYXJncyApIHsKCQkJCQkJalF1ZXJ5LmVhY2goIGFyZ3MsIGZ1bmN0aW9uKCBfLCBhcmcgKSB7CgkJCQkJCQlpZiAoIGlzRnVuY3Rpb24oIGFyZyApICkgewoJCQkJCQkJCWlmICggIW9wdGlvbnMudW5pcXVlIHx8ICFzZWxmLmhhcyggYXJnICkgKSB7CgkJCQkJCQkJCWxpc3QucHVzaCggYXJnICk7CgkJCQkJCQkJfQoJCQkJCQkJfSBlbHNlIGlmICggYXJnICYmIGFyZy5sZW5ndGggJiYgdG9UeXBlKCBhcmcgKSAhPT0gInN0cmluZyIgKSB7CgoJCQkJCQkJCS8vIEluc3BlY3QgcmVjdXJzaXZlbHkKCQkJCQkJCQlhZGQoIGFyZyApOwoJCQkJCQkJfQoJCQkJCQl9ICk7CgkJCQkJfSApKCBhcmd1bWVudHMgKTsKCgkJCQkJaWYgKCBtZW1vcnkgJiYgIWZpcmluZyApIHsKCQkJCQkJZmlyZSgpOwoJCQkJCX0KCQkJCX0KCQkJCXJldHVybiB0aGlzOwoJCQl9LAoKCQkJLy8gUmVtb3ZlIGEgY2FsbGJhY2sgZnJvbSB0aGUgbGlzdAoJCQlyZW1vdmU6IGZ1bmN0aW9uKCkgewoJCQkJalF1ZXJ5LmVhY2goIGFyZ3VtZW50cywgZnVuY3Rpb24oIF8sIGFyZyApIHsKCQkJCQl2YXIgaW5kZXg7CgkJCQkJd2hpbGUgKCAoIGluZGV4ID0galF1ZXJ5LmluQXJyYXkoIGFyZywgbGlzdCwgaW5kZXggKSApID4gLTEgKSB7CgkJCQkJCWxpc3Quc3BsaWNlKCBpbmRleCwgMSApOwoKCQkJCQkJLy8gSGFuZGxlIGZpcmluZyBpbmRleGVzCgkJCQkJCWlmICggaW5kZXggPD0gZmlyaW5nSW5kZXggKSB7CgkJCQkJCQlmaXJpbmdJbmRleC0tOwoJCQkJCQl9CgkJCQkJfQoJCQkJfSApOwoJCQkJcmV0dXJuIHRoaXM7CgkJCX0sCgoJCQkvLyBDaGVjayBpZiBhIGdpdmVuIGNhbGxiYWNrIGlzIGluIHRoZSBsaXN0LgoJCQkvLyBJZiBubyBhcmd1bWVudCBpcyBnaXZlbiwgcmV0dXJuIHdoZXRoZXIgb3Igbm90IGxpc3QgaGFzIGNhbGxiYWNrcyBhdHRhY2hlZC4KCQkJaGFzOiBmdW5jdGlvbiggZm4gKSB7CgkJCQlyZXR1cm4gZm4gPwoJCQkJCWpRdWVyeS5pbkFycmF5KCBmbiwgbGlzdCApID4gLTEgOgoJCQkJCWxpc3QubGVuZ3RoID4gMDsKCQkJfSwKCgkJCS8vIFJlbW92ZSBhbGwgY2FsbGJhY2tzIGZyb20gdGhlIGxpc3QKCQkJZW1wdHk6IGZ1bmN0aW9uKCkgewoJCQkJaWYgKCBsaXN0ICkgewoJCQkJCWxpc3QgPSBbXTsKCQkJCX0KCQkJCXJldHVybiB0aGlzOwoJCQl9LAoKCQkJLy8gRGlzYWJsZSAuZmlyZSBhbmQgLmFkZAoJCQkvLyBBYm9ydCBhbnkgY3VycmVudC9wZW5kaW5nIGV4ZWN1dGlvbnMKCQkJLy8gQ2xlYXIgYWxsIGNhbGxiYWNrcyBhbmQgdmFsdWVzCgkJCWRpc2FibGU6IGZ1bmN0aW9uKCkgewoJCQkJbG9ja2VkID0gcXVldWUgPSBbXTsKCQkJCWxpc3QgPSBtZW1vcnkgPSAiIjsKCQkJCXJldHVybiB0aGlzOwoJCQl9LAoJCQlkaXNhYmxlZDogZnVuY3Rpb24oKSB7CgkJCQlyZXR1cm4gIWxpc3Q7CgkJCX0sCgoJCQkvLyBEaXNhYmxlIC5maXJlCgkJCS8vIEFsc28gZGlzYWJsZSAuYWRkIHVubGVzcyB3ZSBoYXZlIG1lbW9yeSAoc2luY2UgaXQgd291bGQgaGF2ZSBubyBlZmZlY3QpCgkJCS8vIEFib3J0IGFueSBwZW5kaW5nIGV4ZWN1dGlvbnMKCQkJbG9jazogZnVuY3Rpb24oKSB7CgkJCQlsb2NrZWQgPSBxdWV1ZSA9IFtdOwoJCQkJaWYgKCAhbWVtb3J5ICYmICFmaXJpbmcgKSB7CgkJCQkJbGlzdCA9IG1lbW9yeSA9ICIiOwoJCQkJfQoJCQkJcmV0dXJuIHRoaXM7CgkJCX0sCgkJCWxvY2tlZDogZnVuY3Rpb24oKSB7CgkJCQlyZXR1cm4gISFsb2NrZWQ7CgkJCX0sCgoJCQkvLyBDYWxsIGFsbCBjYWxsYmFja3Mgd2l0aCB0aGUgZ2l2ZW4gY29udGV4dCBhbmQgYXJndW1lbnRzCgkJCWZpcmVXaXRoOiBmdW5jdGlvbiggY29udGV4dCwgYXJncyApIHsKCQkJCWlmICggIWxvY2tlZCApIHsKCQkJCQlhcmdzID0gYXJncyB8fCBbXTsKCQkJCQlhcmdzID0gWyBjb250ZXh0LCBhcmdzLnNsaWNlID8gYXJncy5zbGljZSgpIDogYXJncyBdOwoJCQkJCXF1ZXVlLnB1c2goIGFyZ3MgKTsKCQkJCQlpZiAoICFmaXJpbmcgKSB7CgkJCQkJCWZpcmUoKTsKCQkJCQl9CgkJCQl9CgkJCQlyZXR1cm4gdGhpczsKCQkJfSwKCgkJCS8vIENhbGwgYWxsIHRoZSBjYWxsYmFja3Mgd2l0aCB0aGUgZ2l2ZW4gYXJndW1lbnRzCgkJCWZpcmU6IGZ1bmN0aW9uKCkgewoJCQkJc2VsZi5maXJlV2l0aCggdGhpcywgYXJndW1lbnRzICk7CgkJCQlyZXR1cm4gdGhpczsKCQkJfSwKCgkJCS8vIFRvIGtub3cgaWYgdGhlIGNhbGxiYWNrcyBoYXZlIGFscmVhZHkgYmVlbiBjYWxsZWQgYXQgbGVhc3Qgb25jZQoJCQlmaXJlZDogZnVuY3Rpb24oKSB7CgkJCQlyZXR1cm4gISFmaXJlZDsKCQkJfQoJCX07CgoJcmV0dXJuIHNlbGY7Cn07CgoKZnVuY3Rpb24gSWRlbnRpdHkoIHYgKSB7CglyZXR1cm4gdjsKfQpmdW5jdGlvbiBUaHJvd2VyKCBleCApIHsKCXRocm93IGV4Owp9CgpmdW5jdGlvbiBhZG9wdFZhbHVlKCB2YWx1ZSwgcmVzb2x2ZSwgcmVqZWN0LCBub1ZhbHVlICkgewoJdmFyIG1ldGhvZDsKCgl0cnkgewoKCQkvLyBDaGVjayBmb3IgcHJvbWlzZSBhc3BlY3QgZmlyc3QgdG8gcHJpdmlsZWdlIHN5bmNocm9ub3VzIGJlaGF2aW9yCgkJaWYgKCB2YWx1ZSAmJiBpc0Z1bmN0aW9uKCAoIG1ldGhvZCA9IHZhbHVlLnByb21pc2UgKSApICkgewoJCQltZXRob2QuY2FsbCggdmFsdWUgKS5kb25lKCByZXNvbHZlICkuZmFpbCggcmVqZWN0ICk7CgoJCS8vIE90aGVyIHRoZW5hYmxlcwoJCX0gZWxzZSBpZiAoIHZhbHVlICYmIGlzRnVuY3Rpb24oICggbWV0aG9kID0gdmFsdWUudGhlbiApICkgKSB7CgkJCW1ldGhvZC5jYWxsKCB2YWx1ZSwgcmVzb2x2ZSwgcmVqZWN0ICk7CgoJCS8vIE90aGVyIG5vbi10aGVuYWJsZXMKCQl9IGVsc2UgewoKCQkJLy8gQ29udHJvbCBgcmVzb2x2ZWAgYXJndW1lbnRzIGJ5IGxldHRpbmcgQXJyYXkjc2xpY2UgY2FzdCBib29sZWFuIGBub1ZhbHVlYCB0byBpbnRlZ2VyOgoJCQkvLyAqIGZhbHNlOiBbIHZhbHVlIF0uc2xpY2UoIDAgKSA9PiByZXNvbHZlKCB2YWx1ZSApCgkJCS8vICogdHJ1ZTogWyB2YWx1ZSBdLnNsaWNlKCAxICkgPT4gcmVzb2x2ZSgpCgkJCXJlc29sdmUuYXBwbHkoIHVuZGVmaW5lZCwgWyB2YWx1ZSBdLnNsaWNlKCBub1ZhbHVlICkgKTsKCQl9CgoJLy8gRm9yIFByb21pc2VzL0ErLCBjb252ZXJ0IGV4Y2VwdGlvbnMgaW50byByZWplY3Rpb25zCgkvLyBTaW5jZSBqUXVlcnkud2hlbiBkb2Vzbid0IHVud3JhcCB0aGVuYWJsZXMsIHdlIGNhbiBza2lwIHRoZSBleHRyYSBjaGVja3MgYXBwZWFyaW5nIGluCgkvLyBEZWZlcnJlZCN0aGVuIHRvIGNvbmRpdGlvbmFsbHkgc3VwcHJlc3MgcmVqZWN0aW9uLgoJfSBjYXRjaCAoIHZhbHVlICkgewoKCQkvLyBTdXBwb3J0OiBBbmRyb2lkIDQuMCBvbmx5CgkJLy8gU3RyaWN0IG1vZGUgZnVuY3Rpb25zIGludm9rZWQgd2l0aG91dCAuY2FsbC8uYXBwbHkgZ2V0IGdsb2JhbC1vYmplY3QgY29udGV4dAoJCXJlamVjdC5hcHBseSggdW5kZWZpbmVkLCBbIHZhbHVlIF0gKTsKCX0KfQoKalF1ZXJ5LmV4dGVuZCggewoKCURlZmVycmVkOiBmdW5jdGlvbiggZnVuYyApIHsKCQl2YXIgdHVwbGVzID0gWwoKCQkJCS8vIGFjdGlvbiwgYWRkIGxpc3RlbmVyLCBjYWxsYmFja3MsCgkJCQkvLyAuLi4gLnRoZW4gaGFuZGxlcnMsIGFyZ3VtZW50IGluZGV4LCBbZmluYWwgc3RhdGVdCgkJCQlbICJub3RpZnkiLCAicHJvZ3Jlc3MiLCBqUXVlcnkuQ2FsbGJhY2tzKCAibWVtb3J5IiApLAoJCQkJCWpRdWVyeS5DYWxsYmFja3MoICJtZW1vcnkiICksIDIgXSwKCQkJCVsgInJlc29sdmUiLCAiZG9uZSIsIGpRdWVyeS5DYWxsYmFja3MoICJvbmNlIG1lbW9yeSIgKSwKCQkJCQlqUXVlcnkuQ2FsbGJhY2tzKCAib25jZSBtZW1vcnkiICksIDAsICJyZXNvbHZlZCIgXSwKCQkJCVsgInJlamVjdCIsICJmYWlsIiwgalF1ZXJ5LkNhbGxiYWNrcyggIm9uY2UgbWVtb3J5IiApLAoJCQkJCWpRdWVyeS5DYWxsYmFja3MoICJvbmNlIG1lbW9yeSIgKSwgMSwgInJlamVjdGVkIiBdCgkJCV0sCgkJCXN0YXRlID0gInBlbmRpbmciLAoJCQlwcm9taXNlID0gewoJCQkJc3RhdGU6IGZ1bmN0aW9uKCkgewoJCQkJCXJldHVybiBzdGF0ZTsKCQkJCX0sCgkJCQlhbHdheXM6IGZ1bmN0aW9uKCkgewoJCQkJCWRlZmVycmVkLmRvbmUoIGFyZ3VtZW50cyApLmZhaWwoIGFyZ3VtZW50cyApOwoJCQkJCXJldHVybiB0aGlzOwoJCQkJfSwKCQkJCSJjYXRjaCI6IGZ1bmN0aW9uKCBmbiApIHsKCQkJCQlyZXR1cm4gcHJvbWlzZS50aGVuKCBudWxsLCBmbiApOwoJCQkJfSwKCgkJCQkvLyBLZWVwIHBpcGUgZm9yIGJhY2stY29tcGF0CgkJCQlwaXBlOiBmdW5jdGlvbiggLyogZm5Eb25lLCBmbkZhaWwsIGZuUHJvZ3Jlc3MgKi8gKSB7CgkJCQkJdmFyIGZucyA9IGFyZ3VtZW50czsKCgkJCQkJcmV0dXJuIGpRdWVyeS5EZWZlcnJlZCggZnVuY3Rpb24oIG5ld0RlZmVyICkgewoJCQkJCQlqUXVlcnkuZWFjaCggdHVwbGVzLCBmdW5jdGlvbiggX2ksIHR1cGxlICkgewoKCQkJCQkJCS8vIE1hcCB0dXBsZXMgKHByb2dyZXNzLCBkb25lLCBmYWlsKSB0byBhcmd1bWVudHMgKGRvbmUsIGZhaWwsIHByb2dyZXNzKQoJCQkJCQkJdmFyIGZuID0gaXNGdW5jdGlvbiggZm5zWyB0dXBsZVsgNCBdIF0gKSAmJiBmbnNbIHR1cGxlWyA0IF0gXTsKCgkJCQkJCQkvLyBkZWZlcnJlZC5wcm9ncmVzcyhmdW5jdGlvbigpIHsgYmluZCB0byBuZXdEZWZlciBvciBuZXdEZWZlci5ub3RpZnkgfSkKCQkJCQkJCS8vIGRlZmVycmVkLmRvbmUoZnVuY3Rpb24oKSB7IGJpbmQgdG8gbmV3RGVmZXIgb3IgbmV3RGVmZXIucmVzb2x2ZSB9KQoJCQkJCQkJLy8gZGVmZXJyZWQuZmFpbChmdW5jdGlvbigpIHsgYmluZCB0byBuZXdEZWZlciBvciBuZXdEZWZlci5yZWplY3QgfSkKCQkJCQkJCWRlZmVycmVkWyB0dXBsZVsgMSBdIF0oIGZ1bmN0aW9uKCkgewoJCQkJCQkJCXZhciByZXR1cm5lZCA9IGZuICYmIGZuLmFwcGx5KCB0aGlzLCBhcmd1bWVudHMgKTsKCQkJCQkJCQlpZiAoIHJldHVybmVkICYmIGlzRnVuY3Rpb24oIHJldHVybmVkLnByb21pc2UgKSApIHsKCQkJCQkJCQkJcmV0dXJuZWQucHJvbWlzZSgpCgkJCQkJCQkJCQkucHJvZ3Jlc3MoIG5ld0RlZmVyLm5vdGlmeSApCgkJCQkJCQkJCQkuZG9uZSggbmV3RGVmZXIucmVzb2x2ZSApCgkJCQkJCQkJCQkuZmFpbCggbmV3RGVmZXIucmVqZWN0ICk7CgkJCQkJCQkJfSBlbHNlIHsKCQkJCQkJCQkJbmV3RGVmZXJbIHR1cGxlWyAwIF0gKyAiV2l0aCIgXSgKCQkJCQkJCQkJCXRoaXMsCgkJCQkJCQkJCQlmbiA/IFsgcmV0dXJuZWQgXSA6IGFyZ3VtZW50cwoJCQkJCQkJCQkpOwoJCQkJCQkJCX0KCQkJCQkJCX0gKTsKCQkJCQkJfSApOwoJCQkJCQlmbnMgPSBudWxsOwoJCQkJCX0gKS5wcm9taXNlKCk7CgkJCQl9LAoJCQkJdGhlbjogZnVuY3Rpb24oIG9uRnVsZmlsbGVkLCBvblJlamVjdGVkLCBvblByb2dyZXNzICkgewoJCQkJCXZhciBtYXhEZXB0aCA9IDA7CgkJCQkJZnVuY3Rpb24gcmVzb2x2ZSggZGVwdGgsIGRlZmVycmVkLCBoYW5kbGVyLCBzcGVjaWFsICkgewoJCQkJCQlyZXR1cm4gZnVuY3Rpb24oKSB7CgkJCQkJCQl2YXIgdGhhdCA9IHRoaXMsCgkJCQkJCQkJYXJncyA9IGFyZ3VtZW50cywKCQkJCQkJCQltaWdodFRocm93ID0gZnVuY3Rpb24oKSB7CgkJCQkJCQkJCXZhciByZXR1cm5lZCwgdGhlbjsKCgkJCQkJCQkJCS8vIFN1cHBvcnQ6IFByb21pc2VzL0ErIHNlY3Rpb24gMi4zLjMuMy4zCgkJCQkJCQkJCS8vIGh0dHBzOi8vcHJvbWlzZXNhcGx1cy5jb20vI3BvaW50LTU5CgkJCQkJCQkJCS8vIElnbm9yZSBkb3VibGUtcmVzb2x1dGlvbiBhdHRlbXB0cwoJCQkJCQkJCQlpZiAoIGRlcHRoIDwgbWF4RGVwdGggKSB7CgkJCQkJCQkJCQlyZXR1cm47CgkJCQkJCQkJCX0KCgkJCQkJCQkJCXJldHVybmVkID0gaGFuZGxlci5hcHBseSggdGhhdCwgYXJncyApOwoKCQkJCQkJCQkJLy8gU3VwcG9ydDogUHJvbWlzZXMvQSsgc2VjdGlvbiAyLjMuMQoJCQkJCQkJCQkvLyBodHRwczovL3Byb21pc2VzYXBsdXMuY29tLyNwb2ludC00OAoJCQkJCQkJCQlpZiAoIHJldHVybmVkID09PSBkZWZlcnJlZC5wcm9taXNlKCkgKSB7CgkJCQkJCQkJCQl0aHJvdyBuZXcgVHlwZUVycm9yKCAiVGhlbmFibGUgc2VsZi1yZXNvbHV0aW9uIiApOwoJCQkJCQkJCQl9CgoJCQkJCQkJCQkvLyBTdXBwb3J0OiBQcm9taXNlcy9BKyBzZWN0aW9ucyAyLjMuMy4xLCAzLjUKCQkJCQkJCQkJLy8gaHR0cHM6Ly9wcm9taXNlc2FwbHVzLmNvbS8jcG9pbnQtNTQKCQkJCQkJCQkJLy8gaHR0cHM6Ly9wcm9taXNlc2FwbHVzLmNvbS8jcG9pbnQtNzUKCQkJCQkJCQkJLy8gUmV0cmlldmUgYHRoZW5gIG9ubHkgb25jZQoJCQkJCQkJCQl0aGVuID0gcmV0dXJuZWQgJiYKCgkJCQkJCQkJCQkvLyBTdXBwb3J0OiBQcm9taXNlcy9BKyBzZWN0aW9uIDIuMy40CgkJCQkJCQkJCQkvLyBodHRwczovL3Byb21pc2VzYXBsdXMuY29tLyNwb2ludC02NAoJCQkJCQkJCQkJLy8gT25seSBjaGVjayBvYmplY3RzIGFuZCBmdW5jdGlvbnMgZm9yIHRoZW5hYmlsaXR5CgkJCQkJCQkJCQkoIHR5cGVvZiByZXR1cm5lZCA9PT0gIm9iamVjdCIgfHwKCQkJCQkJCQkJCQl0eXBlb2YgcmV0dXJuZWQgPT09ICJmdW5jdGlvbiIgKSAmJgoJCQkJCQkJCQkJcmV0dXJuZWQudGhlbjsKCgkJCQkJCQkJCS8vIEhhbmRsZSBhIHJldHVybmVkIHRoZW5hYmxlCgkJCQkJCQkJCWlmICggaXNGdW5jdGlvbiggdGhlbiApICkgewoKCQkJCQkJCQkJCS8vIFNwZWNpYWwgcHJvY2Vzc29ycyAobm90aWZ5KSBqdXN0IHdhaXQgZm9yIHJlc29sdXRpb24KCQkJCQkJCQkJCWlmICggc3BlY2lhbCApIHsKCQkJCQkJCQkJCQl0aGVuLmNhbGwoCgkJCQkJCQkJCQkJCXJldHVybmVkLAoJCQkJCQkJCQkJCQlyZXNvbHZlKCBtYXhEZXB0aCwgZGVmZXJyZWQsIElkZW50aXR5LCBzcGVjaWFsICksCgkJCQkJCQkJCQkJCXJlc29sdmUoIG1heERlcHRoLCBkZWZlcnJlZCwgVGhyb3dlciwgc3BlY2lhbCApCgkJCQkJCQkJCQkJKTsKCgkJCQkJCQkJCQkvLyBOb3JtYWwgcHJvY2Vzc29ycyAocmVzb2x2ZSkgYWxzbyBob29rIGludG8gcHJvZ3Jlc3MKCQkJCQkJCQkJCX0gZWxzZSB7CgoJCQkJCQkJCQkJCS8vIC4uLmFuZCBkaXNyZWdhcmQgb2xkZXIgcmVzb2x1dGlvbiB2YWx1ZXMKCQkJCQkJCQkJCQltYXhEZXB0aCsrOwoKCQkJCQkJCQkJCQl0aGVuLmNhbGwoCgkJCQkJCQkJCQkJCXJldHVybmVkLAoJCQkJCQkJCQkJCQlyZXNvbHZlKCBtYXhEZXB0aCwgZGVmZXJyZWQsIElkZW50aXR5LCBzcGVjaWFsICksCgkJCQkJCQkJCQkJCXJlc29sdmUoIG1heERlcHRoLCBkZWZlcnJlZCwgVGhyb3dlciwgc3BlY2lhbCApLAoJCQkJCQkJCQkJCQlyZXNvbHZlKCBtYXhEZXB0aCwgZGVmZXJyZWQsIElkZW50aXR5LAoJCQkJCQkJCQkJCQkJZGVmZXJyZWQubm90aWZ5V2l0aCApCgkJCQkJCQkJCQkJKTsKCQkJCQkJCQkJCX0KCgkJCQkJCQkJCS8vIEhhbmRsZSBhbGwgb3RoZXIgcmV0dXJuZWQgdmFsdWVzCgkJCQkJCQkJCX0gZWxzZSB7CgoJCQkJCQkJCQkJLy8gT25seSBzdWJzdGl0dXRlIGhhbmRsZXJzIHBhc3Mgb24gY29udGV4dAoJCQkJCQkJCQkJLy8gYW5kIG11bHRpcGxlIHZhbHVlcyAobm9uLXNwZWMgYmVoYXZpb3IpCgkJCQkJCQkJCQlpZiAoIGhhbmRsZXIgIT09IElkZW50aXR5ICkgewoJCQkJCQkJCQkJCXRoYXQgPSB1bmRlZmluZWQ7CgkJCQkJCQkJCQkJYXJncyA9IFsgcmV0dXJuZWQgXTsKCQkJCQkJCQkJCX0KCgkJCQkJCQkJCQkvLyBQcm9jZXNzIHRoZSB2YWx1ZShzKQoJCQkJCQkJCQkJLy8gRGVmYXVsdCBwcm9jZXNzIGlzIHJlc29sdmUKCQkJCQkJCQkJCSggc3BlY2lhbCB8fCBkZWZlcnJlZC5yZXNvbHZlV2l0aCApKCB0aGF0LCBhcmdzICk7CgkJCQkJCQkJCX0KCQkJCQkJCQl9LAoKCQkJCQkJCQkvLyBPbmx5IG5vcm1hbCBwcm9jZXNzb3JzIChyZXNvbHZlKSBjYXRjaCBhbmQgcmVqZWN0IGV4Y2VwdGlvbnMKCQkJCQkJCQlwcm9jZXNzID0gc3BlY2lhbCA/CgkJCQkJCQkJCW1pZ2h0VGhyb3cgOgoJCQkJCQkJCQlmdW5jdGlvbigpIHsKCQkJCQkJCQkJCXRyeSB7CgkJCQkJCQkJCQkJbWlnaHRUaHJvdygpOwoJCQkJCQkJCQkJfSBjYXRjaCAoIGUgKSB7CgoJCQkJCQkJCQkJCWlmICggalF1ZXJ5LkRlZmVycmVkLmV4Y2VwdGlvbkhvb2sgKSB7CgkJCQkJCQkJCQkJCWpRdWVyeS5EZWZlcnJlZC5leGNlcHRpb25Ib29rKCBlLAoJCQkJCQkJCQkJCQkJcHJvY2Vzcy5zdGFja1RyYWNlICk7CgkJCQkJCQkJCQkJfQoKCQkJCQkJCQkJCQkvLyBTdXBwb3J0OiBQcm9taXNlcy9BKyBzZWN0aW9uIDIuMy4zLjMuNC4xCgkJCQkJCQkJCQkJLy8gaHR0cHM6Ly9wcm9taXNlc2FwbHVzLmNvbS8jcG9pbnQtNjEKCQkJCQkJCQkJCQkvLyBJZ25vcmUgcG9zdC1yZXNvbHV0aW9uIGV4Y2VwdGlvbnMKCQkJCQkJCQkJCQlpZiAoIGRlcHRoICsgMSA+PSBtYXhEZXB0aCApIHsKCgkJCQkJCQkJCQkJCS8vIE9ubHkgc3Vic3RpdHV0ZSBoYW5kbGVycyBwYXNzIG9uIGNvbnRleHQKCQkJCQkJCQkJCQkJLy8gYW5kIG11bHRpcGxlIHZhbHVlcyAobm9uLXNwZWMgYmVoYXZpb3IpCgkJCQkJCQkJCQkJCWlmICggaGFuZGxlciAhPT0gVGhyb3dlciApIHsKCQkJCQkJCQkJCQkJCXRoYXQgPSB1bmRlZmluZWQ7CgkJCQkJCQkJCQkJCQlhcmdzID0gWyBlIF07CgkJCQkJCQkJCQkJCX0KCgkJCQkJCQkJCQkJCWRlZmVycmVkLnJlamVjdFdpdGgoIHRoYXQsIGFyZ3MgKTsKCQkJCQkJCQkJCQl9CgkJCQkJCQkJCQl9CgkJCQkJCQkJCX07CgoJCQkJCQkJLy8gU3VwcG9ydDogUHJvbWlzZXMvQSsgc2VjdGlvbiAyLjMuMy4zLjEKCQkJCQkJCS8vIGh0dHBzOi8vcHJvbWlzZXNhcGx1cy5jb20vI3BvaW50LTU3CgkJCQkJCQkvLyBSZS1yZXNvbHZlIHByb21pc2VzIGltbWVkaWF0ZWx5IHRvIGRvZGdlIGZhbHNlIHJlamVjdGlvbiBmcm9tCgkJCQkJCQkvLyBzdWJzZXF1ZW50IGVycm9ycwoJCQkJCQkJaWYgKCBkZXB0aCApIHsKCQkJCQkJCQlwcm9jZXNzKCk7CgkJCQkJCQl9IGVsc2UgewoKCQkJCQkJCQkvLyBDYWxsIGFuIG9wdGlvbmFsIGhvb2sgdG8gcmVjb3JkIHRoZSBzdGFjaywgaW4gY2FzZSBvZiBleGNlcHRpb24KCQkJCQkJCQkvLyBzaW5jZSBpdCdzIG90aGVyd2lzZSBsb3N0IHdoZW4gZXhlY3V0aW9uIGdvZXMgYXN5bmMKCQkJCQkJCQlpZiAoIGpRdWVyeS5EZWZlcnJlZC5nZXRTdGFja0hvb2sgKSB7CgkJCQkJCQkJCXByb2Nlc3Muc3RhY2tUcmFjZSA9IGpRdWVyeS5EZWZlcnJlZC5nZXRTdGFja0hvb2soKTsKCQkJCQkJCQl9CgkJCQkJCQkJd2luZG93LnNldFRpbWVvdXQoIHByb2Nlc3MgKTsKCQkJCQkJCX0KCQkJCQkJfTsKCQkJCQl9CgoJCQkJCXJldHVybiBqUXVlcnkuRGVmZXJyZWQoIGZ1bmN0aW9uKCBuZXdEZWZlciApIHsKCgkJCQkJCS8vIHByb2dyZXNzX2hhbmRsZXJzLmFkZCggLi4uICkKCQkJCQkJdHVwbGVzWyAwIF1bIDMgXS5hZGQoCgkJCQkJCQlyZXNvbHZlKAoJCQkJCQkJCTAsCgkJCQkJCQkJbmV3RGVmZXIsCgkJCQkJCQkJaXNGdW5jdGlvbiggb25Qcm9ncmVzcyApID8KCQkJCQkJCQkJb25Qcm9ncmVzcyA6CgkJCQkJCQkJCUlkZW50aXR5LAoJCQkJCQkJCW5ld0RlZmVyLm5vdGlmeVdpdGgKCQkJCQkJCSkKCQkJCQkJKTsKCgkJCQkJCS8vIGZ1bGZpbGxlZF9oYW5kbGVycy5hZGQoIC4uLiApCgkJCQkJCXR1cGxlc1sgMSBdWyAzIF0uYWRkKAoJCQkJCQkJcmVzb2x2ZSgKCQkJCQkJCQkwLAoJCQkJCQkJCW5ld0RlZmVyLAoJCQkJCQkJCWlzRnVuY3Rpb24oIG9uRnVsZmlsbGVkICkgPwoJCQkJCQkJCQlvbkZ1bGZpbGxlZCA6CgkJCQkJCQkJCUlkZW50aXR5CgkJCQkJCQkpCgkJCQkJCSk7CgoJCQkJCQkvLyByZWplY3RlZF9oYW5kbGVycy5hZGQoIC4uLiApCgkJCQkJCXR1cGxlc1sgMiBdWyAzIF0uYWRkKAoJCQkJCQkJcmVzb2x2ZSgKCQkJCQkJCQkwLAoJCQkJCQkJCW5ld0RlZmVyLAoJCQkJCQkJCWlzRnVuY3Rpb24oIG9uUmVqZWN0ZWQgKSA/CgkJCQkJCQkJCW9uUmVqZWN0ZWQgOgoJCQkJCQkJCQlUaHJvd2VyCgkJCQkJCQkpCgkJCQkJCSk7CgkJCQkJfSApLnByb21pc2UoKTsKCQkJCX0sCgoJCQkJLy8gR2V0IGEgcHJvbWlzZSBmb3IgdGhpcyBkZWZlcnJlZAoJCQkJLy8gSWYgb2JqIGlzIHByb3ZpZGVkLCB0aGUgcHJvbWlzZSBhc3BlY3QgaXMgYWRkZWQgdG8gdGhlIG9iamVjdAoJCQkJcHJvbWlzZTogZnVuY3Rpb24oIG9iaiApIHsKCQkJCQlyZXR1cm4gb2JqICE9IG51bGwgPyBqUXVlcnkuZXh0ZW5kKCBvYmosIHByb21pc2UgKSA6IHByb21pc2U7CgkJCQl9CgkJCX0sCgkJCWRlZmVycmVkID0ge307CgoJCS8vIEFkZCBsaXN0LXNwZWNpZmljIG1ldGhvZHMKCQlqUXVlcnkuZWFjaCggdHVwbGVzLCBmdW5jdGlvbiggaSwgdHVwbGUgKSB7CgkJCXZhciBsaXN0ID0gdHVwbGVbIDIgXSwKCQkJCXN0YXRlU3RyaW5nID0gdHVwbGVbIDUgXTsKCgkJCS8vIHByb21pc2UucHJvZ3Jlc3MgPSBsaXN0LmFkZAoJCQkvLyBwcm9taXNlLmRvbmUgPSBsaXN0LmFkZAoJCQkvLyBwcm9taXNlLmZhaWwgPSBsaXN0LmFkZAoJCQlwcm9taXNlWyB0dXBsZVsgMSBdIF0gPSBsaXN0LmFkZDsKCgkJCS8vIEhhbmRsZSBzdGF0ZQoJCQlpZiAoIHN0YXRlU3RyaW5nICkgewoJCQkJbGlzdC5hZGQoCgkJCQkJZnVuY3Rpb24oKSB7CgoJCQkJCQkvLyBzdGF0ZSA9ICJyZXNvbHZlZCIgKGkuZS4sIGZ1bGZpbGxlZCkKCQkJCQkJLy8gc3RhdGUgPSAicmVqZWN0ZWQiCgkJCQkJCXN0YXRlID0gc3RhdGVTdHJpbmc7CgkJCQkJfSwKCgkJCQkJLy8gcmVqZWN0ZWRfY2FsbGJhY2tzLmRpc2FibGUKCQkJCQkvLyBmdWxmaWxsZWRfY2FsbGJhY2tzLmRpc2FibGUKCQkJCQl0dXBsZXNbIDMgLSBpIF1bIDIgXS5kaXNhYmxlLAoKCQkJCQkvLyByZWplY3RlZF9oYW5kbGVycy5kaXNhYmxlCgkJCQkJLy8gZnVsZmlsbGVkX2hhbmRsZXJzLmRpc2FibGUKCQkJCQl0dXBsZXNbIDMgLSBpIF1bIDMgXS5kaXNhYmxlLAoKCQkJCQkvLyBwcm9ncmVzc19jYWxsYmFja3MubG9jawoJCQkJCXR1cGxlc1sgMCBdWyAyIF0ubG9jaywKCgkJCQkJLy8gcHJvZ3Jlc3NfaGFuZGxlcnMubG9jawoJCQkJCXR1cGxlc1sgMCBdWyAzIF0ubG9jawoJCQkJKTsKCQkJfQoKCQkJLy8gcHJvZ3Jlc3NfaGFuZGxlcnMuZmlyZQoJCQkvLyBmdWxmaWxsZWRfaGFuZGxlcnMuZmlyZQoJCQkvLyByZWplY3RlZF9oYW5kbGVycy5maXJlCgkJCWxpc3QuYWRkKCB0dXBsZVsgMyBdLmZpcmUgKTsKCgkJCS8vIGRlZmVycmVkLm5vdGlmeSA9IGZ1bmN0aW9uKCkgeyBkZWZlcnJlZC5ub3RpZnlXaXRoKC4uLikgfQoJCQkvLyBkZWZlcnJlZC5yZXNvbHZlID0gZnVuY3Rpb24oKSB7IGRlZmVycmVkLnJlc29sdmVXaXRoKC4uLikgfQoJCQkvLyBkZWZlcnJlZC5yZWplY3QgPSBmdW5jdGlvbigpIHsgZGVmZXJyZWQucmVqZWN0V2l0aCguLi4pIH0KCQkJZGVmZXJyZWRbIHR1cGxlWyAwIF0gXSA9IGZ1bmN0aW9uKCkgewoJCQkJZGVmZXJyZWRbIHR1cGxlWyAwIF0gKyAiV2l0aCIgXSggdGhpcyA9PT0gZGVmZXJyZWQgPyB1bmRlZmluZWQgOiB0aGlzLCBhcmd1bWVudHMgKTsKCQkJCXJldHVybiB0aGlzOwoJCQl9OwoKCQkJLy8gZGVmZXJyZWQubm90aWZ5V2l0aCA9IGxpc3QuZmlyZVdpdGgKCQkJLy8gZGVmZXJyZWQucmVzb2x2ZVdpdGggPSBsaXN0LmZpcmVXaXRoCgkJCS8vIGRlZmVycmVkLnJlamVjdFdpdGggPSBsaXN0LmZpcmVXaXRoCgkJCWRlZmVycmVkWyB0dXBsZVsgMCBdICsgIldpdGgiIF0gPSBsaXN0LmZpcmVXaXRoOwoJCX0gKTsKCgkJLy8gTWFrZSB0aGUgZGVmZXJyZWQgYSBwcm9taXNlCgkJcHJvbWlzZS5wcm9taXNlKCBkZWZlcnJlZCApOwoKCQkvLyBDYWxsIGdpdmVuIGZ1bmMgaWYgYW55CgkJaWYgKCBmdW5jICkgewoJCQlmdW5jLmNhbGwoIGRlZmVycmVkLCBkZWZlcnJlZCApOwoJCX0KCgkJLy8gQWxsIGRvbmUhCgkJcmV0dXJuIGRlZmVycmVkOwoJfSwKCgkvLyBEZWZlcnJlZCBoZWxwZXIKCXdoZW46IGZ1bmN0aW9uKCBzaW5nbGVWYWx1ZSApIHsKCQl2YXIKCgkJCS8vIGNvdW50IG9mIHVuY29tcGxldGVkIHN1Ym9yZGluYXRlcwoJCQlyZW1haW5pbmcgPSBhcmd1bWVudHMubGVuZ3RoLAoKCQkJLy8gY291bnQgb2YgdW5wcm9jZXNzZWQgYXJndW1lbnRzCgkJCWkgPSByZW1haW5pbmcsCgoJCQkvLyBzdWJvcmRpbmF0ZSBmdWxmaWxsbWVudCBkYXRhCgkJCXJlc29sdmVDb250ZXh0cyA9IEFycmF5KCBpICksCgkJCXJlc29sdmVWYWx1ZXMgPSBzbGljZS5jYWxsKCBhcmd1bWVudHMgKSwKCgkJCS8vIHRoZSBwcmltYXJ5IERlZmVycmVkCgkJCXByaW1hcnkgPSBqUXVlcnkuRGVmZXJyZWQoKSwKCgkJCS8vIHN1Ym9yZGluYXRlIGNhbGxiYWNrIGZhY3RvcnkKCQkJdXBkYXRlRnVuYyA9IGZ1bmN0aW9uKCBpICkgewoJCQkJcmV0dXJuIGZ1bmN0aW9uKCB2YWx1ZSApIHsKCQkJCQlyZXNvbHZlQ29udGV4dHNbIGkgXSA9IHRoaXM7CgkJCQkJcmVzb2x2ZVZhbHVlc1sgaSBdID0gYXJndW1lbnRzLmxlbmd0aCA+IDEgPyBzbGljZS5jYWxsKCBhcmd1bWVudHMgKSA6IHZhbHVlOwoJCQkJCWlmICggISggLS1yZW1haW5pbmcgKSApIHsKCQkJCQkJcHJpbWFyeS5yZXNvbHZlV2l0aCggcmVzb2x2ZUNvbnRleHRzLCByZXNvbHZlVmFsdWVzICk7CgkJCQkJfQoJCQkJfTsKCQkJfTsKCgkJLy8gU2luZ2xlLSBhbmQgZW1wdHkgYXJndW1lbnRzIGFyZSBhZG9wdGVkIGxpa2UgUHJvbWlzZS5yZXNvbHZlCgkJaWYgKCByZW1haW5pbmcgPD0gMSApIHsKCQkJYWRvcHRWYWx1ZSggc2luZ2xlVmFsdWUsIHByaW1hcnkuZG9uZSggdXBkYXRlRnVuYyggaSApICkucmVzb2x2ZSwgcHJpbWFyeS5yZWplY3QsCgkJCQkhcmVtYWluaW5nICk7CgoJCQkvLyBVc2UgLnRoZW4oKSB0byB1bndyYXAgc2Vjb25kYXJ5IHRoZW5hYmxlcyAoY2YuIGdoLTMwMDApCgkJCWlmICggcHJpbWFyeS5zdGF0ZSgpID09PSAicGVuZGluZyIgfHwKCQkJCWlzRnVuY3Rpb24oIHJlc29sdmVWYWx1ZXNbIGkgXSAmJiByZXNvbHZlVmFsdWVzWyBpIF0udGhlbiApICkgewoKCQkJCXJldHVybiBwcmltYXJ5LnRoZW4oKTsKCQkJfQoJCX0KCgkJLy8gTXVsdGlwbGUgYXJndW1lbnRzIGFyZSBhZ2dyZWdhdGVkIGxpa2UgUHJvbWlzZS5hbGwgYXJyYXkgZWxlbWVudHMKCQl3aGlsZSAoIGktLSApIHsKCQkJYWRvcHRWYWx1ZSggcmVzb2x2ZVZhbHVlc1sgaSBdLCB1cGRhdGVGdW5jKCBpICksIHByaW1hcnkucmVqZWN0ICk7CgkJfQoKCQlyZXR1cm4gcHJpbWFyeS5wcm9taXNlKCk7Cgl9Cn0gKTsKCgovLyBUaGVzZSB1c3VhbGx5IGluZGljYXRlIGEgcHJvZ3JhbW1lciBtaXN0YWtlIGR1cmluZyBkZXZlbG9wbWVudCwKLy8gd2FybiBhYm91dCB0aGVtIEFTQVAgcmF0aGVyIHRoYW4gc3dhbGxvd2luZyB0aGVtIGJ5IGRlZmF1bHQuCnZhciByZXJyb3JOYW1lcyA9IC9eKEV2YWx8SW50ZXJuYWx8UmFuZ2V8UmVmZXJlbmNlfFN5bnRheHxUeXBlfFVSSSlFcnJvciQvOwoKalF1ZXJ5LkRlZmVycmVkLmV4Y2VwdGlvbkhvb2sgPSBmdW5jdGlvbiggZXJyb3IsIHN0YWNrICkgewoKCS8vIFN1cHBvcnQ6IElFIDggLSA5IG9ubHkKCS8vIENvbnNvbGUgZXhpc3RzIHdoZW4gZGV2IHRvb2xzIGFyZSBvcGVuLCB3aGljaCBjYW4gaGFwcGVuIGF0IGFueSB0aW1lCglpZiAoIHdpbmRvdy5jb25zb2xlICYmIHdpbmRvdy5jb25zb2xlLndhcm4gJiYgZXJyb3IgJiYgcmVycm9yTmFtZXMudGVzdCggZXJyb3IubmFtZSApICkgewoJCXdpbmRvdy5jb25zb2xlLndhcm4oICJqUXVlcnkuRGVmZXJyZWQgZXhjZXB0aW9uOiAiICsgZXJyb3IubWVzc2FnZSwgZXJyb3Iuc3RhY2ssIHN0YWNrICk7Cgl9Cn07CgoKCgpqUXVlcnkucmVhZHlFeGNlcHRpb24gPSBmdW5jdGlvbiggZXJyb3IgKSB7Cgl3aW5kb3cuc2V0VGltZW91dCggZnVuY3Rpb24oKSB7CgkJdGhyb3cgZXJyb3I7Cgl9ICk7Cn07CgoKCgovLyBUaGUgZGVmZXJyZWQgdXNlZCBvbiBET00gcmVhZHkKdmFyIHJlYWR5TGlzdCA9IGpRdWVyeS5EZWZlcnJlZCgpOwoKalF1ZXJ5LmZuLnJlYWR5ID0gZnVuY3Rpb24oIGZuICkgewoKCXJlYWR5TGlzdAoJCS50aGVuKCBmbiApCgoJCS8vIFdyYXAgalF1ZXJ5LnJlYWR5RXhjZXB0aW9uIGluIGEgZnVuY3Rpb24gc28gdGhhdCB0aGUgbG9va3VwCgkJLy8gaGFwcGVucyBhdCB0aGUgdGltZSBvZiBlcnJvciBoYW5kbGluZyBpbnN0ZWFkIG9mIGNhbGxiYWNrCgkJLy8gcmVnaXN0cmF0aW9uLgoJCS5jYXRjaCggZnVuY3Rpb24oIGVycm9yICkgewoJCQlqUXVlcnkucmVhZHlFeGNlcHRpb24oIGVycm9yICk7CgkJfSApOwoKCXJldHVybiB0aGlzOwp9OwoKalF1ZXJ5LmV4dGVuZCggewoKCS8vIElzIHRoZSBET00gcmVhZHkgdG8gYmUgdXNlZD8gU2V0IHRvIHRydWUgb25jZSBpdCBvY2N1cnMuCglpc1JlYWR5OiBmYWxzZSwKCgkvLyBBIGNvdW50ZXIgdG8gdHJhY2sgaG93IG1hbnkgaXRlbXMgdG8gd2FpdCBmb3IgYmVmb3JlCgkvLyB0aGUgcmVhZHkgZXZlbnQgZmlyZXMuIFNlZSB0cmFjLTY3ODEKCXJlYWR5V2FpdDogMSwKCgkvLyBIYW5kbGUgd2hlbiB0aGUgRE9NIGlzIHJlYWR5CglyZWFkeTogZnVuY3Rpb24oIHdhaXQgKSB7CgoJCS8vIEFib3J0IGlmIHRoZXJlIGFyZSBwZW5kaW5nIGhvbGRzIG9yIHdlJ3JlIGFscmVhZHkgcmVhZHkKCQlpZiAoIHdhaXQgPT09IHRydWUgPyAtLWpRdWVyeS5yZWFkeVdhaXQgOiBqUXVlcnkuaXNSZWFkeSApIHsKCQkJcmV0dXJuOwoJCX0KCgkJLy8gUmVtZW1iZXIgdGhhdCB0aGUgRE9NIGlzIHJlYWR5CgkJalF1ZXJ5LmlzUmVhZHkgPSB0cnVlOwoKCQkvLyBJZiBhIG5vcm1hbCBET00gUmVhZHkgZXZlbnQgZmlyZWQsIGRlY3JlbWVudCwgYW5kIHdhaXQgaWYgbmVlZCBiZQoJCWlmICggd2FpdCAhPT0gdHJ1ZSAmJiAtLWpRdWVyeS5yZWFkeVdhaXQgPiAwICkgewoJCQlyZXR1cm47CgkJfQoKCQkvLyBJZiB0aGVyZSBhcmUgZnVuY3Rpb25zIGJvdW5kLCB0byBleGVjdXRlCgkJcmVhZHlMaXN0LnJlc29sdmVXaXRoKCBkb2N1bWVudCwgWyBqUXVlcnkgXSApOwoJfQp9ICk7CgpqUXVlcnkucmVhZHkudGhlbiA9IHJlYWR5TGlzdC50aGVuOwoKLy8gVGhlIHJlYWR5IGV2ZW50IGhhbmRsZXIgYW5kIHNlbGYgY2xlYW51cCBtZXRob2QKZnVuY3Rpb24gY29tcGxldGVkKCkgewoJZG9jdW1lbnQucmVtb3ZlRXZlbnRMaXN0ZW5lciggIkRPTUNvbnRlbnRMb2FkZWQiLCBjb21wbGV0ZWQgKTsKCXdpbmRvdy5yZW1vdmVFdmVudExpc3RlbmVyKCAibG9hZCIsIGNvbXBsZXRlZCApOwoJalF1ZXJ5LnJlYWR5KCk7Cn0KCi8vIENhdGNoIGNhc2VzIHdoZXJlICQoZG9jdW1lbnQpLnJlYWR5KCkgaXMgY2FsbGVkCi8vIGFmdGVyIHRoZSBicm93c2VyIGV2ZW50IGhhcyBhbHJlYWR5IG9jY3VycmVkLgovLyBTdXBwb3J0OiBJRSA8PTkgLSAxMCBvbmx5Ci8vIE9sZGVyIElFIHNvbWV0aW1lcyBzaWduYWxzICJpbnRlcmFjdGl2ZSIgdG9vIHNvb24KaWYgKCBkb2N1bWVudC5yZWFkeVN0YXRlID09PSAiY29tcGxldGUiIHx8CgkoIGRvY3VtZW50LnJlYWR5U3RhdGUgIT09ICJsb2FkaW5nIiAmJiAhZG9jdW1lbnQuZG9jdW1lbnRFbGVtZW50LmRvU2Nyb2xsICkgKSB7CgoJLy8gSGFuZGxlIGl0IGFzeW5jaHJvbm91c2x5IHRvIGFsbG93IHNjcmlwdHMgdGhlIG9wcG9ydHVuaXR5IHRvIGRlbGF5IHJlYWR5Cgl3aW5kb3cuc2V0VGltZW91dCggalF1ZXJ5LnJlYWR5ICk7Cgp9IGVsc2UgewoKCS8vIFVzZSB0aGUgaGFuZHkgZXZlbnQgY2FsbGJhY2sKCWRvY3VtZW50LmFkZEV2ZW50TGlzdGVuZXIoICJET01Db250ZW50TG9hZGVkIiwgY29tcGxldGVkICk7CgoJLy8gQSBmYWxsYmFjayB0byB3aW5kb3cub25sb2FkLCB0aGF0IHdpbGwgYWx3YXlzIHdvcmsKCXdpbmRvdy5hZGRFdmVudExpc3RlbmVyKCAibG9hZCIsIGNvbXBsZXRlZCApOwp9CgoKCgovLyBNdWx0aWZ1bmN0aW9uYWwgbWV0aG9kIHRvIGdldCBhbmQgc2V0IHZhbHVlcyBvZiBhIGNvbGxlY3Rpb24KLy8gVGhlIHZhbHVlL3MgY2FuIG9wdGlvbmFsbHkgYmUgZXhlY3V0ZWQgaWYgaXQncyBhIGZ1bmN0aW9uCnZhciBhY2Nlc3MgPSBmdW5jdGlvbiggZWxlbXMsIGZuLCBrZXksIHZhbHVlLCBjaGFpbmFibGUsIGVtcHR5R2V0LCByYXcgKSB7Cgl2YXIgaSA9IDAsCgkJbGVuID0gZWxlbXMubGVuZ3RoLAoJCWJ1bGsgPSBrZXkgPT0gbnVsbDsKCgkvLyBTZXRzIG1hbnkgdmFsdWVzCglpZiAoIHRvVHlwZSgga2V5ICkgPT09ICJvYmplY3QiICkgewoJCWNoYWluYWJsZSA9IHRydWU7CgkJZm9yICggaSBpbiBrZXkgKSB7CgkJCWFjY2VzcyggZWxlbXMsIGZuLCBpLCBrZXlbIGkgXSwgdHJ1ZSwgZW1wdHlHZXQsIHJhdyApOwoJCX0KCgkvLyBTZXRzIG9uZSB2YWx1ZQoJfSBlbHNlIGlmICggdmFsdWUgIT09IHVuZGVmaW5lZCApIHsKCQljaGFpbmFibGUgPSB0cnVlOwoKCQlpZiAoICFpc0Z1bmN0aW9uKCB2YWx1ZSApICkgewoJCQlyYXcgPSB0cnVlOwoJCX0KCgkJaWYgKCBidWxrICkgewoKCQkJLy8gQnVsayBvcGVyYXRpb25zIHJ1biBhZ2FpbnN0IHRoZSBlbnRpcmUgc2V0CgkJCWlmICggcmF3ICkgewoJCQkJZm4uY2FsbCggZWxlbXMsIHZhbHVlICk7CgkJCQlmbiA9IG51bGw7CgoJCQkvLyAuLi5leGNlcHQgd2hlbiBleGVjdXRpbmcgZnVuY3Rpb24gdmFsdWVzCgkJCX0gZWxzZSB7CgkJCQlidWxrID0gZm47CgkJCQlmbiA9IGZ1bmN0aW9uKCBlbGVtLCBfa2V5LCB2YWx1ZSApIHsKCQkJCQlyZXR1cm4gYnVsay5jYWxsKCBqUXVlcnkoIGVsZW0gKSwgdmFsdWUgKTsKCQkJCX07CgkJCX0KCQl9CgoJCWlmICggZm4gKSB7CgkJCWZvciAoIDsgaSA8IGxlbjsgaSsrICkgewoJCQkJZm4oCgkJCQkJZWxlbXNbIGkgXSwga2V5LCByYXcgPwoJCQkJCQl2YWx1ZSA6CgkJCQkJCXZhbHVlLmNhbGwoIGVsZW1zWyBpIF0sIGksIGZuKCBlbGVtc1sgaSBdLCBrZXkgKSApCgkJCQkpOwoJCQl9CgkJfQoJfQoKCWlmICggY2hhaW5hYmxlICkgewoJCXJldHVybiBlbGVtczsKCX0KCgkvLyBHZXRzCglpZiAoIGJ1bGsgKSB7CgkJcmV0dXJuIGZuLmNhbGwoIGVsZW1zICk7Cgl9CgoJcmV0dXJuIGxlbiA/IGZuKCBlbGVtc1sgMCBdLCBrZXkgKSA6IGVtcHR5R2V0Owp9OwoKCi8vIE1hdGNoZXMgZGFzaGVkIHN0cmluZyBmb3IgY2FtZWxpemluZwp2YXIgcm1zUHJlZml4ID0gL14tbXMtLywKCXJkYXNoQWxwaGEgPSAvLShbYS16XSkvZzsKCi8vIFVzZWQgYnkgY2FtZWxDYXNlIGFzIGNhbGxiYWNrIHRvIHJlcGxhY2UoKQpmdW5jdGlvbiBmY2FtZWxDYXNlKCBfYWxsLCBsZXR0ZXIgKSB7CglyZXR1cm4gbGV0dGVyLnRvVXBwZXJDYXNlKCk7Cn0KCi8vIENvbnZlcnQgZGFzaGVkIHRvIGNhbWVsQ2FzZTsgdXNlZCBieSB0aGUgY3NzIGFuZCBkYXRhIG1vZHVsZXMKLy8gU3VwcG9ydDogSUUgPD05IC0gMTEsIEVkZ2UgMTIgLSAxNQovLyBNaWNyb3NvZnQgZm9yZ290IHRvIGh1bXAgdGhlaXIgdmVuZG9yIHByZWZpeCAodHJhYy05NTcyKQpmdW5jdGlvbiBjYW1lbENhc2UoIHN0cmluZyApIHsKCXJldHVybiBzdHJpbmcucmVwbGFjZSggcm1zUHJlZml4LCAibXMtIiApLnJlcGxhY2UoIHJkYXNoQWxwaGEsIGZjYW1lbENhc2UgKTsKfQp2YXIgYWNjZXB0RGF0YSA9IGZ1bmN0aW9uKCBvd25lciApIHsKCgkvLyBBY2NlcHRzIG9ubHk6CgkvLyAgLSBOb2RlCgkvLyAgICAtIE5vZGUuRUxFTUVOVF9OT0RFCgkvLyAgICAtIE5vZGUuRE9DVU1FTlRfTk9ERQoJLy8gIC0gT2JqZWN0CgkvLyAgICAtIEFueQoJcmV0dXJuIG93bmVyLm5vZGVUeXBlID09PSAxIHx8IG93bmVyLm5vZGVUeXBlID09PSA5IHx8ICEoICtvd25lci5ub2RlVHlwZSApOwp9OwoKCgoKZnVuY3Rpb24gRGF0YSgpIHsKCXRoaXMuZXhwYW5kbyA9IGpRdWVyeS5leHBhbmRvICsgRGF0YS51aWQrKzsKfQoKRGF0YS51aWQgPSAxOwoKRGF0YS5wcm90b3R5cGUgPSB7CgoJY2FjaGU6IGZ1bmN0aW9uKCBvd25lciApIHsKCgkJLy8gQ2hlY2sgaWYgdGhlIG93bmVyIG9iamVjdCBhbHJlYWR5IGhhcyBhIGNhY2hlCgkJdmFyIHZhbHVlID0gb3duZXJbIHRoaXMuZXhwYW5kbyBdOwoKCQkvLyBJZiBub3QsIGNyZWF0ZSBvbmUKCQlpZiAoICF2YWx1ZSApIHsKCQkJdmFsdWUgPSB7fTsKCgkJCS8vIFdlIGNhbiBhY2NlcHQgZGF0YSBmb3Igbm9uLWVsZW1lbnQgbm9kZXMgaW4gbW9kZXJuIGJyb3dzZXJzLAoJCQkvLyBidXQgd2Ugc2hvdWxkIG5vdCwgc2VlIHRyYWMtODMzNS4KCQkJLy8gQWx3YXlzIHJldHVybiBhbiBlbXB0eSBvYmplY3QuCgkJCWlmICggYWNjZXB0RGF0YSggb3duZXIgKSApIHsKCgkJCQkvLyBJZiBpdCBpcyBhIG5vZGUgdW5saWtlbHkgdG8gYmUgc3RyaW5naWZ5LWVkIG9yIGxvb3BlZCBvdmVyCgkJCQkvLyB1c2UgcGxhaW4gYXNzaWdubWVudAoJCQkJaWYgKCBvd25lci5ub2RlVHlwZSApIHsKCQkJCQlvd25lclsgdGhpcy5leHBhbmRvIF0gPSB2YWx1ZTsKCgkJCQkvLyBPdGhlcndpc2Ugc2VjdXJlIGl0IGluIGEgbm9uLWVudW1lcmFibGUgcHJvcGVydHkKCQkJCS8vIGNvbmZpZ3VyYWJsZSBtdXN0IGJlIHRydWUgdG8gYWxsb3cgdGhlIHByb3BlcnR5IHRvIGJlCgkJCQkvLyBkZWxldGVkIHdoZW4gZGF0YSBpcyByZW1vdmVkCgkJCQl9IGVsc2UgewoJCQkJCU9iamVjdC5kZWZpbmVQcm9wZXJ0eSggb3duZXIsIHRoaXMuZXhwYW5kbywgewoJCQkJCQl2YWx1ZTogdmFsdWUsCgkJCQkJCWNvbmZpZ3VyYWJsZTogdHJ1ZQoJCQkJCX0gKTsKCQkJCX0KCQkJfQoJCX0KCgkJcmV0dXJuIHZhbHVlOwoJfSwKCXNldDogZnVuY3Rpb24oIG93bmVyLCBkYXRhLCB2YWx1ZSApIHsKCQl2YXIgcHJvcCwKCQkJY2FjaGUgPSB0aGlzLmNhY2hlKCBvd25lciApOwoKCQkvLyBIYW5kbGU6IFsgb3duZXIsIGtleSwgdmFsdWUgXSBhcmdzCgkJLy8gQWx3YXlzIHVzZSBjYW1lbENhc2Uga2V5IChnaC0yMjU3KQoJCWlmICggdHlwZW9mIGRhdGEgPT09ICJzdHJpbmciICkgewoJCQljYWNoZVsgY2FtZWxDYXNlKCBkYXRhICkgXSA9IHZhbHVlOwoKCQkvLyBIYW5kbGU6IFsgb3duZXIsIHsgcHJvcGVydGllcyB9IF0gYXJncwoJCX0gZWxzZSB7CgoJCQkvLyBDb3B5IHRoZSBwcm9wZXJ0aWVzIG9uZS1ieS1vbmUgdG8gdGhlIGNhY2hlIG9iamVjdAoJCQlmb3IgKCBwcm9wIGluIGRhdGEgKSB7CgkJCQljYWNoZVsgY2FtZWxDYXNlKCBwcm9wICkgXSA9IGRhdGFbIHByb3AgXTsKCQkJfQoJCX0KCQlyZXR1cm4gY2FjaGU7Cgl9LAoJZ2V0OiBmdW5jdGlvbiggb3duZXIsIGtleSApIHsKCQlyZXR1cm4ga2V5ID09PSB1bmRlZmluZWQgPwoJCQl0aGlzLmNhY2hlKCBvd25lciApIDoKCgkJCS8vIEFsd2F5cyB1c2UgY2FtZWxDYXNlIGtleSAoZ2gtMjI1NykKCQkJb3duZXJbIHRoaXMuZXhwYW5kbyBdICYmIG93bmVyWyB0aGlzLmV4cGFuZG8gXVsgY2FtZWxDYXNlKCBrZXkgKSBdOwoJfSwKCWFjY2VzczogZnVuY3Rpb24oIG93bmVyLCBrZXksIHZhbHVlICkgewoKCQkvLyBJbiBjYXNlcyB3aGVyZSBlaXRoZXI6CgkJLy8KCQkvLyAgIDEuIE5vIGtleSB3YXMgc3BlY2lmaWVkCgkJLy8gICAyLiBBIHN0cmluZyBrZXkgd2FzIHNwZWNpZmllZCwgYnV0IG5vIHZhbHVlIHByb3ZpZGVkCgkJLy8KCQkvLyBUYWtlIHRoZSAicmVhZCIgcGF0aCBhbmQgYWxsb3cgdGhlIGdldCBtZXRob2QgdG8gZGV0ZXJtaW5lCgkJLy8gd2hpY2ggdmFsdWUgdG8gcmV0dXJuLCByZXNwZWN0aXZlbHkgZWl0aGVyOgoJCS8vCgkJLy8gICAxLiBUaGUgZW50aXJlIGNhY2hlIG9iamVjdAoJCS8vICAgMi4gVGhlIGRhdGEgc3RvcmVkIGF0IHRoZSBrZXkKCQkvLwoJCWlmICgga2V5ID09PSB1bmRlZmluZWQgfHwKCQkJCSggKCBrZXkgJiYgdHlwZW9mIGtleSA9PT0gInN0cmluZyIgKSAmJiB2YWx1ZSA9PT0gdW5kZWZpbmVkICkgKSB7CgoJCQlyZXR1cm4gdGhpcy5nZXQoIG93bmVyLCBrZXkgKTsKCQl9CgoJCS8vIFdoZW4gdGhlIGtleSBpcyBub3QgYSBzdHJpbmcsIG9yIGJvdGggYSBrZXkgYW5kIHZhbHVlCgkJLy8gYXJlIHNwZWNpZmllZCwgc2V0IG9yIGV4dGVuZCAoZXhpc3Rpbmcgb2JqZWN0cykgd2l0aCBlaXRoZXI6CgkJLy8KCQkvLyAgIDEuIEFuIG9iamVjdCBvZiBwcm9wZXJ0aWVzCgkJLy8gICAyLiBBIGtleSBhbmQgdmFsdWUKCQkvLwoJCXRoaXMuc2V0KCBvd25lciwga2V5LCB2YWx1ZSApOwoKCQkvLyBTaW5jZSB0aGUgInNldCIgcGF0aCBjYW4gaGF2ZSB0d28gcG9zc2libGUgZW50cnkgcG9pbnRzCgkJLy8gcmV0dXJuIHRoZSBleHBlY3RlZCBkYXRhIGJhc2VkIG9uIHdoaWNoIHBhdGggd2FzIHRha2VuWypdCgkJcmV0dXJuIHZhbHVlICE9PSB1bmRlZmluZWQgPyB2YWx1ZSA6IGtleTsKCX0sCglyZW1vdmU6IGZ1bmN0aW9uKCBvd25lciwga2V5ICkgewoJCXZhciBpLAoJCQljYWNoZSA9IG93bmVyWyB0aGlzLmV4cGFuZG8gXTsKCgkJaWYgKCBjYWNoZSA9PT0gdW5kZWZpbmVkICkgewoJCQlyZXR1cm47CgkJfQoKCQlpZiAoIGtleSAhPT0gdW5kZWZpbmVkICkgewoKCQkJLy8gU3VwcG9ydCBhcnJheSBvciBzcGFjZSBzZXBhcmF0ZWQgc3RyaW5nIG9mIGtleXMKCQkJaWYgKCBBcnJheS5pc0FycmF5KCBrZXkgKSApIHsKCgkJCQkvLyBJZiBrZXkgaXMgYW4gYXJyYXkgb2Yga2V5cy4uLgoJCQkJLy8gV2UgYWx3YXlzIHNldCBjYW1lbENhc2Uga2V5cywgc28gcmVtb3ZlIHRoYXQuCgkJCQlrZXkgPSBrZXkubWFwKCBjYW1lbENhc2UgKTsKCQkJfSBlbHNlIHsKCQkJCWtleSA9IGNhbWVsQ2FzZSgga2V5ICk7CgoJCQkJLy8gSWYgYSBrZXkgd2l0aCB0aGUgc3BhY2VzIGV4aXN0cywgdXNlIGl0LgoJCQkJLy8gT3RoZXJ3aXNlLCBjcmVhdGUgYW4gYXJyYXkgYnkgbWF0Y2hpbmcgbm9uLXdoaXRlc3BhY2UKCQkJCWtleSA9IGtleSBpbiBjYWNoZSA/CgkJCQkJWyBrZXkgXSA6CgkJCQkJKCBrZXkubWF0Y2goIHJub3RodG1sd2hpdGUgKSB8fCBbXSApOwoJCQl9CgoJCQlpID0ga2V5Lmxlbmd0aDsKCgkJCXdoaWxlICggaS0tICkgewoJCQkJZGVsZXRlIGNhY2hlWyBrZXlbIGkgXSBdOwoJCQl9CgkJfQoKCQkvLyBSZW1vdmUgdGhlIGV4cGFuZG8gaWYgdGhlcmUncyBubyBtb3JlIGRhdGEKCQlpZiAoIGtleSA9PT0gdW5kZWZpbmVkIHx8IGpRdWVyeS5pc0VtcHR5T2JqZWN0KCBjYWNoZSApICkgewoKCQkJLy8gU3VwcG9ydDogQ2hyb21lIDw9MzUgLSA0NQoJCQkvLyBXZWJraXQgJiBCbGluayBwZXJmb3JtYW5jZSBzdWZmZXJzIHdoZW4gZGVsZXRpbmcgcHJvcGVydGllcwoJCQkvLyBmcm9tIERPTSBub2Rlcywgc28gc2V0IHRvIHVuZGVmaW5lZCBpbnN0ZWFkCgkJCS8vIGh0dHBzOi8vYnVncy5jaHJvbWl1bS5vcmcvcC9jaHJvbWl1bS9pc3N1ZXMvZGV0YWlsP2lkPTM3ODYwNyAoYnVnIHJlc3RyaWN0ZWQpCgkJCWlmICggb3duZXIubm9kZVR5cGUgKSB7CgkJCQlvd25lclsgdGhpcy5leHBhbmRvIF0gPSB1bmRlZmluZWQ7CgkJCX0gZWxzZSB7CgkJCQlkZWxldGUgb3duZXJbIHRoaXMuZXhwYW5kbyBdOwoJCQl9CgkJfQoJfSwKCWhhc0RhdGE6IGZ1bmN0aW9uKCBvd25lciApIHsKCQl2YXIgY2FjaGUgPSBvd25lclsgdGhpcy5leHBhbmRvIF07CgkJcmV0dXJuIGNhY2hlICE9PSB1bmRlZmluZWQgJiYgIWpRdWVyeS5pc0VtcHR5T2JqZWN0KCBjYWNoZSApOwoJfQp9Owp2YXIgZGF0YVByaXYgPSBuZXcgRGF0YSgpOwoKdmFyIGRhdGFVc2VyID0gbmV3IERhdGEoKTsKCgoKLy8JSW1wbGVtZW50YXRpb24gU3VtbWFyeQovLwovLwkxLiBFbmZvcmNlIEFQSSBzdXJmYWNlIGFuZCBzZW1hbnRpYyBjb21wYXRpYmlsaXR5IHdpdGggMS45LnggYnJhbmNoCi8vCTIuIEltcHJvdmUgdGhlIG1vZHVsZSdzIG1haW50YWluYWJpbGl0eSBieSByZWR1Y2luZyB0aGUgc3RvcmFnZQovLwkJcGF0aHMgdG8gYSBzaW5nbGUgbWVjaGFuaXNtLgovLwkzLiBVc2UgdGhlIHNhbWUgc2luZ2xlIG1lY2hhbmlzbSB0byBzdXBwb3J0ICJwcml2YXRlIiBhbmQgInVzZXIiIGRhdGEuCi8vCTQuIF9OZXZlcl8gZXhwb3NlICJwcml2YXRlIiBkYXRhIHRvIHVzZXIgY29kZSAoVE9ETzogRHJvcCBfZGF0YSwgX3JlbW92ZURhdGEpCi8vCTUuIEF2b2lkIGV4cG9zaW5nIGltcGxlbWVudGF0aW9uIGRldGFpbHMgb24gdXNlciBvYmplY3RzIChlZy4gZXhwYW5kbyBwcm9wZXJ0aWVzKQovLwk2LiBQcm92aWRlIGEgY2xlYXIgcGF0aCBmb3IgaW1wbGVtZW50YXRpb24gdXBncmFkZSB0byBXZWFrTWFwIGluIDIwMTQKCnZhciByYnJhY2UgPSAvXig/Olx7W1x3XFddKlx9fFxbW1x3XFddKlxdKSQvLAoJcm11bHRpRGFzaCA9IC9bQS1aXS9nOwoKZnVuY3Rpb24gZ2V0RGF0YSggZGF0YSApIHsKCWlmICggZGF0YSA9PT0gInRydWUiICkgewoJCXJldHVybiB0cnVlOwoJfQoKCWlmICggZGF0YSA9PT0gImZhbHNlIiApIHsKCQlyZXR1cm4gZmFsc2U7Cgl9CgoJaWYgKCBkYXRhID09PSAibnVsbCIgKSB7CgkJcmV0dXJuIG51bGw7Cgl9CgoJLy8gT25seSBjb252ZXJ0IHRvIGEgbnVtYmVyIGlmIGl0IGRvZXNuJ3QgY2hhbmdlIHRoZSBzdHJpbmcKCWlmICggZGF0YSA9PT0gK2RhdGEgKyAiIiApIHsKCQlyZXR1cm4gK2RhdGE7Cgl9CgoJaWYgKCByYnJhY2UudGVzdCggZGF0YSApICkgewoJCXJldHVybiBKU09OLnBhcnNlKCBkYXRhICk7Cgl9CgoJcmV0dXJuIGRhdGE7Cn0KCmZ1bmN0aW9uIGRhdGFBdHRyKCBlbGVtLCBrZXksIGRhdGEgKSB7Cgl2YXIgbmFtZTsKCgkvLyBJZiBub3RoaW5nIHdhcyBmb3VuZCBpbnRlcm5hbGx5LCB0cnkgdG8gZmV0Y2ggYW55CgkvLyBkYXRhIGZyb20gdGhlIEhUTUw1IGRhdGEtKiBhdHRyaWJ1dGUKCWlmICggZGF0YSA9PT0gdW5kZWZpbmVkICYmIGVsZW0ubm9kZVR5cGUgPT09IDEgKSB7CgkJbmFtZSA9ICJkYXRhLSIgKyBrZXkucmVwbGFjZSggcm11bHRpRGFzaCwgIi0kJiIgKS50b0xvd2VyQ2FzZSgpOwoJCWRhdGEgPSBlbGVtLmdldEF0dHJpYnV0ZSggbmFtZSApOwoKCQlpZiAoIHR5cGVvZiBkYXRhID09PSAic3RyaW5nIiApIHsKCQkJdHJ5IHsKCQkJCWRhdGEgPSBnZXREYXRhKCBkYXRhICk7CgkJCX0gY2F0Y2ggKCBlICkge30KCgkJCS8vIE1ha2Ugc3VyZSB3ZSBzZXQgdGhlIGRhdGEgc28gaXQgaXNuJ3QgY2hhbmdlZCBsYXRlcgoJCQlkYXRhVXNlci5zZXQoIGVsZW0sIGtleSwgZGF0YSApOwoJCX0gZWxzZSB7CgkJCWRhdGEgPSB1bmRlZmluZWQ7CgkJfQoJfQoJcmV0dXJuIGRhdGE7Cn0KCmpRdWVyeS5leHRlbmQoIHsKCWhhc0RhdGE6IGZ1bmN0aW9uKCBlbGVtICkgewoJCXJldHVybiBkYXRhVXNlci5oYXNEYXRhKCBlbGVtICkgfHwgZGF0YVByaXYuaGFzRGF0YSggZWxlbSApOwoJfSwKCglkYXRhOiBmdW5jdGlvbiggZWxlbSwgbmFtZSwgZGF0YSApIHsKCQlyZXR1cm4gZGF0YVVzZXIuYWNjZXNzKCBlbGVtLCBuYW1lLCBkYXRhICk7Cgl9LAoKCXJlbW92ZURhdGE6IGZ1bmN0aW9uKCBlbGVtLCBuYW1lICkgewoJCWRhdGFVc2VyLnJlbW92ZSggZWxlbSwgbmFtZSApOwoJfSwKCgkvLyBUT0RPOiBOb3cgdGhhdCBhbGwgY2FsbHMgdG8gX2RhdGEgYW5kIF9yZW1vdmVEYXRhIGhhdmUgYmVlbiByZXBsYWNlZAoJLy8gd2l0aCBkaXJlY3QgY2FsbHMgdG8gZGF0YVByaXYgbWV0aG9kcywgdGhlc2UgY2FuIGJlIGRlcHJlY2F0ZWQuCglfZGF0YTogZnVuY3Rpb24oIGVsZW0sIG5hbWUsIGRhdGEgKSB7CgkJcmV0dXJuIGRhdGFQcml2LmFjY2VzcyggZWxlbSwgbmFtZSwgZGF0YSApOwoJfSwKCglfcmVtb3ZlRGF0YTogZnVuY3Rpb24oIGVsZW0sIG5hbWUgKSB7CgkJZGF0YVByaXYucmVtb3ZlKCBlbGVtLCBuYW1lICk7Cgl9Cn0gKTsKCmpRdWVyeS5mbi5leHRlbmQoIHsKCWRhdGE6IGZ1bmN0aW9uKCBrZXksIHZhbHVlICkgewoJCXZhciBpLCBuYW1lLCBkYXRhLAoJCQllbGVtID0gdGhpc1sgMCBdLAoJCQlhdHRycyA9IGVsZW0gJiYgZWxlbS5hdHRyaWJ1dGVzOwoKCQkvLyBHZXRzIGFsbCB2YWx1ZXMKCQlpZiAoIGtleSA9PT0gdW5kZWZpbmVkICkgewoJCQlpZiAoIHRoaXMubGVuZ3RoICkgewoJCQkJZGF0YSA9IGRhdGFVc2VyLmdldCggZWxlbSApOwoKCQkJCWlmICggZWxlbS5ub2RlVHlwZSA9PT0gMSAmJiAhZGF0YVByaXYuZ2V0KCBlbGVtLCAiaGFzRGF0YUF0dHJzIiApICkgewoJCQkJCWkgPSBhdHRycy5sZW5ndGg7CgkJCQkJd2hpbGUgKCBpLS0gKSB7CgoJCQkJCQkvLyBTdXBwb3J0OiBJRSAxMSBvbmx5CgkJCQkJCS8vIFRoZSBhdHRycyBlbGVtZW50cyBjYW4gYmUgbnVsbCAodHJhYy0xNDg5NCkKCQkJCQkJaWYgKCBhdHRyc1sgaSBdICkgewoJCQkJCQkJbmFtZSA9IGF0dHJzWyBpIF0ubmFtZTsKCQkJCQkJCWlmICggbmFtZS5pbmRleE9mKCAiZGF0YS0iICkgPT09IDAgKSB7CgkJCQkJCQkJbmFtZSA9IGNhbWVsQ2FzZSggbmFtZS5zbGljZSggNSApICk7CgkJCQkJCQkJZGF0YUF0dHIoIGVsZW0sIG5hbWUsIGRhdGFbIG5hbWUgXSApOwoJCQkJCQkJfQoJCQkJCQl9CgkJCQkJfQoJCQkJCWRhdGFQcml2LnNldCggZWxlbSwgImhhc0RhdGFBdHRycyIsIHRydWUgKTsKCQkJCX0KCQkJfQoKCQkJcmV0dXJuIGRhdGE7CgkJfQoKCQkvLyBTZXRzIG11bHRpcGxlIHZhbHVlcwoJCWlmICggdHlwZW9mIGtleSA9PT0gIm9iamVjdCIgKSB7CgkJCXJldHVybiB0aGlzLmVhY2goIGZ1bmN0aW9uKCkgewoJCQkJZGF0YVVzZXIuc2V0KCB0aGlzLCBrZXkgKTsKCQkJfSApOwoJCX0KCgkJcmV0dXJuIGFjY2VzcyggdGhpcywgZnVuY3Rpb24oIHZhbHVlICkgewoJCQl2YXIgZGF0YTsKCgkJCS8vIFRoZSBjYWxsaW5nIGpRdWVyeSBvYmplY3QgKGVsZW1lbnQgbWF0Y2hlcykgaXMgbm90IGVtcHR5CgkJCS8vIChhbmQgdGhlcmVmb3JlIGhhcyBhbiBlbGVtZW50IGFwcGVhcnMgYXQgdGhpc1sgMCBdKSBhbmQgdGhlCgkJCS8vIGB2YWx1ZWAgcGFyYW1ldGVyIHdhcyBub3QgdW5kZWZpbmVkLiBBbiBlbXB0eSBqUXVlcnkgb2JqZWN0CgkJCS8vIHdpbGwgcmVzdWx0IGluIGB1bmRlZmluZWRgIGZvciBlbGVtID0gdGhpc1sgMCBdIHdoaWNoIHdpbGwKCQkJLy8gdGhyb3cgYW4gZXhjZXB0aW9uIGlmIGFuIGF0dGVtcHQgdG8gcmVhZCBhIGRhdGEgY2FjaGUgaXMgbWFkZS4KCQkJaWYgKCBlbGVtICYmIHZhbHVlID09PSB1bmRlZmluZWQgKSB7CgoJCQkJLy8gQXR0ZW1wdCB0byBnZXQgZGF0YSBmcm9tIHRoZSBjYWNoZQoJCQkJLy8gVGhlIGtleSB3aWxsIGFsd2F5cyBiZSBjYW1lbENhc2VkIGluIERhdGEKCQkJCWRhdGEgPSBkYXRhVXNlci5nZXQoIGVsZW0sIGtleSApOwoJCQkJaWYgKCBkYXRhICE9PSB1bmRlZmluZWQgKSB7CgkJCQkJcmV0dXJuIGRhdGE7CgkJCQl9CgoJCQkJLy8gQXR0ZW1wdCB0byAiZGlzY292ZXIiIHRoZSBkYXRhIGluCgkJCQkvLyBIVE1MNSBjdXN0b20gZGF0YS0qIGF0dHJzCgkJCQlkYXRhID0gZGF0YUF0dHIoIGVsZW0sIGtleSApOwoJCQkJaWYgKCBkYXRhICE9PSB1bmRlZmluZWQgKSB7CgkJCQkJcmV0dXJuIGRhdGE7CgkJCQl9CgoJCQkJLy8gV2UgdHJpZWQgcmVhbGx5IGhhcmQsIGJ1dCB0aGUgZGF0YSBkb2Vzbid0IGV4aXN0LgoJCQkJcmV0dXJuOwoJCQl9CgoJCQkvLyBTZXQgdGhlIGRhdGEuLi4KCQkJdGhpcy5lYWNoKCBmdW5jdGlvbigpIHsKCgkJCQkvLyBXZSBhbHdheXMgc3RvcmUgdGhlIGNhbWVsQ2FzZWQga2V5CgkJCQlkYXRhVXNlci5zZXQoIHRoaXMsIGtleSwgdmFsdWUgKTsKCQkJfSApOwoJCX0sIG51bGwsIHZhbHVlLCBhcmd1bWVudHMubGVuZ3RoID4gMSwgbnVsbCwgdHJ1ZSApOwoJfSwKCglyZW1vdmVEYXRhOiBmdW5jdGlvbigga2V5ICkgewoJCXJldHVybiB0aGlzLmVhY2goIGZ1bmN0aW9uKCkgewoJCQlkYXRhVXNlci5yZW1vdmUoIHRoaXMsIGtleSApOwoJCX0gKTsKCX0KfSApOwoKCmpRdWVyeS5leHRlbmQoIHsKCXF1ZXVlOiBmdW5jdGlvbiggZWxlbSwgdHlwZSwgZGF0YSApIHsKCQl2YXIgcXVldWU7CgoJCWlmICggZWxlbSApIHsKCQkJdHlwZSA9ICggdHlwZSB8fCAiZngiICkgKyAicXVldWUiOwoJCQlxdWV1ZSA9IGRhdGFQcml2LmdldCggZWxlbSwgdHlwZSApOwoKCQkJLy8gU3BlZWQgdXAgZGVxdWV1ZSBieSBnZXR0aW5nIG91dCBxdWlja2x5IGlmIHRoaXMgaXMganVzdCBhIGxvb2t1cAoJCQlpZiAoIGRhdGEgKSB7CgkJCQlpZiAoICFxdWV1ZSB8fCBBcnJheS5pc0FycmF5KCBkYXRhICkgKSB7CgkJCQkJcXVldWUgPSBkYXRhUHJpdi5hY2Nlc3MoIGVsZW0sIHR5cGUsIGpRdWVyeS5tYWtlQXJyYXkoIGRhdGEgKSApOwoJCQkJfSBlbHNlIHsKCQkJCQlxdWV1ZS5wdXNoKCBkYXRhICk7CgkJCQl9CgkJCX0KCQkJcmV0dXJuIHF1ZXVlIHx8IFtdOwoJCX0KCX0sCgoJZGVxdWV1ZTogZnVuY3Rpb24oIGVsZW0sIHR5cGUgKSB7CgkJdHlwZSA9IHR5cGUgfHwgImZ4IjsKCgkJdmFyIHF1ZXVlID0galF1ZXJ5LnF1ZXVlKCBlbGVtLCB0eXBlICksCgkJCXN0YXJ0TGVuZ3RoID0gcXVldWUubGVuZ3RoLAoJCQlmbiA9IHF1ZXVlLnNoaWZ0KCksCgkJCWhvb2tzID0galF1ZXJ5Ll9xdWV1ZUhvb2tzKCBlbGVtLCB0eXBlICksCgkJCW5leHQgPSBmdW5jdGlvbigpIHsKCQkJCWpRdWVyeS5kZXF1ZXVlKCBlbGVtLCB0eXBlICk7CgkJCX07CgoJCS8vIElmIHRoZSBmeCBxdWV1ZSBpcyBkZXF1ZXVlZCwgYWx3YXlzIHJlbW92ZSB0aGUgcHJvZ3Jlc3Mgc2VudGluZWwKCQlpZiAoIGZuID09PSAiaW5wcm9ncmVzcyIgKSB7CgkJCWZuID0gcXVldWUuc2hpZnQoKTsKCQkJc3RhcnRMZW5ndGgtLTsKCQl9CgoJCWlmICggZm4gKSB7CgoJCQkvLyBBZGQgYSBwcm9ncmVzcyBzZW50aW5lbCB0byBwcmV2ZW50IHRoZSBmeCBxdWV1ZSBmcm9tIGJlaW5nCgkJCS8vIGF1dG9tYXRpY2FsbHkgZGVxdWV1ZWQKCQkJaWYgKCB0eXBlID09PSAiZngiICkgewoJCQkJcXVldWUudW5zaGlmdCggImlucHJvZ3Jlc3MiICk7CgkJCX0KCgkJCS8vIENsZWFyIHVwIHRoZSBsYXN0IHF1ZXVlIHN0b3AgZnVuY3Rpb24KCQkJZGVsZXRlIGhvb2tzLnN0b3A7CgkJCWZuLmNhbGwoIGVsZW0sIG5leHQsIGhvb2tzICk7CgkJfQoKCQlpZiAoICFzdGFydExlbmd0aCAmJiBob29rcyApIHsKCQkJaG9va3MuZW1wdHkuZmlyZSgpOwoJCX0KCX0sCgoJLy8gTm90IHB1YmxpYyAtIGdlbmVyYXRlIGEgcXVldWVIb29rcyBvYmplY3QsIG9yIHJldHVybiB0aGUgY3VycmVudCBvbmUKCV9xdWV1ZUhvb2tzOiBmdW5jdGlvbiggZWxlbSwgdHlwZSApIHsKCQl2YXIga2V5ID0gdHlwZSArICJxdWV1ZUhvb2tzIjsKCQlyZXR1cm4gZGF0YVByaXYuZ2V0KCBlbGVtLCBrZXkgKSB8fCBkYXRhUHJpdi5hY2Nlc3MoIGVsZW0sIGtleSwgewoJCQllbXB0eTogalF1ZXJ5LkNhbGxiYWNrcyggIm9uY2UgbWVtb3J5IiApLmFkZCggZnVuY3Rpb24oKSB7CgkJCQlkYXRhUHJpdi5yZW1vdmUoIGVsZW0sIFsgdHlwZSArICJxdWV1ZSIsIGtleSBdICk7CgkJCX0gKQoJCX0gKTsKCX0KfSApOwoKalF1ZXJ5LmZuLmV4dGVuZCggewoJcXVldWU6IGZ1bmN0aW9uKCB0eXBlLCBkYXRhICkgewoJCXZhciBzZXR0ZXIgPSAyOwoKCQlpZiAoIHR5cGVvZiB0eXBlICE9PSAic3RyaW5nIiApIHsKCQkJZGF0YSA9IHR5cGU7CgkJCXR5cGUgPSAiZngiOwoJCQlzZXR0ZXItLTsKCQl9CgoJCWlmICggYXJndW1lbnRzLmxlbmd0aCA8IHNldHRlciApIHsKCQkJcmV0dXJuIGpRdWVyeS5xdWV1ZSggdGhpc1sgMCBdLCB0eXBlICk7CgkJfQoKCQlyZXR1cm4gZGF0YSA9PT0gdW5kZWZpbmVkID8KCQkJdGhpcyA6CgkJCXRoaXMuZWFjaCggZnVuY3Rpb24oKSB7CgkJCQl2YXIgcXVldWUgPSBqUXVlcnkucXVldWUoIHRoaXMsIHR5cGUsIGRhdGEgKTsKCgkJCQkvLyBFbnN1cmUgYSBob29rcyBmb3IgdGhpcyBxdWV1ZQoJCQkJalF1ZXJ5Ll9xdWV1ZUhvb2tzKCB0aGlzLCB0eXBlICk7CgoJCQkJaWYgKCB0eXBlID09PSAiZngiICYmIHF1ZXVlWyAwIF0gIT09ICJpbnByb2dyZXNzIiApIHsKCQkJCQlqUXVlcnkuZGVxdWV1ZSggdGhpcywgdHlwZSApOwoJCQkJfQoJCQl9ICk7Cgl9LAoJZGVxdWV1ZTogZnVuY3Rpb24oIHR5cGUgKSB7CgkJcmV0dXJuIHRoaXMuZWFjaCggZnVuY3Rpb24oKSB7CgkJCWpRdWVyeS5kZXF1ZXVlKCB0aGlzLCB0eXBlICk7CgkJfSApOwoJfSwKCWNsZWFyUXVldWU6IGZ1bmN0aW9uKCB0eXBlICkgewoJCXJldHVybiB0aGlzLnF1ZXVlKCB0eXBlIHx8ICJmeCIsIFtdICk7Cgl9LAoKCS8vIEdldCBhIHByb21pc2UgcmVzb2x2ZWQgd2hlbiBxdWV1ZXMgb2YgYSBjZXJ0YWluIHR5cGUKCS8vIGFyZSBlbXB0aWVkIChmeCBpcyB0aGUgdHlwZSBieSBkZWZhdWx0KQoJcHJvbWlzZTogZnVuY3Rpb24oIHR5cGUsIG9iaiApIHsKCQl2YXIgdG1wLAoJCQljb3VudCA9IDEsCgkJCWRlZmVyID0galF1ZXJ5LkRlZmVycmVkKCksCgkJCWVsZW1lbnRzID0gdGhpcywKCQkJaSA9IHRoaXMubGVuZ3RoLAoJCQlyZXNvbHZlID0gZnVuY3Rpb24oKSB7CgkJCQlpZiAoICEoIC0tY291bnQgKSApIHsKCQkJCQlkZWZlci5yZXNvbHZlV2l0aCggZWxlbWVudHMsIFsgZWxlbWVudHMgXSApOwoJCQkJfQoJCQl9OwoKCQlpZiAoIHR5cGVvZiB0eXBlICE9PSAic3RyaW5nIiApIHsKCQkJb2JqID0gdHlwZTsKCQkJdHlwZSA9IHVuZGVmaW5lZDsKCQl9CgkJdHlwZSA9IHR5cGUgfHwgImZ4IjsKCgkJd2hpbGUgKCBpLS0gKSB7CgkJCXRtcCA9IGRhdGFQcml2LmdldCggZWxlbWVudHNbIGkgXSwgdHlwZSArICJxdWV1ZUhvb2tzIiApOwoJCQlpZiAoIHRtcCAmJiB0bXAuZW1wdHkgKSB7CgkJCQljb3VudCsrOwoJCQkJdG1wLmVtcHR5LmFkZCggcmVzb2x2ZSApOwoJCQl9CgkJfQoJCXJlc29sdmUoKTsKCQlyZXR1cm4gZGVmZXIucHJvbWlzZSggb2JqICk7Cgl9Cn0gKTsKdmFyIHBudW0gPSAoIC9bKy1dPyg/OlxkKlwufClcZCsoPzpbZUVdWystXT9cZCt8KS8gKS5zb3VyY2U7Cgp2YXIgcmNzc051bSA9IG5ldyBSZWdFeHAoICJeKD86KFsrLV0pPXwpKCIgKyBwbnVtICsgIikoW2EteiVdKikkIiwgImkiICk7CgoKdmFyIGNzc0V4cGFuZCA9IFsgIlRvcCIsICJSaWdodCIsICJCb3R0b20iLCAiTGVmdCIgXTsKCnZhciBkb2N1bWVudEVsZW1lbnQgPSBkb2N1bWVudC5kb2N1bWVudEVsZW1lbnQ7CgoKCgl2YXIgaXNBdHRhY2hlZCA9IGZ1bmN0aW9uKCBlbGVtICkgewoJCQlyZXR1cm4galF1ZXJ5LmNvbnRhaW5zKCBlbGVtLm93bmVyRG9jdW1lbnQsIGVsZW0gKTsKCQl9LAoJCWNvbXBvc2VkID0geyBjb21wb3NlZDogdHJ1ZSB9OwoKCS8vIFN1cHBvcnQ6IElFIDkgLSAxMSssIEVkZ2UgMTIgLSAxOCssIGlPUyAxMC4wIC0gMTAuMiBvbmx5CgkvLyBDaGVjayBhdHRhY2htZW50IGFjcm9zcyBzaGFkb3cgRE9NIGJvdW5kYXJpZXMgd2hlbiBwb3NzaWJsZSAoZ2gtMzUwNCkKCS8vIFN1cHBvcnQ6IGlPUyAxMC4wLTEwLjIgb25seQoJLy8gRWFybHkgaU9TIDEwIHZlcnNpb25zIHN1cHBvcnQgYGF0dGFjaFNoYWRvd2AgYnV0IG5vdCBgZ2V0Um9vdE5vZGVgLAoJLy8gbGVhZGluZyB0byBlcnJvcnMuIFdlIG5lZWQgdG8gY2hlY2sgZm9yIGBnZXRSb290Tm9kZWAuCglpZiAoIGRvY3VtZW50RWxlbWVudC5nZXRSb290Tm9kZSApIHsKCQlpc0F0dGFjaGVkID0gZnVuY3Rpb24oIGVsZW0gKSB7CgkJCXJldHVybiBqUXVlcnkuY29udGFpbnMoIGVsZW0ub3duZXJEb2N1bWVudCwgZWxlbSApIHx8CgkJCQllbGVtLmdldFJvb3ROb2RlKCBjb21wb3NlZCApID09PSBlbGVtLm93bmVyRG9jdW1lbnQ7CgkJfTsKCX0KdmFyIGlzSGlkZGVuV2l0aGluVHJlZSA9IGZ1bmN0aW9uKCBlbGVtLCBlbCApIHsKCgkJLy8gaXNIaWRkZW5XaXRoaW5UcmVlIG1pZ2h0IGJlIGNhbGxlZCBmcm9tIGpRdWVyeSNmaWx0ZXIgZnVuY3Rpb247CgkJLy8gaW4gdGhhdCBjYXNlLCBlbGVtZW50IHdpbGwgYmUgc2Vjb25kIGFyZ3VtZW50CgkJZWxlbSA9IGVsIHx8IGVsZW07CgoJCS8vIElubGluZSBzdHlsZSB0cnVtcHMgYWxsCgkJcmV0dXJuIGVsZW0uc3R5bGUuZGlzcGxheSA9PT0gIm5vbmUiIHx8CgkJCWVsZW0uc3R5bGUuZGlzcGxheSA9PT0gIiIgJiYKCgkJCS8vIE90aGVyd2lzZSwgY2hlY2sgY29tcHV0ZWQgc3R5bGUKCQkJLy8gU3VwcG9ydDogRmlyZWZveCA8PTQzIC0gNDUKCQkJLy8gRGlzY29ubmVjdGVkIGVsZW1lbnRzIGNhbiBoYXZlIGNvbXB1dGVkIGRpc3BsYXk6IG5vbmUsIHNvIGZpcnN0IGNvbmZpcm0gdGhhdCBlbGVtIGlzCgkJCS8vIGluIHRoZSBkb2N1bWVudC4KCQkJaXNBdHRhY2hlZCggZWxlbSApICYmCgoJCQlqUXVlcnkuY3NzKCBlbGVtLCAiZGlzcGxheSIgKSA9PT0gIm5vbmUiOwoJfTsKCgoKZnVuY3Rpb24gYWRqdXN0Q1NTKCBlbGVtLCBwcm9wLCB2YWx1ZVBhcnRzLCB0d2VlbiApIHsKCXZhciBhZGp1c3RlZCwgc2NhbGUsCgkJbWF4SXRlcmF0aW9ucyA9IDIwLAoJCWN1cnJlbnRWYWx1ZSA9IHR3ZWVuID8KCQkJZnVuY3Rpb24oKSB7CgkJCQlyZXR1cm4gdHdlZW4uY3VyKCk7CgkJCX0gOgoJCQlmdW5jdGlvbigpIHsKCQkJCXJldHVybiBqUXVlcnkuY3NzKCBlbGVtLCBwcm9wLCAiIiApOwoJCQl9LAoJCWluaXRpYWwgPSBjdXJyZW50VmFsdWUoKSwKCQl1bml0ID0gdmFsdWVQYXJ0cyAmJiB2YWx1ZVBhcnRzWyAzIF0gfHwgKCBqUXVlcnkuY3NzTnVtYmVyWyBwcm9wIF0gPyAiIiA6ICJweCIgKSwKCgkJLy8gU3RhcnRpbmcgdmFsdWUgY29tcHV0YXRpb24gaXMgcmVxdWlyZWQgZm9yIHBvdGVudGlhbCB1bml0IG1pc21hdGNoZXMKCQlpbml0aWFsSW5Vbml0ID0gZWxlbS5ub2RlVHlwZSAmJgoJCQkoIGpRdWVyeS5jc3NOdW1iZXJbIHByb3AgXSB8fCB1bml0ICE9PSAicHgiICYmICtpbml0aWFsICkgJiYKCQkJcmNzc051bS5leGVjKCBqUXVlcnkuY3NzKCBlbGVtLCBwcm9wICkgKTsKCglpZiAoIGluaXRpYWxJblVuaXQgJiYgaW5pdGlhbEluVW5pdFsgMyBdICE9PSB1bml0ICkgewoKCQkvLyBTdXBwb3J0OiBGaXJlZm94IDw9NTQKCQkvLyBIYWx2ZSB0aGUgaXRlcmF0aW9uIHRhcmdldCB2YWx1ZSB0byBwcmV2ZW50IGludGVyZmVyZW5jZSBmcm9tIENTUyB1cHBlciBib3VuZHMgKGdoLTIxNDQpCgkJaW5pdGlhbCA9IGluaXRpYWwgLyAyOwoKCQkvLyBUcnVzdCB1bml0cyByZXBvcnRlZCBieSBqUXVlcnkuY3NzCgkJdW5pdCA9IHVuaXQgfHwgaW5pdGlhbEluVW5pdFsgMyBdOwoKCQkvLyBJdGVyYXRpdmVseSBhcHByb3hpbWF0ZSBmcm9tIGEgbm9uemVybyBzdGFydGluZyBwb2ludAoJCWluaXRpYWxJblVuaXQgPSAraW5pdGlhbCB8fCAxOwoKCQl3aGlsZSAoIG1heEl0ZXJhdGlvbnMtLSApIHsKCgkJCS8vIEV2YWx1YXRlIGFuZCB1cGRhdGUgb3VyIGJlc3QgZ3Vlc3MgKGRvdWJsaW5nIGd1ZXNzZXMgdGhhdCB6ZXJvIG91dCkuCgkJCS8vIEZpbmlzaCBpZiB0aGUgc2NhbGUgZXF1YWxzIG9yIGNyb3NzZXMgMSAobWFraW5nIHRoZSBvbGQqbmV3IHByb2R1Y3Qgbm9uLXBvc2l0aXZlKS4KCQkJalF1ZXJ5LnN0eWxlKCBlbGVtLCBwcm9wLCBpbml0aWFsSW5Vbml0ICsgdW5pdCApOwoJCQlpZiAoICggMSAtIHNjYWxlICkgKiAoIDEgLSAoIHNjYWxlID0gY3VycmVudFZhbHVlKCkgLyBpbml0aWFsIHx8IDAuNSApICkgPD0gMCApIHsKCQkJCW1heEl0ZXJhdGlvbnMgPSAwOwoJCQl9CgkJCWluaXRpYWxJblVuaXQgPSBpbml0aWFsSW5Vbml0IC8gc2NhbGU7CgoJCX0KCgkJaW5pdGlhbEluVW5pdCA9IGluaXRpYWxJblVuaXQgKiAyOwoJCWpRdWVyeS5zdHlsZSggZWxlbSwgcHJvcCwgaW5pdGlhbEluVW5pdCArIHVuaXQgKTsKCgkJLy8gTWFrZSBzdXJlIHdlIHVwZGF0ZSB0aGUgdHdlZW4gcHJvcGVydGllcyBsYXRlciBvbgoJCXZhbHVlUGFydHMgPSB2YWx1ZVBhcnRzIHx8IFtdOwoJfQoKCWlmICggdmFsdWVQYXJ0cyApIHsKCQlpbml0aWFsSW5Vbml0ID0gK2luaXRpYWxJblVuaXQgfHwgK2luaXRpYWwgfHwgMDsKCgkJLy8gQXBwbHkgcmVsYXRpdmUgb2Zmc2V0ICgrPS8tPSkgaWYgc3BlY2lmaWVkCgkJYWRqdXN0ZWQgPSB2YWx1ZVBhcnRzWyAxIF0gPwoJCQlpbml0aWFsSW5Vbml0ICsgKCB2YWx1ZVBhcnRzWyAxIF0gKyAxICkgKiB2YWx1ZVBhcnRzWyAyIF0gOgoJCQkrdmFsdWVQYXJ0c1sgMiBdOwoJCWlmICggdHdlZW4gKSB7CgkJCXR3ZWVuLnVuaXQgPSB1bml0OwoJCQl0d2Vlbi5zdGFydCA9IGluaXRpYWxJblVuaXQ7CgkJCXR3ZWVuLmVuZCA9IGFkanVzdGVkOwoJCX0KCX0KCXJldHVybiBhZGp1c3RlZDsKfQoKCnZhciBkZWZhdWx0RGlzcGxheU1hcCA9IHt9OwoKZnVuY3Rpb24gZ2V0RGVmYXVsdERpc3BsYXkoIGVsZW0gKSB7Cgl2YXIgdGVtcCwKCQlkb2MgPSBlbGVtLm93bmVyRG9jdW1lbnQsCgkJbm9kZU5hbWUgPSBlbGVtLm5vZGVOYW1lLAoJCWRpc3BsYXkgPSBkZWZhdWx0RGlzcGxheU1hcFsgbm9kZU5hbWUgXTsKCglpZiAoIGRpc3BsYXkgKSB7CgkJcmV0dXJuIGRpc3BsYXk7Cgl9CgoJdGVtcCA9IGRvYy5ib2R5LmFwcGVuZENoaWxkKCBkb2MuY3JlYXRlRWxlbWVudCggbm9kZU5hbWUgKSApOwoJZGlzcGxheSA9IGpRdWVyeS5jc3MoIHRlbXAsICJkaXNwbGF5IiApOwoKCXRlbXAucGFyZW50Tm9kZS5yZW1vdmVDaGlsZCggdGVtcCApOwoKCWlmICggZGlzcGxheSA9PT0gIm5vbmUiICkgewoJCWRpc3BsYXkgPSAiYmxvY2siOwoJfQoJZGVmYXVsdERpc3BsYXlNYXBbIG5vZGVOYW1lIF0gPSBkaXNwbGF5OwoKCXJldHVybiBkaXNwbGF5Owp9CgpmdW5jdGlvbiBzaG93SGlkZSggZWxlbWVudHMsIHNob3cgKSB7Cgl2YXIgZGlzcGxheSwgZWxlbSwKCQl2YWx1ZXMgPSBbXSwKCQlpbmRleCA9IDAsCgkJbGVuZ3RoID0gZWxlbWVudHMubGVuZ3RoOwoKCS8vIERldGVybWluZSBuZXcgZGlzcGxheSB2YWx1ZSBmb3IgZWxlbWVudHMgdGhhdCBuZWVkIHRvIGNoYW5nZQoJZm9yICggOyBpbmRleCA8IGxlbmd0aDsgaW5kZXgrKyApIHsKCQllbGVtID0gZWxlbWVudHNbIGluZGV4IF07CgkJaWYgKCAhZWxlbS5zdHlsZSApIHsKCQkJY29udGludWU7CgkJfQoKCQlkaXNwbGF5ID0gZWxlbS5zdHlsZS5kaXNwbGF5OwoJCWlmICggc2hvdyApIHsKCgkJCS8vIFNpbmNlIHdlIGZvcmNlIHZpc2liaWxpdHkgdXBvbiBjYXNjYWRlLWhpZGRlbiBlbGVtZW50cywgYW4gaW1tZWRpYXRlIChhbmQgc2xvdykKCQkJLy8gY2hlY2sgaXMgcmVxdWlyZWQgaW4gdGhpcyBmaXJzdCBsb29wIHVubGVzcyB3ZSBoYXZlIGEgbm9uZW1wdHkgZGlzcGxheSB2YWx1ZSAoZWl0aGVyCgkJCS8vIGlubGluZSBvciBhYm91dC10by1iZS1yZXN0b3JlZCkKCQkJaWYgKCBkaXNwbGF5ID09PSAibm9uZSIgKSB7CgkJCQl2YWx1ZXNbIGluZGV4IF0gPSBkYXRhUHJpdi5nZXQoIGVsZW0sICJkaXNwbGF5IiApIHx8IG51bGw7CgkJCQlpZiAoICF2YWx1ZXNbIGluZGV4IF0gKSB7CgkJCQkJZWxlbS5zdHlsZS5kaXNwbGF5ID0gIiI7CgkJCQl9CgkJCX0KCQkJaWYgKCBlbGVtLnN0eWxlLmRpc3BsYXkgPT09ICIiICYmIGlzSGlkZGVuV2l0aGluVHJlZSggZWxlbSApICkgewoJCQkJdmFsdWVzWyBpbmRleCBdID0gZ2V0RGVmYXVsdERpc3BsYXkoIGVsZW0gKTsKCQkJfQoJCX0gZWxzZSB7CgkJCWlmICggZGlzcGxheSAhPT0gIm5vbmUiICkgewoJCQkJdmFsdWVzWyBpbmRleCBdID0gIm5vbmUiOwoKCQkJCS8vIFJlbWVtYmVyIHdoYXQgd2UncmUgb3ZlcndyaXRpbmcKCQkJCWRhdGFQcml2LnNldCggZWxlbSwgImRpc3BsYXkiLCBkaXNwbGF5ICk7CgkJCX0KCQl9Cgl9CgoJLy8gU2V0IHRoZSBkaXNwbGF5IG9mIHRoZSBlbGVtZW50cyBpbiBhIHNlY29uZCBsb29wIHRvIGF2b2lkIGNvbnN0YW50IHJlZmxvdwoJZm9yICggaW5kZXggPSAwOyBpbmRleCA8IGxlbmd0aDsgaW5kZXgrKyApIHsKCQlpZiAoIHZhbHVlc1sgaW5kZXggXSAhPSBudWxsICkgewoJCQllbGVtZW50c1sgaW5kZXggXS5zdHlsZS5kaXNwbGF5ID0gdmFsdWVzWyBpbmRleCBdOwoJCX0KCX0KCglyZXR1cm4gZWxlbWVudHM7Cn0KCmpRdWVyeS5mbi5leHRlbmQoIHsKCXNob3c6IGZ1bmN0aW9uKCkgewoJCXJldHVybiBzaG93SGlkZSggdGhpcywgdHJ1ZSApOwoJfSwKCWhpZGU6IGZ1bmN0aW9uKCkgewoJCXJldHVybiBzaG93SGlkZSggdGhpcyApOwoJfSwKCXRvZ2dsZTogZnVuY3Rpb24oIHN0YXRlICkgewoJCWlmICggdHlwZW9mIHN0YXRlID09PSAiYm9vbGVhbiIgKSB7CgkJCXJldHVybiBzdGF0ZSA/IHRoaXMuc2hvdygpIDogdGhpcy5oaWRlKCk7CgkJfQoKCQlyZXR1cm4gdGhpcy5lYWNoKCBmdW5jdGlvbigpIHsKCQkJaWYgKCBpc0hpZGRlbldpdGhpblRyZWUoIHRoaXMgKSApIHsKCQkJCWpRdWVyeSggdGhpcyApLnNob3coKTsKCQkJfSBlbHNlIHsKCQkJCWpRdWVyeSggdGhpcyApLmhpZGUoKTsKCQkJfQoJCX0gKTsKCX0KfSApOwp2YXIgcmNoZWNrYWJsZVR5cGUgPSAoIC9eKD86Y2hlY2tib3h8cmFkaW8pJC9pICk7Cgp2YXIgcnRhZ05hbWUgPSAoIC88KFthLXpdW15cL1wwPlx4MjBcdFxyXG5cZl0qKS9pICk7Cgp2YXIgcnNjcmlwdFR5cGUgPSAoIC9eJHxebW9kdWxlJHxcLyg/OmphdmF8ZWNtYSlzY3JpcHQvaSApOwoKCgooIGZ1bmN0aW9uKCkgewoJdmFyIGZyYWdtZW50ID0gZG9jdW1lbnQuY3JlYXRlRG9jdW1lbnRGcmFnbWVudCgpLAoJCWRpdiA9IGZyYWdtZW50LmFwcGVuZENoaWxkKCBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCAiZGl2IiApICksCgkJaW5wdXQgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCAiaW5wdXQiICk7CgoJLy8gU3VwcG9ydDogQW5kcm9pZCA0LjAgLSA0LjMgb25seQoJLy8gQ2hlY2sgc3RhdGUgbG9zdCBpZiB0aGUgbmFtZSBpcyBzZXQgKHRyYWMtMTEyMTcpCgkvLyBTdXBwb3J0OiBXaW5kb3dzIFdlYiBBcHBzIChXV0EpCgkvLyBgbmFtZWAgYW5kIGB0eXBlYCBtdXN0IHVzZSAuc2V0QXR0cmlidXRlIGZvciBXV0EgKHRyYWMtMTQ5MDEpCglpbnB1dC5zZXRBdHRyaWJ1dGUoICJ0eXBlIiwgInJhZGlvIiApOwoJaW5wdXQuc2V0QXR0cmlidXRlKCAiY2hlY2tlZCIsICJjaGVja2VkIiApOwoJaW5wdXQuc2V0QXR0cmlidXRlKCAibmFtZSIsICJ0IiApOwoKCWRpdi5hcHBlbmRDaGlsZCggaW5wdXQgKTsKCgkvLyBTdXBwb3J0OiBBbmRyb2lkIDw9NC4xIG9ubHkKCS8vIE9sZGVyIFdlYktpdCBkb2Vzbid0IGNsb25lIGNoZWNrZWQgc3RhdGUgY29ycmVjdGx5IGluIGZyYWdtZW50cwoJc3VwcG9ydC5jaGVja0Nsb25lID0gZGl2LmNsb25lTm9kZSggdHJ1ZSApLmNsb25lTm9kZSggdHJ1ZSApLmxhc3RDaGlsZC5jaGVja2VkOwoKCS8vIFN1cHBvcnQ6IElFIDw9MTEgb25seQoJLy8gTWFrZSBzdXJlIHRleHRhcmVhIChhbmQgY2hlY2tib3gpIGRlZmF1bHRWYWx1ZSBpcyBwcm9wZXJseSBjbG9uZWQKCWRpdi5pbm5lckhUTUwgPSAiPHRleHRhcmVhPng8L3RleHRhcmVhPiI7CglzdXBwb3J0Lm5vQ2xvbmVDaGVja2VkID0gISFkaXYuY2xvbmVOb2RlKCB0cnVlICkubGFzdENoaWxkLmRlZmF1bHRWYWx1ZTsKCgkvLyBTdXBwb3J0OiBJRSA8PTkgb25seQoJLy8gSUUgPD05IHJlcGxhY2VzIDxvcHRpb24+IHRhZ3Mgd2l0aCB0aGVpciBjb250ZW50cyB3aGVuIGluc2VydGVkIG91dHNpZGUgb2YKCS8vIHRoZSBzZWxlY3QgZWxlbWVudC4KCWRpdi5pbm5lckhUTUwgPSAiPG9wdGlvbj48L29wdGlvbj4iOwoJc3VwcG9ydC5vcHRpb24gPSAhIWRpdi5sYXN0Q2hpbGQ7Cn0gKSgpOwoKCi8vIFdlIGhhdmUgdG8gY2xvc2UgdGhlc2UgdGFncyB0byBzdXBwb3J0IFhIVE1MICh0cmFjLTEzMjAwKQp2YXIgd3JhcE1hcCA9IHsKCgkvLyBYSFRNTCBwYXJzZXJzIGRvIG5vdCBtYWdpY2FsbHkgaW5zZXJ0IGVsZW1lbnRzIGluIHRoZQoJLy8gc2FtZSB3YXkgdGhhdCB0YWcgc291cCBwYXJzZXJzIGRvLiBTbyB3ZSBjYW5ub3Qgc2hvcnRlbgoJLy8gdGhpcyBieSBvbWl0dGluZyA8dGJvZHk+IG9yIG90aGVyIHJlcXVpcmVkIGVsZW1lbnRzLgoJdGhlYWQ6IFsgMSwgIjx0YWJsZT4iLCAiPC90YWJsZT4iIF0sCgljb2w6IFsgMiwgIjx0YWJsZT48Y29sZ3JvdXA+IiwgIjwvY29sZ3JvdXA+PC90YWJsZT4iIF0sCgl0cjogWyAyLCAiPHRhYmxlPjx0Ym9keT4iLCAiPC90Ym9keT48L3RhYmxlPiIgXSwKCXRkOiBbIDMsICI8dGFibGU+PHRib2R5Pjx0cj4iLCAiPC90cj48L3Rib2R5PjwvdGFibGU+IiBdLAoKCV9kZWZhdWx0OiBbIDAsICIiLCAiIiBdCn07Cgp3cmFwTWFwLnRib2R5ID0gd3JhcE1hcC50Zm9vdCA9IHdyYXBNYXAuY29sZ3JvdXAgPSB3cmFwTWFwLmNhcHRpb24gPSB3cmFwTWFwLnRoZWFkOwp3cmFwTWFwLnRoID0gd3JhcE1hcC50ZDsKCi8vIFN1cHBvcnQ6IElFIDw9OSBvbmx5CmlmICggIXN1cHBvcnQub3B0aW9uICkgewoJd3JhcE1hcC5vcHRncm91cCA9IHdyYXBNYXAub3B0aW9uID0gWyAxLCAiPHNlbGVjdCBtdWx0aXBsZT0nbXVsdGlwbGUnPiIsICI8L3NlbGVjdD4iIF07Cn0KCgpmdW5jdGlvbiBnZXRBbGwoIGNvbnRleHQsIHRhZyApIHsKCgkvLyBTdXBwb3J0OiBJRSA8PTkgLSAxMSBvbmx5CgkvLyBVc2UgdHlwZW9mIHRvIGF2b2lkIHplcm8tYXJndW1lbnQgbWV0aG9kIGludm9jYXRpb24gb24gaG9zdCBvYmplY3RzICh0cmFjLTE1MTUxKQoJdmFyIHJldDsKCglpZiAoIHR5cGVvZiBjb250ZXh0LmdldEVsZW1lbnRzQnlUYWdOYW1lICE9PSAidW5kZWZpbmVkIiApIHsKCQlyZXQgPSBjb250ZXh0LmdldEVsZW1lbnRzQnlUYWdOYW1lKCB0YWcgfHwgIioiICk7CgoJfSBlbHNlIGlmICggdHlwZW9mIGNvbnRleHQucXVlcnlTZWxlY3RvckFsbCAhPT0gInVuZGVmaW5lZCIgKSB7CgkJcmV0ID0gY29udGV4dC5xdWVyeVNlbGVjdG9yQWxsKCB0YWcgfHwgIioiICk7CgoJfSBlbHNlIHsKCQlyZXQgPSBbXTsKCX0KCglpZiAoIHRhZyA9PT0gdW5kZWZpbmVkIHx8IHRhZyAmJiBub2RlTmFtZSggY29udGV4dCwgdGFnICkgKSB7CgkJcmV0dXJuIGpRdWVyeS5tZXJnZSggWyBjb250ZXh0IF0sIHJldCApOwoJfQoKCXJldHVybiByZXQ7Cn0KCgovLyBNYXJrIHNjcmlwdHMgYXMgaGF2aW5nIGFscmVhZHkgYmVlbiBldmFsdWF0ZWQKZnVuY3Rpb24gc2V0R2xvYmFsRXZhbCggZWxlbXMsIHJlZkVsZW1lbnRzICkgewoJdmFyIGkgPSAwLAoJCWwgPSBlbGVtcy5sZW5ndGg7CgoJZm9yICggOyBpIDwgbDsgaSsrICkgewoJCWRhdGFQcml2LnNldCgKCQkJZWxlbXNbIGkgXSwKCQkJImdsb2JhbEV2YWwiLAoJCQkhcmVmRWxlbWVudHMgfHwgZGF0YVByaXYuZ2V0KCByZWZFbGVtZW50c1sgaSBdLCAiZ2xvYmFsRXZhbCIgKQoJCSk7Cgl9Cn0KCgp2YXIgcmh0bWwgPSAvPHwmIz9cdys7LzsKCmZ1bmN0aW9uIGJ1aWxkRnJhZ21lbnQoIGVsZW1zLCBjb250ZXh0LCBzY3JpcHRzLCBzZWxlY3Rpb24sIGlnbm9yZWQgKSB7Cgl2YXIgZWxlbSwgdG1wLCB0YWcsIHdyYXAsIGF0dGFjaGVkLCBqLAoJCWZyYWdtZW50ID0gY29udGV4dC5jcmVhdGVEb2N1bWVudEZyYWdtZW50KCksCgkJbm9kZXMgPSBbXSwKCQlpID0gMCwKCQlsID0gZWxlbXMubGVuZ3RoOwoKCWZvciAoIDsgaSA8IGw7IGkrKyApIHsKCQllbGVtID0gZWxlbXNbIGkgXTsKCgkJaWYgKCBlbGVtIHx8IGVsZW0gPT09IDAgKSB7CgoJCQkvLyBBZGQgbm9kZXMgZGlyZWN0bHkKCQkJaWYgKCB0b1R5cGUoIGVsZW0gKSA9PT0gIm9iamVjdCIgKSB7CgoJCQkJLy8gU3VwcG9ydDogQW5kcm9pZCA8PTQuMCBvbmx5LCBQaGFudG9tSlMgMSBvbmx5CgkJCQkvLyBwdXNoLmFwcGx5KF8sIGFycmF5bGlrZSkgdGhyb3dzIG9uIGFuY2llbnQgV2ViS2l0CgkJCQlqUXVlcnkubWVyZ2UoIG5vZGVzLCBlbGVtLm5vZGVUeXBlID8gWyBlbGVtIF0gOiBlbGVtICk7CgoJCQkvLyBDb252ZXJ0IG5vbi1odG1sIGludG8gYSB0ZXh0IG5vZGUKCQkJfSBlbHNlIGlmICggIXJodG1sLnRlc3QoIGVsZW0gKSApIHsKCQkJCW5vZGVzLnB1c2goIGNvbnRleHQuY3JlYXRlVGV4dE5vZGUoIGVsZW0gKSApOwoKCQkJLy8gQ29udmVydCBodG1sIGludG8gRE9NIG5vZGVzCgkJCX0gZWxzZSB7CgkJCQl0bXAgPSB0bXAgfHwgZnJhZ21lbnQuYXBwZW5kQ2hpbGQoIGNvbnRleHQuY3JlYXRlRWxlbWVudCggImRpdiIgKSApOwoKCQkJCS8vIERlc2VyaWFsaXplIGEgc3RhbmRhcmQgcmVwcmVzZW50YXRpb24KCQkJCXRhZyA9ICggcnRhZ05hbWUuZXhlYyggZWxlbSApIHx8IFsgIiIsICIiIF0gKVsgMSBdLnRvTG93ZXJDYXNlKCk7CgkJCQl3cmFwID0gd3JhcE1hcFsgdGFnIF0gfHwgd3JhcE1hcC5fZGVmYXVsdDsKCQkJCXRtcC5pbm5lckhUTUwgPSB3cmFwWyAxIF0gKyBqUXVlcnkuaHRtbFByZWZpbHRlciggZWxlbSApICsgd3JhcFsgMiBdOwoKCQkJCS8vIERlc2NlbmQgdGhyb3VnaCB3cmFwcGVycyB0byB0aGUgcmlnaHQgY29udGVudAoJCQkJaiA9IHdyYXBbIDAgXTsKCQkJCXdoaWxlICggai0tICkgewoJCQkJCXRtcCA9IHRtcC5sYXN0Q2hpbGQ7CgkJCQl9CgoJCQkJLy8gU3VwcG9ydDogQW5kcm9pZCA8PTQuMCBvbmx5LCBQaGFudG9tSlMgMSBvbmx5CgkJCQkvLyBwdXNoLmFwcGx5KF8sIGFycmF5bGlrZSkgdGhyb3dzIG9uIGFuY2llbnQgV2ViS2l0CgkJCQlqUXVlcnkubWVyZ2UoIG5vZGVzLCB0bXAuY2hpbGROb2RlcyApOwoKCQkJCS8vIFJlbWVtYmVyIHRoZSB0b3AtbGV2ZWwgY29udGFpbmVyCgkJCQl0bXAgPSBmcmFnbWVudC5maXJzdENoaWxkOwoKCQkJCS8vIEVuc3VyZSB0aGUgY3JlYXRlZCBub2RlcyBhcmUgb3JwaGFuZWQgKHRyYWMtMTIzOTIpCgkJCQl0bXAudGV4dENvbnRlbnQgPSAiIjsKCQkJfQoJCX0KCX0KCgkvLyBSZW1vdmUgd3JhcHBlciBmcm9tIGZyYWdtZW50CglmcmFnbWVudC50ZXh0Q29udGVudCA9ICIiOwoKCWkgPSAwOwoJd2hpbGUgKCAoIGVsZW0gPSBub2Rlc1sgaSsrIF0gKSApIHsKCgkJLy8gU2tpcCBlbGVtZW50cyBhbHJlYWR5IGluIHRoZSBjb250ZXh0IGNvbGxlY3Rpb24gKHRyYWMtNDA4NykKCQlpZiAoIHNlbGVjdGlvbiAmJiBqUXVlcnkuaW5BcnJheSggZWxlbSwgc2VsZWN0aW9uICkgPiAtMSApIHsKCQkJaWYgKCBpZ25vcmVkICkgewoJCQkJaWdub3JlZC5wdXNoKCBlbGVtICk7CgkJCX0KCQkJY29udGludWU7CgkJfQoKCQlhdHRhY2hlZCA9IGlzQXR0YWNoZWQoIGVsZW0gKTsKCgkJLy8gQXBwZW5kIHRvIGZyYWdtZW50CgkJdG1wID0gZ2V0QWxsKCBmcmFnbWVudC5hcHBlbmRDaGlsZCggZWxlbSApLCAic2NyaXB0IiApOwoKCQkvLyBQcmVzZXJ2ZSBzY3JpcHQgZXZhbHVhdGlvbiBoaXN0b3J5CgkJaWYgKCBhdHRhY2hlZCApIHsKCQkJc2V0R2xvYmFsRXZhbCggdG1wICk7CgkJfQoKCQkvLyBDYXB0dXJlIGV4ZWN1dGFibGVzCgkJaWYgKCBzY3JpcHRzICkgewoJCQlqID0gMDsKCQkJd2hpbGUgKCAoIGVsZW0gPSB0bXBbIGorKyBdICkgKSB7CgkJCQlpZiAoIHJzY3JpcHRUeXBlLnRlc3QoIGVsZW0udHlwZSB8fCAiIiApICkgewoJCQkJCXNjcmlwdHMucHVzaCggZWxlbSApOwoJCQkJfQoJCQl9CgkJfQoJfQoKCXJldHVybiBmcmFnbWVudDsKfQoKCnZhciBydHlwZW5hbWVzcGFjZSA9IC9eKFteLl0qKSg/OlwuKC4rKXwpLzsKCmZ1bmN0aW9uIHJldHVyblRydWUoKSB7CglyZXR1cm4gdHJ1ZTsKfQoKZnVuY3Rpb24gcmV0dXJuRmFsc2UoKSB7CglyZXR1cm4gZmFsc2U7Cn0KCi8vIFN1cHBvcnQ6IElFIDw9OSAtIDExKwovLyBmb2N1cygpIGFuZCBibHVyKCkgYXJlIGFzeW5jaHJvbm91cywgZXhjZXB0IHdoZW4gdGhleSBhcmUgbm8tb3AuCi8vIFNvIGV4cGVjdCBmb2N1cyB0byBiZSBzeW5jaHJvbm91cyB3aGVuIHRoZSBlbGVtZW50IGlzIGFscmVhZHkgYWN0aXZlLAovLyBhbmQgYmx1ciB0byBiZSBzeW5jaHJvbm91cyB3aGVuIHRoZSBlbGVtZW50IGlzIG5vdCBhbHJlYWR5IGFjdGl2ZS4KLy8gKGZvY3VzIGFuZCBibHVyIGFyZSBhbHdheXMgc3luY2hyb25vdXMgaW4gb3RoZXIgc3VwcG9ydGVkIGJyb3dzZXJzLAovLyB0aGlzIGp1c3QgZGVmaW5lcyB3aGVuIHdlIGNhbiBjb3VudCBvbiBpdCkuCmZ1bmN0aW9uIGV4cGVjdFN5bmMoIGVsZW0sIHR5cGUgKSB7CglyZXR1cm4gKCBlbGVtID09PSBzYWZlQWN0aXZlRWxlbWVudCgpICkgPT09ICggdHlwZSA9PT0gImZvY3VzIiApOwp9CgovLyBTdXBwb3J0OiBJRSA8PTkgb25seQovLyBBY2Nlc3NpbmcgZG9jdW1lbnQuYWN0aXZlRWxlbWVudCBjYW4gdGhyb3cgdW5leHBlY3RlZGx5Ci8vIGh0dHBzOi8vYnVncy5qcXVlcnkuY29tL3RpY2tldC8xMzM5MwpmdW5jdGlvbiBzYWZlQWN0aXZlRWxlbWVudCgpIHsKCXRyeSB7CgkJcmV0dXJuIGRvY3VtZW50LmFjdGl2ZUVsZW1lbnQ7Cgl9IGNhdGNoICggZXJyICkgeyB9Cn0KCmZ1bmN0aW9uIG9uKCBlbGVtLCB0eXBlcywgc2VsZWN0b3IsIGRhdGEsIGZuLCBvbmUgKSB7Cgl2YXIgb3JpZ0ZuLCB0eXBlOwoKCS8vIFR5cGVzIGNhbiBiZSBhIG1hcCBvZiB0eXBlcy9oYW5kbGVycwoJaWYgKCB0eXBlb2YgdHlwZXMgPT09ICJvYmplY3QiICkgewoKCQkvLyAoIHR5cGVzLU9iamVjdCwgc2VsZWN0b3IsIGRhdGEgKQoJCWlmICggdHlwZW9mIHNlbGVjdG9yICE9PSAic3RyaW5nIiApIHsKCgkJCS8vICggdHlwZXMtT2JqZWN0LCBkYXRhICkKCQkJZGF0YSA9IGRhdGEgfHwgc2VsZWN0b3I7CgkJCXNlbGVjdG9yID0gdW5kZWZpbmVkOwoJCX0KCQlmb3IgKCB0eXBlIGluIHR5cGVzICkgewoJCQlvbiggZWxlbSwgdHlwZSwgc2VsZWN0b3IsIGRhdGEsIHR5cGVzWyB0eXBlIF0sIG9uZSApOwoJCX0KCQlyZXR1cm4gZWxlbTsKCX0KCglpZiAoIGRhdGEgPT0gbnVsbCAmJiBmbiA9PSBudWxsICkgewoKCQkvLyAoIHR5cGVzLCBmbiApCgkJZm4gPSBzZWxlY3RvcjsKCQlkYXRhID0gc2VsZWN0b3IgPSB1bmRlZmluZWQ7Cgl9IGVsc2UgaWYgKCBmbiA9PSBudWxsICkgewoJCWlmICggdHlwZW9mIHNlbGVjdG9yID09PSAic3RyaW5nIiApIHsKCgkJCS8vICggdHlwZXMsIHNlbGVjdG9yLCBmbiApCgkJCWZuID0gZGF0YTsKCQkJZGF0YSA9IHVuZGVmaW5lZDsKCQl9IGVsc2UgewoKCQkJLy8gKCB0eXBlcywgZGF0YSwgZm4gKQoJCQlmbiA9IGRhdGE7CgkJCWRhdGEgPSBzZWxlY3RvcjsKCQkJc2VsZWN0b3IgPSB1bmRlZmluZWQ7CgkJfQoJfQoJaWYgKCBmbiA9PT0gZmFsc2UgKSB7CgkJZm4gPSByZXR1cm5GYWxzZTsKCX0gZWxzZSBpZiAoICFmbiApIHsKCQlyZXR1cm4gZWxlbTsKCX0KCglpZiAoIG9uZSA9PT0gMSApIHsKCQlvcmlnRm4gPSBmbjsKCQlmbiA9IGZ1bmN0aW9uKCBldmVudCApIHsKCgkJCS8vIENhbiB1c2UgYW4gZW1wdHkgc2V0LCBzaW5jZSBldmVudCBjb250YWlucyB0aGUgaW5mbwoJCQlqUXVlcnkoKS5vZmYoIGV2ZW50ICk7CgkJCXJldHVybiBvcmlnRm4uYXBwbHkoIHRoaXMsIGFyZ3VtZW50cyApOwoJCX07CgoJCS8vIFVzZSBzYW1lIGd1aWQgc28gY2FsbGVyIGNhbiByZW1vdmUgdXNpbmcgb3JpZ0ZuCgkJZm4uZ3VpZCA9IG9yaWdGbi5ndWlkIHx8ICggb3JpZ0ZuLmd1aWQgPSBqUXVlcnkuZ3VpZCsrICk7Cgl9CglyZXR1cm4gZWxlbS5lYWNoKCBmdW5jdGlvbigpIHsKCQlqUXVlcnkuZXZlbnQuYWRkKCB0aGlzLCB0eXBlcywgZm4sIGRhdGEsIHNlbGVjdG9yICk7Cgl9ICk7Cn0KCi8qCiAqIEhlbHBlciBmdW5jdGlvbnMgZm9yIG1hbmFnaW5nIGV2ZW50cyAtLSBub3QgcGFydCBvZiB0aGUgcHVibGljIGludGVyZmFjZS4KICogUHJvcHMgdG8gRGVhbiBFZHdhcmRzJyBhZGRFdmVudCBsaWJyYXJ5IGZvciBtYW55IG9mIHRoZSBpZGVhcy4KICovCmpRdWVyeS5ldmVudCA9IHsKCglnbG9iYWw6IHt9LAoKCWFkZDogZnVuY3Rpb24oIGVsZW0sIHR5cGVzLCBoYW5kbGVyLCBkYXRhLCBzZWxlY3RvciApIHsKCgkJdmFyIGhhbmRsZU9iakluLCBldmVudEhhbmRsZSwgdG1wLAoJCQlldmVudHMsIHQsIGhhbmRsZU9iaiwKCQkJc3BlY2lhbCwgaGFuZGxlcnMsIHR5cGUsIG5hbWVzcGFjZXMsIG9yaWdUeXBlLAoJCQllbGVtRGF0YSA9IGRhdGFQcml2LmdldCggZWxlbSApOwoKCQkvLyBPbmx5IGF0dGFjaCBldmVudHMgdG8gb2JqZWN0cyB0aGF0IGFjY2VwdCBkYXRhCgkJaWYgKCAhYWNjZXB0RGF0YSggZWxlbSApICkgewoJCQlyZXR1cm47CgkJfQoKCQkvLyBDYWxsZXIgY2FuIHBhc3MgaW4gYW4gb2JqZWN0IG9mIGN1c3RvbSBkYXRhIGluIGxpZXUgb2YgdGhlIGhhbmRsZXIKCQlpZiAoIGhhbmRsZXIuaGFuZGxlciApIHsKCQkJaGFuZGxlT2JqSW4gPSBoYW5kbGVyOwoJCQloYW5kbGVyID0gaGFuZGxlT2JqSW4uaGFuZGxlcjsKCQkJc2VsZWN0b3IgPSBoYW5kbGVPYmpJbi5zZWxlY3RvcjsKCQl9CgoJCS8vIEVuc3VyZSB0aGF0IGludmFsaWQgc2VsZWN0b3JzIHRocm93IGV4Y2VwdGlvbnMgYXQgYXR0YWNoIHRpbWUKCQkvLyBFdmFsdWF0ZSBhZ2FpbnN0IGRvY3VtZW50RWxlbWVudCBpbiBjYXNlIGVsZW0gaXMgYSBub24tZWxlbWVudCBub2RlIChlLmcuLCBkb2N1bWVudCkKCQlpZiAoIHNlbGVjdG9yICkgewoJCQlqUXVlcnkuZmluZC5tYXRjaGVzU2VsZWN0b3IoIGRvY3VtZW50RWxlbWVudCwgc2VsZWN0b3IgKTsKCQl9CgoJCS8vIE1ha2Ugc3VyZSB0aGF0IHRoZSBoYW5kbGVyIGhhcyBhIHVuaXF1ZSBJRCwgdXNlZCB0byBmaW5kL3JlbW92ZSBpdCBsYXRlcgoJCWlmICggIWhhbmRsZXIuZ3VpZCApIHsKCQkJaGFuZGxlci5ndWlkID0galF1ZXJ5Lmd1aWQrKzsKCQl9CgoJCS8vIEluaXQgdGhlIGVsZW1lbnQncyBldmVudCBzdHJ1Y3R1cmUgYW5kIG1haW4gaGFuZGxlciwgaWYgdGhpcyBpcyB0aGUgZmlyc3QKCQlpZiAoICEoIGV2ZW50cyA9IGVsZW1EYXRhLmV2ZW50cyApICkgewoJCQlldmVudHMgPSBlbGVtRGF0YS5ldmVudHMgPSBPYmplY3QuY3JlYXRlKCBudWxsICk7CgkJfQoJCWlmICggISggZXZlbnRIYW5kbGUgPSBlbGVtRGF0YS5oYW5kbGUgKSApIHsKCQkJZXZlbnRIYW5kbGUgPSBlbGVtRGF0YS5oYW5kbGUgPSBmdW5jdGlvbiggZSApIHsKCgkJCQkvLyBEaXNjYXJkIHRoZSBzZWNvbmQgZXZlbnQgb2YgYSBqUXVlcnkuZXZlbnQudHJpZ2dlcigpIGFuZAoJCQkJLy8gd2hlbiBhbiBldmVudCBpcyBjYWxsZWQgYWZ0ZXIgYSBwYWdlIGhhcyB1bmxvYWRlZAoJCQkJcmV0dXJuIHR5cGVvZiBqUXVlcnkgIT09ICJ1bmRlZmluZWQiICYmIGpRdWVyeS5ldmVudC50cmlnZ2VyZWQgIT09IGUudHlwZSA/CgkJCQkJalF1ZXJ5LmV2ZW50LmRpc3BhdGNoLmFwcGx5KCBlbGVtLCBhcmd1bWVudHMgKSA6IHVuZGVmaW5lZDsKCQkJfTsKCQl9CgoJCS8vIEhhbmRsZSBtdWx0aXBsZSBldmVudHMgc2VwYXJhdGVkIGJ5IGEgc3BhY2UKCQl0eXBlcyA9ICggdHlwZXMgfHwgIiIgKS5tYXRjaCggcm5vdGh0bWx3aGl0ZSApIHx8IFsgIiIgXTsKCQl0ID0gdHlwZXMubGVuZ3RoOwoJCXdoaWxlICggdC0tICkgewoJCQl0bXAgPSBydHlwZW5hbWVzcGFjZS5leGVjKCB0eXBlc1sgdCBdICkgfHwgW107CgkJCXR5cGUgPSBvcmlnVHlwZSA9IHRtcFsgMSBdOwoJCQluYW1lc3BhY2VzID0gKCB0bXBbIDIgXSB8fCAiIiApLnNwbGl0KCAiLiIgKS5zb3J0KCk7CgoJCQkvLyBUaGVyZSAqbXVzdCogYmUgYSB0eXBlLCBubyBhdHRhY2hpbmcgbmFtZXNwYWNlLW9ubHkgaGFuZGxlcnMKCQkJaWYgKCAhdHlwZSApIHsKCQkJCWNvbnRpbnVlOwoJCQl9CgoJCQkvLyBJZiBldmVudCBjaGFuZ2VzIGl0cyB0eXBlLCB1c2UgdGhlIHNwZWNpYWwgZXZlbnQgaGFuZGxlcnMgZm9yIHRoZSBjaGFuZ2VkIHR5cGUKCQkJc3BlY2lhbCA9IGpRdWVyeS5ldmVudC5zcGVjaWFsWyB0eXBlIF0gfHwge307CgoJCQkvLyBJZiBzZWxlY3RvciBkZWZpbmVkLCBkZXRlcm1pbmUgc3BlY2lhbCBldmVudCBhcGkgdHlwZSwgb3RoZXJ3aXNlIGdpdmVuIHR5cGUKCQkJdHlwZSA9ICggc2VsZWN0b3IgPyBzcGVjaWFsLmRlbGVnYXRlVHlwZSA6IHNwZWNpYWwuYmluZFR5cGUgKSB8fCB0eXBlOwoKCQkJLy8gVXBkYXRlIHNwZWNpYWwgYmFzZWQgb24gbmV3bHkgcmVzZXQgdHlwZQoJCQlzcGVjaWFsID0galF1ZXJ5LmV2ZW50LnNwZWNpYWxbIHR5cGUgXSB8fCB7fTsKCgkJCS8vIGhhbmRsZU9iaiBpcyBwYXNzZWQgdG8gYWxsIGV2ZW50IGhhbmRsZXJzCgkJCWhhbmRsZU9iaiA9IGpRdWVyeS5leHRlbmQoIHsKCQkJCXR5cGU6IHR5cGUsCgkJCQlvcmlnVHlwZTogb3JpZ1R5cGUsCgkJCQlkYXRhOiBkYXRhLAoJCQkJaGFuZGxlcjogaGFuZGxlciwKCQkJCWd1aWQ6IGhhbmRsZXIuZ3VpZCwKCQkJCXNlbGVjdG9yOiBzZWxlY3RvciwKCQkJCW5lZWRzQ29udGV4dDogc2VsZWN0b3IgJiYgalF1ZXJ5LmV4cHIubWF0Y2gubmVlZHNDb250ZXh0LnRlc3QoIHNlbGVjdG9yICksCgkJCQluYW1lc3BhY2U6IG5hbWVzcGFjZXMuam9pbiggIi4iICkKCQkJfSwgaGFuZGxlT2JqSW4gKTsKCgkJCS8vIEluaXQgdGhlIGV2ZW50IGhhbmRsZXIgcXVldWUgaWYgd2UncmUgdGhlIGZpcnN0CgkJCWlmICggISggaGFuZGxlcnMgPSBldmVudHNbIHR5cGUgXSApICkgewoJCQkJaGFuZGxlcnMgPSBldmVudHNbIHR5cGUgXSA9IFtdOwoJCQkJaGFuZGxlcnMuZGVsZWdhdGVDb3VudCA9IDA7CgoJCQkJLy8gT25seSB1c2UgYWRkRXZlbnRMaXN0ZW5lciBpZiB0aGUgc3BlY2lhbCBldmVudHMgaGFuZGxlciByZXR1cm5zIGZhbHNlCgkJCQlpZiAoICFzcGVjaWFsLnNldHVwIHx8CgkJCQkJc3BlY2lhbC5zZXR1cC5jYWxsKCBlbGVtLCBkYXRhLCBuYW1lc3BhY2VzLCBldmVudEhhbmRsZSApID09PSBmYWxzZSApIHsKCgkJCQkJaWYgKCBlbGVtLmFkZEV2ZW50TGlzdGVuZXIgKSB7CgkJCQkJCWVsZW0uYWRkRXZlbnRMaXN0ZW5lciggdHlwZSwgZXZlbnRIYW5kbGUgKTsKCQkJCQl9CgkJCQl9CgkJCX0KCgkJCWlmICggc3BlY2lhbC5hZGQgKSB7CgkJCQlzcGVjaWFsLmFkZC5jYWxsKCBlbGVtLCBoYW5kbGVPYmogKTsKCgkJCQlpZiAoICFoYW5kbGVPYmouaGFuZGxlci5ndWlkICkgewoJCQkJCWhhbmRsZU9iai5oYW5kbGVyLmd1aWQgPSBoYW5kbGVyLmd1aWQ7CgkJCQl9CgkJCX0KCgkJCS8vIEFkZCB0byB0aGUgZWxlbWVudCdzIGhhbmRsZXIgbGlzdCwgZGVsZWdhdGVzIGluIGZyb250CgkJCWlmICggc2VsZWN0b3IgKSB7CgkJCQloYW5kbGVycy5zcGxpY2UoIGhhbmRsZXJzLmRlbGVnYXRlQ291bnQrKywgMCwgaGFuZGxlT2JqICk7CgkJCX0gZWxzZSB7CgkJCQloYW5kbGVycy5wdXNoKCBoYW5kbGVPYmogKTsKCQkJfQoKCQkJLy8gS2VlcCB0cmFjayBvZiB3aGljaCBldmVudHMgaGF2ZSBldmVyIGJlZW4gdXNlZCwgZm9yIGV2ZW50IG9wdGltaXphdGlvbgoJCQlqUXVlcnkuZXZlbnQuZ2xvYmFsWyB0eXBlIF0gPSB0cnVlOwoJCX0KCgl9LAoKCS8vIERldGFjaCBhbiBldmVudCBvciBzZXQgb2YgZXZlbnRzIGZyb20gYW4gZWxlbWVudAoJcmVtb3ZlOiBmdW5jdGlvbiggZWxlbSwgdHlwZXMsIGhhbmRsZXIsIHNlbGVjdG9yLCBtYXBwZWRUeXBlcyApIHsKCgkJdmFyIGosIG9yaWdDb3VudCwgdG1wLAoJCQlldmVudHMsIHQsIGhhbmRsZU9iaiwKCQkJc3BlY2lhbCwgaGFuZGxlcnMsIHR5cGUsIG5hbWVzcGFjZXMsIG9yaWdUeXBlLAoJCQllbGVtRGF0YSA9IGRhdGFQcml2Lmhhc0RhdGEoIGVsZW0gKSAmJiBkYXRhUHJpdi5nZXQoIGVsZW0gKTsKCgkJaWYgKCAhZWxlbURhdGEgfHwgISggZXZlbnRzID0gZWxlbURhdGEuZXZlbnRzICkgKSB7CgkJCXJldHVybjsKCQl9CgoJCS8vIE9uY2UgZm9yIGVhY2ggdHlwZS5uYW1lc3BhY2UgaW4gdHlwZXM7IHR5cGUgbWF5IGJlIG9taXR0ZWQKCQl0eXBlcyA9ICggdHlwZXMgfHwgIiIgKS5tYXRjaCggcm5vdGh0bWx3aGl0ZSApIHx8IFsgIiIgXTsKCQl0ID0gdHlwZXMubGVuZ3RoOwoJCXdoaWxlICggdC0tICkgewoJCQl0bXAgPSBydHlwZW5hbWVzcGFjZS5leGVjKCB0eXBlc1sgdCBdICkgfHwgW107CgkJCXR5cGUgPSBvcmlnVHlwZSA9IHRtcFsgMSBdOwoJCQluYW1lc3BhY2VzID0gKCB0bXBbIDIgXSB8fCAiIiApLnNwbGl0KCAiLiIgKS5zb3J0KCk7CgoJCQkvLyBVbmJpbmQgYWxsIGV2ZW50cyAob24gdGhpcyBuYW1lc3BhY2UsIGlmIHByb3ZpZGVkKSBmb3IgdGhlIGVsZW1lbnQKCQkJaWYgKCAhdHlwZSApIHsKCQkJCWZvciAoIHR5cGUgaW4gZXZlbnRzICkgewoJCQkJCWpRdWVyeS5ldmVudC5yZW1vdmUoIGVsZW0sIHR5cGUgKyB0eXBlc1sgdCBdLCBoYW5kbGVyLCBzZWxlY3RvciwgdHJ1ZSApOwoJCQkJfQoJCQkJY29udGludWU7CgkJCX0KCgkJCXNwZWNpYWwgPSBqUXVlcnkuZXZlbnQuc3BlY2lhbFsgdHlwZSBdIHx8IHt9OwoJCQl0eXBlID0gKCBzZWxlY3RvciA/IHNwZWNpYWwuZGVsZWdhdGVUeXBlIDogc3BlY2lhbC5iaW5kVHlwZSApIHx8IHR5cGU7CgkJCWhhbmRsZXJzID0gZXZlbnRzWyB0eXBlIF0gfHwgW107CgkJCXRtcCA9IHRtcFsgMiBdICYmCgkJCQluZXcgUmVnRXhwKCAiKF58XFwuKSIgKyBuYW1lc3BhY2VzLmpvaW4oICJcXC4oPzouKlxcLnwpIiApICsgIihcXC58JCkiICk7CgoJCQkvLyBSZW1vdmUgbWF0Y2hpbmcgZXZlbnRzCgkJCW9yaWdDb3VudCA9IGogPSBoYW5kbGVycy5sZW5ndGg7CgkJCXdoaWxlICggai0tICkgewoJCQkJaGFuZGxlT2JqID0gaGFuZGxlcnNbIGogXTsKCgkJCQlpZiAoICggbWFwcGVkVHlwZXMgfHwgb3JpZ1R5cGUgPT09IGhhbmRsZU9iai5vcmlnVHlwZSApICYmCgkJCQkJKCAhaGFuZGxlciB8fCBoYW5kbGVyLmd1aWQgPT09IGhhbmRsZU9iai5ndWlkICkgJiYKCQkJCQkoICF0bXAgfHwgdG1wLnRlc3QoIGhhbmRsZU9iai5uYW1lc3BhY2UgKSApICYmCgkJCQkJKCAhc2VsZWN0b3IgfHwgc2VsZWN0b3IgPT09IGhhbmRsZU9iai5zZWxlY3RvciB8fAoJCQkJCQlzZWxlY3RvciA9PT0gIioqIiAmJiBoYW5kbGVPYmouc2VsZWN0b3IgKSApIHsKCQkJCQloYW5kbGVycy5zcGxpY2UoIGosIDEgKTsKCgkJCQkJaWYgKCBoYW5kbGVPYmouc2VsZWN0b3IgKSB7CgkJCQkJCWhhbmRsZXJzLmRlbGVnYXRlQ291bnQtLTsKCQkJCQl9CgkJCQkJaWYgKCBzcGVjaWFsLnJlbW92ZSApIHsKCQkJCQkJc3BlY2lhbC5yZW1vdmUuY2FsbCggZWxlbSwgaGFuZGxlT2JqICk7CgkJCQkJfQoJCQkJfQoJCQl9CgoJCQkvLyBSZW1vdmUgZ2VuZXJpYyBldmVudCBoYW5kbGVyIGlmIHdlIHJlbW92ZWQgc29tZXRoaW5nIGFuZCBubyBtb3JlIGhhbmRsZXJzIGV4aXN0CgkJCS8vIChhdm9pZHMgcG90ZW50aWFsIGZvciBlbmRsZXNzIHJlY3Vyc2lvbiBkdXJpbmcgcmVtb3ZhbCBvZiBzcGVjaWFsIGV2ZW50IGhhbmRsZXJzKQoJCQlpZiAoIG9yaWdDb3VudCAmJiAhaGFuZGxlcnMubGVuZ3RoICkgewoJCQkJaWYgKCAhc3BlY2lhbC50ZWFyZG93biB8fAoJCQkJCXNwZWNpYWwudGVhcmRvd24uY2FsbCggZWxlbSwgbmFtZXNwYWNlcywgZWxlbURhdGEuaGFuZGxlICkgPT09IGZhbHNlICkgewoKCQkJCQlqUXVlcnkucmVtb3ZlRXZlbnQoIGVsZW0sIHR5cGUsIGVsZW1EYXRhLmhhbmRsZSApOwoJCQkJfQoKCQkJCWRlbGV0ZSBldmVudHNbIHR5cGUgXTsKCQkJfQoJCX0KCgkJLy8gUmVtb3ZlIGRhdGEgYW5kIHRoZSBleHBhbmRvIGlmIGl0J3Mgbm8gbG9uZ2VyIHVzZWQKCQlpZiAoIGpRdWVyeS5pc0VtcHR5T2JqZWN0KCBldmVudHMgKSApIHsKCQkJZGF0YVByaXYucmVtb3ZlKCBlbGVtLCAiaGFuZGxlIGV2ZW50cyIgKTsKCQl9Cgl9LAoKCWRpc3BhdGNoOiBmdW5jdGlvbiggbmF0aXZlRXZlbnQgKSB7CgoJCXZhciBpLCBqLCByZXQsIG1hdGNoZWQsIGhhbmRsZU9iaiwgaGFuZGxlclF1ZXVlLAoJCQlhcmdzID0gbmV3IEFycmF5KCBhcmd1bWVudHMubGVuZ3RoICksCgoJCQkvLyBNYWtlIGEgd3JpdGFibGUgalF1ZXJ5LkV2ZW50IGZyb20gdGhlIG5hdGl2ZSBldmVudCBvYmplY3QKCQkJZXZlbnQgPSBqUXVlcnkuZXZlbnQuZml4KCBuYXRpdmVFdmVudCApLAoKCQkJaGFuZGxlcnMgPSAoCgkJCQlkYXRhUHJpdi5nZXQoIHRoaXMsICJldmVudHMiICkgfHwgT2JqZWN0LmNyZWF0ZSggbnVsbCApCgkJCSlbIGV2ZW50LnR5cGUgXSB8fCBbXSwKCQkJc3BlY2lhbCA9IGpRdWVyeS5ldmVudC5zcGVjaWFsWyBldmVudC50eXBlIF0gfHwge307CgoJCS8vIFVzZSB0aGUgZml4LWVkIGpRdWVyeS5FdmVudCByYXRoZXIgdGhhbiB0aGUgKHJlYWQtb25seSkgbmF0aXZlIGV2ZW50CgkJYXJnc1sgMCBdID0gZXZlbnQ7CgoJCWZvciAoIGkgPSAxOyBpIDwgYXJndW1lbnRzLmxlbmd0aDsgaSsrICkgewoJCQlhcmdzWyBpIF0gPSBhcmd1bWVudHNbIGkgXTsKCQl9CgoJCWV2ZW50LmRlbGVnYXRlVGFyZ2V0ID0gdGhpczsKCgkJLy8gQ2FsbCB0aGUgcHJlRGlzcGF0Y2ggaG9vayBmb3IgdGhlIG1hcHBlZCB0eXBlLCBhbmQgbGV0IGl0IGJhaWwgaWYgZGVzaXJlZAoJCWlmICggc3BlY2lhbC5wcmVEaXNwYXRjaCAmJiBzcGVjaWFsLnByZURpc3BhdGNoLmNhbGwoIHRoaXMsIGV2ZW50ICkgPT09IGZhbHNlICkgewoJCQlyZXR1cm47CgkJfQoKCQkvLyBEZXRlcm1pbmUgaGFuZGxlcnMKCQloYW5kbGVyUXVldWUgPSBqUXVlcnkuZXZlbnQuaGFuZGxlcnMuY2FsbCggdGhpcywgZXZlbnQsIGhhbmRsZXJzICk7CgoJCS8vIFJ1biBkZWxlZ2F0ZXMgZmlyc3Q7IHRoZXkgbWF5IHdhbnQgdG8gc3RvcCBwcm9wYWdhdGlvbiBiZW5lYXRoIHVzCgkJaSA9IDA7CgkJd2hpbGUgKCAoIG1hdGNoZWQgPSBoYW5kbGVyUXVldWVbIGkrKyBdICkgJiYgIWV2ZW50LmlzUHJvcGFnYXRpb25TdG9wcGVkKCkgKSB7CgkJCWV2ZW50LmN1cnJlbnRUYXJnZXQgPSBtYXRjaGVkLmVsZW07CgoJCQlqID0gMDsKCQkJd2hpbGUgKCAoIGhhbmRsZU9iaiA9IG1hdGNoZWQuaGFuZGxlcnNbIGorKyBdICkgJiYKCQkJCSFldmVudC5pc0ltbWVkaWF0ZVByb3BhZ2F0aW9uU3RvcHBlZCgpICkgewoKCQkJCS8vIElmIHRoZSBldmVudCBpcyBuYW1lc3BhY2VkLCB0aGVuIGVhY2ggaGFuZGxlciBpcyBvbmx5IGludm9rZWQgaWYgaXQgaXMKCQkJCS8vIHNwZWNpYWxseSB1bml2ZXJzYWwgb3IgaXRzIG5hbWVzcGFjZXMgYXJlIGEgc3VwZXJzZXQgb2YgdGhlIGV2ZW50J3MuCgkJCQlpZiAoICFldmVudC5ybmFtZXNwYWNlIHx8IGhhbmRsZU9iai5uYW1lc3BhY2UgPT09IGZhbHNlIHx8CgkJCQkJZXZlbnQucm5hbWVzcGFjZS50ZXN0KCBoYW5kbGVPYmoubmFtZXNwYWNlICkgKSB7CgoJCQkJCWV2ZW50LmhhbmRsZU9iaiA9IGhhbmRsZU9iajsKCQkJCQlldmVudC5kYXRhID0gaGFuZGxlT2JqLmRhdGE7CgoJCQkJCXJldCA9ICggKCBqUXVlcnkuZXZlbnQuc3BlY2lhbFsgaGFuZGxlT2JqLm9yaWdUeXBlIF0gfHwge30gKS5oYW5kbGUgfHwKCQkJCQkJaGFuZGxlT2JqLmhhbmRsZXIgKS5hcHBseSggbWF0Y2hlZC5lbGVtLCBhcmdzICk7CgoJCQkJCWlmICggcmV0ICE9PSB1bmRlZmluZWQgKSB7CgkJCQkJCWlmICggKCBldmVudC5yZXN1bHQgPSByZXQgKSA9PT0gZmFsc2UgKSB7CgkJCQkJCQlldmVudC5wcmV2ZW50RGVmYXVsdCgpOwoJCQkJCQkJZXZlbnQuc3RvcFByb3BhZ2F0aW9uKCk7CgkJCQkJCX0KCQkJCQl9CgkJCQl9CgkJCX0KCQl9CgoJCS8vIENhbGwgdGhlIHBvc3REaXNwYXRjaCBob29rIGZvciB0aGUgbWFwcGVkIHR5cGUKCQlpZiAoIHNwZWNpYWwucG9zdERpc3BhdGNoICkgewoJCQlzcGVjaWFsLnBvc3REaXNwYXRjaC5jYWxsKCB0aGlzLCBldmVudCApOwoJCX0KCgkJcmV0dXJuIGV2ZW50LnJlc3VsdDsKCX0sCgoJaGFuZGxlcnM6IGZ1bmN0aW9uKCBldmVudCwgaGFuZGxlcnMgKSB7CgkJdmFyIGksIGhhbmRsZU9iaiwgc2VsLCBtYXRjaGVkSGFuZGxlcnMsIG1hdGNoZWRTZWxlY3RvcnMsCgkJCWhhbmRsZXJRdWV1ZSA9IFtdLAoJCQlkZWxlZ2F0ZUNvdW50ID0gaGFuZGxlcnMuZGVsZWdhdGVDb3VudCwKCQkJY3VyID0gZXZlbnQudGFyZ2V0OwoKCQkvLyBGaW5kIGRlbGVnYXRlIGhhbmRsZXJzCgkJaWYgKCBkZWxlZ2F0ZUNvdW50ICYmCgoJCQkvLyBTdXBwb3J0OiBJRSA8PTkKCQkJLy8gQmxhY2staG9sZSBTVkcgPHVzZT4gaW5zdGFuY2UgdHJlZXMgKHRyYWMtMTMxODApCgkJCWN1ci5ub2RlVHlwZSAmJgoKCQkJLy8gU3VwcG9ydDogRmlyZWZveCA8PTQyCgkJCS8vIFN1cHByZXNzIHNwZWMtdmlvbGF0aW5nIGNsaWNrcyBpbmRpY2F0aW5nIGEgbm9uLXByaW1hcnkgcG9pbnRlciBidXR0b24gKHRyYWMtMzg2MSkKCQkJLy8gaHR0cHM6Ly93d3cudzMub3JnL1RSL0RPTS1MZXZlbC0zLUV2ZW50cy8jZXZlbnQtdHlwZS1jbGljawoJCQkvLyBTdXBwb3J0OiBJRSAxMSBvbmx5CgkJCS8vIC4uLmJ1dCBub3QgYXJyb3cga2V5ICJjbGlja3MiIG9mIHJhZGlvIGlucHV0cywgd2hpY2ggY2FuIGhhdmUgYGJ1dHRvbmAgLTEgKGdoLTIzNDMpCgkJCSEoIGV2ZW50LnR5cGUgPT09ICJjbGljayIgJiYgZXZlbnQuYnV0dG9uID49IDEgKSApIHsKCgkJCWZvciAoIDsgY3VyICE9PSB0aGlzOyBjdXIgPSBjdXIucGFyZW50Tm9kZSB8fCB0aGlzICkgewoKCQkJCS8vIERvbid0IGNoZWNrIG5vbi1lbGVtZW50cyAodHJhYy0xMzIwOCkKCQkJCS8vIERvbid0IHByb2Nlc3MgY2xpY2tzIG9uIGRpc2FibGVkIGVsZW1lbnRzICh0cmFjLTY5MTEsIHRyYWMtODE2NSwgdHJhYy0xMTM4MiwgdHJhYy0xMTc2NCkKCQkJCWlmICggY3VyLm5vZGVUeXBlID09PSAxICYmICEoIGV2ZW50LnR5cGUgPT09ICJjbGljayIgJiYgY3VyLmRpc2FibGVkID09PSB0cnVlICkgKSB7CgkJCQkJbWF0Y2hlZEhhbmRsZXJzID0gW107CgkJCQkJbWF0Y2hlZFNlbGVjdG9ycyA9IHt9OwoJCQkJCWZvciAoIGkgPSAwOyBpIDwgZGVsZWdhdGVDb3VudDsgaSsrICkgewoJCQkJCQloYW5kbGVPYmogPSBoYW5kbGVyc1sgaSBdOwoKCQkJCQkJLy8gRG9uJ3QgY29uZmxpY3Qgd2l0aCBPYmplY3QucHJvdG90eXBlIHByb3BlcnRpZXMgKHRyYWMtMTMyMDMpCgkJCQkJCXNlbCA9IGhhbmRsZU9iai5zZWxlY3RvciArICIgIjsKCgkJCQkJCWlmICggbWF0Y2hlZFNlbGVjdG9yc1sgc2VsIF0gPT09IHVuZGVmaW5lZCApIHsKCQkJCQkJCW1hdGNoZWRTZWxlY3RvcnNbIHNlbCBdID0gaGFuZGxlT2JqLm5lZWRzQ29udGV4dCA/CgkJCQkJCQkJalF1ZXJ5KCBzZWwsIHRoaXMgKS5pbmRleCggY3VyICkgPiAtMSA6CgkJCQkJCQkJalF1ZXJ5LmZpbmQoIHNlbCwgdGhpcywgbnVsbCwgWyBjdXIgXSApLmxlbmd0aDsKCQkJCQkJfQoJCQkJCQlpZiAoIG1hdGNoZWRTZWxlY3RvcnNbIHNlbCBdICkgewoJCQkJCQkJbWF0Y2hlZEhhbmRsZXJzLnB1c2goIGhhbmRsZU9iaiApOwoJCQkJCQl9CgkJCQkJfQoJCQkJCWlmICggbWF0Y2hlZEhhbmRsZXJzLmxlbmd0aCApIHsKCQkJCQkJaGFuZGxlclF1ZXVlLnB1c2goIHsgZWxlbTogY3VyLCBoYW5kbGVyczogbWF0Y2hlZEhhbmRsZXJzIH0gKTsKCQkJCQl9CgkJCQl9CgkJCX0KCQl9CgoJCS8vIEFkZCB0aGUgcmVtYWluaW5nIChkaXJlY3RseS1ib3VuZCkgaGFuZGxlcnMKCQljdXIgPSB0aGlzOwoJCWlmICggZGVsZWdhdGVDb3VudCA8IGhhbmRsZXJzLmxlbmd0aCApIHsKCQkJaGFuZGxlclF1ZXVlLnB1c2goIHsgZWxlbTogY3VyLCBoYW5kbGVyczogaGFuZGxlcnMuc2xpY2UoIGRlbGVnYXRlQ291bnQgKSB9ICk7CgkJfQoKCQlyZXR1cm4gaGFuZGxlclF1ZXVlOwoJfSwKCglhZGRQcm9wOiBmdW5jdGlvbiggbmFtZSwgaG9vayApIHsKCQlPYmplY3QuZGVmaW5lUHJvcGVydHkoIGpRdWVyeS5FdmVudC5wcm90b3R5cGUsIG5hbWUsIHsKCQkJZW51bWVyYWJsZTogdHJ1ZSwKCQkJY29uZmlndXJhYmxlOiB0cnVlLAoKCQkJZ2V0OiBpc0Z1bmN0aW9uKCBob29rICkgPwoJCQkJZnVuY3Rpb24oKSB7CgkJCQkJaWYgKCB0aGlzLm9yaWdpbmFsRXZlbnQgKSB7CgkJCQkJCXJldHVybiBob29rKCB0aGlzLm9yaWdpbmFsRXZlbnQgKTsKCQkJCQl9CgkJCQl9IDoKCQkJCWZ1bmN0aW9uKCkgewoJCQkJCWlmICggdGhpcy5vcmlnaW5hbEV2ZW50ICkgewoJCQkJCQlyZXR1cm4gdGhpcy5vcmlnaW5hbEV2ZW50WyBuYW1lIF07CgkJCQkJfQoJCQkJfSwKCgkJCXNldDogZnVuY3Rpb24oIHZhbHVlICkgewoJCQkJT2JqZWN0LmRlZmluZVByb3BlcnR5KCB0aGlzLCBuYW1lLCB7CgkJCQkJZW51bWVyYWJsZTogdHJ1ZSwKCQkJCQljb25maWd1cmFibGU6IHRydWUsCgkJCQkJd3JpdGFibGU6IHRydWUsCgkJCQkJdmFsdWU6IHZhbHVlCgkJCQl9ICk7CgkJCX0KCQl9ICk7Cgl9LAoKCWZpeDogZnVuY3Rpb24oIG9yaWdpbmFsRXZlbnQgKSB7CgkJcmV0dXJuIG9yaWdpbmFsRXZlbnRbIGpRdWVyeS5leHBhbmRvIF0gPwoJCQlvcmlnaW5hbEV2ZW50IDoKCQkJbmV3IGpRdWVyeS5FdmVudCggb3JpZ2luYWxFdmVudCApOwoJfSwKCglzcGVjaWFsOiB7CgkJbG9hZDogewoKCQkJLy8gUHJldmVudCB0cmlnZ2VyZWQgaW1hZ2UubG9hZCBldmVudHMgZnJvbSBidWJibGluZyB0byB3aW5kb3cubG9hZAoJCQlub0J1YmJsZTogdHJ1ZQoJCX0sCgkJY2xpY2s6IHsKCgkJCS8vIFV0aWxpemUgbmF0aXZlIGV2ZW50IHRvIGVuc3VyZSBjb3JyZWN0IHN0YXRlIGZvciBjaGVja2FibGUgaW5wdXRzCgkJCXNldHVwOiBmdW5jdGlvbiggZGF0YSApIHsKCgkJCQkvLyBGb3IgbXV0dWFsIGNvbXByZXNzaWJpbGl0eSB3aXRoIF9kZWZhdWx0LCByZXBsYWNlIGB0aGlzYCBhY2Nlc3Mgd2l0aCBhIGxvY2FsIHZhci4KCQkJCS8vIGB8fCBkYXRhYCBpcyBkZWFkIGNvZGUgbWVhbnQgb25seSB0byBwcmVzZXJ2ZSB0aGUgdmFyaWFibGUgdGhyb3VnaCBtaW5pZmljYXRpb24uCgkJCQl2YXIgZWwgPSB0aGlzIHx8IGRhdGE7CgoJCQkJLy8gQ2xhaW0gdGhlIGZpcnN0IGhhbmRsZXIKCQkJCWlmICggcmNoZWNrYWJsZVR5cGUudGVzdCggZWwudHlwZSApICYmCgkJCQkJZWwuY2xpY2sgJiYgbm9kZU5hbWUoIGVsLCAiaW5wdXQiICkgKSB7CgoJCQkJCS8vIGRhdGFQcml2LnNldCggZWwsICJjbGljayIsIC4uLiApCgkJCQkJbGV2ZXJhZ2VOYXRpdmUoIGVsLCAiY2xpY2siLCByZXR1cm5UcnVlICk7CgkJCQl9CgoJCQkJLy8gUmV0dXJuIGZhbHNlIHRvIGFsbG93IG5vcm1hbCBwcm9jZXNzaW5nIGluIHRoZSBjYWxsZXIKCQkJCXJldHVybiBmYWxzZTsKCQkJfSwKCQkJdHJpZ2dlcjogZnVuY3Rpb24oIGRhdGEgKSB7CgoJCQkJLy8gRm9yIG11dHVhbCBjb21wcmVzc2liaWxpdHkgd2l0aCBfZGVmYXVsdCwgcmVwbGFjZSBgdGhpc2AgYWNjZXNzIHdpdGggYSBsb2NhbCB2YXIuCgkJCQkvLyBgfHwgZGF0YWAgaXMgZGVhZCBjb2RlIG1lYW50IG9ubHkgdG8gcHJlc2VydmUgdGhlIHZhcmlhYmxlIHRocm91Z2ggbWluaWZpY2F0aW9uLgoJCQkJdmFyIGVsID0gdGhpcyB8fCBkYXRhOwoKCQkJCS8vIEZvcmNlIHNldHVwIGJlZm9yZSB0cmlnZ2VyaW5nIGEgY2xpY2sKCQkJCWlmICggcmNoZWNrYWJsZVR5cGUudGVzdCggZWwudHlwZSApICYmCgkJCQkJZWwuY2xpY2sgJiYgbm9kZU5hbWUoIGVsLCAiaW5wdXQiICkgKSB7CgoJCQkJCWxldmVyYWdlTmF0aXZlKCBlbCwgImNsaWNrIiApOwoJCQkJfQoKCQkJCS8vIFJldHVybiBub24tZmFsc2UgdG8gYWxsb3cgbm9ybWFsIGV2ZW50LXBhdGggcHJvcGFnYXRpb24KCQkJCXJldHVybiB0cnVlOwoJCQl9LAoKCQkJLy8gRm9yIGNyb3NzLWJyb3dzZXIgY29uc2lzdGVuY3ksIHN1cHByZXNzIG5hdGl2ZSAuY2xpY2soKSBvbiBsaW5rcwoJCQkvLyBBbHNvIHByZXZlbnQgaXQgaWYgd2UncmUgY3VycmVudGx5IGluc2lkZSBhIGxldmVyYWdlZCBuYXRpdmUtZXZlbnQgc3RhY2sKCQkJX2RlZmF1bHQ6IGZ1bmN0aW9uKCBldmVudCApIHsKCQkJCXZhciB0YXJnZXQgPSBldmVudC50YXJnZXQ7CgkJCQlyZXR1cm4gcmNoZWNrYWJsZVR5cGUudGVzdCggdGFyZ2V0LnR5cGUgKSAmJgoJCQkJCXRhcmdldC5jbGljayAmJiBub2RlTmFtZSggdGFyZ2V0LCAiaW5wdXQiICkgJiYKCQkJCQlkYXRhUHJpdi5nZXQoIHRhcmdldCwgImNsaWNrIiApIHx8CgkJCQkJbm9kZU5hbWUoIHRhcmdldCwgImEiICk7CgkJCX0KCQl9LAoKCQliZWZvcmV1bmxvYWQ6IHsKCQkJcG9zdERpc3BhdGNoOiBmdW5jdGlvbiggZXZlbnQgKSB7CgoJCQkJLy8gU3VwcG9ydDogRmlyZWZveCAyMCsKCQkJCS8vIEZpcmVmb3ggZG9lc24ndCBhbGVydCBpZiB0aGUgcmV0dXJuVmFsdWUgZmllbGQgaXMgbm90IHNldC4KCQkJCWlmICggZXZlbnQucmVzdWx0ICE9PSB1bmRlZmluZWQgJiYgZXZlbnQub3JpZ2luYWxFdmVudCApIHsKCQkJCQlldmVudC5vcmlnaW5hbEV2ZW50LnJldHVyblZhbHVlID0gZXZlbnQucmVzdWx0OwoJCQkJfQoJCQl9CgkJfQoJfQp9OwoKLy8gRW5zdXJlIHRoZSBwcmVzZW5jZSBvZiBhbiBldmVudCBsaXN0ZW5lciB0aGF0IGhhbmRsZXMgbWFudWFsbHktdHJpZ2dlcmVkCi8vIHN5bnRoZXRpYyBldmVudHMgYnkgaW50ZXJydXB0aW5nIHByb2dyZXNzIHVudGlsIHJlaW52b2tlZCBpbiByZXNwb25zZSB0bwovLyAqbmF0aXZlKiBldmVudHMgdGhhdCBpdCBmaXJlcyBkaXJlY3RseSwgZW5zdXJpbmcgdGhhdCBzdGF0ZSBjaGFuZ2VzIGhhdmUKLy8gYWxyZWFkeSBvY2N1cnJlZCBiZWZvcmUgb3RoZXIgbGlzdGVuZXJzIGFyZSBpbnZva2VkLgpmdW5jdGlvbiBsZXZlcmFnZU5hdGl2ZSggZWwsIHR5cGUsIGV4cGVjdFN5bmMgKSB7CgoJLy8gTWlzc2luZyBleHBlY3RTeW5jIGluZGljYXRlcyBhIHRyaWdnZXIgY2FsbCwgd2hpY2ggbXVzdCBmb3JjZSBzZXR1cCB0aHJvdWdoIGpRdWVyeS5ldmVudC5hZGQKCWlmICggIWV4cGVjdFN5bmMgKSB7CgkJaWYgKCBkYXRhUHJpdi5nZXQoIGVsLCB0eXBlICkgPT09IHVuZGVmaW5lZCApIHsKCQkJalF1ZXJ5LmV2ZW50LmFkZCggZWwsIHR5cGUsIHJldHVyblRydWUgKTsKCQl9CgkJcmV0dXJuOwoJfQoKCS8vIFJlZ2lzdGVyIHRoZSBjb250cm9sbGVyIGFzIGEgc3BlY2lhbCB1bml2ZXJzYWwgaGFuZGxlciBmb3IgYWxsIGV2ZW50IG5hbWVzcGFjZXMKCWRhdGFQcml2LnNldCggZWwsIHR5cGUsIGZhbHNlICk7CglqUXVlcnkuZXZlbnQuYWRkKCBlbCwgdHlwZSwgewoJCW5hbWVzcGFjZTogZmFsc2UsCgkJaGFuZGxlcjogZnVuY3Rpb24oIGV2ZW50ICkgewoJCQl2YXIgbm90QXN5bmMsIHJlc3VsdCwKCQkJCXNhdmVkID0gZGF0YVByaXYuZ2V0KCB0aGlzLCB0eXBlICk7CgoJCQlpZiAoICggZXZlbnQuaXNUcmlnZ2VyICYgMSApICYmIHRoaXNbIHR5cGUgXSApIHsKCgkJCQkvLyBJbnRlcnJ1cHQgcHJvY2Vzc2luZyBvZiB0aGUgb3V0ZXIgc3ludGhldGljIC50cmlnZ2VyKCllZCBldmVudAoJCQkJLy8gU2F2ZWQgZGF0YSBzaG91bGQgYmUgZmFsc2UgaW4gc3VjaCBjYXNlcywgYnV0IG1pZ2h0IGJlIGEgbGVmdG92ZXIgY2FwdHVyZSBvYmplY3QKCQkJCS8vIGZyb20gYW4gYXN5bmMgbmF0aXZlIGhhbmRsZXIgKGdoLTQzNTApCgkJCQlpZiAoICFzYXZlZC5sZW5ndGggKSB7CgoJCQkJCS8vIFN0b3JlIGFyZ3VtZW50cyBmb3IgdXNlIHdoZW4gaGFuZGxpbmcgdGhlIGlubmVyIG5hdGl2ZSBldmVudAoJCQkJCS8vIFRoZXJlIHdpbGwgYWx3YXlzIGJlIGF0IGxlYXN0IG9uZSBhcmd1bWVudCAoYW4gZXZlbnQgb2JqZWN0KSwgc28gdGhpcyBhcnJheQoJCQkJCS8vIHdpbGwgbm90IGJlIGNvbmZ1c2VkIHdpdGggYSBsZWZ0b3ZlciBjYXB0dXJlIG9iamVjdC4KCQkJCQlzYXZlZCA9IHNsaWNlLmNhbGwoIGFyZ3VtZW50cyApOwoJCQkJCWRhdGFQcml2LnNldCggdGhpcywgdHlwZSwgc2F2ZWQgKTsKCgkJCQkJLy8gVHJpZ2dlciB0aGUgbmF0aXZlIGV2ZW50IGFuZCBjYXB0dXJlIGl0cyByZXN1bHQKCQkJCQkvLyBTdXBwb3J0OiBJRSA8PTkgLSAxMSsKCQkJCQkvLyBmb2N1cygpIGFuZCBibHVyKCkgYXJlIGFzeW5jaHJvbm91cwoJCQkJCW5vdEFzeW5jID0gZXhwZWN0U3luYyggdGhpcywgdHlwZSApOwoJCQkJCXRoaXNbIHR5cGUgXSgpOwoJCQkJCXJlc3VsdCA9IGRhdGFQcml2LmdldCggdGhpcywgdHlwZSApOwoJCQkJCWlmICggc2F2ZWQgIT09IHJlc3VsdCB8fCBub3RBc3luYyApIHsKCQkJCQkJZGF0YVByaXYuc2V0KCB0aGlzLCB0eXBlLCBmYWxzZSApOwoJCQkJCX0gZWxzZSB7CgkJCQkJCXJlc3VsdCA9IHt9OwoJCQkJCX0KCQkJCQlpZiAoIHNhdmVkICE9PSByZXN1bHQgKSB7CgoJCQkJCQkvLyBDYW5jZWwgdGhlIG91dGVyIHN5bnRoZXRpYyBldmVudAoJCQkJCQlldmVudC5zdG9wSW1tZWRpYXRlUHJvcGFnYXRpb24oKTsKCQkJCQkJZXZlbnQucHJldmVudERlZmF1bHQoKTsKCgkJCQkJCS8vIFN1cHBvcnQ6IENocm9tZSA4NisKCQkJCQkJLy8gSW4gQ2hyb21lLCBpZiBhbiBlbGVtZW50IGhhdmluZyBhIGZvY3Vzb3V0IGhhbmRsZXIgaXMgYmx1cnJlZCBieQoJCQkJCQkvLyBjbGlja2luZyBvdXRzaWRlIG9mIGl0LCBpdCBpbnZva2VzIHRoZSBoYW5kbGVyIHN5bmNocm9ub3VzbHkuIElmCgkJCQkJCS8vIHRoYXQgaGFuZGxlciBjYWxscyBgLnJlbW92ZSgpYCBvbiB0aGUgZWxlbWVudCwgdGhlIGRhdGEgaXMgY2xlYXJlZCwKCQkJCQkJLy8gbGVhdmluZyBgcmVzdWx0YCB1bmRlZmluZWQuIFdlIG5lZWQgdG8gZ3VhcmQgYWdhaW5zdCB0aGlzLgoJCQkJCQlyZXR1cm4gcmVzdWx0ICYmIHJlc3VsdC52YWx1ZTsKCQkJCQl9CgoJCQkJLy8gSWYgdGhpcyBpcyBhbiBpbm5lciBzeW50aGV0aWMgZXZlbnQgZm9yIGFuIGV2ZW50IHdpdGggYSBidWJibGluZyBzdXJyb2dhdGUKCQkJCS8vIChmb2N1cyBvciBibHVyKSwgYXNzdW1lIHRoYXQgdGhlIHN1cnJvZ2F0ZSBhbHJlYWR5IHByb3BhZ2F0ZWQgZnJvbSB0cmlnZ2VyaW5nIHRoZQoJCQkJLy8gbmF0aXZlIGV2ZW50IGFuZCBwcmV2ZW50IHRoYXQgZnJvbSBoYXBwZW5pbmcgYWdhaW4gaGVyZS4KCQkJCS8vIFRoaXMgdGVjaG5pY2FsbHkgZ2V0cyB0aGUgb3JkZXJpbmcgd3Jvbmcgdy5yLnQuIHRvIGAudHJpZ2dlcigpYCAoaW4gd2hpY2ggdGhlCgkJCQkvLyBidWJibGluZyBzdXJyb2dhdGUgcHJvcGFnYXRlcyAqYWZ0ZXIqIHRoZSBub24tYnViYmxpbmcgYmFzZSksIGJ1dCB0aGF0IHNlZW1zCgkJCQkvLyBsZXNzIGJhZCB0aGFuIGR1cGxpY2F0aW9uLgoJCQkJfSBlbHNlIGlmICggKCBqUXVlcnkuZXZlbnQuc3BlY2lhbFsgdHlwZSBdIHx8IHt9ICkuZGVsZWdhdGVUeXBlICkgewoJCQkJCWV2ZW50LnN0b3BQcm9wYWdhdGlvbigpOwoJCQkJfQoKCQkJLy8gSWYgdGhpcyBpcyBhIG5hdGl2ZSBldmVudCB0cmlnZ2VyZWQgYWJvdmUsIGV2ZXJ5dGhpbmcgaXMgbm93IGluIG9yZGVyCgkJCS8vIEZpcmUgYW4gaW5uZXIgc3ludGhldGljIGV2ZW50IHdpdGggdGhlIG9yaWdpbmFsIGFyZ3VtZW50cwoJCQl9IGVsc2UgaWYgKCBzYXZlZC5sZW5ndGggKSB7CgoJCQkJLy8gLi4uYW5kIGNhcHR1cmUgdGhlIHJlc3VsdAoJCQkJZGF0YVByaXYuc2V0KCB0aGlzLCB0eXBlLCB7CgkJCQkJdmFsdWU6IGpRdWVyeS5ldmVudC50cmlnZ2VyKAoKCQkJCQkJLy8gU3VwcG9ydDogSUUgPD05IC0gMTErCgkJCQkJCS8vIEV4dGVuZCB3aXRoIHRoZSBwcm90b3R5cGUgdG8gcmVzZXQgdGhlIGFib3ZlIHN0b3BJbW1lZGlhdGVQcm9wYWdhdGlvbigpCgkJCQkJCWpRdWVyeS5leHRlbmQoIHNhdmVkWyAwIF0sIGpRdWVyeS5FdmVudC5wcm90b3R5cGUgKSwKCQkJCQkJc2F2ZWQuc2xpY2UoIDEgKSwKCQkJCQkJdGhpcwoJCQkJCSkKCQkJCX0gKTsKCgkJCQkvLyBBYm9ydCBoYW5kbGluZyBvZiB0aGUgbmF0aXZlIGV2ZW50CgkJCQlldmVudC5zdG9wSW1tZWRpYXRlUHJvcGFnYXRpb24oKTsKCQkJfQoJCX0KCX0gKTsKfQoKalF1ZXJ5LnJlbW92ZUV2ZW50ID0gZnVuY3Rpb24oIGVsZW0sIHR5cGUsIGhhbmRsZSApIHsKCgkvLyBUaGlzICJpZiIgaXMgbmVlZGVkIGZvciBwbGFpbiBvYmplY3RzCglpZiAoIGVsZW0ucmVtb3ZlRXZlbnRMaXN0ZW5lciApIHsKCQllbGVtLnJlbW92ZUV2ZW50TGlzdGVuZXIoIHR5cGUsIGhhbmRsZSApOwoJfQp9OwoKalF1ZXJ5LkV2ZW50ID0gZnVuY3Rpb24oIHNyYywgcHJvcHMgKSB7CgoJLy8gQWxsb3cgaW5zdGFudGlhdGlvbiB3aXRob3V0IHRoZSAnbmV3JyBrZXl3b3JkCglpZiAoICEoIHRoaXMgaW5zdGFuY2VvZiBqUXVlcnkuRXZlbnQgKSApIHsKCQlyZXR1cm4gbmV3IGpRdWVyeS5FdmVudCggc3JjLCBwcm9wcyApOwoJfQoKCS8vIEV2ZW50IG9iamVjdAoJaWYgKCBzcmMgJiYgc3JjLnR5cGUgKSB7CgkJdGhpcy5vcmlnaW5hbEV2ZW50ID0gc3JjOwoJCXRoaXMudHlwZSA9IHNyYy50eXBlOwoKCQkvLyBFdmVudHMgYnViYmxpbmcgdXAgdGhlIGRvY3VtZW50IG1heSBoYXZlIGJlZW4gbWFya2VkIGFzIHByZXZlbnRlZAoJCS8vIGJ5IGEgaGFuZGxlciBsb3dlciBkb3duIHRoZSB0cmVlOyByZWZsZWN0IHRoZSBjb3JyZWN0IHZhbHVlLgoJCXRoaXMuaXNEZWZhdWx0UHJldmVudGVkID0gc3JjLmRlZmF1bHRQcmV2ZW50ZWQgfHwKCQkJCXNyYy5kZWZhdWx0UHJldmVudGVkID09PSB1bmRlZmluZWQgJiYKCgkJCQkvLyBTdXBwb3J0OiBBbmRyb2lkIDw9Mi4zIG9ubHkKCQkJCXNyYy5yZXR1cm5WYWx1ZSA9PT0gZmFsc2UgPwoJCQlyZXR1cm5UcnVlIDoKCQkJcmV0dXJuRmFsc2U7CgoJCS8vIENyZWF0ZSB0YXJnZXQgcHJvcGVydGllcwoJCS8vIFN1cHBvcnQ6IFNhZmFyaSA8PTYgLSA3IG9ubHkKCQkvLyBUYXJnZXQgc2hvdWxkIG5vdCBiZSBhIHRleHQgbm9kZSAodHJhYy01MDQsIHRyYWMtMTMxNDMpCgkJdGhpcy50YXJnZXQgPSAoIHNyYy50YXJnZXQgJiYgc3JjLnRhcmdldC5ub2RlVHlwZSA9PT0gMyApID8KCQkJc3JjLnRhcmdldC5wYXJlbnROb2RlIDoKCQkJc3JjLnRhcmdldDsKCgkJdGhpcy5jdXJyZW50VGFyZ2V0ID0gc3JjLmN1cnJlbnRUYXJnZXQ7CgkJdGhpcy5yZWxhdGVkVGFyZ2V0ID0gc3JjLnJlbGF0ZWRUYXJnZXQ7CgoJLy8gRXZlbnQgdHlwZQoJfSBlbHNlIHsKCQl0aGlzLnR5cGUgPSBzcmM7Cgl9CgoJLy8gUHV0IGV4cGxpY2l0bHkgcHJvdmlkZWQgcHJvcGVydGllcyBvbnRvIHRoZSBldmVudCBvYmplY3QKCWlmICggcHJvcHMgKSB7CgkJalF1ZXJ5LmV4dGVuZCggdGhpcywgcHJvcHMgKTsKCX0KCgkvLyBDcmVhdGUgYSB0aW1lc3RhbXAgaWYgaW5jb21pbmcgZXZlbnQgZG9lc24ndCBoYXZlIG9uZQoJdGhpcy50aW1lU3RhbXAgPSBzcmMgJiYgc3JjLnRpbWVTdGFtcCB8fCBEYXRlLm5vdygpOwoKCS8vIE1hcmsgaXQgYXMgZml4ZWQKCXRoaXNbIGpRdWVyeS5leHBhbmRvIF0gPSB0cnVlOwp9OwoKLy8galF1ZXJ5LkV2ZW50IGlzIGJhc2VkIG9uIERPTTMgRXZlbnRzIGFzIHNwZWNpZmllZCBieSB0aGUgRUNNQVNjcmlwdCBMYW5ndWFnZSBCaW5kaW5nCi8vIGh0dHBzOi8vd3d3LnczLm9yZy9UUi8yMDAzL1dELURPTS1MZXZlbC0zLUV2ZW50cy0yMDAzMDMzMS9lY21hLXNjcmlwdC1iaW5kaW5nLmh0bWwKalF1ZXJ5LkV2ZW50LnByb3RvdHlwZSA9IHsKCWNvbnN0cnVjdG9yOiBqUXVlcnkuRXZlbnQsCglpc0RlZmF1bHRQcmV2ZW50ZWQ6IHJldHVybkZhbHNlLAoJaXNQcm9wYWdhdGlvblN0b3BwZWQ6IHJldHVybkZhbHNlLAoJaXNJbW1lZGlhdGVQcm9wYWdhdGlvblN0b3BwZWQ6IHJldHVybkZhbHNlLAoJaXNTaW11bGF0ZWQ6IGZhbHNlLAoKCXByZXZlbnREZWZhdWx0OiBmdW5jdGlvbigpIHsKCQl2YXIgZSA9IHRoaXMub3JpZ2luYWxFdmVudDsKCgkJdGhpcy5pc0RlZmF1bHRQcmV2ZW50ZWQgPSByZXR1cm5UcnVlOwoKCQlpZiAoIGUgJiYgIXRoaXMuaXNTaW11bGF0ZWQgKSB7CgkJCWUucHJldmVudERlZmF1bHQoKTsKCQl9Cgl9LAoJc3RvcFByb3BhZ2F0aW9uOiBmdW5jdGlvbigpIHsKCQl2YXIgZSA9IHRoaXMub3JpZ2luYWxFdmVudDsKCgkJdGhpcy5pc1Byb3BhZ2F0aW9uU3RvcHBlZCA9IHJldHVyblRydWU7CgoJCWlmICggZSAmJiAhdGhpcy5pc1NpbXVsYXRlZCApIHsKCQkJZS5zdG9wUHJvcGFnYXRpb24oKTsKCQl9Cgl9LAoJc3RvcEltbWVkaWF0ZVByb3BhZ2F0aW9uOiBmdW5jdGlvbigpIHsKCQl2YXIgZSA9IHRoaXMub3JpZ2luYWxFdmVudDsKCgkJdGhpcy5pc0ltbWVkaWF0ZVByb3BhZ2F0aW9uU3RvcHBlZCA9IHJldHVyblRydWU7CgoJCWlmICggZSAmJiAhdGhpcy5pc1NpbXVsYXRlZCApIHsKCQkJZS5zdG9wSW1tZWRpYXRlUHJvcGFnYXRpb24oKTsKCQl9CgoJCXRoaXMuc3RvcFByb3BhZ2F0aW9uKCk7Cgl9Cn07CgovLyBJbmNsdWRlcyBhbGwgY29tbW9uIGV2ZW50IHByb3BzIGluY2x1ZGluZyBLZXlFdmVudCBhbmQgTW91c2VFdmVudCBzcGVjaWZpYyBwcm9wcwpqUXVlcnkuZWFjaCggewoJYWx0S2V5OiB0cnVlLAoJYnViYmxlczogdHJ1ZSwKCWNhbmNlbGFibGU6IHRydWUsCgljaGFuZ2VkVG91Y2hlczogdHJ1ZSwKCWN0cmxLZXk6IHRydWUsCglkZXRhaWw6IHRydWUsCglldmVudFBoYXNlOiB0cnVlLAoJbWV0YUtleTogdHJ1ZSwKCXBhZ2VYOiB0cnVlLAoJcGFnZVk6IHRydWUsCglzaGlmdEtleTogdHJ1ZSwKCXZpZXc6IHRydWUsCgkiY2hhciI6IHRydWUsCgljb2RlOiB0cnVlLAoJY2hhckNvZGU6IHRydWUsCglrZXk6IHRydWUsCglrZXlDb2RlOiB0cnVlLAoJYnV0dG9uOiB0cnVlLAoJYnV0dG9uczogdHJ1ZSwKCWNsaWVudFg6IHRydWUsCgljbGllbnRZOiB0cnVlLAoJb2Zmc2V0WDogdHJ1ZSwKCW9mZnNldFk6IHRydWUsCglwb2ludGVySWQ6IHRydWUsCglwb2ludGVyVHlwZTogdHJ1ZSwKCXNjcmVlblg6IHRydWUsCglzY3JlZW5ZOiB0cnVlLAoJdGFyZ2V0VG91Y2hlczogdHJ1ZSwKCXRvRWxlbWVudDogdHJ1ZSwKCXRvdWNoZXM6IHRydWUsCgl3aGljaDogdHJ1ZQp9LCBqUXVlcnkuZXZlbnQuYWRkUHJvcCApOwoKalF1ZXJ5LmVhY2goIHsgZm9jdXM6ICJmb2N1c2luIiwgYmx1cjogImZvY3Vzb3V0IiB9LCBmdW5jdGlvbiggdHlwZSwgZGVsZWdhdGVUeXBlICkgewoJalF1ZXJ5LmV2ZW50LnNwZWNpYWxbIHR5cGUgXSA9IHsKCgkJLy8gVXRpbGl6ZSBuYXRpdmUgZXZlbnQgaWYgcG9zc2libGUgc28gYmx1ci9mb2N1cyBzZXF1ZW5jZSBpcyBjb3JyZWN0CgkJc2V0dXA6IGZ1bmN0aW9uKCkgewoKCQkJLy8gQ2xhaW0gdGhlIGZpcnN0IGhhbmRsZXIKCQkJLy8gZGF0YVByaXYuc2V0KCB0aGlzLCAiZm9jdXMiLCAuLi4gKQoJCQkvLyBkYXRhUHJpdi5zZXQoIHRoaXMsICJibHVyIiwgLi4uICkKCQkJbGV2ZXJhZ2VOYXRpdmUoIHRoaXMsIHR5cGUsIGV4cGVjdFN5bmMgKTsKCgkJCS8vIFJldHVybiBmYWxzZSB0byBhbGxvdyBub3JtYWwgcHJvY2Vzc2luZyBpbiB0aGUgY2FsbGVyCgkJCXJldHVybiBmYWxzZTsKCQl9LAoJCXRyaWdnZXI6IGZ1bmN0aW9uKCkgewoKCQkJLy8gRm9yY2Ugc2V0dXAgYmVmb3JlIHRyaWdnZXIKCQkJbGV2ZXJhZ2VOYXRpdmUoIHRoaXMsIHR5cGUgKTsKCgkJCS8vIFJldHVybiBub24tZmFsc2UgdG8gYWxsb3cgbm9ybWFsIGV2ZW50LXBhdGggcHJvcGFnYXRpb24KCQkJcmV0dXJuIHRydWU7CgkJfSwKCgkJLy8gU3VwcHJlc3MgbmF0aXZlIGZvY3VzIG9yIGJsdXIgaWYgd2UncmUgY3VycmVudGx5IGluc2lkZQoJCS8vIGEgbGV2ZXJhZ2VkIG5hdGl2ZS1ldmVudCBzdGFjawoJCV9kZWZhdWx0OiBmdW5jdGlvbiggZXZlbnQgKSB7CgkJCXJldHVybiBkYXRhUHJpdi5nZXQoIGV2ZW50LnRhcmdldCwgdHlwZSApOwoJCX0sCgoJCWRlbGVnYXRlVHlwZTogZGVsZWdhdGVUeXBlCgl9Owp9ICk7CgovLyBDcmVhdGUgbW91c2VlbnRlci9sZWF2ZSBldmVudHMgdXNpbmcgbW91c2VvdmVyL291dCBhbmQgZXZlbnQtdGltZSBjaGVja3MKLy8gc28gdGhhdCBldmVudCBkZWxlZ2F0aW9uIHdvcmtzIGluIGpRdWVyeS4KLy8gRG8gdGhlIHNhbWUgZm9yIHBvaW50ZXJlbnRlci9wb2ludGVybGVhdmUgYW5kIHBvaW50ZXJvdmVyL3BvaW50ZXJvdXQKLy8KLy8gU3VwcG9ydDogU2FmYXJpIDcgb25seQovLyBTYWZhcmkgc2VuZHMgbW91c2VlbnRlciB0b28gb2Z0ZW47IHNlZToKLy8gaHR0cHM6Ly9idWdzLmNocm9taXVtLm9yZy9wL2Nocm9taXVtL2lzc3Vlcy9kZXRhaWw/aWQ9NDcwMjU4Ci8vIGZvciB0aGUgZGVzY3JpcHRpb24gb2YgdGhlIGJ1ZyAoaXQgZXhpc3RlZCBpbiBvbGRlciBDaHJvbWUgdmVyc2lvbnMgYXMgd2VsbCkuCmpRdWVyeS5lYWNoKCB7Cgltb3VzZWVudGVyOiAibW91c2VvdmVyIiwKCW1vdXNlbGVhdmU6ICJtb3VzZW91dCIsCglwb2ludGVyZW50ZXI6ICJwb2ludGVyb3ZlciIsCglwb2ludGVybGVhdmU6ICJwb2ludGVyb3V0Igp9LCBmdW5jdGlvbiggb3JpZywgZml4ICkgewoJalF1ZXJ5LmV2ZW50LnNwZWNpYWxbIG9yaWcgXSA9IHsKCQlkZWxlZ2F0ZVR5cGU6IGZpeCwKCQliaW5kVHlwZTogZml4LAoKCQloYW5kbGU6IGZ1bmN0aW9uKCBldmVudCApIHsKCQkJdmFyIHJldCwKCQkJCXRhcmdldCA9IHRoaXMsCgkJCQlyZWxhdGVkID0gZXZlbnQucmVsYXRlZFRhcmdldCwKCQkJCWhhbmRsZU9iaiA9IGV2ZW50LmhhbmRsZU9iajsKCgkJCS8vIEZvciBtb3VzZWVudGVyL2xlYXZlIGNhbGwgdGhlIGhhbmRsZXIgaWYgcmVsYXRlZCBpcyBvdXRzaWRlIHRoZSB0YXJnZXQuCgkJCS8vIE5COiBObyByZWxhdGVkVGFyZ2V0IGlmIHRoZSBtb3VzZSBsZWZ0L2VudGVyZWQgdGhlIGJyb3dzZXIgd2luZG93CgkJCWlmICggIXJlbGF0ZWQgfHwgKCByZWxhdGVkICE9PSB0YXJnZXQgJiYgIWpRdWVyeS5jb250YWlucyggdGFyZ2V0LCByZWxhdGVkICkgKSApIHsKCQkJCWV2ZW50LnR5cGUgPSBoYW5kbGVPYmoub3JpZ1R5cGU7CgkJCQlyZXQgPSBoYW5kbGVPYmouaGFuZGxlci5hcHBseSggdGhpcywgYXJndW1lbnRzICk7CgkJCQlldmVudC50eXBlID0gZml4OwoJCQl9CgkJCXJldHVybiByZXQ7CgkJfQoJfTsKfSApOwoKalF1ZXJ5LmZuLmV4dGVuZCggewoKCW9uOiBmdW5jdGlvbiggdHlwZXMsIHNlbGVjdG9yLCBkYXRhLCBmbiApIHsKCQlyZXR1cm4gb24oIHRoaXMsIHR5cGVzLCBzZWxlY3RvciwgZGF0YSwgZm4gKTsKCX0sCglvbmU6IGZ1bmN0aW9uKCB0eXBlcywgc2VsZWN0b3IsIGRhdGEsIGZuICkgewoJCXJldHVybiBvbiggdGhpcywgdHlwZXMsIHNlbGVjdG9yLCBkYXRhLCBmbiwgMSApOwoJfSwKCW9mZjogZnVuY3Rpb24oIHR5cGVzLCBzZWxlY3RvciwgZm4gKSB7CgkJdmFyIGhhbmRsZU9iaiwgdHlwZTsKCQlpZiAoIHR5cGVzICYmIHR5cGVzLnByZXZlbnREZWZhdWx0ICYmIHR5cGVzLmhhbmRsZU9iaiApIHsKCgkJCS8vICggZXZlbnQgKSAgZGlzcGF0Y2hlZCBqUXVlcnkuRXZlbnQKCQkJaGFuZGxlT2JqID0gdHlwZXMuaGFuZGxlT2JqOwoJCQlqUXVlcnkoIHR5cGVzLmRlbGVnYXRlVGFyZ2V0ICkub2ZmKAoJCQkJaGFuZGxlT2JqLm5hbWVzcGFjZSA/CgkJCQkJaGFuZGxlT2JqLm9yaWdUeXBlICsgIi4iICsgaGFuZGxlT2JqLm5hbWVzcGFjZSA6CgkJCQkJaGFuZGxlT2JqLm9yaWdUeXBlLAoJCQkJaGFuZGxlT2JqLnNlbGVjdG9yLAoJCQkJaGFuZGxlT2JqLmhhbmRsZXIKCQkJKTsKCQkJcmV0dXJuIHRoaXM7CgkJfQoJCWlmICggdHlwZW9mIHR5cGVzID09PSAib2JqZWN0IiApIHsKCgkJCS8vICggdHlwZXMtb2JqZWN0IFssIHNlbGVjdG9yXSApCgkJCWZvciAoIHR5cGUgaW4gdHlwZXMgKSB7CgkJCQl0aGlzLm9mZiggdHlwZSwgc2VsZWN0b3IsIHR5cGVzWyB0eXBlIF0gKTsKCQkJfQoJCQlyZXR1cm4gdGhpczsKCQl9CgkJaWYgKCBzZWxlY3RvciA9PT0gZmFsc2UgfHwgdHlwZW9mIHNlbGVjdG9yID09PSAiZnVuY3Rpb24iICkgewoKCQkJLy8gKCB0eXBlcyBbLCBmbl0gKQoJCQlmbiA9IHNlbGVjdG9yOwoJCQlzZWxlY3RvciA9IHVuZGVmaW5lZDsKCQl9CgkJaWYgKCBmbiA9PT0gZmFsc2UgKSB7CgkJCWZuID0gcmV0dXJuRmFsc2U7CgkJfQoJCXJldHVybiB0aGlzLmVhY2goIGZ1bmN0aW9uKCkgewoJCQlqUXVlcnkuZXZlbnQucmVtb3ZlKCB0aGlzLCB0eXBlcywgZm4sIHNlbGVjdG9yICk7CgkJfSApOwoJfQp9ICk7CgoKdmFyCgoJLy8gU3VwcG9ydDogSUUgPD0xMCAtIDExLCBFZGdlIDEyIC0gMTMgb25seQoJLy8gSW4gSUUvRWRnZSB1c2luZyByZWdleCBncm91cHMgaGVyZSBjYXVzZXMgc2V2ZXJlIHNsb3dkb3ducy4KCS8vIFNlZSBodHRwczovL2Nvbm5lY3QubWljcm9zb2Z0LmNvbS9JRS9mZWVkYmFjay9kZXRhaWxzLzE3MzY1MTIvCglybm9Jbm5lcmh0bWwgPSAvPHNjcmlwdHw8c3R5bGV8PGxpbmsvaSwKCgkvLyBjaGVja2VkPSJjaGVja2VkIiBvciBjaGVja2VkCglyY2hlY2tlZCA9IC9jaGVja2VkXHMqKD86W149XXw9XHMqLmNoZWNrZWQuKS9pLAoKCXJjbGVhblNjcmlwdCA9IC9eXHMqPCFcW0NEQVRBXFt8XF1cXT5ccyokL2c7CgovLyBQcmVmZXIgYSB0Ym9keSBvdmVyIGl0cyBwYXJlbnQgdGFibGUgZm9yIGNvbnRhaW5pbmcgbmV3IHJvd3MKZnVuY3Rpb24gbWFuaXB1bGF0aW9uVGFyZ2V0KCBlbGVtLCBjb250ZW50ICkgewoJaWYgKCBub2RlTmFtZSggZWxlbSwgInRhYmxlIiApICYmCgkJbm9kZU5hbWUoIGNvbnRlbnQubm9kZVR5cGUgIT09IDExID8gY29udGVudCA6IGNvbnRlbnQuZmlyc3RDaGlsZCwgInRyIiApICkgewoKCQlyZXR1cm4galF1ZXJ5KCBlbGVtICkuY2hpbGRyZW4oICJ0Ym9keSIgKVsgMCBdIHx8IGVsZW07Cgl9CgoJcmV0dXJuIGVsZW07Cn0KCi8vIFJlcGxhY2UvcmVzdG9yZSB0aGUgdHlwZSBhdHRyaWJ1dGUgb2Ygc2NyaXB0IGVsZW1lbnRzIGZvciBzYWZlIERPTSBtYW5pcHVsYXRpb24KZnVuY3Rpb24gZGlzYWJsZVNjcmlwdCggZWxlbSApIHsKCWVsZW0udHlwZSA9ICggZWxlbS5nZXRBdHRyaWJ1dGUoICJ0eXBlIiApICE9PSBudWxsICkgKyAiLyIgKyBlbGVtLnR5cGU7CglyZXR1cm4gZWxlbTsKfQpmdW5jdGlvbiByZXN0b3JlU2NyaXB0KCBlbGVtICkgewoJaWYgKCAoIGVsZW0udHlwZSB8fCAiIiApLnNsaWNlKCAwLCA1ICkgPT09ICJ0cnVlLyIgKSB7CgkJZWxlbS50eXBlID0gZWxlbS50eXBlLnNsaWNlKCA1ICk7Cgl9IGVsc2UgewoJCWVsZW0ucmVtb3ZlQXR0cmlidXRlKCAidHlwZSIgKTsKCX0KCglyZXR1cm4gZWxlbTsKfQoKZnVuY3Rpb24gY2xvbmVDb3B5RXZlbnQoIHNyYywgZGVzdCApIHsKCXZhciBpLCBsLCB0eXBlLCBwZGF0YU9sZCwgdWRhdGFPbGQsIHVkYXRhQ3VyLCBldmVudHM7CgoJaWYgKCBkZXN0Lm5vZGVUeXBlICE9PSAxICkgewoJCXJldHVybjsKCX0KCgkvLyAxLiBDb3B5IHByaXZhdGUgZGF0YTogZXZlbnRzLCBoYW5kbGVycywgZXRjLgoJaWYgKCBkYXRhUHJpdi5oYXNEYXRhKCBzcmMgKSApIHsKCQlwZGF0YU9sZCA9IGRhdGFQcml2LmdldCggc3JjICk7CgkJZXZlbnRzID0gcGRhdGFPbGQuZXZlbnRzOwoKCQlpZiAoIGV2ZW50cyApIHsKCQkJZGF0YVByaXYucmVtb3ZlKCBkZXN0LCAiaGFuZGxlIGV2ZW50cyIgKTsKCgkJCWZvciAoIHR5cGUgaW4gZXZlbnRzICkgewoJCQkJZm9yICggaSA9IDAsIGwgPSBldmVudHNbIHR5cGUgXS5sZW5ndGg7IGkgPCBsOyBpKysgKSB7CgkJCQkJalF1ZXJ5LmV2ZW50LmFkZCggZGVzdCwgdHlwZSwgZXZlbnRzWyB0eXBlIF1bIGkgXSApOwoJCQkJfQoJCQl9CgkJfQoJfQoKCS8vIDIuIENvcHkgdXNlciBkYXRhCglpZiAoIGRhdGFVc2VyLmhhc0RhdGEoIHNyYyApICkgewoJCXVkYXRhT2xkID0gZGF0YVVzZXIuYWNjZXNzKCBzcmMgKTsKCQl1ZGF0YUN1ciA9IGpRdWVyeS5leHRlbmQoIHt9LCB1ZGF0YU9sZCApOwoKCQlkYXRhVXNlci5zZXQoIGRlc3QsIHVkYXRhQ3VyICk7Cgl9Cn0KCi8vIEZpeCBJRSBidWdzLCBzZWUgc3VwcG9ydCB0ZXN0cwpmdW5jdGlvbiBmaXhJbnB1dCggc3JjLCBkZXN0ICkgewoJdmFyIG5vZGVOYW1lID0gZGVzdC5ub2RlTmFtZS50b0xvd2VyQ2FzZSgpOwoKCS8vIEZhaWxzIHRvIHBlcnNpc3QgdGhlIGNoZWNrZWQgc3RhdGUgb2YgYSBjbG9uZWQgY2hlY2tib3ggb3IgcmFkaW8gYnV0dG9uLgoJaWYgKCBub2RlTmFtZSA9PT0gImlucHV0IiAmJiByY2hlY2thYmxlVHlwZS50ZXN0KCBzcmMudHlwZSApICkgewoJCWRlc3QuY2hlY2tlZCA9IHNyYy5jaGVja2VkOwoKCS8vIEZhaWxzIHRvIHJldHVybiB0aGUgc2VsZWN0ZWQgb3B0aW9uIHRvIHRoZSBkZWZhdWx0IHNlbGVjdGVkIHN0YXRlIHdoZW4gY2xvbmluZyBvcHRpb25zCgl9IGVsc2UgaWYgKCBub2RlTmFtZSA9PT0gImlucHV0IiB8fCBub2RlTmFtZSA9PT0gInRleHRhcmVhIiApIHsKCQlkZXN0LmRlZmF1bHRWYWx1ZSA9IHNyYy5kZWZhdWx0VmFsdWU7Cgl9Cn0KCmZ1bmN0aW9uIGRvbU1hbmlwKCBjb2xsZWN0aW9uLCBhcmdzLCBjYWxsYmFjaywgaWdub3JlZCApIHsKCgkvLyBGbGF0dGVuIGFueSBuZXN0ZWQgYXJyYXlzCglhcmdzID0gZmxhdCggYXJncyApOwoKCXZhciBmcmFnbWVudCwgZmlyc3QsIHNjcmlwdHMsIGhhc1NjcmlwdHMsIG5vZGUsIGRvYywKCQlpID0gMCwKCQlsID0gY29sbGVjdGlvbi5sZW5ndGgsCgkJaU5vQ2xvbmUgPSBsIC0gMSwKCQl2YWx1ZSA9IGFyZ3NbIDAgXSwKCQl2YWx1ZUlzRnVuY3Rpb24gPSBpc0Z1bmN0aW9uKCB2YWx1ZSApOwoKCS8vIFdlIGNhbid0IGNsb25lTm9kZSBmcmFnbWVudHMgdGhhdCBjb250YWluIGNoZWNrZWQsIGluIFdlYktpdAoJaWYgKCB2YWx1ZUlzRnVuY3Rpb24gfHwKCQkJKCBsID4gMSAmJiB0eXBlb2YgdmFsdWUgPT09ICJzdHJpbmciICYmCgkJCQkhc3VwcG9ydC5jaGVja0Nsb25lICYmIHJjaGVja2VkLnRlc3QoIHZhbHVlICkgKSApIHsKCQlyZXR1cm4gY29sbGVjdGlvbi5lYWNoKCBmdW5jdGlvbiggaW5kZXggKSB7CgkJCXZhciBzZWxmID0gY29sbGVjdGlvbi5lcSggaW5kZXggKTsKCQkJaWYgKCB2YWx1ZUlzRnVuY3Rpb24gKSB7CgkJCQlhcmdzWyAwIF0gPSB2YWx1ZS5jYWxsKCB0aGlzLCBpbmRleCwgc2VsZi5odG1sKCkgKTsKCQkJfQoJCQlkb21NYW5pcCggc2VsZiwgYXJncywgY2FsbGJhY2ssIGlnbm9yZWQgKTsKCQl9ICk7Cgl9CgoJaWYgKCBsICkgewoJCWZyYWdtZW50ID0gYnVpbGRGcmFnbWVudCggYXJncywgY29sbGVjdGlvblsgMCBdLm93bmVyRG9jdW1lbnQsIGZhbHNlLCBjb2xsZWN0aW9uLCBpZ25vcmVkICk7CgkJZmlyc3QgPSBmcmFnbWVudC5maXJzdENoaWxkOwoKCQlpZiAoIGZyYWdtZW50LmNoaWxkTm9kZXMubGVuZ3RoID09PSAxICkgewoJCQlmcmFnbWVudCA9IGZpcnN0OwoJCX0KCgkJLy8gUmVxdWlyZSBlaXRoZXIgbmV3IGNvbnRlbnQgb3IgYW4gaW50ZXJlc3QgaW4gaWdub3JlZCBlbGVtZW50cyB0byBpbnZva2UgdGhlIGNhbGxiYWNrCgkJaWYgKCBmaXJzdCB8fCBpZ25vcmVkICkgewoJCQlzY3JpcHRzID0galF1ZXJ5Lm1hcCggZ2V0QWxsKCBmcmFnbWVudCwgInNjcmlwdCIgKSwgZGlzYWJsZVNjcmlwdCApOwoJCQloYXNTY3JpcHRzID0gc2NyaXB0cy5sZW5ndGg7CgoJCQkvLyBVc2UgdGhlIG9yaWdpbmFsIGZyYWdtZW50IGZvciB0aGUgbGFzdCBpdGVtCgkJCS8vIGluc3RlYWQgb2YgdGhlIGZpcnN0IGJlY2F1c2UgaXQgY2FuIGVuZCB1cAoJCQkvLyBiZWluZyBlbXB0aWVkIGluY29ycmVjdGx5IGluIGNlcnRhaW4gc2l0dWF0aW9ucyAodHJhYy04MDcwKS4KCQkJZm9yICggOyBpIDwgbDsgaSsrICkgewoJCQkJbm9kZSA9IGZyYWdtZW50OwoKCQkJCWlmICggaSAhPT0gaU5vQ2xvbmUgKSB7CgkJCQkJbm9kZSA9IGpRdWVyeS5jbG9uZSggbm9kZSwgdHJ1ZSwgdHJ1ZSApOwoKCQkJCQkvLyBLZWVwIHJlZmVyZW5jZXMgdG8gY2xvbmVkIHNjcmlwdHMgZm9yIGxhdGVyIHJlc3RvcmF0aW9uCgkJCQkJaWYgKCBoYXNTY3JpcHRzICkgewoKCQkJCQkJLy8gU3VwcG9ydDogQW5kcm9pZCA8PTQuMCBvbmx5LCBQaGFudG9tSlMgMSBvbmx5CgkJCQkJCS8vIHB1c2guYXBwbHkoXywgYXJyYXlsaWtlKSB0aHJvd3Mgb24gYW5jaWVudCBXZWJLaXQKCQkJCQkJalF1ZXJ5Lm1lcmdlKCBzY3JpcHRzLCBnZXRBbGwoIG5vZGUsICJzY3JpcHQiICkgKTsKCQkJCQl9CgkJCQl9CgoJCQkJY2FsbGJhY2suY2FsbCggY29sbGVjdGlvblsgaSBdLCBub2RlLCBpICk7CgkJCX0KCgkJCWlmICggaGFzU2NyaXB0cyApIHsKCQkJCWRvYyA9IHNjcmlwdHNbIHNjcmlwdHMubGVuZ3RoIC0gMSBdLm93bmVyRG9jdW1lbnQ7CgoJCQkJLy8gUmVlbmFibGUgc2NyaXB0cwoJCQkJalF1ZXJ5Lm1hcCggc2NyaXB0cywgcmVzdG9yZVNjcmlwdCApOwoKCQkJCS8vIEV2YWx1YXRlIGV4ZWN1dGFibGUgc2NyaXB0cyBvbiBmaXJzdCBkb2N1bWVudCBpbnNlcnRpb24KCQkJCWZvciAoIGkgPSAwOyBpIDwgaGFzU2NyaXB0czsgaSsrICkgewoJCQkJCW5vZGUgPSBzY3JpcHRzWyBpIF07CgkJCQkJaWYgKCByc2NyaXB0VHlwZS50ZXN0KCBub2RlLnR5cGUgfHwgIiIgKSAmJgoJCQkJCQkhZGF0YVByaXYuYWNjZXNzKCBub2RlLCAiZ2xvYmFsRXZhbCIgKSAmJgoJCQkJCQlqUXVlcnkuY29udGFpbnMoIGRvYywgbm9kZSApICkgewoKCQkJCQkJaWYgKCBub2RlLnNyYyAmJiAoIG5vZGUudHlwZSB8fCAiIiApLnRvTG93ZXJDYXNlKCkgICE9PSAibW9kdWxlIiApIHsKCgkJCQkJCQkvLyBPcHRpb25hbCBBSkFYIGRlcGVuZGVuY3ksIGJ1dCB3b24ndCBydW4gc2NyaXB0cyBpZiBub3QgcHJlc2VudAoJCQkJCQkJaWYgKCBqUXVlcnkuX2V2YWxVcmwgJiYgIW5vZGUubm9Nb2R1bGUgKSB7CgkJCQkJCQkJalF1ZXJ5Ll9ldmFsVXJsKCBub2RlLnNyYywgewoJCQkJCQkJCQlub25jZTogbm9kZS5ub25jZSB8fCBub2RlLmdldEF0dHJpYnV0ZSggIm5vbmNlIiApCgkJCQkJCQkJfSwgZG9jICk7CgkJCQkJCQl9CgkJCQkJCX0gZWxzZSB7CgoJCQkJCQkJLy8gVW53cmFwIGEgQ0RBVEEgc2VjdGlvbiBjb250YWluaW5nIHNjcmlwdCBjb250ZW50cy4gVGhpcyBzaG91bGRuJ3QgYmUKCQkJCQkJCS8vIG5lZWRlZCBhcyBpbiBYTUwgZG9jdW1lbnRzIHRoZXkncmUgYWxyZWFkeSBub3QgdmlzaWJsZSB3aGVuCgkJCQkJCQkvLyBpbnNwZWN0aW5nIGVsZW1lbnQgY29udGVudHMgYW5kIGluIEhUTUwgZG9jdW1lbnRzIHRoZXkgaGF2ZSBubwoJCQkJCQkJLy8gbWVhbmluZyBidXQgd2UncmUgcHJlc2VydmluZyB0aGF0IGxvZ2ljIGZvciBiYWNrd2FyZHMgY29tcGF0aWJpbGl0eS4KCQkJCQkJCS8vIFRoaXMgd2lsbCBiZSByZW1vdmVkIGNvbXBsZXRlbHkgaW4gNC4wLiBTZWUgZ2gtNDkwNC4KCQkJCQkJCURPTUV2YWwoIG5vZGUudGV4dENvbnRlbnQucmVwbGFjZSggcmNsZWFuU2NyaXB0LCAiIiApLCBub2RlLCBkb2MgKTsKCQkJCQkJfQoJCQkJCX0KCQkJCX0KCQkJfQoJCX0KCX0KCglyZXR1cm4gY29sbGVjdGlvbjsKfQoKZnVuY3Rpb24gcmVtb3ZlKCBlbGVtLCBzZWxlY3Rvciwga2VlcERhdGEgKSB7Cgl2YXIgbm9kZSwKCQlub2RlcyA9IHNlbGVjdG9yID8galF1ZXJ5LmZpbHRlciggc2VsZWN0b3IsIGVsZW0gKSA6IGVsZW0sCgkJaSA9IDA7CgoJZm9yICggOyAoIG5vZGUgPSBub2Rlc1sgaSBdICkgIT0gbnVsbDsgaSsrICkgewoJCWlmICggIWtlZXBEYXRhICYmIG5vZGUubm9kZVR5cGUgPT09IDEgKSB7CgkJCWpRdWVyeS5jbGVhbkRhdGEoIGdldEFsbCggbm9kZSApICk7CgkJfQoKCQlpZiAoIG5vZGUucGFyZW50Tm9kZSApIHsKCQkJaWYgKCBrZWVwRGF0YSAmJiBpc0F0dGFjaGVkKCBub2RlICkgKSB7CgkJCQlzZXRHbG9iYWxFdmFsKCBnZXRBbGwoIG5vZGUsICJzY3JpcHQiICkgKTsKCQkJfQoJCQlub2RlLnBhcmVudE5vZGUucmVtb3ZlQ2hpbGQoIG5vZGUgKTsKCQl9Cgl9CgoJcmV0dXJuIGVsZW07Cn0KCmpRdWVyeS5leHRlbmQoIHsKCWh0bWxQcmVmaWx0ZXI6IGZ1bmN0aW9uKCBodG1sICkgewoJCXJldHVybiBodG1sOwoJfSwKCgljbG9uZTogZnVuY3Rpb24oIGVsZW0sIGRhdGFBbmRFdmVudHMsIGRlZXBEYXRhQW5kRXZlbnRzICkgewoJCXZhciBpLCBsLCBzcmNFbGVtZW50cywgZGVzdEVsZW1lbnRzLAoJCQljbG9uZSA9IGVsZW0uY2xvbmVOb2RlKCB0cnVlICksCgkJCWluUGFnZSA9IGlzQXR0YWNoZWQoIGVsZW0gKTsKCgkJLy8gRml4IElFIGNsb25pbmcgaXNzdWVzCgkJaWYgKCAhc3VwcG9ydC5ub0Nsb25lQ2hlY2tlZCAmJiAoIGVsZW0ubm9kZVR5cGUgPT09IDEgfHwgZWxlbS5ub2RlVHlwZSA9PT0gMTEgKSAmJgoJCQkJIWpRdWVyeS5pc1hNTERvYyggZWxlbSApICkgewoKCQkJLy8gV2UgZXNjaGV3IFNpenpsZSBoZXJlIGZvciBwZXJmb3JtYW5jZSByZWFzb25zOiBodHRwczovL2pzcGVyZi5jb20vZ2V0YWxsLXZzLXNpenpsZS8yCgkJCWRlc3RFbGVtZW50cyA9IGdldEFsbCggY2xvbmUgKTsKCQkJc3JjRWxlbWVudHMgPSBnZXRBbGwoIGVsZW0gKTsKCgkJCWZvciAoIGkgPSAwLCBsID0gc3JjRWxlbWVudHMubGVuZ3RoOyBpIDwgbDsgaSsrICkgewoJCQkJZml4SW5wdXQoIHNyY0VsZW1lbnRzWyBpIF0sIGRlc3RFbGVtZW50c1sgaSBdICk7CgkJCX0KCQl9CgoJCS8vIENvcHkgdGhlIGV2ZW50cyBmcm9tIHRoZSBvcmlnaW5hbCB0byB0aGUgY2xvbmUKCQlpZiAoIGRhdGFBbmRFdmVudHMgKSB7CgkJCWlmICggZGVlcERhdGFBbmRFdmVudHMgKSB7CgkJCQlzcmNFbGVtZW50cyA9IHNyY0VsZW1lbnRzIHx8IGdldEFsbCggZWxlbSApOwoJCQkJZGVzdEVsZW1lbnRzID0gZGVzdEVsZW1lbnRzIHx8IGdldEFsbCggY2xvbmUgKTsKCgkJCQlmb3IgKCBpID0gMCwgbCA9IHNyY0VsZW1lbnRzLmxlbmd0aDsgaSA8IGw7IGkrKyApIHsKCQkJCQljbG9uZUNvcHlFdmVudCggc3JjRWxlbWVudHNbIGkgXSwgZGVzdEVsZW1lbnRzWyBpIF0gKTsKCQkJCX0KCQkJfSBlbHNlIHsKCQkJCWNsb25lQ29weUV2ZW50KCBlbGVtLCBjbG9uZSApOwoJCQl9CgkJfQoKCQkvLyBQcmVzZXJ2ZSBzY3JpcHQgZXZhbHVhdGlvbiBoaXN0b3J5CgkJZGVzdEVsZW1lbnRzID0gZ2V0QWxsKCBjbG9uZSwgInNjcmlwdCIgKTsKCQlpZiAoIGRlc3RFbGVtZW50cy5sZW5ndGggPiAwICkgewoJCQlzZXRHbG9iYWxFdmFsKCBkZXN0RWxlbWVudHMsICFpblBhZ2UgJiYgZ2V0QWxsKCBlbGVtLCAic2NyaXB0IiApICk7CgkJfQoKCQkvLyBSZXR1cm4gdGhlIGNsb25lZCBzZXQKCQlyZXR1cm4gY2xvbmU7Cgl9LAoKCWNsZWFuRGF0YTogZnVuY3Rpb24oIGVsZW1zICkgewoJCXZhciBkYXRhLCBlbGVtLCB0eXBlLAoJCQlzcGVjaWFsID0galF1ZXJ5LmV2ZW50LnNwZWNpYWwsCgkJCWkgPSAwOwoKCQlmb3IgKCA7ICggZWxlbSA9IGVsZW1zWyBpIF0gKSAhPT0gdW5kZWZpbmVkOyBpKysgKSB7CgkJCWlmICggYWNjZXB0RGF0YSggZWxlbSApICkgewoJCQkJaWYgKCAoIGRhdGEgPSBlbGVtWyBkYXRhUHJpdi5leHBhbmRvIF0gKSApIHsKCQkJCQlpZiAoIGRhdGEuZXZlbnRzICkgewoJCQkJCQlmb3IgKCB0eXBlIGluIGRhdGEuZXZlbnRzICkgewoJCQkJCQkJaWYgKCBzcGVjaWFsWyB0eXBlIF0gKSB7CgkJCQkJCQkJalF1ZXJ5LmV2ZW50LnJlbW92ZSggZWxlbSwgdHlwZSApOwoKCQkJCQkJCS8vIFRoaXMgaXMgYSBzaG9ydGN1dCB0byBhdm9pZCBqUXVlcnkuZXZlbnQucmVtb3ZlJ3Mgb3ZlcmhlYWQKCQkJCQkJCX0gZWxzZSB7CgkJCQkJCQkJalF1ZXJ5LnJlbW92ZUV2ZW50KCBlbGVtLCB0eXBlLCBkYXRhLmhhbmRsZSApOwoJCQkJCQkJfQoJCQkJCQl9CgkJCQkJfQoKCQkJCQkvLyBTdXBwb3J0OiBDaHJvbWUgPD0zNSAtIDQ1KwoJCQkJCS8vIEFzc2lnbiB1bmRlZmluZWQgaW5zdGVhZCBvZiB1c2luZyBkZWxldGUsIHNlZSBEYXRhI3JlbW92ZQoJCQkJCWVsZW1bIGRhdGFQcml2LmV4cGFuZG8gXSA9IHVuZGVmaW5lZDsKCQkJCX0KCQkJCWlmICggZWxlbVsgZGF0YVVzZXIuZXhwYW5kbyBdICkgewoKCQkJCQkvLyBTdXBwb3J0OiBDaHJvbWUgPD0zNSAtIDQ1KwoJCQkJCS8vIEFzc2lnbiB1bmRlZmluZWQgaW5zdGVhZCBvZiB1c2luZyBkZWxldGUsIHNlZSBEYXRhI3JlbW92ZQoJCQkJCWVsZW1bIGRhdGFVc2VyLmV4cGFuZG8gXSA9IHVuZGVmaW5lZDsKCQkJCX0KCQkJfQoJCX0KCX0KfSApOwoKalF1ZXJ5LmZuLmV4dGVuZCggewoJZGV0YWNoOiBmdW5jdGlvbiggc2VsZWN0b3IgKSB7CgkJcmV0dXJuIHJlbW92ZSggdGhpcywgc2VsZWN0b3IsIHRydWUgKTsKCX0sCgoJcmVtb3ZlOiBmdW5jdGlvbiggc2VsZWN0b3IgKSB7CgkJcmV0dXJuIHJlbW92ZSggdGhpcywgc2VsZWN0b3IgKTsKCX0sCgoJdGV4dDogZnVuY3Rpb24oIHZhbHVlICkgewoJCXJldHVybiBhY2Nlc3MoIHRoaXMsIGZ1bmN0aW9uKCB2YWx1ZSApIHsKCQkJcmV0dXJuIHZhbHVlID09PSB1bmRlZmluZWQgPwoJCQkJalF1ZXJ5LnRleHQoIHRoaXMgKSA6CgkJCQl0aGlzLmVtcHR5KCkuZWFjaCggZnVuY3Rpb24oKSB7CgkJCQkJaWYgKCB0aGlzLm5vZGVUeXBlID09PSAxIHx8IHRoaXMubm9kZVR5cGUgPT09IDExIHx8IHRoaXMubm9kZVR5cGUgPT09IDkgKSB7CgkJCQkJCXRoaXMudGV4dENvbnRlbnQgPSB2YWx1ZTsKCQkJCQl9CgkJCQl9ICk7CgkJfSwgbnVsbCwgdmFsdWUsIGFyZ3VtZW50cy5sZW5ndGggKTsKCX0sCgoJYXBwZW5kOiBmdW5jdGlvbigpIHsKCQlyZXR1cm4gZG9tTWFuaXAoIHRoaXMsIGFyZ3VtZW50cywgZnVuY3Rpb24oIGVsZW0gKSB7CgkJCWlmICggdGhpcy5ub2RlVHlwZSA9PT0gMSB8fCB0aGlzLm5vZGVUeXBlID09PSAxMSB8fCB0aGlzLm5vZGVUeXBlID09PSA5ICkgewoJCQkJdmFyIHRhcmdldCA9IG1hbmlwdWxhdGlvblRhcmdldCggdGhpcywgZWxlbSApOwoJCQkJdGFyZ2V0LmFwcGVuZENoaWxkKCBlbGVtICk7CgkJCX0KCQl9ICk7Cgl9LAoKCXByZXBlbmQ6IGZ1bmN0aW9uKCkgewoJCXJldHVybiBkb21NYW5pcCggdGhpcywgYXJndW1lbnRzLCBmdW5jdGlvbiggZWxlbSApIHsKCQkJaWYgKCB0aGlzLm5vZGVUeXBlID09PSAxIHx8IHRoaXMubm9kZVR5cGUgPT09IDExIHx8IHRoaXMubm9kZVR5cGUgPT09IDkgKSB7CgkJCQl2YXIgdGFyZ2V0ID0gbWFuaXB1bGF0aW9uVGFyZ2V0KCB0aGlzLCBlbGVtICk7CgkJCQl0YXJnZXQuaW5zZXJ0QmVmb3JlKCBlbGVtLCB0YXJnZXQuZmlyc3RDaGlsZCApOwoJCQl9CgkJfSApOwoJfSwKCgliZWZvcmU6IGZ1bmN0aW9uKCkgewoJCXJldHVybiBkb21NYW5pcCggdGhpcywgYXJndW1lbnRzLCBmdW5jdGlvbiggZWxlbSApIHsKCQkJaWYgKCB0aGlzLnBhcmVudE5vZGUgKSB7CgkJCQl0aGlzLnBhcmVudE5vZGUuaW5zZXJ0QmVmb3JlKCBlbGVtLCB0aGlzICk7CgkJCX0KCQl9ICk7Cgl9LAoKCWFmdGVyOiBmdW5jdGlvbigpIHsKCQlyZXR1cm4gZG9tTWFuaXAoIHRoaXMsIGFyZ3VtZW50cywgZnVuY3Rpb24oIGVsZW0gKSB7CgkJCWlmICggdGhpcy5wYXJlbnROb2RlICkgewoJCQkJdGhpcy5wYXJlbnROb2RlLmluc2VydEJlZm9yZSggZWxlbSwgdGhpcy5uZXh0U2libGluZyApOwoJCQl9CgkJfSApOwoJfSwKCgllbXB0eTogZnVuY3Rpb24oKSB7CgkJdmFyIGVsZW0sCgkJCWkgPSAwOwoKCQlmb3IgKCA7ICggZWxlbSA9IHRoaXNbIGkgXSApICE9IG51bGw7IGkrKyApIHsKCQkJaWYgKCBlbGVtLm5vZGVUeXBlID09PSAxICkgewoKCQkJCS8vIFByZXZlbnQgbWVtb3J5IGxlYWtzCgkJCQlqUXVlcnkuY2xlYW5EYXRhKCBnZXRBbGwoIGVsZW0sIGZhbHNlICkgKTsKCgkJCQkvLyBSZW1vdmUgYW55IHJlbWFpbmluZyBub2RlcwoJCQkJZWxlbS50ZXh0Q29udGVudCA9ICIiOwoJCQl9CgkJfQoKCQlyZXR1cm4gdGhpczsKCX0sCgoJY2xvbmU6IGZ1bmN0aW9uKCBkYXRhQW5kRXZlbnRzLCBkZWVwRGF0YUFuZEV2ZW50cyApIHsKCQlkYXRhQW5kRXZlbnRzID0gZGF0YUFuZEV2ZW50cyA9PSBudWxsID8gZmFsc2UgOiBkYXRhQW5kRXZlbnRzOwoJCWRlZXBEYXRhQW5kRXZlbnRzID0gZGVlcERhdGFBbmRFdmVudHMgPT0gbnVsbCA/IGRhdGFBbmRFdmVudHMgOiBkZWVwRGF0YUFuZEV2ZW50czsKCgkJcmV0dXJuIHRoaXMubWFwKCBmdW5jdGlvbigpIHsKCQkJcmV0dXJuIGpRdWVyeS5jbG9uZSggdGhpcywgZGF0YUFuZEV2ZW50cywgZGVlcERhdGFBbmRFdmVudHMgKTsKCQl9ICk7Cgl9LAoKCWh0bWw6IGZ1bmN0aW9uKCB2YWx1ZSApIHsKCQlyZXR1cm4gYWNjZXNzKCB0aGlzLCBmdW5jdGlvbiggdmFsdWUgKSB7CgkJCXZhciBlbGVtID0gdGhpc1sgMCBdIHx8IHt9LAoJCQkJaSA9IDAsCgkJCQlsID0gdGhpcy5sZW5ndGg7CgoJCQlpZiAoIHZhbHVlID09PSB1bmRlZmluZWQgJiYgZWxlbS5ub2RlVHlwZSA9PT0gMSApIHsKCQkJCXJldHVybiBlbGVtLmlubmVySFRNTDsKCQkJfQoKCQkJLy8gU2VlIGlmIHdlIGNhbiB0YWtlIGEgc2hvcnRjdXQgYW5kIGp1c3QgdXNlIGlubmVySFRNTAoJCQlpZiAoIHR5cGVvZiB2YWx1ZSA9PT0gInN0cmluZyIgJiYgIXJub0lubmVyaHRtbC50ZXN0KCB2YWx1ZSApICYmCgkJCQkhd3JhcE1hcFsgKCBydGFnTmFtZS5leGVjKCB2YWx1ZSApIHx8IFsgIiIsICIiIF0gKVsgMSBdLnRvTG93ZXJDYXNlKCkgXSApIHsKCgkJCQl2YWx1ZSA9IGpRdWVyeS5odG1sUHJlZmlsdGVyKCB2YWx1ZSApOwoKCQkJCXRyeSB7CgkJCQkJZm9yICggOyBpIDwgbDsgaSsrICkgewoJCQkJCQllbGVtID0gdGhpc1sgaSBdIHx8IHt9OwoKCQkJCQkJLy8gUmVtb3ZlIGVsZW1lbnQgbm9kZXMgYW5kIHByZXZlbnQgbWVtb3J5IGxlYWtzCgkJCQkJCWlmICggZWxlbS5ub2RlVHlwZSA9PT0gMSApIHsKCQkJCQkJCWpRdWVyeS5jbGVhbkRhdGEoIGdldEFsbCggZWxlbSwgZmFsc2UgKSApOwoJCQkJCQkJZWxlbS5pbm5lckhUTUwgPSB2YWx1ZTsKCQkJCQkJfQoJCQkJCX0KCgkJCQkJZWxlbSA9IDA7CgoJCQkJLy8gSWYgdXNpbmcgaW5uZXJIVE1MIHRocm93cyBhbiBleGNlcHRpb24sIHVzZSB0aGUgZmFsbGJhY2sgbWV0aG9kCgkJCQl9IGNhdGNoICggZSApIHt9CgkJCX0KCgkJCWlmICggZWxlbSApIHsKCQkJCXRoaXMuZW1wdHkoKS5hcHBlbmQoIHZhbHVlICk7CgkJCX0KCQl9LCBudWxsLCB2YWx1ZSwgYXJndW1lbnRzLmxlbmd0aCApOwoJfSwKCglyZXBsYWNlV2l0aDogZnVuY3Rpb24oKSB7CgkJdmFyIGlnbm9yZWQgPSBbXTsKCgkJLy8gTWFrZSB0aGUgY2hhbmdlcywgcmVwbGFjaW5nIGVhY2ggbm9uLWlnbm9yZWQgY29udGV4dCBlbGVtZW50IHdpdGggdGhlIG5ldyBjb250ZW50CgkJcmV0dXJuIGRvbU1hbmlwKCB0aGlzLCBhcmd1bWVudHMsIGZ1bmN0aW9uKCBlbGVtICkgewoJCQl2YXIgcGFyZW50ID0gdGhpcy5wYXJlbnROb2RlOwoKCQkJaWYgKCBqUXVlcnkuaW5BcnJheSggdGhpcywgaWdub3JlZCApIDwgMCApIHsKCQkJCWpRdWVyeS5jbGVhbkRhdGEoIGdldEFsbCggdGhpcyApICk7CgkJCQlpZiAoIHBhcmVudCApIHsKCQkJCQlwYXJlbnQucmVwbGFjZUNoaWxkKCBlbGVtLCB0aGlzICk7CgkJCQl9CgkJCX0KCgkJLy8gRm9yY2UgY2FsbGJhY2sgaW52b2NhdGlvbgoJCX0sIGlnbm9yZWQgKTsKCX0KfSApOwoKalF1ZXJ5LmVhY2goIHsKCWFwcGVuZFRvOiAiYXBwZW5kIiwKCXByZXBlbmRUbzogInByZXBlbmQiLAoJaW5zZXJ0QmVmb3JlOiAiYmVmb3JlIiwKCWluc2VydEFmdGVyOiAiYWZ0ZXIiLAoJcmVwbGFjZUFsbDogInJlcGxhY2VXaXRoIgp9LCBmdW5jdGlvbiggbmFtZSwgb3JpZ2luYWwgKSB7CglqUXVlcnkuZm5bIG5hbWUgXSA9IGZ1bmN0aW9uKCBzZWxlY3RvciApIHsKCQl2YXIgZWxlbXMsCgkJCXJldCA9IFtdLAoJCQlpbnNlcnQgPSBqUXVlcnkoIHNlbGVjdG9yICksCgkJCWxhc3QgPSBpbnNlcnQubGVuZ3RoIC0gMSwKCQkJaSA9IDA7CgoJCWZvciAoIDsgaSA8PSBsYXN0OyBpKysgKSB7CgkJCWVsZW1zID0gaSA9PT0gbGFzdCA/IHRoaXMgOiB0aGlzLmNsb25lKCB0cnVlICk7CgkJCWpRdWVyeSggaW5zZXJ0WyBpIF0gKVsgb3JpZ2luYWwgXSggZWxlbXMgKTsKCgkJCS8vIFN1cHBvcnQ6IEFuZHJvaWQgPD00LjAgb25seSwgUGhhbnRvbUpTIDEgb25seQoJCQkvLyAuZ2V0KCkgYmVjYXVzZSBwdXNoLmFwcGx5KF8sIGFycmF5bGlrZSkgdGhyb3dzIG9uIGFuY2llbnQgV2ViS2l0CgkJCXB1c2guYXBwbHkoIHJldCwgZWxlbXMuZ2V0KCkgKTsKCQl9CgoJCXJldHVybiB0aGlzLnB1c2hTdGFjayggcmV0ICk7Cgl9Owp9ICk7CnZhciBybnVtbm9ucHggPSBuZXcgUmVnRXhwKCAiXigiICsgcG51bSArICIpKD8hcHgpW2EteiVdKyQiLCAiaSIgKTsKCnZhciByY3VzdG9tUHJvcCA9IC9eLS0vOwoKCnZhciBnZXRTdHlsZXMgPSBmdW5jdGlvbiggZWxlbSApIHsKCgkJLy8gU3VwcG9ydDogSUUgPD0xMSBvbmx5LCBGaXJlZm94IDw9MzAgKHRyYWMtMTUwOTgsIHRyYWMtMTQxNTApCgkJLy8gSUUgdGhyb3dzIG9uIGVsZW1lbnRzIGNyZWF0ZWQgaW4gcG9wdXBzCgkJLy8gRkYgbWVhbndoaWxlIHRocm93cyBvbiBmcmFtZSBlbGVtZW50cyB0aHJvdWdoICJkZWZhdWx0Vmlldy5nZXRDb21wdXRlZFN0eWxlIgoJCXZhciB2aWV3ID0gZWxlbS5vd25lckRvY3VtZW50LmRlZmF1bHRWaWV3OwoKCQlpZiAoICF2aWV3IHx8ICF2aWV3Lm9wZW5lciApIHsKCQkJdmlldyA9IHdpbmRvdzsKCQl9CgoJCXJldHVybiB2aWV3LmdldENvbXB1dGVkU3R5bGUoIGVsZW0gKTsKCX07Cgp2YXIgc3dhcCA9IGZ1bmN0aW9uKCBlbGVtLCBvcHRpb25zLCBjYWxsYmFjayApIHsKCXZhciByZXQsIG5hbWUsCgkJb2xkID0ge307CgoJLy8gUmVtZW1iZXIgdGhlIG9sZCB2YWx1ZXMsIGFuZCBpbnNlcnQgdGhlIG5ldyBvbmVzCglmb3IgKCBuYW1lIGluIG9wdGlvbnMgKSB7CgkJb2xkWyBuYW1lIF0gPSBlbGVtLnN0eWxlWyBuYW1lIF07CgkJZWxlbS5zdHlsZVsgbmFtZSBdID0gb3B0aW9uc1sgbmFtZSBdOwoJfQoKCXJldCA9IGNhbGxiYWNrLmNhbGwoIGVsZW0gKTsKCgkvLyBSZXZlcnQgdGhlIG9sZCB2YWx1ZXMKCWZvciAoIG5hbWUgaW4gb3B0aW9ucyApIHsKCQllbGVtLnN0eWxlWyBuYW1lIF0gPSBvbGRbIG5hbWUgXTsKCX0KCglyZXR1cm4gcmV0Owp9OwoKCnZhciByYm94U3R5bGUgPSBuZXcgUmVnRXhwKCBjc3NFeHBhbmQuam9pbiggInwiICksICJpIiApOwoKdmFyIHdoaXRlc3BhY2UgPSAiW1xceDIwXFx0XFxyXFxuXFxmXSI7CgoKdmFyIHJ0cmltQ1NTID0gbmV3IFJlZ0V4cCgKCSJeIiArIHdoaXRlc3BhY2UgKyAiK3woKD86XnxbXlxcXFxdKSg/OlxcXFwuKSopIiArIHdoaXRlc3BhY2UgKyAiKyQiLAoJImciCik7CgoKCgooIGZ1bmN0aW9uKCkgewoKCS8vIEV4ZWN1dGluZyBib3RoIHBpeGVsUG9zaXRpb24gJiBib3hTaXppbmdSZWxpYWJsZSB0ZXN0cyByZXF1aXJlIG9ubHkgb25lIGxheW91dAoJLy8gc28gdGhleSdyZSBleGVjdXRlZCBhdCB0aGUgc2FtZSB0aW1lIHRvIHNhdmUgdGhlIHNlY29uZCBjb21wdXRhdGlvbi4KCWZ1bmN0aW9uIGNvbXB1dGVTdHlsZVRlc3RzKCkgewoKCQkvLyBUaGlzIGlzIGEgc2luZ2xldG9uLCB3ZSBuZWVkIHRvIGV4ZWN1dGUgaXQgb25seSBvbmNlCgkJaWYgKCAhZGl2ICkgewoJCQlyZXR1cm47CgkJfQoKCQljb250YWluZXIuc3R5bGUuY3NzVGV4dCA9ICJwb3NpdGlvbjphYnNvbHV0ZTtsZWZ0Oi0xMTExMXB4O3dpZHRoOjYwcHg7IiArCgkJCSJtYXJnaW4tdG9wOjFweDtwYWRkaW5nOjA7Ym9yZGVyOjAiOwoJCWRpdi5zdHlsZS5jc3NUZXh0ID0KCQkJInBvc2l0aW9uOnJlbGF0aXZlO2Rpc3BsYXk6YmxvY2s7Ym94LXNpemluZzpib3JkZXItYm94O292ZXJmbG93OnNjcm9sbDsiICsKCQkJIm1hcmdpbjphdXRvO2JvcmRlcjoxcHg7cGFkZGluZzoxcHg7IiArCgkJCSJ3aWR0aDo2MCU7dG9wOjElIjsKCQlkb2N1bWVudEVsZW1lbnQuYXBwZW5kQ2hpbGQoIGNvbnRhaW5lciApLmFwcGVuZENoaWxkKCBkaXYgKTsKCgkJdmFyIGRpdlN0eWxlID0gd2luZG93LmdldENvbXB1dGVkU3R5bGUoIGRpdiApOwoJCXBpeGVsUG9zaXRpb25WYWwgPSBkaXZTdHlsZS50b3AgIT09ICIxJSI7CgoJCS8vIFN1cHBvcnQ6IEFuZHJvaWQgNC4wIC0gNC4zIG9ubHksIEZpcmVmb3ggPD0zIC0gNDQKCQlyZWxpYWJsZU1hcmdpbkxlZnRWYWwgPSByb3VuZFBpeGVsTWVhc3VyZXMoIGRpdlN0eWxlLm1hcmdpbkxlZnQgKSA9PT0gMTI7CgoJCS8vIFN1cHBvcnQ6IEFuZHJvaWQgNC4wIC0gNC4zIG9ubHksIFNhZmFyaSA8PTkuMSAtIDEwLjEsIGlPUyA8PTcuMCAtIDkuMwoJCS8vIFNvbWUgc3R5bGVzIGNvbWUgYmFjayB3aXRoIHBlcmNlbnRhZ2UgdmFsdWVzLCBldmVuIHRob3VnaCB0aGV5IHNob3VsZG4ndAoJCWRpdi5zdHlsZS5yaWdodCA9ICI2MCUiOwoJCXBpeGVsQm94U3R5bGVzVmFsID0gcm91bmRQaXhlbE1lYXN1cmVzKCBkaXZTdHlsZS5yaWdodCApID09PSAzNjsKCgkJLy8gU3VwcG9ydDogSUUgOSAtIDExIG9ubHkKCQkvLyBEZXRlY3QgbWlzcmVwb3J0aW5nIG9mIGNvbnRlbnQgZGltZW5zaW9ucyBmb3IgYm94LXNpemluZzpib3JkZXItYm94IGVsZW1lbnRzCgkJYm94U2l6aW5nUmVsaWFibGVWYWwgPSByb3VuZFBpeGVsTWVhc3VyZXMoIGRpdlN0eWxlLndpZHRoICkgPT09IDM2OwoKCQkvLyBTdXBwb3J0OiBJRSA5IG9ubHkKCQkvLyBEZXRlY3Qgb3ZlcmZsb3c6c2Nyb2xsIHNjcmV3aW5lc3MgKGdoLTM2OTkpCgkJLy8gU3VwcG9ydDogQ2hyb21lIDw9NjQKCQkvLyBEb24ndCBnZXQgdHJpY2tlZCB3aGVuIHpvb20gYWZmZWN0cyBvZmZzZXRXaWR0aCAoZ2gtNDAyOSkKCQlkaXYuc3R5bGUucG9zaXRpb24gPSAiYWJzb2x1dGUiOwoJCXNjcm9sbGJveFNpemVWYWwgPSByb3VuZFBpeGVsTWVhc3VyZXMoIGRpdi5vZmZzZXRXaWR0aCAvIDMgKSA9PT0gMTI7CgoJCWRvY3VtZW50RWxlbWVudC5yZW1vdmVDaGlsZCggY29udGFpbmVyICk7CgoJCS8vIE51bGxpZnkgdGhlIGRpdiBzbyBpdCB3b3VsZG4ndCBiZSBzdG9yZWQgaW4gdGhlIG1lbW9yeSBhbmQKCQkvLyBpdCB3aWxsIGFsc28gYmUgYSBzaWduIHRoYXQgY2hlY2tzIGFscmVhZHkgcGVyZm9ybWVkCgkJZGl2ID0gbnVsbDsKCX0KCglmdW5jdGlvbiByb3VuZFBpeGVsTWVhc3VyZXMoIG1lYXN1cmUgKSB7CgkJcmV0dXJuIE1hdGgucm91bmQoIHBhcnNlRmxvYXQoIG1lYXN1cmUgKSApOwoJfQoKCXZhciBwaXhlbFBvc2l0aW9uVmFsLCBib3hTaXppbmdSZWxpYWJsZVZhbCwgc2Nyb2xsYm94U2l6ZVZhbCwgcGl4ZWxCb3hTdHlsZXNWYWwsCgkJcmVsaWFibGVUckRpbWVuc2lvbnNWYWwsIHJlbGlhYmxlTWFyZ2luTGVmdFZhbCwKCQljb250YWluZXIgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCAiZGl2IiApLAoJCWRpdiA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoICJkaXYiICk7CgoJLy8gRmluaXNoIGVhcmx5IGluIGxpbWl0ZWQgKG5vbi1icm93c2VyKSBlbnZpcm9ubWVudHMKCWlmICggIWRpdi5zdHlsZSApIHsKCQlyZXR1cm47Cgl9CgoJLy8gU3VwcG9ydDogSUUgPD05IC0gMTEgb25seQoJLy8gU3R5bGUgb2YgY2xvbmVkIGVsZW1lbnQgYWZmZWN0cyBzb3VyY2UgZWxlbWVudCBjbG9uZWQgKHRyYWMtODkwOCkKCWRpdi5zdHlsZS5iYWNrZ3JvdW5kQ2xpcCA9ICJjb250ZW50LWJveCI7CglkaXYuY2xvbmVOb2RlKCB0cnVlICkuc3R5bGUuYmFja2dyb3VuZENsaXAgPSAiIjsKCXN1cHBvcnQuY2xlYXJDbG9uZVN0eWxlID0gZGl2LnN0eWxlLmJhY2tncm91bmRDbGlwID09PSAiY29udGVudC1ib3giOwoKCWpRdWVyeS5leHRlbmQoIHN1cHBvcnQsIHsKCQlib3hTaXppbmdSZWxpYWJsZTogZnVuY3Rpb24oKSB7CgkJCWNvbXB1dGVTdHlsZVRlc3RzKCk7CgkJCXJldHVybiBib3hTaXppbmdSZWxpYWJsZVZhbDsKCQl9LAoJCXBpeGVsQm94U3R5bGVzOiBmdW5jdGlvbigpIHsKCQkJY29tcHV0ZVN0eWxlVGVzdHMoKTsKCQkJcmV0dXJuIHBpeGVsQm94U3R5bGVzVmFsOwoJCX0sCgkJcGl4ZWxQb3NpdGlvbjogZnVuY3Rpb24oKSB7CgkJCWNvbXB1dGVTdHlsZVRlc3RzKCk7CgkJCXJldHVybiBwaXhlbFBvc2l0aW9uVmFsOwoJCX0sCgkJcmVsaWFibGVNYXJnaW5MZWZ0OiBmdW5jdGlvbigpIHsKCQkJY29tcHV0ZVN0eWxlVGVzdHMoKTsKCQkJcmV0dXJuIHJlbGlhYmxlTWFyZ2luTGVmdFZhbDsKCQl9LAoJCXNjcm9sbGJveFNpemU6IGZ1bmN0aW9uKCkgewoJCQljb21wdXRlU3R5bGVUZXN0cygpOwoJCQlyZXR1cm4gc2Nyb2xsYm94U2l6ZVZhbDsKCQl9LAoKCQkvLyBTdXBwb3J0OiBJRSA5IC0gMTErLCBFZGdlIDE1IC0gMTgrCgkJLy8gSUUvRWRnZSBtaXNyZXBvcnQgYGdldENvbXB1dGVkU3R5bGVgIG9mIHRhYmxlIHJvd3Mgd2l0aCB3aWR0aC9oZWlnaHQKCQkvLyBzZXQgaW4gQ1NTIHdoaWxlIGBvZmZzZXQqYCBwcm9wZXJ0aWVzIHJlcG9ydCBjb3JyZWN0IHZhbHVlcy4KCQkvLyBCZWhhdmlvciBpbiBJRSA5IGlzIG1vcmUgc3VidGxlIHRoYW4gaW4gbmV3ZXIgdmVyc2lvbnMgJiBpdCBwYXNzZXMKCQkvLyBzb21lIHZlcnNpb25zIG9mIHRoaXMgdGVzdDsgbWFrZSBzdXJlIG5vdCB0byBtYWtlIGl0IHBhc3MgdGhlcmUhCgkJLy8KCQkvLyBTdXBwb3J0OiBGaXJlZm94IDcwKwoJCS8vIE9ubHkgRmlyZWZveCBpbmNsdWRlcyBib3JkZXIgd2lkdGhzCgkJLy8gaW4gY29tcHV0ZWQgZGltZW5zaW9ucy4gKGdoLTQ1MjkpCgkJcmVsaWFibGVUckRpbWVuc2lvbnM6IGZ1bmN0aW9uKCkgewoJCQl2YXIgdGFibGUsIHRyLCB0ckNoaWxkLCB0clN0eWxlOwoJCQlpZiAoIHJlbGlhYmxlVHJEaW1lbnNpb25zVmFsID09IG51bGwgKSB7CgkJCQl0YWJsZSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoICJ0YWJsZSIgKTsKCQkJCXRyID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCggInRyIiApOwoJCQkJdHJDaGlsZCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoICJkaXYiICk7CgoJCQkJdGFibGUuc3R5bGUuY3NzVGV4dCA9ICJwb3NpdGlvbjphYnNvbHV0ZTtsZWZ0Oi0xMTExMXB4O2JvcmRlci1jb2xsYXBzZTpzZXBhcmF0ZSI7CgkJCQl0ci5zdHlsZS5jc3NUZXh0ID0gImJvcmRlcjoxcHggc29saWQiOwoKCQkJCS8vIFN1cHBvcnQ6IENocm9tZSA4NisKCQkJCS8vIEhlaWdodCBzZXQgdGhyb3VnaCBjc3NUZXh0IGRvZXMgbm90IGdldCBhcHBsaWVkLgoJCQkJLy8gQ29tcHV0ZWQgaGVpZ2h0IHRoZW4gY29tZXMgYmFjayBhcyAwLgoJCQkJdHIuc3R5bGUuaGVpZ2h0ID0gIjFweCI7CgkJCQl0ckNoaWxkLnN0eWxlLmhlaWdodCA9ICI5cHgiOwoKCQkJCS8vIFN1cHBvcnQ6IEFuZHJvaWQgOCBDaHJvbWUgODYrCgkJCQkvLyBJbiBvdXIgYm9keUJhY2tncm91bmQuaHRtbCBpZnJhbWUsCgkJCQkvLyBkaXNwbGF5IGZvciBhbGwgZGl2IGVsZW1lbnRzIGlzIHNldCB0byAiaW5saW5lIiwKCQkJCS8vIHdoaWNoIGNhdXNlcyBhIHByb2JsZW0gb25seSBpbiBBbmRyb2lkIDggQ2hyb21lIDg2LgoJCQkJLy8gRW5zdXJpbmcgdGhlIGRpdiBpcyBkaXNwbGF5OiBibG9jawoJCQkJLy8gZ2V0cyBhcm91bmQgdGhpcyBpc3N1ZS4KCQkJCXRyQ2hpbGQuc3R5bGUuZGlzcGxheSA9ICJibG9jayI7CgoJCQkJZG9jdW1lbnRFbGVtZW50CgkJCQkJLmFwcGVuZENoaWxkKCB0YWJsZSApCgkJCQkJLmFwcGVuZENoaWxkKCB0ciApCgkJCQkJLmFwcGVuZENoaWxkKCB0ckNoaWxkICk7CgoJCQkJdHJTdHlsZSA9IHdpbmRvdy5nZXRDb21wdXRlZFN0eWxlKCB0ciApOwoJCQkJcmVsaWFibGVUckRpbWVuc2lvbnNWYWwgPSAoIHBhcnNlSW50KCB0clN0eWxlLmhlaWdodCwgMTAgKSArCgkJCQkJcGFyc2VJbnQoIHRyU3R5bGUuYm9yZGVyVG9wV2lkdGgsIDEwICkgKwoJCQkJCXBhcnNlSW50KCB0clN0eWxlLmJvcmRlckJvdHRvbVdpZHRoLCAxMCApICkgPT09IHRyLm9mZnNldEhlaWdodDsKCgkJCQlkb2N1bWVudEVsZW1lbnQucmVtb3ZlQ2hpbGQoIHRhYmxlICk7CgkJCX0KCQkJcmV0dXJuIHJlbGlhYmxlVHJEaW1lbnNpb25zVmFsOwoJCX0KCX0gKTsKfSApKCk7CgoKZnVuY3Rpb24gY3VyQ1NTKCBlbGVtLCBuYW1lLCBjb21wdXRlZCApIHsKCXZhciB3aWR0aCwgbWluV2lkdGgsIG1heFdpZHRoLCByZXQsCgkJaXNDdXN0b21Qcm9wID0gcmN1c3RvbVByb3AudGVzdCggbmFtZSApLAoKCQkvLyBTdXBwb3J0OiBGaXJlZm94IDUxKwoJCS8vIFJldHJpZXZpbmcgc3R5bGUgYmVmb3JlIGNvbXB1dGVkIHNvbWVob3cKCQkvLyBmaXhlcyBhbiBpc3N1ZSB3aXRoIGdldHRpbmcgd3JvbmcgdmFsdWVzCgkJLy8gb24gZGV0YWNoZWQgZWxlbWVudHMKCQlzdHlsZSA9IGVsZW0uc3R5bGU7CgoJY29tcHV0ZWQgPSBjb21wdXRlZCB8fCBnZXRTdHlsZXMoIGVsZW0gKTsKCgkvLyBnZXRQcm9wZXJ0eVZhbHVlIGlzIG5lZWRlZCBmb3I6CgkvLyAgIC5jc3MoJ2ZpbHRlcicpIChJRSA5IG9ubHksIHRyYWMtMTI1MzcpCgkvLyAgIC5jc3MoJy0tY3VzdG9tUHJvcGVydHkpIChnaC0zMTQ0KQoJaWYgKCBjb21wdXRlZCApIHsKCgkJLy8gU3VwcG9ydDogSUUgPD05IC0gMTErCgkJLy8gSUUgb25seSBzdXBwb3J0cyBgImZsb2F0ImAgaW4gYGdldFByb3BlcnR5VmFsdWVgOyBpbiBjb21wdXRlZCBzdHlsZXMKCQkvLyBpdCdzIG9ubHkgYXZhaWxhYmxlIGFzIGAiY3NzRmxvYXQiYC4gV2Ugbm8gbG9uZ2VyIG1vZGlmeSBwcm9wZXJ0aWVzCgkJLy8gc2VudCB0byBgLmNzcygpYCBhcGFydCBmcm9tIGNhbWVsQ2FzaW5nLCBzbyB3ZSBuZWVkIHRvIGNoZWNrIGJvdGguCgkJLy8gTm9ybWFsbHksIHRoaXMgd291bGQgY3JlYXRlIGRpZmZlcmVuY2UgaW4gYmVoYXZpb3I6IGlmCgkJLy8gYGdldFByb3BlcnR5VmFsdWVgIHJldHVybnMgYW4gZW1wdHkgc3RyaW5nLCB0aGUgdmFsdWUgcmV0dXJuZWQKCQkvLyBieSBgLmNzcygpYCB3b3VsZCBiZSBgdW5kZWZpbmVkYC4gVGhpcyBpcyB1c3VhbGx5IHRoZSBjYXNlIGZvcgoJCS8vIGRpc2Nvbm5lY3RlZCBlbGVtZW50cy4gSG93ZXZlciwgaW4gSUUgZXZlbiBkaXNjb25uZWN0ZWQgZWxlbWVudHMKCQkvLyB3aXRoIG5vIHN0eWxlcyByZXR1cm4gYCJub25lImAgZm9yIGBnZXRQcm9wZXJ0eVZhbHVlKCAiZmxvYXQiIClgCgkJcmV0ID0gY29tcHV0ZWQuZ2V0UHJvcGVydHlWYWx1ZSggbmFtZSApIHx8IGNvbXB1dGVkWyBuYW1lIF07CgoJCWlmICggaXNDdXN0b21Qcm9wICYmIHJldCApIHsKCgkJCS8vIFN1cHBvcnQ6IEZpcmVmb3ggMTA1KywgQ2hyb21lIDw9MTA1KwoJCQkvLyBTcGVjIHJlcXVpcmVzIHRyaW1taW5nIHdoaXRlc3BhY2UgZm9yIGN1c3RvbSBwcm9wZXJ0aWVzIChnaC00OTI2KS4KCQkJLy8gRmlyZWZveCBvbmx5IHRyaW1zIGxlYWRpbmcgd2hpdGVzcGFjZS4gQ2hyb21lIGp1c3QgY29sbGFwc2VzCgkJCS8vIGJvdGggbGVhZGluZyAmIHRyYWlsaW5nIHdoaXRlc3BhY2UgdG8gYSBzaW5nbGUgc3BhY2UuCgkJCS8vCgkJCS8vIEZhbGwgYmFjayB0byBgdW5kZWZpbmVkYCBpZiBlbXB0eSBzdHJpbmcgcmV0dXJuZWQuCgkJCS8vIFRoaXMgY29sbGFwc2VzIGEgbWlzc2luZyBkZWZpbml0aW9uIHdpdGggcHJvcGVydHkgZGVmaW5lZAoJCQkvLyBhbmQgc2V0IHRvIGFuIGVtcHR5IHN0cmluZyBidXQgdGhlcmUncyBubyBzdGFuZGFyZCBBUEkKCQkJLy8gYWxsb3dpbmcgdXMgdG8gZGlmZmVyZW50aWF0ZSB0aGVtIHdpdGhvdXQgYSBwZXJmb3JtYW5jZSBwZW5hbHR5CgkJCS8vIGFuZCByZXR1cm5pbmcgYHVuZGVmaW5lZGAgYWxpZ25zIHdpdGggb2xkZXIgalF1ZXJ5LgoJCQkvLwoJCQkvLyBydHJpbUNTUyB0cmVhdHMgVSswMDBEIENBUlJJQUdFIFJFVFVSTiBhbmQgVSswMDBDIEZPUk0gRkVFRAoJCQkvLyBhcyB3aGl0ZXNwYWNlIHdoaWxlIENTUyBkb2VzIG5vdCwgYnV0IHRoaXMgaXMgbm90IGEgcHJvYmxlbQoJCQkvLyBiZWNhdXNlIENTUyBwcmVwcm9jZXNzaW5nIHJlcGxhY2VzIHRoZW0gd2l0aCBVKzAwMEEgTElORSBGRUVECgkJCS8vICh3aGljaCAqaXMqIENTUyB3aGl0ZXNwYWNlKQoJCQkvLyBodHRwczovL3d3dy53My5vcmcvVFIvY3NzLXN5bnRheC0zLyNpbnB1dC1wcmVwcm9jZXNzaW5nCgkJCXJldCA9IHJldC5yZXBsYWNlKCBydHJpbUNTUywgIiQxIiApIHx8IHVuZGVmaW5lZDsKCQl9CgoJCWlmICggcmV0ID09PSAiIiAmJiAhaXNBdHRhY2hlZCggZWxlbSApICkgewoJCQlyZXQgPSBqUXVlcnkuc3R5bGUoIGVsZW0sIG5hbWUgKTsKCQl9CgoJCS8vIEEgdHJpYnV0ZSB0byB0aGUgImF3ZXNvbWUgaGFjayBieSBEZWFuIEVkd2FyZHMiCgkJLy8gQW5kcm9pZCBCcm93c2VyIHJldHVybnMgcGVyY2VudGFnZSBmb3Igc29tZSB2YWx1ZXMsCgkJLy8gYnV0IHdpZHRoIHNlZW1zIHRvIGJlIHJlbGlhYmx5IHBpeGVscy4KCQkvLyBUaGlzIGlzIGFnYWluc3QgdGhlIENTU09NIGRyYWZ0IHNwZWM6CgkJLy8gaHR0cHM6Ly9kcmFmdHMuY3Nzd2cub3JnL2Nzc29tLyNyZXNvbHZlZC12YWx1ZXMKCQlpZiAoICFzdXBwb3J0LnBpeGVsQm94U3R5bGVzKCkgJiYgcm51bW5vbnB4LnRlc3QoIHJldCApICYmIHJib3hTdHlsZS50ZXN0KCBuYW1lICkgKSB7CgoJCQkvLyBSZW1lbWJlciB0aGUgb3JpZ2luYWwgdmFsdWVzCgkJCXdpZHRoID0gc3R5bGUud2lkdGg7CgkJCW1pbldpZHRoID0gc3R5bGUubWluV2lkdGg7CgkJCW1heFdpZHRoID0gc3R5bGUubWF4V2lkdGg7CgoJCQkvLyBQdXQgaW4gdGhlIG5ldyB2YWx1ZXMgdG8gZ2V0IGEgY29tcHV0ZWQgdmFsdWUgb3V0CgkJCXN0eWxlLm1pbldpZHRoID0gc3R5bGUubWF4V2lkdGggPSBzdHlsZS53aWR0aCA9IHJldDsKCQkJcmV0ID0gY29tcHV0ZWQud2lkdGg7CgoJCQkvLyBSZXZlcnQgdGhlIGNoYW5nZWQgdmFsdWVzCgkJCXN0eWxlLndpZHRoID0gd2lkdGg7CgkJCXN0eWxlLm1pbldpZHRoID0gbWluV2lkdGg7CgkJCXN0eWxlLm1heFdpZHRoID0gbWF4V2lkdGg7CgkJfQoJfQoKCXJldHVybiByZXQgIT09IHVuZGVmaW5lZCA/CgoJCS8vIFN1cHBvcnQ6IElFIDw9OSAtIDExIG9ubHkKCQkvLyBJRSByZXR1cm5zIHpJbmRleCB2YWx1ZSBhcyBhbiBpbnRlZ2VyLgoJCXJldCArICIiIDoKCQlyZXQ7Cn0KCgpmdW5jdGlvbiBhZGRHZXRIb29rSWYoIGNvbmRpdGlvbkZuLCBob29rRm4gKSB7CgoJLy8gRGVmaW5lIHRoZSBob29rLCB3ZSdsbCBjaGVjayBvbiB0aGUgZmlyc3QgcnVuIGlmIGl0J3MgcmVhbGx5IG5lZWRlZC4KCXJldHVybiB7CgkJZ2V0OiBmdW5jdGlvbigpIHsKCQkJaWYgKCBjb25kaXRpb25GbigpICkgewoKCQkJCS8vIEhvb2sgbm90IG5lZWRlZCAob3IgaXQncyBub3QgcG9zc2libGUgdG8gdXNlIGl0IGR1ZQoJCQkJLy8gdG8gbWlzc2luZyBkZXBlbmRlbmN5KSwgcmVtb3ZlIGl0LgoJCQkJZGVsZXRlIHRoaXMuZ2V0OwoJCQkJcmV0dXJuOwoJCQl9CgoJCQkvLyBIb29rIG5lZWRlZDsgcmVkZWZpbmUgaXQgc28gdGhhdCB0aGUgc3VwcG9ydCB0ZXN0IGlzIG5vdCBleGVjdXRlZCBhZ2Fpbi4KCQkJcmV0dXJuICggdGhpcy5nZXQgPSBob29rRm4gKS5hcHBseSggdGhpcywgYXJndW1lbnRzICk7CgkJfQoJfTsKfQoKCnZhciBjc3NQcmVmaXhlcyA9IFsgIldlYmtpdCIsICJNb3oiLCAibXMiIF0sCgllbXB0eVN0eWxlID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCggImRpdiIgKS5zdHlsZSwKCXZlbmRvclByb3BzID0ge307CgovLyBSZXR1cm4gYSB2ZW5kb3ItcHJlZml4ZWQgcHJvcGVydHkgb3IgdW5kZWZpbmVkCmZ1bmN0aW9uIHZlbmRvclByb3BOYW1lKCBuYW1lICkgewoKCS8vIENoZWNrIGZvciB2ZW5kb3IgcHJlZml4ZWQgbmFtZXMKCXZhciBjYXBOYW1lID0gbmFtZVsgMCBdLnRvVXBwZXJDYXNlKCkgKyBuYW1lLnNsaWNlKCAxICksCgkJaSA9IGNzc1ByZWZpeGVzLmxlbmd0aDsKCgl3aGlsZSAoIGktLSApIHsKCQluYW1lID0gY3NzUHJlZml4ZXNbIGkgXSArIGNhcE5hbWU7CgkJaWYgKCBuYW1lIGluIGVtcHR5U3R5bGUgKSB7CgkJCXJldHVybiBuYW1lOwoJCX0KCX0KfQoKLy8gUmV0dXJuIGEgcG90ZW50aWFsbHktbWFwcGVkIGpRdWVyeS5jc3NQcm9wcyBvciB2ZW5kb3IgcHJlZml4ZWQgcHJvcGVydHkKZnVuY3Rpb24gZmluYWxQcm9wTmFtZSggbmFtZSApIHsKCXZhciBmaW5hbCA9IGpRdWVyeS5jc3NQcm9wc1sgbmFtZSBdIHx8IHZlbmRvclByb3BzWyBuYW1lIF07CgoJaWYgKCBmaW5hbCApIHsKCQlyZXR1cm4gZmluYWw7Cgl9CglpZiAoIG5hbWUgaW4gZW1wdHlTdHlsZSApIHsKCQlyZXR1cm4gbmFtZTsKCX0KCXJldHVybiB2ZW5kb3JQcm9wc1sgbmFtZSBdID0gdmVuZG9yUHJvcE5hbWUoIG5hbWUgKSB8fCBuYW1lOwp9CgoKdmFyCgoJLy8gU3dhcHBhYmxlIGlmIGRpc3BsYXkgaXMgbm9uZSBvciBzdGFydHMgd2l0aCB0YWJsZQoJLy8gZXhjZXB0ICJ0YWJsZSIsICJ0YWJsZS1jZWxsIiwgb3IgInRhYmxlLWNhcHRpb24iCgkvLyBTZWUgaGVyZSBmb3IgZGlzcGxheSB2YWx1ZXM6IGh0dHBzOi8vZGV2ZWxvcGVyLm1vemlsbGEub3JnL2VuLVVTL2RvY3MvQ1NTL2Rpc3BsYXkKCXJkaXNwbGF5c3dhcCA9IC9eKG5vbmV8dGFibGUoPyEtY1tlYV0pLispLywKCWNzc1Nob3cgPSB7IHBvc2l0aW9uOiAiYWJzb2x1dGUiLCB2aXNpYmlsaXR5OiAiaGlkZGVuIiwgZGlzcGxheTogImJsb2NrIiB9LAoJY3NzTm9ybWFsVHJhbnNmb3JtID0gewoJCWxldHRlclNwYWNpbmc6ICIwIiwKCQlmb250V2VpZ2h0OiAiNDAwIgoJfTsKCmZ1bmN0aW9uIHNldFBvc2l0aXZlTnVtYmVyKCBfZWxlbSwgdmFsdWUsIHN1YnRyYWN0ICkgewoKCS8vIEFueSByZWxhdGl2ZSAoKy8tKSB2YWx1ZXMgaGF2ZSBhbHJlYWR5IGJlZW4KCS8vIG5vcm1hbGl6ZWQgYXQgdGhpcyBwb2ludAoJdmFyIG1hdGNoZXMgPSByY3NzTnVtLmV4ZWMoIHZhbHVlICk7CglyZXR1cm4gbWF0Y2hlcyA/CgoJCS8vIEd1YXJkIGFnYWluc3QgdW5kZWZpbmVkICJzdWJ0cmFjdCIsIGUuZy4sIHdoZW4gdXNlZCBhcyBpbiBjc3NIb29rcwoJCU1hdGgubWF4KCAwLCBtYXRjaGVzWyAyIF0gLSAoIHN1YnRyYWN0IHx8IDAgKSApICsgKCBtYXRjaGVzWyAzIF0gfHwgInB4IiApIDoKCQl2YWx1ZTsKfQoKZnVuY3Rpb24gYm94TW9kZWxBZGp1c3RtZW50KCBlbGVtLCBkaW1lbnNpb24sIGJveCwgaXNCb3JkZXJCb3gsIHN0eWxlcywgY29tcHV0ZWRWYWwgKSB7Cgl2YXIgaSA9IGRpbWVuc2lvbiA9PT0gIndpZHRoIiA/IDEgOiAwLAoJCWV4dHJhID0gMCwKCQlkZWx0YSA9IDA7CgoJLy8gQWRqdXN0bWVudCBtYXkgbm90IGJlIG5lY2Vzc2FyeQoJaWYgKCBib3ggPT09ICggaXNCb3JkZXJCb3ggPyAiYm9yZGVyIiA6ICJjb250ZW50IiApICkgewoJCXJldHVybiAwOwoJfQoKCWZvciAoIDsgaSA8IDQ7IGkgKz0gMiApIHsKCgkJLy8gQm90aCBib3ggbW9kZWxzIGV4Y2x1ZGUgbWFyZ2luCgkJaWYgKCBib3ggPT09ICJtYXJnaW4iICkgewoJCQlkZWx0YSArPSBqUXVlcnkuY3NzKCBlbGVtLCBib3ggKyBjc3NFeHBhbmRbIGkgXSwgdHJ1ZSwgc3R5bGVzICk7CgkJfQoKCQkvLyBJZiB3ZSBnZXQgaGVyZSB3aXRoIGEgY29udGVudC1ib3gsIHdlJ3JlIHNlZWtpbmcgInBhZGRpbmciIG9yICJib3JkZXIiIG9yICJtYXJnaW4iCgkJaWYgKCAhaXNCb3JkZXJCb3ggKSB7CgoJCQkvLyBBZGQgcGFkZGluZwoJCQlkZWx0YSArPSBqUXVlcnkuY3NzKCBlbGVtLCAicGFkZGluZyIgKyBjc3NFeHBhbmRbIGkgXSwgdHJ1ZSwgc3R5bGVzICk7CgoJCQkvLyBGb3IgImJvcmRlciIgb3IgIm1hcmdpbiIsIGFkZCBib3JkZXIKCQkJaWYgKCBib3ggIT09ICJwYWRkaW5nIiApIHsKCQkJCWRlbHRhICs9IGpRdWVyeS5jc3MoIGVsZW0sICJib3JkZXIiICsgY3NzRXhwYW5kWyBpIF0gKyAiV2lkdGgiLCB0cnVlLCBzdHlsZXMgKTsKCgkJCS8vIEJ1dCBzdGlsbCBrZWVwIHRyYWNrIG9mIGl0IG90aGVyd2lzZQoJCQl9IGVsc2UgewoJCQkJZXh0cmEgKz0galF1ZXJ5LmNzcyggZWxlbSwgImJvcmRlciIgKyBjc3NFeHBhbmRbIGkgXSArICJXaWR0aCIsIHRydWUsIHN0eWxlcyApOwoJCQl9CgoJCS8vIElmIHdlIGdldCBoZXJlIHdpdGggYSBib3JkZXItYm94IChjb250ZW50ICsgcGFkZGluZyArIGJvcmRlciksIHdlJ3JlIHNlZWtpbmcgImNvbnRlbnQiIG9yCgkJLy8gInBhZGRpbmciIG9yICJtYXJnaW4iCgkJfSBlbHNlIHsKCgkJCS8vIEZvciAiY29udGVudCIsIHN1YnRyYWN0IHBhZGRpbmcKCQkJaWYgKCBib3ggPT09ICJjb250ZW50IiApIHsKCQkJCWRlbHRhIC09IGpRdWVyeS5jc3MoIGVsZW0sICJwYWRkaW5nIiArIGNzc0V4cGFuZFsgaSBdLCB0cnVlLCBzdHlsZXMgKTsKCQkJfQoKCQkJLy8gRm9yICJjb250ZW50IiBvciAicGFkZGluZyIsIHN1YnRyYWN0IGJvcmRlcgoJCQlpZiAoIGJveCAhPT0gIm1hcmdpbiIgKSB7CgkJCQlkZWx0YSAtPSBqUXVlcnkuY3NzKCBlbGVtLCAiYm9yZGVyIiArIGNzc0V4cGFuZFsgaSBdICsgIldpZHRoIiwgdHJ1ZSwgc3R5bGVzICk7CgkJCX0KCQl9Cgl9CgoJLy8gQWNjb3VudCBmb3IgcG9zaXRpdmUgY29udGVudC1ib3ggc2Nyb2xsIGd1dHRlciB3aGVuIHJlcXVlc3RlZCBieSBwcm92aWRpbmcgY29tcHV0ZWRWYWwKCWlmICggIWlzQm9yZGVyQm94ICYmIGNvbXB1dGVkVmFsID49IDAgKSB7CgoJCS8vIG9mZnNldFdpZHRoL29mZnNldEhlaWdodCBpcyBhIHJvdW5kZWQgc3VtIG9mIGNvbnRlbnQsIHBhZGRpbmcsIHNjcm9sbCBndXR0ZXIsIGFuZCBib3JkZXIKCQkvLyBBc3N1bWluZyBpbnRlZ2VyIHNjcm9sbCBndXR0ZXIsIHN1YnRyYWN0IHRoZSByZXN0IGFuZCByb3VuZCBkb3duCgkJZGVsdGEgKz0gTWF0aC5tYXgoIDAsIE1hdGguY2VpbCgKCQkJZWxlbVsgIm9mZnNldCIgKyBkaW1lbnNpb25bIDAgXS50b1VwcGVyQ2FzZSgpICsgZGltZW5zaW9uLnNsaWNlKCAxICkgXSAtCgkJCWNvbXB1dGVkVmFsIC0KCQkJZGVsdGEgLQoJCQlleHRyYSAtCgkJCTAuNQoKCQkvLyBJZiBvZmZzZXRXaWR0aC9vZmZzZXRIZWlnaHQgaXMgdW5rbm93biwgdGhlbiB3ZSBjYW4ndCBkZXRlcm1pbmUgY29udGVudC1ib3ggc2Nyb2xsIGd1dHRlcgoJCS8vIFVzZSBhbiBleHBsaWNpdCB6ZXJvIHRvIGF2b2lkIE5hTiAoZ2gtMzk2NCkKCQkpICkgfHwgMDsKCX0KCglyZXR1cm4gZGVsdGE7Cn0KCmZ1bmN0aW9uIGdldFdpZHRoT3JIZWlnaHQoIGVsZW0sIGRpbWVuc2lvbiwgZXh0cmEgKSB7CgoJLy8gU3RhcnQgd2l0aCBjb21wdXRlZCBzdHlsZQoJdmFyIHN0eWxlcyA9IGdldFN0eWxlcyggZWxlbSApLAoKCQkvLyBUbyBhdm9pZCBmb3JjaW5nIGEgcmVmbG93LCBvbmx5IGZldGNoIGJveFNpemluZyBpZiB3ZSBuZWVkIGl0IChnaC00MzIyKS4KCQkvLyBGYWtlIGNvbnRlbnQtYm94IHVudGlsIHdlIGtub3cgaXQncyBuZWVkZWQgdG8ga25vdyB0aGUgdHJ1ZSB2YWx1ZS4KCQlib3hTaXppbmdOZWVkZWQgPSAhc3VwcG9ydC5ib3hTaXppbmdSZWxpYWJsZSgpIHx8IGV4dHJhLAoJCWlzQm9yZGVyQm94ID0gYm94U2l6aW5nTmVlZGVkICYmCgkJCWpRdWVyeS5jc3MoIGVsZW0sICJib3hTaXppbmciLCBmYWxzZSwgc3R5bGVzICkgPT09ICJib3JkZXItYm94IiwKCQl2YWx1ZUlzQm9yZGVyQm94ID0gaXNCb3JkZXJCb3gsCgoJCXZhbCA9IGN1ckNTUyggZWxlbSwgZGltZW5zaW9uLCBzdHlsZXMgKSwKCQlvZmZzZXRQcm9wID0gIm9mZnNldCIgKyBkaW1lbnNpb25bIDAgXS50b1VwcGVyQ2FzZSgpICsgZGltZW5zaW9uLnNsaWNlKCAxICk7CgoJLy8gU3VwcG9ydDogRmlyZWZveCA8PTU0CgkvLyBSZXR1cm4gYSBjb25mb3VuZGluZyBub24tcGl4ZWwgdmFsdWUgb3IgZmVpZ24gaWdub3JhbmNlLCBhcyBhcHByb3ByaWF0ZS4KCWlmICggcm51bW5vbnB4LnRlc3QoIHZhbCApICkgewoJCWlmICggIWV4dHJhICkgewoJCQlyZXR1cm4gdmFsOwoJCX0KCQl2YWwgPSAiYXV0byI7Cgl9CgoKCS8vIFN1cHBvcnQ6IElFIDkgLSAxMSBvbmx5CgkvLyBVc2Ugb2Zmc2V0V2lkdGgvb2Zmc2V0SGVpZ2h0IGZvciB3aGVuIGJveCBzaXppbmcgaXMgdW5yZWxpYWJsZS4KCS8vIEluIHRob3NlIGNhc2VzLCB0aGUgY29tcHV0ZWQgdmFsdWUgY2FuIGJlIHRydXN0ZWQgdG8gYmUgYm9yZGVyLWJveC4KCWlmICggKCAhc3VwcG9ydC5ib3hTaXppbmdSZWxpYWJsZSgpICYmIGlzQm9yZGVyQm94IHx8CgoJCS8vIFN1cHBvcnQ6IElFIDEwIC0gMTErLCBFZGdlIDE1IC0gMTgrCgkJLy8gSUUvRWRnZSBtaXNyZXBvcnQgYGdldENvbXB1dGVkU3R5bGVgIG9mIHRhYmxlIHJvd3Mgd2l0aCB3aWR0aC9oZWlnaHQKCQkvLyBzZXQgaW4gQ1NTIHdoaWxlIGBvZmZzZXQqYCBwcm9wZXJ0aWVzIHJlcG9ydCBjb3JyZWN0IHZhbHVlcy4KCQkvLyBJbnRlcmVzdGluZ2x5LCBpbiBzb21lIGNhc2VzIElFIDkgZG9lc24ndCBzdWZmZXIgZnJvbSB0aGlzIGlzc3VlLgoJCSFzdXBwb3J0LnJlbGlhYmxlVHJEaW1lbnNpb25zKCkgJiYgbm9kZU5hbWUoIGVsZW0sICJ0ciIgKSB8fAoKCQkvLyBGYWxsIGJhY2sgdG8gb2Zmc2V0V2lkdGgvb2Zmc2V0SGVpZ2h0IHdoZW4gdmFsdWUgaXMgImF1dG8iCgkJLy8gVGhpcyBoYXBwZW5zIGZvciBpbmxpbmUgZWxlbWVudHMgd2l0aCBubyBleHBsaWNpdCBzZXR0aW5nIChnaC0zNTcxKQoJCXZhbCA9PT0gImF1dG8iIHx8CgoJCS8vIFN1cHBvcnQ6IEFuZHJvaWQgPD00LjEgLSA0LjMgb25seQoJCS8vIEFsc28gdXNlIG9mZnNldFdpZHRoL29mZnNldEhlaWdodCBmb3IgbWlzcmVwb3J0ZWQgaW5saW5lIGRpbWVuc2lvbnMgKGdoLTM2MDIpCgkJIXBhcnNlRmxvYXQoIHZhbCApICYmIGpRdWVyeS5jc3MoIGVsZW0sICJkaXNwbGF5IiwgZmFsc2UsIHN0eWxlcyApID09PSAiaW5saW5lIiApICYmCgoJCS8vIE1ha2Ugc3VyZSB0aGUgZWxlbWVudCBpcyB2aXNpYmxlICYgY29ubmVjdGVkCgkJZWxlbS5nZXRDbGllbnRSZWN0cygpLmxlbmd0aCApIHsKCgkJaXNCb3JkZXJCb3ggPSBqUXVlcnkuY3NzKCBlbGVtLCAiYm94U2l6aW5nIiwgZmFsc2UsIHN0eWxlcyApID09PSAiYm9yZGVyLWJveCI7CgoJCS8vIFdoZXJlIGF2YWlsYWJsZSwgb2Zmc2V0V2lkdGgvb2Zmc2V0SGVpZ2h0IGFwcHJveGltYXRlIGJvcmRlciBib3ggZGltZW5zaW9ucy4KCQkvLyBXaGVyZSBub3QgYXZhaWxhYmxlIChlLmcuLCBTVkcpLCBhc3N1bWUgdW5yZWxpYWJsZSBib3gtc2l6aW5nIGFuZCBpbnRlcnByZXQgdGhlCgkJLy8gcmV0cmlldmVkIHZhbHVlIGFzIGEgY29udGVudCBib3ggZGltZW5zaW9uLgoJCXZhbHVlSXNCb3JkZXJCb3ggPSBvZmZzZXRQcm9wIGluIGVsZW07CgkJaWYgKCB2YWx1ZUlzQm9yZGVyQm94ICkgewoJCQl2YWwgPSBlbGVtWyBvZmZzZXRQcm9wIF07CgkJfQoJfQoKCS8vIE5vcm1hbGl6ZSAiIiBhbmQgYXV0bwoJdmFsID0gcGFyc2VGbG9hdCggdmFsICkgfHwgMDsKCgkvLyBBZGp1c3QgZm9yIHRoZSBlbGVtZW50J3MgYm94IG1vZGVsCglyZXR1cm4gKCB2YWwgKwoJCWJveE1vZGVsQWRqdXN0bWVudCgKCQkJZWxlbSwKCQkJZGltZW5zaW9uLAoJCQlleHRyYSB8fCAoIGlzQm9yZGVyQm94ID8gImJvcmRlciIgOiAiY29udGVudCIgKSwKCQkJdmFsdWVJc0JvcmRlckJveCwKCQkJc3R5bGVzLAoKCQkJLy8gUHJvdmlkZSB0aGUgY3VycmVudCBjb21wdXRlZCBzaXplIHRvIHJlcXVlc3Qgc2Nyb2xsIGd1dHRlciBjYWxjdWxhdGlvbiAoZ2gtMzU4OSkKCQkJdmFsCgkJKQoJKSArICJweCI7Cn0KCmpRdWVyeS5leHRlbmQoIHsKCgkvLyBBZGQgaW4gc3R5bGUgcHJvcGVydHkgaG9va3MgZm9yIG92ZXJyaWRpbmcgdGhlIGRlZmF1bHQKCS8vIGJlaGF2aW9yIG9mIGdldHRpbmcgYW5kIHNldHRpbmcgYSBzdHlsZSBwcm9wZXJ0eQoJY3NzSG9va3M6IHsKCQlvcGFjaXR5OiB7CgkJCWdldDogZnVuY3Rpb24oIGVsZW0sIGNvbXB1dGVkICkgewoJCQkJaWYgKCBjb21wdXRlZCApIHsKCgkJCQkJLy8gV2Ugc2hvdWxkIGFsd2F5cyBnZXQgYSBudW1iZXIgYmFjayBmcm9tIG9wYWNpdHkKCQkJCQl2YXIgcmV0ID0gY3VyQ1NTKCBlbGVtLCAib3BhY2l0eSIgKTsKCQkJCQlyZXR1cm4gcmV0ID09PSAiIiA/ICIxIiA6IHJldDsKCQkJCX0KCQkJfQoJCX0KCX0sCgoJLy8gRG9uJ3QgYXV0b21hdGljYWxseSBhZGQgInB4IiB0byB0aGVzZSBwb3NzaWJseS11bml0bGVzcyBwcm9wZXJ0aWVzCgljc3NOdW1iZXI6IHsKCQkiYW5pbWF0aW9uSXRlcmF0aW9uQ291bnQiOiB0cnVlLAoJCSJjb2x1bW5Db3VudCI6IHRydWUsCgkJImZpbGxPcGFjaXR5IjogdHJ1ZSwKCQkiZmxleEdyb3ciOiB0cnVlLAoJCSJmbGV4U2hyaW5rIjogdHJ1ZSwKCQkiZm9udFdlaWdodCI6IHRydWUsCgkJImdyaWRBcmVhIjogdHJ1ZSwKCQkiZ3JpZENvbHVtbiI6IHRydWUsCgkJImdyaWRDb2x1bW5FbmQiOiB0cnVlLAoJCSJncmlkQ29sdW1uU3RhcnQiOiB0cnVlLAoJCSJncmlkUm93IjogdHJ1ZSwKCQkiZ3JpZFJvd0VuZCI6IHRydWUsCgkJImdyaWRSb3dTdGFydCI6IHRydWUsCgkJImxpbmVIZWlnaHQiOiB0cnVlLAoJCSJvcGFjaXR5IjogdHJ1ZSwKCQkib3JkZXIiOiB0cnVlLAoJCSJvcnBoYW5zIjogdHJ1ZSwKCQkid2lkb3dzIjogdHJ1ZSwKCQkiekluZGV4IjogdHJ1ZSwKCQkiem9vbSI6IHRydWUKCX0sCgoJLy8gQWRkIGluIHByb3BlcnRpZXMgd2hvc2UgbmFtZXMgeW91IHdpc2ggdG8gZml4IGJlZm9yZQoJLy8gc2V0dGluZyBvciBnZXR0aW5nIHRoZSB2YWx1ZQoJY3NzUHJvcHM6IHt9LAoKCS8vIEdldCBhbmQgc2V0IHRoZSBzdHlsZSBwcm9wZXJ0eSBvbiBhIERPTSBOb2RlCglzdHlsZTogZnVuY3Rpb24oIGVsZW0sIG5hbWUsIHZhbHVlLCBleHRyYSApIHsKCgkJLy8gRG9uJ3Qgc2V0IHN0eWxlcyBvbiB0ZXh0IGFuZCBjb21tZW50IG5vZGVzCgkJaWYgKCAhZWxlbSB8fCBlbGVtLm5vZGVUeXBlID09PSAzIHx8IGVsZW0ubm9kZVR5cGUgPT09IDggfHwgIWVsZW0uc3R5bGUgKSB7CgkJCXJldHVybjsKCQl9CgoJCS8vIE1ha2Ugc3VyZSB0aGF0IHdlJ3JlIHdvcmtpbmcgd2l0aCB0aGUgcmlnaHQgbmFtZQoJCXZhciByZXQsIHR5cGUsIGhvb2tzLAoJCQlvcmlnTmFtZSA9IGNhbWVsQ2FzZSggbmFtZSApLAoJCQlpc0N1c3RvbVByb3AgPSByY3VzdG9tUHJvcC50ZXN0KCBuYW1lICksCgkJCXN0eWxlID0gZWxlbS5zdHlsZTsKCgkJLy8gTWFrZSBzdXJlIHRoYXQgd2UncmUgd29ya2luZyB3aXRoIHRoZSByaWdodCBuYW1lLiBXZSBkb24ndAoJCS8vIHdhbnQgdG8gcXVlcnkgdGhlIHZhbHVlIGlmIGl0IGlzIGEgQ1NTIGN1c3RvbSBwcm9wZXJ0eQoJCS8vIHNpbmNlIHRoZXkgYXJlIHVzZXItZGVmaW5lZC4KCQlpZiAoICFpc0N1c3RvbVByb3AgKSB7CgkJCW5hbWUgPSBmaW5hbFByb3BOYW1lKCBvcmlnTmFtZSApOwoJCX0KCgkJLy8gR2V0cyBob29rIGZvciB0aGUgcHJlZml4ZWQgdmVyc2lvbiwgdGhlbiB1bnByZWZpeGVkIHZlcnNpb24KCQlob29rcyA9IGpRdWVyeS5jc3NIb29rc1sgbmFtZSBdIHx8IGpRdWVyeS5jc3NIb29rc1sgb3JpZ05hbWUgXTsKCgkJLy8gQ2hlY2sgaWYgd2UncmUgc2V0dGluZyBhIHZhbHVlCgkJaWYgKCB2YWx1ZSAhPT0gdW5kZWZpbmVkICkgewoJCQl0eXBlID0gdHlwZW9mIHZhbHVlOwoKCQkJLy8gQ29udmVydCAiKz0iIG9yICItPSIgdG8gcmVsYXRpdmUgbnVtYmVycyAodHJhYy03MzQ1KQoJCQlpZiAoIHR5cGUgPT09ICJzdHJpbmciICYmICggcmV0ID0gcmNzc051bS5leGVjKCB2YWx1ZSApICkgJiYgcmV0WyAxIF0gKSB7CgkJCQl2YWx1ZSA9IGFkanVzdENTUyggZWxlbSwgbmFtZSwgcmV0ICk7CgoJCQkJLy8gRml4ZXMgYnVnIHRyYWMtOTIzNwoJCQkJdHlwZSA9ICJudW1iZXIiOwoJCQl9CgoJCQkvLyBNYWtlIHN1cmUgdGhhdCBudWxsIGFuZCBOYU4gdmFsdWVzIGFyZW4ndCBzZXQgKHRyYWMtNzExNikKCQkJaWYgKCB2YWx1ZSA9PSBudWxsIHx8IHZhbHVlICE9PSB2YWx1ZSApIHsKCQkJCXJldHVybjsKCQkJfQoKCQkJLy8gSWYgYSBudW1iZXIgd2FzIHBhc3NlZCBpbiwgYWRkIHRoZSB1bml0IChleGNlcHQgZm9yIGNlcnRhaW4gQ1NTIHByb3BlcnRpZXMpCgkJCS8vIFRoZSBpc0N1c3RvbVByb3AgY2hlY2sgY2FuIGJlIHJlbW92ZWQgaW4galF1ZXJ5IDQuMCB3aGVuIHdlIG9ubHkgYXV0by1hcHBlbmQKCQkJLy8gInB4IiB0byBhIGZldyBoYXJkY29kZWQgdmFsdWVzLgoJCQlpZiAoIHR5cGUgPT09ICJudW1iZXIiICYmICFpc0N1c3RvbVByb3AgKSB7CgkJCQl2YWx1ZSArPSByZXQgJiYgcmV0WyAzIF0gfHwgKCBqUXVlcnkuY3NzTnVtYmVyWyBvcmlnTmFtZSBdID8gIiIgOiAicHgiICk7CgkJCX0KCgkJCS8vIGJhY2tncm91bmQtKiBwcm9wcyBhZmZlY3Qgb3JpZ2luYWwgY2xvbmUncyB2YWx1ZXMKCQkJaWYgKCAhc3VwcG9ydC5jbGVhckNsb25lU3R5bGUgJiYgdmFsdWUgPT09ICIiICYmIG5hbWUuaW5kZXhPZiggImJhY2tncm91bmQiICkgPT09IDAgKSB7CgkJCQlzdHlsZVsgbmFtZSBdID0gImluaGVyaXQiOwoJCQl9CgoJCQkvLyBJZiBhIGhvb2sgd2FzIHByb3ZpZGVkLCB1c2UgdGhhdCB2YWx1ZSwgb3RoZXJ3aXNlIGp1c3Qgc2V0IHRoZSBzcGVjaWZpZWQgdmFsdWUKCQkJaWYgKCAhaG9va3MgfHwgISggInNldCIgaW4gaG9va3MgKSB8fAoJCQkJKCB2YWx1ZSA9IGhvb2tzLnNldCggZWxlbSwgdmFsdWUsIGV4dHJhICkgKSAhPT0gdW5kZWZpbmVkICkgewoKCQkJCWlmICggaXNDdXN0b21Qcm9wICkgewoJCQkJCXN0eWxlLnNldFByb3BlcnR5KCBuYW1lLCB2YWx1ZSApOwoJCQkJfSBlbHNlIHsKCQkJCQlzdHlsZVsgbmFtZSBdID0gdmFsdWU7CgkJCQl9CgkJCX0KCgkJfSBlbHNlIHsKCgkJCS8vIElmIGEgaG9vayB3YXMgcHJvdmlkZWQgZ2V0IHRoZSBub24tY29tcHV0ZWQgdmFsdWUgZnJvbSB0aGVyZQoJCQlpZiAoIGhvb2tzICYmICJnZXQiIGluIGhvb2tzICYmCgkJCQkoIHJldCA9IGhvb2tzLmdldCggZWxlbSwgZmFsc2UsIGV4dHJhICkgKSAhPT0gdW5kZWZpbmVkICkgewoKCQkJCXJldHVybiByZXQ7CgkJCX0KCgkJCS8vIE90aGVyd2lzZSBqdXN0IGdldCB0aGUgdmFsdWUgZnJvbSB0aGUgc3R5bGUgb2JqZWN0CgkJCXJldHVybiBzdHlsZVsgbmFtZSBdOwoJCX0KCX0sCgoJY3NzOiBmdW5jdGlvbiggZWxlbSwgbmFtZSwgZXh0cmEsIHN0eWxlcyApIHsKCQl2YXIgdmFsLCBudW0sIGhvb2tzLAoJCQlvcmlnTmFtZSA9IGNhbWVsQ2FzZSggbmFtZSApLAoJCQlpc0N1c3RvbVByb3AgPSByY3VzdG9tUHJvcC50ZXN0KCBuYW1lICk7CgoJCS8vIE1ha2Ugc3VyZSB0aGF0IHdlJ3JlIHdvcmtpbmcgd2l0aCB0aGUgcmlnaHQgbmFtZS4gV2UgZG9uJ3QKCQkvLyB3YW50IHRvIG1vZGlmeSB0aGUgdmFsdWUgaWYgaXQgaXMgYSBDU1MgY3VzdG9tIHByb3BlcnR5CgkJLy8gc2luY2UgdGhleSBhcmUgdXNlci1kZWZpbmVkLgoJCWlmICggIWlzQ3VzdG9tUHJvcCApIHsKCQkJbmFtZSA9IGZpbmFsUHJvcE5hbWUoIG9yaWdOYW1lICk7CgkJfQoKCQkvLyBUcnkgcHJlZml4ZWQgbmFtZSBmb2xsb3dlZCBieSB0aGUgdW5wcmVmaXhlZCBuYW1lCgkJaG9va3MgPSBqUXVlcnkuY3NzSG9va3NbIG5hbWUgXSB8fCBqUXVlcnkuY3NzSG9va3NbIG9yaWdOYW1lIF07CgoJCS8vIElmIGEgaG9vayB3YXMgcHJvdmlkZWQgZ2V0IHRoZSBjb21wdXRlZCB2YWx1ZSBmcm9tIHRoZXJlCgkJaWYgKCBob29rcyAmJiAiZ2V0IiBpbiBob29rcyApIHsKCQkJdmFsID0gaG9va3MuZ2V0KCBlbGVtLCB0cnVlLCBleHRyYSApOwoJCX0KCgkJLy8gT3RoZXJ3aXNlLCBpZiBhIHdheSB0byBnZXQgdGhlIGNvbXB1dGVkIHZhbHVlIGV4aXN0cywgdXNlIHRoYXQKCQlpZiAoIHZhbCA9PT0gdW5kZWZpbmVkICkgewoJCQl2YWwgPSBjdXJDU1MoIGVsZW0sIG5hbWUsIHN0eWxlcyApOwoJCX0KCgkJLy8gQ29udmVydCAibm9ybWFsIiB0byBjb21wdXRlZCB2YWx1ZQoJCWlmICggdmFsID09PSAibm9ybWFsIiAmJiBuYW1lIGluIGNzc05vcm1hbFRyYW5zZm9ybSApIHsKCQkJdmFsID0gY3NzTm9ybWFsVHJhbnNmb3JtWyBuYW1lIF07CgkJfQoKCQkvLyBNYWtlIG51bWVyaWMgaWYgZm9yY2VkIG9yIGEgcXVhbGlmaWVyIHdhcyBwcm92aWRlZCBhbmQgdmFsIGxvb2tzIG51bWVyaWMKCQlpZiAoIGV4dHJhID09PSAiIiB8fCBleHRyYSApIHsKCQkJbnVtID0gcGFyc2VGbG9hdCggdmFsICk7CgkJCXJldHVybiBleHRyYSA9PT0gdHJ1ZSB8fCBpc0Zpbml0ZSggbnVtICkgPyBudW0gfHwgMCA6IHZhbDsKCQl9CgoJCXJldHVybiB2YWw7Cgl9Cn0gKTsKCmpRdWVyeS5lYWNoKCBbICJoZWlnaHQiLCAid2lkdGgiIF0sIGZ1bmN0aW9uKCBfaSwgZGltZW5zaW9uICkgewoJalF1ZXJ5LmNzc0hvb2tzWyBkaW1lbnNpb24gXSA9IHsKCQlnZXQ6IGZ1bmN0aW9uKCBlbGVtLCBjb21wdXRlZCwgZXh0cmEgKSB7CgkJCWlmICggY29tcHV0ZWQgKSB7CgoJCQkJLy8gQ2VydGFpbiBlbGVtZW50cyBjYW4gaGF2ZSBkaW1lbnNpb24gaW5mbyBpZiB3ZSBpbnZpc2libHkgc2hvdyB0aGVtCgkJCQkvLyBidXQgaXQgbXVzdCBoYXZlIGEgY3VycmVudCBkaXNwbGF5IHN0eWxlIHRoYXQgd291bGQgYmVuZWZpdAoJCQkJcmV0dXJuIHJkaXNwbGF5c3dhcC50ZXN0KCBqUXVlcnkuY3NzKCBlbGVtLCAiZGlzcGxheSIgKSApICYmCgoJCQkJCS8vIFN1cHBvcnQ6IFNhZmFyaSA4KwoJCQkJCS8vIFRhYmxlIGNvbHVtbnMgaW4gU2FmYXJpIGhhdmUgbm9uLXplcm8gb2Zmc2V0V2lkdGggJiB6ZXJvCgkJCQkJLy8gZ2V0Qm91bmRpbmdDbGllbnRSZWN0KCkud2lkdGggdW5sZXNzIGRpc3BsYXkgaXMgY2hhbmdlZC4KCQkJCQkvLyBTdXBwb3J0OiBJRSA8PTExIG9ubHkKCQkJCQkvLyBSdW5uaW5nIGdldEJvdW5kaW5nQ2xpZW50UmVjdCBvbiBhIGRpc2Nvbm5lY3RlZCBub2RlCgkJCQkJLy8gaW4gSUUgdGhyb3dzIGFuIGVycm9yLgoJCQkJCSggIWVsZW0uZ2V0Q2xpZW50UmVjdHMoKS5sZW5ndGggfHwgIWVsZW0uZ2V0Qm91bmRpbmdDbGllbnRSZWN0KCkud2lkdGggKSA/CgkJCQkJc3dhcCggZWxlbSwgY3NzU2hvdywgZnVuY3Rpb24oKSB7CgkJCQkJCXJldHVybiBnZXRXaWR0aE9ySGVpZ2h0KCBlbGVtLCBkaW1lbnNpb24sIGV4dHJhICk7CgkJCQkJfSApIDoKCQkJCQlnZXRXaWR0aE9ySGVpZ2h0KCBlbGVtLCBkaW1lbnNpb24sIGV4dHJhICk7CgkJCX0KCQl9LAoKCQlzZXQ6IGZ1bmN0aW9uKCBlbGVtLCB2YWx1ZSwgZXh0cmEgKSB7CgkJCXZhciBtYXRjaGVzLAoJCQkJc3R5bGVzID0gZ2V0U3R5bGVzKCBlbGVtICksCgoJCQkJLy8gT25seSByZWFkIHN0eWxlcy5wb3NpdGlvbiBpZiB0aGUgdGVzdCBoYXMgYSBjaGFuY2UgdG8gZmFpbAoJCQkJLy8gdG8gYXZvaWQgZm9yY2luZyBhIHJlZmxvdy4KCQkJCXNjcm9sbGJveFNpemVCdWdneSA9ICFzdXBwb3J0LnNjcm9sbGJveFNpemUoKSAmJgoJCQkJCXN0eWxlcy5wb3NpdGlvbiA9PT0gImFic29sdXRlIiwKCgkJCQkvLyBUbyBhdm9pZCBmb3JjaW5nIGEgcmVmbG93LCBvbmx5IGZldGNoIGJveFNpemluZyBpZiB3ZSBuZWVkIGl0IChnaC0zOTkxKQoJCQkJYm94U2l6aW5nTmVlZGVkID0gc2Nyb2xsYm94U2l6ZUJ1Z2d5IHx8IGV4dHJhLAoJCQkJaXNCb3JkZXJCb3ggPSBib3hTaXppbmdOZWVkZWQgJiYKCQkJCQlqUXVlcnkuY3NzKCBlbGVtLCAiYm94U2l6aW5nIiwgZmFsc2UsIHN0eWxlcyApID09PSAiYm9yZGVyLWJveCIsCgkJCQlzdWJ0cmFjdCA9IGV4dHJhID8KCQkJCQlib3hNb2RlbEFkanVzdG1lbnQoCgkJCQkJCWVsZW0sCgkJCQkJCWRpbWVuc2lvbiwKCQkJCQkJZXh0cmEsCgkJCQkJCWlzQm9yZGVyQm94LAoJCQkJCQlzdHlsZXMKCQkJCQkpIDoKCQkJCQkwOwoKCQkJLy8gQWNjb3VudCBmb3IgdW5yZWxpYWJsZSBib3JkZXItYm94IGRpbWVuc2lvbnMgYnkgY29tcGFyaW5nIG9mZnNldCogdG8gY29tcHV0ZWQgYW5kCgkJCS8vIGZha2luZyBhIGNvbnRlbnQtYm94IHRvIGdldCBib3JkZXIgYW5kIHBhZGRpbmcgKGdoLTM2OTkpCgkJCWlmICggaXNCb3JkZXJCb3ggJiYgc2Nyb2xsYm94U2l6ZUJ1Z2d5ICkgewoJCQkJc3VidHJhY3QgLT0gTWF0aC5jZWlsKAoJCQkJCWVsZW1bICJvZmZzZXQiICsgZGltZW5zaW9uWyAwIF0udG9VcHBlckNhc2UoKSArIGRpbWVuc2lvbi5zbGljZSggMSApIF0gLQoJCQkJCXBhcnNlRmxvYXQoIHN0eWxlc1sgZGltZW5zaW9uIF0gKSAtCgkJCQkJYm94TW9kZWxBZGp1c3RtZW50KCBlbGVtLCBkaW1lbnNpb24sICJib3JkZXIiLCBmYWxzZSwgc3R5bGVzICkgLQoJCQkJCTAuNQoJCQkJKTsKCQkJfQoKCQkJLy8gQ29udmVydCB0byBwaXhlbHMgaWYgdmFsdWUgYWRqdXN0bWVudCBpcyBuZWVkZWQKCQkJaWYgKCBzdWJ0cmFjdCAmJiAoIG1hdGNoZXMgPSByY3NzTnVtLmV4ZWMoIHZhbHVlICkgKSAmJgoJCQkJKCBtYXRjaGVzWyAzIF0gfHwgInB4IiApICE9PSAicHgiICkgewoKCQkJCWVsZW0uc3R5bGVbIGRpbWVuc2lvbiBdID0gdmFsdWU7CgkJCQl2YWx1ZSA9IGpRdWVyeS5jc3MoIGVsZW0sIGRpbWVuc2lvbiApOwoJCQl9CgoJCQlyZXR1cm4gc2V0UG9zaXRpdmVOdW1iZXIoIGVsZW0sIHZhbHVlLCBzdWJ0cmFjdCApOwoJCX0KCX07Cn0gKTsKCmpRdWVyeS5jc3NIb29rcy5tYXJnaW5MZWZ0ID0gYWRkR2V0SG9va0lmKCBzdXBwb3J0LnJlbGlhYmxlTWFyZ2luTGVmdCwKCWZ1bmN0aW9uKCBlbGVtLCBjb21wdXRlZCApIHsKCQlpZiAoIGNvbXB1dGVkICkgewoJCQlyZXR1cm4gKCBwYXJzZUZsb2F0KCBjdXJDU1MoIGVsZW0sICJtYXJnaW5MZWZ0IiApICkgfHwKCQkJCWVsZW0uZ2V0Qm91bmRpbmdDbGllbnRSZWN0KCkubGVmdCAtCgkJCQkJc3dhcCggZWxlbSwgeyBtYXJnaW5MZWZ0OiAwIH0sIGZ1bmN0aW9uKCkgewoJCQkJCQlyZXR1cm4gZWxlbS5nZXRCb3VuZGluZ0NsaWVudFJlY3QoKS5sZWZ0OwoJCQkJCX0gKQoJCQkpICsgInB4IjsKCQl9Cgl9Cik7CgovLyBUaGVzZSBob29rcyBhcmUgdXNlZCBieSBhbmltYXRlIHRvIGV4cGFuZCBwcm9wZXJ0aWVzCmpRdWVyeS5lYWNoKCB7CgltYXJnaW46ICIiLAoJcGFkZGluZzogIiIsCglib3JkZXI6ICJXaWR0aCIKfSwgZnVuY3Rpb24oIHByZWZpeCwgc3VmZml4ICkgewoJalF1ZXJ5LmNzc0hvb2tzWyBwcmVmaXggKyBzdWZmaXggXSA9IHsKCQlleHBhbmQ6IGZ1bmN0aW9uKCB2YWx1ZSApIHsKCQkJdmFyIGkgPSAwLAoJCQkJZXhwYW5kZWQgPSB7fSwKCgkJCQkvLyBBc3N1bWVzIGEgc2luZ2xlIG51bWJlciBpZiBub3QgYSBzdHJpbmcKCQkJCXBhcnRzID0gdHlwZW9mIHZhbHVlID09PSAic3RyaW5nIiA/IHZhbHVlLnNwbGl0KCAiICIgKSA6IFsgdmFsdWUgXTsKCgkJCWZvciAoIDsgaSA8IDQ7IGkrKyApIHsKCQkJCWV4cGFuZGVkWyBwcmVmaXggKyBjc3NFeHBhbmRbIGkgXSArIHN1ZmZpeCBdID0KCQkJCQlwYXJ0c1sgaSBdIHx8IHBhcnRzWyBpIC0gMiBdIHx8IHBhcnRzWyAwIF07CgkJCX0KCgkJCXJldHVybiBleHBhbmRlZDsKCQl9Cgl9OwoKCWlmICggcHJlZml4ICE9PSAibWFyZ2luIiApIHsKCQlqUXVlcnkuY3NzSG9va3NbIHByZWZpeCArIHN1ZmZpeCBdLnNldCA9IHNldFBvc2l0aXZlTnVtYmVyOwoJfQp9ICk7CgpqUXVlcnkuZm4uZXh0ZW5kKCB7Cgljc3M6IGZ1bmN0aW9uKCBuYW1lLCB2YWx1ZSApIHsKCQlyZXR1cm4gYWNjZXNzKCB0aGlzLCBmdW5jdGlvbiggZWxlbSwgbmFtZSwgdmFsdWUgKSB7CgkJCXZhciBzdHlsZXMsIGxlbiwKCQkJCW1hcCA9IHt9LAoJCQkJaSA9IDA7CgoJCQlpZiAoIEFycmF5LmlzQXJyYXkoIG5hbWUgKSApIHsKCQkJCXN0eWxlcyA9IGdldFN0eWxlcyggZWxlbSApOwoJCQkJbGVuID0gbmFtZS5sZW5ndGg7CgoJCQkJZm9yICggOyBpIDwgbGVuOyBpKysgKSB7CgkJCQkJbWFwWyBuYW1lWyBpIF0gXSA9IGpRdWVyeS5jc3MoIGVsZW0sIG5hbWVbIGkgXSwgZmFsc2UsIHN0eWxlcyApOwoJCQkJfQoKCQkJCXJldHVybiBtYXA7CgkJCX0KCgkJCXJldHVybiB2YWx1ZSAhPT0gdW5kZWZpbmVkID8KCQkJCWpRdWVyeS5zdHlsZSggZWxlbSwgbmFtZSwgdmFsdWUgKSA6CgkJCQlqUXVlcnkuY3NzKCBlbGVtLCBuYW1lICk7CgkJfSwgbmFtZSwgdmFsdWUsIGFyZ3VtZW50cy5sZW5ndGggPiAxICk7Cgl9Cn0gKTsKCgpmdW5jdGlvbiBUd2VlbiggZWxlbSwgb3B0aW9ucywgcHJvcCwgZW5kLCBlYXNpbmcgKSB7CglyZXR1cm4gbmV3IFR3ZWVuLnByb3RvdHlwZS5pbml0KCBlbGVtLCBvcHRpb25zLCBwcm9wLCBlbmQsIGVhc2luZyApOwp9CmpRdWVyeS5Ud2VlbiA9IFR3ZWVuOwoKVHdlZW4ucHJvdG90eXBlID0gewoJY29uc3RydWN0b3I6IFR3ZWVuLAoJaW5pdDogZnVuY3Rpb24oIGVsZW0sIG9wdGlvbnMsIHByb3AsIGVuZCwgZWFzaW5nLCB1bml0ICkgewoJCXRoaXMuZWxlbSA9IGVsZW07CgkJdGhpcy5wcm9wID0gcHJvcDsKCQl0aGlzLmVhc2luZyA9IGVhc2luZyB8fCBqUXVlcnkuZWFzaW5nLl9kZWZhdWx0OwoJCXRoaXMub3B0aW9ucyA9IG9wdGlvbnM7CgkJdGhpcy5zdGFydCA9IHRoaXMubm93ID0gdGhpcy5jdXIoKTsKCQl0aGlzLmVuZCA9IGVuZDsKCQl0aGlzLnVuaXQgPSB1bml0IHx8ICggalF1ZXJ5LmNzc051bWJlclsgcHJvcCBdID8gIiIgOiAicHgiICk7Cgl9LAoJY3VyOiBmdW5jdGlvbigpIHsKCQl2YXIgaG9va3MgPSBUd2Vlbi5wcm9wSG9va3NbIHRoaXMucHJvcCBdOwoKCQlyZXR1cm4gaG9va3MgJiYgaG9va3MuZ2V0ID8KCQkJaG9va3MuZ2V0KCB0aGlzICkgOgoJCQlUd2Vlbi5wcm9wSG9va3MuX2RlZmF1bHQuZ2V0KCB0aGlzICk7Cgl9LAoJcnVuOiBmdW5jdGlvbiggcGVyY2VudCApIHsKCQl2YXIgZWFzZWQsCgkJCWhvb2tzID0gVHdlZW4ucHJvcEhvb2tzWyB0aGlzLnByb3AgXTsKCgkJaWYgKCB0aGlzLm9wdGlvbnMuZHVyYXRpb24gKSB7CgkJCXRoaXMucG9zID0gZWFzZWQgPSBqUXVlcnkuZWFzaW5nWyB0aGlzLmVhc2luZyBdKAoJCQkJcGVyY2VudCwgdGhpcy5vcHRpb25zLmR1cmF0aW9uICogcGVyY2VudCwgMCwgMSwgdGhpcy5vcHRpb25zLmR1cmF0aW9uCgkJCSk7CgkJfSBlbHNlIHsKCQkJdGhpcy5wb3MgPSBlYXNlZCA9IHBlcmNlbnQ7CgkJfQoJCXRoaXMubm93ID0gKCB0aGlzLmVuZCAtIHRoaXMuc3RhcnQgKSAqIGVhc2VkICsgdGhpcy5zdGFydDsKCgkJaWYgKCB0aGlzLm9wdGlvbnMuc3RlcCApIHsKCQkJdGhpcy5vcHRpb25zLnN0ZXAuY2FsbCggdGhpcy5lbGVtLCB0aGlzLm5vdywgdGhpcyApOwoJCX0KCgkJaWYgKCBob29rcyAmJiBob29rcy5zZXQgKSB7CgkJCWhvb2tzLnNldCggdGhpcyApOwoJCX0gZWxzZSB7CgkJCVR3ZWVuLnByb3BIb29rcy5fZGVmYXVsdC5zZXQoIHRoaXMgKTsKCQl9CgkJcmV0dXJuIHRoaXM7Cgl9Cn07CgpUd2Vlbi5wcm90b3R5cGUuaW5pdC5wcm90b3R5cGUgPSBUd2Vlbi5wcm90b3R5cGU7CgpUd2Vlbi5wcm9wSG9va3MgPSB7CglfZGVmYXVsdDogewoJCWdldDogZnVuY3Rpb24oIHR3ZWVuICkgewoJCQl2YXIgcmVzdWx0OwoKCQkJLy8gVXNlIGEgcHJvcGVydHkgb24gdGhlIGVsZW1lbnQgZGlyZWN0bHkgd2hlbiBpdCBpcyBub3QgYSBET00gZWxlbWVudCwKCQkJLy8gb3Igd2hlbiB0aGVyZSBpcyBubyBtYXRjaGluZyBzdHlsZSBwcm9wZXJ0eSB0aGF0IGV4aXN0cy4KCQkJaWYgKCB0d2Vlbi5lbGVtLm5vZGVUeXBlICE9PSAxIHx8CgkJCQl0d2Vlbi5lbGVtWyB0d2Vlbi5wcm9wIF0gIT0gbnVsbCAmJiB0d2Vlbi5lbGVtLnN0eWxlWyB0d2Vlbi5wcm9wIF0gPT0gbnVsbCApIHsKCQkJCXJldHVybiB0d2Vlbi5lbGVtWyB0d2Vlbi5wcm9wIF07CgkJCX0KCgkJCS8vIFBhc3NpbmcgYW4gZW1wdHkgc3RyaW5nIGFzIGEgM3JkIHBhcmFtZXRlciB0byAuY3NzIHdpbGwgYXV0b21hdGljYWxseQoJCQkvLyBhdHRlbXB0IGEgcGFyc2VGbG9hdCBhbmQgZmFsbGJhY2sgdG8gYSBzdHJpbmcgaWYgdGhlIHBhcnNlIGZhaWxzLgoJCQkvLyBTaW1wbGUgdmFsdWVzIHN1Y2ggYXMgIjEwcHgiIGFyZSBwYXJzZWQgdG8gRmxvYXQ7CgkJCS8vIGNvbXBsZXggdmFsdWVzIHN1Y2ggYXMgInJvdGF0ZSgxcmFkKSIgYXJlIHJldHVybmVkIGFzLWlzLgoJCQlyZXN1bHQgPSBqUXVlcnkuY3NzKCB0d2Vlbi5lbGVtLCB0d2Vlbi5wcm9wLCAiIiApOwoKCQkJLy8gRW1wdHkgc3RyaW5ncywgbnVsbCwgdW5kZWZpbmVkIGFuZCAiYXV0byIgYXJlIGNvbnZlcnRlZCB0byAwLgoJCQlyZXR1cm4gIXJlc3VsdCB8fCByZXN1bHQgPT09ICJhdXRvIiA/IDAgOiByZXN1bHQ7CgkJfSwKCQlzZXQ6IGZ1bmN0aW9uKCB0d2VlbiApIHsKCgkJCS8vIFVzZSBzdGVwIGhvb2sgZm9yIGJhY2sgY29tcGF0LgoJCQkvLyBVc2UgY3NzSG9vayBpZiBpdHMgdGhlcmUuCgkJCS8vIFVzZSAuc3R5bGUgaWYgYXZhaWxhYmxlIGFuZCB1c2UgcGxhaW4gcHJvcGVydGllcyB3aGVyZSBhdmFpbGFibGUuCgkJCWlmICggalF1ZXJ5LmZ4LnN0ZXBbIHR3ZWVuLnByb3AgXSApIHsKCQkJCWpRdWVyeS5meC5zdGVwWyB0d2Vlbi5wcm9wIF0oIHR3ZWVuICk7CgkJCX0gZWxzZSBpZiAoIHR3ZWVuLmVsZW0ubm9kZVR5cGUgPT09IDEgJiYgKAoJCQkJalF1ZXJ5LmNzc0hvb2tzWyB0d2Vlbi5wcm9wIF0gfHwKCQkJCQl0d2Vlbi5lbGVtLnN0eWxlWyBmaW5hbFByb3BOYW1lKCB0d2Vlbi5wcm9wICkgXSAhPSBudWxsICkgKSB7CgkJCQlqUXVlcnkuc3R5bGUoIHR3ZWVuLmVsZW0sIHR3ZWVuLnByb3AsIHR3ZWVuLm5vdyArIHR3ZWVuLnVuaXQgKTsKCQkJfSBlbHNlIHsKCQkJCXR3ZWVuLmVsZW1bIHR3ZWVuLnByb3AgXSA9IHR3ZWVuLm5vdzsKCQkJfQoJCX0KCX0KfTsKCi8vIFN1cHBvcnQ6IElFIDw9OSBvbmx5Ci8vIFBhbmljIGJhc2VkIGFwcHJvYWNoIHRvIHNldHRpbmcgdGhpbmdzIG9uIGRpc2Nvbm5lY3RlZCBub2RlcwpUd2Vlbi5wcm9wSG9va3Muc2Nyb2xsVG9wID0gVHdlZW4ucHJvcEhvb2tzLnNjcm9sbExlZnQgPSB7CglzZXQ6IGZ1bmN0aW9uKCB0d2VlbiApIHsKCQlpZiAoIHR3ZWVuLmVsZW0ubm9kZVR5cGUgJiYgdHdlZW4uZWxlbS5wYXJlbnROb2RlICkgewoJCQl0d2Vlbi5lbGVtWyB0d2Vlbi5wcm9wIF0gPSB0d2Vlbi5ub3c7CgkJfQoJfQp9OwoKalF1ZXJ5LmVhc2luZyA9IHsKCWxpbmVhcjogZnVuY3Rpb24oIHAgKSB7CgkJcmV0dXJuIHA7Cgl9LAoJc3dpbmc6IGZ1bmN0aW9uKCBwICkgewoJCXJldHVybiAwLjUgLSBNYXRoLmNvcyggcCAqIE1hdGguUEkgKSAvIDI7Cgl9LAoJX2RlZmF1bHQ6ICJzd2luZyIKfTsKCmpRdWVyeS5meCA9IFR3ZWVuLnByb3RvdHlwZS5pbml0OwoKLy8gQmFjayBjb21wYXQgPDEuOCBleHRlbnNpb24gcG9pbnQKalF1ZXJ5LmZ4LnN0ZXAgPSB7fTsKCgoKCnZhcgoJZnhOb3csIGluUHJvZ3Jlc3MsCglyZnh0eXBlcyA9IC9eKD86dG9nZ2xlfHNob3d8aGlkZSkkLywKCXJydW4gPSAvcXVldWVIb29rcyQvOwoKZnVuY3Rpb24gc2NoZWR1bGUoKSB7CglpZiAoIGluUHJvZ3Jlc3MgKSB7CgkJaWYgKCBkb2N1bWVudC5oaWRkZW4gPT09IGZhbHNlICYmIHdpbmRvdy5yZXF1ZXN0QW5pbWF0aW9uRnJhbWUgKSB7CgkJCXdpbmRvdy5yZXF1ZXN0QW5pbWF0aW9uRnJhbWUoIHNjaGVkdWxlICk7CgkJfSBlbHNlIHsKCQkJd2luZG93LnNldFRpbWVvdXQoIHNjaGVkdWxlLCBqUXVlcnkuZnguaW50ZXJ2YWwgKTsKCQl9CgoJCWpRdWVyeS5meC50aWNrKCk7Cgl9Cn0KCi8vIEFuaW1hdGlvbnMgY3JlYXRlZCBzeW5jaHJvbm91c2x5IHdpbGwgcnVuIHN5bmNocm9ub3VzbHkKZnVuY3Rpb24gY3JlYXRlRnhOb3coKSB7Cgl3aW5kb3cuc2V0VGltZW91dCggZnVuY3Rpb24oKSB7CgkJZnhOb3cgPSB1bmRlZmluZWQ7Cgl9ICk7CglyZXR1cm4gKCBmeE5vdyA9IERhdGUubm93KCkgKTsKfQoKLy8gR2VuZXJhdGUgcGFyYW1ldGVycyB0byBjcmVhdGUgYSBzdGFuZGFyZCBhbmltYXRpb24KZnVuY3Rpb24gZ2VuRngoIHR5cGUsIGluY2x1ZGVXaWR0aCApIHsKCXZhciB3aGljaCwKCQlpID0gMCwKCQlhdHRycyA9IHsgaGVpZ2h0OiB0eXBlIH07CgoJLy8gSWYgd2UgaW5jbHVkZSB3aWR0aCwgc3RlcCB2YWx1ZSBpcyAxIHRvIGRvIGFsbCBjc3NFeHBhbmQgdmFsdWVzLAoJLy8gb3RoZXJ3aXNlIHN0ZXAgdmFsdWUgaXMgMiB0byBza2lwIG92ZXIgTGVmdCBhbmQgUmlnaHQKCWluY2x1ZGVXaWR0aCA9IGluY2x1ZGVXaWR0aCA/IDEgOiAwOwoJZm9yICggOyBpIDwgNDsgaSArPSAyIC0gaW5jbHVkZVdpZHRoICkgewoJCXdoaWNoID0gY3NzRXhwYW5kWyBpIF07CgkJYXR0cnNbICJtYXJnaW4iICsgd2hpY2ggXSA9IGF0dHJzWyAicGFkZGluZyIgKyB3aGljaCBdID0gdHlwZTsKCX0KCglpZiAoIGluY2x1ZGVXaWR0aCApIHsKCQlhdHRycy5vcGFjaXR5ID0gYXR0cnMud2lkdGggPSB0eXBlOwoJfQoKCXJldHVybiBhdHRyczsKfQoKZnVuY3Rpb24gY3JlYXRlVHdlZW4oIHZhbHVlLCBwcm9wLCBhbmltYXRpb24gKSB7Cgl2YXIgdHdlZW4sCgkJY29sbGVjdGlvbiA9ICggQW5pbWF0aW9uLnR3ZWVuZXJzWyBwcm9wIF0gfHwgW10gKS5jb25jYXQoIEFuaW1hdGlvbi50d2VlbmVyc1sgIioiIF0gKSwKCQlpbmRleCA9IDAsCgkJbGVuZ3RoID0gY29sbGVjdGlvbi5sZW5ndGg7Cglmb3IgKCA7IGluZGV4IDwgbGVuZ3RoOyBpbmRleCsrICkgewoJCWlmICggKCB0d2VlbiA9IGNvbGxlY3Rpb25bIGluZGV4IF0uY2FsbCggYW5pbWF0aW9uLCBwcm9wLCB2YWx1ZSApICkgKSB7CgoJCQkvLyBXZSdyZSBkb25lIHdpdGggdGhpcyBwcm9wZXJ0eQoJCQlyZXR1cm4gdHdlZW47CgkJfQoJfQp9CgpmdW5jdGlvbiBkZWZhdWx0UHJlZmlsdGVyKCBlbGVtLCBwcm9wcywgb3B0cyApIHsKCXZhciBwcm9wLCB2YWx1ZSwgdG9nZ2xlLCBob29rcywgb2xkZmlyZSwgcHJvcFR3ZWVuLCByZXN0b3JlRGlzcGxheSwgZGlzcGxheSwKCQlpc0JveCA9ICJ3aWR0aCIgaW4gcHJvcHMgfHwgImhlaWdodCIgaW4gcHJvcHMsCgkJYW5pbSA9IHRoaXMsCgkJb3JpZyA9IHt9LAoJCXN0eWxlID0gZWxlbS5zdHlsZSwKCQloaWRkZW4gPSBlbGVtLm5vZGVUeXBlICYmIGlzSGlkZGVuV2l0aGluVHJlZSggZWxlbSApLAoJCWRhdGFTaG93ID0gZGF0YVByaXYuZ2V0KCBlbGVtLCAiZnhzaG93IiApOwoKCS8vIFF1ZXVlLXNraXBwaW5nIGFuaW1hdGlvbnMgaGlqYWNrIHRoZSBmeCBob29rcwoJaWYgKCAhb3B0cy5xdWV1ZSApIHsKCQlob29rcyA9IGpRdWVyeS5fcXVldWVIb29rcyggZWxlbSwgImZ4IiApOwoJCWlmICggaG9va3MudW5xdWV1ZWQgPT0gbnVsbCApIHsKCQkJaG9va3MudW5xdWV1ZWQgPSAwOwoJCQlvbGRmaXJlID0gaG9va3MuZW1wdHkuZmlyZTsKCQkJaG9va3MuZW1wdHkuZmlyZSA9IGZ1bmN0aW9uKCkgewoJCQkJaWYgKCAhaG9va3MudW5xdWV1ZWQgKSB7CgkJCQkJb2xkZmlyZSgpOwoJCQkJfQoJCQl9OwoJCX0KCQlob29rcy51bnF1ZXVlZCsrOwoKCQlhbmltLmFsd2F5cyggZnVuY3Rpb24oKSB7CgoJCQkvLyBFbnN1cmUgdGhlIGNvbXBsZXRlIGhhbmRsZXIgaXMgY2FsbGVkIGJlZm9yZSB0aGlzIGNvbXBsZXRlcwoJCQlhbmltLmFsd2F5cyggZnVuY3Rpb24oKSB7CgkJCQlob29rcy51bnF1ZXVlZC0tOwoJCQkJaWYgKCAhalF1ZXJ5LnF1ZXVlKCBlbGVtLCAiZngiICkubGVuZ3RoICkgewoJCQkJCWhvb2tzLmVtcHR5LmZpcmUoKTsKCQkJCX0KCQkJfSApOwoJCX0gKTsKCX0KCgkvLyBEZXRlY3Qgc2hvdy9oaWRlIGFuaW1hdGlvbnMKCWZvciAoIHByb3AgaW4gcHJvcHMgKSB7CgkJdmFsdWUgPSBwcm9wc1sgcHJvcCBdOwoJCWlmICggcmZ4dHlwZXMudGVzdCggdmFsdWUgKSApIHsKCQkJZGVsZXRlIHByb3BzWyBwcm9wIF07CgkJCXRvZ2dsZSA9IHRvZ2dsZSB8fCB2YWx1ZSA9PT0gInRvZ2dsZSI7CgkJCWlmICggdmFsdWUgPT09ICggaGlkZGVuID8gImhpZGUiIDogInNob3ciICkgKSB7CgoJCQkJLy8gUHJldGVuZCB0byBiZSBoaWRkZW4gaWYgdGhpcyBpcyBhICJzaG93IiBhbmQKCQkJCS8vIHRoZXJlIGlzIHN0aWxsIGRhdGEgZnJvbSBhIHN0b3BwZWQgc2hvdy9oaWRlCgkJCQlpZiAoIHZhbHVlID09PSAic2hvdyIgJiYgZGF0YVNob3cgJiYgZGF0YVNob3dbIHByb3AgXSAhPT0gdW5kZWZpbmVkICkgewoJCQkJCWhpZGRlbiA9IHRydWU7CgoJCQkJLy8gSWdub3JlIGFsbCBvdGhlciBuby1vcCBzaG93L2hpZGUgZGF0YQoJCQkJfSBlbHNlIHsKCQkJCQljb250aW51ZTsKCQkJCX0KCQkJfQoJCQlvcmlnWyBwcm9wIF0gPSBkYXRhU2hvdyAmJiBkYXRhU2hvd1sgcHJvcCBdIHx8IGpRdWVyeS5zdHlsZSggZWxlbSwgcHJvcCApOwoJCX0KCX0KCgkvLyBCYWlsIG91dCBpZiB0aGlzIGlzIGEgbm8tb3AgbGlrZSAuaGlkZSgpLmhpZGUoKQoJcHJvcFR3ZWVuID0gIWpRdWVyeS5pc0VtcHR5T2JqZWN0KCBwcm9wcyApOwoJaWYgKCAhcHJvcFR3ZWVuICYmIGpRdWVyeS5pc0VtcHR5T2JqZWN0KCBvcmlnICkgKSB7CgkJcmV0dXJuOwoJfQoKCS8vIFJlc3RyaWN0ICJvdmVyZmxvdyIgYW5kICJkaXNwbGF5IiBzdHlsZXMgZHVyaW5nIGJveCBhbmltYXRpb25zCglpZiAoIGlzQm94ICYmIGVsZW0ubm9kZVR5cGUgPT09IDEgKSB7CgoJCS8vIFN1cHBvcnQ6IElFIDw9OSAtIDExLCBFZGdlIDEyIC0gMTUKCQkvLyBSZWNvcmQgYWxsIDMgb3ZlcmZsb3cgYXR0cmlidXRlcyBiZWNhdXNlIElFIGRvZXMgbm90IGluZmVyIHRoZSBzaG9ydGhhbmQKCQkvLyBmcm9tIGlkZW50aWNhbGx5LXZhbHVlZCBvdmVyZmxvd1ggYW5kIG92ZXJmbG93WSBhbmQgRWRnZSBqdXN0IG1pcnJvcnMKCQkvLyB0aGUgb3ZlcmZsb3dYIHZhbHVlIHRoZXJlLgoJCW9wdHMub3ZlcmZsb3cgPSBbIHN0eWxlLm92ZXJmbG93LCBzdHlsZS5vdmVyZmxvd1gsIHN0eWxlLm92ZXJmbG93WSBdOwoKCQkvLyBJZGVudGlmeSBhIGRpc3BsYXkgdHlwZSwgcHJlZmVycmluZyBvbGQgc2hvdy9oaWRlIGRhdGEgb3ZlciB0aGUgQ1NTIGNhc2NhZGUKCQlyZXN0b3JlRGlzcGxheSA9IGRhdGFTaG93ICYmIGRhdGFTaG93LmRpc3BsYXk7CgkJaWYgKCByZXN0b3JlRGlzcGxheSA9PSBudWxsICkgewoJCQlyZXN0b3JlRGlzcGxheSA9IGRhdGFQcml2LmdldCggZWxlbSwgImRpc3BsYXkiICk7CgkJfQoJCWRpc3BsYXkgPSBqUXVlcnkuY3NzKCBlbGVtLCAiZGlzcGxheSIgKTsKCQlpZiAoIGRpc3BsYXkgPT09ICJub25lIiApIHsKCQkJaWYgKCByZXN0b3JlRGlzcGxheSApIHsKCQkJCWRpc3BsYXkgPSByZXN0b3JlRGlzcGxheTsKCQkJfSBlbHNlIHsKCgkJCQkvLyBHZXQgbm9uZW1wdHkgdmFsdWUocykgYnkgdGVtcG9yYXJpbHkgZm9yY2luZyB2aXNpYmlsaXR5CgkJCQlzaG93SGlkZSggWyBlbGVtIF0sIHRydWUgKTsKCQkJCXJlc3RvcmVEaXNwbGF5ID0gZWxlbS5zdHlsZS5kaXNwbGF5IHx8IHJlc3RvcmVEaXNwbGF5OwoJCQkJZGlzcGxheSA9IGpRdWVyeS5jc3MoIGVsZW0sICJkaXNwbGF5IiApOwoJCQkJc2hvd0hpZGUoIFsgZWxlbSBdICk7CgkJCX0KCQl9CgoJCS8vIEFuaW1hdGUgaW5saW5lIGVsZW1lbnRzIGFzIGlubGluZS1ibG9jawoJCWlmICggZGlzcGxheSA9PT0gImlubGluZSIgfHwgZGlzcGxheSA9PT0gImlubGluZS1ibG9jayIgJiYgcmVzdG9yZURpc3BsYXkgIT0gbnVsbCApIHsKCQkJaWYgKCBqUXVlcnkuY3NzKCBlbGVtLCAiZmxvYXQiICkgPT09ICJub25lIiApIHsKCgkJCQkvLyBSZXN0b3JlIHRoZSBvcmlnaW5hbCBkaXNwbGF5IHZhbHVlIGF0IHRoZSBlbmQgb2YgcHVyZSBzaG93L2hpZGUgYW5pbWF0aW9ucwoJCQkJaWYgKCAhcHJvcFR3ZWVuICkgewoJCQkJCWFuaW0uZG9uZSggZnVuY3Rpb24oKSB7CgkJCQkJCXN0eWxlLmRpc3BsYXkgPSByZXN0b3JlRGlzcGxheTsKCQkJCQl9ICk7CgkJCQkJaWYgKCByZXN0b3JlRGlzcGxheSA9PSBudWxsICkgewoJCQkJCQlkaXNwbGF5ID0gc3R5bGUuZGlzcGxheTsKCQkJCQkJcmVzdG9yZURpc3BsYXkgPSBkaXNwbGF5ID09PSAibm9uZSIgPyAiIiA6IGRpc3BsYXk7CgkJCQkJfQoJCQkJfQoJCQkJc3R5bGUuZGlzcGxheSA9ICJpbmxpbmUtYmxvY2siOwoJCQl9CgkJfQoJfQoKCWlmICggb3B0cy5vdmVyZmxvdyApIHsKCQlzdHlsZS5vdmVyZmxvdyA9ICJoaWRkZW4iOwoJCWFuaW0uYWx3YXlzKCBmdW5jdGlvbigpIHsKCQkJc3R5bGUub3ZlcmZsb3cgPSBvcHRzLm92ZXJmbG93WyAwIF07CgkJCXN0eWxlLm92ZXJmbG93WCA9IG9wdHMub3ZlcmZsb3dbIDEgXTsKCQkJc3R5bGUub3ZlcmZsb3dZID0gb3B0cy5vdmVyZmxvd1sgMiBdOwoJCX0gKTsKCX0KCgkvLyBJbXBsZW1lbnQgc2hvdy9oaWRlIGFuaW1hdGlvbnMKCXByb3BUd2VlbiA9IGZhbHNlOwoJZm9yICggcHJvcCBpbiBvcmlnICkgewoKCQkvLyBHZW5lcmFsIHNob3cvaGlkZSBzZXR1cCBmb3IgdGhpcyBlbGVtZW50IGFuaW1hdGlvbgoJCWlmICggIXByb3BUd2VlbiApIHsKCQkJaWYgKCBkYXRhU2hvdyApIHsKCQkJCWlmICggImhpZGRlbiIgaW4gZGF0YVNob3cgKSB7CgkJCQkJaGlkZGVuID0gZGF0YVNob3cuaGlkZGVuOwoJCQkJfQoJCQl9IGVsc2UgewoJCQkJZGF0YVNob3cgPSBkYXRhUHJpdi5hY2Nlc3MoIGVsZW0sICJmeHNob3ciLCB7IGRpc3BsYXk6IHJlc3RvcmVEaXNwbGF5IH0gKTsKCQkJfQoKCQkJLy8gU3RvcmUgaGlkZGVuL3Zpc2libGUgZm9yIHRvZ2dsZSBzbyBgLnN0b3AoKS50b2dnbGUoKWAgInJldmVyc2VzIgoJCQlpZiAoIHRvZ2dsZSApIHsKCQkJCWRhdGFTaG93LmhpZGRlbiA9ICFoaWRkZW47CgkJCX0KCgkJCS8vIFNob3cgZWxlbWVudHMgYmVmb3JlIGFuaW1hdGluZyB0aGVtCgkJCWlmICggaGlkZGVuICkgewoJCQkJc2hvd0hpZGUoIFsgZWxlbSBdLCB0cnVlICk7CgkJCX0KCgkJCS8qIGVzbGludC1kaXNhYmxlIG5vLWxvb3AtZnVuYyAqLwoKCQkJYW5pbS5kb25lKCBmdW5jdGlvbigpIHsKCgkJCQkvKiBlc2xpbnQtZW5hYmxlIG5vLWxvb3AtZnVuYyAqLwoKCQkJCS8vIFRoZSBmaW5hbCBzdGVwIG9mIGEgImhpZGUiIGFuaW1hdGlvbiBpcyBhY3R1YWxseSBoaWRpbmcgdGhlIGVsZW1lbnQKCQkJCWlmICggIWhpZGRlbiApIHsKCQkJCQlzaG93SGlkZSggWyBlbGVtIF0gKTsKCQkJCX0KCQkJCWRhdGFQcml2LnJlbW92ZSggZWxlbSwgImZ4c2hvdyIgKTsKCQkJCWZvciAoIHByb3AgaW4gb3JpZyApIHsKCQkJCQlqUXVlcnkuc3R5bGUoIGVsZW0sIHByb3AsIG9yaWdbIHByb3AgXSApOwoJCQkJfQoJCQl9ICk7CgkJfQoKCQkvLyBQZXItcHJvcGVydHkgc2V0dXAKCQlwcm9wVHdlZW4gPSBjcmVhdGVUd2VlbiggaGlkZGVuID8gZGF0YVNob3dbIHByb3AgXSA6IDAsIHByb3AsIGFuaW0gKTsKCQlpZiAoICEoIHByb3AgaW4gZGF0YVNob3cgKSApIHsKCQkJZGF0YVNob3dbIHByb3AgXSA9IHByb3BUd2Vlbi5zdGFydDsKCQkJaWYgKCBoaWRkZW4gKSB7CgkJCQlwcm9wVHdlZW4uZW5kID0gcHJvcFR3ZWVuLnN0YXJ0OwoJCQkJcHJvcFR3ZWVuLnN0YXJ0ID0gMDsKCQkJfQoJCX0KCX0KfQoKZnVuY3Rpb24gcHJvcEZpbHRlciggcHJvcHMsIHNwZWNpYWxFYXNpbmcgKSB7Cgl2YXIgaW5kZXgsIG5hbWUsIGVhc2luZywgdmFsdWUsIGhvb2tzOwoKCS8vIGNhbWVsQ2FzZSwgc3BlY2lhbEVhc2luZyBhbmQgZXhwYW5kIGNzc0hvb2sgcGFzcwoJZm9yICggaW5kZXggaW4gcHJvcHMgKSB7CgkJbmFtZSA9IGNhbWVsQ2FzZSggaW5kZXggKTsKCQllYXNpbmcgPSBzcGVjaWFsRWFzaW5nWyBuYW1lIF07CgkJdmFsdWUgPSBwcm9wc1sgaW5kZXggXTsKCQlpZiAoIEFycmF5LmlzQXJyYXkoIHZhbHVlICkgKSB7CgkJCWVhc2luZyA9IHZhbHVlWyAxIF07CgkJCXZhbHVlID0gcHJvcHNbIGluZGV4IF0gPSB2YWx1ZVsgMCBdOwoJCX0KCgkJaWYgKCBpbmRleCAhPT0gbmFtZSApIHsKCQkJcHJvcHNbIG5hbWUgXSA9IHZhbHVlOwoJCQlkZWxldGUgcHJvcHNbIGluZGV4IF07CgkJfQoKCQlob29rcyA9IGpRdWVyeS5jc3NIb29rc1sgbmFtZSBdOwoJCWlmICggaG9va3MgJiYgImV4cGFuZCIgaW4gaG9va3MgKSB7CgkJCXZhbHVlID0gaG9va3MuZXhwYW5kKCB2YWx1ZSApOwoJCQlkZWxldGUgcHJvcHNbIG5hbWUgXTsKCgkJCS8vIE5vdCBxdWl0ZSAkLmV4dGVuZCwgdGhpcyB3b24ndCBvdmVyd3JpdGUgZXhpc3Rpbmcga2V5cy4KCQkJLy8gUmV1c2luZyAnaW5kZXgnIGJlY2F1c2Ugd2UgaGF2ZSB0aGUgY29ycmVjdCAibmFtZSIKCQkJZm9yICggaW5kZXggaW4gdmFsdWUgKSB7CgkJCQlpZiAoICEoIGluZGV4IGluIHByb3BzICkgKSB7CgkJCQkJcHJvcHNbIGluZGV4IF0gPSB2YWx1ZVsgaW5kZXggXTsKCQkJCQlzcGVjaWFsRWFzaW5nWyBpbmRleCBdID0gZWFzaW5nOwoJCQkJfQoJCQl9CgkJfSBlbHNlIHsKCQkJc3BlY2lhbEVhc2luZ1sgbmFtZSBdID0gZWFzaW5nOwoJCX0KCX0KfQoKZnVuY3Rpb24gQW5pbWF0aW9uKCBlbGVtLCBwcm9wZXJ0aWVzLCBvcHRpb25zICkgewoJdmFyIHJlc3VsdCwKCQlzdG9wcGVkLAoJCWluZGV4ID0gMCwKCQlsZW5ndGggPSBBbmltYXRpb24ucHJlZmlsdGVycy5sZW5ndGgsCgkJZGVmZXJyZWQgPSBqUXVlcnkuRGVmZXJyZWQoKS5hbHdheXMoIGZ1bmN0aW9uKCkgewoKCQkJLy8gRG9uJ3QgbWF0Y2ggZWxlbSBpbiB0aGUgOmFuaW1hdGVkIHNlbGVjdG9yCgkJCWRlbGV0ZSB0aWNrLmVsZW07CgkJfSApLAoJCXRpY2sgPSBmdW5jdGlvbigpIHsKCQkJaWYgKCBzdG9wcGVkICkgewoJCQkJcmV0dXJuIGZhbHNlOwoJCQl9CgkJCXZhciBjdXJyZW50VGltZSA9IGZ4Tm93IHx8IGNyZWF0ZUZ4Tm93KCksCgkJCQlyZW1haW5pbmcgPSBNYXRoLm1heCggMCwgYW5pbWF0aW9uLnN0YXJ0VGltZSArIGFuaW1hdGlvbi5kdXJhdGlvbiAtIGN1cnJlbnRUaW1lICksCgoJCQkJLy8gU3VwcG9ydDogQW5kcm9pZCAyLjMgb25seQoJCQkJLy8gQXJjaGFpYyBjcmFzaCBidWcgd29uJ3QgYWxsb3cgdXMgdG8gdXNlIGAxIC0gKCAwLjUgfHwgMCApYCAodHJhYy0xMjQ5NykKCQkJCXRlbXAgPSByZW1haW5pbmcgLyBhbmltYXRpb24uZHVyYXRpb24gfHwgMCwKCQkJCXBlcmNlbnQgPSAxIC0gdGVtcCwKCQkJCWluZGV4ID0gMCwKCQkJCWxlbmd0aCA9IGFuaW1hdGlvbi50d2VlbnMubGVuZ3RoOwoKCQkJZm9yICggOyBpbmRleCA8IGxlbmd0aDsgaW5kZXgrKyApIHsKCQkJCWFuaW1hdGlvbi50d2VlbnNbIGluZGV4IF0ucnVuKCBwZXJjZW50ICk7CgkJCX0KCgkJCWRlZmVycmVkLm5vdGlmeVdpdGgoIGVsZW0sIFsgYW5pbWF0aW9uLCBwZXJjZW50LCByZW1haW5pbmcgXSApOwoKCQkJLy8gSWYgdGhlcmUncyBtb3JlIHRvIGRvLCB5aWVsZAoJCQlpZiAoIHBlcmNlbnQgPCAxICYmIGxlbmd0aCApIHsKCQkJCXJldHVybiByZW1haW5pbmc7CgkJCX0KCgkJCS8vIElmIHRoaXMgd2FzIGFuIGVtcHR5IGFuaW1hdGlvbiwgc3ludGhlc2l6ZSBhIGZpbmFsIHByb2dyZXNzIG5vdGlmaWNhdGlvbgoJCQlpZiAoICFsZW5ndGggKSB7CgkJCQlkZWZlcnJlZC5ub3RpZnlXaXRoKCBlbGVtLCBbIGFuaW1hdGlvbiwgMSwgMCBdICk7CgkJCX0KCgkJCS8vIFJlc29sdmUgdGhlIGFuaW1hdGlvbiBhbmQgcmVwb3J0IGl0cyBjb25jbHVzaW9uCgkJCWRlZmVycmVkLnJlc29sdmVXaXRoKCBlbGVtLCBbIGFuaW1hdGlvbiBdICk7CgkJCXJldHVybiBmYWxzZTsKCQl9LAoJCWFuaW1hdGlvbiA9IGRlZmVycmVkLnByb21pc2UoIHsKCQkJZWxlbTogZWxlbSwKCQkJcHJvcHM6IGpRdWVyeS5leHRlbmQoIHt9LCBwcm9wZXJ0aWVzICksCgkJCW9wdHM6IGpRdWVyeS5leHRlbmQoIHRydWUsIHsKCQkJCXNwZWNpYWxFYXNpbmc6IHt9LAoJCQkJZWFzaW5nOiBqUXVlcnkuZWFzaW5nLl9kZWZhdWx0CgkJCX0sIG9wdGlvbnMgKSwKCQkJb3JpZ2luYWxQcm9wZXJ0aWVzOiBwcm9wZXJ0aWVzLAoJCQlvcmlnaW5hbE9wdGlvbnM6IG9wdGlvbnMsCgkJCXN0YXJ0VGltZTogZnhOb3cgfHwgY3JlYXRlRnhOb3coKSwKCQkJZHVyYXRpb246IG9wdGlvbnMuZHVyYXRpb24sCgkJCXR3ZWVuczogW10sCgkJCWNyZWF0ZVR3ZWVuOiBmdW5jdGlvbiggcHJvcCwgZW5kICkgewoJCQkJdmFyIHR3ZWVuID0galF1ZXJ5LlR3ZWVuKCBlbGVtLCBhbmltYXRpb24ub3B0cywgcHJvcCwgZW5kLAoJCQkJCWFuaW1hdGlvbi5vcHRzLnNwZWNpYWxFYXNpbmdbIHByb3AgXSB8fCBhbmltYXRpb24ub3B0cy5lYXNpbmcgKTsKCQkJCWFuaW1hdGlvbi50d2VlbnMucHVzaCggdHdlZW4gKTsKCQkJCXJldHVybiB0d2VlbjsKCQkJfSwKCQkJc3RvcDogZnVuY3Rpb24oIGdvdG9FbmQgKSB7CgkJCQl2YXIgaW5kZXggPSAwLAoKCQkJCQkvLyBJZiB3ZSBhcmUgZ29pbmcgdG8gdGhlIGVuZCwgd2Ugd2FudCB0byBydW4gYWxsIHRoZSB0d2VlbnMKCQkJCQkvLyBvdGhlcndpc2Ugd2Ugc2tpcCB0aGlzIHBhcnQKCQkJCQlsZW5ndGggPSBnb3RvRW5kID8gYW5pbWF0aW9uLnR3ZWVucy5sZW5ndGggOiAwOwoJCQkJaWYgKCBzdG9wcGVkICkgewoJCQkJCXJldHVybiB0aGlzOwoJCQkJfQoJCQkJc3RvcHBlZCA9IHRydWU7CgkJCQlmb3IgKCA7IGluZGV4IDwgbGVuZ3RoOyBpbmRleCsrICkgewoJCQkJCWFuaW1hdGlvbi50d2VlbnNbIGluZGV4IF0ucnVuKCAxICk7CgkJCQl9CgoJCQkJLy8gUmVzb2x2ZSB3aGVuIHdlIHBsYXllZCB0aGUgbGFzdCBmcmFtZTsgb3RoZXJ3aXNlLCByZWplY3QKCQkJCWlmICggZ290b0VuZCApIHsKCQkJCQlkZWZlcnJlZC5ub3RpZnlXaXRoKCBlbGVtLCBbIGFuaW1hdGlvbiwgMSwgMCBdICk7CgkJCQkJZGVmZXJyZWQucmVzb2x2ZVdpdGgoIGVsZW0sIFsgYW5pbWF0aW9uLCBnb3RvRW5kIF0gKTsKCQkJCX0gZWxzZSB7CgkJCQkJZGVmZXJyZWQucmVqZWN0V2l0aCggZWxlbSwgWyBhbmltYXRpb24sIGdvdG9FbmQgXSApOwoJCQkJfQoJCQkJcmV0dXJuIHRoaXM7CgkJCX0KCQl9ICksCgkJcHJvcHMgPSBhbmltYXRpb24ucHJvcHM7CgoJcHJvcEZpbHRlciggcHJvcHMsIGFuaW1hdGlvbi5vcHRzLnNwZWNpYWxFYXNpbmcgKTsKCglmb3IgKCA7IGluZGV4IDwgbGVuZ3RoOyBpbmRleCsrICkgewoJCXJlc3VsdCA9IEFuaW1hdGlvbi5wcmVmaWx0ZXJzWyBpbmRleCBdLmNhbGwoIGFuaW1hdGlvbiwgZWxlbSwgcHJvcHMsIGFuaW1hdGlvbi5vcHRzICk7CgkJaWYgKCByZXN1bHQgKSB7CgkJCWlmICggaXNGdW5jdGlvbiggcmVzdWx0LnN0b3AgKSApIHsKCQkJCWpRdWVyeS5fcXVldWVIb29rcyggYW5pbWF0aW9uLmVsZW0sIGFuaW1hdGlvbi5vcHRzLnF1ZXVlICkuc3RvcCA9CgkJCQkJcmVzdWx0LnN0b3AuYmluZCggcmVzdWx0ICk7CgkJCX0KCQkJcmV0dXJuIHJlc3VsdDsKCQl9Cgl9CgoJalF1ZXJ5Lm1hcCggcHJvcHMsIGNyZWF0ZVR3ZWVuLCBhbmltYXRpb24gKTsKCglpZiAoIGlzRnVuY3Rpb24oIGFuaW1hdGlvbi5vcHRzLnN0YXJ0ICkgKSB7CgkJYW5pbWF0aW9uLm9wdHMuc3RhcnQuY2FsbCggZWxlbSwgYW5pbWF0aW9uICk7Cgl9CgoJLy8gQXR0YWNoIGNhbGxiYWNrcyBmcm9tIG9wdGlvbnMKCWFuaW1hdGlvbgoJCS5wcm9ncmVzcyggYW5pbWF0aW9uLm9wdHMucHJvZ3Jlc3MgKQoJCS5kb25lKCBhbmltYXRpb24ub3B0cy5kb25lLCBhbmltYXRpb24ub3B0cy5jb21wbGV0ZSApCgkJLmZhaWwoIGFuaW1hdGlvbi5vcHRzLmZhaWwgKQoJCS5hbHdheXMoIGFuaW1hdGlvbi5vcHRzLmFsd2F5cyApOwoKCWpRdWVyeS5meC50aW1lcigKCQlqUXVlcnkuZXh0ZW5kKCB0aWNrLCB7CgkJCWVsZW06IGVsZW0sCgkJCWFuaW06IGFuaW1hdGlvbiwKCQkJcXVldWU6IGFuaW1hdGlvbi5vcHRzLnF1ZXVlCgkJfSApCgkpOwoKCXJldHVybiBhbmltYXRpb247Cn0KCmpRdWVyeS5BbmltYXRpb24gPSBqUXVlcnkuZXh0ZW5kKCBBbmltYXRpb24sIHsKCgl0d2VlbmVyczogewoJCSIqIjogWyBmdW5jdGlvbiggcHJvcCwgdmFsdWUgKSB7CgkJCXZhciB0d2VlbiA9IHRoaXMuY3JlYXRlVHdlZW4oIHByb3AsIHZhbHVlICk7CgkJCWFkanVzdENTUyggdHdlZW4uZWxlbSwgcHJvcCwgcmNzc051bS5leGVjKCB2YWx1ZSApLCB0d2VlbiApOwoJCQlyZXR1cm4gdHdlZW47CgkJfSBdCgl9LAoKCXR3ZWVuZXI6IGZ1bmN0aW9uKCBwcm9wcywgY2FsbGJhY2sgKSB7CgkJaWYgKCBpc0Z1bmN0aW9uKCBwcm9wcyApICkgewoJCQljYWxsYmFjayA9IHByb3BzOwoJCQlwcm9wcyA9IFsgIioiIF07CgkJfSBlbHNlIHsKCQkJcHJvcHMgPSBwcm9wcy5tYXRjaCggcm5vdGh0bWx3aGl0ZSApOwoJCX0KCgkJdmFyIHByb3AsCgkJCWluZGV4ID0gMCwKCQkJbGVuZ3RoID0gcHJvcHMubGVuZ3RoOwoKCQlmb3IgKCA7IGluZGV4IDwgbGVuZ3RoOyBpbmRleCsrICkgewoJCQlwcm9wID0gcHJvcHNbIGluZGV4IF07CgkJCUFuaW1hdGlvbi50d2VlbmVyc1sgcHJvcCBdID0gQW5pbWF0aW9uLnR3ZWVuZXJzWyBwcm9wIF0gfHwgW107CgkJCUFuaW1hdGlvbi50d2VlbmVyc1sgcHJvcCBdLnVuc2hpZnQoIGNhbGxiYWNrICk7CgkJfQoJfSwKCglwcmVmaWx0ZXJzOiBbIGRlZmF1bHRQcmVmaWx0ZXIgXSwKCglwcmVmaWx0ZXI6IGZ1bmN0aW9uKCBjYWxsYmFjaywgcHJlcGVuZCApIHsKCQlpZiAoIHByZXBlbmQgKSB7CgkJCUFuaW1hdGlvbi5wcmVmaWx0ZXJzLnVuc2hpZnQoIGNhbGxiYWNrICk7CgkJfSBlbHNlIHsKCQkJQW5pbWF0aW9uLnByZWZpbHRlcnMucHVzaCggY2FsbGJhY2sgKTsKCQl9Cgl9Cn0gKTsKCmpRdWVyeS5zcGVlZCA9IGZ1bmN0aW9uKCBzcGVlZCwgZWFzaW5nLCBmbiApIHsKCXZhciBvcHQgPSBzcGVlZCAmJiB0eXBlb2Ygc3BlZWQgPT09ICJvYmplY3QiID8galF1ZXJ5LmV4dGVuZCgge30sIHNwZWVkICkgOiB7CgkJY29tcGxldGU6IGZuIHx8ICFmbiAmJiBlYXNpbmcgfHwKCQkJaXNGdW5jdGlvbiggc3BlZWQgKSAmJiBzcGVlZCwKCQlkdXJhdGlvbjogc3BlZWQsCgkJZWFzaW5nOiBmbiAmJiBlYXNpbmcgfHwgZWFzaW5nICYmICFpc0Z1bmN0aW9uKCBlYXNpbmcgKSAmJiBlYXNpbmcKCX07CgoJLy8gR28gdG8gdGhlIGVuZCBzdGF0ZSBpZiBmeCBhcmUgb2ZmCglpZiAoIGpRdWVyeS5meC5vZmYgKSB7CgkJb3B0LmR1cmF0aW9uID0gMDsKCgl9IGVsc2UgewoJCWlmICggdHlwZW9mIG9wdC5kdXJhdGlvbiAhPT0gIm51bWJlciIgKSB7CgkJCWlmICggb3B0LmR1cmF0aW9uIGluIGpRdWVyeS5meC5zcGVlZHMgKSB7CgkJCQlvcHQuZHVyYXRpb24gPSBqUXVlcnkuZnguc3BlZWRzWyBvcHQuZHVyYXRpb24gXTsKCgkJCX0gZWxzZSB7CgkJCQlvcHQuZHVyYXRpb24gPSBqUXVlcnkuZnguc3BlZWRzLl9kZWZhdWx0OwoJCQl9CgkJfQoJfQoKCS8vIE5vcm1hbGl6ZSBvcHQucXVldWUgLSB0cnVlL3VuZGVmaW5lZC9udWxsIC0+ICJmeCIKCWlmICggb3B0LnF1ZXVlID09IG51bGwgfHwgb3B0LnF1ZXVlID09PSB0cnVlICkgewoJCW9wdC5xdWV1ZSA9ICJmeCI7Cgl9CgoJLy8gUXVldWVpbmcKCW9wdC5vbGQgPSBvcHQuY29tcGxldGU7CgoJb3B0LmNvbXBsZXRlID0gZnVuY3Rpb24oKSB7CgkJaWYgKCBpc0Z1bmN0aW9uKCBvcHQub2xkICkgKSB7CgkJCW9wdC5vbGQuY2FsbCggdGhpcyApOwoJCX0KCgkJaWYgKCBvcHQucXVldWUgKSB7CgkJCWpRdWVyeS5kZXF1ZXVlKCB0aGlzLCBvcHQucXVldWUgKTsKCQl9Cgl9OwoKCXJldHVybiBvcHQ7Cn07CgpqUXVlcnkuZm4uZXh0ZW5kKCB7CglmYWRlVG86IGZ1bmN0aW9uKCBzcGVlZCwgdG8sIGVhc2luZywgY2FsbGJhY2sgKSB7CgoJCS8vIFNob3cgYW55IGhpZGRlbiBlbGVtZW50cyBhZnRlciBzZXR0aW5nIG9wYWNpdHkgdG8gMAoJCXJldHVybiB0aGlzLmZpbHRlciggaXNIaWRkZW5XaXRoaW5UcmVlICkuY3NzKCAib3BhY2l0eSIsIDAgKS5zaG93KCkKCgkJCS8vIEFuaW1hdGUgdG8gdGhlIHZhbHVlIHNwZWNpZmllZAoJCQkuZW5kKCkuYW5pbWF0ZSggeyBvcGFjaXR5OiB0byB9LCBzcGVlZCwgZWFzaW5nLCBjYWxsYmFjayApOwoJfSwKCWFuaW1hdGU6IGZ1bmN0aW9uKCBwcm9wLCBzcGVlZCwgZWFzaW5nLCBjYWxsYmFjayApIHsKCQl2YXIgZW1wdHkgPSBqUXVlcnkuaXNFbXB0eU9iamVjdCggcHJvcCApLAoJCQlvcHRhbGwgPSBqUXVlcnkuc3BlZWQoIHNwZWVkLCBlYXNpbmcsIGNhbGxiYWNrICksCgkJCWRvQW5pbWF0aW9uID0gZnVuY3Rpb24oKSB7CgoJCQkJLy8gT3BlcmF0ZSBvbiBhIGNvcHkgb2YgcHJvcCBzbyBwZXItcHJvcGVydHkgZWFzaW5nIHdvbid0IGJlIGxvc3QKCQkJCXZhciBhbmltID0gQW5pbWF0aW9uKCB0aGlzLCBqUXVlcnkuZXh0ZW5kKCB7fSwgcHJvcCApLCBvcHRhbGwgKTsKCgkJCQkvLyBFbXB0eSBhbmltYXRpb25zLCBvciBmaW5pc2hpbmcgcmVzb2x2ZXMgaW1tZWRpYXRlbHkKCQkJCWlmICggZW1wdHkgfHwgZGF0YVByaXYuZ2V0KCB0aGlzLCAiZmluaXNoIiApICkgewoJCQkJCWFuaW0uc3RvcCggdHJ1ZSApOwoJCQkJfQoJCQl9OwoKCQlkb0FuaW1hdGlvbi5maW5pc2ggPSBkb0FuaW1hdGlvbjsKCgkJcmV0dXJuIGVtcHR5IHx8IG9wdGFsbC5xdWV1ZSA9PT0gZmFsc2UgPwoJCQl0aGlzLmVhY2goIGRvQW5pbWF0aW9uICkgOgoJCQl0aGlzLnF1ZXVlKCBvcHRhbGwucXVldWUsIGRvQW5pbWF0aW9uICk7Cgl9LAoJc3RvcDogZnVuY3Rpb24oIHR5cGUsIGNsZWFyUXVldWUsIGdvdG9FbmQgKSB7CgkJdmFyIHN0b3BRdWV1ZSA9IGZ1bmN0aW9uKCBob29rcyApIHsKCQkJdmFyIHN0b3AgPSBob29rcy5zdG9wOwoJCQlkZWxldGUgaG9va3Muc3RvcDsKCQkJc3RvcCggZ290b0VuZCApOwoJCX07CgoJCWlmICggdHlwZW9mIHR5cGUgIT09ICJzdHJpbmciICkgewoJCQlnb3RvRW5kID0gY2xlYXJRdWV1ZTsKCQkJY2xlYXJRdWV1ZSA9IHR5cGU7CgkJCXR5cGUgPSB1bmRlZmluZWQ7CgkJfQoJCWlmICggY2xlYXJRdWV1ZSApIHsKCQkJdGhpcy5xdWV1ZSggdHlwZSB8fCAiZngiLCBbXSApOwoJCX0KCgkJcmV0dXJuIHRoaXMuZWFjaCggZnVuY3Rpb24oKSB7CgkJCXZhciBkZXF1ZXVlID0gdHJ1ZSwKCQkJCWluZGV4ID0gdHlwZSAhPSBudWxsICYmIHR5cGUgKyAicXVldWVIb29rcyIsCgkJCQl0aW1lcnMgPSBqUXVlcnkudGltZXJzLAoJCQkJZGF0YSA9IGRhdGFQcml2LmdldCggdGhpcyApOwoKCQkJaWYgKCBpbmRleCApIHsKCQkJCWlmICggZGF0YVsgaW5kZXggXSAmJiBkYXRhWyBpbmRleCBdLnN0b3AgKSB7CgkJCQkJc3RvcFF1ZXVlKCBkYXRhWyBpbmRleCBdICk7CgkJCQl9CgkJCX0gZWxzZSB7CgkJCQlmb3IgKCBpbmRleCBpbiBkYXRhICkgewoJCQkJCWlmICggZGF0YVsgaW5kZXggXSAmJiBkYXRhWyBpbmRleCBdLnN0b3AgJiYgcnJ1bi50ZXN0KCBpbmRleCApICkgewoJCQkJCQlzdG9wUXVldWUoIGRhdGFbIGluZGV4IF0gKTsKCQkJCQl9CgkJCQl9CgkJCX0KCgkJCWZvciAoIGluZGV4ID0gdGltZXJzLmxlbmd0aDsgaW5kZXgtLTsgKSB7CgkJCQlpZiAoIHRpbWVyc1sgaW5kZXggXS5lbGVtID09PSB0aGlzICYmCgkJCQkJKCB0eXBlID09IG51bGwgfHwgdGltZXJzWyBpbmRleCBdLnF1ZXVlID09PSB0eXBlICkgKSB7CgoJCQkJCXRpbWVyc1sgaW5kZXggXS5hbmltLnN0b3AoIGdvdG9FbmQgKTsKCQkJCQlkZXF1ZXVlID0gZmFsc2U7CgkJCQkJdGltZXJzLnNwbGljZSggaW5kZXgsIDEgKTsKCQkJCX0KCQkJfQoKCQkJLy8gU3RhcnQgdGhlIG5leHQgaW4gdGhlIHF1ZXVlIGlmIHRoZSBsYXN0IHN0ZXAgd2Fzbid0IGZvcmNlZC4KCQkJLy8gVGltZXJzIGN1cnJlbnRseSB3aWxsIGNhbGwgdGhlaXIgY29tcGxldGUgY2FsbGJhY2tzLCB3aGljaAoJCQkvLyB3aWxsIGRlcXVldWUgYnV0IG9ubHkgaWYgdGhleSB3ZXJlIGdvdG9FbmQuCgkJCWlmICggZGVxdWV1ZSB8fCAhZ290b0VuZCApIHsKCQkJCWpRdWVyeS5kZXF1ZXVlKCB0aGlzLCB0eXBlICk7CgkJCX0KCQl9ICk7Cgl9LAoJZmluaXNoOiBmdW5jdGlvbiggdHlwZSApIHsKCQlpZiAoIHR5cGUgIT09IGZhbHNlICkgewoJCQl0eXBlID0gdHlwZSB8fCAiZngiOwoJCX0KCQlyZXR1cm4gdGhpcy5lYWNoKCBmdW5jdGlvbigpIHsKCQkJdmFyIGluZGV4LAoJCQkJZGF0YSA9IGRhdGFQcml2LmdldCggdGhpcyApLAoJCQkJcXVldWUgPSBkYXRhWyB0eXBlICsgInF1ZXVlIiBdLAoJCQkJaG9va3MgPSBkYXRhWyB0eXBlICsgInF1ZXVlSG9va3MiIF0sCgkJCQl0aW1lcnMgPSBqUXVlcnkudGltZXJzLAoJCQkJbGVuZ3RoID0gcXVldWUgPyBxdWV1ZS5sZW5ndGggOiAwOwoKCQkJLy8gRW5hYmxlIGZpbmlzaGluZyBmbGFnIG9uIHByaXZhdGUgZGF0YQoJCQlkYXRhLmZpbmlzaCA9IHRydWU7CgoJCQkvLyBFbXB0eSB0aGUgcXVldWUgZmlyc3QKCQkJalF1ZXJ5LnF1ZXVlKCB0aGlzLCB0eXBlLCBbXSApOwoKCQkJaWYgKCBob29rcyAmJiBob29rcy5zdG9wICkgewoJCQkJaG9va3Muc3RvcC5jYWxsKCB0aGlzLCB0cnVlICk7CgkJCX0KCgkJCS8vIExvb2sgZm9yIGFueSBhY3RpdmUgYW5pbWF0aW9ucywgYW5kIGZpbmlzaCB0aGVtCgkJCWZvciAoIGluZGV4ID0gdGltZXJzLmxlbmd0aDsgaW5kZXgtLTsgKSB7CgkJCQlpZiAoIHRpbWVyc1sgaW5kZXggXS5lbGVtID09PSB0aGlzICYmIHRpbWVyc1sgaW5kZXggXS5xdWV1ZSA9PT0gdHlwZSApIHsKCQkJCQl0aW1lcnNbIGluZGV4IF0uYW5pbS5zdG9wKCB0cnVlICk7CgkJCQkJdGltZXJzLnNwbGljZSggaW5kZXgsIDEgKTsKCQkJCX0KCQkJfQoKCQkJLy8gTG9vayBmb3IgYW55IGFuaW1hdGlvbnMgaW4gdGhlIG9sZCBxdWV1ZSBhbmQgZmluaXNoIHRoZW0KCQkJZm9yICggaW5kZXggPSAwOyBpbmRleCA8IGxlbmd0aDsgaW5kZXgrKyApIHsKCQkJCWlmICggcXVldWVbIGluZGV4IF0gJiYgcXVldWVbIGluZGV4IF0uZmluaXNoICkgewoJCQkJCXF1ZXVlWyBpbmRleCBdLmZpbmlzaC5jYWxsKCB0aGlzICk7CgkJCQl9CgkJCX0KCgkJCS8vIFR1cm4gb2ZmIGZpbmlzaGluZyBmbGFnCgkJCWRlbGV0ZSBkYXRhLmZpbmlzaDsKCQl9ICk7Cgl9Cn0gKTsKCmpRdWVyeS5lYWNoKCBbICJ0b2dnbGUiLCAic2hvdyIsICJoaWRlIiBdLCBmdW5jdGlvbiggX2ksIG5hbWUgKSB7Cgl2YXIgY3NzRm4gPSBqUXVlcnkuZm5bIG5hbWUgXTsKCWpRdWVyeS5mblsgbmFtZSBdID0gZnVuY3Rpb24oIHNwZWVkLCBlYXNpbmcsIGNhbGxiYWNrICkgewoJCXJldHVybiBzcGVlZCA9PSBudWxsIHx8IHR5cGVvZiBzcGVlZCA9PT0gImJvb2xlYW4iID8KCQkJY3NzRm4uYXBwbHkoIHRoaXMsIGFyZ3VtZW50cyApIDoKCQkJdGhpcy5hbmltYXRlKCBnZW5GeCggbmFtZSwgdHJ1ZSApLCBzcGVlZCwgZWFzaW5nLCBjYWxsYmFjayApOwoJfTsKfSApOwoKLy8gR2VuZXJhdGUgc2hvcnRjdXRzIGZvciBjdXN0b20gYW5pbWF0aW9ucwpqUXVlcnkuZWFjaCggewoJc2xpZGVEb3duOiBnZW5GeCggInNob3ciICksCglzbGlkZVVwOiBnZW5GeCggImhpZGUiICksCglzbGlkZVRvZ2dsZTogZ2VuRngoICJ0b2dnbGUiICksCglmYWRlSW46IHsgb3BhY2l0eTogInNob3ciIH0sCglmYWRlT3V0OiB7IG9wYWNpdHk6ICJoaWRlIiB9LAoJZmFkZVRvZ2dsZTogeyBvcGFjaXR5OiAidG9nZ2xlIiB9Cn0sIGZ1bmN0aW9uKCBuYW1lLCBwcm9wcyApIHsKCWpRdWVyeS5mblsgbmFtZSBdID0gZnVuY3Rpb24oIHNwZWVkLCBlYXNpbmcsIGNhbGxiYWNrICkgewoJCXJldHVybiB0aGlzLmFuaW1hdGUoIHByb3BzLCBzcGVlZCwgZWFzaW5nLCBjYWxsYmFjayApOwoJfTsKfSApOwoKalF1ZXJ5LnRpbWVycyA9IFtdOwpqUXVlcnkuZngudGljayA9IGZ1bmN0aW9uKCkgewoJdmFyIHRpbWVyLAoJCWkgPSAwLAoJCXRpbWVycyA9IGpRdWVyeS50aW1lcnM7CgoJZnhOb3cgPSBEYXRlLm5vdygpOwoKCWZvciAoIDsgaSA8IHRpbWVycy5sZW5ndGg7IGkrKyApIHsKCQl0aW1lciA9IHRpbWVyc1sgaSBdOwoKCQkvLyBSdW4gdGhlIHRpbWVyIGFuZCBzYWZlbHkgcmVtb3ZlIGl0IHdoZW4gZG9uZSAoYWxsb3dpbmcgZm9yIGV4dGVybmFsIHJlbW92YWwpCgkJaWYgKCAhdGltZXIoKSAmJiB0aW1lcnNbIGkgXSA9PT0gdGltZXIgKSB7CgkJCXRpbWVycy5zcGxpY2UoIGktLSwgMSApOwoJCX0KCX0KCglpZiAoICF0aW1lcnMubGVuZ3RoICkgewoJCWpRdWVyeS5meC5zdG9wKCk7Cgl9CglmeE5vdyA9IHVuZGVmaW5lZDsKfTsKCmpRdWVyeS5meC50aW1lciA9IGZ1bmN0aW9uKCB0aW1lciApIHsKCWpRdWVyeS50aW1lcnMucHVzaCggdGltZXIgKTsKCWpRdWVyeS5meC5zdGFydCgpOwp9OwoKalF1ZXJ5LmZ4LmludGVydmFsID0gMTM7CmpRdWVyeS5meC5zdGFydCA9IGZ1bmN0aW9uKCkgewoJaWYgKCBpblByb2dyZXNzICkgewoJCXJldHVybjsKCX0KCglpblByb2dyZXNzID0gdHJ1ZTsKCXNjaGVkdWxlKCk7Cn07CgpqUXVlcnkuZnguc3RvcCA9IGZ1bmN0aW9uKCkgewoJaW5Qcm9ncmVzcyA9IG51bGw7Cn07CgpqUXVlcnkuZnguc3BlZWRzID0gewoJc2xvdzogNjAwLAoJZmFzdDogMjAwLAoKCS8vIERlZmF1bHQgc3BlZWQKCV9kZWZhdWx0OiA0MDAKfTsKCgovLyBCYXNlZCBvZmYgb2YgdGhlIHBsdWdpbiBieSBDbGludCBIZWxmZXJzLCB3aXRoIHBlcm1pc3Npb24uCmpRdWVyeS5mbi5kZWxheSA9IGZ1bmN0aW9uKCB0aW1lLCB0eXBlICkgewoJdGltZSA9IGpRdWVyeS5meCA/IGpRdWVyeS5meC5zcGVlZHNbIHRpbWUgXSB8fCB0aW1lIDogdGltZTsKCXR5cGUgPSB0eXBlIHx8ICJmeCI7CgoJcmV0dXJuIHRoaXMucXVldWUoIHR5cGUsIGZ1bmN0aW9uKCBuZXh0LCBob29rcyApIHsKCQl2YXIgdGltZW91dCA9IHdpbmRvdy5zZXRUaW1lb3V0KCBuZXh0LCB0aW1lICk7CgkJaG9va3Muc3RvcCA9IGZ1bmN0aW9uKCkgewoJCQl3aW5kb3cuY2xlYXJUaW1lb3V0KCB0aW1lb3V0ICk7CgkJfTsKCX0gKTsKfTsKCgooIGZ1bmN0aW9uKCkgewoJdmFyIGlucHV0ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCggImlucHV0IiApLAoJCXNlbGVjdCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoICJzZWxlY3QiICksCgkJb3B0ID0gc2VsZWN0LmFwcGVuZENoaWxkKCBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCAib3B0aW9uIiApICk7CgoJaW5wdXQudHlwZSA9ICJjaGVja2JveCI7CgoJLy8gU3VwcG9ydDogQW5kcm9pZCA8PTQuMyBvbmx5CgkvLyBEZWZhdWx0IHZhbHVlIGZvciBhIGNoZWNrYm94IHNob3VsZCBiZSAib24iCglzdXBwb3J0LmNoZWNrT24gPSBpbnB1dC52YWx1ZSAhPT0gIiI7CgoJLy8gU3VwcG9ydDogSUUgPD0xMSBvbmx5CgkvLyBNdXN0IGFjY2VzcyBzZWxlY3RlZEluZGV4IHRvIG1ha2UgZGVmYXVsdCBvcHRpb25zIHNlbGVjdAoJc3VwcG9ydC5vcHRTZWxlY3RlZCA9IG9wdC5zZWxlY3RlZDsKCgkvLyBTdXBwb3J0OiBJRSA8PTExIG9ubHkKCS8vIEFuIGlucHV0IGxvc2VzIGl0cyB2YWx1ZSBhZnRlciBiZWNvbWluZyBhIHJhZGlvCglpbnB1dCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoICJpbnB1dCIgKTsKCWlucHV0LnZhbHVlID0gInQiOwoJaW5wdXQudHlwZSA9ICJyYWRpbyI7CglzdXBwb3J0LnJhZGlvVmFsdWUgPSBpbnB1dC52YWx1ZSA9PT0gInQiOwp9ICkoKTsKCgp2YXIgYm9vbEhvb2ssCglhdHRySGFuZGxlID0galF1ZXJ5LmV4cHIuYXR0ckhhbmRsZTsKCmpRdWVyeS5mbi5leHRlbmQoIHsKCWF0dHI6IGZ1bmN0aW9uKCBuYW1lLCB2YWx1ZSApIHsKCQlyZXR1cm4gYWNjZXNzKCB0aGlzLCBqUXVlcnkuYXR0ciwgbmFtZSwgdmFsdWUsIGFyZ3VtZW50cy5sZW5ndGggPiAxICk7Cgl9LAoKCXJlbW92ZUF0dHI6IGZ1bmN0aW9uKCBuYW1lICkgewoJCXJldHVybiB0aGlzLmVhY2goIGZ1bmN0aW9uKCkgewoJCQlqUXVlcnkucmVtb3ZlQXR0ciggdGhpcywgbmFtZSApOwoJCX0gKTsKCX0KfSApOwoKalF1ZXJ5LmV4dGVuZCggewoJYXR0cjogZnVuY3Rpb24oIGVsZW0sIG5hbWUsIHZhbHVlICkgewoJCXZhciByZXQsIGhvb2tzLAoJCQluVHlwZSA9IGVsZW0ubm9kZVR5cGU7CgoJCS8vIERvbid0IGdldC9zZXQgYXR0cmlidXRlcyBvbiB0ZXh0LCBjb21tZW50IGFuZCBhdHRyaWJ1dGUgbm9kZXMKCQlpZiAoIG5UeXBlID09PSAzIHx8IG5UeXBlID09PSA4IHx8IG5UeXBlID09PSAyICkgewoJCQlyZXR1cm47CgkJfQoKCQkvLyBGYWxsYmFjayB0byBwcm9wIHdoZW4gYXR0cmlidXRlcyBhcmUgbm90IHN1cHBvcnRlZAoJCWlmICggdHlwZW9mIGVsZW0uZ2V0QXR0cmlidXRlID09PSAidW5kZWZpbmVkIiApIHsKCQkJcmV0dXJuIGpRdWVyeS5wcm9wKCBlbGVtLCBuYW1lLCB2YWx1ZSApOwoJCX0KCgkJLy8gQXR0cmlidXRlIGhvb2tzIGFyZSBkZXRlcm1pbmVkIGJ5IHRoZSBsb3dlcmNhc2UgdmVyc2lvbgoJCS8vIEdyYWIgbmVjZXNzYXJ5IGhvb2sgaWYgb25lIGlzIGRlZmluZWQKCQlpZiAoIG5UeXBlICE9PSAxIHx8ICFqUXVlcnkuaXNYTUxEb2MoIGVsZW0gKSApIHsKCQkJaG9va3MgPSBqUXVlcnkuYXR0ckhvb2tzWyBuYW1lLnRvTG93ZXJDYXNlKCkgXSB8fAoJCQkJKCBqUXVlcnkuZXhwci5tYXRjaC5ib29sLnRlc3QoIG5hbWUgKSA/IGJvb2xIb29rIDogdW5kZWZpbmVkICk7CgkJfQoKCQlpZiAoIHZhbHVlICE9PSB1bmRlZmluZWQgKSB7CgkJCWlmICggdmFsdWUgPT09IG51bGwgKSB7CgkJCQlqUXVlcnkucmVtb3ZlQXR0ciggZWxlbSwgbmFtZSApOwoJCQkJcmV0dXJuOwoJCQl9CgoJCQlpZiAoIGhvb2tzICYmICJzZXQiIGluIGhvb2tzICYmCgkJCQkoIHJldCA9IGhvb2tzLnNldCggZWxlbSwgdmFsdWUsIG5hbWUgKSApICE9PSB1bmRlZmluZWQgKSB7CgkJCQlyZXR1cm4gcmV0OwoJCQl9CgoJCQllbGVtLnNldEF0dHJpYnV0ZSggbmFtZSwgdmFsdWUgKyAiIiApOwoJCQlyZXR1cm4gdmFsdWU7CgkJfQoKCQlpZiAoIGhvb2tzICYmICJnZXQiIGluIGhvb2tzICYmICggcmV0ID0gaG9va3MuZ2V0KCBlbGVtLCBuYW1lICkgKSAhPT0gbnVsbCApIHsKCQkJcmV0dXJuIHJldDsKCQl9CgoJCXJldCA9IGpRdWVyeS5maW5kLmF0dHIoIGVsZW0sIG5hbWUgKTsKCgkJLy8gTm9uLWV4aXN0ZW50IGF0dHJpYnV0ZXMgcmV0dXJuIG51bGwsIHdlIG5vcm1hbGl6ZSB0byB1bmRlZmluZWQKCQlyZXR1cm4gcmV0ID09IG51bGwgPyB1bmRlZmluZWQgOiByZXQ7Cgl9LAoKCWF0dHJIb29rczogewoJCXR5cGU6IHsKCQkJc2V0OiBmdW5jdGlvbiggZWxlbSwgdmFsdWUgKSB7CgkJCQlpZiAoICFzdXBwb3J0LnJhZGlvVmFsdWUgJiYgdmFsdWUgPT09ICJyYWRpbyIgJiYKCQkJCQlub2RlTmFtZSggZWxlbSwgImlucHV0IiApICkgewoJCQkJCXZhciB2YWwgPSBlbGVtLnZhbHVlOwoJCQkJCWVsZW0uc2V0QXR0cmlidXRlKCAidHlwZSIsIHZhbHVlICk7CgkJCQkJaWYgKCB2YWwgKSB7CgkJCQkJCWVsZW0udmFsdWUgPSB2YWw7CgkJCQkJfQoJCQkJCXJldHVybiB2YWx1ZTsKCQkJCX0KCQkJfQoJCX0KCX0sCgoJcmVtb3ZlQXR0cjogZnVuY3Rpb24oIGVsZW0sIHZhbHVlICkgewoJCXZhciBuYW1lLAoJCQlpID0gMCwKCgkJCS8vIEF0dHJpYnV0ZSBuYW1lcyBjYW4gY29udGFpbiBub24tSFRNTCB3aGl0ZXNwYWNlIGNoYXJhY3RlcnMKCQkJLy8gaHR0cHM6Ly9odG1sLnNwZWMud2hhdHdnLm9yZy9tdWx0aXBhZ2Uvc3ludGF4Lmh0bWwjYXR0cmlidXRlcy0yCgkJCWF0dHJOYW1lcyA9IHZhbHVlICYmIHZhbHVlLm1hdGNoKCBybm90aHRtbHdoaXRlICk7CgoJCWlmICggYXR0ck5hbWVzICYmIGVsZW0ubm9kZVR5cGUgPT09IDEgKSB7CgkJCXdoaWxlICggKCBuYW1lID0gYXR0ck5hbWVzWyBpKysgXSApICkgewoJCQkJZWxlbS5yZW1vdmVBdHRyaWJ1dGUoIG5hbWUgKTsKCQkJfQoJCX0KCX0KfSApOwoKLy8gSG9va3MgZm9yIGJvb2xlYW4gYXR0cmlidXRlcwpib29sSG9vayA9IHsKCXNldDogZnVuY3Rpb24oIGVsZW0sIHZhbHVlLCBuYW1lICkgewoJCWlmICggdmFsdWUgPT09IGZhbHNlICkgewoKCQkJLy8gUmVtb3ZlIGJvb2xlYW4gYXR0cmlidXRlcyB3aGVuIHNldCB0byBmYWxzZQoJCQlqUXVlcnkucmVtb3ZlQXR0ciggZWxlbSwgbmFtZSApOwoJCX0gZWxzZSB7CgkJCWVsZW0uc2V0QXR0cmlidXRlKCBuYW1lLCBuYW1lICk7CgkJfQoJCXJldHVybiBuYW1lOwoJfQp9OwoKalF1ZXJ5LmVhY2goIGpRdWVyeS5leHByLm1hdGNoLmJvb2wuc291cmNlLm1hdGNoKCAvXHcrL2cgKSwgZnVuY3Rpb24oIF9pLCBuYW1lICkgewoJdmFyIGdldHRlciA9IGF0dHJIYW5kbGVbIG5hbWUgXSB8fCBqUXVlcnkuZmluZC5hdHRyOwoKCWF0dHJIYW5kbGVbIG5hbWUgXSA9IGZ1bmN0aW9uKCBlbGVtLCBuYW1lLCBpc1hNTCApIHsKCQl2YXIgcmV0LCBoYW5kbGUsCgkJCWxvd2VyY2FzZU5hbWUgPSBuYW1lLnRvTG93ZXJDYXNlKCk7CgoJCWlmICggIWlzWE1MICkgewoKCQkJLy8gQXZvaWQgYW4gaW5maW5pdGUgbG9vcCBieSB0ZW1wb3JhcmlseSByZW1vdmluZyB0aGlzIGZ1bmN0aW9uIGZyb20gdGhlIGdldHRlcgoJCQloYW5kbGUgPSBhdHRySGFuZGxlWyBsb3dlcmNhc2VOYW1lIF07CgkJCWF0dHJIYW5kbGVbIGxvd2VyY2FzZU5hbWUgXSA9IHJldDsKCQkJcmV0ID0gZ2V0dGVyKCBlbGVtLCBuYW1lLCBpc1hNTCApICE9IG51bGwgPwoJCQkJbG93ZXJjYXNlTmFtZSA6CgkJCQludWxsOwoJCQlhdHRySGFuZGxlWyBsb3dlcmNhc2VOYW1lIF0gPSBoYW5kbGU7CgkJfQoJCXJldHVybiByZXQ7Cgl9Owp9ICk7CgoKCgp2YXIgcmZvY3VzYWJsZSA9IC9eKD86aW5wdXR8c2VsZWN0fHRleHRhcmVhfGJ1dHRvbikkL2ksCglyY2xpY2thYmxlID0gL14oPzphfGFyZWEpJC9pOwoKalF1ZXJ5LmZuLmV4dGVuZCggewoJcHJvcDogZnVuY3Rpb24oIG5hbWUsIHZhbHVlICkgewoJCXJldHVybiBhY2Nlc3MoIHRoaXMsIGpRdWVyeS5wcm9wLCBuYW1lLCB2YWx1ZSwgYXJndW1lbnRzLmxlbmd0aCA+IDEgKTsKCX0sCgoJcmVtb3ZlUHJvcDogZnVuY3Rpb24oIG5hbWUgKSB7CgkJcmV0dXJuIHRoaXMuZWFjaCggZnVuY3Rpb24oKSB7CgkJCWRlbGV0ZSB0aGlzWyBqUXVlcnkucHJvcEZpeFsgbmFtZSBdIHx8IG5hbWUgXTsKCQl9ICk7Cgl9Cn0gKTsKCmpRdWVyeS5leHRlbmQoIHsKCXByb3A6IGZ1bmN0aW9uKCBlbGVtLCBuYW1lLCB2YWx1ZSApIHsKCQl2YXIgcmV0LCBob29rcywKCQkJblR5cGUgPSBlbGVtLm5vZGVUeXBlOwoKCQkvLyBEb24ndCBnZXQvc2V0IHByb3BlcnRpZXMgb24gdGV4dCwgY29tbWVudCBhbmQgYXR0cmlidXRlIG5vZGVzCgkJaWYgKCBuVHlwZSA9PT0gMyB8fCBuVHlwZSA9PT0gOCB8fCBuVHlwZSA9PT0gMiApIHsKCQkJcmV0dXJuOwoJCX0KCgkJaWYgKCBuVHlwZSAhPT0gMSB8fCAhalF1ZXJ5LmlzWE1MRG9jKCBlbGVtICkgKSB7CgoJCQkvLyBGaXggbmFtZSBhbmQgYXR0YWNoIGhvb2tzCgkJCW5hbWUgPSBqUXVlcnkucHJvcEZpeFsgbmFtZSBdIHx8IG5hbWU7CgkJCWhvb2tzID0galF1ZXJ5LnByb3BIb29rc1sgbmFtZSBdOwoJCX0KCgkJaWYgKCB2YWx1ZSAhPT0gdW5kZWZpbmVkICkgewoJCQlpZiAoIGhvb2tzICYmICJzZXQiIGluIGhvb2tzICYmCgkJCQkoIHJldCA9IGhvb2tzLnNldCggZWxlbSwgdmFsdWUsIG5hbWUgKSApICE9PSB1bmRlZmluZWQgKSB7CgkJCQlyZXR1cm4gcmV0OwoJCQl9CgoJCQlyZXR1cm4gKCBlbGVtWyBuYW1lIF0gPSB2YWx1ZSApOwoJCX0KCgkJaWYgKCBob29rcyAmJiAiZ2V0IiBpbiBob29rcyAmJiAoIHJldCA9IGhvb2tzLmdldCggZWxlbSwgbmFtZSApICkgIT09IG51bGwgKSB7CgkJCXJldHVybiByZXQ7CgkJfQoKCQlyZXR1cm4gZWxlbVsgbmFtZSBdOwoJfSwKCglwcm9wSG9va3M6IHsKCQl0YWJJbmRleDogewoJCQlnZXQ6IGZ1bmN0aW9uKCBlbGVtICkgewoKCQkJCS8vIFN1cHBvcnQ6IElFIDw9OSAtIDExIG9ubHkKCQkJCS8vIGVsZW0udGFiSW5kZXggZG9lc24ndCBhbHdheXMgcmV0dXJuIHRoZQoJCQkJLy8gY29ycmVjdCB2YWx1ZSB3aGVuIGl0IGhhc24ndCBiZWVuIGV4cGxpY2l0bHkgc2V0CgkJCQkvLyBVc2UgcHJvcGVyIGF0dHJpYnV0ZSByZXRyaWV2YWwgKHRyYWMtMTIwNzIpCgkJCQl2YXIgdGFiaW5kZXggPSBqUXVlcnkuZmluZC5hdHRyKCBlbGVtLCAidGFiaW5kZXgiICk7CgoJCQkJaWYgKCB0YWJpbmRleCApIHsKCQkJCQlyZXR1cm4gcGFyc2VJbnQoIHRhYmluZGV4LCAxMCApOwoJCQkJfQoKCQkJCWlmICgKCQkJCQlyZm9jdXNhYmxlLnRlc3QoIGVsZW0ubm9kZU5hbWUgKSB8fAoJCQkJCXJjbGlja2FibGUudGVzdCggZWxlbS5ub2RlTmFtZSApICYmCgkJCQkJZWxlbS5ocmVmCgkJCQkpIHsKCQkJCQlyZXR1cm4gMDsKCQkJCX0KCgkJCQlyZXR1cm4gLTE7CgkJCX0KCQl9Cgl9LAoKCXByb3BGaXg6IHsKCQkiZm9yIjogImh0bWxGb3IiLAoJCSJjbGFzcyI6ICJjbGFzc05hbWUiCgl9Cn0gKTsKCi8vIFN1cHBvcnQ6IElFIDw9MTEgb25seQovLyBBY2Nlc3NpbmcgdGhlIHNlbGVjdGVkSW5kZXggcHJvcGVydHkKLy8gZm9yY2VzIHRoZSBicm93c2VyIHRvIHJlc3BlY3Qgc2V0dGluZyBzZWxlY3RlZAovLyBvbiB0aGUgb3B0aW9uCi8vIFRoZSBnZXR0ZXIgZW5zdXJlcyBhIGRlZmF1bHQgb3B0aW9uIGlzIHNlbGVjdGVkCi8vIHdoZW4gaW4gYW4gb3B0Z3JvdXAKLy8gZXNsaW50IHJ1bGUgIm5vLXVudXNlZC1leHByZXNzaW9ucyIgaXMgZGlzYWJsZWQgZm9yIHRoaXMgY29kZQovLyBzaW5jZSBpdCBjb25zaWRlcnMgc3VjaCBhY2Nlc3Npb25zIG5vb3AKaWYgKCAhc3VwcG9ydC5vcHRTZWxlY3RlZCApIHsKCWpRdWVyeS5wcm9wSG9va3Muc2VsZWN0ZWQgPSB7CgkJZ2V0OiBmdW5jdGlvbiggZWxlbSApIHsKCgkJCS8qIGVzbGludCBuby11bnVzZWQtZXhwcmVzc2lvbnM6ICJvZmYiICovCgoJCQl2YXIgcGFyZW50ID0gZWxlbS5wYXJlbnROb2RlOwoJCQlpZiAoIHBhcmVudCAmJiBwYXJlbnQucGFyZW50Tm9kZSApIHsKCQkJCXBhcmVudC5wYXJlbnROb2RlLnNlbGVjdGVkSW5kZXg7CgkJCX0KCQkJcmV0dXJuIG51bGw7CgkJfSwKCQlzZXQ6IGZ1bmN0aW9uKCBlbGVtICkgewoKCQkJLyogZXNsaW50IG5vLXVudXNlZC1leHByZXNzaW9uczogIm9mZiIgKi8KCgkJCXZhciBwYXJlbnQgPSBlbGVtLnBhcmVudE5vZGU7CgkJCWlmICggcGFyZW50ICkgewoJCQkJcGFyZW50LnNlbGVjdGVkSW5kZXg7CgoJCQkJaWYgKCBwYXJlbnQucGFyZW50Tm9kZSApIHsKCQkJCQlwYXJlbnQucGFyZW50Tm9kZS5zZWxlY3RlZEluZGV4OwoJCQkJfQoJCQl9CgkJfQoJfTsKfQoKalF1ZXJ5LmVhY2goIFsKCSJ0YWJJbmRleCIsCgkicmVhZE9ubHkiLAoJIm1heExlbmd0aCIsCgkiY2VsbFNwYWNpbmciLAoJImNlbGxQYWRkaW5nIiwKCSJyb3dTcGFuIiwKCSJjb2xTcGFuIiwKCSJ1c2VNYXAiLAoJImZyYW1lQm9yZGVyIiwKCSJjb250ZW50RWRpdGFibGUiCl0sIGZ1bmN0aW9uKCkgewoJalF1ZXJ5LnByb3BGaXhbIHRoaXMudG9Mb3dlckNhc2UoKSBdID0gdGhpczsKfSApOwoKCgoKCS8vIFN0cmlwIGFuZCBjb2xsYXBzZSB3aGl0ZXNwYWNlIGFjY29yZGluZyB0byBIVE1MIHNwZWMKCS8vIGh0dHBzOi8vaW5mcmEuc3BlYy53aGF0d2cub3JnLyNzdHJpcC1hbmQtY29sbGFwc2UtYXNjaWktd2hpdGVzcGFjZQoJZnVuY3Rpb24gc3RyaXBBbmRDb2xsYXBzZSggdmFsdWUgKSB7CgkJdmFyIHRva2VucyA9IHZhbHVlLm1hdGNoKCBybm90aHRtbHdoaXRlICkgfHwgW107CgkJcmV0dXJuIHRva2Vucy5qb2luKCAiICIgKTsKCX0KCgpmdW5jdGlvbiBnZXRDbGFzcyggZWxlbSApIHsKCXJldHVybiBlbGVtLmdldEF0dHJpYnV0ZSAmJiBlbGVtLmdldEF0dHJpYnV0ZSggImNsYXNzIiApIHx8ICIiOwp9CgpmdW5jdGlvbiBjbGFzc2VzVG9BcnJheSggdmFsdWUgKSB7CglpZiAoIEFycmF5LmlzQXJyYXkoIHZhbHVlICkgKSB7CgkJcmV0dXJuIHZhbHVlOwoJfQoJaWYgKCB0eXBlb2YgdmFsdWUgPT09ICJzdHJpbmciICkgewoJCXJldHVybiB2YWx1ZS5tYXRjaCggcm5vdGh0bWx3aGl0ZSApIHx8IFtdOwoJfQoJcmV0dXJuIFtdOwp9CgpqUXVlcnkuZm4uZXh0ZW5kKCB7CglhZGRDbGFzczogZnVuY3Rpb24oIHZhbHVlICkgewoJCXZhciBjbGFzc05hbWVzLCBjdXIsIGN1clZhbHVlLCBjbGFzc05hbWUsIGksIGZpbmFsVmFsdWU7CgoJCWlmICggaXNGdW5jdGlvbiggdmFsdWUgKSApIHsKCQkJcmV0dXJuIHRoaXMuZWFjaCggZnVuY3Rpb24oIGogKSB7CgkJCQlqUXVlcnkoIHRoaXMgKS5hZGRDbGFzcyggdmFsdWUuY2FsbCggdGhpcywgaiwgZ2V0Q2xhc3MoIHRoaXMgKSApICk7CgkJCX0gKTsKCQl9CgoJCWNsYXNzTmFtZXMgPSBjbGFzc2VzVG9BcnJheSggdmFsdWUgKTsKCgkJaWYgKCBjbGFzc05hbWVzLmxlbmd0aCApIHsKCQkJcmV0dXJuIHRoaXMuZWFjaCggZnVuY3Rpb24oKSB7CgkJCQljdXJWYWx1ZSA9IGdldENsYXNzKCB0aGlzICk7CgkJCQljdXIgPSB0aGlzLm5vZGVUeXBlID09PSAxICYmICggIiAiICsgc3RyaXBBbmRDb2xsYXBzZSggY3VyVmFsdWUgKSArICIgIiApOwoKCQkJCWlmICggY3VyICkgewoJCQkJCWZvciAoIGkgPSAwOyBpIDwgY2xhc3NOYW1lcy5sZW5ndGg7IGkrKyApIHsKCQkJCQkJY2xhc3NOYW1lID0gY2xhc3NOYW1lc1sgaSBdOwoJCQkJCQlpZiAoIGN1ci5pbmRleE9mKCAiICIgKyBjbGFzc05hbWUgKyAiICIgKSA8IDAgKSB7CgkJCQkJCQljdXIgKz0gY2xhc3NOYW1lICsgIiAiOwoJCQkJCQl9CgkJCQkJfQoKCQkJCQkvLyBPbmx5IGFzc2lnbiBpZiBkaWZmZXJlbnQgdG8gYXZvaWQgdW5uZWVkZWQgcmVuZGVyaW5nLgoJCQkJCWZpbmFsVmFsdWUgPSBzdHJpcEFuZENvbGxhcHNlKCBjdXIgKTsKCQkJCQlpZiAoIGN1clZhbHVlICE9PSBmaW5hbFZhbHVlICkgewoJCQkJCQl0aGlzLnNldEF0dHJpYnV0ZSggImNsYXNzIiwgZmluYWxWYWx1ZSApOwoJCQkJCX0KCQkJCX0KCQkJfSApOwoJCX0KCgkJcmV0dXJuIHRoaXM7Cgl9LAoKCXJlbW92ZUNsYXNzOiBmdW5jdGlvbiggdmFsdWUgKSB7CgkJdmFyIGNsYXNzTmFtZXMsIGN1ciwgY3VyVmFsdWUsIGNsYXNzTmFtZSwgaSwgZmluYWxWYWx1ZTsKCgkJaWYgKCBpc0Z1bmN0aW9uKCB2YWx1ZSApICkgewoJCQlyZXR1cm4gdGhpcy5lYWNoKCBmdW5jdGlvbiggaiApIHsKCQkJCWpRdWVyeSggdGhpcyApLnJlbW92ZUNsYXNzKCB2YWx1ZS5jYWxsKCB0aGlzLCBqLCBnZXRDbGFzcyggdGhpcyApICkgKTsKCQkJfSApOwoJCX0KCgkJaWYgKCAhYXJndW1lbnRzLmxlbmd0aCApIHsKCQkJcmV0dXJuIHRoaXMuYXR0ciggImNsYXNzIiwgIiIgKTsKCQl9CgoJCWNsYXNzTmFtZXMgPSBjbGFzc2VzVG9BcnJheSggdmFsdWUgKTsKCgkJaWYgKCBjbGFzc05hbWVzLmxlbmd0aCApIHsKCQkJcmV0dXJuIHRoaXMuZWFjaCggZnVuY3Rpb24oKSB7CgkJCQljdXJWYWx1ZSA9IGdldENsYXNzKCB0aGlzICk7CgoJCQkJLy8gVGhpcyBleHByZXNzaW9uIGlzIGhlcmUgZm9yIGJldHRlciBjb21wcmVzc2liaWxpdHkgKHNlZSBhZGRDbGFzcykKCQkJCWN1ciA9IHRoaXMubm9kZVR5cGUgPT09IDEgJiYgKCAiICIgKyBzdHJpcEFuZENvbGxhcHNlKCBjdXJWYWx1ZSApICsgIiAiICk7CgoJCQkJaWYgKCBjdXIgKSB7CgkJCQkJZm9yICggaSA9IDA7IGkgPCBjbGFzc05hbWVzLmxlbmd0aDsgaSsrICkgewoJCQkJCQljbGFzc05hbWUgPSBjbGFzc05hbWVzWyBpIF07CgoJCQkJCQkvLyBSZW1vdmUgKmFsbCogaW5zdGFuY2VzCgkJCQkJCXdoaWxlICggY3VyLmluZGV4T2YoICIgIiArIGNsYXNzTmFtZSArICIgIiApID4gLTEgKSB7CgkJCQkJCQljdXIgPSBjdXIucmVwbGFjZSggIiAiICsgY2xhc3NOYW1lICsgIiAiLCAiICIgKTsKCQkJCQkJfQoJCQkJCX0KCgkJCQkJLy8gT25seSBhc3NpZ24gaWYgZGlmZmVyZW50IHRvIGF2b2lkIHVubmVlZGVkIHJlbmRlcmluZy4KCQkJCQlmaW5hbFZhbHVlID0gc3RyaXBBbmRDb2xsYXBzZSggY3VyICk7CgkJCQkJaWYgKCBjdXJWYWx1ZSAhPT0gZmluYWxWYWx1ZSApIHsKCQkJCQkJdGhpcy5zZXRBdHRyaWJ1dGUoICJjbGFzcyIsIGZpbmFsVmFsdWUgKTsKCQkJCQl9CgkJCQl9CgkJCX0gKTsKCQl9CgoJCXJldHVybiB0aGlzOwoJfSwKCgl0b2dnbGVDbGFzczogZnVuY3Rpb24oIHZhbHVlLCBzdGF0ZVZhbCApIHsKCQl2YXIgY2xhc3NOYW1lcywgY2xhc3NOYW1lLCBpLCBzZWxmLAoJCQl0eXBlID0gdHlwZW9mIHZhbHVlLAoJCQlpc1ZhbGlkVmFsdWUgPSB0eXBlID09PSAic3RyaW5nIiB8fCBBcnJheS5pc0FycmF5KCB2YWx1ZSApOwoKCQlpZiAoIGlzRnVuY3Rpb24oIHZhbHVlICkgKSB7CgkJCXJldHVybiB0aGlzLmVhY2goIGZ1bmN0aW9uKCBpICkgewoJCQkJalF1ZXJ5KCB0aGlzICkudG9nZ2xlQ2xhc3MoCgkJCQkJdmFsdWUuY2FsbCggdGhpcywgaSwgZ2V0Q2xhc3MoIHRoaXMgKSwgc3RhdGVWYWwgKSwKCQkJCQlzdGF0ZVZhbAoJCQkJKTsKCQkJfSApOwoJCX0KCgkJaWYgKCB0eXBlb2Ygc3RhdGVWYWwgPT09ICJib29sZWFuIiAmJiBpc1ZhbGlkVmFsdWUgKSB7CgkJCXJldHVybiBzdGF0ZVZhbCA/IHRoaXMuYWRkQ2xhc3MoIHZhbHVlICkgOiB0aGlzLnJlbW92ZUNsYXNzKCB2YWx1ZSApOwoJCX0KCgkJY2xhc3NOYW1lcyA9IGNsYXNzZXNUb0FycmF5KCB2YWx1ZSApOwoKCQlyZXR1cm4gdGhpcy5lYWNoKCBmdW5jdGlvbigpIHsKCQkJaWYgKCBpc1ZhbGlkVmFsdWUgKSB7CgoJCQkJLy8gVG9nZ2xlIGluZGl2aWR1YWwgY2xhc3MgbmFtZXMKCQkJCXNlbGYgPSBqUXVlcnkoIHRoaXMgKTsKCgkJCQlmb3IgKCBpID0gMDsgaSA8IGNsYXNzTmFtZXMubGVuZ3RoOyBpKysgKSB7CgkJCQkJY2xhc3NOYW1lID0gY2xhc3NOYW1lc1sgaSBdOwoKCQkJCQkvLyBDaGVjayBlYWNoIGNsYXNzTmFtZSBnaXZlbiwgc3BhY2Ugc2VwYXJhdGVkIGxpc3QKCQkJCQlpZiAoIHNlbGYuaGFzQ2xhc3MoIGNsYXNzTmFtZSApICkgewoJCQkJCQlzZWxmLnJlbW92ZUNsYXNzKCBjbGFzc05hbWUgKTsKCQkJCQl9IGVsc2UgewoJCQkJCQlzZWxmLmFkZENsYXNzKCBjbGFzc05hbWUgKTsKCQkJCQl9CgkJCQl9CgoJCQkvLyBUb2dnbGUgd2hvbGUgY2xhc3MgbmFtZQoJCQl9IGVsc2UgaWYgKCB2YWx1ZSA9PT0gdW5kZWZpbmVkIHx8IHR5cGUgPT09ICJib29sZWFuIiApIHsKCQkJCWNsYXNzTmFtZSA9IGdldENsYXNzKCB0aGlzICk7CgkJCQlpZiAoIGNsYXNzTmFtZSApIHsKCgkJCQkJLy8gU3RvcmUgY2xhc3NOYW1lIGlmIHNldAoJCQkJCWRhdGFQcml2LnNldCggdGhpcywgIl9fY2xhc3NOYW1lX18iLCBjbGFzc05hbWUgKTsKCQkJCX0KCgkJCQkvLyBJZiB0aGUgZWxlbWVudCBoYXMgYSBjbGFzcyBuYW1lIG9yIGlmIHdlJ3JlIHBhc3NlZCBgZmFsc2VgLAoJCQkJLy8gdGhlbiByZW1vdmUgdGhlIHdob2xlIGNsYXNzbmFtZSAoaWYgdGhlcmUgd2FzIG9uZSwgdGhlIGFib3ZlIHNhdmVkIGl0KS4KCQkJCS8vIE90aGVyd2lzZSBicmluZyBiYWNrIHdoYXRldmVyIHdhcyBwcmV2aW91c2x5IHNhdmVkIChpZiBhbnl0aGluZyksCgkJCQkvLyBmYWxsaW5nIGJhY2sgdG8gdGhlIGVtcHR5IHN0cmluZyBpZiBub3RoaW5nIHdhcyBzdG9yZWQuCgkJCQlpZiAoIHRoaXMuc2V0QXR0cmlidXRlICkgewoJCQkJCXRoaXMuc2V0QXR0cmlidXRlKCAiY2xhc3MiLAoJCQkJCQljbGFzc05hbWUgfHwgdmFsdWUgPT09IGZhbHNlID8KCQkJCQkJCSIiIDoKCQkJCQkJCWRhdGFQcml2LmdldCggdGhpcywgIl9fY2xhc3NOYW1lX18iICkgfHwgIiIKCQkJCQkpOwoJCQkJfQoJCQl9CgkJfSApOwoJfSwKCgloYXNDbGFzczogZnVuY3Rpb24oIHNlbGVjdG9yICkgewoJCXZhciBjbGFzc05hbWUsIGVsZW0sCgkJCWkgPSAwOwoKCQljbGFzc05hbWUgPSAiICIgKyBzZWxlY3RvciArICIgIjsKCQl3aGlsZSAoICggZWxlbSA9IHRoaXNbIGkrKyBdICkgKSB7CgkJCWlmICggZWxlbS5ub2RlVHlwZSA9PT0gMSAmJgoJCQkJKCAiICIgKyBzdHJpcEFuZENvbGxhcHNlKCBnZXRDbGFzcyggZWxlbSApICkgKyAiICIgKS5pbmRleE9mKCBjbGFzc05hbWUgKSA+IC0xICkgewoJCQkJcmV0dXJuIHRydWU7CgkJCX0KCQl9CgoJCXJldHVybiBmYWxzZTsKCX0KfSApOwoKCgoKdmFyIHJyZXR1cm4gPSAvXHIvZzsKCmpRdWVyeS5mbi5leHRlbmQoIHsKCXZhbDogZnVuY3Rpb24oIHZhbHVlICkgewoJCXZhciBob29rcywgcmV0LCB2YWx1ZUlzRnVuY3Rpb24sCgkJCWVsZW0gPSB0aGlzWyAwIF07CgoJCWlmICggIWFyZ3VtZW50cy5sZW5ndGggKSB7CgkJCWlmICggZWxlbSApIHsKCQkJCWhvb2tzID0galF1ZXJ5LnZhbEhvb2tzWyBlbGVtLnR5cGUgXSB8fAoJCQkJCWpRdWVyeS52YWxIb29rc1sgZWxlbS5ub2RlTmFtZS50b0xvd2VyQ2FzZSgpIF07CgoJCQkJaWYgKCBob29rcyAmJgoJCQkJCSJnZXQiIGluIGhvb2tzICYmCgkJCQkJKCByZXQgPSBob29rcy5nZXQoIGVsZW0sICJ2YWx1ZSIgKSApICE9PSB1bmRlZmluZWQKCQkJCSkgewoJCQkJCXJldHVybiByZXQ7CgkJCQl9CgoJCQkJcmV0ID0gZWxlbS52YWx1ZTsKCgkJCQkvLyBIYW5kbGUgbW9zdCBjb21tb24gc3RyaW5nIGNhc2VzCgkJCQlpZiAoIHR5cGVvZiByZXQgPT09ICJzdHJpbmciICkgewoJCQkJCXJldHVybiByZXQucmVwbGFjZSggcnJldHVybiwgIiIgKTsKCQkJCX0KCgkJCQkvLyBIYW5kbGUgY2FzZXMgd2hlcmUgdmFsdWUgaXMgbnVsbC91bmRlZiBvciBudW1iZXIKCQkJCXJldHVybiByZXQgPT0gbnVsbCA/ICIiIDogcmV0OwoJCQl9CgoJCQlyZXR1cm47CgkJfQoKCQl2YWx1ZUlzRnVuY3Rpb24gPSBpc0Z1bmN0aW9uKCB2YWx1ZSApOwoKCQlyZXR1cm4gdGhpcy5lYWNoKCBmdW5jdGlvbiggaSApIHsKCQkJdmFyIHZhbDsKCgkJCWlmICggdGhpcy5ub2RlVHlwZSAhPT0gMSApIHsKCQkJCXJldHVybjsKCQkJfQoKCQkJaWYgKCB2YWx1ZUlzRnVuY3Rpb24gKSB7CgkJCQl2YWwgPSB2YWx1ZS5jYWxsKCB0aGlzLCBpLCBqUXVlcnkoIHRoaXMgKS52YWwoKSApOwoJCQl9IGVsc2UgewoJCQkJdmFsID0gdmFsdWU7CgkJCX0KCgkJCS8vIFRyZWF0IG51bGwvdW5kZWZpbmVkIGFzICIiOyBjb252ZXJ0IG51bWJlcnMgdG8gc3RyaW5nCgkJCWlmICggdmFsID09IG51bGwgKSB7CgkJCQl2YWwgPSAiIjsKCgkJCX0gZWxzZSBpZiAoIHR5cGVvZiB2YWwgPT09ICJudW1iZXIiICkgewoJCQkJdmFsICs9ICIiOwoKCQkJfSBlbHNlIGlmICggQXJyYXkuaXNBcnJheSggdmFsICkgKSB7CgkJCQl2YWwgPSBqUXVlcnkubWFwKCB2YWwsIGZ1bmN0aW9uKCB2YWx1ZSApIHsKCQkJCQlyZXR1cm4gdmFsdWUgPT0gbnVsbCA/ICIiIDogdmFsdWUgKyAiIjsKCQkJCX0gKTsKCQkJfQoKCQkJaG9va3MgPSBqUXVlcnkudmFsSG9va3NbIHRoaXMudHlwZSBdIHx8IGpRdWVyeS52YWxIb29rc1sgdGhpcy5ub2RlTmFtZS50b0xvd2VyQ2FzZSgpIF07CgoJCQkvLyBJZiBzZXQgcmV0dXJucyB1bmRlZmluZWQsIGZhbGwgYmFjayB0byBub3JtYWwgc2V0dGluZwoJCQlpZiAoICFob29rcyB8fCAhKCAic2V0IiBpbiBob29rcyApIHx8IGhvb2tzLnNldCggdGhpcywgdmFsLCAidmFsdWUiICkgPT09IHVuZGVmaW5lZCApIHsKCQkJCXRoaXMudmFsdWUgPSB2YWw7CgkJCX0KCQl9ICk7Cgl9Cn0gKTsKCmpRdWVyeS5leHRlbmQoIHsKCXZhbEhvb2tzOiB7CgkJb3B0aW9uOiB7CgkJCWdldDogZnVuY3Rpb24oIGVsZW0gKSB7CgoJCQkJdmFyIHZhbCA9IGpRdWVyeS5maW5kLmF0dHIoIGVsZW0sICJ2YWx1ZSIgKTsKCQkJCXJldHVybiB2YWwgIT0gbnVsbCA/CgkJCQkJdmFsIDoKCgkJCQkJLy8gU3VwcG9ydDogSUUgPD0xMCAtIDExIG9ubHkKCQkJCQkvLyBvcHRpb24udGV4dCB0aHJvd3MgZXhjZXB0aW9ucyAodHJhYy0xNDY4NiwgdHJhYy0xNDg1OCkKCQkJCQkvLyBTdHJpcCBhbmQgY29sbGFwc2Ugd2hpdGVzcGFjZQoJCQkJCS8vIGh0dHBzOi8vaHRtbC5zcGVjLndoYXR3Zy5vcmcvI3N0cmlwLWFuZC1jb2xsYXBzZS13aGl0ZXNwYWNlCgkJCQkJc3RyaXBBbmRDb2xsYXBzZSggalF1ZXJ5LnRleHQoIGVsZW0gKSApOwoJCQl9CgkJfSwKCQlzZWxlY3Q6IHsKCQkJZ2V0OiBmdW5jdGlvbiggZWxlbSApIHsKCQkJCXZhciB2YWx1ZSwgb3B0aW9uLCBpLAoJCQkJCW9wdGlvbnMgPSBlbGVtLm9wdGlvbnMsCgkJCQkJaW5kZXggPSBlbGVtLnNlbGVjdGVkSW5kZXgsCgkJCQkJb25lID0gZWxlbS50eXBlID09PSAic2VsZWN0LW9uZSIsCgkJCQkJdmFsdWVzID0gb25lID8gbnVsbCA6IFtdLAoJCQkJCW1heCA9IG9uZSA/IGluZGV4ICsgMSA6IG9wdGlvbnMubGVuZ3RoOwoKCQkJCWlmICggaW5kZXggPCAwICkgewoJCQkJCWkgPSBtYXg7CgoJCQkJfSBlbHNlIHsKCQkJCQlpID0gb25lID8gaW5kZXggOiAwOwoJCQkJfQoKCQkJCS8vIExvb3AgdGhyb3VnaCBhbGwgdGhlIHNlbGVjdGVkIG9wdGlvbnMKCQkJCWZvciAoIDsgaSA8IG1heDsgaSsrICkgewoJCQkJCW9wdGlvbiA9IG9wdGlvbnNbIGkgXTsKCgkJCQkJLy8gU3VwcG9ydDogSUUgPD05IG9ubHkKCQkJCQkvLyBJRTgtOSBkb2Vzbid0IHVwZGF0ZSBzZWxlY3RlZCBhZnRlciBmb3JtIHJlc2V0ICh0cmFjLTI1NTEpCgkJCQkJaWYgKCAoIG9wdGlvbi5zZWxlY3RlZCB8fCBpID09PSBpbmRleCApICYmCgoJCQkJCQkJLy8gRG9uJ3QgcmV0dXJuIG9wdGlvbnMgdGhhdCBhcmUgZGlzYWJsZWQgb3IgaW4gYSBkaXNhYmxlZCBvcHRncm91cAoJCQkJCQkJIW9wdGlvbi5kaXNhYmxlZCAmJgoJCQkJCQkJKCAhb3B0aW9uLnBhcmVudE5vZGUuZGlzYWJsZWQgfHwKCQkJCQkJCQkhbm9kZU5hbWUoIG9wdGlvbi5wYXJlbnROb2RlLCAib3B0Z3JvdXAiICkgKSApIHsKCgkJCQkJCS8vIEdldCB0aGUgc3BlY2lmaWMgdmFsdWUgZm9yIHRoZSBvcHRpb24KCQkJCQkJdmFsdWUgPSBqUXVlcnkoIG9wdGlvbiApLnZhbCgpOwoKCQkJCQkJLy8gV2UgZG9uJ3QgbmVlZCBhbiBhcnJheSBmb3Igb25lIHNlbGVjdHMKCQkJCQkJaWYgKCBvbmUgKSB7CgkJCQkJCQlyZXR1cm4gdmFsdWU7CgkJCQkJCX0KCgkJCQkJCS8vIE11bHRpLVNlbGVjdHMgcmV0dXJuIGFuIGFycmF5CgkJCQkJCXZhbHVlcy5wdXNoKCB2YWx1ZSApOwoJCQkJCX0KCQkJCX0KCgkJCQlyZXR1cm4gdmFsdWVzOwoJCQl9LAoKCQkJc2V0OiBmdW5jdGlvbiggZWxlbSwgdmFsdWUgKSB7CgkJCQl2YXIgb3B0aW9uU2V0LCBvcHRpb24sCgkJCQkJb3B0aW9ucyA9IGVsZW0ub3B0aW9ucywKCQkJCQl2YWx1ZXMgPSBqUXVlcnkubWFrZUFycmF5KCB2YWx1ZSApLAoJCQkJCWkgPSBvcHRpb25zLmxlbmd0aDsKCgkJCQl3aGlsZSAoIGktLSApIHsKCQkJCQlvcHRpb24gPSBvcHRpb25zWyBpIF07CgoJCQkJCS8qIGVzbGludC1kaXNhYmxlIG5vLWNvbmQtYXNzaWduICovCgoJCQkJCWlmICggb3B0aW9uLnNlbGVjdGVkID0KCQkJCQkJalF1ZXJ5LmluQXJyYXkoIGpRdWVyeS52YWxIb29rcy5vcHRpb24uZ2V0KCBvcHRpb24gKSwgdmFsdWVzICkgPiAtMQoJCQkJCSkgewoJCQkJCQlvcHRpb25TZXQgPSB0cnVlOwoJCQkJCX0KCgkJCQkJLyogZXNsaW50LWVuYWJsZSBuby1jb25kLWFzc2lnbiAqLwoJCQkJfQoKCQkJCS8vIEZvcmNlIGJyb3dzZXJzIHRvIGJlaGF2ZSBjb25zaXN0ZW50bHkgd2hlbiBub24tbWF0Y2hpbmcgdmFsdWUgaXMgc2V0CgkJCQlpZiAoICFvcHRpb25TZXQgKSB7CgkJCQkJZWxlbS5zZWxlY3RlZEluZGV4ID0gLTE7CgkJCQl9CgkJCQlyZXR1cm4gdmFsdWVzOwoJCQl9CgkJfQoJfQp9ICk7CgovLyBSYWRpb3MgYW5kIGNoZWNrYm94ZXMgZ2V0dGVyL3NldHRlcgpqUXVlcnkuZWFjaCggWyAicmFkaW8iLCAiY2hlY2tib3giIF0sIGZ1bmN0aW9uKCkgewoJalF1ZXJ5LnZhbEhvb2tzWyB0aGlzIF0gPSB7CgkJc2V0OiBmdW5jdGlvbiggZWxlbSwgdmFsdWUgKSB7CgkJCWlmICggQXJyYXkuaXNBcnJheSggdmFsdWUgKSApIHsKCQkJCXJldHVybiAoIGVsZW0uY2hlY2tlZCA9IGpRdWVyeS5pbkFycmF5KCBqUXVlcnkoIGVsZW0gKS52YWwoKSwgdmFsdWUgKSA+IC0xICk7CgkJCX0KCQl9Cgl9OwoJaWYgKCAhc3VwcG9ydC5jaGVja09uICkgewoJCWpRdWVyeS52YWxIb29rc1sgdGhpcyBdLmdldCA9IGZ1bmN0aW9uKCBlbGVtICkgewoJCQlyZXR1cm4gZWxlbS5nZXRBdHRyaWJ1dGUoICJ2YWx1ZSIgKSA9PT0gbnVsbCA/ICJvbiIgOiBlbGVtLnZhbHVlOwoJCX07Cgl9Cn0gKTsKCgoKCi8vIFJldHVybiBqUXVlcnkgZm9yIGF0dHJpYnV0ZXMtb25seSBpbmNsdXNpb24KCgpzdXBwb3J0LmZvY3VzaW4gPSAib25mb2N1c2luIiBpbiB3aW5kb3c7CgoKdmFyIHJmb2N1c01vcnBoID0gL14oPzpmb2N1c2luZm9jdXN8Zm9jdXNvdXRibHVyKSQvLAoJc3RvcFByb3BhZ2F0aW9uQ2FsbGJhY2sgPSBmdW5jdGlvbiggZSApIHsKCQllLnN0b3BQcm9wYWdhdGlvbigpOwoJfTsKCmpRdWVyeS5leHRlbmQoIGpRdWVyeS5ldmVudCwgewoKCXRyaWdnZXI6IGZ1bmN0aW9uKCBldmVudCwgZGF0YSwgZWxlbSwgb25seUhhbmRsZXJzICkgewoKCQl2YXIgaSwgY3VyLCB0bXAsIGJ1YmJsZVR5cGUsIG9udHlwZSwgaGFuZGxlLCBzcGVjaWFsLCBsYXN0RWxlbWVudCwKCQkJZXZlbnRQYXRoID0gWyBlbGVtIHx8IGRvY3VtZW50IF0sCgkJCXR5cGUgPSBoYXNPd24uY2FsbCggZXZlbnQsICJ0eXBlIiApID8gZXZlbnQudHlwZSA6IGV2ZW50LAoJCQluYW1lc3BhY2VzID0gaGFzT3duLmNhbGwoIGV2ZW50LCAibmFtZXNwYWNlIiApID8gZXZlbnQubmFtZXNwYWNlLnNwbGl0KCAiLiIgKSA6IFtdOwoKCQljdXIgPSBsYXN0RWxlbWVudCA9IHRtcCA9IGVsZW0gPSBlbGVtIHx8IGRvY3VtZW50OwoKCQkvLyBEb24ndCBkbyBldmVudHMgb24gdGV4dCBhbmQgY29tbWVudCBub2RlcwoJCWlmICggZWxlbS5ub2RlVHlwZSA9PT0gMyB8fCBlbGVtLm5vZGVUeXBlID09PSA4ICkgewoJCQlyZXR1cm47CgkJfQoKCQkvLyBmb2N1cy9ibHVyIG1vcnBocyB0byBmb2N1c2luL291dDsgZW5zdXJlIHdlJ3JlIG5vdCBmaXJpbmcgdGhlbSByaWdodCBub3cKCQlpZiAoIHJmb2N1c01vcnBoLnRlc3QoIHR5cGUgKyBqUXVlcnkuZXZlbnQudHJpZ2dlcmVkICkgKSB7CgkJCXJldHVybjsKCQl9CgoJCWlmICggdHlwZS5pbmRleE9mKCAiLiIgKSA+IC0xICkgewoKCQkJLy8gTmFtZXNwYWNlZCB0cmlnZ2VyOyBjcmVhdGUgYSByZWdleHAgdG8gbWF0Y2ggZXZlbnQgdHlwZSBpbiBoYW5kbGUoKQoJCQluYW1lc3BhY2VzID0gdHlwZS5zcGxpdCggIi4iICk7CgkJCXR5cGUgPSBuYW1lc3BhY2VzLnNoaWZ0KCk7CgkJCW5hbWVzcGFjZXMuc29ydCgpOwoJCX0KCQlvbnR5cGUgPSB0eXBlLmluZGV4T2YoICI6IiApIDwgMCAmJiAib24iICsgdHlwZTsKCgkJLy8gQ2FsbGVyIGNhbiBwYXNzIGluIGEgalF1ZXJ5LkV2ZW50IG9iamVjdCwgT2JqZWN0LCBvciBqdXN0IGFuIGV2ZW50IHR5cGUgc3RyaW5nCgkJZXZlbnQgPSBldmVudFsgalF1ZXJ5LmV4cGFuZG8gXSA/CgkJCWV2ZW50IDoKCQkJbmV3IGpRdWVyeS5FdmVudCggdHlwZSwgdHlwZW9mIGV2ZW50ID09PSAib2JqZWN0IiAmJiBldmVudCApOwoKCQkvLyBUcmlnZ2VyIGJpdG1hc2s6ICYgMSBmb3IgbmF0aXZlIGhhbmRsZXJzOyAmIDIgZm9yIGpRdWVyeSAoYWx3YXlzIHRydWUpCgkJZXZlbnQuaXNUcmlnZ2VyID0gb25seUhhbmRsZXJzID8gMiA6IDM7CgkJZXZlbnQubmFtZXNwYWNlID0gbmFtZXNwYWNlcy5qb2luKCAiLiIgKTsKCQlldmVudC5ybmFtZXNwYWNlID0gZXZlbnQubmFtZXNwYWNlID8KCQkJbmV3IFJlZ0V4cCggIihefFxcLikiICsgbmFtZXNwYWNlcy5qb2luKCAiXFwuKD86LipcXC58KSIgKSArICIoXFwufCQpIiApIDoKCQkJbnVsbDsKCgkJLy8gQ2xlYW4gdXAgdGhlIGV2ZW50IGluIGNhc2UgaXQgaXMgYmVpbmcgcmV1c2VkCgkJZXZlbnQucmVzdWx0ID0gdW5kZWZpbmVkOwoJCWlmICggIWV2ZW50LnRhcmdldCApIHsKCQkJZXZlbnQudGFyZ2V0ID0gZWxlbTsKCQl9CgoJCS8vIENsb25lIGFueSBpbmNvbWluZyBkYXRhIGFuZCBwcmVwZW5kIHRoZSBldmVudCwgY3JlYXRpbmcgdGhlIGhhbmRsZXIgYXJnIGxpc3QKCQlkYXRhID0gZGF0YSA9PSBudWxsID8KCQkJWyBldmVudCBdIDoKCQkJalF1ZXJ5Lm1ha2VBcnJheSggZGF0YSwgWyBldmVudCBdICk7CgoJCS8vIEFsbG93IHNwZWNpYWwgZXZlbnRzIHRvIGRyYXcgb3V0c2lkZSB0aGUgbGluZXMKCQlzcGVjaWFsID0galF1ZXJ5LmV2ZW50LnNwZWNpYWxbIHR5cGUgXSB8fCB7fTsKCQlpZiAoICFvbmx5SGFuZGxlcnMgJiYgc3BlY2lhbC50cmlnZ2VyICYmIHNwZWNpYWwudHJpZ2dlci5hcHBseSggZWxlbSwgZGF0YSApID09PSBmYWxzZSApIHsKCQkJcmV0dXJuOwoJCX0KCgkJLy8gRGV0ZXJtaW5lIGV2ZW50IHByb3BhZ2F0aW9uIHBhdGggaW4gYWR2YW5jZSwgcGVyIFczQyBldmVudHMgc3BlYyAodHJhYy05OTUxKQoJCS8vIEJ1YmJsZSB1cCB0byBkb2N1bWVudCwgdGhlbiB0byB3aW5kb3c7IHdhdGNoIGZvciBhIGdsb2JhbCBvd25lckRvY3VtZW50IHZhciAodHJhYy05NzI0KQoJCWlmICggIW9ubHlIYW5kbGVycyAmJiAhc3BlY2lhbC5ub0J1YmJsZSAmJiAhaXNXaW5kb3coIGVsZW0gKSApIHsKCgkJCWJ1YmJsZVR5cGUgPSBzcGVjaWFsLmRlbGVnYXRlVHlwZSB8fCB0eXBlOwoJCQlpZiAoICFyZm9jdXNNb3JwaC50ZXN0KCBidWJibGVUeXBlICsgdHlwZSApICkgewoJCQkJY3VyID0gY3VyLnBhcmVudE5vZGU7CgkJCX0KCQkJZm9yICggOyBjdXI7IGN1ciA9IGN1ci5wYXJlbnROb2RlICkgewoJCQkJZXZlbnRQYXRoLnB1c2goIGN1ciApOwoJCQkJdG1wID0gY3VyOwoJCQl9CgoJCQkvLyBPbmx5IGFkZCB3aW5kb3cgaWYgd2UgZ290IHRvIGRvY3VtZW50IChlLmcuLCBub3QgcGxhaW4gb2JqIG9yIGRldGFjaGVkIERPTSkKCQkJaWYgKCB0bXAgPT09ICggZWxlbS5vd25lckRvY3VtZW50IHx8IGRvY3VtZW50ICkgKSB7CgkJCQlldmVudFBhdGgucHVzaCggdG1wLmRlZmF1bHRWaWV3IHx8IHRtcC5wYXJlbnRXaW5kb3cgfHwgd2luZG93ICk7CgkJCX0KCQl9CgoJCS8vIEZpcmUgaGFuZGxlcnMgb24gdGhlIGV2ZW50IHBhdGgKCQlpID0gMDsKCQl3aGlsZSAoICggY3VyID0gZXZlbnRQYXRoWyBpKysgXSApICYmICFldmVudC5pc1Byb3BhZ2F0aW9uU3RvcHBlZCgpICkgewoJCQlsYXN0RWxlbWVudCA9IGN1cjsKCQkJZXZlbnQudHlwZSA9IGkgPiAxID8KCQkJCWJ1YmJsZVR5cGUgOgoJCQkJc3BlY2lhbC5iaW5kVHlwZSB8fCB0eXBlOwoKCQkJLy8galF1ZXJ5IGhhbmRsZXIKCQkJaGFuZGxlID0gKCBkYXRhUHJpdi5nZXQoIGN1ciwgImV2ZW50cyIgKSB8fCBPYmplY3QuY3JlYXRlKCBudWxsICkgKVsgZXZlbnQudHlwZSBdICYmCgkJCQlkYXRhUHJpdi5nZXQoIGN1ciwgImhhbmRsZSIgKTsKCQkJaWYgKCBoYW5kbGUgKSB7CgkJCQloYW5kbGUuYXBwbHkoIGN1ciwgZGF0YSApOwoJCQl9CgoJCQkvLyBOYXRpdmUgaGFuZGxlcgoJCQloYW5kbGUgPSBvbnR5cGUgJiYgY3VyWyBvbnR5cGUgXTsKCQkJaWYgKCBoYW5kbGUgJiYgaGFuZGxlLmFwcGx5ICYmIGFjY2VwdERhdGEoIGN1ciApICkgewoJCQkJZXZlbnQucmVzdWx0ID0gaGFuZGxlLmFwcGx5KCBjdXIsIGRhdGEgKTsKCQkJCWlmICggZXZlbnQucmVzdWx0ID09PSBmYWxzZSApIHsKCQkJCQlldmVudC5wcmV2ZW50RGVmYXVsdCgpOwoJCQkJfQoJCQl9CgkJfQoJCWV2ZW50LnR5cGUgPSB0eXBlOwoKCQkvLyBJZiBub2JvZHkgcHJldmVudGVkIHRoZSBkZWZhdWx0IGFjdGlvbiwgZG8gaXQgbm93CgkJaWYgKCAhb25seUhhbmRsZXJzICYmICFldmVudC5pc0RlZmF1bHRQcmV2ZW50ZWQoKSApIHsKCgkJCWlmICggKCAhc3BlY2lhbC5fZGVmYXVsdCB8fAoJCQkJc3BlY2lhbC5fZGVmYXVsdC5hcHBseSggZXZlbnRQYXRoLnBvcCgpLCBkYXRhICkgPT09IGZhbHNlICkgJiYKCQkJCWFjY2VwdERhdGEoIGVsZW0gKSApIHsKCgkJCQkvLyBDYWxsIGEgbmF0aXZlIERPTSBtZXRob2Qgb24gdGhlIHRhcmdldCB3aXRoIHRoZSBzYW1lIG5hbWUgYXMgdGhlIGV2ZW50LgoJCQkJLy8gRG9uJ3QgZG8gZGVmYXVsdCBhY3Rpb25zIG9uIHdpbmRvdywgdGhhdCdzIHdoZXJlIGdsb2JhbCB2YXJpYWJsZXMgYmUgKHRyYWMtNjE3MCkKCQkJCWlmICggb250eXBlICYmIGlzRnVuY3Rpb24oIGVsZW1bIHR5cGUgXSApICYmICFpc1dpbmRvdyggZWxlbSApICkgewoKCQkJCQkvLyBEb24ndCByZS10cmlnZ2VyIGFuIG9uRk9PIGV2ZW50IHdoZW4gd2UgY2FsbCBpdHMgRk9PKCkgbWV0aG9kCgkJCQkJdG1wID0gZWxlbVsgb250eXBlIF07CgoJCQkJCWlmICggdG1wICkgewoJCQkJCQllbGVtWyBvbnR5cGUgXSA9IG51bGw7CgkJCQkJfQoKCQkJCQkvLyBQcmV2ZW50IHJlLXRyaWdnZXJpbmcgb2YgdGhlIHNhbWUgZXZlbnQsIHNpbmNlIHdlIGFscmVhZHkgYnViYmxlZCBpdCBhYm92ZQoJCQkJCWpRdWVyeS5ldmVudC50cmlnZ2VyZWQgPSB0eXBlOwoKCQkJCQlpZiAoIGV2ZW50LmlzUHJvcGFnYXRpb25TdG9wcGVkKCkgKSB7CgkJCQkJCWxhc3RFbGVtZW50LmFkZEV2ZW50TGlzdGVuZXIoIHR5cGUsIHN0b3BQcm9wYWdhdGlvbkNhbGxiYWNrICk7CgkJCQkJfQoKCQkJCQllbGVtWyB0eXBlIF0oKTsKCgkJCQkJaWYgKCBldmVudC5pc1Byb3BhZ2F0aW9uU3RvcHBlZCgpICkgewoJCQkJCQlsYXN0RWxlbWVudC5yZW1vdmVFdmVudExpc3RlbmVyKCB0eXBlLCBzdG9wUHJvcGFnYXRpb25DYWxsYmFjayApOwoJCQkJCX0KCgkJCQkJalF1ZXJ5LmV2ZW50LnRyaWdnZXJlZCA9IHVuZGVmaW5lZDsKCgkJCQkJaWYgKCB0bXAgKSB7CgkJCQkJCWVsZW1bIG9udHlwZSBdID0gdG1wOwoJCQkJCX0KCQkJCX0KCQkJfQoJCX0KCgkJcmV0dXJuIGV2ZW50LnJlc3VsdDsKCX0sCgoJLy8gUGlnZ3liYWNrIG9uIGEgZG9ub3IgZXZlbnQgdG8gc2ltdWxhdGUgYSBkaWZmZXJlbnQgb25lCgkvLyBVc2VkIG9ubHkgZm9yIGBmb2N1cyhpbiB8IG91dClgIGV2ZW50cwoJc2ltdWxhdGU6IGZ1bmN0aW9uKCB0eXBlLCBlbGVtLCBldmVudCApIHsKCQl2YXIgZSA9IGpRdWVyeS5leHRlbmQoCgkJCW5ldyBqUXVlcnkuRXZlbnQoKSwKCQkJZXZlbnQsCgkJCXsKCQkJCXR5cGU6IHR5cGUsCgkJCQlpc1NpbXVsYXRlZDogdHJ1ZQoJCQl9CgkJKTsKCgkJalF1ZXJ5LmV2ZW50LnRyaWdnZXIoIGUsIG51bGwsIGVsZW0gKTsKCX0KCn0gKTsKCmpRdWVyeS5mbi5leHRlbmQoIHsKCgl0cmlnZ2VyOiBmdW5jdGlvbiggdHlwZSwgZGF0YSApIHsKCQlyZXR1cm4gdGhpcy5lYWNoKCBmdW5jdGlvbigpIHsKCQkJalF1ZXJ5LmV2ZW50LnRyaWdnZXIoIHR5cGUsIGRhdGEsIHRoaXMgKTsKCQl9ICk7Cgl9LAoJdHJpZ2dlckhhbmRsZXI6IGZ1bmN0aW9uKCB0eXBlLCBkYXRhICkgewoJCXZhciBlbGVtID0gdGhpc1sgMCBdOwoJCWlmICggZWxlbSApIHsKCQkJcmV0dXJuIGpRdWVyeS5ldmVudC50cmlnZ2VyKCB0eXBlLCBkYXRhLCBlbGVtLCB0cnVlICk7CgkJfQoJfQp9ICk7CgoKLy8gU3VwcG9ydDogRmlyZWZveCA8PTQ0Ci8vIEZpcmVmb3ggZG9lc24ndCBoYXZlIGZvY3VzKGluIHwgb3V0KSBldmVudHMKLy8gUmVsYXRlZCB0aWNrZXQgLSBodHRwczovL2J1Z3ppbGxhLm1vemlsbGEub3JnL3Nob3dfYnVnLmNnaT9pZD02ODc3ODcKLy8KLy8gU3VwcG9ydDogQ2hyb21lIDw9NDggLSA0OSwgU2FmYXJpIDw9OS4wIC0gOS4xCi8vIGZvY3VzKGluIHwgb3V0KSBldmVudHMgZmlyZSBhZnRlciBmb2N1cyAmIGJsdXIgZXZlbnRzLAovLyB3aGljaCBpcyBzcGVjIHZpb2xhdGlvbiAtIGh0dHA6Ly93d3cudzMub3JnL1RSL0RPTS1MZXZlbC0zLUV2ZW50cy8jZXZlbnRzLWZvY3VzZXZlbnQtZXZlbnQtb3JkZXIKLy8gUmVsYXRlZCB0aWNrZXQgLSBodHRwczovL2J1Z3MuY2hyb21pdW0ub3JnL3AvY2hyb21pdW0vaXNzdWVzL2RldGFpbD9pZD00NDk4NTcKaWYgKCAhc3VwcG9ydC5mb2N1c2luICkgewoJalF1ZXJ5LmVhY2goIHsgZm9jdXM6ICJmb2N1c2luIiwgYmx1cjogImZvY3Vzb3V0IiB9LCBmdW5jdGlvbiggb3JpZywgZml4ICkgewoKCQkvLyBBdHRhY2ggYSBzaW5nbGUgY2FwdHVyaW5nIGhhbmRsZXIgb24gdGhlIGRvY3VtZW50IHdoaWxlIHNvbWVvbmUgd2FudHMgZm9jdXNpbi9mb2N1c291dAoJCXZhciBoYW5kbGVyID0gZnVuY3Rpb24oIGV2ZW50ICkgewoJCQlqUXVlcnkuZXZlbnQuc2ltdWxhdGUoIGZpeCwgZXZlbnQudGFyZ2V0LCBqUXVlcnkuZXZlbnQuZml4KCBldmVudCApICk7CgkJfTsKCgkJalF1ZXJ5LmV2ZW50LnNwZWNpYWxbIGZpeCBdID0gewoJCQlzZXR1cDogZnVuY3Rpb24oKSB7CgoJCQkJLy8gSGFuZGxlOiByZWd1bGFyIG5vZGVzICh2aWEgYHRoaXMub3duZXJEb2N1bWVudGApLCB3aW5kb3cKCQkJCS8vICh2aWEgYHRoaXMuZG9jdW1lbnRgKSAmIGRvY3VtZW50ICh2aWEgYHRoaXNgKS4KCQkJCXZhciBkb2MgPSB0aGlzLm93bmVyRG9jdW1lbnQgfHwgdGhpcy5kb2N1bWVudCB8fCB0aGlzLAoJCQkJCWF0dGFjaGVzID0gZGF0YVByaXYuYWNjZXNzKCBkb2MsIGZpeCApOwoKCQkJCWlmICggIWF0dGFjaGVzICkgewoJCQkJCWRvYy5hZGRFdmVudExpc3RlbmVyKCBvcmlnLCBoYW5kbGVyLCB0cnVlICk7CgkJCQl9CgkJCQlkYXRhUHJpdi5hY2Nlc3MoIGRvYywgZml4LCAoIGF0dGFjaGVzIHx8IDAgKSArIDEgKTsKCQkJfSwKCQkJdGVhcmRvd246IGZ1bmN0aW9uKCkgewoJCQkJdmFyIGRvYyA9IHRoaXMub3duZXJEb2N1bWVudCB8fCB0aGlzLmRvY3VtZW50IHx8IHRoaXMsCgkJCQkJYXR0YWNoZXMgPSBkYXRhUHJpdi5hY2Nlc3MoIGRvYywgZml4ICkgLSAxOwoKCQkJCWlmICggIWF0dGFjaGVzICkgewoJCQkJCWRvYy5yZW1vdmVFdmVudExpc3RlbmVyKCBvcmlnLCBoYW5kbGVyLCB0cnVlICk7CgkJCQkJZGF0YVByaXYucmVtb3ZlKCBkb2MsIGZpeCApOwoKCQkJCX0gZWxzZSB7CgkJCQkJZGF0YVByaXYuYWNjZXNzKCBkb2MsIGZpeCwgYXR0YWNoZXMgKTsKCQkJCX0KCQkJfQoJCX07Cgl9ICk7Cn0KdmFyIGxvY2F0aW9uID0gd2luZG93LmxvY2F0aW9uOwoKdmFyIG5vbmNlID0geyBndWlkOiBEYXRlLm5vdygpIH07Cgp2YXIgcnF1ZXJ5ID0gKCAvXD8vICk7CgoKCi8vIENyb3NzLWJyb3dzZXIgeG1sIHBhcnNpbmcKalF1ZXJ5LnBhcnNlWE1MID0gZnVuY3Rpb24oIGRhdGEgKSB7Cgl2YXIgeG1sLCBwYXJzZXJFcnJvckVsZW07CglpZiAoICFkYXRhIHx8IHR5cGVvZiBkYXRhICE9PSAic3RyaW5nIiApIHsKCQlyZXR1cm4gbnVsbDsKCX0KCgkvLyBTdXBwb3J0OiBJRSA5IC0gMTEgb25seQoJLy8gSUUgdGhyb3dzIG9uIHBhcnNlRnJvbVN0cmluZyB3aXRoIGludmFsaWQgaW5wdXQuCgl0cnkgewoJCXhtbCA9ICggbmV3IHdpbmRvdy5ET01QYXJzZXIoKSApLnBhcnNlRnJvbVN0cmluZyggZGF0YSwgInRleHQveG1sIiApOwoJfSBjYXRjaCAoIGUgKSB7fQoKCXBhcnNlckVycm9yRWxlbSA9IHhtbCAmJiB4bWwuZ2V0RWxlbWVudHNCeVRhZ05hbWUoICJwYXJzZXJlcnJvciIgKVsgMCBdOwoJaWYgKCAheG1sIHx8IHBhcnNlckVycm9yRWxlbSApIHsKCQlqUXVlcnkuZXJyb3IoICJJbnZhbGlkIFhNTDogIiArICgKCQkJcGFyc2VyRXJyb3JFbGVtID8KCQkJCWpRdWVyeS5tYXAoIHBhcnNlckVycm9yRWxlbS5jaGlsZE5vZGVzLCBmdW5jdGlvbiggZWwgKSB7CgkJCQkJcmV0dXJuIGVsLnRleHRDb250ZW50OwoJCQkJfSApLmpvaW4oICJcbiIgKSA6CgkJCQlkYXRhCgkJKSApOwoJfQoJcmV0dXJuIHhtbDsKfTsKCgp2YXIKCXJicmFja2V0ID0gL1xbXF0kLywKCXJDUkxGID0gL1xyP1xuL2csCglyc3VibWl0dGVyVHlwZXMgPSAvXig/OnN1Ym1pdHxidXR0b258aW1hZ2V8cmVzZXR8ZmlsZSkkL2ksCglyc3VibWl0dGFibGUgPSAvXig/OmlucHV0fHNlbGVjdHx0ZXh0YXJlYXxrZXlnZW4pL2k7CgpmdW5jdGlvbiBidWlsZFBhcmFtcyggcHJlZml4LCBvYmosIHRyYWRpdGlvbmFsLCBhZGQgKSB7Cgl2YXIgbmFtZTsKCglpZiAoIEFycmF5LmlzQXJyYXkoIG9iaiApICkgewoKCQkvLyBTZXJpYWxpemUgYXJyYXkgaXRlbS4KCQlqUXVlcnkuZWFjaCggb2JqLCBmdW5jdGlvbiggaSwgdiApIHsKCQkJaWYgKCB0cmFkaXRpb25hbCB8fCByYnJhY2tldC50ZXN0KCBwcmVmaXggKSApIHsKCgkJCQkvLyBUcmVhdCBlYWNoIGFycmF5IGl0ZW0gYXMgYSBzY2FsYXIuCgkJCQlhZGQoIHByZWZpeCwgdiApOwoKCQkJfSBlbHNlIHsKCgkJCQkvLyBJdGVtIGlzIG5vbi1zY2FsYXIgKGFycmF5IG9yIG9iamVjdCksIGVuY29kZSBpdHMgbnVtZXJpYyBpbmRleC4KCQkJCWJ1aWxkUGFyYW1zKAoJCQkJCXByZWZpeCArICJbIiArICggdHlwZW9mIHYgPT09ICJvYmplY3QiICYmIHYgIT0gbnVsbCA/IGkgOiAiIiApICsgIl0iLAoJCQkJCXYsCgkJCQkJdHJhZGl0aW9uYWwsCgkJCQkJYWRkCgkJCQkpOwoJCQl9CgkJfSApOwoKCX0gZWxzZSBpZiAoICF0cmFkaXRpb25hbCAmJiB0b1R5cGUoIG9iaiApID09PSAib2JqZWN0IiApIHsKCgkJLy8gU2VyaWFsaXplIG9iamVjdCBpdGVtLgoJCWZvciAoIG5hbWUgaW4gb2JqICkgewoJCQlidWlsZFBhcmFtcyggcHJlZml4ICsgIlsiICsgbmFtZSArICJdIiwgb2JqWyBuYW1lIF0sIHRyYWRpdGlvbmFsLCBhZGQgKTsKCQl9CgoJfSBlbHNlIHsKCgkJLy8gU2VyaWFsaXplIHNjYWxhciBpdGVtLgoJCWFkZCggcHJlZml4LCBvYmogKTsKCX0KfQoKLy8gU2VyaWFsaXplIGFuIGFycmF5IG9mIGZvcm0gZWxlbWVudHMgb3IgYSBzZXQgb2YKLy8ga2V5L3ZhbHVlcyBpbnRvIGEgcXVlcnkgc3RyaW5nCmpRdWVyeS5wYXJhbSA9IGZ1bmN0aW9uKCBhLCB0cmFkaXRpb25hbCApIHsKCXZhciBwcmVmaXgsCgkJcyA9IFtdLAoJCWFkZCA9IGZ1bmN0aW9uKCBrZXksIHZhbHVlT3JGdW5jdGlvbiApIHsKCgkJCS8vIElmIHZhbHVlIGlzIGEgZnVuY3Rpb24sIGludm9rZSBpdCBhbmQgdXNlIGl0cyByZXR1cm4gdmFsdWUKCQkJdmFyIHZhbHVlID0gaXNGdW5jdGlvbiggdmFsdWVPckZ1bmN0aW9uICkgPwoJCQkJdmFsdWVPckZ1bmN0aW9uKCkgOgoJCQkJdmFsdWVPckZ1bmN0aW9uOwoKCQkJc1sgcy5sZW5ndGggXSA9IGVuY29kZVVSSUNvbXBvbmVudCgga2V5ICkgKyAiPSIgKwoJCQkJZW5jb2RlVVJJQ29tcG9uZW50KCB2YWx1ZSA9PSBudWxsID8gIiIgOiB2YWx1ZSApOwoJCX07CgoJaWYgKCBhID09IG51bGwgKSB7CgkJcmV0dXJuICIiOwoJfQoKCS8vIElmIGFuIGFycmF5IHdhcyBwYXNzZWQgaW4sIGFzc3VtZSB0aGF0IGl0IGlzIGFuIGFycmF5IG9mIGZvcm0gZWxlbWVudHMuCglpZiAoIEFycmF5LmlzQXJyYXkoIGEgKSB8fCAoIGEuanF1ZXJ5ICYmICFqUXVlcnkuaXNQbGFpbk9iamVjdCggYSApICkgKSB7CgoJCS8vIFNlcmlhbGl6ZSB0aGUgZm9ybSBlbGVtZW50cwoJCWpRdWVyeS5lYWNoKCBhLCBmdW5jdGlvbigpIHsKCQkJYWRkKCB0aGlzLm5hbWUsIHRoaXMudmFsdWUgKTsKCQl9ICk7CgoJfSBlbHNlIHsKCgkJLy8gSWYgdHJhZGl0aW9uYWwsIGVuY29kZSB0aGUgIm9sZCIgd2F5ICh0aGUgd2F5IDEuMy4yIG9yIG9sZGVyCgkJLy8gZGlkIGl0KSwgb3RoZXJ3aXNlIGVuY29kZSBwYXJhbXMgcmVjdXJzaXZlbHkuCgkJZm9yICggcHJlZml4IGluIGEgKSB7CgkJCWJ1aWxkUGFyYW1zKCBwcmVmaXgsIGFbIHByZWZpeCBdLCB0cmFkaXRpb25hbCwgYWRkICk7CgkJfQoJfQoKCS8vIFJldHVybiB0aGUgcmVzdWx0aW5nIHNlcmlhbGl6YXRpb24KCXJldHVybiBzLmpvaW4oICImIiApOwp9OwoKalF1ZXJ5LmZuLmV4dGVuZCggewoJc2VyaWFsaXplOiBmdW5jdGlvbigpIHsKCQlyZXR1cm4galF1ZXJ5LnBhcmFtKCB0aGlzLnNlcmlhbGl6ZUFycmF5KCkgKTsKCX0sCglzZXJpYWxpemVBcnJheTogZnVuY3Rpb24oKSB7CgkJcmV0dXJuIHRoaXMubWFwKCBmdW5jdGlvbigpIHsKCgkJCS8vIENhbiBhZGQgcHJvcEhvb2sgZm9yICJlbGVtZW50cyIgdG8gZmlsdGVyIG9yIGFkZCBmb3JtIGVsZW1lbnRzCgkJCXZhciBlbGVtZW50cyA9IGpRdWVyeS5wcm9wKCB0aGlzLCAiZWxlbWVudHMiICk7CgkJCXJldHVybiBlbGVtZW50cyA/IGpRdWVyeS5tYWtlQXJyYXkoIGVsZW1lbnRzICkgOiB0aGlzOwoJCX0gKS5maWx0ZXIoIGZ1bmN0aW9uKCkgewoJCQl2YXIgdHlwZSA9IHRoaXMudHlwZTsKCgkJCS8vIFVzZSAuaXMoICI6ZGlzYWJsZWQiICkgc28gdGhhdCBmaWVsZHNldFtkaXNhYmxlZF0gd29ya3MKCQkJcmV0dXJuIHRoaXMubmFtZSAmJiAhalF1ZXJ5KCB0aGlzICkuaXMoICI6ZGlzYWJsZWQiICkgJiYKCQkJCXJzdWJtaXR0YWJsZS50ZXN0KCB0aGlzLm5vZGVOYW1lICkgJiYgIXJzdWJtaXR0ZXJUeXBlcy50ZXN0KCB0eXBlICkgJiYKCQkJCSggdGhpcy5jaGVja2VkIHx8ICFyY2hlY2thYmxlVHlwZS50ZXN0KCB0eXBlICkgKTsKCQl9ICkubWFwKCBmdW5jdGlvbiggX2ksIGVsZW0gKSB7CgkJCXZhciB2YWwgPSBqUXVlcnkoIHRoaXMgKS52YWwoKTsKCgkJCWlmICggdmFsID09IG51bGwgKSB7CgkJCQlyZXR1cm4gbnVsbDsKCQkJfQoKCQkJaWYgKCBBcnJheS5pc0FycmF5KCB2YWwgKSApIHsKCQkJCXJldHVybiBqUXVlcnkubWFwKCB2YWwsIGZ1bmN0aW9uKCB2YWwgKSB7CgkJCQkJcmV0dXJuIHsgbmFtZTogZWxlbS5uYW1lLCB2YWx1ZTogdmFsLnJlcGxhY2UoIHJDUkxGLCAiXHJcbiIgKSB9OwoJCQkJfSApOwoJCQl9CgoJCQlyZXR1cm4geyBuYW1lOiBlbGVtLm5hbWUsIHZhbHVlOiB2YWwucmVwbGFjZSggckNSTEYsICJcclxuIiApIH07CgkJfSApLmdldCgpOwoJfQp9ICk7CgoKdmFyCglyMjAgPSAvJTIwL2csCglyaGFzaCA9IC8jLiokLywKCXJhbnRpQ2FjaGUgPSAvKFs/Jl0pXz1bXiZdKi8sCglyaGVhZGVycyA9IC9eKC4qPyk6WyBcdF0qKFteXHJcbl0qKSQvbWcsCgoJLy8gdHJhYy03NjUzLCB0cmFjLTgxMjUsIHRyYWMtODE1MjogbG9jYWwgcHJvdG9jb2wgZGV0ZWN0aW9uCglybG9jYWxQcm90b2NvbCA9IC9eKD86YWJvdXR8YXBwfGFwcC1zdG9yYWdlfC4rLWV4dGVuc2lvbnxmaWxlfHJlc3x3aWRnZXQpOiQvLAoJcm5vQ29udGVudCA9IC9eKD86R0VUfEhFQUQpJC8sCglycHJvdG9jb2wgPSAvXlwvXC8vLAoKCS8qIFByZWZpbHRlcnMKCSAqIDEpIFRoZXkgYXJlIHVzZWZ1bCB0byBpbnRyb2R1Y2UgY3VzdG9tIGRhdGFUeXBlcyAoc2VlIGFqYXgvanNvbnAuanMgZm9yIGFuIGV4YW1wbGUpCgkgKiAyKSBUaGVzZSBhcmUgY2FsbGVkOgoJICogICAgLSBCRUZPUkUgYXNraW5nIGZvciBhIHRyYW5zcG9ydAoJICogICAgLSBBRlRFUiBwYXJhbSBzZXJpYWxpemF0aW9uIChzLmRhdGEgaXMgYSBzdHJpbmcgaWYgcy5wcm9jZXNzRGF0YSBpcyB0cnVlKQoJICogMykga2V5IGlzIHRoZSBkYXRhVHlwZQoJICogNCkgdGhlIGNhdGNoYWxsIHN5bWJvbCAiKiIgY2FuIGJlIHVzZWQKCSAqIDUpIGV4ZWN1dGlvbiB3aWxsIHN0YXJ0IHdpdGggdHJhbnNwb3J0IGRhdGFUeXBlIGFuZCBUSEVOIGNvbnRpbnVlIGRvd24gdG8gIioiIGlmIG5lZWRlZAoJICovCglwcmVmaWx0ZXJzID0ge30sCgoJLyogVHJhbnNwb3J0cyBiaW5kaW5ncwoJICogMSkga2V5IGlzIHRoZSBkYXRhVHlwZQoJICogMikgdGhlIGNhdGNoYWxsIHN5bWJvbCAiKiIgY2FuIGJlIHVzZWQKCSAqIDMpIHNlbGVjdGlvbiB3aWxsIHN0YXJ0IHdpdGggdHJhbnNwb3J0IGRhdGFUeXBlIGFuZCBUSEVOIGdvIHRvICIqIiBpZiBuZWVkZWQKCSAqLwoJdHJhbnNwb3J0cyA9IHt9LAoKCS8vIEF2b2lkIGNvbW1lbnQtcHJvbG9nIGNoYXIgc2VxdWVuY2UgKHRyYWMtMTAwOTgpOyBtdXN0IGFwcGVhc2UgbGludCBhbmQgZXZhZGUgY29tcHJlc3Npb24KCWFsbFR5cGVzID0gIiovIi5jb25jYXQoICIqIiApLAoKCS8vIEFuY2hvciB0YWcgZm9yIHBhcnNpbmcgdGhlIGRvY3VtZW50IG9yaWdpbgoJb3JpZ2luQW5jaG9yID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCggImEiICk7CgpvcmlnaW5BbmNob3IuaHJlZiA9IGxvY2F0aW9uLmhyZWY7CgovLyBCYXNlICJjb25zdHJ1Y3RvciIgZm9yIGpRdWVyeS5hamF4UHJlZmlsdGVyIGFuZCBqUXVlcnkuYWpheFRyYW5zcG9ydApmdW5jdGlvbiBhZGRUb1ByZWZpbHRlcnNPclRyYW5zcG9ydHMoIHN0cnVjdHVyZSApIHsKCgkvLyBkYXRhVHlwZUV4cHJlc3Npb24gaXMgb3B0aW9uYWwgYW5kIGRlZmF1bHRzIHRvICIqIgoJcmV0dXJuIGZ1bmN0aW9uKCBkYXRhVHlwZUV4cHJlc3Npb24sIGZ1bmMgKSB7CgoJCWlmICggdHlwZW9mIGRhdGFUeXBlRXhwcmVzc2lvbiAhPT0gInN0cmluZyIgKSB7CgkJCWZ1bmMgPSBkYXRhVHlwZUV4cHJlc3Npb247CgkJCWRhdGFUeXBlRXhwcmVzc2lvbiA9ICIqIjsKCQl9CgoJCXZhciBkYXRhVHlwZSwKCQkJaSA9IDAsCgkJCWRhdGFUeXBlcyA9IGRhdGFUeXBlRXhwcmVzc2lvbi50b0xvd2VyQ2FzZSgpLm1hdGNoKCBybm90aHRtbHdoaXRlICkgfHwgW107CgoJCWlmICggaXNGdW5jdGlvbiggZnVuYyApICkgewoKCQkJLy8gRm9yIGVhY2ggZGF0YVR5cGUgaW4gdGhlIGRhdGFUeXBlRXhwcmVzc2lvbgoJCQl3aGlsZSAoICggZGF0YVR5cGUgPSBkYXRhVHlwZXNbIGkrKyBdICkgKSB7CgoJCQkJLy8gUHJlcGVuZCBpZiByZXF1ZXN0ZWQKCQkJCWlmICggZGF0YVR5cGVbIDAgXSA9PT0gIisiICkgewoJCQkJCWRhdGFUeXBlID0gZGF0YVR5cGUuc2xpY2UoIDEgKSB8fCAiKiI7CgkJCQkJKCBzdHJ1Y3R1cmVbIGRhdGFUeXBlIF0gPSBzdHJ1Y3R1cmVbIGRhdGFUeXBlIF0gfHwgW10gKS51bnNoaWZ0KCBmdW5jICk7CgoJCQkJLy8gT3RoZXJ3aXNlIGFwcGVuZAoJCQkJfSBlbHNlIHsKCQkJCQkoIHN0cnVjdHVyZVsgZGF0YVR5cGUgXSA9IHN0cnVjdHVyZVsgZGF0YVR5cGUgXSB8fCBbXSApLnB1c2goIGZ1bmMgKTsKCQkJCX0KCQkJfQoJCX0KCX07Cn0KCi8vIEJhc2UgaW5zcGVjdGlvbiBmdW5jdGlvbiBmb3IgcHJlZmlsdGVycyBhbmQgdHJhbnNwb3J0cwpmdW5jdGlvbiBpbnNwZWN0UHJlZmlsdGVyc09yVHJhbnNwb3J0cyggc3RydWN0dXJlLCBvcHRpb25zLCBvcmlnaW5hbE9wdGlvbnMsIGpxWEhSICkgewoKCXZhciBpbnNwZWN0ZWQgPSB7fSwKCQlzZWVraW5nVHJhbnNwb3J0ID0gKCBzdHJ1Y3R1cmUgPT09IHRyYW5zcG9ydHMgKTsKCglmdW5jdGlvbiBpbnNwZWN0KCBkYXRhVHlwZSApIHsKCQl2YXIgc2VsZWN0ZWQ7CgkJaW5zcGVjdGVkWyBkYXRhVHlwZSBdID0gdHJ1ZTsKCQlqUXVlcnkuZWFjaCggc3RydWN0dXJlWyBkYXRhVHlwZSBdIHx8IFtdLCBmdW5jdGlvbiggXywgcHJlZmlsdGVyT3JGYWN0b3J5ICkgewoJCQl2YXIgZGF0YVR5cGVPclRyYW5zcG9ydCA9IHByZWZpbHRlck9yRmFjdG9yeSggb3B0aW9ucywgb3JpZ2luYWxPcHRpb25zLCBqcVhIUiApOwoJCQlpZiAoIHR5cGVvZiBkYXRhVHlwZU9yVHJhbnNwb3J0ID09PSAic3RyaW5nIiAmJgoJCQkJIXNlZWtpbmdUcmFuc3BvcnQgJiYgIWluc3BlY3RlZFsgZGF0YVR5cGVPclRyYW5zcG9ydCBdICkgewoKCQkJCW9wdGlvbnMuZGF0YVR5cGVzLnVuc2hpZnQoIGRhdGFUeXBlT3JUcmFuc3BvcnQgKTsKCQkJCWluc3BlY3QoIGRhdGFUeXBlT3JUcmFuc3BvcnQgKTsKCQkJCXJldHVybiBmYWxzZTsKCQkJfSBlbHNlIGlmICggc2Vla2luZ1RyYW5zcG9ydCApIHsKCQkJCXJldHVybiAhKCBzZWxlY3RlZCA9IGRhdGFUeXBlT3JUcmFuc3BvcnQgKTsKCQkJfQoJCX0gKTsKCQlyZXR1cm4gc2VsZWN0ZWQ7Cgl9CgoJcmV0dXJuIGluc3BlY3QoIG9wdGlvbnMuZGF0YVR5cGVzWyAwIF0gKSB8fCAhaW5zcGVjdGVkWyAiKiIgXSAmJiBpbnNwZWN0KCAiKiIgKTsKfQoKLy8gQSBzcGVjaWFsIGV4dGVuZCBmb3IgYWpheCBvcHRpb25zCi8vIHRoYXQgdGFrZXMgImZsYXQiIG9wdGlvbnMgKG5vdCB0byBiZSBkZWVwIGV4dGVuZGVkKQovLyBGaXhlcyB0cmFjLTk4ODcKZnVuY3Rpb24gYWpheEV4dGVuZCggdGFyZ2V0LCBzcmMgKSB7Cgl2YXIga2V5LCBkZWVwLAoJCWZsYXRPcHRpb25zID0galF1ZXJ5LmFqYXhTZXR0aW5ncy5mbGF0T3B0aW9ucyB8fCB7fTsKCglmb3IgKCBrZXkgaW4gc3JjICkgewoJCWlmICggc3JjWyBrZXkgXSAhPT0gdW5kZWZpbmVkICkgewoJCQkoIGZsYXRPcHRpb25zWyBrZXkgXSA/IHRhcmdldCA6ICggZGVlcCB8fCAoIGRlZXAgPSB7fSApICkgKVsga2V5IF0gPSBzcmNbIGtleSBdOwoJCX0KCX0KCWlmICggZGVlcCApIHsKCQlqUXVlcnkuZXh0ZW5kKCB0cnVlLCB0YXJnZXQsIGRlZXAgKTsKCX0KCglyZXR1cm4gdGFyZ2V0Owp9CgovKiBIYW5kbGVzIHJlc3BvbnNlcyB0byBhbiBhamF4IHJlcXVlc3Q6CiAqIC0gZmluZHMgdGhlIHJpZ2h0IGRhdGFUeXBlIChtZWRpYXRlcyBiZXR3ZWVuIGNvbnRlbnQtdHlwZSBhbmQgZXhwZWN0ZWQgZGF0YVR5cGUpCiAqIC0gcmV0dXJucyB0aGUgY29ycmVzcG9uZGluZyByZXNwb25zZQogKi8KZnVuY3Rpb24gYWpheEhhbmRsZVJlc3BvbnNlcyggcywganFYSFIsIHJlc3BvbnNlcyApIHsKCgl2YXIgY3QsIHR5cGUsIGZpbmFsRGF0YVR5cGUsIGZpcnN0RGF0YVR5cGUsCgkJY29udGVudHMgPSBzLmNvbnRlbnRzLAoJCWRhdGFUeXBlcyA9IHMuZGF0YVR5cGVzOwoKCS8vIFJlbW92ZSBhdXRvIGRhdGFUeXBlIGFuZCBnZXQgY29udGVudC10eXBlIGluIHRoZSBwcm9jZXNzCgl3aGlsZSAoIGRhdGFUeXBlc1sgMCBdID09PSAiKiIgKSB7CgkJZGF0YVR5cGVzLnNoaWZ0KCk7CgkJaWYgKCBjdCA9PT0gdW5kZWZpbmVkICkgewoJCQljdCA9IHMubWltZVR5cGUgfHwganFYSFIuZ2V0UmVzcG9uc2VIZWFkZXIoICJDb250ZW50LVR5cGUiICk7CgkJfQoJfQoKCS8vIENoZWNrIGlmIHdlJ3JlIGRlYWxpbmcgd2l0aCBhIGtub3duIGNvbnRlbnQtdHlwZQoJaWYgKCBjdCApIHsKCQlmb3IgKCB0eXBlIGluIGNvbnRlbnRzICkgewoJCQlpZiAoIGNvbnRlbnRzWyB0eXBlIF0gJiYgY29udGVudHNbIHR5cGUgXS50ZXN0KCBjdCApICkgewoJCQkJZGF0YVR5cGVzLnVuc2hpZnQoIHR5cGUgKTsKCQkJCWJyZWFrOwoJCQl9CgkJfQoJfQoKCS8vIENoZWNrIHRvIHNlZSBpZiB3ZSBoYXZlIGEgcmVzcG9uc2UgZm9yIHRoZSBleHBlY3RlZCBkYXRhVHlwZQoJaWYgKCBkYXRhVHlwZXNbIDAgXSBpbiByZXNwb25zZXMgKSB7CgkJZmluYWxEYXRhVHlwZSA9IGRhdGFUeXBlc1sgMCBdOwoJfSBlbHNlIHsKCgkJLy8gVHJ5IGNvbnZlcnRpYmxlIGRhdGFUeXBlcwoJCWZvciAoIHR5cGUgaW4gcmVzcG9uc2VzICkgewoJCQlpZiAoICFkYXRhVHlwZXNbIDAgXSB8fCBzLmNvbnZlcnRlcnNbIHR5cGUgKyAiICIgKyBkYXRhVHlwZXNbIDAgXSBdICkgewoJCQkJZmluYWxEYXRhVHlwZSA9IHR5cGU7CgkJCQlicmVhazsKCQkJfQoJCQlpZiAoICFmaXJzdERhdGFUeXBlICkgewoJCQkJZmlyc3REYXRhVHlwZSA9IHR5cGU7CgkJCX0KCQl9CgoJCS8vIE9yIGp1c3QgdXNlIGZpcnN0IG9uZQoJCWZpbmFsRGF0YVR5cGUgPSBmaW5hbERhdGFUeXBlIHx8IGZpcnN0RGF0YVR5cGU7Cgl9CgoJLy8gSWYgd2UgZm91bmQgYSBkYXRhVHlwZQoJLy8gV2UgYWRkIHRoZSBkYXRhVHlwZSB0byB0aGUgbGlzdCBpZiBuZWVkZWQKCS8vIGFuZCByZXR1cm4gdGhlIGNvcnJlc3BvbmRpbmcgcmVzcG9uc2UKCWlmICggZmluYWxEYXRhVHlwZSApIHsKCQlpZiAoIGZpbmFsRGF0YVR5cGUgIT09IGRhdGFUeXBlc1sgMCBdICkgewoJCQlkYXRhVHlwZXMudW5zaGlmdCggZmluYWxEYXRhVHlwZSApOwoJCX0KCQlyZXR1cm4gcmVzcG9uc2VzWyBmaW5hbERhdGFUeXBlIF07Cgl9Cn0KCi8qIENoYWluIGNvbnZlcnNpb25zIGdpdmVuIHRoZSByZXF1ZXN0IGFuZCB0aGUgb3JpZ2luYWwgcmVzcG9uc2UKICogQWxzbyBzZXRzIHRoZSByZXNwb25zZVhYWCBmaWVsZHMgb24gdGhlIGpxWEhSIGluc3RhbmNlCiAqLwpmdW5jdGlvbiBhamF4Q29udmVydCggcywgcmVzcG9uc2UsIGpxWEhSLCBpc1N1Y2Nlc3MgKSB7Cgl2YXIgY29udjIsIGN1cnJlbnQsIGNvbnYsIHRtcCwgcHJldiwKCQljb252ZXJ0ZXJzID0ge30sCgoJCS8vIFdvcmsgd2l0aCBhIGNvcHkgb2YgZGF0YVR5cGVzIGluIGNhc2Ugd2UgbmVlZCB0byBtb2RpZnkgaXQgZm9yIGNvbnZlcnNpb24KCQlkYXRhVHlwZXMgPSBzLmRhdGFUeXBlcy5zbGljZSgpOwoKCS8vIENyZWF0ZSBjb252ZXJ0ZXJzIG1hcCB3aXRoIGxvd2VyY2FzZWQga2V5cwoJaWYgKCBkYXRhVHlwZXNbIDEgXSApIHsKCQlmb3IgKCBjb252IGluIHMuY29udmVydGVycyApIHsKCQkJY29udmVydGVyc1sgY29udi50b0xvd2VyQ2FzZSgpIF0gPSBzLmNvbnZlcnRlcnNbIGNvbnYgXTsKCQl9Cgl9CgoJY3VycmVudCA9IGRhdGFUeXBlcy5zaGlmdCgpOwoKCS8vIENvbnZlcnQgdG8gZWFjaCBzZXF1ZW50aWFsIGRhdGFUeXBlCgl3aGlsZSAoIGN1cnJlbnQgKSB7CgoJCWlmICggcy5yZXNwb25zZUZpZWxkc1sgY3VycmVudCBdICkgewoJCQlqcVhIUlsgcy5yZXNwb25zZUZpZWxkc1sgY3VycmVudCBdIF0gPSByZXNwb25zZTsKCQl9CgoJCS8vIEFwcGx5IHRoZSBkYXRhRmlsdGVyIGlmIHByb3ZpZGVkCgkJaWYgKCAhcHJldiAmJiBpc1N1Y2Nlc3MgJiYgcy5kYXRhRmlsdGVyICkgewoJCQlyZXNwb25zZSA9IHMuZGF0YUZpbHRlciggcmVzcG9uc2UsIHMuZGF0YVR5cGUgKTsKCQl9CgoJCXByZXYgPSBjdXJyZW50OwoJCWN1cnJlbnQgPSBkYXRhVHlwZXMuc2hpZnQoKTsKCgkJaWYgKCBjdXJyZW50ICkgewoKCQkJLy8gVGhlcmUncyBvbmx5IHdvcmsgdG8gZG8gaWYgY3VycmVudCBkYXRhVHlwZSBpcyBub24tYXV0bwoJCQlpZiAoIGN1cnJlbnQgPT09ICIqIiApIHsKCgkJCQljdXJyZW50ID0gcHJldjsKCgkJCS8vIENvbnZlcnQgcmVzcG9uc2UgaWYgcHJldiBkYXRhVHlwZSBpcyBub24tYXV0byBhbmQgZGlmZmVycyBmcm9tIGN1cnJlbnQKCQkJfSBlbHNlIGlmICggcHJldiAhPT0gIioiICYmIHByZXYgIT09IGN1cnJlbnQgKSB7CgoJCQkJLy8gU2VlayBhIGRpcmVjdCBjb252ZXJ0ZXIKCQkJCWNvbnYgPSBjb252ZXJ0ZXJzWyBwcmV2ICsgIiAiICsgY3VycmVudCBdIHx8IGNvbnZlcnRlcnNbICIqICIgKyBjdXJyZW50IF07CgoJCQkJLy8gSWYgbm9uZSBmb3VuZCwgc2VlayBhIHBhaXIKCQkJCWlmICggIWNvbnYgKSB7CgkJCQkJZm9yICggY29udjIgaW4gY29udmVydGVycyApIHsKCgkJCQkJCS8vIElmIGNvbnYyIG91dHB1dHMgY3VycmVudAoJCQkJCQl0bXAgPSBjb252Mi5zcGxpdCggIiAiICk7CgkJCQkJCWlmICggdG1wWyAxIF0gPT09IGN1cnJlbnQgKSB7CgoJCQkJCQkJLy8gSWYgcHJldiBjYW4gYmUgY29udmVydGVkIHRvIGFjY2VwdGVkIGlucHV0CgkJCQkJCQljb252ID0gY29udmVydGVyc1sgcHJldiArICIgIiArIHRtcFsgMCBdIF0gfHwKCQkJCQkJCQljb252ZXJ0ZXJzWyAiKiAiICsgdG1wWyAwIF0gXTsKCQkJCQkJCWlmICggY29udiApIHsKCgkJCQkJCQkJLy8gQ29uZGVuc2UgZXF1aXZhbGVuY2UgY29udmVydGVycwoJCQkJCQkJCWlmICggY29udiA9PT0gdHJ1ZSApIHsKCQkJCQkJCQkJY29udiA9IGNvbnZlcnRlcnNbIGNvbnYyIF07CgoJCQkJCQkJCS8vIE90aGVyd2lzZSwgaW5zZXJ0IHRoZSBpbnRlcm1lZGlhdGUgZGF0YVR5cGUKCQkJCQkJCQl9IGVsc2UgaWYgKCBjb252ZXJ0ZXJzWyBjb252MiBdICE9PSB0cnVlICkgewoJCQkJCQkJCQljdXJyZW50ID0gdG1wWyAwIF07CgkJCQkJCQkJCWRhdGFUeXBlcy51bnNoaWZ0KCB0bXBbIDEgXSApOwoJCQkJCQkJCX0KCQkJCQkJCQlicmVhazsKCQkJCQkJCX0KCQkJCQkJfQoJCQkJCX0KCQkJCX0KCgkJCQkvLyBBcHBseSBjb252ZXJ0ZXIgKGlmIG5vdCBhbiBlcXVpdmFsZW5jZSkKCQkJCWlmICggY29udiAhPT0gdHJ1ZSApIHsKCgkJCQkJLy8gVW5sZXNzIGVycm9ycyBhcmUgYWxsb3dlZCB0byBidWJibGUsIGNhdGNoIGFuZCByZXR1cm4gdGhlbQoJCQkJCWlmICggY29udiAmJiBzLnRocm93cyApIHsKCQkJCQkJcmVzcG9uc2UgPSBjb252KCByZXNwb25zZSApOwoJCQkJCX0gZWxzZSB7CgkJCQkJCXRyeSB7CgkJCQkJCQlyZXNwb25zZSA9IGNvbnYoIHJlc3BvbnNlICk7CgkJCQkJCX0gY2F0Y2ggKCBlICkgewoJCQkJCQkJcmV0dXJuIHsKCQkJCQkJCQlzdGF0ZTogInBhcnNlcmVycm9yIiwKCQkJCQkJCQllcnJvcjogY29udiA/IGUgOiAiTm8gY29udmVyc2lvbiBmcm9tICIgKyBwcmV2ICsgIiB0byAiICsgY3VycmVudAoJCQkJCQkJfTsKCQkJCQkJfQoJCQkJCX0KCQkJCX0KCQkJfQoJCX0KCX0KCglyZXR1cm4geyBzdGF0ZTogInN1Y2Nlc3MiLCBkYXRhOiByZXNwb25zZSB9Owp9CgpqUXVlcnkuZXh0ZW5kKCB7CgoJLy8gQ291bnRlciBmb3IgaG9sZGluZyB0aGUgbnVtYmVyIG9mIGFjdGl2ZSBxdWVyaWVzCglhY3RpdmU6IDAsCgoJLy8gTGFzdC1Nb2RpZmllZCBoZWFkZXIgY2FjaGUgZm9yIG5leHQgcmVxdWVzdAoJbGFzdE1vZGlmaWVkOiB7fSwKCWV0YWc6IHt9LAoKCWFqYXhTZXR0aW5nczogewoJCXVybDogbG9jYXRpb24uaHJlZiwKCQl0eXBlOiAiR0VUIiwKCQlpc0xvY2FsOiBybG9jYWxQcm90b2NvbC50ZXN0KCBsb2NhdGlvbi5wcm90b2NvbCApLAoJCWdsb2JhbDogdHJ1ZSwKCQlwcm9jZXNzRGF0YTogdHJ1ZSwKCQlhc3luYzogdHJ1ZSwKCQljb250ZW50VHlwZTogImFwcGxpY2F0aW9uL3gtd3d3LWZvcm0tdXJsZW5jb2RlZDsgY2hhcnNldD1VVEYtOCIsCgoJCS8qCgkJdGltZW91dDogMCwKCQlkYXRhOiBudWxsLAoJCWRhdGFUeXBlOiBudWxsLAoJCXVzZXJuYW1lOiBudWxsLAoJCXBhc3N3b3JkOiBudWxsLAoJCWNhY2hlOiBudWxsLAoJCXRocm93czogZmFsc2UsCgkJdHJhZGl0aW9uYWw6IGZhbHNlLAoJCWhlYWRlcnM6IHt9LAoJCSovCgoJCWFjY2VwdHM6IHsKCQkJIioiOiBhbGxUeXBlcywKCQkJdGV4dDogInRleHQvcGxhaW4iLAoJCQlodG1sOiAidGV4dC9odG1sIiwKCQkJeG1sOiAiYXBwbGljYXRpb24veG1sLCB0ZXh0L3htbCIsCgkJCWpzb246ICJhcHBsaWNhdGlvbi9qc29uLCB0ZXh0L2phdmFzY3JpcHQiCgkJfSwKCgkJY29udGVudHM6IHsKCQkJeG1sOiAvXGJ4bWxcYi8sCgkJCWh0bWw6IC9cYmh0bWwvLAoJCQlqc29uOiAvXGJqc29uXGIvCgkJfSwKCgkJcmVzcG9uc2VGaWVsZHM6IHsKCQkJeG1sOiAicmVzcG9uc2VYTUwiLAoJCQl0ZXh0OiAicmVzcG9uc2VUZXh0IiwKCQkJanNvbjogInJlc3BvbnNlSlNPTiIKCQl9LAoKCQkvLyBEYXRhIGNvbnZlcnRlcnMKCQkvLyBLZXlzIHNlcGFyYXRlIHNvdXJjZSAob3IgY2F0Y2hhbGwgIioiKSBhbmQgZGVzdGluYXRpb24gdHlwZXMgd2l0aCBhIHNpbmdsZSBzcGFjZQoJCWNvbnZlcnRlcnM6IHsKCgkJCS8vIENvbnZlcnQgYW55dGhpbmcgdG8gdGV4dAoJCQkiKiB0ZXh0IjogU3RyaW5nLAoKCQkJLy8gVGV4dCB0byBodG1sICh0cnVlID0gbm8gdHJhbnNmb3JtYXRpb24pCgkJCSJ0ZXh0IGh0bWwiOiB0cnVlLAoKCQkJLy8gRXZhbHVhdGUgdGV4dCBhcyBhIGpzb24gZXhwcmVzc2lvbgoJCQkidGV4dCBqc29uIjogSlNPTi5wYXJzZSwKCgkJCS8vIFBhcnNlIHRleHQgYXMgeG1sCgkJCSJ0ZXh0IHhtbCI6IGpRdWVyeS5wYXJzZVhNTAoJCX0sCgoJCS8vIEZvciBvcHRpb25zIHRoYXQgc2hvdWxkbid0IGJlIGRlZXAgZXh0ZW5kZWQ6CgkJLy8geW91IGNhbiBhZGQgeW91ciBvd24gY3VzdG9tIG9wdGlvbnMgaGVyZSBpZgoJCS8vIGFuZCB3aGVuIHlvdSBjcmVhdGUgb25lIHRoYXQgc2hvdWxkbid0IGJlCgkJLy8gZGVlcCBleHRlbmRlZCAoc2VlIGFqYXhFeHRlbmQpCgkJZmxhdE9wdGlvbnM6IHsKCQkJdXJsOiB0cnVlLAoJCQljb250ZXh0OiB0cnVlCgkJfQoJfSwKCgkvLyBDcmVhdGVzIGEgZnVsbCBmbGVkZ2VkIHNldHRpbmdzIG9iamVjdCBpbnRvIHRhcmdldAoJLy8gd2l0aCBib3RoIGFqYXhTZXR0aW5ncyBhbmQgc2V0dGluZ3MgZmllbGRzLgoJLy8gSWYgdGFyZ2V0IGlzIG9taXR0ZWQsIHdyaXRlcyBpbnRvIGFqYXhTZXR0aW5ncy4KCWFqYXhTZXR1cDogZnVuY3Rpb24oIHRhcmdldCwgc2V0dGluZ3MgKSB7CgkJcmV0dXJuIHNldHRpbmdzID8KCgkJCS8vIEJ1aWxkaW5nIGEgc2V0dGluZ3Mgb2JqZWN0CgkJCWFqYXhFeHRlbmQoIGFqYXhFeHRlbmQoIHRhcmdldCwgalF1ZXJ5LmFqYXhTZXR0aW5ncyApLCBzZXR0aW5ncyApIDoKCgkJCS8vIEV4dGVuZGluZyBhamF4U2V0dGluZ3MKCQkJYWpheEV4dGVuZCggalF1ZXJ5LmFqYXhTZXR0aW5ncywgdGFyZ2V0ICk7Cgl9LAoKCWFqYXhQcmVmaWx0ZXI6IGFkZFRvUHJlZmlsdGVyc09yVHJhbnNwb3J0cyggcHJlZmlsdGVycyApLAoJYWpheFRyYW5zcG9ydDogYWRkVG9QcmVmaWx0ZXJzT3JUcmFuc3BvcnRzKCB0cmFuc3BvcnRzICksCgoJLy8gTWFpbiBtZXRob2QKCWFqYXg6IGZ1bmN0aW9uKCB1cmwsIG9wdGlvbnMgKSB7CgoJCS8vIElmIHVybCBpcyBhbiBvYmplY3QsIHNpbXVsYXRlIHByZS0xLjUgc2lnbmF0dXJlCgkJaWYgKCB0eXBlb2YgdXJsID09PSAib2JqZWN0IiApIHsKCQkJb3B0aW9ucyA9IHVybDsKCQkJdXJsID0gdW5kZWZpbmVkOwoJCX0KCgkJLy8gRm9yY2Ugb3B0aW9ucyB0byBiZSBhbiBvYmplY3QKCQlvcHRpb25zID0gb3B0aW9ucyB8fCB7fTsKCgkJdmFyIHRyYW5zcG9ydCwKCgkJCS8vIFVSTCB3aXRob3V0IGFudGktY2FjaGUgcGFyYW0KCQkJY2FjaGVVUkwsCgoJCQkvLyBSZXNwb25zZSBoZWFkZXJzCgkJCXJlc3BvbnNlSGVhZGVyc1N0cmluZywKCQkJcmVzcG9uc2VIZWFkZXJzLAoKCQkJLy8gdGltZW91dCBoYW5kbGUKCQkJdGltZW91dFRpbWVyLAoKCQkJLy8gVXJsIGNsZWFudXAgdmFyCgkJCXVybEFuY2hvciwKCgkJCS8vIFJlcXVlc3Qgc3RhdGUgKGJlY29tZXMgZmFsc2UgdXBvbiBzZW5kIGFuZCB0cnVlIHVwb24gY29tcGxldGlvbikKCQkJY29tcGxldGVkLAoKCQkJLy8gVG8ga25vdyBpZiBnbG9iYWwgZXZlbnRzIGFyZSB0byBiZSBkaXNwYXRjaGVkCgkJCWZpcmVHbG9iYWxzLAoKCQkJLy8gTG9vcCB2YXJpYWJsZQoJCQlpLAoKCQkJLy8gdW5jYWNoZWQgcGFydCBvZiB0aGUgdXJsCgkJCXVuY2FjaGVkLAoKCQkJLy8gQ3JlYXRlIHRoZSBmaW5hbCBvcHRpb25zIG9iamVjdAoJCQlzID0galF1ZXJ5LmFqYXhTZXR1cCgge30sIG9wdGlvbnMgKSwKCgkJCS8vIENhbGxiYWNrcyBjb250ZXh0CgkJCWNhbGxiYWNrQ29udGV4dCA9IHMuY29udGV4dCB8fCBzLAoKCQkJLy8gQ29udGV4dCBmb3IgZ2xvYmFsIGV2ZW50cyBpcyBjYWxsYmFja0NvbnRleHQgaWYgaXQgaXMgYSBET00gbm9kZSBvciBqUXVlcnkgY29sbGVjdGlvbgoJCQlnbG9iYWxFdmVudENvbnRleHQgPSBzLmNvbnRleHQgJiYKCQkJCSggY2FsbGJhY2tDb250ZXh0Lm5vZGVUeXBlIHx8IGNhbGxiYWNrQ29udGV4dC5qcXVlcnkgKSA/CgkJCQlqUXVlcnkoIGNhbGxiYWNrQ29udGV4dCApIDoKCQkJCWpRdWVyeS5ldmVudCwKCgkJCS8vIERlZmVycmVkcwoJCQlkZWZlcnJlZCA9IGpRdWVyeS5EZWZlcnJlZCgpLAoJCQljb21wbGV0ZURlZmVycmVkID0galF1ZXJ5LkNhbGxiYWNrcyggIm9uY2UgbWVtb3J5IiApLAoKCQkJLy8gU3RhdHVzLWRlcGVuZGVudCBjYWxsYmFja3MKCQkJc3RhdHVzQ29kZSA9IHMuc3RhdHVzQ29kZSB8fCB7fSwKCgkJCS8vIEhlYWRlcnMgKHRoZXkgYXJlIHNlbnQgYWxsIGF0IG9uY2UpCgkJCXJlcXVlc3RIZWFkZXJzID0ge30sCgkJCXJlcXVlc3RIZWFkZXJzTmFtZXMgPSB7fSwKCgkJCS8vIERlZmF1bHQgYWJvcnQgbWVzc2FnZQoJCQlzdHJBYm9ydCA9ICJjYW5jZWxlZCIsCgoJCQkvLyBGYWtlIHhocgoJCQlqcVhIUiA9IHsKCQkJCXJlYWR5U3RhdGU6IDAsCgoJCQkJLy8gQnVpbGRzIGhlYWRlcnMgaGFzaHRhYmxlIGlmIG5lZWRlZAoJCQkJZ2V0UmVzcG9uc2VIZWFkZXI6IGZ1bmN0aW9uKCBrZXkgKSB7CgkJCQkJdmFyIG1hdGNoOwoJCQkJCWlmICggY29tcGxldGVkICkgewoJCQkJCQlpZiAoICFyZXNwb25zZUhlYWRlcnMgKSB7CgkJCQkJCQlyZXNwb25zZUhlYWRlcnMgPSB7fTsKCQkJCQkJCXdoaWxlICggKCBtYXRjaCA9IHJoZWFkZXJzLmV4ZWMoIHJlc3BvbnNlSGVhZGVyc1N0cmluZyApICkgKSB7CgkJCQkJCQkJcmVzcG9uc2VIZWFkZXJzWyBtYXRjaFsgMSBdLnRvTG93ZXJDYXNlKCkgKyAiICIgXSA9CgkJCQkJCQkJCSggcmVzcG9uc2VIZWFkZXJzWyBtYXRjaFsgMSBdLnRvTG93ZXJDYXNlKCkgKyAiICIgXSB8fCBbXSApCgkJCQkJCQkJCQkuY29uY2F0KCBtYXRjaFsgMiBdICk7CgkJCQkJCQl9CgkJCQkJCX0KCQkJCQkJbWF0Y2ggPSByZXNwb25zZUhlYWRlcnNbIGtleS50b0xvd2VyQ2FzZSgpICsgIiAiIF07CgkJCQkJfQoJCQkJCXJldHVybiBtYXRjaCA9PSBudWxsID8gbnVsbCA6IG1hdGNoLmpvaW4oICIsICIgKTsKCQkJCX0sCgoJCQkJLy8gUmF3IHN0cmluZwoJCQkJZ2V0QWxsUmVzcG9uc2VIZWFkZXJzOiBmdW5jdGlvbigpIHsKCQkJCQlyZXR1cm4gY29tcGxldGVkID8gcmVzcG9uc2VIZWFkZXJzU3RyaW5nIDogbnVsbDsKCQkJCX0sCgoJCQkJLy8gQ2FjaGVzIHRoZSBoZWFkZXIKCQkJCXNldFJlcXVlc3RIZWFkZXI6IGZ1bmN0aW9uKCBuYW1lLCB2YWx1ZSApIHsKCQkJCQlpZiAoIGNvbXBsZXRlZCA9PSBudWxsICkgewoJCQkJCQluYW1lID0gcmVxdWVzdEhlYWRlcnNOYW1lc1sgbmFtZS50b0xvd2VyQ2FzZSgpIF0gPQoJCQkJCQkJcmVxdWVzdEhlYWRlcnNOYW1lc1sgbmFtZS50b0xvd2VyQ2FzZSgpIF0gfHwgbmFtZTsKCQkJCQkJcmVxdWVzdEhlYWRlcnNbIG5hbWUgXSA9IHZhbHVlOwoJCQkJCX0KCQkJCQlyZXR1cm4gdGhpczsKCQkJCX0sCgoJCQkJLy8gT3ZlcnJpZGVzIHJlc3BvbnNlIGNvbnRlbnQtdHlwZSBoZWFkZXIKCQkJCW92ZXJyaWRlTWltZVR5cGU6IGZ1bmN0aW9uKCB0eXBlICkgewoJCQkJCWlmICggY29tcGxldGVkID09IG51bGwgKSB7CgkJCQkJCXMubWltZVR5cGUgPSB0eXBlOwoJCQkJCX0KCQkJCQlyZXR1cm4gdGhpczsKCQkJCX0sCgoJCQkJLy8gU3RhdHVzLWRlcGVuZGVudCBjYWxsYmFja3MKCQkJCXN0YXR1c0NvZGU6IGZ1bmN0aW9uKCBtYXAgKSB7CgkJCQkJdmFyIGNvZGU7CgkJCQkJaWYgKCBtYXAgKSB7CgkJCQkJCWlmICggY29tcGxldGVkICkgewoKCQkJCQkJCS8vIEV4ZWN1dGUgdGhlIGFwcHJvcHJpYXRlIGNhbGxiYWNrcwoJCQkJCQkJanFYSFIuYWx3YXlzKCBtYXBbIGpxWEhSLnN0YXR1cyBdICk7CgkJCQkJCX0gZWxzZSB7CgoJCQkJCQkJLy8gTGF6eS1hZGQgdGhlIG5ldyBjYWxsYmFja3MgaW4gYSB3YXkgdGhhdCBwcmVzZXJ2ZXMgb2xkIG9uZXMKCQkJCQkJCWZvciAoIGNvZGUgaW4gbWFwICkgewoJCQkJCQkJCXN0YXR1c0NvZGVbIGNvZGUgXSA9IFsgc3RhdHVzQ29kZVsgY29kZSBdLCBtYXBbIGNvZGUgXSBdOwoJCQkJCQkJfQoJCQkJCQl9CgkJCQkJfQoJCQkJCXJldHVybiB0aGlzOwoJCQkJfSwKCgkJCQkvLyBDYW5jZWwgdGhlIHJlcXVlc3QKCQkJCWFib3J0OiBmdW5jdGlvbiggc3RhdHVzVGV4dCApIHsKCQkJCQl2YXIgZmluYWxUZXh0ID0gc3RhdHVzVGV4dCB8fCBzdHJBYm9ydDsKCQkJCQlpZiAoIHRyYW5zcG9ydCApIHsKCQkJCQkJdHJhbnNwb3J0LmFib3J0KCBmaW5hbFRleHQgKTsKCQkJCQl9CgkJCQkJZG9uZSggMCwgZmluYWxUZXh0ICk7CgkJCQkJcmV0dXJuIHRoaXM7CgkJCQl9CgkJCX07CgoJCS8vIEF0dGFjaCBkZWZlcnJlZHMKCQlkZWZlcnJlZC5wcm9taXNlKCBqcVhIUiApOwoKCQkvLyBBZGQgcHJvdG9jb2wgaWYgbm90IHByb3ZpZGVkIChwcmVmaWx0ZXJzIG1pZ2h0IGV4cGVjdCBpdCkKCQkvLyBIYW5kbGUgZmFsc3kgdXJsIGluIHRoZSBzZXR0aW5ncyBvYmplY3QgKHRyYWMtMTAwOTM6IGNvbnNpc3RlbmN5IHdpdGggb2xkIHNpZ25hdHVyZSkKCQkvLyBXZSBhbHNvIHVzZSB0aGUgdXJsIHBhcmFtZXRlciBpZiBhdmFpbGFibGUKCQlzLnVybCA9ICggKCB1cmwgfHwgcy51cmwgfHwgbG9jYXRpb24uaHJlZiApICsgIiIgKQoJCQkucmVwbGFjZSggcnByb3RvY29sLCBsb2NhdGlvbi5wcm90b2NvbCArICIvLyIgKTsKCgkJLy8gQWxpYXMgbWV0aG9kIG9wdGlvbiB0byB0eXBlIGFzIHBlciB0aWNrZXQgdHJhYy0xMjAwNAoJCXMudHlwZSA9IG9wdGlvbnMubWV0aG9kIHx8IG9wdGlvbnMudHlwZSB8fCBzLm1ldGhvZCB8fCBzLnR5cGU7CgoJCS8vIEV4dHJhY3QgZGF0YVR5cGVzIGxpc3QKCQlzLmRhdGFUeXBlcyA9ICggcy5kYXRhVHlwZSB8fCAiKiIgKS50b0xvd2VyQ2FzZSgpLm1hdGNoKCBybm90aHRtbHdoaXRlICkgfHwgWyAiIiBdOwoKCQkvLyBBIGNyb3NzLWRvbWFpbiByZXF1ZXN0IGlzIGluIG9yZGVyIHdoZW4gdGhlIG9yaWdpbiBkb2Vzbid0IG1hdGNoIHRoZSBjdXJyZW50IG9yaWdpbi4KCQlpZiAoIHMuY3Jvc3NEb21haW4gPT0gbnVsbCApIHsKCQkJdXJsQW5jaG9yID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCggImEiICk7CgoJCQkvLyBTdXBwb3J0OiBJRSA8PTggLSAxMSwgRWRnZSAxMiAtIDE1CgkJCS8vIElFIHRocm93cyBleGNlcHRpb24gb24gYWNjZXNzaW5nIHRoZSBocmVmIHByb3BlcnR5IGlmIHVybCBpcyBtYWxmb3JtZWQsCgkJCS8vIGUuZy4gaHR0cDovL2V4YW1wbGUuY29tOjgweC8KCQkJdHJ5IHsKCQkJCXVybEFuY2hvci5ocmVmID0gcy51cmw7CgoJCQkJLy8gU3VwcG9ydDogSUUgPD04IC0gMTEgb25seQoJCQkJLy8gQW5jaG9yJ3MgaG9zdCBwcm9wZXJ0eSBpc24ndCBjb3JyZWN0bHkgc2V0IHdoZW4gcy51cmwgaXMgcmVsYXRpdmUKCQkJCXVybEFuY2hvci5ocmVmID0gdXJsQW5jaG9yLmhyZWY7CgkJCQlzLmNyb3NzRG9tYWluID0gb3JpZ2luQW5jaG9yLnByb3RvY29sICsgIi8vIiArIG9yaWdpbkFuY2hvci5ob3N0ICE9PQoJCQkJCXVybEFuY2hvci5wcm90b2NvbCArICIvLyIgKyB1cmxBbmNob3IuaG9zdDsKCQkJfSBjYXRjaCAoIGUgKSB7CgoJCQkJLy8gSWYgdGhlcmUgaXMgYW4gZXJyb3IgcGFyc2luZyB0aGUgVVJMLCBhc3N1bWUgaXQgaXMgY3Jvc3NEb21haW4sCgkJCQkvLyBpdCBjYW4gYmUgcmVqZWN0ZWQgYnkgdGhlIHRyYW5zcG9ydCBpZiBpdCBpcyBpbnZhbGlkCgkJCQlzLmNyb3NzRG9tYWluID0gdHJ1ZTsKCQkJfQoJCX0KCgkJLy8gQ29udmVydCBkYXRhIGlmIG5vdCBhbHJlYWR5IGEgc3RyaW5nCgkJaWYgKCBzLmRhdGEgJiYgcy5wcm9jZXNzRGF0YSAmJiB0eXBlb2Ygcy5kYXRhICE9PSAic3RyaW5nIiApIHsKCQkJcy5kYXRhID0galF1ZXJ5LnBhcmFtKCBzLmRhdGEsIHMudHJhZGl0aW9uYWwgKTsKCQl9CgoJCS8vIEFwcGx5IHByZWZpbHRlcnMKCQlpbnNwZWN0UHJlZmlsdGVyc09yVHJhbnNwb3J0cyggcHJlZmlsdGVycywgcywgb3B0aW9ucywganFYSFIgKTsKCgkJLy8gSWYgcmVxdWVzdCB3YXMgYWJvcnRlZCBpbnNpZGUgYSBwcmVmaWx0ZXIsIHN0b3AgdGhlcmUKCQlpZiAoIGNvbXBsZXRlZCApIHsKCQkJcmV0dXJuIGpxWEhSOwoJCX0KCgkJLy8gV2UgY2FuIGZpcmUgZ2xvYmFsIGV2ZW50cyBhcyBvZiBub3cgaWYgYXNrZWQgdG8KCQkvLyBEb24ndCBmaXJlIGV2ZW50cyBpZiBqUXVlcnkuZXZlbnQgaXMgdW5kZWZpbmVkIGluIGFuIEFNRC11c2FnZSBzY2VuYXJpbyAodHJhYy0xNTExOCkKCQlmaXJlR2xvYmFscyA9IGpRdWVyeS5ldmVudCAmJiBzLmdsb2JhbDsKCgkJLy8gV2F0Y2ggZm9yIGEgbmV3IHNldCBvZiByZXF1ZXN0cwoJCWlmICggZmlyZUdsb2JhbHMgJiYgalF1ZXJ5LmFjdGl2ZSsrID09PSAwICkgewoJCQlqUXVlcnkuZXZlbnQudHJpZ2dlciggImFqYXhTdGFydCIgKTsKCQl9CgoJCS8vIFVwcGVyY2FzZSB0aGUgdHlwZQoJCXMudHlwZSA9IHMudHlwZS50b1VwcGVyQ2FzZSgpOwoKCQkvLyBEZXRlcm1pbmUgaWYgcmVxdWVzdCBoYXMgY29udGVudAoJCXMuaGFzQ29udGVudCA9ICFybm9Db250ZW50LnRlc3QoIHMudHlwZSApOwoKCQkvLyBTYXZlIHRoZSBVUkwgaW4gY2FzZSB3ZSdyZSB0b3lpbmcgd2l0aCB0aGUgSWYtTW9kaWZpZWQtU2luY2UKCQkvLyBhbmQvb3IgSWYtTm9uZS1NYXRjaCBoZWFkZXIgbGF0ZXIgb24KCQkvLyBSZW1vdmUgaGFzaCB0byBzaW1wbGlmeSB1cmwgbWFuaXB1bGF0aW9uCgkJY2FjaGVVUkwgPSBzLnVybC5yZXBsYWNlKCByaGFzaCwgIiIgKTsKCgkJLy8gTW9yZSBvcHRpb25zIGhhbmRsaW5nIGZvciByZXF1ZXN0cyB3aXRoIG5vIGNvbnRlbnQKCQlpZiAoICFzLmhhc0NvbnRlbnQgKSB7CgoJCQkvLyBSZW1lbWJlciB0aGUgaGFzaCBzbyB3ZSBjYW4gcHV0IGl0IGJhY2sKCQkJdW5jYWNoZWQgPSBzLnVybC5zbGljZSggY2FjaGVVUkwubGVuZ3RoICk7CgoJCQkvLyBJZiBkYXRhIGlzIGF2YWlsYWJsZSBhbmQgc2hvdWxkIGJlIHByb2Nlc3NlZCwgYXBwZW5kIGRhdGEgdG8gdXJsCgkJCWlmICggcy5kYXRhICYmICggcy5wcm9jZXNzRGF0YSB8fCB0eXBlb2Ygcy5kYXRhID09PSAic3RyaW5nIiApICkgewoJCQkJY2FjaGVVUkwgKz0gKCBycXVlcnkudGVzdCggY2FjaGVVUkwgKSA/ICImIiA6ICI/IiApICsgcy5kYXRhOwoKCQkJCS8vIHRyYWMtOTY4MjogcmVtb3ZlIGRhdGEgc28gdGhhdCBpdCdzIG5vdCB1c2VkIGluIGFuIGV2ZW50dWFsIHJldHJ5CgkJCQlkZWxldGUgcy5kYXRhOwoJCQl9CgoJCQkvLyBBZGQgb3IgdXBkYXRlIGFudGktY2FjaGUgcGFyYW0gaWYgbmVlZGVkCgkJCWlmICggcy5jYWNoZSA9PT0gZmFsc2UgKSB7CgkJCQljYWNoZVVSTCA9IGNhY2hlVVJMLnJlcGxhY2UoIHJhbnRpQ2FjaGUsICIkMSIgKTsKCQkJCXVuY2FjaGVkID0gKCBycXVlcnkudGVzdCggY2FjaGVVUkwgKSA/ICImIiA6ICI/IiApICsgIl89IiArICggbm9uY2UuZ3VpZCsrICkgKwoJCQkJCXVuY2FjaGVkOwoJCQl9CgoJCQkvLyBQdXQgaGFzaCBhbmQgYW50aS1jYWNoZSBvbiB0aGUgVVJMIHRoYXQgd2lsbCBiZSByZXF1ZXN0ZWQgKGdoLTE3MzIpCgkJCXMudXJsID0gY2FjaGVVUkwgKyB1bmNhY2hlZDsKCgkJLy8gQ2hhbmdlICclMjAnIHRvICcrJyBpZiB0aGlzIGlzIGVuY29kZWQgZm9ybSBib2R5IGNvbnRlbnQgKGdoLTI2NTgpCgkJfSBlbHNlIGlmICggcy5kYXRhICYmIHMucHJvY2Vzc0RhdGEgJiYKCQkJKCBzLmNvbnRlbnRUeXBlIHx8ICIiICkuaW5kZXhPZiggImFwcGxpY2F0aW9uL3gtd3d3LWZvcm0tdXJsZW5jb2RlZCIgKSA9PT0gMCApIHsKCQkJcy5kYXRhID0gcy5kYXRhLnJlcGxhY2UoIHIyMCwgIisiICk7CgkJfQoKCQkvLyBTZXQgdGhlIElmLU1vZGlmaWVkLVNpbmNlIGFuZC9vciBJZi1Ob25lLU1hdGNoIGhlYWRlciwgaWYgaW4gaWZNb2RpZmllZCBtb2RlLgoJCWlmICggcy5pZk1vZGlmaWVkICkgewoJCQlpZiAoIGpRdWVyeS5sYXN0TW9kaWZpZWRbIGNhY2hlVVJMIF0gKSB7CgkJCQlqcVhIUi5zZXRSZXF1ZXN0SGVhZGVyKCAiSWYtTW9kaWZpZWQtU2luY2UiLCBqUXVlcnkubGFzdE1vZGlmaWVkWyBjYWNoZVVSTCBdICk7CgkJCX0KCQkJaWYgKCBqUXVlcnkuZXRhZ1sgY2FjaGVVUkwgXSApIHsKCQkJCWpxWEhSLnNldFJlcXVlc3RIZWFkZXIoICJJZi1Ob25lLU1hdGNoIiwgalF1ZXJ5LmV0YWdbIGNhY2hlVVJMIF0gKTsKCQkJfQoJCX0KCgkJLy8gU2V0IHRoZSBjb3JyZWN0IGhlYWRlciwgaWYgZGF0YSBpcyBiZWluZyBzZW50CgkJaWYgKCBzLmRhdGEgJiYgcy5oYXNDb250ZW50ICYmIHMuY29udGVudFR5cGUgIT09IGZhbHNlIHx8IG9wdGlvbnMuY29udGVudFR5cGUgKSB7CgkJCWpxWEhSLnNldFJlcXVlc3RIZWFkZXIoICJDb250ZW50LVR5cGUiLCBzLmNvbnRlbnRUeXBlICk7CgkJfQoKCQkvLyBTZXQgdGhlIEFjY2VwdHMgaGVhZGVyIGZvciB0aGUgc2VydmVyLCBkZXBlbmRpbmcgb24gdGhlIGRhdGFUeXBlCgkJanFYSFIuc2V0UmVxdWVzdEhlYWRlcigKCQkJIkFjY2VwdCIsCgkJCXMuZGF0YVR5cGVzWyAwIF0gJiYgcy5hY2NlcHRzWyBzLmRhdGFUeXBlc1sgMCBdIF0gPwoJCQkJcy5hY2NlcHRzWyBzLmRhdGFUeXBlc1sgMCBdIF0gKwoJCQkJCSggcy5kYXRhVHlwZXNbIDAgXSAhPT0gIioiID8gIiwgIiArIGFsbFR5cGVzICsgIjsgcT0wLjAxIiA6ICIiICkgOgoJCQkJcy5hY2NlcHRzWyAiKiIgXQoJCSk7CgoJCS8vIENoZWNrIGZvciBoZWFkZXJzIG9wdGlvbgoJCWZvciAoIGkgaW4gcy5oZWFkZXJzICkgewoJCQlqcVhIUi5zZXRSZXF1ZXN0SGVhZGVyKCBpLCBzLmhlYWRlcnNbIGkgXSApOwoJCX0KCgkJLy8gQWxsb3cgY3VzdG9tIGhlYWRlcnMvbWltZXR5cGVzIGFuZCBlYXJseSBhYm9ydAoJCWlmICggcy5iZWZvcmVTZW5kICYmCgkJCSggcy5iZWZvcmVTZW5kLmNhbGwoIGNhbGxiYWNrQ29udGV4dCwganFYSFIsIHMgKSA9PT0gZmFsc2UgfHwgY29tcGxldGVkICkgKSB7CgoJCQkvLyBBYm9ydCBpZiBub3QgZG9uZSBhbHJlYWR5IGFuZCByZXR1cm4KCQkJcmV0dXJuIGpxWEhSLmFib3J0KCk7CgkJfQoKCQkvLyBBYm9ydGluZyBpcyBubyBsb25nZXIgYSBjYW5jZWxsYXRpb24KCQlzdHJBYm9ydCA9ICJhYm9ydCI7CgoJCS8vIEluc3RhbGwgY2FsbGJhY2tzIG9uIGRlZmVycmVkcwoJCWNvbXBsZXRlRGVmZXJyZWQuYWRkKCBzLmNvbXBsZXRlICk7CgkJanFYSFIuZG9uZSggcy5zdWNjZXNzICk7CgkJanFYSFIuZmFpbCggcy5lcnJvciApOwoKCQkvLyBHZXQgdHJhbnNwb3J0CgkJdHJhbnNwb3J0ID0gaW5zcGVjdFByZWZpbHRlcnNPclRyYW5zcG9ydHMoIHRyYW5zcG9ydHMsIHMsIG9wdGlvbnMsIGpxWEhSICk7CgoJCS8vIElmIG5vIHRyYW5zcG9ydCwgd2UgYXV0by1hYm9ydAoJCWlmICggIXRyYW5zcG9ydCApIHsKCQkJZG9uZSggLTEsICJObyBUcmFuc3BvcnQiICk7CgkJfSBlbHNlIHsKCQkJanFYSFIucmVhZHlTdGF0ZSA9IDE7CgoJCQkvLyBTZW5kIGdsb2JhbCBldmVudAoJCQlpZiAoIGZpcmVHbG9iYWxzICkgewoJCQkJZ2xvYmFsRXZlbnRDb250ZXh0LnRyaWdnZXIoICJhamF4U2VuZCIsIFsganFYSFIsIHMgXSApOwoJCQl9CgoJCQkvLyBJZiByZXF1ZXN0IHdhcyBhYm9ydGVkIGluc2lkZSBhamF4U2VuZCwgc3RvcCB0aGVyZQoJCQlpZiAoIGNvbXBsZXRlZCApIHsKCQkJCXJldHVybiBqcVhIUjsKCQkJfQoKCQkJLy8gVGltZW91dAoJCQlpZiAoIHMuYXN5bmMgJiYgcy50aW1lb3V0ID4gMCApIHsKCQkJCXRpbWVvdXRUaW1lciA9IHdpbmRvdy5zZXRUaW1lb3V0KCBmdW5jdGlvbigpIHsKCQkJCQlqcVhIUi5hYm9ydCggInRpbWVvdXQiICk7CgkJCQl9LCBzLnRpbWVvdXQgKTsKCQkJfQoKCQkJdHJ5IHsKCQkJCWNvbXBsZXRlZCA9IGZhbHNlOwoJCQkJdHJhbnNwb3J0LnNlbmQoIHJlcXVlc3RIZWFkZXJzLCBkb25lICk7CgkJCX0gY2F0Y2ggKCBlICkgewoKCQkJCS8vIFJldGhyb3cgcG9zdC1jb21wbGV0aW9uIGV4Y2VwdGlvbnMKCQkJCWlmICggY29tcGxldGVkICkgewoJCQkJCXRocm93IGU7CgkJCQl9CgoJCQkJLy8gUHJvcGFnYXRlIG90aGVycyBhcyByZXN1bHRzCgkJCQlkb25lKCAtMSwgZSApOwoJCQl9CgkJfQoKCQkvLyBDYWxsYmFjayBmb3Igd2hlbiBldmVyeXRoaW5nIGlzIGRvbmUKCQlmdW5jdGlvbiBkb25lKCBzdGF0dXMsIG5hdGl2ZVN0YXR1c1RleHQsIHJlc3BvbnNlcywgaGVhZGVycyApIHsKCQkJdmFyIGlzU3VjY2Vzcywgc3VjY2VzcywgZXJyb3IsIHJlc3BvbnNlLCBtb2RpZmllZCwKCQkJCXN0YXR1c1RleHQgPSBuYXRpdmVTdGF0dXNUZXh0OwoKCQkJLy8gSWdub3JlIHJlcGVhdCBpbnZvY2F0aW9ucwoJCQlpZiAoIGNvbXBsZXRlZCApIHsKCQkJCXJldHVybjsKCQkJfQoKCQkJY29tcGxldGVkID0gdHJ1ZTsKCgkJCS8vIENsZWFyIHRpbWVvdXQgaWYgaXQgZXhpc3RzCgkJCWlmICggdGltZW91dFRpbWVyICkgewoJCQkJd2luZG93LmNsZWFyVGltZW91dCggdGltZW91dFRpbWVyICk7CgkJCX0KCgkJCS8vIERlcmVmZXJlbmNlIHRyYW5zcG9ydCBmb3IgZWFybHkgZ2FyYmFnZSBjb2xsZWN0aW9uCgkJCS8vIChubyBtYXR0ZXIgaG93IGxvbmcgdGhlIGpxWEhSIG9iamVjdCB3aWxsIGJlIHVzZWQpCgkJCXRyYW5zcG9ydCA9IHVuZGVmaW5lZDsKCgkJCS8vIENhY2hlIHJlc3BvbnNlIGhlYWRlcnMKCQkJcmVzcG9uc2VIZWFkZXJzU3RyaW5nID0gaGVhZGVycyB8fCAiIjsKCgkJCS8vIFNldCByZWFkeVN0YXRlCgkJCWpxWEhSLnJlYWR5U3RhdGUgPSBzdGF0dXMgPiAwID8gNCA6IDA7CgoJCQkvLyBEZXRlcm1pbmUgaWYgc3VjY2Vzc2Z1bAoJCQlpc1N1Y2Nlc3MgPSBzdGF0dXMgPj0gMjAwICYmIHN0YXR1cyA8IDMwMCB8fCBzdGF0dXMgPT09IDMwNDsKCgkJCS8vIEdldCByZXNwb25zZSBkYXRhCgkJCWlmICggcmVzcG9uc2VzICkgewoJCQkJcmVzcG9uc2UgPSBhamF4SGFuZGxlUmVzcG9uc2VzKCBzLCBqcVhIUiwgcmVzcG9uc2VzICk7CgkJCX0KCgkJCS8vIFVzZSBhIG5vb3AgY29udmVydGVyIGZvciBtaXNzaW5nIHNjcmlwdCBidXQgbm90IGlmIGpzb25wCgkJCWlmICggIWlzU3VjY2VzcyAmJgoJCQkJalF1ZXJ5LmluQXJyYXkoICJzY3JpcHQiLCBzLmRhdGFUeXBlcyApID4gLTEgJiYKCQkJCWpRdWVyeS5pbkFycmF5KCAianNvbiIsIHMuZGF0YVR5cGVzICkgPCAwICkgewoJCQkJcy5jb252ZXJ0ZXJzWyAidGV4dCBzY3JpcHQiIF0gPSBmdW5jdGlvbigpIHt9OwoJCQl9CgoJCQkvLyBDb252ZXJ0IG5vIG1hdHRlciB3aGF0ICh0aGF0IHdheSByZXNwb25zZVhYWCBmaWVsZHMgYXJlIGFsd2F5cyBzZXQpCgkJCXJlc3BvbnNlID0gYWpheENvbnZlcnQoIHMsIHJlc3BvbnNlLCBqcVhIUiwgaXNTdWNjZXNzICk7CgoJCQkvLyBJZiBzdWNjZXNzZnVsLCBoYW5kbGUgdHlwZSBjaGFpbmluZwoJCQlpZiAoIGlzU3VjY2VzcyApIHsKCgkJCQkvLyBTZXQgdGhlIElmLU1vZGlmaWVkLVNpbmNlIGFuZC9vciBJZi1Ob25lLU1hdGNoIGhlYWRlciwgaWYgaW4gaWZNb2RpZmllZCBtb2RlLgoJCQkJaWYgKCBzLmlmTW9kaWZpZWQgKSB7CgkJCQkJbW9kaWZpZWQgPSBqcVhIUi5nZXRSZXNwb25zZUhlYWRlciggIkxhc3QtTW9kaWZpZWQiICk7CgkJCQkJaWYgKCBtb2RpZmllZCApIHsKCQkJCQkJalF1ZXJ5Lmxhc3RNb2RpZmllZFsgY2FjaGVVUkwgXSA9IG1vZGlmaWVkOwoJCQkJCX0KCQkJCQltb2RpZmllZCA9IGpxWEhSLmdldFJlc3BvbnNlSGVhZGVyKCAiZXRhZyIgKTsKCQkJCQlpZiAoIG1vZGlmaWVkICkgewoJCQkJCQlqUXVlcnkuZXRhZ1sgY2FjaGVVUkwgXSA9IG1vZGlmaWVkOwoJCQkJCX0KCQkJCX0KCgkJCQkvLyBpZiBubyBjb250ZW50CgkJCQlpZiAoIHN0YXR1cyA9PT0gMjA0IHx8IHMudHlwZSA9PT0gIkhFQUQiICkgewoJCQkJCXN0YXR1c1RleHQgPSAibm9jb250ZW50IjsKCgkJCQkvLyBpZiBub3QgbW9kaWZpZWQKCQkJCX0gZWxzZSBpZiAoIHN0YXR1cyA9PT0gMzA0ICkgewoJCQkJCXN0YXR1c1RleHQgPSAibm90bW9kaWZpZWQiOwoKCQkJCS8vIElmIHdlIGhhdmUgZGF0YSwgbGV0J3MgY29udmVydCBpdAoJCQkJfSBlbHNlIHsKCQkJCQlzdGF0dXNUZXh0ID0gcmVzcG9uc2Uuc3RhdGU7CgkJCQkJc3VjY2VzcyA9IHJlc3BvbnNlLmRhdGE7CgkJCQkJZXJyb3IgPSByZXNwb25zZS5lcnJvcjsKCQkJCQlpc1N1Y2Nlc3MgPSAhZXJyb3I7CgkJCQl9CgkJCX0gZWxzZSB7CgoJCQkJLy8gRXh0cmFjdCBlcnJvciBmcm9tIHN0YXR1c1RleHQgYW5kIG5vcm1hbGl6ZSBmb3Igbm9uLWFib3J0cwoJCQkJZXJyb3IgPSBzdGF0dXNUZXh0OwoJCQkJaWYgKCBzdGF0dXMgfHwgIXN0YXR1c1RleHQgKSB7CgkJCQkJc3RhdHVzVGV4dCA9ICJlcnJvciI7CgkJCQkJaWYgKCBzdGF0dXMgPCAwICkgewoJCQkJCQlzdGF0dXMgPSAwOwoJCQkJCX0KCQkJCX0KCQkJfQoKCQkJLy8gU2V0IGRhdGEgZm9yIHRoZSBmYWtlIHhociBvYmplY3QKCQkJanFYSFIuc3RhdHVzID0gc3RhdHVzOwoJCQlqcVhIUi5zdGF0dXNUZXh0ID0gKCBuYXRpdmVTdGF0dXNUZXh0IHx8IHN0YXR1c1RleHQgKSArICIiOwoKCQkJLy8gU3VjY2Vzcy9FcnJvcgoJCQlpZiAoIGlzU3VjY2VzcyApIHsKCQkJCWRlZmVycmVkLnJlc29sdmVXaXRoKCBjYWxsYmFja0NvbnRleHQsIFsgc3VjY2Vzcywgc3RhdHVzVGV4dCwganFYSFIgXSApOwoJCQl9IGVsc2UgewoJCQkJZGVmZXJyZWQucmVqZWN0V2l0aCggY2FsbGJhY2tDb250ZXh0LCBbIGpxWEhSLCBzdGF0dXNUZXh0LCBlcnJvciBdICk7CgkJCX0KCgkJCS8vIFN0YXR1cy1kZXBlbmRlbnQgY2FsbGJhY2tzCgkJCWpxWEhSLnN0YXR1c0NvZGUoIHN0YXR1c0NvZGUgKTsKCQkJc3RhdHVzQ29kZSA9IHVuZGVmaW5lZDsKCgkJCWlmICggZmlyZUdsb2JhbHMgKSB7CgkJCQlnbG9iYWxFdmVudENvbnRleHQudHJpZ2dlciggaXNTdWNjZXNzID8gImFqYXhTdWNjZXNzIiA6ICJhamF4RXJyb3IiLAoJCQkJCVsganFYSFIsIHMsIGlzU3VjY2VzcyA/IHN1Y2Nlc3MgOiBlcnJvciBdICk7CgkJCX0KCgkJCS8vIENvbXBsZXRlCgkJCWNvbXBsZXRlRGVmZXJyZWQuZmlyZVdpdGgoIGNhbGxiYWNrQ29udGV4dCwgWyBqcVhIUiwgc3RhdHVzVGV4dCBdICk7CgoJCQlpZiAoIGZpcmVHbG9iYWxzICkgewoJCQkJZ2xvYmFsRXZlbnRDb250ZXh0LnRyaWdnZXIoICJhamF4Q29tcGxldGUiLCBbIGpxWEhSLCBzIF0gKTsKCgkJCQkvLyBIYW5kbGUgdGhlIGdsb2JhbCBBSkFYIGNvdW50ZXIKCQkJCWlmICggISggLS1qUXVlcnkuYWN0aXZlICkgKSB7CgkJCQkJalF1ZXJ5LmV2ZW50LnRyaWdnZXIoICJhamF4U3RvcCIgKTsKCQkJCX0KCQkJfQoJCX0KCgkJcmV0dXJuIGpxWEhSOwoJfSwKCglnZXRKU09OOiBmdW5jdGlvbiggdXJsLCBkYXRhLCBjYWxsYmFjayApIHsKCQlyZXR1cm4galF1ZXJ5LmdldCggdXJsLCBkYXRhLCBjYWxsYmFjaywgImpzb24iICk7Cgl9LAoKCWdldFNjcmlwdDogZnVuY3Rpb24oIHVybCwgY2FsbGJhY2sgKSB7CgkJcmV0dXJuIGpRdWVyeS5nZXQoIHVybCwgdW5kZWZpbmVkLCBjYWxsYmFjaywgInNjcmlwdCIgKTsKCX0KfSApOwoKalF1ZXJ5LmVhY2goIFsgImdldCIsICJwb3N0IiBdLCBmdW5jdGlvbiggX2ksIG1ldGhvZCApIHsKCWpRdWVyeVsgbWV0aG9kIF0gPSBmdW5jdGlvbiggdXJsLCBkYXRhLCBjYWxsYmFjaywgdHlwZSApIHsKCgkJLy8gU2hpZnQgYXJndW1lbnRzIGlmIGRhdGEgYXJndW1lbnQgd2FzIG9taXR0ZWQKCQlpZiAoIGlzRnVuY3Rpb24oIGRhdGEgKSApIHsKCQkJdHlwZSA9IHR5cGUgfHwgY2FsbGJhY2s7CgkJCWNhbGxiYWNrID0gZGF0YTsKCQkJZGF0YSA9IHVuZGVmaW5lZDsKCQl9CgoJCS8vIFRoZSB1cmwgY2FuIGJlIGFuIG9wdGlvbnMgb2JqZWN0ICh3aGljaCB0aGVuIG11c3QgaGF2ZSAudXJsKQoJCXJldHVybiBqUXVlcnkuYWpheCggalF1ZXJ5LmV4dGVuZCggewoJCQl1cmw6IHVybCwKCQkJdHlwZTogbWV0aG9kLAoJCQlkYXRhVHlwZTogdHlwZSwKCQkJZGF0YTogZGF0YSwKCQkJc3VjY2VzczogY2FsbGJhY2sKCQl9LCBqUXVlcnkuaXNQbGFpbk9iamVjdCggdXJsICkgJiYgdXJsICkgKTsKCX07Cn0gKTsKCmpRdWVyeS5hamF4UHJlZmlsdGVyKCBmdW5jdGlvbiggcyApIHsKCXZhciBpOwoJZm9yICggaSBpbiBzLmhlYWRlcnMgKSB7CgkJaWYgKCBpLnRvTG93ZXJDYXNlKCkgPT09ICJjb250ZW50LXR5cGUiICkgewoJCQlzLmNvbnRlbnRUeXBlID0gcy5oZWFkZXJzWyBpIF0gfHwgIiI7CgkJfQoJfQp9ICk7CgoKalF1ZXJ5Ll9ldmFsVXJsID0gZnVuY3Rpb24oIHVybCwgb3B0aW9ucywgZG9jICkgewoJcmV0dXJuIGpRdWVyeS5hamF4KCB7CgkJdXJsOiB1cmwsCgoJCS8vIE1ha2UgdGhpcyBleHBsaWNpdCwgc2luY2UgdXNlciBjYW4gb3ZlcnJpZGUgdGhpcyB0aHJvdWdoIGFqYXhTZXR1cCAodHJhYy0xMTI2NCkKCQl0eXBlOiAiR0VUIiwKCQlkYXRhVHlwZTogInNjcmlwdCIsCgkJY2FjaGU6IHRydWUsCgkJYXN5bmM6IGZhbHNlLAoJCWdsb2JhbDogZmFsc2UsCgoJCS8vIE9ubHkgZXZhbHVhdGUgdGhlIHJlc3BvbnNlIGlmIGl0IGlzIHN1Y2Nlc3NmdWwgKGdoLTQxMjYpCgkJLy8gZGF0YUZpbHRlciBpcyBub3QgaW52b2tlZCBmb3IgZmFpbHVyZSByZXNwb25zZXMsIHNvIHVzaW5nIGl0IGluc3RlYWQKCQkvLyBvZiB0aGUgZGVmYXVsdCBjb252ZXJ0ZXIgaXMga2x1ZGd5IGJ1dCBpdCB3b3Jrcy4KCQljb252ZXJ0ZXJzOiB7CgkJCSJ0ZXh0IHNjcmlwdCI6IGZ1bmN0aW9uKCkge30KCQl9LAoJCWRhdGFGaWx0ZXI6IGZ1bmN0aW9uKCByZXNwb25zZSApIHsKCQkJalF1ZXJ5Lmdsb2JhbEV2YWwoIHJlc3BvbnNlLCBvcHRpb25zLCBkb2MgKTsKCQl9Cgl9ICk7Cn07CgoKalF1ZXJ5LmZuLmV4dGVuZCggewoJd3JhcEFsbDogZnVuY3Rpb24oIGh0bWwgKSB7CgkJdmFyIHdyYXA7CgoJCWlmICggdGhpc1sgMCBdICkgewoJCQlpZiAoIGlzRnVuY3Rpb24oIGh0bWwgKSApIHsKCQkJCWh0bWwgPSBodG1sLmNhbGwoIHRoaXNbIDAgXSApOwoJCQl9CgoJCQkvLyBUaGUgZWxlbWVudHMgdG8gd3JhcCB0aGUgdGFyZ2V0IGFyb3VuZAoJCQl3cmFwID0galF1ZXJ5KCBodG1sLCB0aGlzWyAwIF0ub3duZXJEb2N1bWVudCApLmVxKCAwICkuY2xvbmUoIHRydWUgKTsKCgkJCWlmICggdGhpc1sgMCBdLnBhcmVudE5vZGUgKSB7CgkJCQl3cmFwLmluc2VydEJlZm9yZSggdGhpc1sgMCBdICk7CgkJCX0KCgkJCXdyYXAubWFwKCBmdW5jdGlvbigpIHsKCQkJCXZhciBlbGVtID0gdGhpczsKCgkJCQl3aGlsZSAoIGVsZW0uZmlyc3RFbGVtZW50Q2hpbGQgKSB7CgkJCQkJZWxlbSA9IGVsZW0uZmlyc3RFbGVtZW50Q2hpbGQ7CgkJCQl9CgoJCQkJcmV0dXJuIGVsZW07CgkJCX0gKS5hcHBlbmQoIHRoaXMgKTsKCQl9CgoJCXJldHVybiB0aGlzOwoJfSwKCgl3cmFwSW5uZXI6IGZ1bmN0aW9uKCBodG1sICkgewoJCWlmICggaXNGdW5jdGlvbiggaHRtbCApICkgewoJCQlyZXR1cm4gdGhpcy5lYWNoKCBmdW5jdGlvbiggaSApIHsKCQkJCWpRdWVyeSggdGhpcyApLndyYXBJbm5lciggaHRtbC5jYWxsKCB0aGlzLCBpICkgKTsKCQkJfSApOwoJCX0KCgkJcmV0dXJuIHRoaXMuZWFjaCggZnVuY3Rpb24oKSB7CgkJCXZhciBzZWxmID0galF1ZXJ5KCB0aGlzICksCgkJCQljb250ZW50cyA9IHNlbGYuY29udGVudHMoKTsKCgkJCWlmICggY29udGVudHMubGVuZ3RoICkgewoJCQkJY29udGVudHMud3JhcEFsbCggaHRtbCApOwoKCQkJfSBlbHNlIHsKCQkJCXNlbGYuYXBwZW5kKCBodG1sICk7CgkJCX0KCQl9ICk7Cgl9LAoKCXdyYXA6IGZ1bmN0aW9uKCBodG1sICkgewoJCXZhciBodG1sSXNGdW5jdGlvbiA9IGlzRnVuY3Rpb24oIGh0bWwgKTsKCgkJcmV0dXJuIHRoaXMuZWFjaCggZnVuY3Rpb24oIGkgKSB7CgkJCWpRdWVyeSggdGhpcyApLndyYXBBbGwoIGh0bWxJc0Z1bmN0aW9uID8gaHRtbC5jYWxsKCB0aGlzLCBpICkgOiBodG1sICk7CgkJfSApOwoJfSwKCgl1bndyYXA6IGZ1bmN0aW9uKCBzZWxlY3RvciApIHsKCQl0aGlzLnBhcmVudCggc2VsZWN0b3IgKS5ub3QoICJib2R5IiApLmVhY2goIGZ1bmN0aW9uKCkgewoJCQlqUXVlcnkoIHRoaXMgKS5yZXBsYWNlV2l0aCggdGhpcy5jaGlsZE5vZGVzICk7CgkJfSApOwoJCXJldHVybiB0aGlzOwoJfQp9ICk7CgoKalF1ZXJ5LmV4cHIucHNldWRvcy5oaWRkZW4gPSBmdW5jdGlvbiggZWxlbSApIHsKCXJldHVybiAhalF1ZXJ5LmV4cHIucHNldWRvcy52aXNpYmxlKCBlbGVtICk7Cn07CmpRdWVyeS5leHByLnBzZXVkb3MudmlzaWJsZSA9IGZ1bmN0aW9uKCBlbGVtICkgewoJcmV0dXJuICEhKCBlbGVtLm9mZnNldFdpZHRoIHx8IGVsZW0ub2Zmc2V0SGVpZ2h0IHx8IGVsZW0uZ2V0Q2xpZW50UmVjdHMoKS5sZW5ndGggKTsKfTsKCgoKCmpRdWVyeS5hamF4U2V0dGluZ3MueGhyID0gZnVuY3Rpb24oKSB7Cgl0cnkgewoJCXJldHVybiBuZXcgd2luZG93LlhNTEh0dHBSZXF1ZXN0KCk7Cgl9IGNhdGNoICggZSApIHt9Cn07Cgp2YXIgeGhyU3VjY2Vzc1N0YXR1cyA9IHsKCgkJLy8gRmlsZSBwcm90b2NvbCBhbHdheXMgeWllbGRzIHN0YXR1cyBjb2RlIDAsIGFzc3VtZSAyMDAKCQkwOiAyMDAsCgoJCS8vIFN1cHBvcnQ6IElFIDw9OSBvbmx5CgkJLy8gdHJhYy0xNDUwOiBzb21ldGltZXMgSUUgcmV0dXJucyAxMjIzIHdoZW4gaXQgc2hvdWxkIGJlIDIwNAoJCTEyMjM6IDIwNAoJfSwKCXhoclN1cHBvcnRlZCA9IGpRdWVyeS5hamF4U2V0dGluZ3MueGhyKCk7CgpzdXBwb3J0LmNvcnMgPSAhIXhoclN1cHBvcnRlZCAmJiAoICJ3aXRoQ3JlZGVudGlhbHMiIGluIHhoclN1cHBvcnRlZCApOwpzdXBwb3J0LmFqYXggPSB4aHJTdXBwb3J0ZWQgPSAhIXhoclN1cHBvcnRlZDsKCmpRdWVyeS5hamF4VHJhbnNwb3J0KCBmdW5jdGlvbiggb3B0aW9ucyApIHsKCXZhciBjYWxsYmFjaywgZXJyb3JDYWxsYmFjazsKCgkvLyBDcm9zcyBkb21haW4gb25seSBhbGxvd2VkIGlmIHN1cHBvcnRlZCB0aHJvdWdoIFhNTEh0dHBSZXF1ZXN0CglpZiAoIHN1cHBvcnQuY29ycyB8fCB4aHJTdXBwb3J0ZWQgJiYgIW9wdGlvbnMuY3Jvc3NEb21haW4gKSB7CgkJcmV0dXJuIHsKCQkJc2VuZDogZnVuY3Rpb24oIGhlYWRlcnMsIGNvbXBsZXRlICkgewoJCQkJdmFyIGksCgkJCQkJeGhyID0gb3B0aW9ucy54aHIoKTsKCgkJCQl4aHIub3BlbigKCQkJCQlvcHRpb25zLnR5cGUsCgkJCQkJb3B0aW9ucy51cmwsCgkJCQkJb3B0aW9ucy5hc3luYywKCQkJCQlvcHRpb25zLnVzZXJuYW1lLAoJCQkJCW9wdGlvbnMucGFzc3dvcmQKCQkJCSk7CgoJCQkJLy8gQXBwbHkgY3VzdG9tIGZpZWxkcyBpZiBwcm92aWRlZAoJCQkJaWYgKCBvcHRpb25zLnhockZpZWxkcyApIHsKCQkJCQlmb3IgKCBpIGluIG9wdGlvbnMueGhyRmllbGRzICkgewoJCQkJCQl4aHJbIGkgXSA9IG9wdGlvbnMueGhyRmllbGRzWyBpIF07CgkJCQkJfQoJCQkJfQoKCQkJCS8vIE92ZXJyaWRlIG1pbWUgdHlwZSBpZiBuZWVkZWQKCQkJCWlmICggb3B0aW9ucy5taW1lVHlwZSAmJiB4aHIub3ZlcnJpZGVNaW1lVHlwZSApIHsKCQkJCQl4aHIub3ZlcnJpZGVNaW1lVHlwZSggb3B0aW9ucy5taW1lVHlwZSApOwoJCQkJfQoKCQkJCS8vIFgtUmVxdWVzdGVkLVdpdGggaGVhZGVyCgkJCQkvLyBGb3IgY3Jvc3MtZG9tYWluIHJlcXVlc3RzLCBzZWVpbmcgYXMgY29uZGl0aW9ucyBmb3IgYSBwcmVmbGlnaHQgYXJlCgkJCQkvLyBha2luIHRvIGEgamlnc2F3IHB1enpsZSwgd2Ugc2ltcGx5IG5ldmVyIHNldCBpdCB0byBiZSBzdXJlLgoJCQkJLy8gKGl0IGNhbiBhbHdheXMgYmUgc2V0IG9uIGEgcGVyLXJlcXVlc3QgYmFzaXMgb3IgZXZlbiB1c2luZyBhamF4U2V0dXApCgkJCQkvLyBGb3Igc2FtZS1kb21haW4gcmVxdWVzdHMsIHdvbid0IGNoYW5nZSBoZWFkZXIgaWYgYWxyZWFkeSBwcm92aWRlZC4KCQkJCWlmICggIW9wdGlvbnMuY3Jvc3NEb21haW4gJiYgIWhlYWRlcnNbICJYLVJlcXVlc3RlZC1XaXRoIiBdICkgewoJCQkJCWhlYWRlcnNbICJYLVJlcXVlc3RlZC1XaXRoIiBdID0gIlhNTEh0dHBSZXF1ZXN0IjsKCQkJCX0KCgkJCQkvLyBTZXQgaGVhZGVycwoJCQkJZm9yICggaSBpbiBoZWFkZXJzICkgewoJCQkJCXhoci5zZXRSZXF1ZXN0SGVhZGVyKCBpLCBoZWFkZXJzWyBpIF0gKTsKCQkJCX0KCgkJCQkvLyBDYWxsYmFjawoJCQkJY2FsbGJhY2sgPSBmdW5jdGlvbiggdHlwZSApIHsKCQkJCQlyZXR1cm4gZnVuY3Rpb24oKSB7CgkJCQkJCWlmICggY2FsbGJhY2sgKSB7CgkJCQkJCQljYWxsYmFjayA9IGVycm9yQ2FsbGJhY2sgPSB4aHIub25sb2FkID0KCQkJCQkJCQl4aHIub25lcnJvciA9IHhoci5vbmFib3J0ID0geGhyLm9udGltZW91dCA9CgkJCQkJCQkJCXhoci5vbnJlYWR5c3RhdGVjaGFuZ2UgPSBudWxsOwoKCQkJCQkJCWlmICggdHlwZSA9PT0gImFib3J0IiApIHsKCQkJCQkJCQl4aHIuYWJvcnQoKTsKCQkJCQkJCX0gZWxzZSBpZiAoIHR5cGUgPT09ICJlcnJvciIgKSB7CgoJCQkJCQkJCS8vIFN1cHBvcnQ6IElFIDw9OSBvbmx5CgkJCQkJCQkJLy8gT24gYSBtYW51YWwgbmF0aXZlIGFib3J0LCBJRTkgdGhyb3dzCgkJCQkJCQkJLy8gZXJyb3JzIG9uIGFueSBwcm9wZXJ0eSBhY2Nlc3MgdGhhdCBpcyBub3QgcmVhZHlTdGF0ZQoJCQkJCQkJCWlmICggdHlwZW9mIHhoci5zdGF0dXMgIT09ICJudW1iZXIiICkgewoJCQkJCQkJCQljb21wbGV0ZSggMCwgImVycm9yIiApOwoJCQkJCQkJCX0gZWxzZSB7CgkJCQkJCQkJCWNvbXBsZXRlKAoKCQkJCQkJCQkJCS8vIEZpbGU6IHByb3RvY29sIGFsd2F5cyB5aWVsZHMgc3RhdHVzIDA7IHNlZSB0cmFjLTg2MDUsIHRyYWMtMTQyMDcKCQkJCQkJCQkJCXhoci5zdGF0dXMsCgkJCQkJCQkJCQl4aHIuc3RhdHVzVGV4dAoJCQkJCQkJCQkpOwoJCQkJCQkJCX0KCQkJCQkJCX0gZWxzZSB7CgkJCQkJCQkJY29tcGxldGUoCgkJCQkJCQkJCXhoclN1Y2Nlc3NTdGF0dXNbIHhoci5zdGF0dXMgXSB8fCB4aHIuc3RhdHVzLAoJCQkJCQkJCQl4aHIuc3RhdHVzVGV4dCwKCgkJCQkJCQkJCS8vIFN1cHBvcnQ6IElFIDw9OSBvbmx5CgkJCQkJCQkJCS8vIElFOSBoYXMgbm8gWEhSMiBidXQgdGhyb3dzIG9uIGJpbmFyeSAodHJhYy0xMTQyNikKCQkJCQkJCQkJLy8gRm9yIFhIUjIgbm9uLXRleHQsIGxldCB0aGUgY2FsbGVyIGhhbmRsZSBpdCAoZ2gtMjQ5OCkKCQkJCQkJCQkJKCB4aHIucmVzcG9uc2VUeXBlIHx8ICJ0ZXh0IiApICE9PSAidGV4dCIgIHx8CgkJCQkJCQkJCXR5cGVvZiB4aHIucmVzcG9uc2VUZXh0ICE9PSAic3RyaW5nIiA/CgkJCQkJCQkJCQl7IGJpbmFyeTogeGhyLnJlc3BvbnNlIH0gOgoJCQkJCQkJCQkJeyB0ZXh0OiB4aHIucmVzcG9uc2VUZXh0IH0sCgkJCQkJCQkJCXhoci5nZXRBbGxSZXNwb25zZUhlYWRlcnMoKQoJCQkJCQkJCSk7CgkJCQkJCQl9CgkJCQkJCX0KCQkJCQl9OwoJCQkJfTsKCgkJCQkvLyBMaXN0ZW4gdG8gZXZlbnRzCgkJCQl4aHIub25sb2FkID0gY2FsbGJhY2soKTsKCQkJCWVycm9yQ2FsbGJhY2sgPSB4aHIub25lcnJvciA9IHhoci5vbnRpbWVvdXQgPSBjYWxsYmFjayggImVycm9yIiApOwoKCQkJCS8vIFN1cHBvcnQ6IElFIDkgb25seQoJCQkJLy8gVXNlIG9ucmVhZHlzdGF0ZWNoYW5nZSB0byByZXBsYWNlIG9uYWJvcnQKCQkJCS8vIHRvIGhhbmRsZSB1bmNhdWdodCBhYm9ydHMKCQkJCWlmICggeGhyLm9uYWJvcnQgIT09IHVuZGVmaW5lZCApIHsKCQkJCQl4aHIub25hYm9ydCA9IGVycm9yQ2FsbGJhY2s7CgkJCQl9IGVsc2UgewoJCQkJCXhoci5vbnJlYWR5c3RhdGVjaGFuZ2UgPSBmdW5jdGlvbigpIHsKCgkJCQkJCS8vIENoZWNrIHJlYWR5U3RhdGUgYmVmb3JlIHRpbWVvdXQgYXMgaXQgY2hhbmdlcwoJCQkJCQlpZiAoIHhoci5yZWFkeVN0YXRlID09PSA0ICkgewoKCQkJCQkJCS8vIEFsbG93IG9uZXJyb3IgdG8gYmUgY2FsbGVkIGZpcnN0LAoJCQkJCQkJLy8gYnV0IHRoYXQgd2lsbCBub3QgaGFuZGxlIGEgbmF0aXZlIGFib3J0CgkJCQkJCQkvLyBBbHNvLCBzYXZlIGVycm9yQ2FsbGJhY2sgdG8gYSB2YXJpYWJsZQoJCQkJCQkJLy8gYXMgeGhyLm9uZXJyb3IgY2Fubm90IGJlIGFjY2Vzc2VkCgkJCQkJCQl3aW5kb3cuc2V0VGltZW91dCggZnVuY3Rpb24oKSB7CgkJCQkJCQkJaWYgKCBjYWxsYmFjayApIHsKCQkJCQkJCQkJZXJyb3JDYWxsYmFjaygpOwoJCQkJCQkJCX0KCQkJCQkJCX0gKTsKCQkJCQkJfQoJCQkJCX07CgkJCQl9CgoJCQkJLy8gQ3JlYXRlIHRoZSBhYm9ydCBjYWxsYmFjawoJCQkJY2FsbGJhY2sgPSBjYWxsYmFjayggImFib3J0IiApOwoKCQkJCXRyeSB7CgoJCQkJCS8vIERvIHNlbmQgdGhlIHJlcXVlc3QgKHRoaXMgbWF5IHJhaXNlIGFuIGV4Y2VwdGlvbikKCQkJCQl4aHIuc2VuZCggb3B0aW9ucy5oYXNDb250ZW50ICYmIG9wdGlvbnMuZGF0YSB8fCBudWxsICk7CgkJCQl9IGNhdGNoICggZSApIHsKCgkJCQkJLy8gdHJhYy0xNDY4MzogT25seSByZXRocm93IGlmIHRoaXMgaGFzbid0IGJlZW4gbm90aWZpZWQgYXMgYW4gZXJyb3IgeWV0CgkJCQkJaWYgKCBjYWxsYmFjayApIHsKCQkJCQkJdGhyb3cgZTsKCQkJCQl9CgkJCQl9CgkJCX0sCgoJCQlhYm9ydDogZnVuY3Rpb24oKSB7CgkJCQlpZiAoIGNhbGxiYWNrICkgewoJCQkJCWNhbGxiYWNrKCk7CgkJCQl9CgkJCX0KCQl9OwoJfQp9ICk7CgoKCgovLyBQcmV2ZW50IGF1dG8tZXhlY3V0aW9uIG9mIHNjcmlwdHMgd2hlbiBubyBleHBsaWNpdCBkYXRhVHlwZSB3YXMgcHJvdmlkZWQgKFNlZSBnaC0yNDMyKQpqUXVlcnkuYWpheFByZWZpbHRlciggZnVuY3Rpb24oIHMgKSB7CglpZiAoIHMuY3Jvc3NEb21haW4gKSB7CgkJcy5jb250ZW50cy5zY3JpcHQgPSBmYWxzZTsKCX0KfSApOwoKLy8gSW5zdGFsbCBzY3JpcHQgZGF0YVR5cGUKalF1ZXJ5LmFqYXhTZXR1cCggewoJYWNjZXB0czogewoJCXNjcmlwdDogInRleHQvamF2YXNjcmlwdCwgYXBwbGljYXRpb24vamF2YXNjcmlwdCwgIiArCgkJCSJhcHBsaWNhdGlvbi9lY21hc2NyaXB0LCBhcHBsaWNhdGlvbi94LWVjbWFzY3JpcHQiCgl9LAoJY29udGVudHM6IHsKCQlzY3JpcHQ6IC9cYig/OmphdmF8ZWNtYSlzY3JpcHRcYi8KCX0sCgljb252ZXJ0ZXJzOiB7CgkJInRleHQgc2NyaXB0IjogZnVuY3Rpb24oIHRleHQgKSB7CgkJCWpRdWVyeS5nbG9iYWxFdmFsKCB0ZXh0ICk7CgkJCXJldHVybiB0ZXh0OwoJCX0KCX0KfSApOwoKLy8gSGFuZGxlIGNhY2hlJ3Mgc3BlY2lhbCBjYXNlIGFuZCBjcm9zc0RvbWFpbgpqUXVlcnkuYWpheFByZWZpbHRlciggInNjcmlwdCIsIGZ1bmN0aW9uKCBzICkgewoJaWYgKCBzLmNhY2hlID09PSB1bmRlZmluZWQgKSB7CgkJcy5jYWNoZSA9IGZhbHNlOwoJfQoJaWYgKCBzLmNyb3NzRG9tYWluICkgewoJCXMudHlwZSA9ICJHRVQiOwoJfQp9ICk7CgovLyBCaW5kIHNjcmlwdCB0YWcgaGFjayB0cmFuc3BvcnQKalF1ZXJ5LmFqYXhUcmFuc3BvcnQoICJzY3JpcHQiLCBmdW5jdGlvbiggcyApIHsKCgkvLyBUaGlzIHRyYW5zcG9ydCBvbmx5IGRlYWxzIHdpdGggY3Jvc3MgZG9tYWluIG9yIGZvcmNlZC1ieS1hdHRycyByZXF1ZXN0cwoJaWYgKCBzLmNyb3NzRG9tYWluIHx8IHMuc2NyaXB0QXR0cnMgKSB7CgkJdmFyIHNjcmlwdCwgY2FsbGJhY2s7CgkJcmV0dXJuIHsKCQkJc2VuZDogZnVuY3Rpb24oIF8sIGNvbXBsZXRlICkgewoJCQkJc2NyaXB0ID0galF1ZXJ5KCAiPHNjcmlwdD4iICkKCQkJCQkuYXR0ciggcy5zY3JpcHRBdHRycyB8fCB7fSApCgkJCQkJLnByb3AoIHsgY2hhcnNldDogcy5zY3JpcHRDaGFyc2V0LCBzcmM6IHMudXJsIH0gKQoJCQkJCS5vbiggImxvYWQgZXJyb3IiLCBjYWxsYmFjayA9IGZ1bmN0aW9uKCBldnQgKSB7CgkJCQkJCXNjcmlwdC5yZW1vdmUoKTsKCQkJCQkJY2FsbGJhY2sgPSBudWxsOwoJCQkJCQlpZiAoIGV2dCApIHsKCQkJCQkJCWNvbXBsZXRlKCBldnQudHlwZSA9PT0gImVycm9yIiA/IDQwNCA6IDIwMCwgZXZ0LnR5cGUgKTsKCQkJCQkJfQoJCQkJCX0gKTsKCgkJCQkvLyBVc2UgbmF0aXZlIERPTSBtYW5pcHVsYXRpb24gdG8gYXZvaWQgb3VyIGRvbU1hbmlwIEFKQVggdHJpY2tlcnkKCQkJCWRvY3VtZW50LmhlYWQuYXBwZW5kQ2hpbGQoIHNjcmlwdFsgMCBdICk7CgkJCX0sCgkJCWFib3J0OiBmdW5jdGlvbigpIHsKCQkJCWlmICggY2FsbGJhY2sgKSB7CgkJCQkJY2FsbGJhY2soKTsKCQkJCX0KCQkJfQoJCX07Cgl9Cn0gKTsKCgoKCnZhciBvbGRDYWxsYmFja3MgPSBbXSwKCXJqc29ucCA9IC8oPSlcPyg/PSZ8JCl8XD9cPy87CgovLyBEZWZhdWx0IGpzb25wIHNldHRpbmdzCmpRdWVyeS5hamF4U2V0dXAoIHsKCWpzb25wOiAiY2FsbGJhY2siLAoJanNvbnBDYWxsYmFjazogZnVuY3Rpb24oKSB7CgkJdmFyIGNhbGxiYWNrID0gb2xkQ2FsbGJhY2tzLnBvcCgpIHx8ICggalF1ZXJ5LmV4cGFuZG8gKyAiXyIgKyAoIG5vbmNlLmd1aWQrKyApICk7CgkJdGhpc1sgY2FsbGJhY2sgXSA9IHRydWU7CgkJcmV0dXJuIGNhbGxiYWNrOwoJfQp9ICk7CgovLyBEZXRlY3QsIG5vcm1hbGl6ZSBvcHRpb25zIGFuZCBpbnN0YWxsIGNhbGxiYWNrcyBmb3IganNvbnAgcmVxdWVzdHMKalF1ZXJ5LmFqYXhQcmVmaWx0ZXIoICJqc29uIGpzb25wIiwgZnVuY3Rpb24oIHMsIG9yaWdpbmFsU2V0dGluZ3MsIGpxWEhSICkgewoKCXZhciBjYWxsYmFja05hbWUsIG92ZXJ3cml0dGVuLCByZXNwb25zZUNvbnRhaW5lciwKCQlqc29uUHJvcCA9IHMuanNvbnAgIT09IGZhbHNlICYmICggcmpzb25wLnRlc3QoIHMudXJsICkgPwoJCQkidXJsIiA6CgkJCXR5cGVvZiBzLmRhdGEgPT09ICJzdHJpbmciICYmCgkJCQkoIHMuY29udGVudFR5cGUgfHwgIiIgKQoJCQkJCS5pbmRleE9mKCAiYXBwbGljYXRpb24veC13d3ctZm9ybS11cmxlbmNvZGVkIiApID09PSAwICYmCgkJCQlyanNvbnAudGVzdCggcy5kYXRhICkgJiYgImRhdGEiCgkJKTsKCgkvLyBIYW5kbGUgaWZmIHRoZSBleHBlY3RlZCBkYXRhIHR5cGUgaXMgImpzb25wIiBvciB3ZSBoYXZlIGEgcGFyYW1ldGVyIHRvIHNldAoJaWYgKCBqc29uUHJvcCB8fCBzLmRhdGFUeXBlc1sgMCBdID09PSAianNvbnAiICkgewoKCQkvLyBHZXQgY2FsbGJhY2sgbmFtZSwgcmVtZW1iZXJpbmcgcHJlZXhpc3RpbmcgdmFsdWUgYXNzb2NpYXRlZCB3aXRoIGl0CgkJY2FsbGJhY2tOYW1lID0gcy5qc29ucENhbGxiYWNrID0gaXNGdW5jdGlvbiggcy5qc29ucENhbGxiYWNrICkgPwoJCQlzLmpzb25wQ2FsbGJhY2soKSA6CgkJCXMuanNvbnBDYWxsYmFjazsKCgkJLy8gSW5zZXJ0IGNhbGxiYWNrIGludG8gdXJsIG9yIGZvcm0gZGF0YQoJCWlmICgganNvblByb3AgKSB7CgkJCXNbIGpzb25Qcm9wIF0gPSBzWyBqc29uUHJvcCBdLnJlcGxhY2UoIHJqc29ucCwgIiQxIiArIGNhbGxiYWNrTmFtZSApOwoJCX0gZWxzZSBpZiAoIHMuanNvbnAgIT09IGZhbHNlICkgewoJCQlzLnVybCArPSAoIHJxdWVyeS50ZXN0KCBzLnVybCApID8gIiYiIDogIj8iICkgKyBzLmpzb25wICsgIj0iICsgY2FsbGJhY2tOYW1lOwoJCX0KCgkJLy8gVXNlIGRhdGEgY29udmVydGVyIHRvIHJldHJpZXZlIGpzb24gYWZ0ZXIgc2NyaXB0IGV4ZWN1dGlvbgoJCXMuY29udmVydGVyc1sgInNjcmlwdCBqc29uIiBdID0gZnVuY3Rpb24oKSB7CgkJCWlmICggIXJlc3BvbnNlQ29udGFpbmVyICkgewoJCQkJalF1ZXJ5LmVycm9yKCBjYWxsYmFja05hbWUgKyAiIHdhcyBub3QgY2FsbGVkIiApOwoJCQl9CgkJCXJldHVybiByZXNwb25zZUNvbnRhaW5lclsgMCBdOwoJCX07CgoJCS8vIEZvcmNlIGpzb24gZGF0YVR5cGUKCQlzLmRhdGFUeXBlc1sgMCBdID0gImpzb24iOwoKCQkvLyBJbnN0YWxsIGNhbGxiYWNrCgkJb3ZlcndyaXR0ZW4gPSB3aW5kb3dbIGNhbGxiYWNrTmFtZSBdOwoJCXdpbmRvd1sgY2FsbGJhY2tOYW1lIF0gPSBmdW5jdGlvbigpIHsKCQkJcmVzcG9uc2VDb250YWluZXIgPSBhcmd1bWVudHM7CgkJfTsKCgkJLy8gQ2xlYW4tdXAgZnVuY3Rpb24gKGZpcmVzIGFmdGVyIGNvbnZlcnRlcnMpCgkJanFYSFIuYWx3YXlzKCBmdW5jdGlvbigpIHsKCgkJCS8vIElmIHByZXZpb3VzIHZhbHVlIGRpZG4ndCBleGlzdCAtIHJlbW92ZSBpdAoJCQlpZiAoIG92ZXJ3cml0dGVuID09PSB1bmRlZmluZWQgKSB7CgkJCQlqUXVlcnkoIHdpbmRvdyApLnJlbW92ZVByb3AoIGNhbGxiYWNrTmFtZSApOwoKCQkJLy8gT3RoZXJ3aXNlIHJlc3RvcmUgcHJlZXhpc3RpbmcgdmFsdWUKCQkJfSBlbHNlIHsKCQkJCXdpbmRvd1sgY2FsbGJhY2tOYW1lIF0gPSBvdmVyd3JpdHRlbjsKCQkJfQoKCQkJLy8gU2F2ZSBiYWNrIGFzIGZyZWUKCQkJaWYgKCBzWyBjYWxsYmFja05hbWUgXSApIHsKCgkJCQkvLyBNYWtlIHN1cmUgdGhhdCByZS11c2luZyB0aGUgb3B0aW9ucyBkb2Vzbid0IHNjcmV3IHRoaW5ncyBhcm91bmQKCQkJCXMuanNvbnBDYWxsYmFjayA9IG9yaWdpbmFsU2V0dGluZ3MuanNvbnBDYWxsYmFjazsKCgkJCQkvLyBTYXZlIHRoZSBjYWxsYmFjayBuYW1lIGZvciBmdXR1cmUgdXNlCgkJCQlvbGRDYWxsYmFja3MucHVzaCggY2FsbGJhY2tOYW1lICk7CgkJCX0KCgkJCS8vIENhbGwgaWYgaXQgd2FzIGEgZnVuY3Rpb24gYW5kIHdlIGhhdmUgYSByZXNwb25zZQoJCQlpZiAoIHJlc3BvbnNlQ29udGFpbmVyICYmIGlzRnVuY3Rpb24oIG92ZXJ3cml0dGVuICkgKSB7CgkJCQlvdmVyd3JpdHRlbiggcmVzcG9uc2VDb250YWluZXJbIDAgXSApOwoJCQl9CgoJCQlyZXNwb25zZUNvbnRhaW5lciA9IG92ZXJ3cml0dGVuID0gdW5kZWZpbmVkOwoJCX0gKTsKCgkJLy8gRGVsZWdhdGUgdG8gc2NyaXB0CgkJcmV0dXJuICJzY3JpcHQiOwoJfQp9ICk7CgoKCgovLyBTdXBwb3J0OiBTYWZhcmkgOCBvbmx5Ci8vIEluIFNhZmFyaSA4IGRvY3VtZW50cyBjcmVhdGVkIHZpYSBkb2N1bWVudC5pbXBsZW1lbnRhdGlvbi5jcmVhdGVIVE1MRG9jdW1lbnQKLy8gY29sbGFwc2Ugc2libGluZyBmb3JtczogdGhlIHNlY29uZCBvbmUgYmVjb21lcyBhIGNoaWxkIG9mIHRoZSBmaXJzdCBvbmUuCi8vIEJlY2F1c2Ugb2YgdGhhdCwgdGhpcyBzZWN1cml0eSBtZWFzdXJlIGhhcyB0byBiZSBkaXNhYmxlZCBpbiBTYWZhcmkgOC4KLy8gaHR0cHM6Ly9idWdzLndlYmtpdC5vcmcvc2hvd19idWcuY2dpP2lkPTEzNzMzNwpzdXBwb3J0LmNyZWF0ZUhUTUxEb2N1bWVudCA9ICggZnVuY3Rpb24oKSB7Cgl2YXIgYm9keSA9IGRvY3VtZW50LmltcGxlbWVudGF0aW9uLmNyZWF0ZUhUTUxEb2N1bWVudCggIiIgKS5ib2R5OwoJYm9keS5pbm5lckhUTUwgPSAiPGZvcm0+PC9mb3JtPjxmb3JtPjwvZm9ybT4iOwoJcmV0dXJuIGJvZHkuY2hpbGROb2Rlcy5sZW5ndGggPT09IDI7Cn0gKSgpOwoKCi8vIEFyZ3VtZW50ICJkYXRhIiBzaG91bGQgYmUgc3RyaW5nIG9mIGh0bWwKLy8gY29udGV4dCAob3B0aW9uYWwpOiBJZiBzcGVjaWZpZWQsIHRoZSBmcmFnbWVudCB3aWxsIGJlIGNyZWF0ZWQgaW4gdGhpcyBjb250ZXh0LAovLyBkZWZhdWx0cyB0byBkb2N1bWVudAovLyBrZWVwU2NyaXB0cyAob3B0aW9uYWwpOiBJZiB0cnVlLCB3aWxsIGluY2x1ZGUgc2NyaXB0cyBwYXNzZWQgaW4gdGhlIGh0bWwgc3RyaW5nCmpRdWVyeS5wYXJzZUhUTUwgPSBmdW5jdGlvbiggZGF0YSwgY29udGV4dCwga2VlcFNjcmlwdHMgKSB7CglpZiAoIHR5cGVvZiBkYXRhICE9PSAic3RyaW5nIiApIHsKCQlyZXR1cm4gW107Cgl9CglpZiAoIHR5cGVvZiBjb250ZXh0ID09PSAiYm9vbGVhbiIgKSB7CgkJa2VlcFNjcmlwdHMgPSBjb250ZXh0OwoJCWNvbnRleHQgPSBmYWxzZTsKCX0KCgl2YXIgYmFzZSwgcGFyc2VkLCBzY3JpcHRzOwoKCWlmICggIWNvbnRleHQgKSB7CgoJCS8vIFN0b3Agc2NyaXB0cyBvciBpbmxpbmUgZXZlbnQgaGFuZGxlcnMgZnJvbSBiZWluZyBleGVjdXRlZCBpbW1lZGlhdGVseQoJCS8vIGJ5IHVzaW5nIGRvY3VtZW50LmltcGxlbWVudGF0aW9uCgkJaWYgKCBzdXBwb3J0LmNyZWF0ZUhUTUxEb2N1bWVudCApIHsKCQkJY29udGV4dCA9IGRvY3VtZW50LmltcGxlbWVudGF0aW9uLmNyZWF0ZUhUTUxEb2N1bWVudCggIiIgKTsKCgkJCS8vIFNldCB0aGUgYmFzZSBocmVmIGZvciB0aGUgY3JlYXRlZCBkb2N1bWVudAoJCQkvLyBzbyBhbnkgcGFyc2VkIGVsZW1lbnRzIHdpdGggVVJMcwoJCQkvLyBhcmUgYmFzZWQgb24gdGhlIGRvY3VtZW50J3MgVVJMIChnaC0yOTY1KQoJCQliYXNlID0gY29udGV4dC5jcmVhdGVFbGVtZW50KCAiYmFzZSIgKTsKCQkJYmFzZS5ocmVmID0gZG9jdW1lbnQubG9jYXRpb24uaHJlZjsKCQkJY29udGV4dC5oZWFkLmFwcGVuZENoaWxkKCBiYXNlICk7CgkJfSBlbHNlIHsKCQkJY29udGV4dCA9IGRvY3VtZW50OwoJCX0KCX0KCglwYXJzZWQgPSByc2luZ2xlVGFnLmV4ZWMoIGRhdGEgKTsKCXNjcmlwdHMgPSAha2VlcFNjcmlwdHMgJiYgW107CgoJLy8gU2luZ2xlIHRhZwoJaWYgKCBwYXJzZWQgKSB7CgkJcmV0dXJuIFsgY29udGV4dC5jcmVhdGVFbGVtZW50KCBwYXJzZWRbIDEgXSApIF07Cgl9CgoJcGFyc2VkID0gYnVpbGRGcmFnbWVudCggWyBkYXRhIF0sIGNvbnRleHQsIHNjcmlwdHMgKTsKCglpZiAoIHNjcmlwdHMgJiYgc2NyaXB0cy5sZW5ndGggKSB7CgkJalF1ZXJ5KCBzY3JpcHRzICkucmVtb3ZlKCk7Cgl9CgoJcmV0dXJuIGpRdWVyeS5tZXJnZSggW10sIHBhcnNlZC5jaGlsZE5vZGVzICk7Cn07CgoKLyoqCiAqIExvYWQgYSB1cmwgaW50byBhIHBhZ2UKICovCmpRdWVyeS5mbi5sb2FkID0gZnVuY3Rpb24oIHVybCwgcGFyYW1zLCBjYWxsYmFjayApIHsKCXZhciBzZWxlY3RvciwgdHlwZSwgcmVzcG9uc2UsCgkJc2VsZiA9IHRoaXMsCgkJb2ZmID0gdXJsLmluZGV4T2YoICIgIiApOwoKCWlmICggb2ZmID4gLTEgKSB7CgkJc2VsZWN0b3IgPSBzdHJpcEFuZENvbGxhcHNlKCB1cmwuc2xpY2UoIG9mZiApICk7CgkJdXJsID0gdXJsLnNsaWNlKCAwLCBvZmYgKTsKCX0KCgkvLyBJZiBpdCdzIGEgZnVuY3Rpb24KCWlmICggaXNGdW5jdGlvbiggcGFyYW1zICkgKSB7CgoJCS8vIFdlIGFzc3VtZSB0aGF0IGl0J3MgdGhlIGNhbGxiYWNrCgkJY2FsbGJhY2sgPSBwYXJhbXM7CgkJcGFyYW1zID0gdW5kZWZpbmVkOwoKCS8vIE90aGVyd2lzZSwgYnVpbGQgYSBwYXJhbSBzdHJpbmcKCX0gZWxzZSBpZiAoIHBhcmFtcyAmJiB0eXBlb2YgcGFyYW1zID09PSAib2JqZWN0IiApIHsKCQl0eXBlID0gIlBPU1QiOwoJfQoKCS8vIElmIHdlIGhhdmUgZWxlbWVudHMgdG8gbW9kaWZ5LCBtYWtlIHRoZSByZXF1ZXN0CglpZiAoIHNlbGYubGVuZ3RoID4gMCApIHsKCQlqUXVlcnkuYWpheCggewoJCQl1cmw6IHVybCwKCgkJCS8vIElmICJ0eXBlIiB2YXJpYWJsZSBpcyB1bmRlZmluZWQsIHRoZW4gIkdFVCIgbWV0aG9kIHdpbGwgYmUgdXNlZC4KCQkJLy8gTWFrZSB2YWx1ZSBvZiB0aGlzIGZpZWxkIGV4cGxpY2l0IHNpbmNlCgkJCS8vIHVzZXIgY2FuIG92ZXJyaWRlIGl0IHRocm91Z2ggYWpheFNldHVwIG1ldGhvZAoJCQl0eXBlOiB0eXBlIHx8ICJHRVQiLAoJCQlkYXRhVHlwZTogImh0bWwiLAoJCQlkYXRhOiBwYXJhbXMKCQl9ICkuZG9uZSggZnVuY3Rpb24oIHJlc3BvbnNlVGV4dCApIHsKCgkJCS8vIFNhdmUgcmVzcG9uc2UgZm9yIHVzZSBpbiBjb21wbGV0ZSBjYWxsYmFjawoJCQlyZXNwb25zZSA9IGFyZ3VtZW50czsKCgkJCXNlbGYuaHRtbCggc2VsZWN0b3IgPwoKCQkJCS8vIElmIGEgc2VsZWN0b3Igd2FzIHNwZWNpZmllZCwgbG9jYXRlIHRoZSByaWdodCBlbGVtZW50cyBpbiBhIGR1bW15IGRpdgoJCQkJLy8gRXhjbHVkZSBzY3JpcHRzIHRvIGF2b2lkIElFICdQZXJtaXNzaW9uIERlbmllZCcgZXJyb3JzCgkJCQlqUXVlcnkoICI8ZGl2PiIgKS5hcHBlbmQoIGpRdWVyeS5wYXJzZUhUTUwoIHJlc3BvbnNlVGV4dCApICkuZmluZCggc2VsZWN0b3IgKSA6CgoJCQkJLy8gT3RoZXJ3aXNlIHVzZSB0aGUgZnVsbCByZXN1bHQKCQkJCXJlc3BvbnNlVGV4dCApOwoKCQkvLyBJZiB0aGUgcmVxdWVzdCBzdWNjZWVkcywgdGhpcyBmdW5jdGlvbiBnZXRzICJkYXRhIiwgInN0YXR1cyIsICJqcVhIUiIKCQkvLyBidXQgdGhleSBhcmUgaWdub3JlZCBiZWNhdXNlIHJlc3BvbnNlIHdhcyBzZXQgYWJvdmUuCgkJLy8gSWYgaXQgZmFpbHMsIHRoaXMgZnVuY3Rpb24gZ2V0cyAianFYSFIiLCAic3RhdHVzIiwgImVycm9yIgoJCX0gKS5hbHdheXMoIGNhbGxiYWNrICYmIGZ1bmN0aW9uKCBqcVhIUiwgc3RhdHVzICkgewoJCQlzZWxmLmVhY2goIGZ1bmN0aW9uKCkgewoJCQkJY2FsbGJhY2suYXBwbHkoIHRoaXMsIHJlc3BvbnNlIHx8IFsganFYSFIucmVzcG9uc2VUZXh0LCBzdGF0dXMsIGpxWEhSIF0gKTsKCQkJfSApOwoJCX0gKTsKCX0KCglyZXR1cm4gdGhpczsKfTsKCgoKCmpRdWVyeS5leHByLnBzZXVkb3MuYW5pbWF0ZWQgPSBmdW5jdGlvbiggZWxlbSApIHsKCXJldHVybiBqUXVlcnkuZ3JlcCggalF1ZXJ5LnRpbWVycywgZnVuY3Rpb24oIGZuICkgewoJCXJldHVybiBlbGVtID09PSBmbi5lbGVtOwoJfSApLmxlbmd0aDsKfTsKCgoKCmpRdWVyeS5vZmZzZXQgPSB7CglzZXRPZmZzZXQ6IGZ1bmN0aW9uKCBlbGVtLCBvcHRpb25zLCBpICkgewoJCXZhciBjdXJQb3NpdGlvbiwgY3VyTGVmdCwgY3VyQ1NTVG9wLCBjdXJUb3AsIGN1ck9mZnNldCwgY3VyQ1NTTGVmdCwgY2FsY3VsYXRlUG9zaXRpb24sCgkJCXBvc2l0aW9uID0galF1ZXJ5LmNzcyggZWxlbSwgInBvc2l0aW9uIiApLAoJCQljdXJFbGVtID0galF1ZXJ5KCBlbGVtICksCgkJCXByb3BzID0ge307CgoJCS8vIFNldCBwb3NpdGlvbiBmaXJzdCwgaW4tY2FzZSB0b3AvbGVmdCBhcmUgc2V0IGV2ZW4gb24gc3RhdGljIGVsZW0KCQlpZiAoIHBvc2l0aW9uID09PSAic3RhdGljIiApIHsKCQkJZWxlbS5zdHlsZS5wb3NpdGlvbiA9ICJyZWxhdGl2ZSI7CgkJfQoKCQljdXJPZmZzZXQgPSBjdXJFbGVtLm9mZnNldCgpOwoJCWN1ckNTU1RvcCA9IGpRdWVyeS5jc3MoIGVsZW0sICJ0b3AiICk7CgkJY3VyQ1NTTGVmdCA9IGpRdWVyeS5jc3MoIGVsZW0sICJsZWZ0IiApOwoJCWNhbGN1bGF0ZVBvc2l0aW9uID0gKCBwb3NpdGlvbiA9PT0gImFic29sdXRlIiB8fCBwb3NpdGlvbiA9PT0gImZpeGVkIiApICYmCgkJCSggY3VyQ1NTVG9wICsgY3VyQ1NTTGVmdCApLmluZGV4T2YoICJhdXRvIiApID4gLTE7CgoJCS8vIE5lZWQgdG8gYmUgYWJsZSB0byBjYWxjdWxhdGUgcG9zaXRpb24gaWYgZWl0aGVyCgkJLy8gdG9wIG9yIGxlZnQgaXMgYXV0byBhbmQgcG9zaXRpb24gaXMgZWl0aGVyIGFic29sdXRlIG9yIGZpeGVkCgkJaWYgKCBjYWxjdWxhdGVQb3NpdGlvbiApIHsKCQkJY3VyUG9zaXRpb24gPSBjdXJFbGVtLnBvc2l0aW9uKCk7CgkJCWN1clRvcCA9IGN1clBvc2l0aW9uLnRvcDsKCQkJY3VyTGVmdCA9IGN1clBvc2l0aW9uLmxlZnQ7CgoJCX0gZWxzZSB7CgkJCWN1clRvcCA9IHBhcnNlRmxvYXQoIGN1ckNTU1RvcCApIHx8IDA7CgkJCWN1ckxlZnQgPSBwYXJzZUZsb2F0KCBjdXJDU1NMZWZ0ICkgfHwgMDsKCQl9CgoJCWlmICggaXNGdW5jdGlvbiggb3B0aW9ucyApICkgewoKCQkJLy8gVXNlIGpRdWVyeS5leHRlbmQgaGVyZSB0byBhbGxvdyBtb2RpZmljYXRpb24gb2YgY29vcmRpbmF0ZXMgYXJndW1lbnQgKGdoLTE4NDgpCgkJCW9wdGlvbnMgPSBvcHRpb25zLmNhbGwoIGVsZW0sIGksIGpRdWVyeS5leHRlbmQoIHt9LCBjdXJPZmZzZXQgKSApOwoJCX0KCgkJaWYgKCBvcHRpb25zLnRvcCAhPSBudWxsICkgewoJCQlwcm9wcy50b3AgPSAoIG9wdGlvbnMudG9wIC0gY3VyT2Zmc2V0LnRvcCApICsgY3VyVG9wOwoJCX0KCQlpZiAoIG9wdGlvbnMubGVmdCAhPSBudWxsICkgewoJCQlwcm9wcy5sZWZ0ID0gKCBvcHRpb25zLmxlZnQgLSBjdXJPZmZzZXQubGVmdCApICsgY3VyTGVmdDsKCQl9CgoJCWlmICggInVzaW5nIiBpbiBvcHRpb25zICkgewoJCQlvcHRpb25zLnVzaW5nLmNhbGwoIGVsZW0sIHByb3BzICk7CgoJCX0gZWxzZSB7CgkJCWN1ckVsZW0uY3NzKCBwcm9wcyApOwoJCX0KCX0KfTsKCmpRdWVyeS5mbi5leHRlbmQoIHsKCgkvLyBvZmZzZXQoKSByZWxhdGVzIGFuIGVsZW1lbnQncyBib3JkZXIgYm94IHRvIHRoZSBkb2N1bWVudCBvcmlnaW4KCW9mZnNldDogZnVuY3Rpb24oIG9wdGlvbnMgKSB7CgoJCS8vIFByZXNlcnZlIGNoYWluaW5nIGZvciBzZXR0ZXIKCQlpZiAoIGFyZ3VtZW50cy5sZW5ndGggKSB7CgkJCXJldHVybiBvcHRpb25zID09PSB1bmRlZmluZWQgPwoJCQkJdGhpcyA6CgkJCQl0aGlzLmVhY2goIGZ1bmN0aW9uKCBpICkgewoJCQkJCWpRdWVyeS5vZmZzZXQuc2V0T2Zmc2V0KCB0aGlzLCBvcHRpb25zLCBpICk7CgkJCQl9ICk7CgkJfQoKCQl2YXIgcmVjdCwgd2luLAoJCQllbGVtID0gdGhpc1sgMCBdOwoKCQlpZiAoICFlbGVtICkgewoJCQlyZXR1cm47CgkJfQoKCQkvLyBSZXR1cm4gemVyb3MgZm9yIGRpc2Nvbm5lY3RlZCBhbmQgaGlkZGVuIChkaXNwbGF5OiBub25lKSBlbGVtZW50cyAoZ2gtMjMxMCkKCQkvLyBTdXBwb3J0OiBJRSA8PTExIG9ubHkKCQkvLyBSdW5uaW5nIGdldEJvdW5kaW5nQ2xpZW50UmVjdCBvbiBhCgkJLy8gZGlzY29ubmVjdGVkIG5vZGUgaW4gSUUgdGhyb3dzIGFuIGVycm9yCgkJaWYgKCAhZWxlbS5nZXRDbGllbnRSZWN0cygpLmxlbmd0aCApIHsKCQkJcmV0dXJuIHsgdG9wOiAwLCBsZWZ0OiAwIH07CgkJfQoKCQkvLyBHZXQgZG9jdW1lbnQtcmVsYXRpdmUgcG9zaXRpb24gYnkgYWRkaW5nIHZpZXdwb3J0IHNjcm9sbCB0byB2aWV3cG9ydC1yZWxhdGl2ZSBnQkNSCgkJcmVjdCA9IGVsZW0uZ2V0Qm91bmRpbmdDbGllbnRSZWN0KCk7CgkJd2luID0gZWxlbS5vd25lckRvY3VtZW50LmRlZmF1bHRWaWV3OwoJCXJldHVybiB7CgkJCXRvcDogcmVjdC50b3AgKyB3aW4ucGFnZVlPZmZzZXQsCgkJCWxlZnQ6IHJlY3QubGVmdCArIHdpbi5wYWdlWE9mZnNldAoJCX07Cgl9LAoKCS8vIHBvc2l0aW9uKCkgcmVsYXRlcyBhbiBlbGVtZW50J3MgbWFyZ2luIGJveCB0byBpdHMgb2Zmc2V0IHBhcmVudCdzIHBhZGRpbmcgYm94CgkvLyBUaGlzIGNvcnJlc3BvbmRzIHRvIHRoZSBiZWhhdmlvciBvZiBDU1MgYWJzb2x1dGUgcG9zaXRpb25pbmcKCXBvc2l0aW9uOiBmdW5jdGlvbigpIHsKCQlpZiAoICF0aGlzWyAwIF0gKSB7CgkJCXJldHVybjsKCQl9CgoJCXZhciBvZmZzZXRQYXJlbnQsIG9mZnNldCwgZG9jLAoJCQllbGVtID0gdGhpc1sgMCBdLAoJCQlwYXJlbnRPZmZzZXQgPSB7IHRvcDogMCwgbGVmdDogMCB9OwoKCQkvLyBwb3NpdGlvbjpmaXhlZCBlbGVtZW50cyBhcmUgb2Zmc2V0IGZyb20gdGhlIHZpZXdwb3J0LCB3aGljaCBpdHNlbGYgYWx3YXlzIGhhcyB6ZXJvIG9mZnNldAoJCWlmICggalF1ZXJ5LmNzcyggZWxlbSwgInBvc2l0aW9uIiApID09PSAiZml4ZWQiICkgewoKCQkJLy8gQXNzdW1lIHBvc2l0aW9uOmZpeGVkIGltcGxpZXMgYXZhaWxhYmlsaXR5IG9mIGdldEJvdW5kaW5nQ2xpZW50UmVjdAoJCQlvZmZzZXQgPSBlbGVtLmdldEJvdW5kaW5nQ2xpZW50UmVjdCgpOwoKCQl9IGVsc2UgewoJCQlvZmZzZXQgPSB0aGlzLm9mZnNldCgpOwoKCQkJLy8gQWNjb3VudCBmb3IgdGhlICpyZWFsKiBvZmZzZXQgcGFyZW50LCB3aGljaCBjYW4gYmUgdGhlIGRvY3VtZW50IG9yIGl0cyByb290IGVsZW1lbnQKCQkJLy8gd2hlbiBhIHN0YXRpY2FsbHkgcG9zaXRpb25lZCBlbGVtZW50IGlzIGlkZW50aWZpZWQKCQkJZG9jID0gZWxlbS5vd25lckRvY3VtZW50OwoJCQlvZmZzZXRQYXJlbnQgPSBlbGVtLm9mZnNldFBhcmVudCB8fCBkb2MuZG9jdW1lbnRFbGVtZW50OwoJCQl3aGlsZSAoIG9mZnNldFBhcmVudCAmJgoJCQkJKCBvZmZzZXRQYXJlbnQgPT09IGRvYy5ib2R5IHx8IG9mZnNldFBhcmVudCA9PT0gZG9jLmRvY3VtZW50RWxlbWVudCApICYmCgkJCQlqUXVlcnkuY3NzKCBvZmZzZXRQYXJlbnQsICJwb3NpdGlvbiIgKSA9PT0gInN0YXRpYyIgKSB7CgoJCQkJb2Zmc2V0UGFyZW50ID0gb2Zmc2V0UGFyZW50LnBhcmVudE5vZGU7CgkJCX0KCQkJaWYgKCBvZmZzZXRQYXJlbnQgJiYgb2Zmc2V0UGFyZW50ICE9PSBlbGVtICYmIG9mZnNldFBhcmVudC5ub2RlVHlwZSA9PT0gMSApIHsKCgkJCQkvLyBJbmNvcnBvcmF0ZSBib3JkZXJzIGludG8gaXRzIG9mZnNldCwgc2luY2UgdGhleSBhcmUgb3V0c2lkZSBpdHMgY29udGVudCBvcmlnaW4KCQkJCXBhcmVudE9mZnNldCA9IGpRdWVyeSggb2Zmc2V0UGFyZW50ICkub2Zmc2V0KCk7CgkJCQlwYXJlbnRPZmZzZXQudG9wICs9IGpRdWVyeS5jc3MoIG9mZnNldFBhcmVudCwgImJvcmRlclRvcFdpZHRoIiwgdHJ1ZSApOwoJCQkJcGFyZW50T2Zmc2V0LmxlZnQgKz0galF1ZXJ5LmNzcyggb2Zmc2V0UGFyZW50LCAiYm9yZGVyTGVmdFdpZHRoIiwgdHJ1ZSApOwoJCQl9CgkJfQoKCQkvLyBTdWJ0cmFjdCBwYXJlbnQgb2Zmc2V0cyBhbmQgZWxlbWVudCBtYXJnaW5zCgkJcmV0dXJuIHsKCQkJdG9wOiBvZmZzZXQudG9wIC0gcGFyZW50T2Zmc2V0LnRvcCAtIGpRdWVyeS5jc3MoIGVsZW0sICJtYXJnaW5Ub3AiLCB0cnVlICksCgkJCWxlZnQ6IG9mZnNldC5sZWZ0IC0gcGFyZW50T2Zmc2V0LmxlZnQgLSBqUXVlcnkuY3NzKCBlbGVtLCAibWFyZ2luTGVmdCIsIHRydWUgKQoJCX07Cgl9LAoKCS8vIFRoaXMgbWV0aG9kIHdpbGwgcmV0dXJuIGRvY3VtZW50RWxlbWVudCBpbiB0aGUgZm9sbG93aW5nIGNhc2VzOgoJLy8gMSkgRm9yIHRoZSBlbGVtZW50IGluc2lkZSB0aGUgaWZyYW1lIHdpdGhvdXQgb2Zmc2V0UGFyZW50LCB0aGlzIG1ldGhvZCB3aWxsIHJldHVybgoJLy8gICAgZG9jdW1lbnRFbGVtZW50IG9mIHRoZSBwYXJlbnQgd2luZG93CgkvLyAyKSBGb3IgdGhlIGhpZGRlbiBvciBkZXRhY2hlZCBlbGVtZW50CgkvLyAzKSBGb3IgYm9keSBvciBodG1sIGVsZW1lbnQsIGkuZS4gaW4gY2FzZSBvZiB0aGUgaHRtbCBub2RlIC0gaXQgd2lsbCByZXR1cm4gaXRzZWxmCgkvLwoJLy8gYnV0IHRob3NlIGV4Y2VwdGlvbnMgd2VyZSBuZXZlciBwcmVzZW50ZWQgYXMgYSByZWFsIGxpZmUgdXNlLWNhc2VzCgkvLyBhbmQgbWlnaHQgYmUgY29uc2lkZXJlZCBhcyBtb3JlIHByZWZlcmFibGUgcmVzdWx0cy4KCS8vCgkvLyBUaGlzIGxvZ2ljLCBob3dldmVyLCBpcyBub3QgZ3VhcmFudGVlZCBhbmQgY2FuIGNoYW5nZSBhdCBhbnkgcG9pbnQgaW4gdGhlIGZ1dHVyZQoJb2Zmc2V0UGFyZW50OiBmdW5jdGlvbigpIHsKCQlyZXR1cm4gdGhpcy5tYXAoIGZ1bmN0aW9uKCkgewoJCQl2YXIgb2Zmc2V0UGFyZW50ID0gdGhpcy5vZmZzZXRQYXJlbnQ7CgoJCQl3aGlsZSAoIG9mZnNldFBhcmVudCAmJiBqUXVlcnkuY3NzKCBvZmZzZXRQYXJlbnQsICJwb3NpdGlvbiIgKSA9PT0gInN0YXRpYyIgKSB7CgkJCQlvZmZzZXRQYXJlbnQgPSBvZmZzZXRQYXJlbnQub2Zmc2V0UGFyZW50OwoJCQl9CgoJCQlyZXR1cm4gb2Zmc2V0UGFyZW50IHx8IGRvY3VtZW50RWxlbWVudDsKCQl9ICk7Cgl9Cn0gKTsKCi8vIENyZWF0ZSBzY3JvbGxMZWZ0IGFuZCBzY3JvbGxUb3AgbWV0aG9kcwpqUXVlcnkuZWFjaCggeyBzY3JvbGxMZWZ0OiAicGFnZVhPZmZzZXQiLCBzY3JvbGxUb3A6ICJwYWdlWU9mZnNldCIgfSwgZnVuY3Rpb24oIG1ldGhvZCwgcHJvcCApIHsKCXZhciB0b3AgPSAicGFnZVlPZmZzZXQiID09PSBwcm9wOwoKCWpRdWVyeS5mblsgbWV0aG9kIF0gPSBmdW5jdGlvbiggdmFsICkgewoJCXJldHVybiBhY2Nlc3MoIHRoaXMsIGZ1bmN0aW9uKCBlbGVtLCBtZXRob2QsIHZhbCApIHsKCgkJCS8vIENvYWxlc2NlIGRvY3VtZW50cyBhbmQgd2luZG93cwoJCQl2YXIgd2luOwoJCQlpZiAoIGlzV2luZG93KCBlbGVtICkgKSB7CgkJCQl3aW4gPSBlbGVtOwoJCQl9IGVsc2UgaWYgKCBlbGVtLm5vZGVUeXBlID09PSA5ICkgewoJCQkJd2luID0gZWxlbS5kZWZhdWx0VmlldzsKCQkJfQoKCQkJaWYgKCB2YWwgPT09IHVuZGVmaW5lZCApIHsKCQkJCXJldHVybiB3aW4gPyB3aW5bIHByb3AgXSA6IGVsZW1bIG1ldGhvZCBdOwoJCQl9CgoJCQlpZiAoIHdpbiApIHsKCQkJCXdpbi5zY3JvbGxUbygKCQkJCQkhdG9wID8gdmFsIDogd2luLnBhZ2VYT2Zmc2V0LAoJCQkJCXRvcCA/IHZhbCA6IHdpbi5wYWdlWU9mZnNldAoJCQkJKTsKCgkJCX0gZWxzZSB7CgkJCQllbGVtWyBtZXRob2QgXSA9IHZhbDsKCQkJfQoJCX0sIG1ldGhvZCwgdmFsLCBhcmd1bWVudHMubGVuZ3RoICk7Cgl9Owp9ICk7CgovLyBTdXBwb3J0OiBTYWZhcmkgPD03IC0gOS4xLCBDaHJvbWUgPD0zNyAtIDQ5Ci8vIEFkZCB0aGUgdG9wL2xlZnQgY3NzSG9va3MgdXNpbmcgalF1ZXJ5LmZuLnBvc2l0aW9uCi8vIFdlYmtpdCBidWc6IGh0dHBzOi8vYnVncy53ZWJraXQub3JnL3Nob3dfYnVnLmNnaT9pZD0yOTA4NAovLyBCbGluayBidWc6IGh0dHBzOi8vYnVncy5jaHJvbWl1bS5vcmcvcC9jaHJvbWl1bS9pc3N1ZXMvZGV0YWlsP2lkPTU4OTM0NwovLyBnZXRDb21wdXRlZFN0eWxlIHJldHVybnMgcGVyY2VudCB3aGVuIHNwZWNpZmllZCBmb3IgdG9wL2xlZnQvYm90dG9tL3JpZ2h0OwovLyByYXRoZXIgdGhhbiBtYWtlIHRoZSBjc3MgbW9kdWxlIGRlcGVuZCBvbiB0aGUgb2Zmc2V0IG1vZHVsZSwganVzdCBjaGVjayBmb3IgaXQgaGVyZQpqUXVlcnkuZWFjaCggWyAidG9wIiwgImxlZnQiIF0sIGZ1bmN0aW9uKCBfaSwgcHJvcCApIHsKCWpRdWVyeS5jc3NIb29rc1sgcHJvcCBdID0gYWRkR2V0SG9va0lmKCBzdXBwb3J0LnBpeGVsUG9zaXRpb24sCgkJZnVuY3Rpb24oIGVsZW0sIGNvbXB1dGVkICkgewoJCQlpZiAoIGNvbXB1dGVkICkgewoJCQkJY29tcHV0ZWQgPSBjdXJDU1MoIGVsZW0sIHByb3AgKTsKCgkJCQkvLyBJZiBjdXJDU1MgcmV0dXJucyBwZXJjZW50YWdlLCBmYWxsYmFjayB0byBvZmZzZXQKCQkJCXJldHVybiBybnVtbm9ucHgudGVzdCggY29tcHV0ZWQgKSA/CgkJCQkJalF1ZXJ5KCBlbGVtICkucG9zaXRpb24oKVsgcHJvcCBdICsgInB4IiA6CgkJCQkJY29tcHV0ZWQ7CgkJCX0KCQl9CgkpOwp9ICk7CgoKLy8gQ3JlYXRlIGlubmVySGVpZ2h0LCBpbm5lcldpZHRoLCBoZWlnaHQsIHdpZHRoLCBvdXRlckhlaWdodCBhbmQgb3V0ZXJXaWR0aCBtZXRob2RzCmpRdWVyeS5lYWNoKCB7IEhlaWdodDogImhlaWdodCIsIFdpZHRoOiAid2lkdGgiIH0sIGZ1bmN0aW9uKCBuYW1lLCB0eXBlICkgewoJalF1ZXJ5LmVhY2goIHsKCQlwYWRkaW5nOiAiaW5uZXIiICsgbmFtZSwKCQljb250ZW50OiB0eXBlLAoJCSIiOiAib3V0ZXIiICsgbmFtZQoJfSwgZnVuY3Rpb24oIGRlZmF1bHRFeHRyYSwgZnVuY05hbWUgKSB7CgoJCS8vIE1hcmdpbiBpcyBvbmx5IGZvciBvdXRlckhlaWdodCwgb3V0ZXJXaWR0aAoJCWpRdWVyeS5mblsgZnVuY05hbWUgXSA9IGZ1bmN0aW9uKCBtYXJnaW4sIHZhbHVlICkgewoJCQl2YXIgY2hhaW5hYmxlID0gYXJndW1lbnRzLmxlbmd0aCAmJiAoIGRlZmF1bHRFeHRyYSB8fCB0eXBlb2YgbWFyZ2luICE9PSAiYm9vbGVhbiIgKSwKCQkJCWV4dHJhID0gZGVmYXVsdEV4dHJhIHx8ICggbWFyZ2luID09PSB0cnVlIHx8IHZhbHVlID09PSB0cnVlID8gIm1hcmdpbiIgOiAiYm9yZGVyIiApOwoKCQkJcmV0dXJuIGFjY2VzcyggdGhpcywgZnVuY3Rpb24oIGVsZW0sIHR5cGUsIHZhbHVlICkgewoJCQkJdmFyIGRvYzsKCgkJCQlpZiAoIGlzV2luZG93KCBlbGVtICkgKSB7CgoJCQkJCS8vICQoIHdpbmRvdyApLm91dGVyV2lkdGgvSGVpZ2h0IHJldHVybiB3L2ggaW5jbHVkaW5nIHNjcm9sbGJhcnMgKGdoLTE3MjkpCgkJCQkJcmV0dXJuIGZ1bmNOYW1lLmluZGV4T2YoICJvdXRlciIgKSA9PT0gMCA/CgkJCQkJCWVsZW1bICJpbm5lciIgKyBuYW1lIF0gOgoJCQkJCQllbGVtLmRvY3VtZW50LmRvY3VtZW50RWxlbWVudFsgImNsaWVudCIgKyBuYW1lIF07CgkJCQl9CgoJCQkJLy8gR2V0IGRvY3VtZW50IHdpZHRoIG9yIGhlaWdodAoJCQkJaWYgKCBlbGVtLm5vZGVUeXBlID09PSA5ICkgewoJCQkJCWRvYyA9IGVsZW0uZG9jdW1lbnRFbGVtZW50OwoKCQkJCQkvLyBFaXRoZXIgc2Nyb2xsW1dpZHRoL0hlaWdodF0gb3Igb2Zmc2V0W1dpZHRoL0hlaWdodF0gb3IgY2xpZW50W1dpZHRoL0hlaWdodF0sCgkJCQkJLy8gd2hpY2hldmVyIGlzIGdyZWF0ZXN0CgkJCQkJcmV0dXJuIE1hdGgubWF4KAoJCQkJCQllbGVtLmJvZHlbICJzY3JvbGwiICsgbmFtZSBdLCBkb2NbICJzY3JvbGwiICsgbmFtZSBdLAoJCQkJCQllbGVtLmJvZHlbICJvZmZzZXQiICsgbmFtZSBdLCBkb2NbICJvZmZzZXQiICsgbmFtZSBdLAoJCQkJCQlkb2NbICJjbGllbnQiICsgbmFtZSBdCgkJCQkJKTsKCQkJCX0KCgkJCQlyZXR1cm4gdmFsdWUgPT09IHVuZGVmaW5lZCA/CgoJCQkJCS8vIEdldCB3aWR0aCBvciBoZWlnaHQgb24gdGhlIGVsZW1lbnQsIHJlcXVlc3RpbmcgYnV0IG5vdCBmb3JjaW5nIHBhcnNlRmxvYXQKCQkJCQlqUXVlcnkuY3NzKCBlbGVtLCB0eXBlLCBleHRyYSApIDoKCgkJCQkJLy8gU2V0IHdpZHRoIG9yIGhlaWdodCBvbiB0aGUgZWxlbWVudAoJCQkJCWpRdWVyeS5zdHlsZSggZWxlbSwgdHlwZSwgdmFsdWUsIGV4dHJhICk7CgkJCX0sIHR5cGUsIGNoYWluYWJsZSA/IG1hcmdpbiA6IHVuZGVmaW5lZCwgY2hhaW5hYmxlICk7CgkJfTsKCX0gKTsKfSApOwoKCmpRdWVyeS5lYWNoKCBbCgkiYWpheFN0YXJ0IiwKCSJhamF4U3RvcCIsCgkiYWpheENvbXBsZXRlIiwKCSJhamF4RXJyb3IiLAoJImFqYXhTdWNjZXNzIiwKCSJhamF4U2VuZCIKXSwgZnVuY3Rpb24oIF9pLCB0eXBlICkgewoJalF1ZXJ5LmZuWyB0eXBlIF0gPSBmdW5jdGlvbiggZm4gKSB7CgkJcmV0dXJuIHRoaXMub24oIHR5cGUsIGZuICk7Cgl9Owp9ICk7CgoKCgpqUXVlcnkuZm4uZXh0ZW5kKCB7CgoJYmluZDogZnVuY3Rpb24oIHR5cGVzLCBkYXRhLCBmbiApIHsKCQlyZXR1cm4gdGhpcy5vbiggdHlwZXMsIG51bGwsIGRhdGEsIGZuICk7Cgl9LAoJdW5iaW5kOiBmdW5jdGlvbiggdHlwZXMsIGZuICkgewoJCXJldHVybiB0aGlzLm9mZiggdHlwZXMsIG51bGwsIGZuICk7Cgl9LAoKCWRlbGVnYXRlOiBmdW5jdGlvbiggc2VsZWN0b3IsIHR5cGVzLCBkYXRhLCBmbiApIHsKCQlyZXR1cm4gdGhpcy5vbiggdHlwZXMsIHNlbGVjdG9yLCBkYXRhLCBmbiApOwoJfSwKCXVuZGVsZWdhdGU6IGZ1bmN0aW9uKCBzZWxlY3RvciwgdHlwZXMsIGZuICkgewoKCQkvLyAoIG5hbWVzcGFjZSApIG9yICggc2VsZWN0b3IsIHR5cGVzIFssIGZuXSApCgkJcmV0dXJuIGFyZ3VtZW50cy5sZW5ndGggPT09IDEgPwoJCQl0aGlzLm9mZiggc2VsZWN0b3IsICIqKiIgKSA6CgkJCXRoaXMub2ZmKCB0eXBlcywgc2VsZWN0b3IgfHwgIioqIiwgZm4gKTsKCX0sCgoJaG92ZXI6IGZ1bmN0aW9uKCBmbk92ZXIsIGZuT3V0ICkgewoJCXJldHVybiB0aGlzLm1vdXNlZW50ZXIoIGZuT3ZlciApLm1vdXNlbGVhdmUoIGZuT3V0IHx8IGZuT3ZlciApOwoJfQp9ICk7CgpqUXVlcnkuZWFjaCgKCSggImJsdXIgZm9jdXMgZm9jdXNpbiBmb2N1c291dCByZXNpemUgc2Nyb2xsIGNsaWNrIGRibGNsaWNrICIgKwoJIm1vdXNlZG93biBtb3VzZXVwIG1vdXNlbW92ZSBtb3VzZW92ZXIgbW91c2VvdXQgbW91c2VlbnRlciBtb3VzZWxlYXZlICIgKwoJImNoYW5nZSBzZWxlY3Qgc3VibWl0IGtleWRvd24ga2V5cHJlc3Mga2V5dXAgY29udGV4dG1lbnUiICkuc3BsaXQoICIgIiApLAoJZnVuY3Rpb24oIF9pLCBuYW1lICkgewoKCQkvLyBIYW5kbGUgZXZlbnQgYmluZGluZwoJCWpRdWVyeS5mblsgbmFtZSBdID0gZnVuY3Rpb24oIGRhdGEsIGZuICkgewoJCQlyZXR1cm4gYXJndW1lbnRzLmxlbmd0aCA+IDAgPwoJCQkJdGhpcy5vbiggbmFtZSwgbnVsbCwgZGF0YSwgZm4gKSA6CgkJCQl0aGlzLnRyaWdnZXIoIG5hbWUgKTsKCQl9OwoJfQopOwoKCgoKLy8gU3VwcG9ydDogQW5kcm9pZCA8PTQuMCBvbmx5Ci8vIE1ha2Ugc3VyZSB3ZSB0cmltIEJPTSBhbmQgTkJTUAovLyBSZXF1aXJlIHRoYXQgdGhlICJ3aGl0ZXNwYWNlIHJ1biIgc3RhcnRzIGZyb20gYSBub24td2hpdGVzcGFjZQovLyB0byBhdm9pZCBPKE5eMikgYmVoYXZpb3Igd2hlbiB0aGUgZW5naW5lIHdvdWxkIHRyeSBtYXRjaGluZyAiXHMrJCIgYXQgZWFjaCBzcGFjZSBwb3NpdGlvbi4KdmFyIHJ0cmltID0gL15bXHNcdUZFRkZceEEwXSt8KFteXHNcdUZFRkZceEEwXSlbXHNcdUZFRkZceEEwXSskL2c7CgovLyBCaW5kIGEgZnVuY3Rpb24gdG8gYSBjb250ZXh0LCBvcHRpb25hbGx5IHBhcnRpYWxseSBhcHBseWluZyBhbnkKLy8gYXJndW1lbnRzLgovLyBqUXVlcnkucHJveHkgaXMgZGVwcmVjYXRlZCB0byBwcm9tb3RlIHN0YW5kYXJkcyAoc3BlY2lmaWNhbGx5IEZ1bmN0aW9uI2JpbmQpCi8vIEhvd2V2ZXIsIGl0IGlzIG5vdCBzbGF0ZWQgZm9yIHJlbW92YWwgYW55IHRpbWUgc29vbgpqUXVlcnkucHJveHkgPSBmdW5jdGlvbiggZm4sIGNvbnRleHQgKSB7Cgl2YXIgdG1wLCBhcmdzLCBwcm94eTsKCglpZiAoIHR5cGVvZiBjb250ZXh0ID09PSAic3RyaW5nIiApIHsKCQl0bXAgPSBmblsgY29udGV4dCBdOwoJCWNvbnRleHQgPSBmbjsKCQlmbiA9IHRtcDsKCX0KCgkvLyBRdWljayBjaGVjayB0byBkZXRlcm1pbmUgaWYgdGFyZ2V0IGlzIGNhbGxhYmxlLCBpbiB0aGUgc3BlYwoJLy8gdGhpcyB0aHJvd3MgYSBUeXBlRXJyb3IsIGJ1dCB3ZSB3aWxsIGp1c3QgcmV0dXJuIHVuZGVmaW5lZC4KCWlmICggIWlzRnVuY3Rpb24oIGZuICkgKSB7CgkJcmV0dXJuIHVuZGVmaW5lZDsKCX0KCgkvLyBTaW11bGF0ZWQgYmluZAoJYXJncyA9IHNsaWNlLmNhbGwoIGFyZ3VtZW50cywgMiApOwoJcHJveHkgPSBmdW5jdGlvbigpIHsKCQlyZXR1cm4gZm4uYXBwbHkoIGNvbnRleHQgfHwgdGhpcywgYXJncy5jb25jYXQoIHNsaWNlLmNhbGwoIGFyZ3VtZW50cyApICkgKTsKCX07CgoJLy8gU2V0IHRoZSBndWlkIG9mIHVuaXF1ZSBoYW5kbGVyIHRvIHRoZSBzYW1lIG9mIG9yaWdpbmFsIGhhbmRsZXIsIHNvIGl0IGNhbiBiZSByZW1vdmVkCglwcm94eS5ndWlkID0gZm4uZ3VpZCA9IGZuLmd1aWQgfHwgalF1ZXJ5Lmd1aWQrKzsKCglyZXR1cm4gcHJveHk7Cn07CgpqUXVlcnkuaG9sZFJlYWR5ID0gZnVuY3Rpb24oIGhvbGQgKSB7CglpZiAoIGhvbGQgKSB7CgkJalF1ZXJ5LnJlYWR5V2FpdCsrOwoJfSBlbHNlIHsKCQlqUXVlcnkucmVhZHkoIHRydWUgKTsKCX0KfTsKalF1ZXJ5LmlzQXJyYXkgPSBBcnJheS5pc0FycmF5OwpqUXVlcnkucGFyc2VKU09OID0gSlNPTi5wYXJzZTsKalF1ZXJ5Lm5vZGVOYW1lID0gbm9kZU5hbWU7CmpRdWVyeS5pc0Z1bmN0aW9uID0gaXNGdW5jdGlvbjsKalF1ZXJ5LmlzV2luZG93ID0gaXNXaW5kb3c7CmpRdWVyeS5jYW1lbENhc2UgPSBjYW1lbENhc2U7CmpRdWVyeS50eXBlID0gdG9UeXBlOwoKalF1ZXJ5Lm5vdyA9IERhdGUubm93OwoKalF1ZXJ5LmlzTnVtZXJpYyA9IGZ1bmN0aW9uKCBvYmogKSB7CgoJLy8gQXMgb2YgalF1ZXJ5IDMuMCwgaXNOdW1lcmljIGlzIGxpbWl0ZWQgdG8KCS8vIHN0cmluZ3MgYW5kIG51bWJlcnMgKHByaW1pdGl2ZXMgb3Igb2JqZWN0cykKCS8vIHRoYXQgY2FuIGJlIGNvZXJjZWQgdG8gZmluaXRlIG51bWJlcnMgKGdoLTI2NjIpCgl2YXIgdHlwZSA9IGpRdWVyeS50eXBlKCBvYmogKTsKCXJldHVybiAoIHR5cGUgPT09ICJudW1iZXIiIHx8IHR5cGUgPT09ICJzdHJpbmciICkgJiYKCgkJLy8gcGFyc2VGbG9hdCBOYU5zIG51bWVyaWMtY2FzdCBmYWxzZSBwb3NpdGl2ZXMgKCIiKQoJCS8vIC4uLmJ1dCBtaXNpbnRlcnByZXRzIGxlYWRpbmctbnVtYmVyIHN0cmluZ3MsIHBhcnRpY3VsYXJseSBoZXggbGl0ZXJhbHMgKCIweC4uLiIpCgkJLy8gc3VidHJhY3Rpb24gZm9yY2VzIGluZmluaXRpZXMgdG8gTmFOCgkJIWlzTmFOKCBvYmogLSBwYXJzZUZsb2F0KCBvYmogKSApOwp9OwoKalF1ZXJ5LnRyaW0gPSBmdW5jdGlvbiggdGV4dCApIHsKCXJldHVybiB0ZXh0ID09IG51bGwgPwoJCSIiIDoKCQkoIHRleHQgKyAiIiApLnJlcGxhY2UoIHJ0cmltLCAiJDEiICk7Cn07CgoKCi8vIFJlZ2lzdGVyIGFzIGEgbmFtZWQgQU1EIG1vZHVsZSwgc2luY2UgalF1ZXJ5IGNhbiBiZSBjb25jYXRlbmF0ZWQgd2l0aCBvdGhlcgovLyBmaWxlcyB0aGF0IG1heSB1c2UgZGVmaW5lLCBidXQgbm90IHZpYSBhIHByb3BlciBjb25jYXRlbmF0aW9uIHNjcmlwdCB0aGF0Ci8vIHVuZGVyc3RhbmRzIGFub255bW91cyBBTUQgbW9kdWxlcy4gQSBuYW1lZCBBTUQgaXMgc2FmZXN0IGFuZCBtb3N0IHJvYnVzdAovLyB3YXkgdG8gcmVnaXN0ZXIuIExvd2VyY2FzZSBqcXVlcnkgaXMgdXNlZCBiZWNhdXNlIEFNRCBtb2R1bGUgbmFtZXMgYXJlCi8vIGRlcml2ZWQgZnJvbSBmaWxlIG5hbWVzLCBhbmQgalF1ZXJ5IGlzIG5vcm1hbGx5IGRlbGl2ZXJlZCBpbiBhIGxvd2VyY2FzZQovLyBmaWxlIG5hbWUuIERvIHRoaXMgYWZ0ZXIgY3JlYXRpbmcgdGhlIGdsb2JhbCBzbyB0aGF0IGlmIGFuIEFNRCBtb2R1bGUgd2FudHMKLy8gdG8gY2FsbCBub0NvbmZsaWN0IHRvIGhpZGUgdGhpcyB2ZXJzaW9uIG9mIGpRdWVyeSwgaXQgd2lsbCB3b3JrLgoKLy8gTm90ZSB0aGF0IGZvciBtYXhpbXVtIHBvcnRhYmlsaXR5LCBsaWJyYXJpZXMgdGhhdCBhcmUgbm90IGpRdWVyeSBzaG91bGQKLy8gZGVjbGFyZSB0aGVtc2VsdmVzIGFzIGFub255bW91cyBtb2R1bGVzLCBhbmQgYXZvaWQgc2V0dGluZyBhIGdsb2JhbCBpZiBhbgovLyBBTUQgbG9hZGVyIGlzIHByZXNlbnQuIGpRdWVyeSBpcyBhIHNwZWNpYWwgY2FzZS4gRm9yIG1vcmUgaW5mb3JtYXRpb24sIHNlZQovLyBodHRwczovL2dpdGh1Yi5jb20vanJidXJrZS9yZXF1aXJlanMvd2lraS9VcGRhdGluZy1leGlzdGluZy1saWJyYXJpZXMjd2lraS1hbm9uCgppZiAoIHRydWUgKSB7CgkhKF9fV0VCUEFDS19BTURfREVGSU5FX0FSUkFZX18gPSBbXSwgX19XRUJQQUNLX0FNRF9ERUZJTkVfUkVTVUxUX18gPSAoZnVuY3Rpb24oKSB7CgkJcmV0dXJuIGpRdWVyeTsKCX0pLmFwcGx5KGV4cG9ydHMsIF9fV0VCUEFDS19BTURfREVGSU5FX0FSUkFZX18pLAoJCV9fV0VCUEFDS19BTURfREVGSU5FX1JFU1VMVF9fICE9PSB1bmRlZmluZWQgJiYgKG1vZHVsZS5leHBvcnRzID0gX19XRUJQQUNLX0FNRF9ERUZJTkVfUkVTVUxUX18pKTsKfQoKCgoKdmFyCgoJLy8gTWFwIG92ZXIgalF1ZXJ5IGluIGNhc2Ugb2Ygb3ZlcndyaXRlCglfalF1ZXJ5ID0gd2luZG93LmpRdWVyeSwKCgkvLyBNYXAgb3ZlciB0aGUgJCBpbiBjYXNlIG9mIG92ZXJ3cml0ZQoJXyQgPSB3aW5kb3cuJDsKCmpRdWVyeS5ub0NvbmZsaWN0ID0gZnVuY3Rpb24oIGRlZXAgKSB7CglpZiAoIHdpbmRvdy4kID09PSBqUXVlcnkgKSB7CgkJd2luZG93LiQgPSBfJDsKCX0KCglpZiAoIGRlZXAgJiYgd2luZG93LmpRdWVyeSA9PT0galF1ZXJ5ICkgewoJCXdpbmRvdy5qUXVlcnkgPSBfalF1ZXJ5OwoJfQoKCXJldHVybiBqUXVlcnk7Cn07CgovLyBFeHBvc2UgalF1ZXJ5IGFuZCAkIGlkZW50aWZpZXJzLCBldmVuIGluIEFNRAovLyAodHJhYy03MTAyI2NvbW1lbnQ6MTAsIGh0dHBzOi8vZ2l0aHViLmNvbS9qcXVlcnkvanF1ZXJ5L3B1bGwvNTU3KQovLyBhbmQgQ29tbW9uSlMgZm9yIGJyb3dzZXIgZW11bGF0b3JzICh0cmFjLTEzNTY2KQppZiAoIHR5cGVvZiBub0dsb2JhbCA9PT0gInVuZGVmaW5lZCIgKSB7Cgl3aW5kb3cualF1ZXJ5ID0gd2luZG93LiQgPSBqUXVlcnk7Cn0KCgoKCnJldHVybiBqUXVlcnk7Cn0gKTsKCgovKioqLyB9KSwKCi8qKiovICIuL3NyYy9zY3NzL19mcm9udGVuZC9mcm9udGVuZC5zY3NzIjoKLyohKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqISpcCiAgISoqKiAuL3NyYy9zY3NzL19mcm9udGVuZC9mcm9udGVuZC5zY3NzICoqKiEKICBcKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqLwovKioqLyAoZnVuY3Rpb24oX191bnVzZWRfd2VicGFja19tb2R1bGUsIF9fd2VicGFja19leHBvcnRzX18sIF9fd2VicGFja19yZXF1aXJlX18pIHsKCiJ1c2Ugc3RyaWN0IjsKX193ZWJwYWNrX3JlcXVpcmVfXy5yKF9fd2VicGFja19leHBvcnRzX18pOwovLyBleHRyYWN0ZWQgYnkgbWluaS1jc3MtZXh0cmFjdC1wbHVnaW4KCgovKioqLyB9KSwKCi8qKiovICIuL3NyYy9qcy9fY29tcG9uZW50cy9fYm9vdHN0cmFwLmpzIjoKLyohKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqISpcCiAgISoqKiAuL3NyYy9qcy9fY29tcG9uZW50cy9fYm9vdHN0cmFwLmpzICoqKiEKICBcKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqLwovKioqLyAoZnVuY3Rpb24oX191bnVzZWRfd2VicGFja19tb2R1bGUsIF9fdW51c2VkX3dlYnBhY2tfZXhwb3J0cywgX193ZWJwYWNrX3JlcXVpcmVfXykgewoKX193ZWJwYWNrX3JlcXVpcmVfXy5nLkJvb3RzdHJhcCA9IHt9OwoKX193ZWJwYWNrX3JlcXVpcmVfXy5nLmpRdWVyeSA9IF9fd2VicGFja19yZXF1aXJlX18oLyohIGpxdWVyeSAqLyAiLi9ub2RlX21vZHVsZXMvanF1ZXJ5L2Rpc3QvanF1ZXJ5LmpzIik7Cl9fd2VicGFja19yZXF1aXJlX18uZy5Cb290c3RyYXAuQnV0dG9uID0gX193ZWJwYWNrX3JlcXVpcmVfXygvKiEgbm9kZU1vZHVsZXMvYm9vdHN0cmFwL2pzL2Rpc3QvYnV0dG9uICovICIuL25vZGVfbW9kdWxlcy9ib290c3RyYXAvanMvZGlzdC9idXR0b24uanMiKTsKX193ZWJwYWNrX3JlcXVpcmVfXy5nLkJvb3RzdHJhcC5Db2xsYXBzZSA9IF9fd2VicGFja19yZXF1aXJlX18oLyohIG5vZGVNb2R1bGVzL2Jvb3RzdHJhcC9qcy9kaXN0L2NvbGxhcHNlICovICIuL25vZGVfbW9kdWxlcy9ib290c3RyYXAvanMvZGlzdC9jb2xsYXBzZS5qcyIpOwpfX3dlYnBhY2tfcmVxdWlyZV9fLmcuQm9vdHN0cmFwLlBvcG92ZXIgPSBfX3dlYnBhY2tfcmVxdWlyZV9fKC8qISBub2RlTW9kdWxlcy9ib290c3RyYXAvanMvZGlzdC9wb3BvdmVyICovICIuL25vZGVfbW9kdWxlcy9ib290c3RyYXAvanMvZGlzdC9wb3BvdmVyLmpzIik7Cl9fd2VicGFja19yZXF1aXJlX18uZy5Cb290c3RyYXAuU2Nyb2xsc3B5ID0gX193ZWJwYWNrX3JlcXVpcmVfXygvKiEgbm9kZU1vZHVsZXMvYm9vdHN0cmFwL2pzL2Rpc3Qvc2Nyb2xsc3B5ICovICIuL25vZGVfbW9kdWxlcy9ib290c3RyYXAvanMvZGlzdC9zY3JvbGxzcHkuanMiKTsKX193ZWJwYWNrX3JlcXVpcmVfXy5nLkJvb3RzdHJhcC5UYWIgPSBfX3dlYnBhY2tfcmVxdWlyZV9fKC8qISBub2RlTW9kdWxlcy9ib290c3RyYXAvanMvZGlzdC90YWIgKi8gIi4vbm9kZV9tb2R1bGVzL2Jvb3RzdHJhcC9qcy9kaXN0L3RhYi5qcyIpOwpfX3dlYnBhY2tfcmVxdWlyZV9fLmcuQm9vdHN0cmFwLlRvb2x0aXAgPSBfX3dlYnBhY2tfcmVxdWlyZV9fKC8qISBub2RlTW9kdWxlcy9ib290c3RyYXAvanMvZGlzdC90b29sdGlwICovICIuL25vZGVfbW9kdWxlcy9ib290c3RyYXAvanMvZGlzdC90b29sdGlwLmpzIik7Cl9fd2VicGFja19yZXF1aXJlX18uZy5Cb290c3RyYXAuTW9kYWwgPSBfX3dlYnBhY2tfcmVxdWlyZV9fKC8qISBub2RlTW9kdWxlcy9ib290c3RyYXAvanMvZGlzdC9tb2RhbCAqLyAiLi9ub2RlX21vZHVsZXMvYm9vdHN0cmFwL2pzL2Rpc3QvbW9kYWwuanMiKTsKCgovKioqLyB9KSwKCi8qKiovICIuL3NyYy9qcy9fY29tcG9uZW50cy9fY2hlY2tib3guanMiOgovKiEqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiEqXAogICEqKiogLi9zcmMvanMvX2NvbXBvbmVudHMvX2NoZWNrYm94LmpzICoqKiEKICBcKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiovCi8qKiovIChmdW5jdGlvbigpIHsKCihmdW5jdGlvbiAoJCkgewoJJChmdW5jdGlvbiAoKSB7CgkJdmFyIE1lc3NpYSA9IHsKCQkJZG9DaGVja2JveDogZnVuY3Rpb24gKGUpIHsKCQkJCSQodGhpcykucGFyZW50KCIubWVzc2lhLWNoZWNrYm94IikuYWRkQ2xhc3MoImlzLWNsaWNrZWQiKTsKCQkJCSQodGhpcykuZm9jdXMoKTsKCQkJCSQoJ2JvZHknKS5vbmUoJ2ZvY3Vzb3V0JywkKHRoaXMpLCBNZXNzaWEucmVtb3ZlSXNDbGlja2VkKTsKCQkJfSwKCQkJcmVtb3ZlSXNDbGlja2VkOiBmdW5jdGlvbiAoZSkgewoJCQkJJCgiLm1lc3NpYS1jaGVja2JveCIpLnJlbW92ZUNsYXNzKCJpcy1jbGlja2VkIik7CgkJCX0sCgkJfTsKCQkkKCdib2R5Jykub24oJ2NsaWNrJywgJy5tZXNzaWEtY2hlY2tib3ggaW5wdXQ6bm90KFtkaXNhYmxlZF0pJywgTWVzc2lhLmRvQ2hlY2tib3gpOwoJfSk7Cn0pKGpRdWVyeSk7CgovKioqLyB9KSwKCi8qKiovICIuL3NyYy9qcy9fY29tcG9uZW50cy9faW5wdXRfdGV4dC5qcyI6Ci8qISoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiohKlwKICAhKioqIC4vc3JjL2pzL19jb21wb25lbnRzL19pbnB1dF90ZXh0LmpzICoqKiEKICBcKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKi8KLyoqKi8gKGZ1bmN0aW9uKCkgewoKKGZ1bmN0aW9uICgkKSB7CgkkKGZ1bmN0aW9uICgpIHsKCQl2YXIgTWVzc2lhID0gewoJCQlkb1RleHRmaWVsZDogZnVuY3Rpb24gKGUpIHsKCQkJCSQodGhpcykuZmluZCgnaW5wdXQsIHRleHRhcmVhJykuZm9jdXMoKTsKCQkJCSQodGhpcykuYWRkQ2xhc3MoJ2lzLWZvY3VzZWQnKTsKCQkJCSQodGhpcykub25lKCdmb2N1c291dCcsJCh0aGlzKS5maW5kKCc+IGxhYmVsIGlucHV0LCA+IGxhYmVsIHRleHRhcmVhJyksIE1lc3NpYS5yZW1vdmVJc0ZvY3VzZWQpOwoJCQl9LAoJCQlyZW1vdmVJc0ZvY3VzZWQ6IGZ1bmN0aW9uIChlKSB7CgkJCQlpZiAoJCh0aGlzKS5maW5kKCcgaW5wdXQsICB0ZXh0YXJlYScpLnZhbCgpLmxlbmd0aCA9PT0gMCApewoJCQkJCSQoJy5tZXNzaWEtdGV4dGZpZWxkJykucmVtb3ZlQ2xhc3MoJ2lzLWZvY3VzZWQnKTsKCQkJCX0KCQkJfSwKCQl9OwoJCSQoJ2JvZHknKS5vbignY2xpY2snLCAnLm1lc3NpYS10ZXh0ZmllbGQnLCBNZXNzaWEuZG9UZXh0ZmllbGQpOwoJfSk7Cn0pKGpRdWVyeSk7CgoKLyoqKi8gfSksCgovKioqLyAiLi9zcmMvanMvX2NvbXBvbmVudHMvX2xvZ2dlci5qcyI6Ci8qISoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiEqXAogICEqKiogLi9zcmMvanMvX2NvbXBvbmVudHMvX2xvZ2dlci5qcyAqKiohCiAgXCoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKi8KLyoqKi8gKGZ1bmN0aW9uKF9fdW51c2VkX3dlYnBhY2tfbW9kdWxlLCBfX3VudXNlZF93ZWJwYWNrX2V4cG9ydHMsIF9fd2VicGFja19yZXF1aXJlX18pIHsKCi8qKgogKiBDb25zb2xlIGxvZ2dlci4gU2VsZiBpbnZva2VkLgogKgogKiBAcmV0dXJuIHtvYmplY3R9IENhbGxiYWNrcy4KICovCmNvbnN0IGxvZ2dlckZuID0gKCgpID0+IHsKCgljb25zdCBtZXRob2RUb0NvbG9yTWFwID0gewoJCWRlYnVnOiAnIzdmOGM4ZCcsCgkJbG9nOiAnIzJlY2M3MScsCgkJd2FybjogJyNmMzljMTInLAoJCWVycm9yOiAnI2MwMzkyYicsCgkJdGFibGU6ICcjYzAzOTJiJywKCX07CgoJY29uc3QgcHJpbnQgPSBmdW5jdGlvbiAobWV0aG9kLCBhcmdzKSB7CgkJY29uc3QKCQkJc3R5bGVzID0gW2BiYWNrZ3JvdW5kOiAke21ldGhvZFRvQ29sb3JNYXBbbWV0aG9kXX1gLCBgYm9yZGVyLXJhZGl1czogMC4zZW1gLCBgY29sb3I6IHdoaXRlYCwgYGZvbnQtd2VpZ2h0OiBib2xkYCwgYHBhZGRpbmc6IDJweCAwLjVlbWBdLAoJCQlsb2dQcmVmaXggPSBbJyVjbWVzc2lhJywgc3R5bGVzLmpvaW4oJzsnKV07CgoJCWlmIChtZXNzaWFWYXJzLnNjcmlwdERlYnVnID09PSBmYWxzZSkgewoJCQlyZXR1cm47CgkJfQoKCQljb25zb2xlW21ldGhvZF0oLi4ubG9nUHJlZml4LCAuLi5hcmdzKTsKCX0KCgljb25zdCBhcGkgPSB7fTsKCWNvbnN0IGxvZ2dlck1ldGhvZHMgPSBPYmplY3Qua2V5cyhtZXRob2RUb0NvbG9yTWFwKTsKCglmb3IgKGNvbnN0IGtleSBvZiBsb2dnZXJNZXRob2RzKSB7CgkJY29uc3QgbWV0aG9kID0ga2V5OwoKCQlhcGlbbWV0aG9kXSA9ICguLi5hcmdzKSA9PiB7CgkJCXByaW50KG1ldGhvZCwgYXJncyk7CgkJfTsKCX0KCglyZXR1cm4gYXBpOwp9KSgpOwoKX193ZWJwYWNrX3JlcXVpcmVfXy5nLk1lc3NpYUV4dCA9IF9fd2VicGFja19yZXF1aXJlX18uZy5NZXNzaWFFeHQgfHwge307Cl9fd2VicGFja19yZXF1aXJlX18uZy5NZXNzaWFFeHQgPSB7CgkuLi5fX3dlYnBhY2tfcmVxdWlyZV9fLmcuTWVzc2lhRXh0LAoJLi4ue2xvZ2dlcjogbG9nZ2VyRm59Cn07CgovKioqLyB9KSwKCi8qKiovICIuL3NyYy9qcy9fY29tcG9uZW50cy9fcmFkaW8uanMiOgovKiEqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiEqXAogICEqKiogLi9zcmMvanMvX2NvbXBvbmVudHMvX3JhZGlvLmpzICoqKiEKICBcKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiovCi8qKiovIChmdW5jdGlvbigpIHsKCihmdW5jdGlvbiAoJCkgewoJJChmdW5jdGlvbiAoKSB7CgkJdmFyIE1lc3NpYSA9IHsKCQkJZG9SYWRpbzogZnVuY3Rpb24gKGUpIHsKCQkJCSQodGhpcykucGFyZW50cygiLm1lc3NpYS1yYWRpbyIpLmFkZENsYXNzKCJpcy1jbGlja2VkIik7CgkJCQkkKHRoaXMpLmZvY3VzKCk7CgkJCQkkKCdib2R5Jykub25lKCdmb2N1c291dCcsJCh0aGlzKSwgTWVzc2lhLnJlbW92ZUlzQ2xpY2tlZCk7CgkJCX0sCgkJCXJlbW92ZUlzQ2xpY2tlZDogZnVuY3Rpb24gKGUpIHsKCQkJCSQoIi5tZXNzaWEtcmFkaW8iKS5yZW1vdmVDbGFzcygiaXMtY2xpY2tlZCIpOwoJCQl9LAoJCX07CgkJJCgnYm9keScpLm9uKCdjbGljaycsICcubWVzc2lhLXJhZGlvIGlucHV0Om5vdChbZGlzYWJsZWRdKScsIE1lc3NpYS5kb1JhZGlvKTsKCX0pOwp9KShqUXVlcnkpOwoKLyoqKi8gfSksCgovKioqLyAiLi9zcmMvanMvX2NvbXBvbmVudHMvX3JpcHBsZS5qcyI6Ci8qISoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiEqXAogICEqKiogLi9zcmMvanMvX2NvbXBvbmVudHMvX3JpcHBsZS5qcyAqKiohCiAgXCoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKi8KLyoqKi8gKGZ1bmN0aW9uKCkgewoKKGZ1bmN0aW9uICgkKSB7CgoJJChmdW5jdGlvbiAoKSB7CgoJCXZhciBNZXNzaWEgPSB7CgkJCXByZXBhcmVSaXBwbGU6IGZ1bmN0aW9uIChlLCB0YXJnZXQpIHsKCgkJCQkvLyBHZXQgd2lkdGggYW5kIGhlaWdodCB0aGF0IHdpbGwgMTAwJSBjb3ZlciB0YXJnZXQgb24gcmlwcGxlLgoJCQkJdmFyIGNsaWVudCA9IHRhcmdldC5nZXQoMCkuZ2V0Qm91bmRpbmdDbGllbnRSZWN0KCksCgkJCQkJeCA9IGUuY2xpZW50WCwKCQkJCQl5ID0gZS5jbGllbnRZLAoJCQkJCXRvTGVmdCA9IHggLSBjbGllbnQubGVmdCwKCQkJCQl0b1JpZ2h0ID0gY2xpZW50LnJpZ2h0IC0geCwKCQkJCQl0b1RvcCA9IHkgLSBjbGllbnQudG9wLAoJCQkJCXRvQm90dG9tID0gY2xpZW50LmJvdHRvbSAtIHksCgkJCQkJbWF4WCA9IE1hdGgubWF4KHRvTGVmdCwgdG9SaWdodCksCgkJCQkJbWF4WSA9IE1hdGgubWF4KHRvVG9wLCB0b0JvdHRvbSksCgkJCQkJYnV0dG9uV2lkdGggPSBNYXRoLm1heChtYXhYLCBtYXhZKTsKCgkJCQl2YXIgZGVsdGFSYWRpdXMgPSBNYXRoLmh5cG90KG1heFgsIG1heFkpIC0gTWF0aC5tYXgobWF4WCwgbWF4WSk7CgkJCQlidXR0b25XaWR0aCA9IChidXR0b25XaWR0aCArIGRlbHRhUmFkaXVzKSAqIDI7CgkJCQlidXR0b25IZWlnaHQgPSBidXR0b25XaWR0aDsKCgkJCQlyZXR1cm4gewoJCQkJCWhlaWdodDogYnV0dG9uSGVpZ2h0LAoJCQkJCXdpZHRoOiBidXR0b25XaWR0aCwKCQkJCQlsZWZ0OiBlLnBhZ2VYIC0gdGFyZ2V0Lm9mZnNldCgpLmxlZnQgLSBidXR0b25XaWR0aCAvIDIsCgkJCQkJdG9wOiBlLnBhZ2VZIC0gdGFyZ2V0Lm9mZnNldCgpLnRvcCAtIGJ1dHRvbkhlaWdodCAvIDIsCgkJCQl9OwoJCQl9LAoJCQlkb1JpcHBsZUNsaWNrOiBhc3luYyBmdW5jdGlvbiAoZSwgdGFyZ2V0KSB7CgoJCQkJdGFyZ2V0LmRhdGEoJ21lc3NpYURvUmlwbGVDbGljaycsIHRydWUpOwoJCQkJdGFyZ2V0LmZpbmQoJy5yaXBwbGUnKS5yZW1vdmUoKTsKCgkJCQljb25zdCByaXBwbGVEYXRhID0gTWVzc2lhLnByZXBhcmVSaXBwbGUoZSwgdGFyZ2V0KTsKCQkJCWxldCByaXBwbGUgPSAkKCc8c3BhbiBjbGFzcz0icmlwcGxlIj48L3NwYW4+Jyk7CgoJCQkJcmlwcGxlCgkJCQkJLmNzcyh7CgkJCQkJCWhlaWdodDogcmlwcGxlRGF0YS5oZWlnaHQsCgkJCQkJCXdpZHRoOiByaXBwbGVEYXRhLndpZHRoLAoJCQkJCQlsZWZ0OiByaXBwbGVEYXRhLmxlZnQgKyAncHgnLAoJCQkJCQl0b3A6IHJpcHBsZURhdGEudG9wICsgJ3B4JywKCQkJCQl9KQoJCQkJCS5hcHBlbmRUbyh0YXJnZXQpLmFkZENsYXNzKCdyaXBwbGUtZWZmZWN0LWNsaWNrJyk7CgoJCQkJcmV0dXJuIGF3YWl0IG5ldyBQcm9taXNlKChyZXNvbHZlLCByZWplY3QpID0+IHsKCgkJCQkJbGV0IHRyYW5zaXRpb24gPSByaXBwbGUuY3NzKCd0cmFuc2l0aW9uLWR1cmF0aW9uJyk7CgkJCQkJbGV0IGRlbGF5ID0gTWF0aC5tYXguYXBwbHkoTWF0aCwgdHJhbnNpdGlvbi5zcGxpdCgnLCcpLm1hcChwYXJzZUZsb2F0KSkgKiAxMDAwOwoKCQkJCQlzZXRUaW1lb3V0KGZ1bmN0aW9uICh0YXJnZXQpIHsKCQkJCQkJdGFyZ2V0LmRhdGEoJ21lc3NpYURvUmlwbGVDbGljaycsIGZhbHNlKTsKCQkJCQkJcmlwcGxlLnJlbW92ZSgpOwoJCQkJCQlyZXNvbHZlKFtlLCB0YXJnZXRdKTsKCQkJCQl9LCBkZWxheSwgdGFyZ2V0LCByaXBwbGUpOwoJCQkJfSk7CgkJCX0sCgkJCWRvUmlwcGxlSG92ZXJJbjogYXN5bmMgZnVuY3Rpb24gKGUpIHsKCgkJCQljb25zdCB0YXJnZXQgPSAkKHRoaXMpOwoKCQkJCWNsZWFyVGltZW91dCh0YXJnZXQuZGF0YSgncmlwcGxlSG92ZXJPdXRUaW1lcicpKTsKCgkJCQlsZXQgcmlwcGxlID0gJCgnPHNwYW4gY2xhc3M9InJpcHBsZSI+PC9zcGFuPicpOwoJCQkJY29uc3QgY3VycmVudFJpcHBsZSA9IHRhcmdldC5maW5kKCcucmlwcGxlJyk7CgkJCQljb25zdCByaXBwbGVEYXRhID0gTWVzc2lhLnByZXBhcmVSaXBwbGUoZSwgdGFyZ2V0KTsKCgkJCQlyaXBwbGUuY3NzKHsKCQkJCQloZWlnaHQ6IHJpcHBsZURhdGEuaGVpZ2h0LAoJCQkJCXdpZHRoOiByaXBwbGVEYXRhLndpZHRoLAoJCQkJCWxlZnQ6IHJpcHBsZURhdGEubGVmdCArICdweCcsCgkJCQkJdG9wOiByaXBwbGVEYXRhLnRvcCArICdweCcsCgkJCQl9KQoKCQkJCWlmIChjdXJyZW50UmlwcGxlLmxlbmd0aCA9PT0gMCkgewoJCQkJCXJpcHBsZS5hcHBlbmRUbyh0YXJnZXQpLmFkZENsYXNzKCdyaXBwbGUtZWZmZWN0LWhvdmVyLWluJyk7CgkJCQl9CgkJCQllbHNlIHsKCQkJCQljdXJyZW50UmlwcGxlLmNzcyh7CgkJCQkJCWhlaWdodDogcmlwcGxlRGF0YS5oZWlnaHQsCgkJCQkJCXdpZHRoOiByaXBwbGVEYXRhLndpZHRoLAoJCQkJCQlsZWZ0OiByaXBwbGVEYXRhLmxlZnQgKyAncHgnLAoJCQkJCQl0b3A6IHJpcHBsZURhdGEudG9wICsgJ3B4JywKCQkJCQl9KS5yZW1vdmVDbGFzcygncmlwcGxlLWVmZmVjdC1ob3Zlci1vdXQnKS5hZGRDbGFzcygncmlwcGxlLWVmZmVjdC1ob3Zlci1pbicpOwoJCQkJCXJpcHBsZSA9IGN1cnJlbnRSaXBwbGU7CgkJCQl9CgoJCQkJcmV0dXJuIFByb21pc2UucmVzb2x2ZShbZSwgdGFyZ2V0XSk7CgkJCX0sCgkJCWRvUmlwcGxlSG92ZXJPdXQ6IGFzeW5jIGZ1bmN0aW9uIChlKSB7CgoJCQkJY29uc3QgdGFyZ2V0ID0gJCh0aGlzKTsKCQkJCWxldCByaXBwbGUgPSAkKCc8c3BhbiBjbGFzcz0icmlwcGxlIj48L3NwYW4+Jyk7CgkJCQljb25zdCBjdXJyZW50UmlwcGxlID0gdGFyZ2V0LmZpbmQoJy5yaXBwbGUnKTsKCQkJCWNvbnN0IHJpcHBsZURhdGEgPSBNZXNzaWEucHJlcGFyZVJpcHBsZShlLCB0YXJnZXQpOwoKCQkJCXJpcHBsZS5jc3MoewoJCQkJCWhlaWdodDogcmlwcGxlRGF0YS5oZWlnaHQsCgkJCQkJd2lkdGg6IHJpcHBsZURhdGEud2lkdGgsCgkJCQkJbGVmdDogcmlwcGxlRGF0YS5sZWZ0ICsgJ3B4JywKCQkJCQl0b3A6IHJpcHBsZURhdGEudG9wICsgJ3B4JywKCQkJCX0pOwoKCQkJCWlmIChjdXJyZW50UmlwcGxlLmxlbmd0aCA9PT0gMCkgewoJCQkJCXJpcHBsZS5hcHBlbmRUbyh0YXJnZXQpLmFkZENsYXNzKCdyaXBwbGUtZWZmZWN0LWhvdmVyLW91dCcpOwoJCQkJfQoJCQkJZWxzZSB7CgkJCQkJY3VycmVudFJpcHBsZS5jc3MoewoJCQkJCQloZWlnaHQ6IHJpcHBsZURhdGEuaGVpZ2h0LAoJCQkJCQl3aWR0aDogcmlwcGxlRGF0YS53aWR0aCwKCQkJCQkJbGVmdDogcmlwcGxlRGF0YS5sZWZ0ICsgJ3B4JywKCQkJCQkJdG9wOiByaXBwbGVEYXRhLnRvcCArICdweCcsCgkJCQkJfSkucmVtb3ZlQ2xhc3MoJ3JpcHBsZS1lZmZlY3QtaG92ZXItaW4nKS5hZGRDbGFzcygncmlwcGxlLWVmZmVjdC1ob3Zlci1vdXQnKTsKCQkJCQlyaXBwbGUgPSBjdXJyZW50UmlwcGxlOwoJCQkJfQoKCQkJCXJldHVybiBhd2FpdCBuZXcgUHJvbWlzZSgocmVzb2x2ZSwgcmVqZWN0KSA9PiB7CgoJCQkJCWxldCB0cmFuc2l0aW9uID0gcmlwcGxlLmNzcygnYW5pbWF0aW9uLWR1cmF0aW9uJyk7CgkJCQkJbGV0IGRlbGF5ID0gTWF0aC5tYXguYXBwbHkoTWF0aCwgdHJhbnNpdGlvbi5zcGxpdCgnLCcpLm1hcChwYXJzZUZsb2F0KSkgKiAxMDAwOwoKCQkJCQlsZXQgcmlwcGxlSG92ZXJPdXRUaW1lciA9IHNldFRpbWVvdXQoZnVuY3Rpb24gKHRhcmdldCkgewoJCQkJCQlyaXBwbGUucmVtb3ZlKCk7CgkJCQkJCXJlc29sdmUoW2UsIHRhcmdldF0pOwoJCQkJCX0sIGRlbGF5LCB0YXJnZXQsIHJpcHBsZSk7CgoJCQkJCXRhcmdldC5kYXRhKCdyaXBwbGVIb3Zlck91dFRpbWVyJywgcmlwcGxlSG92ZXJPdXRUaW1lcik7CgkJCQl9KTsKCQkJfSwKCQkJcmlwcGxlQ2xpY2s6IGZ1bmN0aW9uIChlKSB7CgoJCQkJaWYgKHRydWUgPT09ICQodGhpcykuZGF0YSgnbWVzc2lhRG9SaXBsZUNsaWNrJykpIHsKCQkJCQlyZXR1cm47CgkJCQl9CgoJCQkJdmFyIGV2ZW50X2FyZ3MgPSBBcnJheS5mcm9tKGUuaGFuZGxlT2JqLmhhbmRsZXIuYXJndW1lbnRzKTsKCQkJCWV2ZW50X2FyZ3Muc2hpZnQoKTsKCgkJCQlNZXNzaWEuZG9SaXBwbGVDbGljayhlLCAkKHRoaXMpKQoJCQkJCS50aGVuKGZ1bmN0aW9uIChhcmdzKSB7CgkJCQkJCWxldCBldmVudCA9IG5ldyBFdmVudCgnbWVzc2lhQ2xpY2tSaXBsZURvbmUnKTsKCQkJCQkJYXJnc1sxXS5nZXQoMCkuZGlzcGF0Y2hFdmVudChldmVudCk7CgkJCQkJfSk7CgkJCQkJcmV0dXJuOwoJCQl9LAoJCX07CgkJJCgnYm9keScpLm9uKCdjbGljaycsICcubWVzc2lhLXJpcHBsZS1jbGljaycsIE1lc3NpYS5yaXBwbGVDbGljayk7CgoJCWlmICgnb250b3VjaHN0YXJ0JyBpbiB3aW5kb3cgPT09IGZhbHNlKSB7CgkJCSQoJ2JvZHknKS5vbignbW91c2VlbnRlcicsICcubWVzc2lhLXJpcHBsZS1ob3ZlcicsIE1lc3NpYS5kb1JpcHBsZUhvdmVySW4pOwoJCQkkKCdib2R5Jykub24oJ21vdXNlbGVhdmUnLCAnLm1lc3NpYS1yaXBwbGUtaG92ZXInLCBNZXNzaWEuZG9SaXBwbGVIb3Zlck91dCk7CgkJfQoJfSk7Cn0pKGpRdWVyeSk7CgovKioqLyB9KSwKCi8qKiovICIuL3NyYy9qcy9fY29tcG9uZW50cy9fd29ya2VyX2Rpc3BhdGNoZXIuanMiOgovKiEqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiEqXAogICEqKiogLi9zcmMvanMvX2NvbXBvbmVudHMvX3dvcmtlcl9kaXNwYXRjaGVyLmpzICoqKiEKICBcKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiovCi8qKiovIChmdW5jdGlvbihfX3VudXNlZF93ZWJwYWNrX21vZHVsZSwgX193ZWJwYWNrX2V4cG9ydHNfXywgX193ZWJwYWNrX3JlcXVpcmVfXykgewoKInVzZSBzdHJpY3QiOwpfX3dlYnBhY2tfcmVxdWlyZV9fLnIoX193ZWJwYWNrX2V4cG9ydHNfXyk7Ci8qKgogKiBSZWdpc3RlciBhbmQgc3RhcnQgd2ViIHdvcmtlcnMuCiAqCiAqIEByZXR1cm4gdm9pZC4KICovCmNvbnN0IHdvcmtlckRpc3BhdGNoZXIgPSAoKCkgPT4gewoJaWYgKCdzZXJ2aWNlV29ya2VyJyBpbiBuYXZpZ2F0b3IpIHsKCgkJbmF2aWdhdG9yLnNlcnZpY2VXb3JrZXIuYWRkRXZlbnRMaXN0ZW5lcignbWVzc2FnZScsIChtZXNzYWdlKSA9PiB7CgkJCWNvbnN0IGluZm8gPSBtZXNzYWdlLmRhdGE7CgoJCQlpZiAoaW5mby50eXBlID09PSAnbG9nZ2VyJykgewoJCQkJTWVzc2lhRXh0LmxvZ2dlcltpbmZvLm1ldGhvZF0oaW5mby5ib2R5KTsKCQkJfQoJCX0pOwoKCQlpZiAobWVzc2lhVmFycy5wd2FFbmFibGUgPT09IDEpIHsKCgkJCWNvbnN0CgkJCQljYWNoZUF2YWlsYWJsZSA9ICdjYWNoZXMnIGluIHNlbGYsCgkJCQlpbmRleGVkRGJBdmFpbGFibGUgPSAnaW5kZXhlZERCJyBpbiBzZWxmOwoKCQkJY29uc3QgcHJvbXB0VXBkYXRlID0gKHJlZ2lzdHJhdGlvbikgPT4gewoJCQkJY29uc3QgY2hvaWNlID0gd2luZG93LmNvbmZpcm0obWVzc2lhVmFycy5tZXNzYWdlcy53b3JrZXJVcGRhdGUpOwoKCQkJCWlmIChjaG9pY2UpIHsKCQkJCQluYXZpZ2F0b3Iuc2VydmljZVdvcmtlci5hZGRFdmVudExpc3RlbmVyKCdjb250cm9sbGVyY2hhbmdlJywgKCkgPT4gewoJCQkJCQkvLyBub3RoaW5nIGZvciBub3cuCgkJCQkJfSk7CgkJCQl9CgoJCQkJaWYgKHJlZ2lzdHJhdGlvbiAmJiByZWdpc3RyYXRpb24ud2FpdGluZykgewoJCQkJCXJlZ2lzdHJhdGlvbi53YWl0aW5nLnBvc3RNZXNzYWdlKHsgY29tbWFuZDogJ21lc3NpYVNraXBXYWl0aW5nJyB9KTsKCQkJCX0KCQkJfTsKCgkJCW5hdmlnYXRvcgoJCQkJLnNlcnZpY2VXb3JrZXIKCQkJCS5yZWdpc3RlcihtZXNzaWFWYXJzLndvcmtlclVybCwgeyBzY29wZTogJy8nIH0pCgkJCQkudGhlbigocmVnaXN0cmF0aW9uKSA9PiB7CgkJCQkJTWVzc2lhRXh0LmxvZ2dlci5sb2coYFdvcmtlciByZWdpc3RyYXRpb24gc3VjY2VlZGVkLiBTY29wZSBpcyAke3JlZ2lzdHJhdGlvbi5zY29wZX1gKTsKCgkJCQkJaWYgKGZhbHNlID09PSBpbmRleGVkRGJBdmFpbGFibGUpIHsKCQkJCQkJTWVzc2lhRXh0LmxvZ2dlci53YXJuKCdXb3JrZXIgd2lsbCBza2lwIGNhY2hpbmcgY2F1c2UgdGhlIGJyb3dzZXIgZG9lcyBub3Qgc3VwcG9ydCBpbmRleGVkREIuJyk7CgkJCQkJfSBlbHNlIGlmIChmYWxzZSA9PT0gY2FjaGVBdmFpbGFibGUpIHsKCQkJCQkJTWVzc2lhRXh0LmxvZ2dlci53YXJuKCdXb3JrZXIgd2lsbCBza2lwIGNhY2hpbmcgY2F1c2UgdGhlIGJyb3dzZXIgZG9lcyBub3Qgc3VwcG9ydCBjYWNoZSBzdG9yYWdlLicpOwoJCQkJCX0KCgkJCQkJaWYgKHJlZ2lzdHJhdGlvbi53YWl0aW5nKSB7CgkJCQkJCXByb21wdFVwZGF0ZShyZWdpc3RyYXRpb24pOwoJCQkJCX0KCQkJCX0pCgkJCQkuY2F0Y2goKGVycm9yKSA9PiB7CgkJCQkJTWVzc2lhRXh0LmxvZ2dlci5lcnJvcignV29ya2VyIHJlZ2lzdHJhdGlvbiBmYWlsZWQgd2l0aCAnICsgZXJyb3IpOwoJCQkJfSk7CgoJCX0gZWxzZSB7CgkJCW5hdmlnYXRvcgoJCQkJLnNlcnZpY2VXb3JrZXIKCQkJCS5nZXRSZWdpc3RyYXRpb25zKCkudGhlbigocmVnaXN0cmF0aW9ucykgPT4gewoKCQkJCQlpZiAocmVnaXN0cmF0aW9ucy5sZW5ndGgpIHsKCQkJCQkJZm9yIChsZXQgcmVnaXN0cmF0aW9uIG9mIHJlZ2lzdHJhdGlvbnMpIHsKCQkJCQkJCXJlZ2lzdHJhdGlvbi5hY3RpdmUucG9zdE1lc3NhZ2UoeyBjb21tYW5kOiAnbWVzc2lhVW5yZWdpc3RlclNlbGYnIH0pOwoJCQkJCQl9CgkJCQkJfQoJCQkJfSk7CgkJfQoJfQp9KSgpOwoKLyogaGFybW9ueSBkZWZhdWx0IGV4cG9ydCAqLyBfX3dlYnBhY2tfZXhwb3J0c19fWyJkZWZhdWx0Il0gPSAod29ya2VyRGlzcGF0Y2hlcik7CgovKioqLyB9KSwKCi8qKiovICIuL3NyYy9qcy9mcm9udGVuZC5qcyI6Ci8qISoqKioqKioqKioqKioqKioqKioqKioqKioqKiohKlwKICAhKioqIC4vc3JjL2pzL2Zyb250ZW5kLmpzICoqKiEKICBcKioqKioqKioqKioqKioqKioqKioqKioqKioqKi8KLyoqKi8gKGZ1bmN0aW9uKF9fdW51c2VkX3dlYnBhY2tfbW9kdWxlLCBfX3dlYnBhY2tfZXhwb3J0c19fLCBfX3dlYnBhY2tfcmVxdWlyZV9fKSB7CgoidXNlIHN0cmljdCI7Cl9fd2VicGFja19yZXF1aXJlX18ucihfX3dlYnBhY2tfZXhwb3J0c19fKTsKLyogaGFybW9ueSBpbXBvcnQgKi8gdmFyIF9jb21wb25lbnRzX2xvZ2dlcl9qc19fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMF9fID0gX193ZWJwYWNrX3JlcXVpcmVfXygvKiEgLi9fY29tcG9uZW50cy9fbG9nZ2VyLmpzICovICIuL3NyYy9qcy9fY29tcG9uZW50cy9fbG9nZ2VyLmpzIik7Ci8qIGhhcm1vbnkgaW1wb3J0ICovIHZhciBfY29tcG9uZW50c19sb2dnZXJfanNfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzBfX19kZWZhdWx0ID0gLyojX19QVVJFX18qL19fd2VicGFja19yZXF1aXJlX18ubihfY29tcG9uZW50c19sb2dnZXJfanNfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzBfXyk7Ci8qIGhhcm1vbnkgaW1wb3J0ICovIHZhciBfY29tcG9uZW50c193b3JrZXJfZGlzcGF0Y2hlcl9qc19fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMV9fID0gX193ZWJwYWNrX3JlcXVpcmVfXygvKiEgLi9fY29tcG9uZW50cy9fd29ya2VyX2Rpc3BhdGNoZXIuanMgKi8gIi4vc3JjL2pzL19jb21wb25lbnRzL193b3JrZXJfZGlzcGF0Y2hlci5qcyIpOwovKiBoYXJtb255IGltcG9ydCAqLyB2YXIgX2NvbXBvbmVudHNfcmlwcGxlX2pzX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8yX18gPSBfX3dlYnBhY2tfcmVxdWlyZV9fKC8qISAuL19jb21wb25lbnRzL19yaXBwbGUuanMgKi8gIi4vc3JjL2pzL19jb21wb25lbnRzL19yaXBwbGUuanMiKTsKLyogaGFybW9ueSBpbXBvcnQgKi8gdmFyIF9jb21wb25lbnRzX3JpcHBsZV9qc19fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMl9fX2RlZmF1bHQgPSAvKiNfX1BVUkVfXyovX193ZWJwYWNrX3JlcXVpcmVfXy5uKF9jb21wb25lbnRzX3JpcHBsZV9qc19fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMl9fKTsKLyogaGFybW9ueSBpbXBvcnQgKi8gdmFyIF9jb21wb25lbnRzX2NoZWNrYm94X2pzX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8zX18gPSBfX3dlYnBhY2tfcmVxdWlyZV9fKC8qISAuL19jb21wb25lbnRzL19jaGVja2JveC5qcyAqLyAiLi9zcmMvanMvX2NvbXBvbmVudHMvX2NoZWNrYm94LmpzIik7Ci8qIGhhcm1vbnkgaW1wb3J0ICovIHZhciBfY29tcG9uZW50c19jaGVja2JveF9qc19fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfM19fX2RlZmF1bHQgPSAvKiNfX1BVUkVfXyovX193ZWJwYWNrX3JlcXVpcmVfXy5uKF9jb21wb25lbnRzX2NoZWNrYm94X2pzX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8zX18pOwovKiBoYXJtb255IGltcG9ydCAqLyB2YXIgX2NvbXBvbmVudHNfcmFkaW9fanNfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzRfXyA9IF9fd2VicGFja19yZXF1aXJlX18oLyohIC4vX2NvbXBvbmVudHMvX3JhZGlvLmpzICovICIuL3NyYy9qcy9fY29tcG9uZW50cy9fcmFkaW8uanMiKTsKLyogaGFybW9ueSBpbXBvcnQgKi8gdmFyIF9jb21wb25lbnRzX3JhZGlvX2pzX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV80X19fZGVmYXVsdCA9IC8qI19fUFVSRV9fKi9fX3dlYnBhY2tfcmVxdWlyZV9fLm4oX2NvbXBvbmVudHNfcmFkaW9fanNfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzRfXyk7Ci8qIGhhcm1vbnkgaW1wb3J0ICovIHZhciBfY29tcG9uZW50c19pbnB1dF90ZXh0X2pzX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV81X18gPSBfX3dlYnBhY2tfcmVxdWlyZV9fKC8qISAuL19jb21wb25lbnRzL19pbnB1dF90ZXh0LmpzICovICIuL3NyYy9qcy9fY29tcG9uZW50cy9faW5wdXRfdGV4dC5qcyIpOwovKiBoYXJtb255IGltcG9ydCAqLyB2YXIgX2NvbXBvbmVudHNfaW5wdXRfdGV4dF9qc19fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfNV9fX2RlZmF1bHQgPSAvKiNfX1BVUkVfXyovX193ZWJwYWNrX3JlcXVpcmVfXy5uKF9jb21wb25lbnRzX2lucHV0X3RleHRfanNfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzVfXyk7CgoKCgoKCgooZnVuY3Rpb24gKCQpIHsKCgkvKioKCSAqIE1vYmlsZSBzY2VuYXJpbyBoYW5kbGVyLiBQZXJmb20gYSBzZXQgb2Ygb3BlcmF0aW9uCgkgKiBpZiBwYWdlIGlzIG9uIG1vYmlsZSB2aWV3LgoJICoKCSAqIEByZXR1cm4gdm9pZC4KCSAqLwoJY29uc3QgaXNNb2JpbGUgPSBhc3luYyAoKSA9PiB7CgkJY29uc3QKCQkJJCA9IGpRdWVyeSwKCQkJbW9iaWxlUGxhdGZvcm0gPSAvQW5kcm9pZHx3ZWJPU3xpUGhvbmV8aVBhZHxpUG9kfEJsYWNrQmVycnl8SUVNb2JpbGV8T3BlcmEgTWluaS9pLnRlc3QobmF2aWdhdG9yLnVzZXJBZ2VudCk7CgkJLyoqCgkJICogQ291bnQgc2VsZWN0ZWQgb3B0aW9ucyBpbiBTZWxlY3QyIGFuZCBwcmludCBYIGl0ZW1zIHNlbGVjdGVkLgoJCSAqCgkJICogQHBhcmFtIEhUTUwgc2VsZWN0ICBTZWxlY3QgSFRNTCB0YWcKCQkgKgoJCSAqIEByZXR1cm4gdm9pZAoJCSAqLwoJCWNvbnN0IGNvdW50U2VsZWN0ZWQgPSAoc2VsZWN0KSA9PiB7CgkJCWxldCB3aWRnZXQgPSAkKHNlbGVjdCkuZGF0YSgnc2VsZWN0MicpLAoJCQkJb3B0aW9ucyA9IHdpZGdldC4kZHJvcGRvd24uZmluZCgnbGknKSwKCQkJCXNlbGVjdGlvbiA9IHdpZGdldC4kc2VsZWN0aW9uLAoJCQkJc2VsZWN0ZWQgPSAkKHNlbGVjdCkuc2VsZWN0MignZGF0YScpLAoJCQkJc2VsZWN0ZWRJZHMgPSBzZWxlY3RlZC5tYXAoaW5kZXggPT4gaW5kZXguaWQpLAoJCQkJc2VsZWN0QWxsID0gc2VsZWN0ZWRJZHMuaW5jbHVkZXMoJy0xJyksCgkJCQlyZXN1bHQgPSBzZWxlY3Rpb24uZmluZCgndWwnKSwKCQkJCWNvdW50ID0gc2VsZWN0ZWQubGVuZ3RoOwoKCQkJb3B0aW9ucy5tYXAoKGluZGV4LCB2YWx1ZSkgPT4gewoJCQkJbGV0IG9wdGlvbiA9ICQodmFsdWUpLmZpbmQoJy5vcHRpb24nKSwKCQkJCQljaGVjayA9IG9wdGlvbi5maW5kKCcuY2hlY2tib3gtc2VsZWN0MicpLAoJCQkJCW9wdGlvbklkID0gY2hlY2suZGF0YSgnb3B0aW9uSWQnKTsgLy8gc2V0dGVkIGluIHRlbXBsYXRlUmVzdWx0KCkuCgoJCQkJKHNlbGVjdEFsbCAmJiBvcHRpb25JZCAhPT0gLTEpID8gb3B0aW9uLmFkZENsYXNzKCdvcGFjaXR5LTYnKSA6IG9wdGlvbi5yZW1vdmVDbGFzcygnb3BhY2l0eS02Jyk7CgkJCQkoIXNlbGVjdEFsbCAmJiBvcHRpb25JZCA9PT0gLTEpID8gY2hlY2suYWRkQ2xhc3MoJ2NoZWNrZWQtc2VtaScpIDogY2hlY2sucmVtb3ZlQ2xhc3MoJ2NoZWNrZWQtc2VtaScpOwoJCQkJKHNlbGVjdGVkSWRzLmluY2x1ZGVzKG9wdGlvbklkLnRvU3RyaW5nKCkpKSA/IGNoZWNrLmFkZENsYXNzKCdjaGVja2VkJykgOiBjaGVjay5yZW1vdmVDbGFzcygnY2hlY2tlZCcpOwoJCQl9KTsKCgkJCWlmIChjb3VudCA+IDEpIHsKCQkJCXJlc3VsdC5odG1sKGA8bGkgY2xhc3M9InNlbGVjdDItc2VsZWN0aW9uX19jaG9pY2UiPiR7bWVzc2lhVmFycy5tZXNzYWdlcy5pdGVtc1NlbGVjdGVkLnBsdXJhbC5yZXBsYWNlKCclbicsIGNvdW50KX08L2xpPmApOwoJCQl9CgkJfQoKCQkvLyDQn9GA0L7QstC10YDQutCwIC0g0LzQvtCx0LjQu9GM0L3QvtC1INGD0YHRgtGA0L7QuNGB0YLQstC+INC40LvQuCBQQwoJCWlmICghbW9iaWxlUGxhdGZvcm0pIHsKCgkJCWNvbnN0CgkJCQl0aGVtZVVybCA9IG1lc3NpYVZhcnMudGhlbWVVcmwsCgkJCQltaW4gPSAobWVzc2lhVmFycy5zY3JpcHREZWJ1ZyA9PT0gZmFsc2UpID8gJy5taW4nIDogJyc7CgoJCQkkKCc8bGluay8+JywgewoJCQkJcmVsOiAnc3R5bGVzaGVldCcsCgkJCQl0eXBlOiAndGV4dC9jc3MnLAoJCQkJaHJlZjogYCR7dGhlbWVVcmx9L2luY2x1ZGVzL2Fzc2V0cy9jc3MvbGlicmFyaWVzL3NlbGVjdDIke21pbn0uY3NzYAoJCQl9KS5wcmVwZW5kVG8oJ2hlYWQnKTsKCgkJCXRyeSB7CgkJCQlhd2FpdCBnZXRTY3JpcHQoYCR7dGhlbWVVcmx9L2luY2x1ZGVzL2Fzc2V0cy9qcy9saWJyYXJpZXMvc2VsZWN0MiR7bWlufS5qc2ApOwoKCQkJCSQoJ3NlbGVjdDpub3QoLm1lc3NpYS1maWx0ZXItc2VsZWN0KScpLnNlbGVjdDIoewoJCQkJCWRyb3Bkb3duUGFyZW50OiAkKCdtYWluJyksCgkJCQkJd2lkdGg6ICcxMDAlJywKCQkJCQltaW5pbXVtUmVzdWx0c0ZvclNlYXJjaDogSW5maW5pdHksCgkJCQl9KTsKCQkJCSQoJ3NlbGVjdC5tZXNzaWEtZmlsdGVyLXNlbGVjdDpub3QoW211bHRpcGxlXSknKS5zZWxlY3QyKHsKCQkJCQl3aWR0aDogJzEwMCUnLAoJCQkJCWRyb3Bkb3duUGFyZW50OiAkKCdtYWluJyksCgkJCQkJZXNjYXBlTWFya3VwOiBmdW5jdGlvbiAobWFya3VwLCByKSB7CgkJCQkJCXJldHVybiBtYXJrdXAucmVwbGFjZSgvXFsoXGQrKVxdL2csICc8c3VwPiQxPC9zdXA+Jyk7CgkJCQkJfSwKCQkJCQljbG9zZU9uU2VsZWN0OiB0cnVlLAoJCQkJCS8vYWxsb3dDbGVhcjogdHJ1ZSwgLy9idWdneQoJCQkJfSk7CgkJCQkkKCdzZWxlY3QubWVzc2lhLWZpbHRlci1zZWxlY3RbbXVsdGlwbGVdJykuc2VsZWN0Mih7CgkJCQkJd2lkdGg6ICcxMDAlJywKCQkJCQlkcm9wZG93blBhcmVudDogJCgnbWFpbicpLAoJCQkJCWVzY2FwZU1hcmt1cDogZnVuY3Rpb24gKG1hcmt1cCwgcikgewoJCQkJCQlyZXR1cm4gbWFya3VwLnJlcGxhY2UoL1xbKFxkKylcXS9nLCAnPHN1cD4kMTwvc3VwPicpOwoJCQkJCX0sCgkJCQkJY2xvc2VPblNlbGVjdDogZmFsc2UsCgkJCQkJLy9hbGxvd0NsZWFyOiB0cnVlLCAvL2J1Z2d5CgkJCQkJdGVtcGxhdGVSZXN1bHQ6IGZ1bmN0aW9uICh0YWcsIGNvbnRhaW5lcikgewoJCQkJCQl2YXIgY2hlY2tlZCA9ICcnLAoJCQkJCQkJb3BhY2l0eV82ID0gJycsCgkJCQkJCQljaGVja2VkX3NlbWkgPSAnJywKCQkJCQkJCXNlbGVjdCA9ICQodGFnLmVsZW1lbnQpLnBhcmVudCgnc2VsZWN0JyksCgkJCQkJCQlzZWxlY3RlZCA9IHNlbGVjdC5zZWxlY3QyKCdkYXRhJyk7CgoJCQkJCQlpZiAoc2VsZWN0LnByb3AoJ211bHRpcGxlJykgPT09IGZhbHNlKSByZXR1cm4gdGFnLnRleHQ7CgkJCQkJCWlmICh0eXBlb2Ygc2VsZWN0ZWQgIT09ICdvYmplY3QnKSByZXR1cm4gdGFnLnRleHQ7CgoJCQkJCQl2YXIgc2VsZWN0ZWRJZHMgPSBzZWxlY3RlZC5tYXAoaW5kZXggPT4gaW5kZXguaWQpLAoJCQkJCQkJc2VsZWN0QWxsID0gc2VsZWN0ZWRJZHMuaW5jbHVkZXMoJy0xJyk7CgoJCQkJCQlvcGFjaXR5XzYgPSAoc2VsZWN0QWxsICYmIHRhZy5pZCAhPT0gJy0xJykgPyAnIG9wYWNpdHktNicgOiAnJzsKCQkJCQkJY2hlY2tlZF9zZW1pID0gKCFzZWxlY3RBbGwgJiYgdGFnLmlkID09PSAnLTEnKSA/ICcgY2hlY2tlZC1zZW1pJyA6ICcnOwoJCQkJCQljaGVja2VkID0gKHNlbGVjdGVkSWRzLmluY2x1ZGVzKHRhZy5pZCkpID8gJyBjaGVja2VkJyA6ICcnOwoKCQkJCQkJcmV0dXJuICQoYDxkaXYgY2xhc3M9ImQtZmxleCBhbGlnbi1pdGVtcy1jZW50ZXIgZmFkZSBzaG93IG9wdGlvbiR7b3BhY2l0eV82fSI+CgkJCQkJCQk8c3BhbiBjbGFzcz0iZmxleC1ncm93LTEiPiR7dGFnLnRleHR9PC9zcGFuPgoJCQkJCQkJPHNwYW4gZGF0YS1vcHRpb24taWQ9IiR7dGFnLmlkfSIgY2xhc3M9ImNoZWNrYm94LXNlbGVjdDIgZmxleC1zaHJpbmstMCR7Y2hlY2tlZH0ke2NoZWNrZWRfc2VtaX0iPjwvc3Bhbj4KCQkJCQkJPC9kaXY+YCk7CgkJCQkJfSwKCQkJCQl0ZW1wbGF0ZVNlbGVjdGlvbjogZnVuY3Rpb24gKHRhZywgY29udGFpbmVyKSB7CgkJCQkJCWlmICgnbG9ja2VkJyA9PT0gJCh0YWcuZWxlbWVudCkuYXR0cignbG9ja2VkJykpIHsKCQkJCQkJCSQoY29udGFpbmVyKS5hZGRDbGFzcygnbG9ja2VkLXRhZycpOwoJCQkJCQkJdGFnLmxvY2tlZCA9IHRydWU7CgkJCQkJCX0KCQkJCQkJcmV0dXJuIHRhZy50ZXh0OwoJCQkJCX0sCgkJCQl9KTsKCgkJCQkkKCdzZWxlY3QubWVzc2lhLWZpbHRlci1zZWxlY3RbbXVsdGlwbGVdJykuZWFjaChmdW5jdGlvbiAoKSB7CgkJCQkJY291bnRTZWxlY3RlZCh0aGlzKTsKCQkJCX0pOwoJCQkJJCgnLnNlbGVjdDIuc2VsZWN0Mi1jb250YWluZXInKS5maW5kKCcuc2VsZWN0Mi1zZWFyY2hfX2ZpZWxkOm5vdChbcGxhY2Vob2xkZXI9IiJdKScpLmNzcygnd2lkdGgnLCAnJyk7CgoJCQkJJCgnc2VsZWN0Lm1lc3NpYS1maWx0ZXItc2VsZWN0W211bHRpcGxlXScpLm9uKCdjaGFuZ2UnLCBmdW5jdGlvbiAoKSB7CgkJCQkJY291bnRTZWxlY3RlZCh0aGlzKTsKCQkJCX0pOwoJCQl9IGNhdGNoIChlcnJvcikgewoJCQkJY29uc3QgYm9keSA9IHsKCQkJCQltZXNzYWdlOiAnRXJyb3IgbG9hZGluZyBTZWxlY3QyIGFzc2V0cycsCgkJCQkJZXJyb3I6IGVycm9yLAoJCQkJfQoJCQkJTWVzc2lhRXh0LmxvZ2dlci5lcnJvcihib2R5KTsKCQkJfQoJCX0KCX07CgoJLyoqCgkgKiBDb29raWUgZ2V0dGVyLgoJICoKCSAqIEBwYXJhbSB7c3RyaW5nfSBuYW1lIENvb2tpZSBuYW1lLgoJICoKCSAqIEByZXR1cm4gb2JqZWN0fHN0cmluZwoJICovCgljb25zdCBnZXRDb29raWUgPSAobmFtZSkgPT4gewoJCWxldCBtYXRjaGVzID0gZG9jdW1lbnQuY29va2llLm1hdGNoKG5ldyBSZWdFeHAoCgkJCSIoPzpefDsgKSIgKyBuYW1lLnJlcGxhY2UoLyhbXC4kPyp8e31cKFwpXFtcXVxcXC9cK15dKS9nLCAnXFwkMScpICsgIj0oW147XSopIgoJCSkpOwoJCXJldHVybiBtYXRjaGVzID8gSlNPTi5wYXJzZShkZWNvZGVVUklDb21wb25lbnQobWF0Y2hlc1sxXSkpIDogdW5kZWZpbmVkOwoJfQoKCS8qKgoJICogQ29va2llIHNldHRlci4KCSAqCgkgKiBAcGFyYW0ge3N0cmluZ30gbmFtZSAgICBDb29raWUgbmFtZS4KCSAqIEBwYXJhbSB7c3RyaW5nfSB2YWx1ZSAgIENvb2tpZSB2YWx1ZS4KCSAqIEBwYXJhbSB7b2JqZWN0fSBvcHRpb25zIENvb2tpZSBleHRhciBkYXRhLgoJICoKCSAqIEByZXR1cm4gdm9pZC4KCSAqLwoJY29uc3Qgc2V0Q29va2llID0gKG5hbWUsIHZhbHVlLCBvcHRpb25zID0ge30pID0+IHsKCgkJb3B0aW9ucyA9IHsKCQkJcGF0aDogJy8nLAoJCQkuLi5vcHRpb25zCgkJfTsKCgkJaWYgKG9wdGlvbnMuZXhwaXJlcyBpbnN0YW5jZW9mIERhdGUpIHsKCQkJb3B0aW9ucy5leHBpcmVzID0gb3B0aW9ucy5leHBpcmVzLnRvVVRDU3RyaW5nKCk7CgkJfQoKCQlsZXQgdXBkYXRlZENvb2tpZSA9IGVuY29kZVVSSUNvbXBvbmVudChuYW1lKSArICI9IiArIGVuY29kZVVSSUNvbXBvbmVudCh2YWx1ZSk7CgoJCWZvciAobGV0IG9wdGlvbktleSBpbiBvcHRpb25zKSB7CgkJCXVwZGF0ZWRDb29raWUgKz0gIjsgIiArIG9wdGlvbktleTsKCQkJbGV0IG9wdGlvblZhbHVlID0gb3B0aW9uc1tvcHRpb25LZXldOwoJCQlpZiAob3B0aW9uVmFsdWUgIT09IHRydWUpIHsKCQkJCXVwZGF0ZWRDb29raWUgKz0gIj0iICsgb3B0aW9uVmFsdWU7CgkJCX0KCQl9CgoJCWRvY3VtZW50LmNvb2tpZSA9IHVwZGF0ZWRDb29raWU7Cgl9CgoJLyoqCgkgKiBDdXN0b20gc21vb3RoIHNjcm9sbGVyLgoJICoKCSAqIEBwYXJhbSB7bnVtYmVyfSBvZmZzZXRUb3AgUG9zaXRpb24gdG8gc2Nyb2xsIHRvLgoJICoKCSAqIEByZXR1cm4gdm9pZC4KCSAqLwoJY29uc3Qgc2Nyb2xsVG8gPSAob2Zmc2V0VG9wKSA9PiB7CgkJY29uc3QgJCA9IGpRdWVyeSwKCQkJY3VycmVudE9mZnNldFRvcCA9IHdpbmRvdy5wYWdlWU9mZnNldCB8fCBkb2N1bWVudC5kb2N1bWVudEVsZW1lbnQuc2Nyb2xsVG9wLAoJCQlzcGVlZCA9IE1hdGguYWJzKChvZmZzZXRUb3AgLSBjdXJyZW50T2Zmc2V0VG9wKSAvIDMpOyAvLyAzcHggcGVyIHNlY29uZAoKCQkkKCdib2R5LGh0bWwnKS5hbmltYXRlKHsKCQkJc2Nyb2xsVG9wOiBvZmZzZXRUb3AKCQl9LCBzcGVlZCk7Cgl9OwoKCS8qKgoJICogSW5zdGFudGlhdGUgcmFuZ2UgcGx1Z2luIG9uIG5vZGVzLgoJICoKCSAqIEBwYXJhbSB7b2JqZWN0fSBlbGVtZW50cyBqUXVlcnkgZWxlbWVudHMgc2V0IHRvIGNyZWF0IHJhbmdlIGZyb20uCgkgKgoJICogQHJldHVybiB2b2lkLgoJICovCgljb25zdCBkb1JhbmdlID0gKGVsZW1lbnRzKSA9PiB7CgoJCWVsZW1lbnRzLmlvblJhbmdlU2xpZGVyKHsKCQkJc2tpbjogJ3JvdW5kJywKCQkJLy9wcmV0dGlmeV9lbmFibGVkOiB0cnVlLAoJCQkvL3ByZXR0aWZ5X3NlcGFyYXRvcjogJycsCgkJCWZvcmNlX2VkZ2VzOiB0cnVlLAoJCQlleHRyYV9jbGFzc2VzOiAnZm9yY2VkLWVkZ2VzLXRydWUnLAoJCQlvbkZpbmlzaDogZnVuY3Rpb24gKHJhbmdlKSB7CgkJCQlsZXQgZXZlbnQgPSBuZXcgRXZlbnQoJ2NoYW5nZUZpbmlzaCcpOwoJCQkJcmFuZ2UuaW5wdXQuZ2V0KDApLmRpc3BhdGNoRXZlbnQoZXZlbnQpOwoJCQl9LAoJCQlvblVwZGF0ZTogZnVuY3Rpb24gKHJhbmdlKSB7CgkJCQlsZXQgZXZlbnQgPSBuZXcgRXZlbnQoJ3VwZGF0ZUZpbmlzaCcpOwoJCQkJcmFuZ2UuaW5wdXQuZ2V0KDApLmRpc3BhdGNoRXZlbnQoZXZlbnQpOwoJCQl9CgkJfSk7CgoJCWZvciAobGV0IGkgPSAwOyBpIDwgZWxlbWVudHMubGVuZ3RoOyBpKyspIHsKCQkJY29uc3QKCQkJCXJhbmdlID0gJChlbGVtZW50c1tpXSksCgkJCQlkYXRhID0gcmFuZ2UuZGF0YSgpLAoJCQkJc2xpZGVyID0gZGF0YS5pb25SYW5nZVNsaWRlcjsKCgkJCXNsaWRlci51cGRhdGUoewoJCQkJcHJldHRpZnk6IGZ1bmN0aW9uIChudW1iZXIpIHsKCQkJCQlpZiAoIWRhdGEucHJldHRpZnlFbmFibGVkKSB7CgkJCQkJCXJldHVybiBudW1iZXI7CgkJCQkJfQoJCQkJCWxldCBuID0gbnVtYmVyLnRvRml4ZWQoZGF0YS5wcmVjaXNpb24pLnRvU3RyaW5nKCkucmVwbGFjZSgvKFxkezEsM30oPz0oPzpcZFxkXGQpKyg/IVxkKSkpL2csIGAkMSR7ZGF0YS5wcmV0dGlmeVNlcGFyYXRvcn1gKTsKCQkJCQlpZiAoZGF0YS5wcmVjaXNpb24gPiAwKSBuID0gbi5yZXBsYWNlKC9cLihcZCspJC9nLCBgJHtkYXRhLmRlY2ltYWxTZXBhcmF0b3B9JDFgKTsKCgkJCQkJcmV0dXJuIG47CgkJCQl9LAoJCQl9KTsKCQkJc2xpZGVyLnByZXZfdmFsdWUgPSByYW5nZS52YWwoKTsKCQl9Cgl9OwoKCS8qKgoJICogTG9hZCByZW1vdGUgc3JjLCBhcHBlbmQgdG8gRE9NLgoJICoKCSAqIEBwYXJhbSB7c3RyaW5nfSB1cmwgU291cmNlIFVSTC4KCSAqCgkgKiBAcmV0dXJuIFByb21pc2UuCgkgKi8KCWNvbnN0IGdldFNjcmlwdCA9ICh1cmwpID0+IHsKCQlyZXR1cm4gbmV3IFByb21pc2UoKHJlc29sdmUsIHJlamVjdCkgPT4gewoJCQlsZXQgbmV3U2NyaXB0ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnc2NyaXB0Jyk7CgkJCW5ld1NjcmlwdC5vbmVycm9yID0gcmVqZWN0OwoJCQluZXdTY3JpcHQub25sb2FkID0gcmVzb2x2ZTsKCQkJZG9jdW1lbnQuaGVhZC5hcHBlbmRDaGlsZChuZXdTY3JpcHQpOwoJCQluZXdTY3JpcHQuc3JjID0gdXJsOwoJCX0pOwoJfQoKCS8qKgoJICogQWN0aW9ucyBvbiBkb2N1bWVudC5yZWFkeSBldmVudC4KCSAqCgkgKiBAcmV0dXJuIHZvaWQKCSAqLwoJY29uc3QgaW5pdEFjdGlvbnMgPSAoKSA9PiB7CgoJCWNvbnN0IHRvZ2dsZUl0ZW1zTWVudSA9IGZ1bmN0aW9uIChlKSB7CgkJCWlmICgkKHdpbmRvdykud2lkdGgoKSA8PSAnNzY3JykgewoJCQkJZS5wcmV2ZW50RGVmYXVsdCgpCgkJCQkkKHRoaXMpLnNpYmxpbmdzKCIuc3ViLW1lbnUiKS5zbGlkZVRvZ2dsZSgzMDApOwoJCQkJJCh0aGlzKS50b2dnbGVDbGFzcygiYWN0aXZlIik7CgkJCX0KCQl9OwoKCQljb25zdCBzZXR1cE5hdmlnYXRpb24gPSBmdW5jdGlvbiAoKSB7CgkJCSQoJy5uYXZpZ2F0aW9uLnBhZ2luYXRpb24gLnBhZ2UtbnVtYmVycycpLmFkZENsYXNzKCdtZXNzaWEtcmlwcGxlLWNsaWNrIG1lc3NpYS1idG4nKTsKCQl9OwoKCQljb25zdCB1cGRhdGVTZWxlY3REcm9wID0gZnVuY3Rpb24gKCkgewoJCQl2YXIgc2VsZWN0ID0gJCgnLnNlbGVjdDIuc2VsZWN0Mi1jb250YWluZXItLW9wZW4gLnNlbGVjdDItc2VsZWN0aW9uJyk7CgoJCQlpZiAoc2VsZWN0Lmxlbmd0aCA9PT0gMCkgcmV0dXJuOwoKCQkJdmFyIHNlbGVjdElkID0gJCgnLnNlbGVjdDIuc2VsZWN0Mi1jb250YWluZXItLW9wZW4gLnNlbGVjdDItc2VsZWN0aW9uJykuYXR0cignYXJpYS1vd25zJykucmVwbGFjZSgnc2VsZWN0Mi0nLCAnJykucmVwbGFjZSgnLXJlc3VsdHMnLCAnJyk7CgkJCXZhciBzZWxlY3QgPSAkKGBzZWxlY3RbZGF0YS1zZWxlY3QyLWlkPScke3NlbGVjdElkfSddYCk7CgoJCQlzZWxlY3Quc2VsZWN0MignY2xvc2UnKTsKCQkJc2VsZWN0LnNlbGVjdDIoJ29wZW4nKTsKCQl9OwoKCQkkKCcubWVzc2lhLW5hdi1tZW51IC5tZW51LWl0ZW0ubWVudS1pdGVtLWhhcy1jaGlsZHJlbiA+IC5tZW51LWl0ZW0tZXhwYW5kLWNvbGxhcHNlJykub24oJ2NsaWNrJywgdG9nZ2xlSXRlbXNNZW51KTsKCQkkKCcubGlzdGluZycpLm9uKCdsaXN0aW5nVXBkYXRlZCcsIHVwZGF0ZVNlbGVjdERyb3ApOwoKCQlzZXR1cE5hdmlnYXRpb24oKTsKCQlpc01vYmlsZSgpOwoJfQoKCV9fd2VicGFja19yZXF1aXJlX18uZy5NZXNzaWFFeHQgPSBfX3dlYnBhY2tfcmVxdWlyZV9fLmcuTWVzc2lhRXh0IHx8IHt9OwoJX193ZWJwYWNrX3JlcXVpcmVfXy5nLk1lc3NpYUV4dCA9IHsKCQkuLi5fX3dlYnBhY2tfcmVxdWlyZV9fLmcuTWVzc2lhRXh0LAoJCS4uLnsKCQkJaXNNb2JpbGU6IGlzTW9iaWxlLAoJCQlnZXRDb29raWU6IGdldENvb2tpZSwKCQkJc2V0Q29va2llOiBzZXRDb29raWUsCgkJCXNjcm9sbFRvOiBzY3JvbGxUbywKCQkJZG9SYW5nZTogZG9SYW5nZSwKCQkJaXNNb2JpbGU6IGlzTW9iaWxlLAoJCQlnZXRTY3JpcHQ6IGdldFNjcmlwdCwKCQl9Cgl9OwoKCSQoZnVuY3Rpb24gKCkgewoJCWluaXRBY3Rpb25zKCk7Cgl9KTsKCn0pKGpRdWVyeSk7CgovKioqLyB9KQoKLyoqKioqKi8gCX0pOwovKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqLwovKioqKioqLyAJLy8gVGhlIG1vZHVsZSBjYWNoZQovKioqKioqLyAJdmFyIF9fd2VicGFja19tb2R1bGVfY2FjaGVfXyA9IHt9OwovKioqKioqLyAJCi8qKioqKiovIAkvLyBUaGUgcmVxdWlyZSBmdW5jdGlvbgovKioqKioqLyAJZnVuY3Rpb24gX193ZWJwYWNrX3JlcXVpcmVfXyhtb2R1bGVJZCkgewovKioqKioqLyAJCS8vIENoZWNrIGlmIG1vZHVsZSBpcyBpbiBjYWNoZQovKioqKioqLyAJCXZhciBjYWNoZWRNb2R1bGUgPSBfX3dlYnBhY2tfbW9kdWxlX2NhY2hlX19bbW9kdWxlSWRdOwovKioqKioqLyAJCWlmIChjYWNoZWRNb2R1bGUgIT09IHVuZGVmaW5lZCkgewovKioqKioqLyAJCQlyZXR1cm4gY2FjaGVkTW9kdWxlLmV4cG9ydHM7Ci8qKioqKiovIAkJfQovKioqKioqLyAJCS8vIENyZWF0ZSBhIG5ldyBtb2R1bGUgKGFuZCBwdXQgaXQgaW50byB0aGUgY2FjaGUpCi8qKioqKiovIAkJdmFyIG1vZHVsZSA9IF9fd2VicGFja19tb2R1bGVfY2FjaGVfX1ttb2R1bGVJZF0gPSB7Ci8qKioqKiovIAkJCS8vIG5vIG1vZHVsZS5pZCBuZWVkZWQKLyoqKioqKi8gCQkJLy8gbm8gbW9kdWxlLmxvYWRlZCBuZWVkZWQKLyoqKioqKi8gCQkJZXhwb3J0czoge30KLyoqKioqKi8gCQl9OwovKioqKioqLyAJCi8qKioqKiovIAkJLy8gRXhlY3V0ZSB0aGUgbW9kdWxlIGZ1bmN0aW9uCi8qKioqKiovIAkJX193ZWJwYWNrX21vZHVsZXNfX1ttb2R1bGVJZF0uY2FsbChtb2R1bGUuZXhwb3J0cywgbW9kdWxlLCBtb2R1bGUuZXhwb3J0cywgX193ZWJwYWNrX3JlcXVpcmVfXyk7Ci8qKioqKiovIAkKLyoqKioqKi8gCQkvLyBSZXR1cm4gdGhlIGV4cG9ydHMgb2YgdGhlIG1vZHVsZQovKioqKioqLyAJCXJldHVybiBtb2R1bGUuZXhwb3J0czsKLyoqKioqKi8gCX0KLyoqKioqKi8gCQovKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqLwovKioqKioqLyAJLyogd2VicGFjay9ydW50aW1lL2NvbXBhdCBnZXQgZGVmYXVsdCBleHBvcnQgKi8KLyoqKioqKi8gCSFmdW5jdGlvbigpIHsKLyoqKioqKi8gCQkvLyBnZXREZWZhdWx0RXhwb3J0IGZ1bmN0aW9uIGZvciBjb21wYXRpYmlsaXR5IHdpdGggbm9uLWhhcm1vbnkgbW9kdWxlcwovKioqKioqLyAJCV9fd2VicGFja19yZXF1aXJlX18ubiA9IGZ1bmN0aW9uKG1vZHVsZSkgewovKioqKioqLyAJCQl2YXIgZ2V0dGVyID0gbW9kdWxlICYmIG1vZHVsZS5fX2VzTW9kdWxlID8KLyoqKioqKi8gCQkJCWZ1bmN0aW9uKCkgeyByZXR1cm4gbW9kdWxlWydkZWZhdWx0J107IH0gOgovKioqKioqLyAJCQkJZnVuY3Rpb24oKSB7IHJldHVybiBtb2R1bGU7IH07Ci8qKioqKiovIAkJCV9fd2VicGFja19yZXF1aXJlX18uZChnZXR0ZXIsIHsgYTogZ2V0dGVyIH0pOwovKioqKioqLyAJCQlyZXR1cm4gZ2V0dGVyOwovKioqKioqLyAJCX07Ci8qKioqKiovIAl9KCk7Ci8qKioqKiovIAkKLyoqKioqKi8gCS8qIHdlYnBhY2svcnVudGltZS9kZWZpbmUgcHJvcGVydHkgZ2V0dGVycyAqLwovKioqKioqLyAJIWZ1bmN0aW9uKCkgewovKioqKioqLyAJCS8vIGRlZmluZSBnZXR0ZXIgZnVuY3Rpb25zIGZvciBoYXJtb255IGV4cG9ydHMKLyoqKioqKi8gCQlfX3dlYnBhY2tfcmVxdWlyZV9fLmQgPSBmdW5jdGlvbihleHBvcnRzLCBkZWZpbml0aW9uKSB7Ci8qKioqKiovIAkJCWZvcih2YXIga2V5IGluIGRlZmluaXRpb24pIHsKLyoqKioqKi8gCQkJCWlmKF9fd2VicGFja19yZXF1aXJlX18ubyhkZWZpbml0aW9uLCBrZXkpICYmICFfX3dlYnBhY2tfcmVxdWlyZV9fLm8oZXhwb3J0cywga2V5KSkgewovKioqKioqLyAJCQkJCU9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBrZXksIHsgZW51bWVyYWJsZTogdHJ1ZSwgZ2V0OiBkZWZpbml0aW9uW2tleV0gfSk7Ci8qKioqKiovIAkJCQl9Ci8qKioqKiovIAkJCX0KLyoqKioqKi8gCQl9OwovKioqKioqLyAJfSgpOwovKioqKioqLyAJCi8qKioqKiovIAkvKiB3ZWJwYWNrL3J1bnRpbWUvZ2xvYmFsICovCi8qKioqKiovIAkhZnVuY3Rpb24oKSB7Ci8qKioqKiovIAkJX193ZWJwYWNrX3JlcXVpcmVfXy5nID0gKGZ1bmN0aW9uKCkgewovKioqKioqLyAJCQlpZiAodHlwZW9mIGdsb2JhbFRoaXMgPT09ICdvYmplY3QnKSByZXR1cm4gZ2xvYmFsVGhpczsKLyoqKioqKi8gCQkJdHJ5IHsKLyoqKioqKi8gCQkJCXJldHVybiB0aGlzIHx8IG5ldyBGdW5jdGlvbigncmV0dXJuIHRoaXMnKSgpOwovKioqKioqLyAJCQl9IGNhdGNoIChlKSB7Ci8qKioqKiovIAkJCQlpZiAodHlwZW9mIHdpbmRvdyA9PT0gJ29iamVjdCcpIHJldHVybiB3aW5kb3c7Ci8qKioqKiovIAkJCX0KLyoqKioqKi8gCQl9KSgpOwovKioqKioqLyAJfSgpOwovKioqKioqLyAJCi8qKioqKiovIAkvKiB3ZWJwYWNrL3J1bnRpbWUvaGFzT3duUHJvcGVydHkgc2hvcnRoYW5kICovCi8qKioqKiovIAkhZnVuY3Rpb24oKSB7Ci8qKioqKiovIAkJX193ZWJwYWNrX3JlcXVpcmVfXy5vID0gZnVuY3Rpb24ob2JqLCBwcm9wKSB7IHJldHVybiBPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwob2JqLCBwcm9wKTsgfQovKioqKioqLyAJfSgpOwovKioqKioqLyAJCi8qKioqKiovIAkvKiB3ZWJwYWNrL3J1bnRpbWUvbWFrZSBuYW1lc3BhY2Ugb2JqZWN0ICovCi8qKioqKiovIAkhZnVuY3Rpb24oKSB7Ci8qKioqKiovIAkJLy8gZGVmaW5lIF9fZXNNb2R1bGUgb24gZXhwb3J0cwovKioqKioqLyAJCV9fd2VicGFja19yZXF1aXJlX18uciA9IGZ1bmN0aW9uKGV4cG9ydHMpIHsKLyoqKioqKi8gCQkJaWYodHlwZW9mIFN5bWJvbCAhPT0gJ3VuZGVmaW5lZCcgJiYgU3ltYm9sLnRvU3RyaW5nVGFnKSB7Ci8qKioqKiovIAkJCQlPYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgU3ltYm9sLnRvU3RyaW5nVGFnLCB7IHZhbHVlOiAnTW9kdWxlJyB9KTsKLyoqKioqKi8gCQkJfQovKioqKioqLyAJCQlPYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgJ19fZXNNb2R1bGUnLCB7IHZhbHVlOiB0cnVlIH0pOwovKioqKioqLyAJCX07Ci8qKioqKiovIAl9KCk7Ci8qKioqKiovIAkKLyoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKi8KdmFyIF9fd2VicGFja19leHBvcnRzX18gPSB7fTsKLy8gVGhpcyBlbnRyeSBuZWVkIHRvIGJlIHdyYXBwZWQgaW4gYW4gSUlGRSBiZWNhdXNlIGl0IG5lZWQgdG8gYmUgaW4gc3RyaWN0IG1vZGUuCiFmdW5jdGlvbigpIHsKInVzZSBzdHJpY3QiOwovKiEqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiohKlwKICAhKioqIC4vc3JjL2VudHJpZXMvZW50cnktZnJvbnRlbmQuanMgKioqIQogIFwqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiovCl9fd2VicGFja19yZXF1aXJlX18ucihfX3dlYnBhY2tfZXhwb3J0c19fKTsKLyogaGFybW9ueSBpbXBvcnQgKi8gdmFyIF9zY3NzX2Zyb250ZW5kX2Zyb250ZW5kX3Njc3NfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzBfXyA9IF9fd2VicGFja19yZXF1aXJlX18oLyohIC4uL3Njc3MvX2Zyb250ZW5kL2Zyb250ZW5kLnNjc3MgKi8gIi4vc3JjL3Njc3MvX2Zyb250ZW5kL2Zyb250ZW5kLnNjc3MiKTsKLyogaGFybW9ueSBpbXBvcnQgKi8gdmFyIF9qc19jb21wb25lbnRzX2Jvb3RzdHJhcF9qc19fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMV9fID0gX193ZWJwYWNrX3JlcXVpcmVfXygvKiEgLi4vanMvX2NvbXBvbmVudHMvX2Jvb3RzdHJhcC5qcyAqLyAiLi9zcmMvanMvX2NvbXBvbmVudHMvX2Jvb3RzdHJhcC5qcyIpOwovKiBoYXJtb255IGltcG9ydCAqLyB2YXIgX2pzX2NvbXBvbmVudHNfYm9vdHN0cmFwX2pzX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8xX19fZGVmYXVsdCA9IC8qI19fUFVSRV9fKi9fX3dlYnBhY2tfcmVxdWlyZV9fLm4oX2pzX2NvbXBvbmVudHNfYm9vdHN0cmFwX2pzX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8xX18pOwovKiBoYXJtb255IGltcG9ydCAqLyB2YXIgX2pzX2Zyb250ZW5kX2pzX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8yX18gPSBfX3dlYnBhY2tfcmVxdWlyZV9fKC8qISAuLi9qcy9mcm9udGVuZC5qcyAqLyAiLi9zcmMvanMvZnJvbnRlbmQuanMiKTsKLy8gU3R5bGVzCgoKLy8gU2NyaXB0cwogLy8gd2UgbmVlZCBfYm9vdHN0cmFwLmpzIGFzIHNlcGFyYXRlIGZpbGUKCn0oKTsKLyoqKioqKi8gfSkoKQo7Ci8vIyBzb3VyY2VNYXBwaW5nVVJMPWRhdGE6YXBwbGljYXRpb24vanNvbjtjaGFyc2V0PXV0Zi04O2Jhc2U2NCxleUoyWlhKemFXOXVJam96TENKbWFXeGxJam9pYVc1amJIVmtaWE12WVhOelpYUnpMMnB6TDJaeWIyNTBaVzVrTG1weklpd2liV0Z3Y0dsdVozTWlPaUk3T3pzN096czdPenM3T3pzN096czdPenM3T3pzN096czdPenM3T3p0QlFVRXJSRHRCUVVOT08wRkJRMUU3UVVGRFNqdEJRVU5GTzBGQlExSTdRVUZEV2p0QlFVTnJRanRCUVVOc1FqdEJRVU5uUWp0QlFVTldPMEZCUTAwN1FVRkRSRHRCUVVOd1FqdEJRVU5zUXp0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUczdRVUZGUVR0QlFVTkJMSE5GUVVGelJTeGhRVUZoTzBGQlEyNUdPMEZCUTBFN08wRkJSVUU3UVVGRFFUdEJRVU5CTEVkQlFVYzdRVUZEU0RzN1FVRkZUenRCUVVOUU8wRkJRMEU3UVVGRFFUczdRVUZGUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdPMEZCUlVFN1FVRkRRVHRCUVVOQk8wRkJRMEVzSzBKQlFTdENPMEZCUXk5Q0xIVkNRVUYxUWp0QlFVTjJRanRCUVVOQk8wRkJRMEU3UVVGRFFTeFBRVUZQTzBGQlExQXNiMEpCUVc5Q08wRkJRM0JDTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTEhkRFFVRjNRenRCUVVONFF6dEJRVU5CTEhGQ1FVRnhRaXh0UlVGQlV5eGpRVUZqTERKRlFVRnBRaXg1UTBGQmVVTXNNa1ZCUVdsQ08wRkJRM1pJTEd0Q1FVRnJRaXd5UlVGQmFVSTdRVUZEYmtNc1YwRkJWenRCUVVOWU96dEJRVVZCTEN0Q1FVRXJRaXh2UlVGQll5eERRVUZETEdsRlFVRlhMSGxFUVVGNVJEczdRVUZGYkVnN1FVRkRRVHRCUVVOQkxGTkJRVk1zUjBGQlJ6dEJRVU5hT3p0QlFVVkJMRmxCUVZrc1NVRkJjVU03UVVGRGFrUXNNRUpCUVRCQ0xEaEVRVUZSTzBGQlEyeERPMEZCUTBFN1FVRkRRU3hYUVVGWE8wRkJRMWdzVlVGQlZTeDFSVUZCYVVJN08wRkJSVE5DTEdOQlFXTXNjMFZCUVdkQ0xEaENRVUU0UWl3eVEwRkJTVHRCUVVOb1JUdEJRVU5CTzBGQlEwRTdRVUZEUVN4aFFVRmhPenRCUVVWaU8wRkJRMEU3UVVGRFFUdEJRVU5CT3p0QlFVVkJMR3REUVVGclF5d3dSVUZCWjBJN1FVRkRiRVE3UVVGRFFUdEJRVU5CTzBGQlEwRXNlVVJCUVhsRU8wRkJRM3BFT3pzN1FVRkhRVHRCUVVOQk8wRkJRMEVzVjBGQlZ6dEJRVU5ZTzBGQlEwRTdRVUZEUVRzN1FVRkZRVHRCUVVOQk8wRkJRMEVzVDBGQlR6dEJRVU5RTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUczdRVUZGUVR0QlFVTkJPMEZCUTBFc05rTkJRVFpETzBGQlF6ZERPenRCUVVWQk8wRkJRMEVzWTBGQll5eEpRVUZ4UXp0QlFVTnVSRHRCUVVOQk96dEJRVVZCTzBGQlEwRXNWVUZCVlRzN08wRkJSMVk3UVVGRFFTeHhRa0ZCY1VJc01FVkJRV2RDTEZsQlFWa3NNRVZCUVdVN1FVRkRhRVVzYTBKQlFXdENMSGRGUVVGaE8wRkJReTlDTEZkQlFWYzdRVUZEV0R0QlFVTkJPMEZCUTBFN1FVRkRRVHM3UVVGRlFUdEJRVU5CTEcxRVFVRnRSRHRCUVVOdVJEdEJRVU5CTzBGQlEwRXNOa05CUVRaRExFdEJRVXM3TzBGQlJXeEVPMEZCUTBFc2MwVkJRWE5GTzBGQlEzUkZMRk5CUVZNN1FVRkRWRHM3UVVGRlFTdzBRa0ZCTkVJc2RVTkJRWFZETzBGQlEyNUZMR05CUVdNc1NVRkJjVU03UVVGRGJrUTdPMEZCUlVFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUczdRVUZGUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk96dEJRVVZCTzBGQlEwRTdRVUZEUVR0QlFVTkJMR2RGUVVGblJUdEJRVU5vUlRzN1FVRkZRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVN4aFFVRmhPMEZCUTJJN1FVRkRRVHRCUVVOQkxFOUJRVTg3UVVGRFVEdEJRVU5CTzBGQlEwRXNZMEZCWXl3clJFRkJVVHRCUVVOMFFqdEJRVU5CTzBGQlEwRTdRVUZEUVN4VFFVRlRPMEZCUTFRc1QwRkJUenRCUVVOUU8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdPMEZCUlVFN1FVRkRRU3hWUVVGVkxFbEJRWEZETzBGQlF5OURPMEZCUTBFN08wRkJSVUU3UVVGRFFUczdRVUZGUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQkxFdEJRVXNzUjBGQlJ6dEJRVU5TTzBGQlEwRTdRVUZEUVR0QlFVTkJPenRCUVVWQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRXNiMFJCUVc5RU8wRkJRM0JFT3p0QlFVVkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTEZkQlFWYzdPMEZCUlZnN08wRkJSVUU3UVVGRFFUdEJRVU5CTEU5QlFVODdRVUZEVURzN1FVRkZRVHRCUVVOQk8wRkJRMEU3UVVGRFFTeFBRVUZQTzBGQlExQTdRVUZEUVRzN1FVRkZRVHRCUVVOQk8wRkJRMEU3UVVGRFR5eHRSRUZCYlVRN096czdPenM3T3pzN096czdPenM3T3p0QlEyaFJXRHRCUVVOb1F6dEJRVU5tTERKRVFVRXlSRHM3UVVGRk0wUTdRVUZEUVR0QlFVTkJMRWxCUVVrN1FVRkRTaXgxUWtGQmRVSXNORVJCUVZrN1FVRkRia003TzBGQlJVRTdRVUZEUVR0QlFVTkJPMEZCUTBFc1ZVRkJWVHM3TzBGQlIxWTdRVUZEUVN4UlFVRlJPMEZCUTFJc1RVRkJUVHM3TzBGQlIwNDdRVUZEUVRzN096czdPenM3T3pzN096czdPenM3T3p0QlEzUkNNa1E3UVVGRGJFSTdRVUZEUmp0QlFVTmpPMEZCUTNSRE8wRkJRMlk3UVVGRFFUdEJRVU5CT3p0QlFVVkJPMEZCUTBFN1FVRkRRVHM3UVVGRlFUdEJRVU5CTzBGQlEwRTdPMEZCUlVFc2MwSkJRWE5DTERaRVFVRmhPMEZCUTI1RExIVkRRVUYxUXl4eFJFRkJTenRCUVVNMVF5eDNRMEZCZDBNc2NVUkJRVXM3UVVGRE4wTTdPMEZCUlVFc1lVRkJZU3g1UkVGQlV5eFpRVUZaTEhsRVFVRlRPMEZCUXpORE96dEJRVVZCTERCQ1FVRXdRaXhuUlVGQlowSTdRVUZETVVNN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CT3pzN096czdPenM3T3pzN096czdPenM3T3pzN096czdPenM3T3p0QlEzaERkVU03UVVGRFdUdEJRVU5CTzBGQlEwazdRVUZEU2p0QlFVTk5PMEZCUTBvN1FVRkRUVHRCUVVOSk8wRkJRMmhDTzBGQlExWTdRVUZEVFR0QlFVTnBRanRCUVVOb1FqczdRVUZGTlVNN1FVRkRRU3hoUVVGaExIRkZRVUZ4UWp0QlFVTnNRenRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHM3UVVGRlFUdEJRVU5CTERSQ1FVRTBRaXdyUTBGQlVTeEhRVUZITEhORlFVRm5RaXhEUVVGRExDdEVRVUZsTEhWQ1FVRjFRaXg1UkVGQlV5d3dSVUZCTUVVc2MwVkJRV2RDTEVOQlFVTXNLMFJCUVdVc1EwRkJReXhyUlVGQmEwSTdRVUZEY0U4c1JVRkJSVHRCUVVOR08wRkJRMEU3T3p0QlFVZEJPMEZCUTBFc2QwSkJRWGRDTEdsRlFVRnBRaXhEUVVGRExEWkVRVUZoTzBGQlEzWkVMSGRFUVVGM1JDeG5SVUZCWjBJN1FVRkRlRVVzTkVOQlFUUkRMRFpFUVVGaExGbEJRVmtzWjBWQlFXVTdPMEZCUlhCR0xFOUJRVThzZVVSQlFWTTdRVUZEYUVJN1FVRkRRU3hKUVVGSk96czdRVUZIU2p0QlFVTkJMRmRCUVZjc2VVUkJRVk1zYjBKQlFXOUNMSGxFUVVGUkxHOURRVUZ2UXl3MFJFRkJWenRCUVVNdlJpeEhRVUZITzBGQlEwZ3NSVUZCUlR0QlFVTkdPenM3UVVGSFpUdEJRVU5tTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRU3hyUWtGQmEwSXNiMFJCUVVjN1FVRkRja0lzYjBKQlFXOUNMRzlFUVVGSE8wRkJRM1pDTEhGQ1FVRnhRaXh2UkVGQlJ6dEJRVU40UWl4dFFrRkJiVUlzYjBSQlFVYzdRVUZEZEVJN1FVRkRRU3hIUVVGSE8wRkJRMGc3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPenM3T3pzN096czdPenM3T3pzN096czdPenM3T3p0QlEzSkZLMFE3UVVGRGFFSTdRVUZEU2p0QlFVTkxPMEZCUTFjN1FVRkRSanRCUVVOU08wRkJRMUk3TzBGQlJYcERPMEZCUTBFN1FVRkRRU3hsUVVGbExIRkVRVUZMTzBGQlEzQkNMR1ZCUVdVc2NVUkJRVXM3UVVGRGNFSTdRVUZEUVN4RlFVRkZPMEZCUTBZN096dEJRVWRsTzBGQlEyWTdRVUZEUVR0QlFVTkJPenRCUVVWQkxHZERRVUZuUXl3MlJFRkJZVHRCUVVNM1F5dzJRa0ZCTmtJc05rUkJRV0U3UVVGRE1VTXNkMEpCUVhkQ0xHdEZRVUZyUWp0QlFVTXhReXhoUVVGaExIRkZRVUZ4UWp0QlFVTnNRenRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPenRCUVVWQk8wRkJRMEVzVVVGQlVTd3lSRUZCVnp0QlFVTnVRaXhKUVVGSkxEaEVRVUZqTzBGQlEyeENMR1ZCUVdVc05rUkJRV0U3UVVGRE5VSTdPMEZCUlVFc1VVRkJVU3cyUkVGQllUdEJRVU55UWl4blFrRkJaMElzY1VWQlFYRkNPMEZCUTNKRE8wRkJRMEU3UVVGRFFTeE5RVUZOTzBGQlEwNHNhMEpCUVd0Q0xHMUZRVUZ0UWp0QlFVTnlRenRCUVVOQk96dEJRVVZCTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk96czdPenM3T3pzN096czdPenM3TzBGRGVrUjFRenRCUVVONFFqdEJRVU5tTEZOQlFWTXNlVVJCUVZNN1FVRkRiRUk3T3pzN096czdPenM3T3pzN096czdRVU5JTkVNN1FVRkROMEk3UVVGRFpqdEJRVU5CTEZkQlFWY3NlVVJCUVZNN1FVRkRjRUk3UVVGRFFUczdPenM3T3pzN096czdPenM3T3pzN096czdRVU5NZVVRN1FVRkRTanRCUVVOTk8wRkJRMUk3UVVGRFdpeERRVUZETzBGQlEzaERPenRCUVVWbE8wRkJRMlk3TzBGQlJVRXNZVUZCWVN4clJVRkJhMEk3UVVGREwwSXNhMEpCUVd0Q0xDdEVRVUZsTzBGQlEycERPMEZCUTBFc1kwRkJZeXh0UkVGQlJ6dEJRVU5xUWl4bFFVRmxMRzFFUVVGSE8wRkJRMnhDTEd0RFFVRnJReXh0UlVGQmJVSTdRVUZEY2tRN08wRkJSVUVzVFVGQlRTeG5SVUZCWjBJN1FVRkRkRUlzVTBGQlV5eHRSRUZCUnp0QlFVTmFPenRCUVVWQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPenM3T3pzN096czdPenM3T3pzN1FVTTFRbVU3UVVGRFpqdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPenM3T3pzN096czdPenM3T3pzN08wRkRUQ3RFTEVOQlFVTTdRVUZEYUVVN08wRkJSV1U3UVVGRFppeHRRa0ZCYlVJc2NVVkJRWEZDTEZkQlFWYzdRVUZEYmtRN08wRkJSVUU3UVVGRFFUczdRVUZGUVR0QlFVTkJPMEZCUTBFN08wRkJSVUU3UVVGRFFUdEJRVU5CT3p0QlFVVkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CT3pzN096czdPenM3T3pzN096czdRVU40UW1VN1FVRkRaanRCUVVOQk96czdPenM3T3pzN096czdPenM3T3pzN08wRkRSbTFFTzBGQlExbzdRVUZEVXp0QlFVTmhPMEZCUXpsRE8wRkJRMllzWlVGQlpTeDVSRUZCVXl4WFFVRlhMRFpFUVVGaE8wRkJRMmhFTEZkQlFWY3NLMFJCUVdVN1FVRkRNVUlzU1VGQlNUdEJRVU5LTEZkQlFWY3NiMFZCUVc5Q08wRkJReTlDTzBGQlEwRTdPenM3T3pzN096czdPenM3T3pzN096czdPenM3UVVOV2RVTTdRVUZEU1R0QlFVTlZPMEZCUTFNN1FVRkRZanRCUVVOR08wRkJRME03TzBGQlJXaEVPMEZCUTBFc1QwRkJUeXcyUkVGQllUdEJRVU53UWl4RlFVRkZMR2RGUVVGblFqdEJRVU5zUWp0QlFVTkJPenRCUVVWQk8wRkJRMEVzUlVGQlJUdEJRVU5HT3pzN1FVRkhRVHRCUVVOQkxHdERRVUZyUXl3clJFRkJWenRCUVVNM1F5dzJRa0ZCTmtJc0swUkJRVmM3TzBGQlJYaERMR05CUVdNc05rUkJRV0U3UVVGRE0wSTdRVUZEUVN4eFFrRkJjVUlzWjBWQlFXZENPenRCUVVWeVF6dEJRVU5CTzBGQlEwRTdRVUZEUVRzN1FVRkZRU3h2UWtGQmIwSXNOa1JCUVdFN08wRkJSV3BETEUxQlFVMHNORVJCUVZrN1FVRkRiRUk3UVVGRFFUczdRVUZGUVN4VFFVRlRMRFpFUVVGaExEQkRRVUV3UXl3eVJFRkJWenRCUVVNelJTeGpRVUZqTEdkRlFVRm5RaXhsUVVGbE8wRkJRemRETzBGQlEwRTdPMEZCUlVFN1FVRkRRVHRCUVVOQkxFMUJRVTA3UVVGRFRqdEJRVU5CTzBGQlEwRTdPMEZCUlVFN1FVRkRRU3hGUVVGRk8wRkJRMFk3T3p0QlFVZGxPMEZCUTJZc1pVRkJaU3g1UkVGQlV6dEJRVU40UWpzN1FVRkZRU3g1UWtGQmVVSXNPRVJCUVdNc2EwSkJRV3RDTEdkRlFVRm5RanRCUVVONlJUdEJRVU5CT3p0QlFVVkJMSFZDUVVGMVFpd3lSRUZCVnl3MlFrRkJOa0lzTWtSQlFWY3NOa0pCUVRaQ0xHZEZRVUZuUWp0QlFVTjJTRHRCUVVOQk96dEJRVVZCTzBGQlEwRTdPenM3T3pzN096czdPenM3T3pzN096dEJRM0JGTWtNN1FVRkRZenRCUVVOV08wRkJRMmhETzBGQlEyWXNUVUZCVFN3eVJFRkJWenRCUVVOcVFqdEJRVU5CT3p0QlFVVkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFTeEpRVUZKTERSRVFVRlpPMEZCUTJoQ08wRkJRMEVzU1VGQlNTeHJSVUZCYTBJN08wRkJSWFJDTzBGQlEwRTdPenM3T3pzN096czdPenM3T3pzN096czdRVU5zUWl0RE8wRkJRMFU3UVVGRFRqdEJRVU5MTzBGQlEycERPMEZCUTJZc05FTkJRVFJETERKRVFVRlhPMEZCUTNaRU8wRkJRMEU3UVVGRFFUczdRVUZGUVN4TlFVRk5MRFpFUVVGaExGVkJRVlVzT0VSQlFXTTdRVUZETTBNN1FVRkRRVHM3UVVGRlFTeDVRa0ZCZVVJc05rUkJRV0U3UVVGRGRFTTdPenM3T3pzN096czdPenM3T3pzN096czdRVU5tZFVNN1FVRkRhMEk3UVVGRFJUdEJRVU5PTzBGQlEzUkRPMEZCUTJZc1dVRkJXU3g1UkVGQlV6dEJRVU55UWl4aFFVRmhMR3RGUVVGclFqdEJRVU12UWp0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk96dEJRVVZCTzBGQlEwRTdRVUZEUVR0QlFVTkJMSGxDUVVGNVFpeG5SVUZCWjBJN08wRkJSWHBETzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN08wRkJSVUU3UVVGRFFUdEJRVU5CTzBGQlEwRXNWMEZCVnl4dFJVRkJiVUk3UVVGRE9VSTdRVUZEUVR0QlFVTkJPenM3T3pzN096czdPenM3T3pzN1FVTTVRbVU3UVVGRFpqdEJRVU5CTzBGQlEwRTdPMEZCUlVFN1FVRkRRVHRCUVVOQk8wRkJRMEU3TzBGQlJVRTdRVUZEUVRzN096czdPenM3T3pzN096czdPenRCUTFoMVF6dEJRVU40UWp0QlFVTm1MRmxCUVZrc2VVUkJRVk03UVVGRGNrSTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3T3pzN096czdPenM3T3pzN096czdPenRCUTFRclJEdEJRVU5PTzBGQlEwNDdRVUZEY0VNN1FVRkRaanRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJMRk5CUVZNc2NVVkJRWEZDTEVOQlFVTXNhMFZCUVd0Q0xHdENRVUZyUWl3clJFRkJaVHRCUVVOc1JqczdPenM3T3pzN096czdPenM3T3pzN08wRkRXblZET3p0QlFVVjJRenRCUVVOQkxHMUNRVUZ0UWl4NVJFRkJVenRCUVVNMVFqdEJRVU5CT3p0QlFVVkJPMEZCUTBFc2JVSkJRVzFDTEhsRVFVRlRPMEZCUXpWQ08wRkJRMEU3TzBGQlJVRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHM3UVVGRlFTeHRRa0ZCYlVJc2VVUkJRVk03UVVGRE5VSTdRVUZEUVRzN096czdPenM3T3pzN096czdPenM3TzBGRGNFSm5SRHRCUVVOcVF6dEJRVU5tTEdkRVFVRm5SQ3dyUkVGQlZ6dEJRVU16UkRzN096czdPenM3T3pzN096czdPenRCUTBoeFJEdEJRVU4wUXp0QlFVTm1PMEZCUTBFc01FSkJRVEJDTEdkRlFVRm5RanRCUVVNeFF6dEJRVU5CTzBGQlEwRTdPMEZCUlVFN1FVRkRRVHM3T3pzN096czdPenM3T3pzN096dEJRMVF5UXp0QlFVTTFRanRCUVVObUxIVkRRVUYxUXl3eVJFRkJWenRCUVVOc1JEczdPenM3T3pzN096czdPenM3T3pzN096dEJRMGh0UkR0QlFVTktPMEZCUTFJN1FVRkRWVHRCUVVOcVJEdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN08wRkJSV1U3UVVGRFpqczdRVUZGUVR0QlFVTkJPMEZCUTBFN08wRkJSVUVzY1VKQlFYRkNMQ3RFUVVGbE8wRkJRM0JETzBGQlEwRXNXVUZCV1N4NVJFRkJVenRCUVVOeVFpd3JSRUZCSzBRc09FUkJRV003UVVGRE4wVTdRVUZEUVR0QlFVTkJMSFZEUVVGMVF5dzJSRUZCWVR0QlFVTndSRHM3T3pzN096czdPenM3T3pzN096czdPenM3T3pzN096czdPenM3T3pzN096czdPenM3UVVONlFrODdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRVRHRCUVVOQkxFTkJRVU03UVVGRFRUdEJRVU5RTzBGQlEwRXNRMEZCUXl4UFFVRlBPenRCUVVWRU8wRkJRMEU3UVVGRFFTdzJRa0ZCTmtJN08wRkJSVGRDTzBGQlEwRTdRVUZEUVN3MlFrRkJOa0k3TzBGQlJUZENPMEZCUTBFN1FVRkRRVHRCUVVOQk96czdPenM3T3pzN096czdPenM3T3pzN096czdPenM3T3pzN096czdPenM3T3pzN096czdPenM3T3pzN096czdPenM3T3pzN096czdPMEZET1VKdlFqdEJRVU5WTEVOQlFVTTdPMEZCUldkRkxFTkJRVU03TzBGQlJUVkVMRU5CUVVNN096czdPenM3T3pzN096czdPenM3UVVOTVZUdEJRVU5MTEVOQlFVTTdRVUZETlVRN08wRkJSVUU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJMSGREUVVGM1F6czdRVUZGZUVNc1UwRkJVeXgxUlVGQllTeGpRVUZqTEhGRlFVRlhPMEZCUXk5RE8wRkJRMEVzVFVGQlRUdEJRVU5PTzBGQlEwRTdPenRCUVVkQk8wRkJRMEU3UVVGRFFUczdRVUZGUVR0QlFVTkJPMEZCUTBFc1VVRkJVVHRCUVVOU08wRkJRMEU3UVVGRFFTeExRVUZMTzBGQlEwd3NSMEZCUnp0QlFVTklPenRCUVVWQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRU3hMUVVGTE8wRkJRMHc3UVVGRFFUdEJRVU5CTEV0QlFVczdRVUZEVER0QlFVTkJPMEZCUTBFN1FVRkRRVHM3UVVGRlFUdEJRVU5CTzBGQlEwRTdPMEZCUlVFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFTeDFTRUZCZFVnN08wRkJSWFpJTzBGQlEwRTdRVUZEUVR0QlFVTkJMRTlCUVU4c1NVRkJTU3hIUVVGSE96dEJRVVZrTEZkQlFWY3NkVVZCUVdFc1kwRkJZeXh4UlVGQlZ6dEJRVU5xUkR0QlFVTkJPenRCUVVWQk8wRkJRMEU3UVVGRFFUdEJRVU5CTEU5QlFVODdRVUZEVUN4TFFVRkxPMEZCUTB3N1FVRkRRU3hGUVVGRk96czdRVUZIUml3clJFRkJaVHRCUVVObU8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJMRU5CUVVNN096czdPenM3T3pzN096czdPenM3T3pzN096czdRVU51UmpKRU8wRkJRMFk3UVVGRFZqdEJRVU5qTzBGQlEyTTdRVUZEYUVNN1FVRkRiMEk3UVVGRFRqdEJRVU5oTzBGQlExb3NRMEZCUXpzN1FVRkZOVVE3UVVGRFFTeHZSVUZCYjBVN1FVRkRjRVU3UVVGRFFTeEhRVUZITzBGQlEwZ3NVMEZCVXl4M1JVRkJhMElzZVVOQlFYbERMSEZGUVVGbExGVkJRVlVzY1VSQlFXTTdRVUZETTBjN08wRkJSVUU3UVVGRFFUczdRVUZGUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEVzYzBKQlFYTkNMSE5GUVVGblFqdEJRVU4wUXl4aFFVRmhMRGhGUVVGM1FqdEJRVU55UXl4dlFrRkJiMElzTWtOQlFVa3NSVUZCUlN3MFEwRkJTenRCUVVNdlFqczdRVUZGUVR0QlFVTkJPMEZCUTBFN08wRkJSVUU3UVVGRFFTeHJRa0ZCYTBJc2RVVkJRV0U3UVVGREwwSXNLMEpCUVN0Q0xEQkRRVUZITEVkQlFVY3NNa05CUVVrN1FVRkRla01zSzBKQlFTdENMRFpEUVVGTkxFZEJRVWNzTkVOQlFVczdRVUZETjBNN1FVRkRRVHRCUVVOQkxEQkNRVUV3UWl4NVJVRkJaVHRCUVVONlF6dEJRVU5CTEhWRVFVRjFSRHRCUVVOMlJEczdRVUZGUVR0QlFVTkJPMEZCUTBFN1FVRkRRU3hsUVVGbExIZEVRVUZOTEc5Q1FVRnZRanM3UVVGRmVrTTdRVUZEUVN4NVJFRkJlVVE3UVVGRGVrUTdPMEZCUlVFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUczdRVUZGUVR0QlFVTkJPMEZCUTBFc1NVRkJTVHM3TzBGQlIwbzdRVUZEUVRzN1FVRkZRVHRCUVVOQk8wRkJRMEU3UVVGRFFUczdRVUZGUVN4TlFVRk5MRWxCUVhGRE8wRkJRek5ETEZOQlFWTXNkVVZCUVdFN1FVRkRkRUk3UVVGRFFUdEJRVU5CT3p0QlFVVkJMRTlCUVU4c2EwVkJRVkU3UVVGRFppeFJRVUZSTEVsQlFYRkRPMEZCUXpkRE8wRkJRMEU3TzBGQlJVRTdRVUZEUVRzN1FVRkZRVHRCUVVOQkxFVkJRVVU3T3p0QlFVZEdMQ3RFUVVGbE8wRkJRMlk3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRU3hEUVVGRE96czdPenM3T3pzN096czdPenM3T3pzN096czdPenRCUTNCSE1rUTdRVUZEUlR0QlFVTmFPMEZCUTJ0Q08wRkJRMG83UVVGRFNqdEJRVU5TTzBGQlExZ3NRMEZCUXpzN1FVRkZNVU03UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJMRWRCUVVjN1FVRkRTRHRCUVVOQk96dEJRVVZCTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQkxFOUJRVThzY1VSQlFVczdRVUZEV2l4UFFVRlBMSEZFUVVGTE8wRkJRMW83UVVGRFFUczdRVUZGVHp0QlFVTlFPenRCUVVWQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdPMEZCUlVFN1FVRkRRVHRCUVVOQk8wRkJRMEVzUjBGQlJ6dEJRVU5JTzBGQlEwRTdRVUZEUVRzN1FVRkZRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTEdOQlFXTXNNa05CUVVrN1FVRkRiRUlzWTBGQll5d3dRMEZCUnp0QlFVTnFRanM3UVVGRlFUdEJRVU5CTEhWQ1FVRjFRaXg1UlVGQlpUdEJRVU4wUXp0QlFVTkJPenRCUVVWQkxIbENRVUY1UWl4dFJVRkJVenRCUVVOc1F5eHhRa0ZCY1VJc05FVkJRV3RDT3p0QlFVVjJReXhWUVVGVkxEQkZRVUZuUWp0QlFVTXhRanRCUVVOQk8wRkJRMEU3UVVGRFFTeE5RVUZOT3pzN1FVRkhUanM3UVVGRlFTeHpRa0ZCYzBJc01FTkJRVWNzYlVKQlFXMUNMREpEUVVGSkxHdENRVUZyUWl3MFEwRkJTeXh0UWtGQmJVSXNNRU5CUVVjN1FVRkROMFlzWTBGQll5dzJRMEZCVFR0QlFVTndRanRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CT3p0QlFVVkJMSE5DUVVGelFpd3lRMEZCU1N4dFFrRkJiVUlzTUVOQlFVY3NhMEpCUVd0Q0xEWkRRVUZOTEcxQ1FVRnRRaXd3UTBGQlJ6dEJRVU01Uml4alFVRmpMRFJEUVVGTE8wRkJRMjVDTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHM3UVVGRlFUdEJRVU5CTzBGQlEwRXNSMEZCUnpzN1FVRkZTRHRCUVVOQk8wRkJRMEU3UVVGRFFTeEhRVUZITzBGQlEwZzdRVUZEUVR0QlFVTkJPenRCUVVWQk8wRkJRMEU3TzBGQlJVRTdRVUZEUVRzN1FVRkZRU3d5UWtGQk1rSXNiME5CUVc5RE8wRkJReTlFT3p0QlFVVkJMSGxDUVVGNVFpeHhRMEZCY1VNN1FVRkRPVVE3TzBGQlJVRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CT3p0QlFVVkJMRTFCUVUwc1NVRkJjVU03UVVGRE0wTXNOa0pCUVRaQ0xEQkZRVUZuUWpzN1FVRkZOME03UVVGRFFUdEJRVU5CTEV0QlFVczdRVUZEVER0QlFVTkJPMEZCUTBFN08wRkJSVUU3UVVGRFFTeGxRVUZsTEhORlFVRm5RanRCUVVNdlFpeGxRVUZsTEd0RlFVRlpPMEZCUXpOQ08wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdPMEZCUlVFN1FVRkRRU3d3UTBGQk1FTXNiVVJCUVcxRU8wRkJRemRHTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFc1MwRkJTenRCUVVOTU96dEJRVVZCTzBGQlEwRXNlVU5CUVhsRExHdEVRVUZyUkR0QlFVTXpSanRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTEV0QlFVczdRVUZEVERzN1FVRkZRU3cwUTBGQk5FTTdRVUZETlVNN1FVRkRRU3hIUVVGSE8wRkJRMGdzUlVGQlJUczdPMEZCUjBZc0swUkJRV1U3UVVGRFpqdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFc1EwRkJRenM3T3pzN096czdPenM3T3p0QlEzQk1hVVFzUTBGQlF6czdRVUZGYmtRN1FVRkRRVHRCUVVOQk96dEJRVVZCTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFTeGxRVUZsTEcxRlFVRlRPMEZCUTNoQ096dEJRVVZCTzBGQlEwRTdRVUZEUVR0QlFVTkJMRXRCUVVzN1FVRkRURHM3UVVGRlFUdEJRVU5CTzBGQlEwRTdPMEZCUlVFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFTeFBRVUZQTzBGQlExQTdPMEZCUlVFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFTeEZRVUZGT3pzN1FVRkhSaXdyUkVGQlpUdEJRVU5tTzBGQlEwRTdRVUZEUVR0QlFVTkJMSE5DUVVGelFqdEJRVU4wUWp0QlFVTkJPMEZCUTBFc1EwRkJRenM3T3pzN096czdPenM3T3pzN096czdPenRCUTJoRWJVVTdRVUZEVWp0QlFVTXdRanRCUVVNNVFqdEJRVU5aTzBGQlEwRTdRVUZEYUVJc1EwRkJRenM3UVVGRmNrUTdRVUZEUVN4TlFVRk5MSE5GUVVGblFpeG5Ra0ZCWjBJc01rTkJRVWs3UVVGRE1VTTdRVUZEUVRzN1FVRkZRU3d3UWtGQk1FSXNNRVZCUVc5Q08wRkJRemxETEZWQlFWVXNiVVpCUVRaQ0xHZERRVUZuUXl4dFJrRkJOa0k3UVVGRGNFYzdPMEZCUlVFN1FVRkRRVHRCUVVOQk8wRkJRMEU3TzBGQlJVRTdRVUZEUVR0QlFVTkJPenRCUVVWQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRXNjMEpCUVhOQ0xITkZRVUZuUWp0QlFVTjBRenRCUVVOQkxHbEhRVUZwUnl3d1JVRkJiMEk3UVVGRGNrZzdRVUZEUVN4elFrRkJjMElzYzBWQlFXZENMR2RDUVVGblFpd3lRMEZCU1N4SFFVRkhMREJGUVVGdlFqdEJRVU5xUmp0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFTeExRVUZMTzBGQlEwd3NSMEZCUnp0QlFVTklPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3TzBGQlJVRXNhMEpCUVd0Q0xIVkNRVUYxUWp0QlFVTjZRenM3UVVGRlFTeDVRa0ZCZVVJc2MwVkJRV2RDT3p0QlFVVjZReXd5UWtGQk1rSXNhMFZCUVZrc1owSkJRV2RDTERSRFFVRkxPMEZCUXpWRUxITkNRVUZ6UWl3d1EwRkJSeXhGUVVGRkxEWkRRVUZOTzBGQlEycERPMEZCUTBFc2JVSkJRVzFDTEc5RlFVRmpPMEZCUTJwRE8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVN4TFFVRkxPMEZCUTB3c05FUkJRVFJFTERSRFFVRkxMRWRCUVVjc01rTkJRVWtzYzBKQlFYTkNMRFpEUVVGTkxFZEJRVWNzTUVOQlFVYzdPMEZCUlRGSE8wRkJRMEVzTUVKQlFUQkNMREJGUVVGdlFqdEJRVU01UXpzN1FVRkZRU3d5UWtGQk1rSXNNRVZCUVc5Q08wRkJReTlET3p0QlFVVkJPMEZCUTBFN1FVRkRRVHM3UVVGRlFUdEJRVU5CTzBGQlEwRTdPMEZCUlVFN1FVRkRRVHRCUVVOQkxFdEJRVXM3UVVGRFREdEJRVU5CTzBGQlEwRTdRVUZEUVRzN1FVRkZRVHRCUVVOQk96dEJRVVZCTzBGQlEwRTdRVUZEUVRzN1FVRkZRVHRCUVVOQk8wRkJRMEU3TzBGQlJVRTdRVUZEUVR0QlFVTkJPMEZCUTBFc1YwRkJWenRCUVVOWU8wRkJRMEVzVDBGQlR6czdRVUZGVUR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk96dEJRVVZCTEd0RFFVRnJReXhSUVVGUk8wRkJRekZET3p0QlFVVkJPMEZCUTBFN1FVRkRRVHM3UVVGRlFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFc1JVRkJSVHM3TzBGQlIwWXNLMFJCUVdVN1FVRkRaanRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFc1EwRkJRenM3T3pzN096czdPenM3T3pzN1FVTnNTbk5FTzBGQlEwTTdPMEZCUlhoRU8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPenRCUVVWQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPenRCUVVWQk8wRkJRMEVzVlVGQlZTd3dRMEZCUnl4RlFVRkZMRFJEUVVGTExFVkJRVVVzTmtOQlFVMHNSVUZCUlN3eVEwRkJTVHRCUVVOc1F6dEJRVU5CTEVkQlFVYzdRVUZEU0RzN1FVRkZRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVN3d1FrRkJNRUlzYjBWQlFXTTdRVUZEZUVNN1FVRkRRU3hIUVVGSE8wRkJRMGdzTUVKQlFUQkNMRzlGUVVGak8wRkJRM2hETzBGQlEwRXNSMEZCUnp0QlFVTklPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFc05FTkJRVFJETzBGQlF6VkRPMEZCUTBFN1FVRkRRU3hIUVVGSE8wRkJRMGdzUlVGQlJUczdPMEZCUjBZc0swUkJRV1U3UVVGRFpqdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFc1EwRkJRenM3T3pzN096czdPenM3T3pzN096czdPenM3T3pzN096czdPenM3T3pzN1FVTTFSSGxFTzBGQlExbzdRVUZEWjBJN1FVRkRSVHRCUVVOd1FqdEJRVU5CTzBGQlEwazdRVUZEWXpzN096czdPenM3T3pzN096czdPenM3TzBGRFVFWTdRVUZEUkN4RFFVRkRPenRCUVVWeVJEdEJRVU5RTEhOQ1FVRnpRaXh6UlVGQlowSTdRVUZEZEVNc2QwSkJRWGRDTERKRFFVRkpMRVZCUVVVc01FTkJRVWM3TzBGQlJXcERMRzFGUVVGdFJUdEJRVU51UlR0QlFVTkJMRWRCUVVjN1FVRkRTRHRCUVVOQk96dEJRVVZCTzBGQlEwRTdRVUZEUVN4VlFVRlZMREpEUVVGSkxFVkJRVVVzTkVOQlFVczdRVUZEY2tJN1FVRkRRVHRCUVVOQkxFbEJRVWs3UVVGRFNqdEJRVU5CTzBGQlEwRTdRVUZEUVRzN1FVRkZRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVN4aFFVRmhMSGRFUVVGcFFqdEJRVU01UWp0QlFVTkJPMEZCUTBFc1IwRkJSeXhKUVVGSk8wRkJRMUE3UVVGRFFUdEJRVU5CT3p0QlFVVkJPMEZCUTBFN1FVRkRRVHRCUVVOQk96dEJRVVZCTzBGQlEwRXNSVUZCUlRzN08wRkJSMFlzSzBSQlFXVTdRVUZEWmp0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEVzUTBGQlF6czdPenM3T3pzN096czdPenRCUTNKRWRVUTdPMEZCUlhoRU8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFc09FSkJRVGhDTEc5RlFVRmpPMEZCUXpWRE8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRXNSMEZCUnp0QlFVTklMRVZCUVVVN096dEJRVWRHTEN0RVFVRmxPMEZCUTJZN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTEVOQlFVTTdPenM3T3pzN096czdPenM3T3pzN096czdPenM3TzBGRGVFSTJSRHRCUVVOR08wRkJRMmRDTzBGQlF6VkNPMEZCUTFrN1FVRkRSanRCUVVOSk8wRkJRMDQ3UVVGRFNqdEJRVU5aTzBGQlEwVTdPMEZCUld4Rk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFc2FVSkJRV2xDTEc5RlFVRmpPMEZCUXk5Q08wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRXNSMEZCUnp0QlFVTklMSE5DUVVGelFpeHpSVUZCWjBJN1FVRkRkRU1zYTBKQlFXdENMR3RGUVVGWk8wRkJRemxDTzBGQlEwRXNhVUpCUVdsQ0xEaEZRVUYzUWp0QlFVTjZReXhuUWtGQlowSXNaMFZCUVZVN1FVRkRNVUk3UVVGRFFUdEJRVU5CTzBGQlEwRXNORVpCUVRSR08wRkJRelZHTzBGQlEwRXNSMEZCUnp0QlFVTklPMEZCUTBFN1FVRkRRVHRCUVVOQkxFbEJRVWs3UVVGRFNqdEJRVU5CTzBGQlEwRXNSMEZCUnp0QlFVTklPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3TzBGQlJVRTdRVUZEUVR0QlFVTkJPenRCUVVWQk8wRkJRMEU3TzBGQlJVRXNjME5CUVhORExEQkRRVUZITEVkQlFVY3NNa05CUVVrN1FVRkRhRVFzY1VOQlFYRkRMRFpEUVVGTkxFZEJRVWNzTkVOQlFVczdRVUZEYmtRN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTEN0Q1FVRXJRaXcwUTBGQlN6dEJRVU53UXl3clFrRkJLMElzTkVOQlFVc3NNa05CUVRKRE8wRkJReTlGT3p0QlFVVkJPMEZCUTBFc05rTkJRVFpETEhWRlFVRmhPMEZCUXpGRU8wRkJRMEU3UVVGRFFUdEJRVU5CTEhsSVFVRjVTQ3gzUlVGQmEwSTdRVUZETTBrN1FVRkRRU3gxUkVGQmRVUTdRVUZEZGtRN1FVRkRRVHRCUVVOQk8wRkJRMEU3TzBGQlJVRXNiVUpCUVcxQ0xIZEVRVUZOTzBGQlEzcENPMEZCUTBFN1FVRkRRU3h2UkVGQmIwUXNlVVZCUVdVN1FVRkRia1U3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVN3d1FrRkJNRUlzZDBSQlFVMHNWVUZCVlN4dlJFRkJUeXg1UTBGQmVVTXNiMFJCUVU4N1FVRkRha2M3UVVGRFFUdEJRVU5CT3p0QlFVVkJPMEZCUTBFN08wRkJSVUVzZFVOQlFYVkRMREJEUVVGSExFZEJRVWNzTWtOQlFVazdPMEZCUldwRUxITkRRVUZ6UXl3MlEwRkJUU3hIUVVGSExEUkRRVUZMT3p0QlFVVndSRHM3UVVGRlFUczdRVUZGUVRzN1FVRkZRVHM3UVVGRlFTeDNRa0ZCZDBJc01FTkJRVWNzUlVGQlJTd3lRMEZCU1RzN1FVRkZha003TzBGQlJVRTdPMEZCUlVFN08wRkJSVUVzYjBSQlFXOUVMR2RGUVVGakxHOURRVUZ2UXl4M1JFRkJUVHM3UVVGRk5VYzdRVUZEUVR0QlFVTkJPenRCUVVWQk8wRkJRMEVzUlVGQlJUczdPMEZCUjBZc0swUkJRV1U3UVVGRFpqdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFc1EwRkJRenM3T3pzN096czdPenM3T3pzN096czdPenM3T3pzN08wRkROMGx0UlR0QlFVTlVPMEZCUTBZN1FVRkRRVHRCUVVOS08wRkJRM0pFTEhkQ1FVRjNRaXh2UlVGQll5eEZRVUZGTEcxRlFVRmhMRVZCUVVVc2JVVkJRV0VzUlVGQlJTeHBSVUZCVnp0QlFVTnFSaXhuUTBGQlowTXNhVVZCUVdVN1FVRkRMME03UVVGRFFTeERRVUZETEVkQlFVYzdPenM3T3pzN096czdPenM3T3pzN096czdPenM3T3pzN096czdPenM3T3pzN096czdPenM3T3pzN1FVTlNaMFU3UVVGRFZEdEJRVU5HTzBGQlEwRTdRVUZEU2p0QlFVTldPMEZCUTBvN1FVRkRjMEk3UVVGRGNFSTdRVUZEUmp0QlFVTjJReXgzUWtGQmQwSXNiMFZCUVdNc1JVRkJSU3h0UlVGQllTeEZRVUZGTEcxRlFVRmhMRVZCUVVVc2FVVkJRVmNzUlVGQlJTdzBSRUZCVFN4RlFVRkZMREJFUVVGSkxFVkJRVVVzY1VWQlFXVXNSVUZCUlN3eVJFRkJTeXhGUVVGRkxEQkVRVUZKTzBGQlF6ZElMR2REUVVGblF5eHBSVUZCWlR0QlFVTXZRenRCUVVOQkxFTkJRVU1zUjBGQlJ6czdRVUZGZFVVc1EwRkJRenM3UVVGRlVpeERRVUZET3pzN096czdPenM3T3pzN096czdPenM3T3pzN1FVTnFRbmhDTzBGQlEydEVPMEZCUXpsRE8wRkJRMGs3UVVGRGRFTTdRVUZEWmp0QlFVTkJPMEZCUTBFN08wRkJSVUU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRU3hwUlVGQmFVVXNhVVJCUVdFN1FVRkRPVVVzYTBKQlFXdENMRFJFUVVGWk8wRkJRemxDTEdkRVFVRm5SQ3d3UkVGQmJVSXNSMEZCUnl4cFJVRkJNRUk3UVVGRGFFY3NWMEZCVnl3MFJFRkJXVHRCUVVOMlFpeEhRVUZITEVsQlFVa3NjVVJCUVdNN1FVRkRja0k3UVVGRFFUdEJRVU5CTEVkQlFVYzdPMEZCUlVnN1FVRkRRVHM3UVVGRlFTeFJRVUZSTEVsQlFYRkRPMEZCUXpkRE8wRkJRMEU3UVVGRFFTeEpRVUZKT3pzN1FVRkhTanRCUVVOQkxIRkNRVUZ4UWl3NFJFRkJZenRCUVVOdVF6dEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJMRXRCUVVzc1JVRkJSU3huUlVGQlowSTdRVUZEZGtJN1FVRkRRU3hIUVVGSExFbEJRVWs3UVVGRFVEdEJRVU5CTzBGQlEwRXNSMEZCUnp0QlFVTklPenM3T3pzN096czdPenM3T3pzN096czdPMEZET1VOeFJEdEJRVU5TTzBGQlEzZENPMEZCUTBZN1FVRkRjRVE3UVVGRFpqdEJRVU5CTzBGQlEwRTdRVUZEUVN4clEwRkJhME1zWjBWQlFXZENPMEZCUTJ4RUxEaENRVUU0UWl3MFJFRkJXVHRCUVVNeFF6dEJRVU5CTzBGQlEwRTdPMEZCUlVFN1FVRkRRU3hUUVVGVExEQkRRVUZITzBGQlExbzdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHM3UVVGRlFTeFRRVUZUTERaRFFVRk5PMEZCUTJZN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUczdRVUZGUVN4VFFVRlRMRFJEUVVGTE8wRkJRMlE3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVRzN1FVRkZRU3hUUVVGVExESkRRVUZKTzBGQlEySTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHM3UVVGRlFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN08wRkJSVUVzYVVOQlFXbERMSGRGUVVGM1FqczdRVUZGZWtRN1FVRkRRVHM3UVVGRlFUdEJRVU5CTEZkQlFWY3NORU5CUVVzN1FVRkRhRUk3UVVGRFFUczdRVUZGUVN4WFFVRlhMREJEUVVGSE8wRkJRMlE3UVVGRFFUczdRVUZGUVR0QlFVTkJPMEZCUTBFN08wRkJSVUU3UVVGRFFUczdPenM3T3pzN096czdPenM3TzBGRGNrVmxPMEZCUTJZN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVN4VFFVRlRPMEZCUTFRc1QwRkJUenRCUVVOUU96dEJRVVZCTzBGQlEwRTdRVUZEUVRzN096czdPenM3T3pzN096czdPenM3T3pzN096czdPMEZEWkRoRU8wRkJRMDA3UVVGRFRUdEJRVU42UWp0QlFVTkpPMEZCUXpCRU8wRkJRM2hFTzBGQlEwVTdRVUZEVGl4RFFVRkRPenRCUVVWeVF6dEJRVU5tTzBGQlEwRTdRVUZEUVRzN1FVRkZRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVN4blJFRkJaMFFzYzBSQlFXVTdRVUZETDBRN1FVRkRRU3gzUkVGQmQwUXNLME5CUVZFN1FVRkRhRVU3UVVGRFFTd3dSRUZCTUVRc05rTkJRVTA3UVVGRGFFVTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRU3h6UWtGQmMwSXNhMFZCUVd0Q0xIbERRVUY1UXl3clJFRkJaU3hWUVVGVkxIRkVRVUZqTzBGQlEzaElMSE5EUVVGelF5dzJRMEZCVFN4SFFVRkhMR2RFUVVGVExFZEJRVWNzTmtOQlFVMDdRVUZEYWtVN1FVRkRRVHRCUVVOQkxESkNRVUV5UWl4NVJVRkJaU3hEUVVGRExHMUZRVUZUTEdkRVFVRm5SQ3cwUlVGQmEwSTdRVUZEZEVnc05FSkJRVFJDTEN0RlFVRnhRanRCUVVOcVJDeHpRa0ZCYzBJc09FUkJRV003UVVGRGNFTTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRU3hIUVVGSE8wRkJRMGdzZVVKQlFYbENMR2RGUVVGblFpeHBRa0ZCYVVJN1FVRkRNVVFzTmtOQlFUWkRMRFpEUVVGTkxESkRRVUV5UXp0QlFVTTVSanM3UVVGRlFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRU3dyUTBGQkswTTdPMEZCUlM5RExIbENRVUY1UWl3MlEwRkJUVHRCUVVNdlFqdEJRVU5CTzBGQlEwRXNjMEpCUVhOQ0xEUkRRVUZMTEVWQlFVVXNOa05CUVUwN1FVRkRia01zYTBKQlFXdENMREJEUVVGSExFVkJRVVVzTmtOQlFVMDdRVUZETjBJN1FVRkRRU3hMUVVGTE8wRkJRMHc3TzBGQlJVRTdRVUZEUVRzN096czdPenM3T3pzN096czdPMEZEYUVWbE8wRkJRMlk3UVVGRFFUdEJRVU5CTzBGQlEwRXNSMEZCUnl4SlFVRkpPMEZCUTFBN096czdPenM3T3pzN096czdPenRCUTB4bE8wRkJRMllzZVVaQlFYbEdMR0ZCUVdFN1FVRkRkRWM3UVVGRFFUczdRVUZGUVR0QlFVTkJPMEZCUTBFc1IwRkJSenRCUVVOSU96czdPenM3T3pzN096czdPenM3UVVOU1pUdEJRVU5tTzBGQlEwRTdPenM3T3pzN096czdPenM3T3p0QlEwWnRRenRCUVVOd1FqdEJRVU5tTzBGQlEwRTdPenM3T3pzN096czdPenM3T3p0QlEwaGxPMEZCUTJZN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdPenM3T3pzN096czdPenM3T3p0QlExQmxPMEZCUTJZN1FVRkRRVHM3T3pzN096czdPenM3T3pzN08wRkRSa0U3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTJVN1FVRkRaanRCUVVOQk8wRkJRMEVzUjBGQlJ6dEJRVU5JT3pzN096czdPenM3T3pzN096czdRVU5XUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVObE8wRkJRMlk3UVVGRFFUdEJRVU5CTEVkQlFVYzdRVUZEU0RzN096czdPenM3T3pzN096czdPMEZEVW1VN1FVRkRaanRCUVVOQk96czdPenM3T3pzN096czdPenM3T3p0QlEwWlBPMEZCUTBFN1FVRkRRVHM3T3pzN096czdPenM3T3pzN08wRkRSbEU3UVVGRFpqdEJRVU5CTzBGQlEwRXNjMFJCUVhORU8wRkJRM1JFTEN0Q1FVRXJRanRCUVVNdlFpdzBRa0ZCTkVJN1FVRkROVUlzUzBGQlN6dEJRVU5NTzBGQlEwRXNSMEZCUnl4SlFVRkpMRWRCUVVjN08wRkJSVlk3UVVGRFFUdEJRVU5CTEVkQlFVYzdRVUZEU0RzN096czdPenM3T3pzN096czdPenRCUTJKNVJEdEJRVU14UXp0QlFVTm1MSGxDUVVGNVFpeEZRVUZGTEd0RlFVRnJRanRCUVVNM1F6czdPenM3T3pzN096czdPenM3T3p0QlEwZzJReXhEUVVGRE96dEJRVVU1UXp0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFTeEhRVUZITEVkQlFVYzdPMEZCUlU0N1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CT3p0QlFVVkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEVzUzBGQlN6dEJRVU5NTzBGQlEwRTdPMEZCUlVFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTEVkQlFVYzdRVUZEU0R0QlFVTkJPenRCUVVWbE8wRkJRMlk3UVVGRFFTd3lRMEZCTWtNN08wRkJSVE5ETEZOQlFWTXNORVJCUVhGQ08wRkJRemxDTzBGQlEwRTdRVUZEUVN4TFFVRkxPMEZCUTB3c1IwRkJSenRCUVVOSU96czdPenM3T3pzN096czdPenM3UVVNelEyVTdRVUZEWml4NVFrRkJlVUk3UVVGRGVrSTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRU3hIUVVGSE8wRkJRMGc3T3pzN096czdPenM3T3pzN096dEJRMUJsTzBGQlEyWTdRVUZEUVR0QlFVTkJPenRCUVVWQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRXNSMEZCUnp0QlFVTklPenM3T3pzN096czdPenM3T3pzN1FVTldaVHRCUVVObU96dEJRVVZCTzBGQlEwRTdRVUZEUVR0QlFVTkJMRXRCUVVzN1FVRkRURHM3UVVGRlFUdEJRVU5CT3pzN096czdPenM3T3pzN096czdPenRCUTFacFF6dEJRVU5aTzBGQlF6ZERPMEZCUTBFN1FVRkRRVHRCUVVObE8wRkJRMlk3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVN4TFFVRkxPMEZCUTB3N1FVRkRRVHRCUVVOQk8wRkJRMEVzTUVKQlFUQkNMSE5FUVVGTk8wRkJRMmhET3p0QlFVVkJPenRCUVVWQk8wRkJRMEU3UVVGRFFTd3dRa0ZCTUVJc2MwUkJRVTA3UVVGRGFFTTdPMEZCUlVFN08wRkJSVUU3UVVGRFFTeGpRVUZqTERaRVFVRnpRanRCUVVOd1F5d3dRa0ZCTUVJc2MwUkJRVTBzSzBSQlFTdEVMREJFUVVGdFFqdEJRVU5zU0RzN1FVRkZRVHM3UVVGRlFUdEJRVU5CTzBGQlEwRXNNRUpCUVRCQ0xITkVRVUZOTzBGQlEyaERPenRCUVVWQk96dEJRVVZCTzBGQlEwRTdRVUZEUVN3d1FrRkJNRUlzYzBSQlFVMDdRVUZEYUVNN08wRkJSVUU3TzBGQlJVRTdRVUZEUVR0QlFVTkJMREJDUVVFd1FpeHpSRUZCVFR0QlFVTm9RenM3UVVGRlFUczdRVUZGUVR0QlFVTkJPMEZCUTBFc01FSkJRVEJDTEhORVFVRk5PMEZCUTJoRE96dEJRVVZCT3p0QlFVVkJPMEZCUTBFN1FVRkRRVHM3UVVGRlFUdEJRVU5CTzBGQlEwRTdRVUZEUVN4WFFVRlhMR3RDUVVGclFqdEJRVU0zUWpzN1FVRkZRVHRCUVVOQk8wRkJRMEU3UVVGRFFTeFRRVUZUTzBGQlExUXNkMEpCUVhkQ0xITkVRVUZOTzBGQlF6bENPMEZCUTBFc1QwRkJUenRCUVVOUUxFdEJRVXM3UVVGRFRDeEhRVUZITzBGQlEwZzdPenM3T3pzN096czdPenM3T3pzN08wRkRhRVl5UkR0QlFVTndSRHRCUVVOUUxGTkJRVk1zTmtOQlFVOHNUVUZCVFN3MlEwRkJUenRCUVVNM1FqdEJRVU5QTzBGQlExQTdRVUZEUVR0QlFVTkJPenM3T3pzN096czdPMEZEVUVFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRXNSVUZCUlN4TFFVRTBSQ3cwUWtGQk5FSXNiVUpCUVU4c1EwRkJReXhuUlVGQldTeEhRVUZITEcxQ1FVRlBMRU5CUVVNc2IwVkJRV01zUjBGQlJ5eHRRa0ZCVHl4RFFVRkRMR3RHUVVGeFFpeEhRVUZITEcxQ1FVRlBMRU5CUVVNc2MwVkJRV1U3UVVGRGFrMHNSVUZCUlN4RFFVTjVTenRCUVVNelN5eERRVUZETEhkRVFVRjNSRHM3UVVGRmVrUXNNRVpCUVRCR096dEJRVVV4Ump0QlFVTkJPMEZCUTBFN08wRkJSVUU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk96dEJRVVZCTzBGQlEwRTdRVUZEUVR0QlFVTkJPenRCUVVWQk8wRkJRMEU3UVVGRFFUdEJRVU5CT3p0QlFVVkJPMEZCUTBFN1FVRkRRVHM3UVVGRlFUdEJRVU5CTzBGQlEwRTdRVUZEUVN4TlFVRk5PenM3UVVGSFRqdEJRVU5CTzBGQlEwRTdPMEZCUlVFN1FVRkRRVHRCUVVOQk8wRkJRMEU3TzBGQlJVRTdRVUZEUVR0QlFVTkJPenRCUVVWQk8wRkJRMEU3UVVGRFFUczdRVUZGUVRzN1FVRkZRVHRCUVVOQkxFMUJRVTA3T3p0QlFVZE9PMEZCUTBFN1FVRkRRVHM3UVVGRlFTeHRSRUZCYlVRN1FVRkRia1E3UVVGRFFUczdRVUZGUVR0QlFVTkJPMEZCUTBFN08wRkJSVUU3UVVGRFFTeHRRa0ZCYlVJc1ZVRkJWVHRCUVVNM1FqczdRVUZGUVR0QlFVTkJMR2xDUVVGcFFpeGpRVUZqTzBGQlF5OUNPenRCUVVWQk8wRkJRMEVzWjBKQlFXZENMRXRCUVVzc1JVRkJSU3hsUVVGbE8wRkJRM1JET3p0QlFVVkJPenRCUVVWQk96dEJRVVZCTEVOQlFVTTdRVUZEUkRzN096czdPenM3T3pzN1FVTnVSMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFc1JVRkJSU3hMUVVFMFJDdzBRa0ZCTkVJc2JVSkJRVThzUTBGQlF5eHZSVUZCWXl4SFFVRkhMRzFDUVVGUExFTkJRVU1zYTBaQlFYRkNMRWRCUVVjc2JVSkJRVThzUTBGQlF5dzBSVUZCYTBJN1FVRkROMHNzUlVGQlJTeERRVU0wU2p0QlFVTTVTaXhEUVVGRExIbEVRVUY1UkRzN1FVRkZNVVFzTUVaQlFUQkdPenRCUVVVeFJqdEJRVU5CT3p0QlFVVkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVRzN1FVRkZRVHRCUVVOQk8wRkJRMEVzZDBKQlFYZENMRk5CUVZNN1FVRkRha003UVVGRFFUdEJRVU5CTzBGQlEwRXNkVU5CUVhWRExGVkJRVlVzUlVGQlJTeGhRVUZoTzBGQlEyaEZPMEZCUTBFN1FVRkRRVHM3UVVGRlFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJMRTFCUVUwN096dEJRVWRPTzBGQlEwRTdRVUZEUVR0QlFVTkJMRTFCUVUwN096dEJRVWRPTzBGQlEwRTdRVUZEUVRzN1FVRkZRVHRCUVVOQk8wRkJRMEU3UVVGRFFTeFBRVUZQTzBGQlExQTdPMEZCUlVFN1FVRkRRVHRCUVVOQk8wRkJRMEU3T3p0QlFVZEJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFTeEhRVUZITzBGQlEwZzdRVUZEUVR0QlFVTkJPenRCUVVWQk96dEJRVVZCT3p0QlFVVkJMRU5CUVVNN1FVRkRSRHM3T3pzN096czdPenM3UVVOcVJrRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEVzUlVGQlJTeExRVUUwUkN3MFFrRkJORUlzYlVKQlFVOHNRMEZCUXl4dlJVRkJZeXhIUVVGSExHMUNRVUZQTEVOQlFVTXNhMFpCUVhGQ0xFZEJRVWNzYlVKQlFVOHNRMEZCUXl4elJrRkJkVUlzUjBGQlJ5eHRRa0ZCVHl4RFFVRkRMRFJGUVVGclFqdEJRVU12VFN4RlFVRkZMRU5CUTNGTU8wRkJRM1pNTEVOQlFVTXNlVVZCUVhsRk96dEJRVVV4UlN3d1JrRkJNRVk3TzBGQlJURkdPMEZCUTBFN1FVRkRRVHM3UVVGRlFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3TzBGQlJVRTdRVUZEUVR0QlFVTkJMSGRDUVVGM1FpeFRRVUZUTzBGQlEycERPMEZCUTBFc05FSkJRVFJDTEZWQlFWVTdRVUZEZEVNc09FSkJRVGhDTEZWQlFWVTdRVUZEZUVNc05FSkJRVFJDTEZWQlFWVTdRVUZEZEVNc1owTkJRV2RETEZWQlFWVTdRVUZETVVNc2RVTkJRWFZETEZWQlFWVXNSVUZCUlN4aFFVRmhPMEZCUTJoRk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRXNaMFJCUVdkRUxIRkNRVUZ4UWl4SFFVRkhMRzlDUVVGdlFqdEJRVU0xUmp0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUczdRVUZGUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3TzBGQlJVRTdRVUZEUVR0QlFVTkJPenRCUVVWQk8wRkJRMEU3UVVGRFFUdEJRVU5CT3p0QlFVVkJPenRCUVVWQk8wRkJRMEU3UVVGRFFUczdRVUZGUVR0QlFVTkJPMEZCUTBFN1FVRkRRU3hOUVVGTk96czdRVUZIVGp0QlFVTkJPMEZCUTBFN08wRkJSVUU3UVVGRFFUdEJRVU5CT3p0QlFVVkJPMEZCUTBFN1FVRkRRU3hOUVVGTk96czdRVUZIVGp0QlFVTkJPMEZCUTBFN1FVRkRRU3hSUVVGUk8wRkJRMUk3UVVGRFFUdEJRVU5CT3p0QlFVVkJPMEZCUTBFN1FVRkRRVHRCUVVOQk96dEJRVVZCTEN0Q1FVRXJRanM3UVVGRkwwSTdRVUZEUVR0QlFVTkJPMEZCUTBFc1UwRkJVenRCUVVOVU96dEJRVVZCTzBGQlEwRTdRVUZEUVRzN1FVRkZRVHM3UVVGRlFUdEJRVU5CTzBGQlEwRTdPMEZCUlVFN1FVRkRRVHRCUVVOQk96dEJRVVZCT3p0QlFVVkJPenRCUVVWQk96dEJRVVZCT3p0QlFVVkJPenRCUVVWQk96dEJRVVZCTzBGQlEwRTdPMEZCUlVFN08wRkJSVUU3TzBGQlJVRTdRVUZEUVR0QlFVTkJPenRCUVVWQk8wRkJRMEVzYTBOQlFXdERMSEZDUVVGeFFqczdRVUZGZGtRN08wRkJSVUVzTUVOQlFUQkRMREJDUVVFd1FqdEJRVU53UlRzN1FVRkZRVHRCUVVOQk8wRkJRMEU3UVVGRFFUczdRVUZGUVRzN1FVRkZRVHRCUVVOQk8wRkJRMEU3TzBGQlJVRTdPMEZCUlVFc01FTkJRVEJETEdsRVFVRnBSRHRCUVVNelJqczdRVUZGUVRzN1FVRkZRVHM3UVVGRlFUdEJRVU5CT3p0QlFVVkJPMEZCUTBFN1FVRkRRVHRCUVVOQk96dEJRVVZCT3p0QlFVVkJPMEZCUTBFN08wRkJSVUU3TzBGQlJVRTdPMEZCUlVFN1FVRkRRVHM3UVVGRlFUczdRVUZGUVR0QlFVTkJPenRCUVVWQk8wRkJRMEU3UVVGRFFTeE5RVUZOT3pzN1FVRkhUanRCUVVOQkxEaERRVUU0UXpzN1FVRkZPVU03UVVGRFFUdEJRVU5CT3p0QlFVVkJPMEZCUTBFN1FVRkRRVHM3UVVGRlFUdEJRVU5CTzBGQlEwRTdRVUZEUVRzN1FVRkZRVHM3UVVGRlFUdEJRVU5CT3p0QlFVVkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3TzBGQlJVRTdRVUZEUVN3NFIwRkJPRWM3TzBGQlJUbEhPMEZCUTBFN08wRkJSVUU3UVVGRFFUdEJRVU5CTzBGQlEwRTdPMEZCUlVFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFTeE5RVUZOT3pzN1FVRkhUanRCUVVOQk96dEJRVVZCTzBGQlEwRTdRVUZEUVRzN1FVRkZRVHRCUVVOQk96dEJRVVZCTzBGQlEwRTdRVUZEUVN4dlJFRkJiMFFzVDBGQlR6dEJRVU16UkRzN1FVRkZRVHRCUVVOQk8wRkJRMEVzVDBGQlR6dEJRVU5RT3p0QlFVVkJPMEZCUTBFN1FVRkRRVHRCUVVOQk96czdRVUZIUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk96dEJRVVZCTzBGQlEwRTdPMEZCUlVFN1FVRkRRVHRCUVVOQk8wRkJRMEVzVDBGQlR6dEJRVU5RTzBGQlEwRXNSMEZCUnp0QlFVTklPMEZCUTBFN1FVRkRRVHM3UVVGRlFUczdRVUZGUVRzN1FVRkZRU3hEUVVGRE8wRkJRMFE3T3pzN096czdPenM3TzBGRGRGUkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTEVWQlFVVXNTMEZCTkVRN1FVRkRPVVFzUlVGQlJTeERRVU50Unp0QlFVTnlSeXhEUVVGRExIVkNRVUYxUWpzN1FVRkZlRUk3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPenRCUVVWQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHM3UVVGRlFTeHRSRUZCYlVRN1FVRkRia1E3TzBGQlJVRTdRVUZEUVR0QlFVTkJMSEZIUVVGeFJ5eHJRMEZCYTBNN1FVRkRka2s3UVVGRFFUczdRVUZGUVR0QlFVTkJMRXRCUVVzN08wRkJSVXc3UVVGRFFUdEJRVU5CTzBGQlEwRTdPMEZCUlVFN1FVRkRRU3hMUVVGTE96dEJRVVZNTzBGQlEwRTdRVUZEUVR0QlFVTkJPenRCUVVWQk8wRkJRMEVzSzBKQlFTdENPenRCUVVVdlFqdEJRVU5CTzBGQlEwRTdRVUZEUVRzN1FVRkZRVHM3UVVGRlFUczdRVUZGUVN4RFFVRkRPMEZCUTBRN096czdPenM3T3pzN08wRkRiRVZCTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQkxFVkJRVVVzUzBGQk5FUXNORUpCUVRSQ0xHMUNRVUZQTEVOQlFVTXNjVVZCUVdVN1FVRkRha2dzUlVGQlJTeERRVU4xU0R0QlFVTjZTQ3hEUVVGRExEUkNRVUUwUWpzN1FVRkZOMEk3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk96dEJRVVZCTzBGQlEwRTdRVUZEUVR0QlFVTkJMRFJDUVVFMFFqczdRVUZGTlVJN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPenRCUVVWQk8wRkJRMEVzY1VKQlFYRkNMRWxCUVVrc1NVRkJTU3hYUVVGWE8wRkJRM2hET3p0QlFVVkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUczdRVUZGUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQkxFOUJRVTg3TzBGQlJWQTdRVUZEUVR0QlFVTkJPenRCUVVWQk8wRkJRMEU3UVVGRFFUczdRVUZGUVR0QlFVTkJPMEZCUTBFN08wRkJSVUU3UVVGRFFUdEJRVU5CTEZGQlFWRXNVMEZCVXl3eVFrRkJNa0k3UVVGRE5VTTdRVUZEUVR0QlFVTkJPMEZCUTBFN08wRkJSVUU3UVVGRFFUdEJRVU5CTEZkQlFWYzdPMEZCUlZnN1FVRkRRVHRCUVVOQk96dEJRVVZCTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN08wRkJSVUU3UVVGRFFUdEJRVU5CT3p0QlFVVkJPMEZCUTBFc2NVUkJRWEZFT3p0QlFVVnlSRHRCUVVOQk96dEJRVVZCTzBGQlEwRTdRVUZEUVRzN1FVRkZRVHRCUVVOQk96dEJRVVZCTzBGQlEwRTdRVUZEUVR0QlFVTkJPenRCUVVWQkxHdElRVUZyU0R0QlFVTnNTRHM3UVVGRlFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk96dEJRVVZCTzBGQlEwRTdPMEZCUlVFN1FVRkRRU3hwUlVGQmFVVTdRVUZEYWtVN08wRkJSVUU3UVVGRFFUdEJRVU5CTzBGQlEwRTdPMEZCUlVFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPenRCUVVWQk8wRkJRMEU3TzBGQlJVRTdRVUZEUVR0QlFVTkJPenRCUVVWQk8wRkJRMEU3UVVGRFFUczdRVUZGUVR0QlFVTkJPenRCUVVWQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPenRCUVVWQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdPMEZCUlVFN1FVRkRRVHRCUVVOQk8wRkJRMEVzUzBGQlN6czdRVUZGVER0QlFVTkJPMEZCUTBFc1MwRkJTenM3UVVGRlREdEJRVU5CTzBGQlEwRTdRVUZEUVRzN1FVRkZRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CT3p0QlFVVkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3TzBGQlJVRTdRVUZEUVR0QlFVTkJPenRCUVVWQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdPMEZCUlVFN1FVRkRRVHM3UVVGRlFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFc1MwRkJTenM3UVVGRlREdEJRVU5CTzBGQlEwRTdRVUZEUVRzN1FVRkZRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVRzN1FVRkZRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVRzN1FVRkZRVHRCUVVOQk8wRkJRMEU3UVVGRFFTeFBRVUZQTzBGQlExQTdPMEZCUlVFN1FVRkRRVHRCUVVOQk96dEJRVVZCTzBGQlEwRTdRVUZEUVRzN1FVRkZRVHRCUVVOQk8wRkJRMEU3TzBGQlJVRTdRVUZEUVRzN1FVRkZRVHM3UVVGRlFUdEJRVU5CTEhkRVFVRjNSRHRCUVVONFJEdEJRVU5CTzBGQlEwRXNVVUZCVVR0QlFVTlNPMEZCUTBFN08wRkJSVUU3UVVGRFFUdEJRVU5CT3p0QlFVVkJMRk5CUVZNN1FVRkRWRHRCUVVOQk96dEJRVVZCTzBGQlEwRTdPMEZCUlVFN08wRkJSVUVzUTBGQlF6dEJRVU5FT3pzN096czdPenM3T3p0QlF6TlNRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVN4RlFVRkZMRXRCUVRSRU8wRkJRemxFTEVWQlFVVXNRMEZETUVjN1FVRkROVWNzUTBGQlF5eDFRa0ZCZFVJN08wRkJSWGhDTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CT3p0QlFVVkJPMEZCUTBFN1FVRkRRVHM3UVVGRlFUdEJRVU5CTzBGQlEwRTdPMEZCUlVFN1FVRkRRVHRCUVVOQk96dEJRVVZCTzBGQlEwRTdRVUZEUVRzN1FVRkZRVHRCUVVOQk8wRkJRMEVzVFVGQlRUdEJRVU5PTzBGQlEwRTdRVUZEUVRzN1FVRkZRVHRCUVVOQkxEUkRRVUUwUXl4clFrRkJhMEk3UVVGRE9VUTdPMEZCUlVFN1FVRkRRVHRCUVVOQkxITkRRVUZ6UXl4elFrRkJjMEk3UVVGRE5VUXNTMEZCU3pzN1FVRkZURHRCUVVOQkxIbERRVUY1UXl4elFrRkJjMEk3UVVGREwwUXNTMEZCU3pzN1FVRkZURHRCUVVOQk8wRkJRMEU3UVVGRFFUczdRVUZGUVR0QlFVTkJPenRCUVVWQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdPMEZCUlVFN1FVRkRRU3hMUVVGTE96dEJRVVZNTzBGQlEwRXNNa1JCUVRKRUxITkNRVUZ6UWp0QlFVTnFSanM3UVVGRlFUczdRVUZGUVRzN1FVRkZRU3hEUVVGRE8wRkJRMFE3T3pzN096czdPenM3TzBGRGNFWkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTEVWQlFVVXNTMEZCTkVRc05FSkJRVFJDTEcxQ1FVRlBMRU5CUVVNc2NVVkJRV1U3UVVGRGFrZ3NSVUZCUlN4RFFVTjVTRHRCUVVNelNDeERRVUZETERSQ1FVRTBRanM3UVVGRk4wSTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CT3p0QlFVVkJPMEZCUTBFN1FVRkRRVHRCUVVOQkxFdEJRVXM3TzBGQlJVdzdRVUZEUVR0QlFVTkJMRXRCUVVzN08wRkJSVXc3UVVGRFFUdEJRVU5CTEV0QlFVczdPMEZCUlV3N1FVRkRRVHRCUVVOQk96dEJRVVZCTzBGQlEwRTdRVUZEUVR0QlFVTkJPenRCUVVWQk8wRkJRMEVzUzBGQlN6czdRVUZGVER0QlFVTkJPenRCUVVWQk8wRkJRMEU3UVVGRFFUdEJRVU5CT3p0QlFVVkJPMEZCUTBFN08wRkJSVUU3UVVGRFFTeExRVUZMT3p0QlFVVk1MR2xEUVVGcFF6dEJRVU5xUXp0QlFVTkJPenRCUVVWQk8wRkJRMEU3UVVGRFFUdEJRVU5CT3p0QlFVVkJPMEZCUTBFN08wRkJSVUU3UVVGRFFTeExRVUZMT3p0QlFVVk1PMEZCUTBFc1owcEJRV2RLTEZOQlFWTTdRVUZEZWtvN1FVRkRRVHM3UVVGRlFUczdRVUZGUVRzN1FVRkZRU3hEUVVGRE8wRkJRMFE3T3pzN096czdPenM3TzBGRGNrWkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTEVWQlFVVXNTMEZCTkVRc05FSkJRVFJDTEcxQ1FVRlBMRU5CUVVNc2IwVkJRV01zUjBGQlJ5eHRRa0ZCVHl4RFFVRkRMR3RHUVVGeFFpeEhRVUZITEcxQ1FVRlBMRU5CUVVNc2MwWkJRWFZDTEVkQlFVY3NiVUpCUVU4c1EwRkJReXcwUlVGQmEwSXNSMEZCUnl4dFFrRkJUeXhEUVVGRExEUkZRVUZyUWl4SFFVRkhMRzFDUVVGUExFTkJRVU1zTUVWQlFXbENMRWRCUVVjc2JVSkJRVThzUTBGQlF5dzBSVUZCYTBJc1IwRkJSeXh0UWtGQlR5eERRVUZETEdkSFFVRTBRanRCUVVNMVZTeEZRVUZGTEVOQlEydFJPMEZCUTNCUkxFTkJRVU1zYlVsQlFXMUpPenRCUVVWd1NTd3dSa0ZCTUVZN08wRkJSVEZHTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHM3UVVGRlFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3TzBGQlJVRTdRVUZEUVR0QlFVTkJMSGRDUVVGM1FpeFRRVUZUTzBGQlEycERPMEZCUTBFN1FVRkRRU3cwUWtGQk5FSXNWVUZCVlR0QlFVTjBReXdyUTBGQkswTXNWVUZCVlR0QlFVTjZSQ3huUTBGQlowTXNWVUZCVlR0QlFVTXhReXcwUWtGQk5FSXNWVUZCVlR0QlFVTjBReXc0UWtGQk9FSXNWVUZCVlR0QlFVTjRReXhuUTBGQlowTXNWVUZCVlR0QlFVTXhReXc0UTBGQk9FTXNWVUZCVlR0QlFVTjRSQ3h6UkVGQmMwUXNWVUZCVlR0QlFVTm9SU3hyUkVGQmEwUXNWVUZCVlR0QlFVTTFSQ3gxUTBGQmRVTXNWVUZCVlN4RlFVRkZMR0ZCUVdFN1FVRkRhRVU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CT3p0QlFVVkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVRzN1FVRkZRVHRCUVVOQkxFMUJRVTA3T3p0QlFVZE9PMEZCUTBFN1FVRkRRVHM3UVVGRlFUdEJRVU5CTzBGQlEwRTdPMEZCUlVFN1FVRkRRVHRCUVVOQkxFMUJRVTA3T3p0QlFVZE9PMEZCUTBFN1FVRkRRVHM3UVVGRlFUdEJRVU5CTzBGQlEwRTdRVUZEUVRzN1FVRkZRVHRCUVVOQk8wRkJRMEVzVDBGQlR6czdRVUZGVUR0QlFVTkJPMEZCUTBFN08wRkJSVUU3UVVGRFFUczdRVUZGUVRzN1FVRkZRVHM3UVVGRlFUczdRVUZGUVR0QlFVTkJPenRCUVVWQk8wRkJRMEU3UVVGRFFUdEJRVU5CT3p0QlFVVkJPenRCUVVWQk8wRkJRMEU3UVVGRFFUczdRVUZGUVR0QlFVTkJPenRCUVVWQk96dEJRVVZCT3p0QlFVVkJPMEZCUTBFN08wRkJSVUU3UVVGRFFUdEJRVU5CTzBGQlEwRTdPMEZCUlVFN08wRkJSVUU3TzBGQlJVRTdRVUZEUVRzN1FVRkZRVHRCUVVOQk8wRkJRMEVzVFVGQlRUczdPMEZCUjA0N1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTEU5QlFVODdRVUZEVURzN1FVRkZRVHRCUVVOQk8wRkJRMEU3UVVGRFFTeFBRVUZQTzBGQlExQTdPMEZCUlVFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUczdRVUZGUVRzN1FVRkZRVHM3UVVGRlFUczdRVUZGUVRzN1FVRkZRVHRCUVVOQk96dEJRVVZCTzBGQlEwRTdRVUZEUVRzN1FVRkZRVHM3UVVGRlFUczdRVUZGUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHM3UVVGRlFUdEJRVU5CTzBGQlEwRTdRVUZEUVN4VFFVRlRPMEZCUTFRN08wRkJSVUU3UVVGRFFUczdRVUZGUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk96dEJRVVZCTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN08wRkJSVUU3UVVGRFFTeFBRVUZQTzBGQlExQTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRU3hQUVVGUE8wRkJRMUE3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPenRCUVVWQk8wRkJRMEU3TzBGQlJVRTdRVUZEUVRzN1FVRkZRVHRCUVVOQk8wRkJRMEU3UVVGRFFTeFRRVUZUTzBGQlExUXNUMEZCVHp0QlFVTlFPenRCUVVWQk8wRkJRMEU3TzBGQlJVRTdPMEZCUlVFN08wRkJSVUU3TzBGQlJVRTdPMEZCUlVFN1FVRkRRVHM3UVVGRlFUczdRVUZGUVRzN1FVRkZRVHRCUVVOQkxFOUJRVTg3UVVGRFVEczdRVUZGUVR0QlFVTkJPMEZCUTBFN08wRkJSVUU3UVVGRFFUczdRVUZGUVR0QlFVTkJPMEZCUTBFN08wRkJSVUU3UVVGRFFTdzRSRUZCT0VRN08wRkJSVGxFTzBGQlEwRTdRVUZEUVRzN1FVRkZRVHRCUVVOQk8wRkJRMEU3TzBGQlJVRTdPMEZCUlVFN1FVRkRRVHM3UVVGRlFUdEJRVU5CTzBGQlEwRXNVMEZCVXp0QlFVTlVMRTlCUVU4N08wRkJSVkE3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVRzN08wRkJSMEU3UVVGRFFUczdRVUZGUVRzN1FVRkZRVHM3UVVGRlFUdEJRVU5CTzBGQlEwRXNNa05CUVRKRExHVkJRV1U3UVVGRE1VUTdPMEZCUlVFN1FVRkRRVHRCUVVOQkxESkRRVUV5UXl4bFFVRmxPMEZCUXpGRU8wRkJRMEU3TzBGQlJVRTdRVUZEUVR0QlFVTkJPMEZCUTBFc1RVRkJUVHM3TzBGQlIwNDdRVUZEUVR0QlFVTkJPenRCUVVWQk8wRkJRMEU3UVVGRFFUczdRVUZGUVR0QlFVTkJMR3RFUVVGclJDeFBRVUZQTzBGQlEzcEVPenRCUVVWQk8wRkJRMEVzVDBGQlR6dEJRVU5RT3p0QlFVVkJPMEZCUTBFN1FVRkRRVHRCUVVOQk96czdRVUZIUVR0QlFVTkJPenRCUVVWQk8wRkJRMEU3UVVGRFFUczdRVUZGUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk96dEJRVVZCTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFc1QwRkJUenRCUVVOUUxFdEJRVXNzUjBGQlJ6czdRVUZGVWpzN1FVRkZRVHRCUVVOQk8wRkJRMEU3TzBGQlJVRTdRVUZEUVR0QlFVTkJMRWRCUVVjN1FVRkRTRHRCUVVOQk8wRkJRMEU3UVVGRFFUczdRVUZGUVRzN1FVRkZRVHM3UVVGRlFTeERRVUZETzBGQlEwUTdPenM3T3pzN096czdPMEZETDFsQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJMRVZCUVVVc1MwRkJORVFzTkVKQlFUUkNMRzFDUVVGUExFTkJRVU1zYjBWQlFXTXNSMEZCUnl4dFFrRkJUeXhEUVVGRExEaEVRVUZYTzBGQlEzUkpMRVZCUVVVc1EwRkRhMGs3UVVGRGNFa3NRMEZCUXl4eFEwRkJjVU03TzBGQlJYUkRMREJHUVVFd1JqczdRVUZGTVVZN08wRkJSVUU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk96dEJRVVZCTzBGQlEwRTdRVUZEUVR0QlFVTkJMRzlDUVVGdlFqdEJRVU53UWp0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFTeDNRa0ZCZDBJN1FVRkRlRUk3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVRzN1FVRkZRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CT3p0QlFVVkJPMEZCUTBFN1FVRkRRVHM3UVVGRlFUdEJRVU5CTzBGQlEwRXNUVUZCVFRzN08wRkJSMDQ3UVVGRFFUdEJRVU5CTEUxQlFVMDdPenRCUVVkT08wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVRzN1FVRkZRVHRCUVVOQk8wRkJRMEVzVFVGQlRUczdPMEZCUjA0N1FVRkRRVHRCUVVOQk96dEJRVVZCTzBGQlEwRTdRVUZEUVRzN1FVRkZRVHRCUVVOQkxHdEVRVUZyUkN4UFFVRlBPMEZCUTNwRU96dEJRVVZCTzBGQlEwRXNUMEZCVHp0QlFVTlFPenRCUVVWQk8wRkJRMEU3UVVGRFFUdEJRVU5CT3pzN1FVRkhRVHM3UVVGRlFUczdRVUZGUVN4RFFVRkRPMEZCUTBRN096czdPenM3T3pzN08wRkRja2RCTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQkxFVkJRVVVzUzBGQk5FUXNORUpCUVRSQ0xHMUNRVUZQTEVOQlFVTXNiMFZCUVdNc1IwRkJSeXh0UWtGQlR5eERRVUZETEd0R1FVRnhRaXhIUVVGSExHMUNRVUZQTEVOQlFVTXNjMFpCUVhWQ0xFZEJRVWNzYlVKQlFVOHNRMEZCUXl3MFJVRkJhMEk3UVVGREwwMHNSVUZCUlN4RFFVTnpURHRCUVVONFRDeERRVUZETEhsRlFVRjVSVHM3UVVGRk1VVXNNRVpCUVRCR096dEJRVVV4Ump0QlFVTkJPMEZCUTBFN08wRkJSVUU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk96dEJRVVZCTzBGQlEwRTdRVUZEUVN4M1FrRkJkMElzVTBGQlV6dEJRVU5xUXp0QlFVTkJMRzlEUVVGdlF5eFZRVUZWTzBGQlF6bERMRGhDUVVFNFFpeFZRVUZWTzBGQlEzaERMSEZEUVVGeFF5eFZRVUZWTEVWQlFVVXNZVUZCWVR0QlFVTTVSRHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFc2FVTkJRV2xETEcxQ1FVRnRRaXhKUVVGSkxHOUNRVUZ2UWl4SlFVRkpMRzFDUVVGdFFpeEpRVUZKTEc5Q1FVRnZRanRCUVVNelNEdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdPMEZCUlVFN1FVRkRRVHRCUVVOQkxEaENRVUU0UWpzN1FVRkZPVUk3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEVzYzBKQlFYTkNPMEZCUTNSQ0xFMUJRVTA3T3p0QlFVZE9PMEZCUTBFN1FVRkRRVHM3UVVGRlFUdEJRVU5CTzBGQlEwRTdPMEZCUlVFN1FVRkRRVHRCUVVOQkxFMUJRVTA3T3p0QlFVZE9PMEZCUTBFN08wRkJSVUU3TzBGQlJVRTdRVUZEUVR0QlFVTkJMRkZCUVZFN1FVRkRVanRCUVVOQk96dEJRVVZCTzBGQlEwRTdRVUZEUVR0QlFVTkJPenRCUVVWQk8wRkJRMEU3TzBGQlJVRTdRVUZEUVN4TlFVRk5PenM3UVVGSFRqdEJRVU5CTEhGRlFVRnhSU3h4UWtGQmNVSTdRVUZETVVZc2QwVkJRWGRGT3p0QlFVVjRSU3cyUTBGQk5rTXNZMEZCWXpzN1FVRkZNMFE3UVVGRFFUdEJRVU5CT3p0QlFVVkJPMEZCUTBFN08wRkJSVUU3UVVGRFFUdEJRVU5CTzBGQlEwRXNVVUZCVVRzN08wRkJSMUk3UVVGRFFUdEJRVU5CT3p0QlFVVkJPMEZCUTBFN1FVRkRRVHRCUVVOQk96dEJRVVZCTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFc1lVRkJZVHRCUVVOaU8wRkJRMEVzV1VGQldUczdPMEZCUjFvN1FVRkRRVHRCUVVOQkxFOUJRVTg3UVVGRFVEczdRVUZGUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTEUxQlFVMDdPenRCUVVkT08wRkJRMEVzSzBSQlFTdEVMR2RDUVVGblFqczdRVUZGTDBVN1FVRkRRVHM3UVVGRlFUdEJRVU5CT3p0QlFVVkJPMEZCUTBFN1FVRkRRVHM3UVVGRlFUdEJRVU5CTzBGQlEwRTdPMEZCUlVFN08wRkJSVUU3UVVGRFFUczdRVUZGUVN3MlIwRkJOa2M3TzBGQlJUZEhPMEZCUTBFc01rSkJRVEpDT3p0QlFVVXpRanRCUVVOQk8wRkJRMEU3TzBGQlJVRTdRVUZEUVN4VlFVRlZPenM3UVVGSFZqdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPenRCUVVWQk8wRkJRMEU3UVVGRFFUdEJRVU5CT3p0QlFVVkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3TzBGQlJVRXNkVWRCUVhWSE96dEJRVVYyUnp0QlFVTkJPenRCUVVWQk8wRkJRMEU3UVVGRFFUdEJRVU5CT3p0QlFVVkJPMEZCUTBFN1FVRkRRVHRCUVVOQk96dEJRVVZCT3p0QlFVVkJPMEZCUTBFN08wRkJSVUU3TzBGQlJVRTdRVUZEUVR0QlFVTkJMRTlCUVU4N1FVRkRVRHM3UVVGRlFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN08wRkJSVUU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHM3UVVGRlFUdEJRVU5CTzBGQlEwRXNhMFZCUVd0RkxITkNRVUZ6UWl4SFFVRkhMR3RDUVVGclFqczdRVUZGTjBjN1FVRkRRVHRCUVVOQk8wRkJRMEVzVFVGQlRUczdPMEZCUjA0N1FVRkRRVHRCUVVOQk96dEJRVVZCTzBGQlEwRTdRVUZEUVRzN1FVRkZRVHRCUVVOQkxHdEVRVUZyUkN4UFFVRlBPMEZCUTNwRU96dEJRVVZCTzBGQlEwRXNUMEZCVHp0QlFVTlFPenRCUVVWQk8wRkJRMEU3UVVGRFFUdEJRVU5CT3pzN1FVRkhRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTEVkQlFVYzdRVUZEU0R0QlFVTkJPMEZCUTBFN08wRkJSVUU3TzBGQlJVRTdPMEZCUlVFc1EwRkJRenRCUVVORU96czdPenM3T3pzN096dEJRM1pVUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFTeEZRVUZGTEV0QlFUUkVMRFJDUVVFMFFpeHRRa0ZCVHl4RFFVRkRMRzlGUVVGakxFZEJRVWNzYlVKQlFVOHNRMEZCUXl4clJrRkJjVUlzUjBGQlJ5eHRRa0ZCVHl4RFFVRkRMSE5HUVVGMVFpeEhRVUZITEcxQ1FVRlBMRU5CUVVNc05FVkJRV3RDTzBGQlF5OU5MRVZCUVVVc1EwRkRaMHc3UVVGRGJFd3NRMEZCUXl4NVJVRkJlVVU3TzBGQlJURkZMREJHUVVFd1JqczdRVUZGTVVZN1FVRkRRVHRCUVVOQk96dEJRVVZCTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUczdRVUZGUVR0QlFVTkJPMEZCUTBFc2QwSkJRWGRDTEZOQlFWTTdRVUZEYWtNc05FSkJRVFJDTEZWQlFWVTdRVUZEZEVNc1owTkJRV2RETEZWQlFWVTdRVUZETVVNc05FSkJRVFJDTEZWQlFWVTdRVUZEZEVNc09FSkJRVGhDTEZWQlFWVTdRVUZEZUVNc2RVTkJRWFZETEZWQlFWVTdRVUZEYWtRc2EwTkJRV3RETEZWQlFWVTdRVUZETlVNc2NVTkJRWEZETEZWQlFWVTdRVUZETDBNN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFTeHhRMEZCY1VNc05rSkJRVFpDTEc5Q1FVRnZRaXcyUWtGQk5rSXNaMEpCUVdkQ0xEWkNRVUUyUWp0QlFVTm9TeXd5UjBGQk1rYzdPMEZCUlROSExHbERRVUZwUXl4bFFVRmxMRWxCUVVrc2NVSkJRWEZDTzBGQlEzcEZMREJEUVVFd1F5eHJRa0ZCYTBJc01rSkJRVEpDTEd0Q1FVRnJRaXcwUWtGQk5FSXNhMEpCUVd0Q08wRkJRM1pLTzBGQlEwRTdRVUZEUVRzN1FVRkZRVHRCUVVOQk8wRkJRMEU3UVVGRFFUczdRVUZGUVR0QlFVTkJMR2RDUVVGblFqdEJRVU5vUWl4clEwRkJhME1zYlVKQlFXMUNMSGxDUVVGNVFpeHZRa0ZCYjBJN1FVRkRiRWNzVVVGQlVUczdPMEZCUjFJN08wRkJSVUU3UVVGRFFTeE5RVUZOT3pzN1FVRkhUanRCUVVOQk8wRkJRMEVzVFVGQlRUczdPMEZCUjA0N1FVRkRRVHRCUVVOQk96dEJRVVZCTzBGQlEwRTdRVUZEUVN4UlFVRlJPenM3UVVGSFVqczdRVUZGUVR0QlFVTkJPMEZCUTBFc1QwRkJUenRCUVVOUU8wRkJRMEU3UVVGRFFTeFBRVUZQT3p0QlFVVlFPMEZCUTBFN1FVRkRRVHM3UVVGRlFUczdRVUZGUVR0QlFVTkJMRTFCUVUwN096dEJRVWRPTzBGQlEwRTdRVUZEUVR0QlFVTkJPenRCUVVWQk96dEJRVVZCTERaRVFVRTJSRHM3TzBGQlJ6ZEVPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3TzBGQlJVRTdRVUZEUVRzN1FVRkZRVHM3UVVGRlFUdEJRVU5CTzBGQlEwRXNVMEZCVXp0QlFVTlVPenRCUVVWQk8wRkJRMEU3TzBGQlJVRTdRVUZEUVR0QlFVTkJPMEZCUTBFN08wRkJSVUU3UVVGRFFUczdRVUZGUVN3clJFRkJLMFE3T3p0QlFVY3ZSRHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CT3p0QlFVVkJPMEZCUTBFN08wRkJSVUU3TzBGQlJVRTdRVUZEUVR0QlFVTkJMRk5CUVZNN1FVRkRWRHM3UVVGRlFUdEJRVU5CT3p0QlFVVkJPMEZCUTBFN1FVRkRRVHRCUVVOQk96dEJRVVZCTEN0Q1FVRXJRanM3UVVGRkwwSTdRVUZEUVR0QlFVTkJPenRCUVVWQk8wRkJRMEU3UVVGRFFUdEJRVU5CTEZOQlFWTTdRVUZEVkR0QlFVTkJPMEZCUTBFN08wRkJSVUU3UVVGRFFUdEJRVU5CTzBGQlEwRTdPMEZCUlVFN1FVRkRRVHRCUVVOQk96dEJRVVZCTzBGQlEwRTdPMEZCUlVFN1FVRkRRVHRCUVVOQk8wRkJRMEU3TzBGQlJVRTdRVUZEUVRzN1FVRkZRVHM3UVVGRlFUczdRVUZGUVRzN1FVRkZRVHRCUVVOQk8wRkJRMEU3TzBGQlJVRTdRVUZEUVR0QlFVTkJPenRCUVVWQkxESkVRVUV5UkRzN08wRkJSek5FTzBGQlEwRTdPMEZCUlVFN1FVRkRRVHM3UVVGRlFUdEJRVU5CTzBGQlEwRTdPMEZCUlVFN08wRkJSVUU3UVVGRFFTeHhSVUZCY1VVc1UwRkJVenRCUVVNNVJUdEJRVU5CT3p0QlFVVkJPMEZCUTBFN08wRkJSVUU3UVVGRFFUdEJRVU5CT3p0QlFVVkJPMEZCUTBFN08wRkJSVUU3UVVGRFFUdEJRVU5CTzBGQlEwRTdPMEZCUlVFN1FVRkRRVHRCUVVOQk8wRkJRMEU3TzBGQlJVRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHM3UVVGRlFUdEJRVU5CTzBGQlEwRXNUVUZCVFRzN08wRkJSMDQ3UVVGRFFUdEJRVU5CTEUxQlFVMDdPenRCUVVkT08wRkJRMEU3UVVGRFFTeE5RVUZOT3pzN1FVRkhUanRCUVVOQk8wRkJRMEU3TzBGQlJVRTdRVUZEUVR0QlFVTkJPenRCUVVWQk8wRkJRMEVzYTBSQlFXdEVMRTlCUVU4N1FVRkRla1E3TzBGQlJVRTdRVUZEUVN4UFFVRlBPMEZCUTFBN08wRkJSVUU3UVVGRFFUdEJRVU5CTzBGQlEwRTdPenRCUVVkQk8wRkJRMEU3UVVGRFFUdEJRVU5CT3p0QlFVVkJPMEZCUTBFN1FVRkRRVHM3UVVGRlFUdEJRVU5CTEVkQlFVYzdRVUZEU0R0QlFVTkJPMEZCUTBFN08wRkJSVUU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVN4SFFVRkhPMEZCUTBnN1FVRkRRVHRCUVVOQk96dEJRVVZCT3p0QlFVVkJPenRCUVVWQkxFTkJRVU03UVVGRFJEczdPenM3T3pzN096czdRVU0zVlVFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRXNSVUZCUlN4TFFVRTBSQ3cwUWtGQk5FSXNiVUpCUVU4c1EwRkJReXhyUlVGQlowSXNSMEZCUnl4dFFrRkJUeXhEUVVGRExHOUZRVUZqTEVkQlFVY3NiVUpCUVU4c1EwRkJReXcwUlVGQmEwSXNSMEZCUnl4dFFrRkJUeXhEUVVGRExHdEdRVUZ4UWl4SFFVRkhMRzFDUVVGUExFTkJRVU1zT0VWQlFXMUNMRWRCUVVjc2JVSkJRVThzUTBGQlF5dzBSVUZCYTBJc1IwRkJSeXh0UWtGQlR5eERRVUZETERCR1FVRjVRanRCUVVOMlV5eEZRVUZGTEVOQlEzRlFPMEZCUTNaUUxFTkJRVU1zTUVkQlFUQkhPenRCUVVVelJ5d3dSa0ZCTUVZN08wRkJSVEZHTzBGQlEwRTdRVUZEUVN4dlEwRkJiME1zZDBKQlFYZENMRzFDUVVGdFFqdEJRVU12UlR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTEZkQlFWYzdRVUZEV0R0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3TzBGQlJVRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHM3UVVGRlFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3TzBGQlJVRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEVzTmtKQlFUWkNMR2xDUVVGcFFqdEJRVU01UXp0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdPMEZCUlVFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUczdRVUZGUVN3NFFrRkJPRUk3TzBGQlJUbENPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTEN0Q1FVRXJRanM3UVVGRkwwSTdPMEZCUlVFN08wRkJSVUU3UVVGRFFUdEJRVU5CTzBGQlEwRXNUVUZCVFRzN08wRkJSMDQ3UVVGRFFUdEJRVU5CT3p0QlFVVkJPMEZCUTBFN1FVRkRRVHM3UVVGRlFUdEJRVU5CTzBGQlEwRXNUVUZCVFRzN08wRkJSMDQ3UVVGRFFUdEJRVU5CT3p0QlFVVkJPMEZCUTBFN1FVRkRRVHM3UVVGRlFUdEJRVU5CTzBGQlEwRTdPMEZCUlVFN1FVRkRRVHRCUVVOQk8wRkJRMEU3TzBGQlJVRTdPMEZCUlVFN1FVRkRRVHM3UVVGRlFUdEJRVU5CT3p0QlFVVkJPMEZCUTBFN08wRkJSVUU3UVVGRFFUdEJRVU5CT3p0QlFVVkJPMEZCUTBFN1FVRkRRVHM3UVVGRlFUczdRVUZGUVR0QlFVTkJPenRCUVVWQk8wRkJRMEU3UVVGRFFUdEJRVU5CT3p0QlFVVkJPMEZCUTBFN1FVRkRRVHM3UVVGRlFUdEJRVU5CT3p0QlFVVkJPenRCUVVWQk8wRkJRMEU3UVVGRFFTeFJRVUZST3pzN1FVRkhVanM3UVVGRlFUczdRVUZGUVRzN1FVRkZRVHRCUVVOQk8wRkJRMEVzVVVGQlVUczdRVUZGVWp0QlFVTkJPMEZCUTBFN1FVRkRRVHM3UVVGRlFUdEJRVU5CTERCRFFVRXdRenRCUVVNeFF6dEJRVU5CTzBGQlEwRTdPMEZCUlVFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUczdRVUZGUVR0QlFVTkJPenRCUVVWQk8wRkJRMEU3UVVGRFFUczdRVUZGUVR0QlFVTkJPenRCUVVWQk8wRkJRMEU3TzBGQlJVRTdRVUZEUVR0QlFVTkJPMEZCUTBFN08wRkJSVUU3TzBGQlJVRTdRVUZEUVR0QlFVTkJPenRCUVVWQk96dEJRVVZCTERaRFFVRTJRenRCUVVNM1F6czdRVUZGUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk96dEJRVVZCTzBGQlEwRTdRVUZEUVR0QlFVTkJMRGhDUVVFNFFqczdRVUZGT1VJN1FVRkRRVHRCUVVOQk8wRkJRMEU3TzBGQlJVRTdRVUZEUVR0QlFVTkJPenRCUVVWQk96dEJRVVZCTzBGQlEwRTdPMEZCUlVFN1FVRkRRVHM3UVVGRlFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJMRTFCUVUwN096dEJRVWRPTzBGQlEwRTdRVUZEUVRzN1FVRkZRVHRCUVVOQk8wRkJRMEU3UVVGRFFUczdRVUZGUVR0QlFVTkJPenRCUVVWQk8wRkJRMEVzT0VSQlFUaEVPenM3UVVGSE9VUTdRVUZEUVR0QlFVTkJPenRCUVVWQkxEaEVRVUU0UkRzN1FVRkZPVVFzT0VKQlFUaENMSE5DUVVGelFqdEJRVU53UkR0QlFVTkJPenRCUVVWQk8wRkJRMEU3UVVGRFFUczdRVUZGUVR0QlFVTkJPenRCUVVWQk8wRkJRMEU3TzBGQlJVRTdRVUZEUVRzN1FVRkZRVHRCUVVOQk8wRkJRMEU3TzBGQlJVRTdRVUZEUVR0QlFVTkJPMEZCUTBFc1VVRkJVVHRCUVVOU0xIVkZRVUYxUlR0QlFVTjJSVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTEZOQlFWTTdRVUZEVkRzN1FVRkZRVHRCUVVOQk96dEJRVVZCTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN08wRkJSVUU3UVVGRFFUdEJRVU5CTEUxQlFVMDdPenRCUVVkT08wRkJRMEU3UVVGRFFUczdRVUZGUVR0QlFVTkJPMEZCUTBFN08wRkJSVUU3UVVGRFFUdEJRVU5CT3p0QlFVVkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3TzBGQlJVRTdRVUZEUVR0QlFVTkJPMEZCUTBFc1VVRkJVVHM3UVVGRlVqdEJRVU5CTzBGQlEwRTdPMEZCUlVFN1FVRkRRVHRCUVVOQk96dEJRVVZCTzBGQlEwRTdPMEZCUlVFN1FVRkRRVHRCUVVOQk96dEJRVVZCTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFTeFRRVUZUTzBGQlExUTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRU3hUUVVGVE8wRkJRMVE3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVN4VFFVRlRPMEZCUTFRN1FVRkRRVHRCUVVOQkxIbENRVUY1UWl4elFrRkJjMEk3UVVGREwwTTdRVUZEUVN4VFFVRlRPMEZCUTFRN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJMRk5CUVZNN1FVRkRWRHRCUVVOQkxHVkJRV1U3UVVGRFpqdEJRVU5CTzBGQlEwRTdPMEZCUlVFN1FVRkRRVHM3UVVGRlFUdEJRVU5CTzBGQlEwRTdRVUZEUVRzN1FVRkZRVHRCUVVOQkxGZEJRVmM3UVVGRFdDeFZRVUZWTzBGQlExWTdRVUZEUVR0QlFVTkJPMEZCUTBFN08wRkJSVUU3TzBGQlJVRTdRVUZEUVN4WFFVRlhPMEZCUTFnN1FVRkRRVHM3UVVGRlFUczdRVUZGUVR0QlFVTkJMRmRCUVZjN1FVRkRXRHRCUVVOQk96dEJRVVZCTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN08wRkJSVUU3UVVGRFFUczdRVUZGUVR0QlFVTkJPenRCUVVWQk8wRkJRMEU3UVVGRFFUczdRVUZGUVR0QlFVTkJPMEZCUTBFN08wRkJSVUVzYlVWQlFXMUZPenM3UVVGSGJrVTdRVUZEUVRzN1FVRkZRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CT3p0QlFVVkJPenRCUVVWQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRXNUMEZCVHp0QlFVTlFPenRCUVVWQk8wRkJRMEU3UVVGRFFUdEJRVU5CT3p0QlFVVkJPenRCUVVWQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRXNUMEZCVHp0QlFVTlFPenRCUVVWQk8wRkJRMEU3UVVGRFFUdEJRVU5CT3p0QlFVVkJPMEZCUTBFN1FVRkRRVHM3UVVGRlFUdEJRVU5CT3p0QlFVVkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3TzBGQlJVRXNhVUpCUVdsQ08wRkJRMnBDTERoRVFVRTRSRHRCUVVNNVJEdEJRVU5CTzBGQlEwRTdPMEZCUlVFN08wRkJSVUU3UVVGRFFUczdRVUZGUVR0QlFVTkJPenRCUVVWQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVRzN1FVRkZRVHRCUVVOQk8wRkJRMEU3TzBGQlJVRTdRVUZEUVR0QlFVTkJPenRCUVVWQk8wRkJRMEU3TzBGQlJVRTdRVUZEUVRzN1FVRkZRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CT3p0QlFVVkJPMEZCUTBFc2FVTkJRV2xETzBGQlEycERPMEZCUTBFN08wRkJSVUU3UVVGRFFUczdRVUZGUVR0QlFVTkJPMEZCUTBFN08wRkJSVUU3UVVGRFFUczdRVUZGUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQkxFMUJRVTA3T3p0QlFVZE9PMEZCUTBFN1FVRkRRVHM3UVVGRlFUdEJRVU5CTzBGQlEwRTdPMEZCUlVFN1FVRkRRU3hyUkVGQmEwUXNUMEZCVHp0QlFVTjZSRHM3UVVGRlFUdEJRVU5CTEU5QlFVODdRVUZEVURzN1FVRkZRVHRCUVVOQk8wRkJRMEU3UVVGRFFUczdPMEZCUjBFN08wRkJSVUU3TzBGQlJVRXNRMEZCUXp0QlFVTkVPenM3T3pzN096czdPenRCUTNadlFrRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEVzUlVGQlJTeExRVUUwUkN3MFFrRkJORUlzYlVKQlFVOHNRMEZCUXl4dFJrRkJjMElzUjBGQlJ5eHRRa0ZCVHl4RFFVRkRMQ3RFUVVGVExFZEJRVWNzYlVKQlFVOHNRMEZCUXl4cFJVRkJWVHRCUVVOcVN5eEZRVUZGTEVOQlEzVktPMEZCUTNwS0xFTkJRVU1zYTBSQlFXdEVPenRCUVVWdVJDd3dSa0ZCTUVZN08wRkJSVEZHTzBGQlEwRTdPMEZCUlVFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPenRCUVVWQk8wRkJRMEU3UVVGRFFUdEJRVU5CTERCRFFVRXdReXhMUVVGTE8wRkJReTlETzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk96dEJRVVZCTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdPMEZCUlVFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRXNUVUZCVFRzN08wRkJSMDQ3UVVGRFFUdEJRVU5CT3p0QlFVVkJPMEZCUTBFN1FVRkRRVHM3UVVGRlFUdEJRVU5CTzBGQlEwRXNUVUZCVFRzN08wRkJSMDQ3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVRzN1FVRkZRVHM3UVVGRlFUczdRVUZGUVR0QlFVTkJPMEZCUTBFN08wRkJSVUU3TzBGQlJVRTdRVUZEUVR0QlFVTkJMRTlCUVU4N1FVRkRVRHM3UVVGRlFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPenRCUVVWQk96dEJRVVZCTzBGQlEwRTdRVUZEUVR0QlFVTkJMRTlCUVU4N1FVRkRVRHM3UVVGRlFUdEJRVU5CTzBGQlEwRTdRVUZEUVRzN1FVRkZRVHM3UVVGRlFUczdRVUZGUVR0QlFVTkJMRTFCUVUwN096dEJRVWRPTzBGQlEwRTdRVUZEUVR0QlFVTkJPenRCUVVWQk8wRkJRMEU3UVVGRFFUczdRVUZGUVR0QlFVTkJPenRCUVVWQk8wRkJRMEU3TzBGQlJVRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHM3UVVGRlFUdEJRVU5CTzBGQlEwRTdRVUZEUVRzN1FVRkZRVHM3UVVGRlFUczdRVUZGUVR0QlFVTkJPMEZCUTBFc1QwRkJUenRCUVVOUU8wRkJRMEU3TzBGQlJVRTdRVUZEUVR0QlFVTkJPenRCUVVWQk96dEJRVVZCT3p0QlFVVkJMRU5CUVVNN1FVRkRSRHM3T3pzN096czdPenM3UVVOeVMwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEVzUlVGQlJTeExRVUUwUkN4dlFrRkJiMElzYlVKQlFVOHNRMEZCUXl4dFJrRkJjMElzUjBGQlJ5eHRRa0ZCVHl4RFFVRkRMQ3RFUVVGVE8wRkJRM0JKTEVWQlFVVXNRMEZEYzBvN1FVRkRlRW9zUTBGQlF5eHRSRUZCYlVRN08wRkJSWEJFTERCR1FVRXdSanM3UVVGRk1VWTdPMEZCUlVFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CT3p0QlFVVkJPMEZCUTBFc2RVTkJRWFZETEc5Q1FVRnZRanRCUVVNelJEdEJRVU5CTEdkR1FVRm5SaXhMUVVGTE8wRkJRM0pHTzBGQlEwRTdRVUZEUVRzN1FVRkZRVHRCUVVOQk8wRkJRMEU3TzBGQlJVRXNORVZCUVRSRkxFdEJRVXM3UVVGRGFrWXNPRVJCUVRoRU96dEJRVVU1UkR0QlFVTkJMRXRCUVVzN1FVRkRURHM3UVVGRlFUczdRVUZGUVN4eFEwRkJjVU1zWTBGQll5eGhRVUZoTERCQ1FVRXdRaXh0UWtGQmJVSTdPMEZCUlRkSExFTkJRVU03UVVGRFJEczdPenM3T3pzN096czdRVU01UTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRXNSVUZCUlN4TFFVRTBSQ3cwUWtGQk5FSXNiVUpCUVU4c1EwRkJReXdyUkVGQlV5eEhRVUZITEcxQ1FVRlBMRU5CUVVNc0swVkJRVzlDTzBGQlF6RkpMRVZCUVVVc1EwRkRjVWs3UVVGRGRra3NRMEZCUXl4NVEwRkJlVU03TzBGQlJURkRMREJHUVVFd1JqczdRVUZGTVVZN08wRkJSVUU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk96dEJRVVZCTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN08wRkJSVUU3UVVGRFFUdEJRVU5CT3p0QlFVVkJPMEZCUTBFN1FVRkRRVHM3UVVGRlFUdEJRVU5CTzBGQlEwRTdPMEZCUlVFN08wRkJSVUU3UVVGRFFUczdRVUZGUVR0QlFVTkJPMEZCUTBFN08wRkJSVUU3UVVGRFFTd3lTRUZCTWtnN08wRkJSVE5JTEdWQlFXVTdRVUZEWml3MFJFRkJORVE3UVVGRE5VUXNiVWRCUVcxSE8wRkJRMjVITEc5RVFVRnZSRHRCUVVOd1JEdEJRVU5CT3p0QlFVVkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3TzBGQlJVRTdRVUZEUVN4cFEwRkJhVU1zYjBOQlFXOURMRmxCUVZrc1UwRkJVeXh0UWtGQmJVSXNWVUZCVlN4MVFrRkJkVUlzWTBGQll6dEJRVU0xU2p0QlFVTkJPMEZCUTBFN08wRkJSVUU3TzBGQlJVRTdPMEZCUlVFc1EwRkJRenRCUVVORU96czdPenM3T3pzN096dEJReTlGUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFTeEZRVUZGTEV0QlFUUkVMRFJDUVVFMFFpeHRRa0ZCVHl4RFFVRkRMRzFHUVVGelFpeEhRVUZITEcxQ1FVRlBMRU5CUVVNc2RVWkJRWGRDTEVkQlFVY3NiVUpCUVU4c1EwRkJReXhwUlVGQlZUdEJRVU5vVEN4RlFVRkZMRU5CUTJsTE8wRkJRMjVMTEVOQlFVTXNNa1JCUVRKRU96dEJRVVUxUkN3d1JrRkJNRVk3TzBGQlJURkdPMEZCUTBFN1FVRkRRVHM3UVVGRlFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3TzBGQlJVRTdRVUZEUVR0QlFVTkJMSGRDUVVGM1FpeFRRVUZUTzBGQlEycERMR3REUVVGclF5eFZRVUZWTzBGQlF6VkRMREJEUVVFd1F5eFZRVUZWTzBGQlEzQkVPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUczdRVUZGUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CT3p0QlFVVkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTEUxQlFVMDdPenRCUVVkT08wRkJRMEU3UVVGRFFUczdRVUZGUVR0QlFVTkJPMEZCUTBFN08wRkJSVUU3UVVGRFFUdEJRVU5CTEUxQlFVMDdPenRCUVVkT08wRkJRMEU3UVVGRFFUdEJRVU5CT3p0QlFVVkJPMEZCUTBFN1FVRkRRVHM3UVVGRlFTdzRSRUZCT0VRN08wRkJSVGxFTzBGQlEwRTdRVUZEUVR0QlFVTkJPenRCUVVWQk8wRkJRMEU3UVVGRFFUdEJRVU5CT3p0QlFVVkJPMEZCUTBFN1FVRkRRU3hOUVVGTk96czdRVUZIVGp0QlFVTkJPMEZCUTBFN1FVRkRRU3hSUVVGUk96dEJRVVZTTzBGQlEwRTdRVUZEUVRzN1FVRkZRVHM3UVVGRlFUdEJRVU5CTzBGQlEwRXNVVUZCVVR0QlFVTlNPMEZCUTBFc1VVRkJVVHRCUVVOU08wRkJRMEU3UVVGRFFUczdRVUZGUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHM3UVVGRlFUdEJRVU5CT3p0QlFVVkJPenRCUVVWQk96dEJRVVZCTEVOQlFVTTdRVUZEUkRzN096czdPenM3T3pzN1FVTnFTVUU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFc1JVRkJSU3hMUVVFMFJEdEJRVU01UkN4RlFVRkZMRU5CUTNOSE8wRkJRM2hITEVOQlFVTXNPRUpCUVRoQ096dEJRVVV2UWp0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRXNNRU5CUVRCRE96dEJRVVV4UXp0QlFVTkJPMEZCUTBFc1owSkJRV2RDTEU5QlFVODdRVUZEZGtJN08wRkJSVUU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVRzN08wRkJSMEU3UVVGRFFUdEJRVU5CTzBGQlEwRXNUVUZCVFRzN1FVRkZUanRCUVVOQk96dEJRVVZCTzBGQlEwRTdPMEZCUlVFN1FVRkRRU3gzUkVGQmQwUTdRVUZEZUVRN1FVRkRRVHRCUVVOQk96dEJRVVZCTzBGQlEwRTdRVUZEUVN4UlFVRlJPenM3UVVGSFVqdEJRVU5CTERSQ1FVRTBRaXcwUWtGQk5FSTdRVUZEZUVRN08wRkJSVUU3UVVGRFFUczdRVUZGUVR0QlFVTkJPenRCUVVWQk8wRkJRMEU3TzBGQlJVRTdRVUZEUVR0QlFVTkJPenRCUVVWQk8wRkJRMEU3TzBGQlJVRTdRVUZEUVR0QlFVTkJPMEZCUTBFN08wRkJSVUU3UVVGRFFUdEJRVU5CTzBGQlEwRXNUVUZCVFRzN08wRkJSMDQ3UVVGRFFUdEJRVU5CTzBGQlEwRXNUVUZCVFR0QlFVTk9PMEZCUTBFc2NVVkJRWEZGT3p0QlFVVnlSVHRCUVVOQk8wRkJRMEVzVFVGQlRUczdPMEZCUjA0N1FVRkRRVHRCUVVOQk8wRkJRMEU3TzBGQlJVRTdRVUZEUVR0QlFVTkJPenRCUVVWQk8wRkJRMEU3UVVGRFFUdEJRVU5CT3p0QlFVVkJPMEZCUTBFN1FVRkRRVHM3UVVGRlFUdEJRVU5CT3p0QlFVVkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3TzBGQlJVRTdRVUZEUVR0QlFVTkJPenRCUVVWQk8wRkJRMEU3TzBGQlJVRTdRVUZEUVR0QlFVTkJPMEZCUTBFN08wRkJSVUVzY1VkQlFYRkhPenRCUVVWeVJ6czdRVUZGUVR0QlFVTkJPMEZCUTBFN08wRkJSVUU3UVVGRFFUczdRVUZGUVR0QlFVTkJPMEZCUTBFN08wRkJSVUU3UVVGRFFUdEJRVU5CTzBGQlEwRTdPMEZCUlVFN1FVRkRRVHM3UVVGRlFUdEJRVU5CTzBGQlEwRTdRVUZEUVRzN1FVRkZRVHRCUVVOQk8wRkJRMEU3TzBGQlJVRTdRVUZEUVR0QlFVTkJPenRCUVVWQk8wRkJRMEU3TzBGQlJVRTdRVUZEUVR0QlFVTkJPMEZCUTBFc1RVRkJUVHM3TzBGQlIwNDdRVUZEUVR0QlFVTkJPMEZCUTBFN08wRkJSVUU3UVVGRFFUdEJRVU5CTEUxQlFVMDdPenRCUVVkT08wRkJRMEU3UVVGRFFUczdRVUZGUVR0QlFVTkJPenRCUVVWQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRXNZVUZCWVN4aFFVRmhPMEZCUXpGQ08wRkJRMEU3UVVGRFFUdEJRVU5CT3pzN1FVRkhRVHRCUVVOQkxEQkNRVUV3UWp0QlFVTXhRanM3UVVGRlFUdEJRVU5CTzBGQlEwRTdRVUZEUVRzN1FVRkZRVHRCUVVOQk96dEJRVVZCT3p0QlFVVkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVN4VFFVRlRPMEZCUTFRN08wRkJSVUU3UVVGRFFTeE5RVUZOTzBGQlEwNDdRVUZEUVR0QlFVTkJPenRCUVVWQk96dEJRVVZCTzBGQlEwRTdRVUZEUVR0QlFVTkJPenRCUVVWQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdPMEZCUlVFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTEV0QlFVczdRVUZEVERzN1FVRkZRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CT3p0QlFVVkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3TzBGQlJVRTdRVUZEUVR0QlFVTkJPenRCUVVWQk8wRkJRMEU3UVVGRFFTeExRVUZMTzBGQlEwdzdRVUZEUVR0QlFVTkJPenRCUVVWQk8wRkJRMEU3UVVGRFFUdEJRVU5CT3p0QlFVVkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFTeExRVUZMTzBGQlEwdzdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRU3hoUVVGaExFOUJRVTg3UVVGRGNFSTdRVUZEUVR0QlFVTkJPMEZCUTBFc1kwRkJZeXhqUVVGak8wRkJRelZDT3pzN1FVRkhRVHRCUVVOQk8wRkJRMEVzTmtOQlFUWkRPMEZCUXpkRE96dEJRVVZCTzBGQlEwRTdRVUZEUVRzN1FVRkZRVHM3UVVGRlFUdEJRVU5CTzBGQlEwRTdPMEZCUlVFN1FVRkRRVHM3UVVGRlFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CT3p0QlFVVkJMSEZEUVVGeFF5eGpRVUZqTEdGQlFXRXNNRUpCUVRCQ0xHMUNRVUZ0UWpzN1FVRkZOMGNzUTBGQlF6dEJRVU5FT3pzN096czdPenM3T3p0QlF6bFdRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVN4RlFVRkZMRXRCUVRSRU8wRkJRemxFTEVWQlFVVXNRMEZETUVjN1FVRkROVWNzUTBGQlF5dzRRa0ZCT0VJN08wRkJSUzlDTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPenRCUVVWQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVRzN1FVRkZRU3g1U1VGQmVVazdPMEZCUlhwSk8wRkJRMEU3TzBGQlJVRTdRVUZEUVR0QlFVTkJPMEZCUTBFN08wRkJSVUU3UVVGRFFTeE5RVUZOT3pzN1FVRkhUanRCUVVOQk96dEJRVVZCTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CT3p0QlFVVkJPMEZCUTBFN1FVRkRRVHM3UVVGRlFUdEJRVU5CTzBGQlEwRTdPMEZCUlVFN1FVRkRRVHM3UVVGRlFUdEJRVU5CTzBGQlEwRTdRVUZEUVRzN1FVRkZRVHRCUVVOQk96dEJRVVZCTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHM3UVVGRlFUdEJRVU5CT3p0QlFVVkJPMEZCUTBFN08wRkJSVUVzY1VOQlFYRkRMR05CUVdNc1lVRkJZU3d3UWtGQk1FSXNiVUpCUVcxQ096dEJRVVUzUnl4RFFVRkRPMEZCUTBRN096czdPenM3T3pzN08wRkRNVWhCTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQkxFVkJRVVVzUzBGQk5FUXNORUpCUVRSQ0xHMUNRVUZQTEVOQlFVTXNkVVpCUVhkQ0xFZEJRVWNzYlVKQlFVOHNRMEZCUXl3clJVRkJiMElzUjBGQlJ5eHRRa0ZCVHl4RFFVRkRMQ3RFUVVGVE8wRkJRemRMTEVWQlFVVXNRMEZESzBvN1FVRkRha3NzUTBGQlF5eDVSRUZCZVVRN08wRkJSVEZFTERCR1FVRXdSanM3UVVGRk1VWTdRVUZEUVRzN1FVRkZRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN08wRkJSVUU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN08wRkJSVUU3UVVGRFFUdEJRVU5CTzBGQlEwRXNUVUZCVFRzN08wRkJSMDQ3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVRzN1FVRkZRVHRCUVVOQk96dEJRVVZCTEN0Q1FVRXJRanM3TzBGQlJ5OUNMQ3RIUVVFclJ6czdPMEZCUnk5SE96dEJRVVZCTzBGQlEwRTdPMEZCUlVFN1FVRkRRVHM3UVVGRlFUczdRVUZGUVRzN1FVRkZRVHRCUVVOQk96dEJRVVZCTzBGQlEwRTdRVUZEUVN4TlFVRk5PenM3UVVGSFRqdEJRVU5CT3p0QlFVVkJPMEZCUTBFN08wRkJSVUU3UVVGRFFUczdRVUZGUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHM3UVVGRlFUczdRVUZGUVR0QlFVTkJMRzlFUVVGdlJDdzJRMEZCTmtNN1FVRkRha2M3TzBGQlJVRTdRVUZEUVRzN1FVRkZRVHRCUVVOQk96dEJRVVZCTzBGQlEwRTdRVUZEUVR0QlFVTkJPenRCUVVWQk8wRkJRMEU3UVVGRFFTdzJSa0ZCTmtZc0swUkJRU3RFT3p0QlFVVTFTanRCUVVOQk8wRkJRMEU3UVVGRFFUczdRVUZGUVR0QlFVTkJPMEZCUTBFN08wRkJSVUU3UVVGRFFUczdRVUZGUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk96dEJRVVZCTzBGQlEwRTdRVUZEUVR0QlFVTkJPenRCUVVWQk96dEJRVVZCT3p0QlFVVkJMRU5CUVVNN1FVRkRSRHM3T3pzN096czdPenM3UVVNeFNVRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEVzUlVGQlJTeExRVUUwUkN3MFFrRkJORUlzYlVKQlFVOHNRMEZCUXl4MVJVRkJZU3hIUVVGSExHMUNRVUZQTEVOQlFVTXNLMFJCUVZNc1IwRkJSeXh0UWtGQlR5eERRVUZETEhWR1FVRjNRaXhIUVVGSExHMUNRVUZQTEVOQlFVTXNhVVZCUVZVN1FVRkRNMHdzUlVGQlJTeERRVU5yVER0QlFVTndUQ3hEUVVGRExDdEVRVUVyUkRzN1FVRkZhRVVzTUVaQlFUQkdPenRCUVVVeFJqdEJRVU5CT3p0QlFVVkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVRzN1FVRkZRVHRCUVVOQk8wRkJRMEU3UVVGRFFTeGxRVUZsTzBGQlEyWXNVMEZCVXp0QlFVTlVPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk96dEJRVVZCTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFc1RVRkJUVHM3TzBGQlIwNDdRVUZEUVR0QlFVTkJPenRCUVVWQk8wRkJRMEU3UVVGRFFUczdRVUZGUVR0QlFVTkJPMEZCUTBFc1RVRkJUVHM3TzBGQlIwNDdRVUZEUVR0QlFVTkJPenRCUVVWQk8wRkJRMEU3UVVGRFFUczdRVUZGUVR0QlFVTkJPenRCUVVWQkxDdENRVUVyUWp0QlFVTXZRanRCUVVOQk8wRkJRMEU3UVVGRFFUczdRVUZGUVR0QlFVTkJPMEZCUTBFN08wRkJSVUU3UVVGRFFUdEJRVU5CT3p0QlFVVkJPenRCUVVWQk96dEJRVVZCTzBGQlEwRTdRVUZEUVRzN1FVRkZRVHRCUVVOQkxFMUJRVTA3T3p0QlFVZE9PMEZCUTBFN08wRkJSVUU3UVVGRFFUczdRVUZGUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEVzVTBGQlV6dEJRVU5VTzBGQlEwRTdPMEZCUlVFN1FVRkRRVHM3UVVGRlFUdEJRVU5CTzBGQlEwRTdPMEZCUlVFN08wRkJSVUU3UVVGRFFUdEJRVU5CTzBGQlEwRTdPMEZCUlVFN1FVRkRRVHM3UVVGRlFUdEJRVU5CT3p0QlFVVkJPMEZCUTBFN1FVRkRRVHRCUVVOQk96dEJRVVZCTzBGQlEwRTdPMEZCUlVFN1FVRkRRVHRCUVVOQk96dEJRVVZCTzBGQlEwRTdRVUZEUVRzN1FVRkZRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdPMEZCUlVFN1FVRkRRVHM3UVVGRlFUczdRVUZGUVRzN1FVRkZRU3hEUVVGRE8wRkJRMFE3T3pzN096czdPenM3TzBGRGFreEJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3TzBGQlJVRTdPMEZCUlVFc1RVRkJUU3hMUVVFd1FqczdRVUZGYUVNN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRXNSMEZCUnp0QlFVTklPMEZCUTBFN08wRkJSVUU3UVVGRFFTeEZRVUZGT3p0QlFVVkdPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3TzBGQlJVRTdPMEZCUlVFN08wRkJSVUU3TzBGQlJVRTdRVUZEUVR0QlFVTkJMRVZCUVVVN1FVRkRSanRCUVVOQk96czdRVUZIUVRzN1FVRkZRVHM3UVVGRlFUczdRVUZGUVRzN1FVRkZRVHM3UVVGRlFUczdRVUZGUVRzN1FVRkZRVHM3UVVGRlFUczdRVUZGUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVRzN08wRkJSMEU3UVVGRFFUdEJRVU5CT3pzN1FVRkhRVHM3T3p0QlFVbEJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUczdRVUZGUVR0QlFVTkJPenRCUVVWQk8wRkJRMEU3TzBGQlJVRTdRVUZEUVR0QlFVTkJPenRCUVVWQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHM3TzBGQlIwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN08wRkJSVUU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHM3T3p0QlFVbEJPMEZCUTBFN08wRkJSVUU3UVVGRFFUczdRVUZGUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHM3UVVGRlFUczdRVUZGUVR0QlFVTkJPenRCUVVWQk96dEJRVVZCTzBGQlEwRTdPMEZCUlVFN1FVRkRRVHRCUVVOQkxFVkJRVVU3TzBGQlJVWTdRVUZEUVR0QlFVTkJPenRCUVVWQk8wRkJRMEU3UVVGRFFUdEJRVU5CT3p0QlFVVkJPMEZCUTBFN1FVRkRRU3hGUVVGRk96dEJRVVZHTzBGQlEwRTdRVUZEUVRzN1FVRkZRVHRCUVVOQk96dEJRVVZCTzBGQlEwRTdPMEZCUlVFN1FVRkRRVHRCUVVOQkxFVkJRVVU3TzBGQlJVWTdRVUZEUVR0QlFVTkJPMEZCUTBFc1JVRkJSVHM3UVVGRlJqdEJRVU5CTzBGQlEwRTdRVUZEUVN4SlFVRkpPMEZCUTBvc1JVRkJSVHM3UVVGRlJqdEJRVU5CTzBGQlEwRXNSVUZCUlRzN1FVRkZSanRCUVVOQk8wRkJRMEVzUlVGQlJUczdRVUZGUmp0QlFVTkJPMEZCUTBFc1JVRkJSVHM3UVVGRlJqdEJRVU5CTzBGQlEwRTdRVUZEUVN4SlFVRkpPMEZCUTBvc1JVRkJSVHM3UVVGRlJqdEJRVU5CTzBGQlEwRTdRVUZEUVN4SlFVRkpPMEZCUTBvc1JVRkJSVHM3UVVGRlJqdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJMRVZCUVVVN08wRkJSVVk3UVVGRFFUdEJRVU5CTEVWQlFVVTdPMEZCUlVZN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CT3p0QlFVVkJPMEZCUTBFN1FVRkRRU3dyUWtGQkswSTdRVUZETDBJN1FVRkRRVHRCUVVOQk96dEJRVVZCTzBGQlEwRTdRVUZEUVRzN1FVRkZRVHRCUVVOQk8wRkJRMEU3UVVGRFFUczdRVUZGUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHM3UVVGRlFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPenRCUVVWQkxGTkJRVk1zV1VGQldUczdRVUZGY2tJN1FVRkRRVHM3UVVGRlFUdEJRVU5CTzBGQlEwRTdPMEZCUlVFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUczdRVUZGUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHM3UVVGRlFUdEJRVU5CTzBGQlEwRTdRVUZEUVN4UFFVRlBPMEZCUTFBN1FVRkRRU3hQUVVGUE8wRkJRMUE3UVVGRFFUdEJRVU5CT3p0QlFVVkJPMEZCUTBFN08wRkJSVUU3UVVGRFFTeE5RVUZOTzBGQlEwNDdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHM3UVVGRlFUdEJRVU5CTzBGQlEwRTdPMEZCUlVFN08wRkJSVUU3UVVGRFFUczdRVUZGUVR0QlFVTkJPenRCUVVWQk8wRkJRMEU3UVVGRFFTeEZRVUZGT3p0QlFVVkdMRzlDUVVGdlFqczdRVUZGY0VJN1FVRkRRVHM3UVVGRlFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPenRCUVVWQk96dEJRVVZCTzBGQlEwRTdRVUZEUVR0QlFVTkJPenRCUVVWQk8wRkJRMEU3UVVGRFFUdEJRVU5CTEVWQlFVVTdPMEZCUlVZN1FVRkRRVHM3UVVGRlFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJMRVZCUVVVN08wRkJSVVlzT0VOQlFUaERPMEZCUXpsRE8wRkJRMEU3UVVGRFFTeHRRa0ZCYlVJc2FVTkJRV2xETzBGQlEzQkVMRVZCUVVVN08wRkJSVVk3UVVGRFFUczdRVUZGUVR0QlFVTkJPMEZCUTBFc1YwRkJWeXhaUVVGWk8wRkJRM1pDTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFc1NVRkJTVHRCUVVOS08wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVRzN1FVRkZRVHRCUVVOQkxFVkJRVVU3TzBGQlJVWTdRVUZEUVR0QlFVTkJPenRCUVVWQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJMRXRCUVVzN1FVRkRURHRCUVVOQk8wRkJRMEU3TzBGQlJVRTdRVUZEUVN4RlFVRkZPenRCUVVWR08wRkJRMEU3UVVGRFFTeEZRVUZGT3p0QlFVVkdPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUczdRVUZGUVN4VlFVRlZMRk5CUVZNN1FVRkRia0k3UVVGRFFUczdRVUZGUVRzN1FVRkZRVHRCUVVOQkxFVkJRVVU3TzBGQlJVWTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk96dEJRVVZCTzBGQlEwRTdRVUZEUVN4VlFVRlZMRmxCUVZrN1FVRkRkRUk3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVRzN1FVRkZRVHRCUVVOQkxFVkJRVVU3TzBGQlJVWTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHM3UVVGRlFUdEJRVU5CTzBGQlEwRTdRVUZEUVN4WFFVRlhMRmxCUVZrN1FVRkRka0k3TzBGQlJVRTdRVUZEUVR0QlFVTkJPMEZCUTBFN08wRkJSVUU3UVVGRFFTeEpRVUZKTzBGQlEwbzdRVUZEUVRzN1FVRkZRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CT3p0QlFVVkJPMEZCUTBFN1FVRkRRU3hGUVVGRk96dEJRVVZHTzBGQlEwRTdPMEZCUlVFN1FVRkRRVHRCUVVOQk8wRkJRMEVzUlVGQlJUczdRVUZGUmp0QlFVTkJPMEZCUTBFN08wRkJSVUU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVN4SFFVRkhPenRCUVVWSU96dEJRVVZCTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHM3UVVGRlFUdEJRVU5CTzBGQlEwRTdPMEZCUlVFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVRzN1FVRkZRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN08wRkJSVUU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJMRVZCUVVVN08wRkJSVVk3UVVGRFFTeGxRVUZsTzBGQlEyWTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHM3UVVGRlFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFc1ZVRkJWU3hUUVVGVE8wRkJRMjVDTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRU3hGUVVGRk96dEJRVVZHTzBGQlEwRTdPMEZCUlVFN08wRkJSVUU3UVVGRFFUczdRVUZGUVR0QlFVTkJMR3REUVVGclF5eEpRVUZKTzBGQlEzUkRPenRCUVVWQk8wRkJRMEU3TzBGQlJVRTdRVUZEUVRzN1FVRkZRVHRCUVVOQk8wRkJRMEU3UVVGRFFUczdRVUZGUVRzN1FVRkZRVHRCUVVOQkxESkNRVUV5UWp0QlFVTXpRanM3UVVGRlFUdEJRVU5CT3p0QlFVVkJPMEZCUTBFN1FVRkRRVHM3UVVGRlFUdEJRVU5CTzBGQlEwRTdRVUZEUVRzN1FVRkZRVHRCUVVOQk8wRkJRMEU3UVVGRFFUczdRVUZGUVR0QlFVTkJPenRCUVVWQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk96dEJRVVZCTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRU3hGUVVGRk96dEJRVVZHTzBGQlEwRTdRVUZEUVRzN1FVRkZRU3huUWtGQlowSXNTVUZCU1RzN1FVRkZjRUk3UVVGRFFUczdRVUZGUVRzN1FVRkZRVHRCUVVOQk8wRkJRMEVzTUVOQlFUQkRMRWxCUVVrN1FVRkRPVU03UVVGRFFUczdRVUZGUVRzN1FVRkZRVHRCUVVOQk96dEJRVVZCTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEVzUlVGQlJUczdRVUZGUmp0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk96dEJRVVZCTzBGQlEwRTdRVUZEUVR0QlFVTkJPenRCUVVWQk8wRkJRMEU3UVVGRFFUdEJRVU5CT3p0QlFVVkJPMEZCUTBFN1FVRkRRU3hGUVVGRk96dEJRVVZHTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQkxFVkJRVVU3TzBGQlJVWTdRVUZEUVR0QlFVTkJPMEZCUTBFc1IwRkJSenRCUVVOSUxFbEJRVWs3UVVGRFNqczdRVUZGUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3TzBGQlJVRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRU3hGUVVGRk8wRkJRMFlzVlVGQlZUczdRVUZGVmp0QlFVTkJPMEZCUTBFN1FVRkRRU3hKUVVGSk96dEJRVVZLTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN08wRkJSVUU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPenRCUVVWQk8wRkJRMEU3UVVGRFFUczdRVUZGUVR0QlFVTkJPenRCUVVWQk96dEJRVVZCTzBGQlEwRTdRVUZEUVRzN1FVRkZRVHRCUVVOQk96dEJRVVZCTzBGQlEwRTdRVUZEUVR0QlFVTkJPenRCUVVWQk96dEJRVVZCTzBGQlEwRTdRVUZEUVRzN1FVRkZRVHRCUVVOQk96dEJRVVZCTzBGQlEwRTdRVUZEUVRzN1FVRkZRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJMRkZCUVZFN1FVRkRVanRCUVVOQk96dEJRVVZCTzBGQlEwRXNUMEZCVHpzN1FVRkZVRHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdPMEZCUlVFN1FVRkRRVHRCUVVOQk8wRkJRMEU3TzBGQlJVRTdRVUZEUVN4TlFVRk5PMEZCUTA0N1FVRkRRVHM3UVVGRlFUdEJRVU5CTEUxQlFVMDdRVUZEVGpzN1FVRkZRVHRCUVVOQk8wRkJRMEU3UVVGRFFUczdRVUZGUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHM3UVVGRlFUdEJRVU5CTzBGQlEwRTdPMEZCUlVFN1FVRkRRVHM3UVVGRlFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3TzBGQlJVRTdRVUZEUVR0QlFVTkJPenRCUVVWQk8wRkJRMEU3UVVGRFFUczdRVUZGUVR0QlFVTkJPMEZCUTBFN1FVRkRRU3hSUVVGUk8wRkJRMUk3UVVGRFFUdEJRVU5CT3p0QlFVVkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVRzN1FVRkZRVHM3UVVGRlFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk96dEJRVVZCTzBGQlEwRTdPMEZCUlVFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdPMEZCUlVFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFTeE5RVUZOTzBGQlEwNDdRVUZEUVN4TlFVRk5PMEZCUTA0N1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdPMEZCUlVFN1FVRkRRVHRCUVVOQk96dEJRVVZCTzBGQlEwRTdRVUZEUVN4aFFVRmhMREJDUVVFd1FqdEJRVU4yUXp0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk96dEJRVVZCT3p0QlFVVkJPMEZCUTBFN08wRkJSVUU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN08wRkJSVUU3UVVGRFFUdEJRVU5CTEZkQlFWY3NWVUZCVlR0QlFVTnlRanRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CT3p0QlFVVkJPMEZCUTBFN1FVRkRRU3hYUVVGWExGVkJRVlU3UVVGRGNrSTdRVUZEUVR0QlFVTkJPenRCUVVWQk8wRkJRMEU3UVVGRFFTeEhRVUZITzBGQlEwZzdRVUZEUVN4SFFVRkhPenRCUVVWSU8wRkJRMEU3UVVGRFFUdEJRVU5CT3p0QlFVVkJPMEZCUTBFN1FVRkRRVHRCUVVOQk96dEJRVVZCTzBGQlEwRTdRVUZEUVN4WFFVRlhMRkZCUVZFN1FVRkRia0lzVjBGQlZ5eFZRVUZWTzBGQlEzSkNPMEZCUTBFN1FVRkRRVHRCUVVOQk96dEJRVVZCTzBGQlEwRTdRVUZEUVR0QlFVTkJPenRCUVVWQk8wRkJRMEU3UVVGRFFTeFhRVUZYTEZOQlFWTTdRVUZEY0VJc1YwRkJWeXhUUVVGVE8wRkJRM0JDTEdGQlFXRXNVVUZCVVR0QlFVTnlRanRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CT3p0QlFVVkJPMEZCUTBFN1FVRkRRVHRCUVVOQk96dEJRVVZCTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3TzBGQlJVRTdRVUZEUVRzN1FVRkZRVHRCUVVOQk8wRkJRMEVzVjBGQlZ5eFJRVUZSTzBGQlEyNUNPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CT3p0QlFVVkJPMEZCUTBFN1FVRkRRU3hYUVVGWExGRkJRVkU3UVVGRGJrSTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3TzBGQlJVRTdRVUZEUVR0QlFVTkJMRmRCUVZjc1UwRkJVeXcyUWtGQk5rSTdRVUZEYWtRN1FVRkRRVHM3UVVGRlFUdEJRVU5CT3p0QlFVVkJPMEZCUTBFN1FVRkRRVHRCUVVOQk96dEJRVVZCTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3TzBGQlJVRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRU3hQUVVGUE8wRkJRMUE3UVVGRFFUdEJRVU5CT3p0QlFVVkJPMEZCUTBFN1FVRkRRVHM3UVVGRlFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPenRCUVVWQk96dEJRVVZCTzBGQlEwRTdRVUZEUVR0QlFVTkJMRWxCUVVrN1FVRkRTanRCUVVOQk96dEJRVVZCTzBGQlEwRTdRVUZEUVR0QlFVTkJPenRCUVVWQk8wRkJRMEU3UVVGRFFTeFhRVUZYTEZWQlFWVTdRVUZEY2tJN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVRzN1FVRkZRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVN4SlFVRkpPMEZCUTBvc1IwRkJSenRCUVVOSU96dEJRVVZCTzBGQlEwRTdRVUZEUVN4WFFVRlhMR2xDUVVGcFFqdEJRVU0xUWl4aFFVRmhMSGRDUVVGM1FqdEJRVU55UXp0QlFVTkJPMEZCUTBFN1FVRkRRVHM3UVVGRlFUdEJRVU5CT3p0QlFVVkJPMEZCUTBFN1FVRkRRU3hYUVVGWExHZENRVUZuUWp0QlFVTXpRaXhoUVVGaExGTkJRVk03UVVGRGRFSTdRVUZEUVR0QlFVTkJPMEZCUTBFN08wRkJSVUU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVRzN1FVRkZRVHRCUVVOQk8wRkJRMEVzVjBGQlZ5eG5Ra0ZCWjBJN1FVRkRNMElzWVVGQllTeFJRVUZSTzBGQlEzSkNPMEZCUTBFN1FVRkRRVHRCUVVOQk96dEJRVVZCTzBGQlEwRTdRVUZEUVR0QlFVTkJMRzFDUVVGdFFqdEJRVU51UWp0QlFVTkJPMEZCUTBFN1FVRkRRVHM3UVVGRlFUdEJRVU5CTzBGQlEwRTdRVUZEUVRzN1FVRkZRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTEcxQ1FVRnRRanRCUVVOdVFqdEJRVU5CTzBGQlEwRTdPMEZCUlVFN1FVRkRRVHRCUVVOQk96dEJRVVZCTzBGQlEwRXNTVUZCU1R0QlFVTktPMEZCUTBFN1FVRkRRVHM3UVVGRlFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFTeEhRVUZIT3p0QlFVVklPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CT3p0QlFVVkJPenRCUVVWQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdPMEZCUlVFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUczdRVUZGUVR0QlFVTkJMRWRCUVVjN08wRkJSVWc3UVVGRFFUczdRVUZGUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFTeEhRVUZIT3p0QlFVVklPMEZCUTBFN08wRkJSVUU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVN4SFFVRkhPenRCUVVWSU8wRkJRMEU3TzBGQlJVRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFTeEhRVUZIT3p0QlFVVklPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFTeEhRVUZITzBGQlEwZzdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUczdRVUZGUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3TzBGQlJVRTdPMEZCUlVFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUczdRVUZGUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVRzN1FVRkZRVHRCUVVOQk8wRkJRMEU3UVVGRFFUczdRVUZGUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk96dEJRVVZCTzBGQlEwRXNTMEZCU3p0QlFVTk1PMEZCUTBFN1FVRkRRU3hKUVVGSk96dEJRVVZLTzBGQlEwRTdRVUZEUVR0QlFVTkJPenRCUVVWQk8wRkJRMEU3TzBGQlJVRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3TzBGQlJVRTdRVUZEUVR0QlFVTkJPMEZCUTBFN08wRkJSVUU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPenRCUVVWQk8wRkJRMEU3TzBGQlJVRTdPMEZCUlVFN1FVRkRRVHM3UVVGRlFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN08wRkJSVUU3TzBGQlJVRTdRVUZEUVR0QlFVTkJPenRCUVVWQk96dEJRVVZCTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3TzBGQlJVRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3TzBGQlJVRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHM3UVVGRlFUdEJRVU5CTzBGQlEwRTdRVUZEUVRzN1FVRkZRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3TzBGQlJVRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk96dEJRVVZCTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHM3UVVGRlFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJMRWxCUVVrN08wRkJSVW83UVVGRFFUdEJRVU5CT3p0QlFVVkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3TzBGQlJVRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHM3UVVGRlFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPenRCUVVWQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVRzN1FVRkZRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTEVsQlFVazdRVUZEU2pzN1FVRkZRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CT3p0QlFVVkJPenRCUVVWQk8wRkJRMEU3UVVGRFFUczdRVUZGUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQkxFbEJRVWs3UVVGRFNqczdRVUZGUVRzN1FVRkZRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN08wRkJSVUU3UVVGRFFUczdRVUZGUVR0QlFVTkJPMEZCUTBFN08wRkJSVUU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVRzN1FVRkZRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTEVsQlFVazdRVUZEU2p0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVRzN1FVRkZRVHRCUVVOQk96dEJRVVZCTzBGQlEwRTdRVUZEUVRzN1FVRkZRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CT3p0QlFVVkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3TzBGQlJVRTdRVUZEUVR0QlFVTkJPMEZCUTBFc2IwSkJRVzlDTzBGQlEzQkNPMEZCUTBFN1FVRkRRVHM3UVVGRlFUdEJRVU5CT3p0QlFVVkJPMEZCUTBFN1FVRkRRVHM3UVVGRlFUdEJRVU5CTzBGQlEwRTdRVUZEUVN4eFFrRkJjVUk3UVVGRGNrSTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHM3UVVGRlFUdEJRVU5CTzBGQlEwRXNjVUpCUVhGQ08wRkJRM0pDTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN08wRkJSVUU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVRzN1FVRkZRVHRCUVVOQkxFZEJRVWM3UVVGRFNEczdRVUZGUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk96dEJRVVZCTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHM3UVVGRlFUdEJRVU5CT3p0QlFVVkJPMEZCUTBFN1FVRkRRU3h4UWtGQmNVSTdRVUZEY2tJN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPenRCUVVWQk8wRkJRMEVzU1VGQlNUdEJRVU5LTzBGQlEwRTdPMEZCUlVFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPenRCUVVWQk8wRkJRMEU3UVVGRFFUdEJRVU5CT3p0QlFVVkJPenRCUVVWQk8wRkJRMEU3TzBGQlJVRTdRVUZEUVR0QlFVTkJPMEZCUTBFc2NVSkJRWEZDTzBGQlEzSkNPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUczdRVUZGUVR0QlFVTkJPenRCUVVWQk8wRkJRMEU3UVVGRFFUczdRVUZGUVR0QlFVTkJPenRCUVVWQk8wRkJRMEU3UVVGRFFUdEJRVU5CT3p0QlFVVkJPMEZCUTBFN08wRkJSVUU3UVVGRFFUczdRVUZGUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEVzU1VGQlNUdEJRVU5LTzBGQlEwRTdRVUZEUVRzN1FVRkZRVHRCUVVOQk96dEJRVVZCT3p0QlFVVkJPMEZCUTBFN1FVRkRRVHRCUVVOQkxHMUNRVUZ0UWp0QlFVTnVRanRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdPMEZCUlVFN08wRkJSVUU3UVVGRFFUdEJRVU5CTzBGQlEwRXNiVUpCUVcxQ08wRkJRMjVDTzBGQlEwRTdRVUZEUVR0QlFVTkJPenRCUVVWQk96dEJRVVZCTzBGQlEwRTdRVUZEUVR0QlFVTkJPenRCUVVWQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN08wRkJSVUU3UVVGRFFUdEJRVU5CT3p0QlFVVkJPMEZCUTBFN1FVRkRRVHM3UVVGRlFUdEJRVU5CTzBGQlEwRXNWMEZCVnl4WFFVRlhPMEZCUTNSQ08wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVRzN1FVRkZRVHRCUVVOQk8wRkJRMEU3UVVGRFFUczdRVUZGUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVRzN1FVRkZRVHRCUVVOQk8wRkJRMEU3TzBGQlJVRTdRVUZEUVRzN1FVRkZRVHRCUVVOQk8wRkJRMEVzVjBGQlZ5eGxRVUZsTzBGQlF6RkNPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUczdRVUZGUVRzN1FVRkZRVHRCUVVOQk96dEJRVVZCTzBGQlEwRTdRVUZEUVR0QlFVTkJMRWRCUVVjN08wRkJSVWc3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVN4SlFVRkpPenRCUVVWS08wRkJRMEVzYVVOQlFXbERMRTFCUVUwN1FVRkRka003UVVGRFFUdEJRVU5CTzBGQlEwRXNSMEZCUnp0QlFVTklPMEZCUTBFN08wRkJSVUU3TzBGQlJVRTdRVUZEUVRzN1FVRkZRVHM3UVVGRlFUdEJRVU5CT3p0QlFVVkJPenRCUVVWQk96dEJRVVZCTEdWQlFXVTdPMEZCUldZc1UwRkJVenM3UVVGRlZEdEJRVU5CTEZOQlFWTXNaME5CUVdkRE8wRkJRM3BETEZOQlFWTXNiVUpCUVcxQ08wRkJRelZDTEZOQlFWTXNjVU5CUVhGRE8wRkJRemxETEZOQlFWTTdRVUZEVkN4RlFVRkZPenRCUVVWR08wRkJRMEU3UVVGRFFUczdRVUZGUVR0QlFVTkJPMEZCUTBFN08wRkJSVUU3UVVGRFFUdEJRVU5CT3p0QlFVVkJPMEZCUTBFc1IwRkJSenM3UVVGRlNEczdRVUZGUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPenRCUVVWQk96dEJRVVZCTzBGQlEwRTdRVUZEUVR0QlFVTkJPenRCUVVWQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVRzN1FVRkZRVHRCUVVOQkxFdEJRVXM3UVVGRFREdEJRVU5CT3p0QlFVVkJPMEZCUTBFc1IwRkJSenM3UVVGRlNEdEJRVU5CTzBGQlEwRTdPMEZCUlVFN1FVRkRRVHRCUVVOQk96dEJRVVZCTzBGQlEwRTdRVUZEUVRzN1FVRkZRVHRCUVVOQkxFdEJRVXM3TzBGQlJVdzdRVUZEUVRzN1FVRkZRVHRCUVVOQk96dEJRVVZCTzBGQlEwRTdRVUZEUVR0QlFVTkJPenRCUVVWQk8wRkJRMEU3UVVGRFFUdEJRVU5CTEVWQlFVVTdPMEZCUlVZN08wRkJSVUU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJMRTFCUVUwN1FVRkRUanRCUVVOQk8wRkJRMEU3UVVGRFFTeEhRVUZIT3p0QlFVVklPMEZCUTBFN08wRkJSVUU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFTeE5RVUZOTzBGQlEwNHNSMEZCUnpzN1FVRkZTRHRCUVVOQk8wRkJRMEU3TzBGQlJVRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk96dEJRVVZCT3p0QlFVVkJPenRCUVVWQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHM3UVVGRlFUdEJRVU5CTEVkQlFVYzdPMEZCUlVnN1FVRkRRVHRCUVVOQk8wRkJRMEU3TzBGQlJVRTdPMEZCUlVFN1FVRkRRVHRCUVVOQk8wRkJRMEVzVFVGQlRUczdRVUZGVGp0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUczdRVUZGUVRzN1FVRkZRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPenRCUVVWQk8wRkJRMEU3UVVGRFFUczdRVUZGUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk96dEJRVVZCT3p0QlFVVkJPMEZCUTBFN08wRkJSVUU3TzBGQlJVRTdRVUZEUVR0QlFVTkJMRGhFUVVFNFJEczdRVUZGT1VRN1FVRkRRVHRCUVVOQk8wRkJRMEVzTWtOQlFUSkRPenRCUVVVelF6dEJRVU5CTzBGQlEwRTdRVUZEUVRzN1FVRkZRVHM3UVVGRlFUdEJRVU5CT3p0QlFVVkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUczdRVUZGUVN4UlFVRlJPenRCUVVWU08wRkJRMEU3TzBGQlJVRTdRVUZEUVR0QlFVTkJMQ3RFUVVFclJEczdRVUZGTDBRN1FVRkRRVHRCUVVOQk8wRkJRMEVzTkVOQlFUUkRPenRCUVVVMVF6dEJRVU5CTzBGQlEwRTdRVUZEUVRzN1FVRkZRVHRCUVVOQk8wRkJRMEU3TzBGQlJVRTdRVUZEUVR0QlFVTkJPenRCUVVWQk8wRkJRMEU3UVVGRFFUdEJRVU5CT3p0QlFVVkJPMEZCUTBFN1FVRkRRVHRCUVVOQkxHMURRVUZ0UXpzN1FVRkZia003UVVGRFFUdEJRVU5CTzBGQlEwRXNLME5CUVN0RE96dEJRVVV2UXp0QlFVTkJPenRCUVVWQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPenRCUVVWQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVN4SFFVRkhPenRCUVVWSU96dEJRVVZCTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk96dEJRVVZCTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHM3UVVGRlFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVN4UFFVRlBPMEZCUTFBN1FVRkRRVHRCUVVOQk8wRkJRMEU3TzBGQlJVRTdRVUZEUVR0QlFVTkJMRVZCUVVVN08wRkJSVVk3TzBGQlJVRTdRVUZEUVRzN1FVRkZRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdPMEZCUlVFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUczdRVUZGUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFTeE5RVUZOTzBGQlEwNDdRVUZEUVR0QlFVTkJPenRCUVVWQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRXNTVUZCU1RzN1FVRkZTanRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTEVsQlFVazdPMEZCUlVvN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTEVsQlFVazdPMEZCUlVvN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVRzN1FVRkZRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk96dEJRVVZCTzBGQlEwRTdRVUZEUVR0QlFVTkJMRTFCUVUwN1FVRkRUanRCUVVOQk8wRkJRMEVzU1VGQlNUczdRVUZGU2p0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQkxFZEJRVWM3TzBGQlJVZzdRVUZEUVR0QlFVTkJMRWRCUVVjN08wRkJSVWc3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVN4SFFVRkhPenRCUVVWSU8wRkJRMEU3UVVGRFFUczdRVUZGUVRzN1FVRkZRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRXNSMEZCUnpzN1FVRkZTRHM3UVVGRlFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN08wRkJSVUU3UVVGRFFTeEhRVUZIT3p0QlFVVklPMEZCUTBFN08wRkJSVUU3UVVGRFFTeHJSVUZCYTBVc1ZVRkJWVHRCUVVNMVJTeDFRMEZCZFVNc01rSkJRVEpDTzBGQlEyeEZPMEZCUTBFc2FVTkJRV2xETEUxQlFVMDdRVUZEZGtNN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTEVkQlFVYzdPMEZCUlVnN1FVRkRRVHRCUVVOQkxFZEJRVWM3TzBGQlJVZzdRVUZEUVR0QlFVTkJPMEZCUTBFc1IwRkJSenM3UVVGRlNEdEJRVU5CTzBGQlEwRXNSMEZCUnpzN1FVRkZTRHRCUVVOQk8wRkJRMEU3UVVGRFFTeEhRVUZIT3p0QlFVVklPMEZCUTBFN1FVRkRRVHRCUVVOQk96dEJRVVZCTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFc1IwRkJSenM3UVVGRlNEdEJRVU5CTzBGQlEwRTdRVUZEUVN4SlFVRkpPenRCUVVWS08wRkJRMEU3UVVGRFFTeEpRVUZKT3p0QlFVVktPMEZCUTBFN1FVRkRRU3hKUVVGSk96dEJRVVZLTzBGQlEwRTdRVUZEUVN4WFFVRlhMRmxCUVZrN1FVRkRka0k3UVVGRFFUdEJRVU5CTzBGQlEwRXNTVUZCU1RzN1FVRkZTanRCUVVOQk8wRkJRMEVzVjBGQlZ5eFpRVUZaTzBGQlEzWkNPMEZCUTBFN1FVRkRRVHRCUVVOQkxFbEJRVWs3TzBGQlJVbzdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEVzVjBGQlZ5eFZRVUZWTzBGQlEzSkNPMEZCUTBFN1FVRkRRVHRCUVVOQkxFbEJRVWs3TzBGQlJVbzdRVUZEUVR0QlFVTkJMRmRCUVZjc1kwRkJZenRCUVVONlFqdEJRVU5CTzBGQlEwRTdRVUZEUVN4SlFVRkpPMEZCUTBvN1FVRkRRVHM3UVVGRlFUczdRVUZGUVR0QlFVTkJMR0ZCUVdFc2RVVkJRWFZGTzBGQlEzQkdPMEZCUTBFN1FVRkRRU3hoUVVGaExEUkNRVUUwUWp0QlFVTjZRenRCUVVOQk96dEJRVVZCTzBGQlEwRTdRVUZEUVR0QlFVTkJPenRCUVVWQk8wRkJRMEU3UVVGRFFUdEJRVU5CT3p0QlFVVkJPMEZCUTBFN1FVRkRRVHM3UVVGRlFUdEJRVU5CTzBGQlEwRTdPMEZCUlVFN08wRkJSVUU3UVVGRFFUdEJRVU5CT3p0QlFVVkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3TzBGQlJVRTdPMEZCUlVFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUczdRVUZGUVR0QlFVTkJPMEZCUTBFc1MwRkJTenRCUVVOTU8wRkJRMEU3TzBGQlJVRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRXNUVUZCVFR0QlFVTk9PMEZCUTBFN1FVRkRRVHM3UVVGRlFUdEJRVU5CTzBGQlEwRTdRVUZEUVRzN1FVRkZRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVRzN1FVRkZRVHRCUVVOQk8wRkJRMEU3TzBGQlJVRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRU3hUUVVGVExGTkJRVk03UVVGRGJFSTdRVUZEUVR0QlFVTkJPMEZCUTBFN08wRkJSVUU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPenRCUVVWQk96dEJRVVZCTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFTeEpRVUZKT3p0QlFVVktPMEZCUTBFN1FVRkRRVHRCUVVOQk96dEJRVVZCTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTEV0QlFVczdRVUZEVER0QlFVTkJPMEZCUTBFc05rUkJRVFpFT3p0QlFVVTNSRHRCUVVOQk8wRkJRMEU3UVVGRFFTd3dRMEZCTUVNN08wRkJSVEZETzBGQlEwRTdRVUZEUVN4UlFVRlJPMEZCUTFJN08wRkJSVUU3UVVGRFFUdEJRVU5CTEZGQlFWRTdPMEZCUlZJN1FVRkRRVHM3UVVGRlFTeHZRMEZCYjBNN1FVRkRjRU03UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3TzBGQlJVRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVN4SlFVRkpPMEZCUTBvN1FVRkRRVHM3UVVGRlFUdEJRVU5CTzBGQlEwRTdRVUZEUVN4VFFVRlRMRk5CUVZNN1FVRkRiRUk3UVVGRFFUdEJRVU5CTzBGQlEwRTdPMEZCUlVFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CT3p0QlFVVkJMRk5CUVZNc1UwRkJVenRCUVVOc1FqdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3TzBGQlJVRTdRVUZEUVRzN1FVRkZRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3TzBGQlJVRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk96dEJRVVZCTzBGQlEwRTdRVUZEUVR0QlFVTkJPenRCUVVWQk96dEJRVVZCTzBGQlEwRTdPMEZCUlVFN1FVRkRRVHM3UVVGRlFUdEJRVU5CTzBGQlEwRTdPMEZCUlVFN1FVRkRRVHRCUVVOQk8wRkJRMEU3TzBGQlJVRTdRVUZEUVR0QlFVTkJPMEZCUTBFN08wRkJSVUU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHM3UVVGRlFUdEJRVU5CTzBGQlEwRTdPMEZCUlVFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUczdRVUZGUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3TzBGQlJVRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHM3UVVGRlFUdEJRVU5CTzBGQlEwRTdRVUZEUVRzN1FVRkZRVHRCUVVOQkxFbEJRVWs3UVVGRFNqdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQkxFdEJRVXM3UVVGRFREdEJRVU5CTzBGQlEwRTdRVUZEUVN4SFFVRkhPMEZCUTBnN08wRkJSVUU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPenRCUVVWQk8wRkJRMEU3UVVGRFFUdEJRVU5CTEVkQlFVYzdRVUZEU0R0QlFVTkJPMEZCUTBFc1IwRkJSenRCUVVOSU8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdPMEZCUlVFN1FVRkRRVHRCUVVOQk8wRkJRMEVzU1VGQlNUczdRVUZGU2l4VFFVRlRMRk5CUVZNN1FVRkRiRUk3UVVGRFFUdEJRVU5CTEVsQlFVazdRVUZEU2pzN1FVRkZRVHRCUVVOQk96dEJRVVZCTzBGQlEwRTdRVUZEUVN4WlFVRlpMRk5CUVZNN1FVRkRja0k3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN08wRkJSVUU3UVVGRFFUdEJRVU5CTzBGQlEwRXNhVUpCUVdsQ0xHbEVRVUZwUkR0QlFVTnNSVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHM3UVVGRlFUdEJRVU5CT3p0QlFVVkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPenRCUVVWQk8wRkJRMEU3TzBGQlJVRTdRVUZEUVR0QlFVTkJPenRCUVVWQk96dEJRVVZCTzBGQlEwRTdRVUZEUVN4elFrRkJjMEk3UVVGRGRFSTdRVUZEUVR0QlFVTkJPenRCUVVWQk8wRkJRMEU3UVVGRFFTeHJSRUZCYTBRN1FVRkRiRVFzVjBGQlZ5dzBRMEZCTkVNN1FVRkRka1E3UVVGRFFUczdRVUZGUVR0QlFVTkJPMEZCUTBFc2RVSkJRWFZDTzBGQlEzWkNPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUczdRVUZGUVR0QlFVTkJPenRCUVVWQk8wRkJRMEU3UVVGRFFUdEJRVU5CT3p0QlFVVkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUczdRVUZGUVR0QlFVTkJPMEZCUTBFN08wRkJSVUU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CT3p0QlFVVkJPenRCUVVWQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN08wRkJSVUU3UVVGRFFUdEJRVU5CT3p0QlFVVkJPMEZCUTBFN08wRkJSVUU3UVVGRFFUdEJRVU5CT3p0QlFVVkJPMEZCUTBFN1FVRkRRVHM3UVVGRlFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPenRCUVVWQk8wRkJRMEU3TzBGQlJVRTdRVUZEUVR0QlFVTkJPMEZCUTBFN08wRkJSVUU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVRzN1FVRkZRVHM3UVVGRlFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFTeExRVUZMTzBGQlEwdzdRVUZEUVR0QlFVTkJPenRCUVVWQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdPMEZCUlVFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUczdRVUZGUVR0QlFVTkJPMEZCUTBFN1FVRkRRU3hYUVVGWExHbENRVUZwUWp0QlFVTTFRanRCUVVOQkxGZEJRVmNzVTBGQlV6dEJRVU53UWl4WFFVRlhMRTlCUVU4N1FVRkRiRUlzVjBGQlZ5eFBRVUZQTzBGQlEyeENPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3TzBGQlJVRTdPMEZCUlVFN1FVRkRRVHRCUVVOQk96dEJRVVZCTzBGQlEwRTdRVUZEUVR0QlFVTkJPenRCUVVWQk8wRkJRMEU3UVVGRFFUdEJRVU5CT3p0QlFVVkJPMEZCUTBFc1MwRkJTenRCUVVOTU8wRkJRMEU3TzBGQlJVRTdRVUZEUVRzN1FVRkZRVHRCUVVOQk8wRkJRMEU3UVVGRFFUczdRVUZGUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk96dEJRVVZCTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHM3UVVGRlFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHM3UVVGRlFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPenRCUVVWQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3TzBGQlJVRTdPMEZCUlVFN1FVRkRRVHM3UVVGRlFUdEJRVU5CTzBGQlEwRTdPMEZCUlVFN1FVRkRRVHM3UVVGRlFUdEJRVU5CTzBGQlEwRTdPMEZCUlVFN1FVRkRRVHRCUVVOQkxFVkJRVVU3TzBGQlJVWTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEVzUlVGQlJUdEJRVU5HTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFc1IwRkJSenRCUVVOSU96dEJRVVZCTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQkxFVkJRVVU3UVVGRFJqdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJMRWRCUVVjN1FVRkRTRHM3UVVGRlFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJMRVZCUVVVN1FVRkRSanRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFc1IwRkJSenRCUVVOSU96dEJRVVZCT3p0QlFVVkJMRVZCUVVVN096czdRVUZKUmp0QlFVTkJPenRCUVVWQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPenM3T3p0QlFVdEJPMEZCUTBFN1FVRkRRVHM3UVVGRlFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUczdPMEZCUjBFN1FVRkRRVHM3UVVGRlFTeFRRVUZUTEVkQlFVYzdRVUZEV2p0QlFVTkJPMEZCUTBFN1FVRkRRVHM3UVVGRlFUdEJRVU5CT3pzN1FVRkhRVHM3T3p0QlFVbEJPenRCUVVWQk96dEJRVVZCTzBGQlEwRTdPenM3UVVGSlFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFc1NVRkJTVHRCUVVOS096dEJRVVZCTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFc1NVRkJTVHRCUVVOS096dEJRVVZCTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFc1NVRkJTVHRCUVVOS096dEJRVVZCTzBGQlEwRTdRVUZEUVRzN1FVRkZRVHRCUVVOQk96dEJRVVZCTzBGQlEwRTdRVUZEUVRzN1FVRkZRVHRCUVVOQk8wRkJRMEU3TzBGQlJVRTdRVUZEUVR0QlFVTkJMRWRCUVVjN1FVRkRTRHM3UVVGRlFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPenRCUVVWQk8wRkJRMEU3UVVGRFFTeHBRa0ZCYVVJc1UwRkJVenRCUVVNeFFqdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJMRXRCUVVzN1FVRkRURHM3UVVGRlFUczdRVUZGUVN4bFFVRmxMRk5CUVZNN1FVRkRlRUk3UVVGRFFUczdRVUZGUVR0QlFVTkJMRVZCUVVVN1FVRkRSanRCUVVOQk8wRkJRMEVzUlVGQlJUdEJRVU5HTzBGQlEwRTdRVUZEUVN4RlFVRkZPMEZCUTBZN1FVRkRRVHRCUVVOQk96dEJRVVZCTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFTeEZRVUZGT3pzN1FVRkhSanM3TzBGQlIwRTdRVUZEUVRzN1FVRkZRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CT3p0QlFVVkJPMEZCUTBFN08wRkJSVUU3UVVGRFFUdEJRVU5CTzBGQlEwRTdPMEZCUlVFN1FVRkRRVHRCUVVOQk96dEJRVVZCTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN08wRkJSVUU3UVVGRFFUczdRVUZGUVN4TFFVRkxPMEZCUTB3N1FVRkRRVHM3UVVGRlFUdEJRVU5CT3p0QlFVVkJPMEZCUTBFN1FVRkRRVHM3UVVGRlFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHM3UVVGRlFUdEJRVU5CTzBGQlEwRTdPMEZCUlVFN1FVRkRRVHRCUVVOQk96dEJRVVZCTzBGQlEwRXNVMEZCVXp0QlFVTlVPMEZCUTBFN1FVRkRRVHRCUVVOQk96dEJRVVZCT3p0QlFVVkJPMEZCUTBFc1RVRkJUVHRCUVVOT096dEJRVVZCT3p0QlFVVkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUczdRVUZGUVR0QlFVTkJMRXRCUVVzN1FVRkRURHM3UVVGRlFUdEJRVU5CTzBGQlEwRXNTMEZCU3p0QlFVTk1PMEZCUTBFN08wRkJSVUU3UVVGRFFTeEpRVUZKTzBGQlEwbzdRVUZEUVR0QlFVTkJPenRCUVVWQk8wRkJRMEU3UVVGRFFTeEpRVUZKTzBGQlEwbzdRVUZEUVRzN1FVRkZRVHRCUVVOQk8wRkJRMEU3TzBGQlJVRTdRVUZEUVRzN1FVRkZRVHRCUVVOQk96dEJRVVZCTzBGQlEwRTdPenRCUVVkQk96dEJRVVZCTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk96dEJRVVZCTzBGQlEwRTdRVUZEUVR0QlFVTkJPenRCUVVWQk8wRkJRMEU3UVVGRFFTeFhRVUZYTEU5QlFVODdRVUZEYkVJN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFTeEpRVUZKTzBGQlEwb3NSVUZCUlRzN1FVRkZSanRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdPMEZCUlVFN1FVRkRRVHRCUVVOQkxGZEJRVmNzVDBGQlR6dEJRVU5zUWl3eVFrRkJNa0lzZDBKQlFYZENPenRCUVVWdVJEdEJRVU5CTzBGQlEwRTdPMEZCUlVFN1FVRkRRVHRCUVVOQk96dEJRVVZCTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHM3UVVGRlFUdEJRVU5CTEVWQlFVVTdPMEZCUlVZN1FVRkRRVHM3UVVGRlFUdEJRVU5CTzBGQlEwRTdRVUZEUVRzN1FVRkZRVHRCUVVOQk8wRkJRMEU3UVVGRFFUczdRVUZGUVR0QlFVTkJPenRCUVVWQk8wRkJRMEU3UVVGRFFUdEJRVU5CTEVWQlFVVTdPMEZCUlVZN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRXNSVUZCUlRzN1FVRkZSanRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRXNSVUZCUlRzN1FVRkZSanRCUVVOQk8wRkJRMEU3UVVGRFFUczdRVUZGUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQkxFVkJRVVU3UVVGRFJqdEJRVU5CTzBGQlEwRXNSVUZCUlR0QlFVTkdPMEZCUTBFN1FVRkRRU3hGUVVGRk8wRkJRMFk3UVVGRFFUdEJRVU5CTEVWQlFVVTdRVUZEUmp0QlFVTkJPMEZCUTBFc1JVRkJSVHRCUVVOR08wRkJRMEU3UVVGRFFTeEZRVUZGTzBGQlEwWTdRVUZEUVR0QlFVTkJMRVZCUVVVN1FVRkRSanRCUVVOQk8wRkJRMEVzUlVGQlJUdEJRVU5HTzBGQlEwRTdRVUZEUVN4RlFVRkZPMEZCUTBZN1FVRkRRU3d5UTBGQk1rTTdRVUZETTBNc1JVRkJSVHRCUVVOR08wRkJRMEU3UVVGRFFTeEZRVUZGTzBGQlEwWTdRVUZEUVRzN1FVRkZRVHRCUVVOQk8wRkJRMEU3UVVGRFFUczdRVUZGUVR0QlFVTkJPenRCUVVWQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVRzN1FVRkZRVHRCUVVOQk8wRkJRMEVzUTBGQlF6dEJRVU5FTzBGQlEwRTdPMEZCUlVFN1FVRkRRVHRCUVVOQk96dEJRVVZCTzBGQlEwRTdRVUZEUVRzN1FVRkZRVHM3UVVGRlFUdEJRVU5CTzBGQlEwRTdRVUZEUVRzN1FVRkZRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CT3p0QlFVVkJPMEZCUTBFN1FVRkRRU3hGUVVGRk8wRkJRMFk3T3pzN1FVRkpRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRXNSMEZCUnp0QlFVTklPMEZCUTBFN08wRkJSVUU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVRzN1FVRkZRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTEcxQ1FVRnRRanM3UVVGRmJrSTdRVUZEUVRzN1FVRkZRVHRCUVVOQk96dEJRVVZCTzBGQlEwRTdPMEZCUlVFN1FVRkRRVHM3UVVGRlFUdEJRVU5CT3p0QlFVVkJPMEZCUTBFN08wRkJSVUU3UVVGRFFUczdRVUZGUVR0QlFVTkJPenRCUVVWQk8wRkJRMEU3TzBGQlJVRTdRVUZEUVR0QlFVTkJPMEZCUTBFc1YwRkJWeXhqUVVGak8wRkJRM3BDTzBGQlEwRTdPMEZCUlVFN1FVRkRRVHRCUVVOQk96dEJRVVZCTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHM3UVVGRlFUdEJRVU5CTzBGQlEwRTdRVUZEUVRzN1FVRkZRVHM3UVVGRlFUdEJRVU5CT3p0QlFVVkJPMEZCUTBFN1FVRkRRVHM3UVVGRlFUdEJRVU5CTEUxQlFVMDdRVUZEVGp0QlFVTkJPMEZCUTBFN1FVRkRRU3hIUVVGSE96dEJRVVZJTzBGQlEwRTdPMEZCUlVFN1FVRkRRVHRCUVVOQk96dEJRVVZCTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN08wRkJSVUU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFc1UwRkJVenM3UVVGRlZEdEJRVU5CTzBGQlEwRTdRVUZEUVN4UlFVRlJPMEZCUTFJc1QwRkJUenM3UVVGRlVEdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFc1NVRkJTVHM3UVVGRlNqdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN08wRkJSVUU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJMRTFCUVUwN1FVRkRUanRCUVVOQkxFbEJRVWs3TzBGQlJVbzdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEVzU1VGQlNUczdRVUZGU2p0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFTeEpRVUZKT3p0QlFVVktPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRXNTVUZCU1R0QlFVTktPMEZCUTBFN1FVRkRRU3hKUVVGSk96dEJRVVZLTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTEVsQlFVazdRVUZEU2p0QlFVTkJPMEZCUTBFc1NVRkJTVHM3UVVGRlNqdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRXNTVUZCU1RzN1FVRkZTanRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTEVsQlFVazdPMEZCUlVvN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUczdRVUZGUVR0QlFVTkJPenM3UVVGSFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN08wRkJSVUU3UVVGRFFUczdRVUZGUVRzN1FVRkZRVHRCUVVOQk8wRkJRMEU3TzBGQlJVRTdRVUZEUVN4SlFVRkpPMEZCUTBvN08wRkJSVUU3UVVGRFFTeEpRVUZKT3p0QlFVVktPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3TzBGQlJVRTdRVUZEUVR0QlFVTkJPMEZCUTBFc1IwRkJSenM3UVVGRlNEdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPenRCUVVWQk96dEJRVVZCTzBGQlEwRTdPMEZCUlVFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFTeExRVUZMTzBGQlEwdzdRVUZEUVR0QlFVTkJPMEZCUTBFc1MwRkJTenRCUVVOTU8wRkJRMEU3UVVGRFFTeExRVUZMT3p0QlFVVk1PMEZCUTBFN1FVRkRRVHM3UVVGRlFUdEJRVU5CT3p0QlFVVkJPMEZCUTBFN08wRkJSVUVzZVVOQlFYbERMSEZEUVVGeFF6dEJRVU01UlN4eFEwRkJjVU1zYzBOQlFYTkRPMEZCUXpORkxIRkRRVUZ4UXl4eFEwRkJjVU03UVVGRE1VVTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFTeFZRVUZWTzBGQlExWTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQkxGTkJRVk03UVVGRFZDeFJRVUZSTzBGQlExSTdRVUZEUVN4UFFVRlBPMEZCUTFBc1MwRkJTenRCUVVOTU8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN08wRkJSVUU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPenRCUVVWQk96dEJRVVZCTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN08wRkJSVUU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVRzN1FVRkZRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdPMEZCUlVFN1FVRkRRVHM3UVVGRlFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHM3UVVGRlFUdEJRVU5CTEZsQlFWazdPMEZCUlZvN1FVRkRRVHM3UVVGRlFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk96dEJRVVZCTzBGQlEwRXNWMEZCVnpzN1FVRkZXRHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdPMEZCUlVFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFTeFRRVUZUT3p0QlFVVlVPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTEZsQlFWazdPMEZCUlZvN1FVRkRRVHRCUVVOQk8wRkJRMEU3TzBGQlJVRTdRVUZEUVR0QlFVTkJPMEZCUTBFN08wRkJSVUU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPenRCUVVWQk8wRkJRMEU3UVVGRFFUdEJRVU5CT3p0QlFVVkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTEZOQlFWTTdPMEZCUlZRN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPenRCUVVWQk96dEJRVVZCTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdPMEZCUlVFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN08wRkJSVUU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFTeFBRVUZQTzBGQlExQXNTMEZCU3pzN1FVRkZURHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRXNTVUZCU1R0QlFVTktPenRCUVVWQk8wRkJRMEU3UVVGRFFUdEJRVU5CT3p0QlFVVkJPMEZCUTBFN1FVRkRRVHRCUVVOQk96dEJRVVZCTzBGQlEwRTdRVUZEUVR0QlFVTkJPenRCUVVWQk8wRkJRMEU3UVVGRFFUdEJRVU5CTEUxQlFVMDdPMEZCUlU0N1FVRkRRVHRCUVVOQk96dEJRVVZCTzBGQlEwRTdRVUZEUVRzN1FVRkZRVHRCUVVOQk96dEJRVVZCTzBGQlEwRTdRVUZEUVR0QlFVTkJPenRCUVVWQk8wRkJRMEU3UVVGRFFUdEJRVU5CT3p0QlFVVkJMSEZEUVVGeFF6dEJRVU55UXl4elEwRkJjME03UVVGRGRFTXNjVU5CUVhGRE8wRkJRM0pETzBGQlEwRTdRVUZEUVR0QlFVTkJPenRCUVVWQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRXNTVUZCU1RzN1FVRkZTanRCUVVOQk96dEJRVVZCTzBGQlEwRTdRVUZEUVR0QlFVTkJPenRCUVVWQk8wRkJRMEU3UVVGRFFTeEZRVUZGT3p0QlFVVkdPMEZCUTBFN1FVRkRRVHM3UVVGRlFUdEJRVU5CT3p0QlFVVkJPMEZCUTBFN08wRkJSVUU3UVVGRFFUdEJRVU5CT3p0QlFVVkJPMEZCUTBFN08wRkJSVUU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3TzBGQlJVRTdRVUZEUVR0QlFVTkJPMEZCUTBFN08wRkJSVUU3UVVGRFFUdEJRVU5CT3p0QlFVVkJPMEZCUTBFN1FVRkRRVHM3UVVGRlFUdEJRVU5CTzBGQlEwRTdRVUZEUVRzN1FVRkZRVHRCUVVOQk8wRkJRMEVzUlVGQlJUczdPMEZCUjBZN1FVRkRRVHRCUVVOQk96dEJRVVZCT3p0QlFVVkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUczdPenM3UVVGTFFUdEJRVU5CTzBGQlEwRTdRVUZEUVN4SFFVRkhPMEZCUTBnN096czdPMEZCUzBFN1FVRkRRVHM3UVVGRlFUczdRVUZGUVR0QlFVTkJPenRCUVVWQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVN4SlFVRkpPenRCUVVWS08wRkJRMEU3TzBGQlJVRTdPMEZCUlVFN1FVRkRRVHM3UVVGRlFUdEJRVU5CTzBGQlEwRTdPMEZCUlVFN1FVRkRRVHM3UVVGRlFUdEJRVU5CTzBGQlEwRTdRVUZEUVRzN1FVRkZRVHRCUVVOQk96dEJRVVZCTzBGQlEwRTdRVUZEUVR0QlFVTkJPenRCUVVWQk8wRkJRMEU3UVVGRFFUdEJRVU5CTEVWQlFVVTdPMEZCUlVZN08wRkJSVUU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPenRCUVVWQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVRzN1FVRkZRVHRCUVVOQk96dEJRVVZCTEVWQlFVVTdPMEZCUlVZN1FVRkRRVHM3UVVGRlFUdEJRVU5CTzBGQlEwRTdPenM3TzBGQlMwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk96dEJRVVZCTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHM3UVVGRlFUdEJRVU5CTEVkQlFVYzdRVUZEU0RzN1FVRkZRVHRCUVVOQk8wRkJRMEU3TzBGQlJVRTdPMEZCUlVFN1FVRkRRVHRCUVVOQk8wRkJRMEU3TzBGQlJVRTdRVUZEUVN4TFFVRkxPMEZCUTB3N1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CT3p0QlFVVkJPMEZCUTBFc1YwRkJWeXhUUVVGVE8wRkJRM0JDTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3TzBGQlJVRTdRVUZEUVR0QlFVTkJPenRCUVVWQk8wRkJRMEU3UVVGRFFUdEJRVU5CT3p0QlFVVkJPMEZCUTBFN096dEJRVWRCTzBGQlEwRTdRVUZEUVRzN1FVRkZRVHRCUVVOQk8wRkJRMEU3UVVGRFFUczdRVUZGUVN4blEwRkJaME03UVVGRGFFTTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk96dEJRVVZCTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3T3pzN08wRkJTMEU3UVVGRFFUdEJRVU5CT3p0QlFVVkJPenRCUVVWQk96dEJRVVZCT3p0QlFVVkJPMEZCUTBFN08wRkJSVUU3UVVGRFFUdEJRVU5CT3p0QlFVVkJPMEZCUTBFN1FVRkRRVHRCUVVOQk96dEJRVVZCTzBGQlEwRTdRVUZEUVR0QlFVTkJPenRCUVVWQk8wRkJRMEU3UVVGRFFUdEJRVU5CTEUxQlFVMDdRVUZEVGp0QlFVTkJPMEZCUTBFN1FVRkRRU3hQUVVGUE8wRkJRMUE3UVVGRFFUdEJRVU5CT3p0QlFVVkJPMEZCUTBFc1JVRkJSVHRCUVVOR08wRkJRMEU3UVVGRFFUczdRVUZGUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHM3UVVGRlFTeDNRa0ZCZDBJc1lVRkJZVHRCUVVOeVF5eEpRVUZKT3p0QlFVVktPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTEVWQlFVVTdRVUZEUmp0QlFVTkJPMEZCUTBFN08wRkJSVUU3UVVGRFFUdEJRVU5CTEVWQlFVVTdRVUZEUmpzN1FVRkZRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUczdRVUZGUVR0QlFVTkJPenRCUVVWQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPenRCUVVWQk8wRkJRMEU3UVVGRFFUdEJRVU5CTEVWQlFVVTdRVUZEUmp0QlFVTkJPMEZCUTBFN08wRkJSVUU3UVVGRFFUdEJRVU5CT3p0QlFVVkJPenRCUVVWQk8wRkJRMEU3TzBGQlJVRTdRVUZEUVR0QlFVTkJPMEZCUTBFc1MwRkJTenRCUVVOTU96dEJRVVZCTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHM3UVVGRlFUczdRVUZGUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHM3UVVGRlFUdEJRVU5CT3p0QlFVVkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTEV0QlFVczdRVUZEVER0QlFVTkJPMEZCUTBFN1FVRkRRU3hGUVVGRk8wRkJRMFk3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPenRCUVVWQk96czdPMEZCU1VFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPenRCUVVWQkxHOUNRVUZ2UWl4VFFVRlRPMEZCUXpkQ096dEJRVVZCTzBGQlEwRTdRVUZEUVR0QlFVTkJPenRCUVVWQk8wRkJRMEU3UVVGRFFUczdRVUZGUVR0QlFVTkJPMEZCUTBFN08wRkJSVUU3UVVGRFFUdEJRVU5CTzBGQlEwRTdPMEZCUlVFN1FVRkRRVHRCUVVOQk96dEJRVVZCTzBGQlEwRTdPMEZCUlVFN1FVRkRRVHM3UVVGRlFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPenRCUVVWQk8wRkJRMEU3UVVGRFFUdEJRVU5CTEV0QlFVczdPMEZCUlV3N1FVRkRRVHRCUVVOQkxFbEJRVWs3UVVGRFNqdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPenRCUVVWQk8wRkJRMEU3UVVGRFFUdEJRVU5CTEVWQlFVVTdPMEZCUlVZN1FVRkRRVHRCUVVOQkxFVkJRVVU3TzBGQlJVWTdRVUZEUVR0QlFVTkJMRVZCUVVVN08wRkJSVVk3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVN4RlFVRkZPenRCUVVWR08wRkJRMEU3UVVGRFFUdEJRVU5CTEVWQlFVVTdPMEZCUlVZN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUczdRVUZGUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHM3UVVGRlFUdEJRVU5CTzBGQlEwRTdPMEZCUlVFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3TzBGQlJVRTdRVUZEUVRzN1FVRkZRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTEV0QlFVczdRVUZEVERzN1FVRkZRVHRCUVVOQk96dEJRVVZCTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHM3UVVGRlFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN08wRkJSVUU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPenRCUVVWQk8wRkJRMEU3UVVGRFFUczdRVUZGUVR0QlFVTkJPenRCUVVWQk8wRkJRMEU3UVVGRFFTeExRVUZMTzBGQlEwd3NSMEZCUnp0QlFVTklMRVZCUVVVN08wRkJSVVk3UVVGRFFUdEJRVU5CTzBGQlEwRXNTVUZCU1R0QlFVTktPMEZCUTBFc1JVRkJSVHM3TzBGQlIwWTdRVUZEUVR0QlFVTkJPenRCUVVWQk8wRkJRMEU3UVVGRFFUczdRVUZGUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQkxFMUJRVTA3UVVGRFRqdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFc1JVRkJSVHM3UVVGRlJqdEJRVU5CT3p0QlFVVkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CT3p0QlFVVkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3TzBGQlJVRTdPMEZCUlVFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUczdRVUZGUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHM3UVVGRlFUdEJRVU5CTzBGQlEwRTdRVUZEUVN4RlFVRkZPenRCUVVWR08wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJMRXRCUVVzN1FVRkRUQ3hKUVVGSk8wRkJRMG83UVVGRFFTeEZRVUZGT3p0QlFVVkdPMEZCUTBFN1FVRkRRVHM3UVVGRlFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPenRCUVVWQk8wRkJRMEU3UVVGRFFUczdRVUZGUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHM3UVVGRlFUdEJRVU5CT3p0QlFVVkJPMEZCUTBFN1FVRkRRVHRCUVVOQkxFdEJRVXM3UVVGRFRDeEZRVUZGTzBGQlEwWTdRVUZEUVR0QlFVTkJPMEZCUTBFc1NVRkJTVHRCUVVOS0xFVkJRVVU3UVVGRFJqdEJRVU5CTzBGQlEwRXNSVUZCUlRzN1FVRkZSanRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUczdRVUZGUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk96dEJRVVZCTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRXNSVUZCUlR0QlFVTkdPenRCUVVWQk96czdRVUZIUVRzN1FVRkZRVHM3T3p0QlFVbEJPMEZCUTBFN1FVRkRRU3hIUVVGSE8wRkJRMGdzWlVGQlpUczdRVUZGWmp0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN08wRkJSVUU3UVVGRFFUdEJRVU5CT3p0QlFVVkJPMEZCUTBFN1FVRkRRVHM3UVVGRlFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPenRCUVVWQk8wRkJRMEU3T3pzN1FVRkpRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVN4TFFVRkxPMEZCUTB3N1FVRkRRVHRCUVVOQkxFbEJRVWs3UVVGRFNqdEJRVU5CT3p0QlFVVkJPMEZCUTBFN1FVRkRRVHRCUVVOQk96dEJRVVZCT3p0QlFVVkJPMEZCUTBFN1FVRkRRVHM3UVVGRlFUdEJRVU5CT3p0QlFVVkJPMEZCUTBFN08wRkJSVUU3TzBGQlJVRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3TzBGQlJVRTdPMEZCUlVFN1FVRkRRVHM3UVVGRlFUdEJRVU5CTzBGQlEwRTdPMEZCUlVFN1FVRkRRVHM3UVVGRlFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdPenRCUVVkQk96dEJRVVZCTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN08wRkJSVUU3UVVGRFFUdEJRVU5CT3p0QlFVVkJPMEZCUTBFN08wRkJSVUU3TzBGQlJVRTdRVUZEUVR0QlFVTkJPMEZCUTBFN08wRkJSVUU3UVVGRFFUczdRVUZGUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk96dEJRVVZCTzBGQlEwRXNVMEZCVXl4blFrRkJaMEk3UVVGRGVrSTdRVUZEUVR0QlFVTkJPMEZCUTBFN08wRkJSVUU3UVVGRFFUczdRVUZGUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRU3hKUVVGSk8wRkJRMG83UVVGRFFUczdRVUZGUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk96dEJRVVZCTzBGQlEwRXNhMEpCUVd0Q0xHZENRVUZuUWp0QlFVTnNRenRCUVVOQk8wRkJRMEU3UVVGRFFUczdRVUZGUVR0QlFVTkJPenRCUVVWQk8wRkJRMEU3UVVGRFFUdEJRVU5CTEVWQlFVVTdRVUZEUmp0QlFVTkJPMEZCUTBFc1JVRkJSVHRCUVVOR08wRkJRMEU3UVVGRFFUdEJRVU5CT3p0QlFVVkJPMEZCUTBFN1FVRkRRVHRCUVVOQkxFdEJRVXM3UVVGRFREdEJRVU5CTzBGQlEwRXNTVUZCU1R0QlFVTktPMEZCUTBFc1JVRkJSVHRCUVVOR096dEJRVVZCT3p0QlFVVkJPenM3TzBGQlNVRTdRVUZEUVR0QlFVTkJPMEZCUTBFN08wRkJSVUU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN08wRkJSVUU3TzBGQlJVRTdRVUZEUVR0QlFVTkJPenRCUVVWQk8wRkJRMEU3UVVGRFFUdEJRVU5CT3p0QlFVVkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFTeEZRVUZGT3pzN1FVRkhSanRCUVVOQk96dEJRVVZCTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk96dEJRVVZCTzBGQlEwRTdPMEZCUlVFN1FVRkRRVHM3UVVGRlFUdEJRVU5CTzBGQlEwRTdRVUZEUVRzN08wRkJSMEU3TzBGQlJVRTdRVUZEUVR0QlFVTkJPenRCUVVWQk8wRkJRMEU3TzBGQlJVRXNSMEZCUnp0QlFVTklPenRCUVVWQkxFZEJRVWM3UVVGRFNEdEJRVU5CT3p0QlFVVkJPMEZCUTBFN1FVRkRRVHM3UVVGRlFUdEJRVU5CT3pzN1FVRkhRVHRCUVVOQk8wRkJRMEU3UVVGRFFUczdRVUZGUVN4VFFVRlRMRTlCUVU4N1FVRkRhRUk3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN096dEJRVWRCTEhOQ1FVRnpRanM3UVVGRmRFSTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk96dEJRVVZCTEZOQlFWTXNUMEZCVHp0QlFVTm9RanM3UVVGRlFUczdRVUZGUVR0QlFVTkJPenRCUVVWQk8wRkJRMEU3UVVGRFFUczdRVUZGUVR0QlFVTkJMRXRCUVVzN1FVRkRURHM3UVVGRlFUdEJRVU5CTEV0QlFVczdRVUZEVERzN1FVRkZRVHRCUVVOQk8wRkJRMEU3UVVGRFFUczdRVUZGUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk96dEJRVVZCTzBGQlEwRTdRVUZEUVRzN1FVRkZRVHRCUVVOQk96dEJRVVZCTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN08wRkJSVUU3UVVGRFFUczdRVUZGUVR0QlFVTkJPenRCUVVWQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPenRCUVVWQk96dEJRVVZCTzBGQlEwRTdPMEZCUlVFN1FVRkRRVHRCUVVOQk8wRkJRMEU3TzBGQlJVRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdPMEZCUlVFN1FVRkRRVHM3TzBGQlIwRTdPMEZCUlVFN1FVRkRRVHRCUVVOQk96dEJRVVZCTzBGQlEwRTdRVUZEUVRzN1FVRkZRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN08wRkJSVUU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFc1IwRkJSenRCUVVOSU96dEJRVVZCTzBGQlEwRTdPMEZCUlVFN1FVRkRRVHM3UVVGRlFUdEJRVU5CT3p0QlFVVkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVRzN1FVRkZRVHM3UVVGRlFUdEJRVU5CTzBGQlEwRTdRVUZEUVN4SFFVRkhPMEZCUTBnN08wRkJSVUU3UVVGRFFUdEJRVU5CTzBGQlEwRXNTVUZCU1RzN1FVRkZTanRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFc1IwRkJSenRCUVVOSU8wRkJRMEU3TzBGQlJVRTdRVUZEUVR0QlFVTkJPenRCUVVWQk8wRkJRMEU3UVVGRFFUdEJRVU5CT3p0QlFVVkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFTeEhRVUZITzBGQlEwZzdPMEZCUlVFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUczdRVUZGUVN4WFFVRlhPenRCUVVWWU96dEJRVVZCTzBGQlEwRTdRVUZEUVR0QlFVTkJPenRCUVVWQk8wRkJRMEU3UVVGRFFUdEJRVU5CT3p0QlFVVkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUczdRVUZGUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk96dEJRVVZCTzBGQlEwRTdRVUZEUVR0QlFVTkJPenRCUVVWQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVRzN1FVRkZRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdPMEZCUlVFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdPMEZCUlVFN1FVRkRRVHRCUVVOQk8wRkJRMEU3TzBGQlJVRTdRVUZEUVRzN1FVRkZRVHRCUVVOQk96dEJRVVZCTzBGQlEwRTdPMEZCUlVFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRU3hKUVVGSk96dEJRVVZLTzBGQlEwRTdRVUZEUVR0QlFVTkJPenRCUVVWQk8wRkJRMEU3UVVGRFFUczdRVUZGUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk96dEJRVVZCTzBGQlEwRTdPMEZCUlVFN1FVRkRRVHRCUVVOQk8wRkJRMEU3TzBGQlJVRTdRVUZEUVR0QlFVTkJPMEZCUTBFc1MwRkJTenRCUVVOTU8wRkJRMEU3TzBGQlJVRTdRVUZEUVR0QlFVTkJPenRCUVVWQkxFVkJRVVU3TzBGQlJVWTdRVUZEUVRzN1FVRkZRVHRCUVVOQk8wRkJRMEU3UVVGRFFUczdRVUZGUVR0QlFVTkJPMEZCUTBFN08wRkJSVUVzTkVOQlFUUkRPMEZCUXpWRE8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVRzN1FVRkZRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVRzN1FVRkZRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CT3p0QlFVVkJPMEZCUTBFN1FVRkRRVHRCUVVOQk96dEJRVVZCTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHM3UVVGRlFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk96dEJRVVZCTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN08wRkJSVUU3UVVGRFFUczdRVUZGUVR0QlFVTkJPMEZCUTBFN08wRkJSVUU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVN4RlFVRkZPenRCUVVWR096dEJRVVZCTzBGQlEwRTdPMEZCUlVFN1FVRkRRVHM3UVVGRlFUdEJRVU5CTzBGQlEwRTdRVUZEUVRzN1FVRkZRVHRCUVVOQk96dEJRVVZCTEdWQlFXVXNjMEpCUVhOQ08wRkJRM0pETzBGQlEwRTdPMEZCUlVFN08wRkJSVUU3UVVGRFFUdEJRVU5CTzBGQlEwRTdPMEZCUlVFN1FVRkRRVHM3UVVGRlFTd3dRa0ZCTUVJN1FVRkRNVUk3UVVGRFFUdEJRVU5CT3p0QlFVVkJPMEZCUTBFN1FVRkRRVHM3UVVGRlFUdEJRVU5CTzBGQlEwRTdRVUZEUVRzN1FVRkZRVHRCUVVOQk96dEJRVVZCTEdkRlFVRm5SVHRCUVVOb1JUczdRVUZGUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdPMEZCUlVFN1FVRkRRVHRCUVVOQk8wRkJRMEU3TzBGQlJVRTdRVUZEUVN4RlFVRkZPenRCUVVWR08wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdPMEZCUlVFN1FVRkRRVHM3UVVGRlFUdEJRVU5CTzBGQlEwRTdPMEZCUlVFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CT3p0QlFVVkJMRmRCUVZjc1kwRkJZenM3UVVGRmVrSTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQkxHdENRVUZyUWl4dFFrRkJiVUk3UVVGRGNrTTdPMEZCUlVFN1FVRkRRVHM3UVVGRlFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTERKQ1FVRXlRaXgxUTBGQmRVTTdRVUZEYkVVN1FVRkRRVHRCUVVOQk8wRkJRMEU3TzBGQlJVRTdRVUZEUVR0QlFVTkJPMEZCUTBFc2QwSkJRWGRDTEhWRVFVRjFSRHRCUVVNdlJUczdRVUZGUVR0QlFVTkJMRVZCUVVVN08wRkJSVVk3UVVGRFFUdEJRVU5CTzBGQlEwRTdPMEZCUlVFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTEUxQlFVMDdRVUZEVGp0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQkxFdEJRVXM3TzBGQlJVdzdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEVzVFVGQlRUdEJRVU5PTzBGQlEwRXNTVUZCU1R0QlFVTktMRVZCUVVVN08wRkJSVVk3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVN4RlFVRkZPenRCUVVWR08wRkJRMEU3TzBGQlJVRTdRVUZEUVR0QlFVTkJMRWRCUVVjN1FVRkRTRHM3UVVGRlFUdEJRVU5CT3p0QlFVVkJPMEZCUTBFN1FVRkRRVHM3UVVGRlFUdEJRVU5CTzBGQlEwRTdPMEZCUlVFN1FVRkRRVHRCUVVOQk96dEJRVVZCTzBGQlEwRTdRVUZEUVN4SlFVRkpPMEZCUTBvN08wRkJSVUU3UVVGRFFUdEJRVU5CT3p0QlFVVkJPMEZCUTBFN1FVRkRRVHM3UVVGRlFUdEJRVU5CT3p0QlFVVkJPMEZCUTBFN1FVRkRRU3hKUVVGSk96dEJRVVZLTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTEVkQlFVYzdPMEZCUlVnN1FVRkRRVHM3UVVGRlFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3TzBGQlJVRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHM3UVVGRlFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHM3UVVGRlFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHM3UVVGRlFUczdRVUZGUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHM3UVVGRlFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPenRCUVVWQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRU3hQUVVGUE8wRkJRMUE3UVVGRFFUdEJRVU5CT3p0QlFVVkJPMEZCUTBFN1FVRkRRVHM3UVVGRlFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHM3UVVGRlFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRU3hOUVVGTkxDdERRVUVyUXp0QlFVTnlSRHRCUVVOQk96dEJRVVZCTzBGQlEwRTdRVUZEUVN4TFFVRkxPenRCUVVWTU8wRkJRMEU3UVVGRFFUczdRVUZGUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFTeE5RVUZOT3p0QlFVVk9PMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEVzUjBGQlJ6dEJRVU5JT3p0QlFVVkJPenRCUVVWQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdPMEZCUlVFN08wRkJSVUU3UVVGRFFUdEJRVU5CTzBGQlEwRTdPMEZCUlVFN1FVRkRRVHRCUVVOQk8wRkJRMEU3TzBGQlJVRTdRVUZEUVN4MVEwRkJkVU03UVVGRGRrTTdRVUZEUVRzN1FVRkZRVHRCUVVOQk8wRkJRMEU3UVVGRFFUczdRVUZGUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3TzBGQlJVRTdRVUZEUVRzN1FVRkZRVHRCUVVOQkxFZEJRVWM3UVVGRFNEdEJRVU5CT3p0QlFVVkJPMEZCUTBFN1FVRkRRVHRCUVVOQk96dEJRVVZCTzBGQlEwRTdPMEZCUlVFN1FVRkRRVHRCUVVOQk96dEJRVVZCTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3TzBGQlJVRTdRVUZEUVRzN1FVRkZRVHM3UVVGRlFUdEJRVU5CTzBGQlEwRTdRVUZEUVN4RlFVRkZPMEZCUTBZN1FVRkRRVHM3UVVGRlFUczdRVUZGUVR0QlFVTkJPMEZCUTBFN1FVRkRRU3hGUVVGRk8wRkJRMFk3UVVGRFFUczdRVUZGUVRzN1FVRkZRVHRCUVVOQk8wRkJRMEU3TzBGQlJVRTdRVUZEUVR0QlFVTkJPenRCUVVWQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJMRU5CUVVNN08wRkJSVVFzWlVGQlpTeHZRMEZCYjBNN1FVRkRia1E3TzBGQlJVRTdRVUZEUVRzN1FVRkZRVHRCUVVOQk8wRkJRMEU3UVVGRFFUczdRVUZGUVR0QlFVTkJPMEZCUTBFc1IwRkJSenRCUVVOSU96dEJRVVZCTzBGQlEwRTdPMEZCUlVFN1FVRkRRVHRCUVVOQkxFZEJRVWM3TzBGQlJVZzdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRU3hIUVVGSE96dEJRVVZJTzBGQlEwRTdRVUZEUVN4RlFVRkZPenRCUVVWR08wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVN4elEwRkJjME03UVVGRGRFTTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFTeERRVUZETzBGQlEwUTdRVUZEUVR0QlFVTkJPenRCUVVWQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdPMEZCUlVFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRU3hGUVVGRk96dEJRVVZHT3p0QlFVVkJPMEZCUTBFN1FVRkRRU3hGUVVGRk8wRkJRMFk3UVVGRFFUdEJRVU5CTEVWQlFVVTdRVUZEUmp0QlFVTkJPMEZCUTBFN08wRkJSVUU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CT3p0QlFVVkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CT3p0QlFVVkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJMRWxCUVVrN1FVRkRTanRCUVVOQkxFVkJRVVU3T3p0QlFVZEdPenRCUVVWQk8wRkJRMEU3UVVGRFFUdEJRVU5CT3p0QlFVVkJPMEZCUTBFN08wRkJSVUU3TzBGQlJVRTdRVUZEUVR0QlFVTkJPMEZCUTBFN08wRkJSVUU3UVVGRFFUczdRVUZGUVR0QlFVTkJPenRCUVVWQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRU3hIUVVGSE8wRkJRMGc3UVVGRFFUczdRVUZGUVR0QlFVTkJPenRCUVVWQk8wRkJRMEU3TzBGQlJVRTdRVUZEUVR0QlFVTkJPenRCUVVWQk8wRkJRMEU3UVVGRFFUdEJRVU5CT3p0QlFVVkJPMEZCUTBFN08wRkJSVUU3UVVGRFFTdzBRMEZCTkVNc1QwRkJUenRCUVVOdVJEdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPenRCUVVWQk8wRkJRMEU3UVVGRFFUdEJRVU5CTERoQ1FVRTRRanM3UVVGRk9VSTdRVUZEUVR0QlFVTkJPenRCUVVWQk8wRkJRMEU3UVVGRFFUczdRVUZGUVR0QlFVTkJPMEZCUTBFN08wRkJSVUU3UVVGRFFTeEhRVUZITzBGQlEwZzdRVUZEUVR0QlFVTkJPenRCUVVWQk96dEJRVVZCTzBGQlEwRTdPMEZCUlVFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CT3p0QlFVVkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFc1NVRkJTVHRCUVVOS096dEJRVVZCTzBGQlEwRTdRVUZEUVRzN1FVRkZRVHRCUVVOQk8wRkJRMEU3TzBGQlJVRTdRVUZEUVR0QlFVTkJPMEZCUTBFN08wRkJSVUU3UVVGRFFUdEJRVU5CTzBGQlEwRXNWMEZCVnl4UFFVRlBPMEZCUTJ4Q096dEJRVVZCTzBGQlEwRTdPMEZCUlVFN1FVRkRRVHM3UVVGRlFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPenRCUVVWQk8wRkJRMEU3TzBGQlJVRTdRVUZEUVRzN1FVRkZRVHRCUVVOQk96dEJRVVZCTzBGQlEwRXNhVUpCUVdsQ0xHZENRVUZuUWp0QlFVTnFRenRCUVVOQk8wRkJRMEU3UVVGRFFUczdRVUZGUVRzN1FVRkZRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTEZOQlFWTTdRVUZEVkR0QlFVTkJMRkZCUVZFN08wRkJSVkk3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CT3p0QlFVVkJPMEZCUTBFN08wRkJSVUU3UVVGRFFUdEJRVU5CTzBGQlEwRTdPMEZCUlVFc1UwRkJVeXdyUWtGQkswSTdRVUZEZUVNN1FVRkRRVHRCUVVOQk96dEJRVVZCTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk96dEJRVVZCTzBGQlEwRTdPMEZCUlVFN1FVRkRRVHRCUVVOQk8wRkJRMEVzUlVGQlJUczdRVUZGUmp0QlFVTkJPMEZCUTBFN1FVRkRRVHM3UVVGRlFUdEJRVU5CTzBGQlEwRTdPMEZCUlVFN1FVRkRRVHRCUVVOQk96dEJRVVZCTEhkRFFVRjNReXhQUVVGUE8wRkJReTlETzBGQlEwRTdRVUZEUVRzN1FVRkZRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CT3p0QlFVVkJMSGxEUVVGNVF5eFBRVUZQTzBGQlEyaEVPMEZCUTBFN1FVRkRRU3hMUVVGTE8wRkJRMHc3UVVGRFFUdEJRVU5CT3p0QlFVVkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3TzBGQlJVRTdRVUZEUVR0QlFVTkJMRVZCUVVVN08wRkJSVVk3UVVGRFFUdEJRVU5CTzBGQlEwRTdPMEZCUlVFc1ZVRkJWU3h4UTBGQmNVTTdRVUZETDBNN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CT3p0QlFVVkJPMEZCUTBFc1UwRkJVenRCUVVOVU8wRkJRMEU3UVVGRFFUdEJRVU5CT3p0QlFVVkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3TzBGQlJVRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFTeEZRVUZGT3p0QlFVVkdPMEZCUTBFN1FVRkRRVHRCUVVOQkxFVkJRVVU3TzBGQlJVWTdRVUZEUVR0QlFVTkJMRVZCUVVVN08wRkJSVVk3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQkxFMUJRVTA3UVVGRFRpeEhRVUZITzBGQlEwZ3NSVUZCUlRzN1FVRkZSanRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVN4SlFVRkpPMEZCUTBvc1JVRkJSVHM3UVVGRlJqdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRU3hKUVVGSk8wRkJRMG9zUlVGQlJUczdRVUZGUmp0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEVzU1VGQlNUdEJRVU5LTEVWQlFVVTdPMEZCUlVZN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTEVsQlFVazdRVUZEU2l4RlFVRkZPenRCUVVWR08wRkJRMEU3UVVGRFFUczdRVUZGUVN4VlFVRlZMRGhDUVVFNFFqdEJRVU40UXpzN1FVRkZRVHRCUVVOQk96dEJRVVZCTzBGQlEwRTdRVUZEUVR0QlFVTkJPenRCUVVWQk8wRkJRMEVzUlVGQlJUczdRVUZGUmp0QlFVTkJPMEZCUTBFN08wRkJSVUU3UVVGRFFUdEJRVU5CTEVsQlFVazdRVUZEU2l4RlFVRkZPenRCUVVWR08wRkJRMEU3UVVGRFFTdzJRa0ZCTmtJN1FVRkROMEk3UVVGRFFUczdRVUZGUVR0QlFVTkJPMEZCUTBFN08wRkJSVUU3UVVGRFFUdEJRVU5CT3p0QlFVVkJPenRCUVVWQk8wRkJRMEVzWVVGQllTeFBRVUZQTzBGQlEzQkNPenRCUVVWQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVRzN1FVRkZRVHM3UVVGRlFUdEJRVU5CTEUxQlFVMDdRVUZEVGpzN1FVRkZRVHRCUVVOQk8wRkJRMEU3UVVGRFFTeEhRVUZITzBGQlEwZ3NSVUZCUlRzN1FVRkZSanRCUVVOQk96dEJRVVZCTzBGQlEwRTdRVUZEUVRzN1FVRkZRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdPMEZCUlVFN1FVRkRRU3hIUVVGSE8wRkJRMGc3UVVGRFFTeEZRVUZGT3p0QlFVVkdPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTEVOQlFVTTdRVUZEUkR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3TzBGQlJVRXNWVUZCVlN4WFFVRlhPMEZCUTNKQ08wRkJRMEU3TzBGQlJVRTdRVUZEUVR0QlFVTkJPMEZCUTBFN08wRkJSVUU3UVVGRFFUdEJRVU5CTEVWQlFVVTdRVUZEUmpzN1FVRkZRVHM3TzBGQlIwRTdPMEZCUlVFN1FVRkRRVHRCUVVOQk8wRkJRMEU3TzBGQlJVRTdRVUZEUVR0QlFVTkJPenRCUVVWQk8wRkJRMEU3TzBGQlJVRTdRVUZEUVR0QlFVTkJPenRCUVVWQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdPMEZCUlVFN08wRkJSVUU3UVVGRFFUdEJRVU5CTzBGQlEwRTdPMEZCUlVFN1FVRkRRVHM3TzBGQlIwRTdPMEZCUlVFN096dEJRVWRCTzBGQlEwRTdRVUZEUVR0QlFVTkJPenM3T3p0QlFVdEJPenRCUVVWQk8wRkJRMEU3UVVGRFFUczdRVUZGUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHM3UVVGRlFTd3JRMEZCSzBNc1kwRkJZeXhYUVVGWE8wRkJRM2hGTEcxQ1FVRnRRaXhWUVVGVk8wRkJRemRDTzBGQlEwRXNjMEpCUVhOQ0xHTkJRV01zYzBKQlFYTkNMR2RDUVVGblFqdEJRVU14UlN4blFrRkJaMElzVjBGQlZ5eFpRVUZaTzBGQlEzWkRMR05CUVdNN1FVRkRaRHM3UVVGRlFUdEJRVU5CT3p0QlFVVkJPMEZCUTBFN08wRkJSVUU3UVVGRFFUdEJRVU5CTzBGQlEwRTdPMEZCUlVFN1FVRkRRVHRCUVVOQk96dEJRVVZCTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHM3UVVGRlFUczdRVUZGUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHM3UVVGRlFUdEJRVU5CTzBGQlEwRTdPMEZCUlVFN1FVRkRRVHRCUVVOQk8wRkJRMEU3TzBGQlJVRTdRVUZEUVR0QlFVTkJPMEZCUTBFN08wRkJSVUU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVRzN1FVRkZRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTEVkQlFVYzdRVUZEU0R0QlFVTkJPMEZCUTBFN1FVRkRRU3hIUVVGSE8wRkJRMGc3UVVGRFFUdEJRVU5CTzBGQlEwRXNSMEZCUnp0QlFVTklPMEZCUTBFN1FVRkRRVHRCUVVOQkxFZEJRVWM3UVVGRFNEdEJRVU5CTzBGQlEwRTdRVUZEUVN4SFFVRkhPenRCUVVWSU8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRXNhVU5CUVdsRE8wRkJRMnBETzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CT3p0QlFVVkJMRFpEUVVFMlF5eGpRVUZqTzBGQlF6TkVPenRCUVVWQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdPMEZCUlVFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdPMEZCUlVFN1FVRkRRVHRCUVVOQk8wRkJRMEU3TzBGQlJVRTdRVUZEUVR0QlFVTkJPMEZCUTBFN08wRkJSVUU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVN4SFFVRkhPMEZCUTBnc1JVRkJSVHM3TzBGQlIwWTdRVUZEUVR0QlFVTkJPenRCUVVWQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdPMEZCUlVFN08wRkJSVUU3UVVGRFFUdEJRVU5CTzBGQlEwRTdPMEZCUlVFN1FVRkRRU3gxUkVGQmRVUTdRVUZEZGtRN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVRzN1FVRkZRVHM3UVVGRlFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3TzBGQlJVRTdRVUZEUVR0QlFVTkJPenRCUVVWQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVRzN1FVRkZRVHRCUVVOQk8wRkJRMEU3UVVGRFFUczdRVUZGUVR0QlFVTkJPMEZCUTBFN08wRkJSVUU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPenRCUVVWQk96dEJRVVZCTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN096dEJRVWRCT3p0QlFVVkJPMEZCUTBFN1FVRkRRVHRCUVVOQk96dEJRVVZCTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN08wRkJSVUVzYlVKQlFXMUNPMEZCUTI1Q08wRkJRMEU3UVVGRFFUdEJRVU5CT3pzN1FVRkhRVHRCUVVOQk8wRkJRMEU3TzBGQlJVRTdRVUZEUVRzN1FVRkZRVHRCUVVOQk8wRkJRMEU3TzBGQlJVRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3TzBGQlJVRTdRVUZEUVR0QlFVTkJPenRCUVVWQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN096dEJRVWRCT3p0QlFVVkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEVzWVVGQllTdzRSRUZCT0VRN1FVRkRNMFU3UVVGRFFUdEJRVU5CTzBGQlEwRTdPMEZCUlVFN08wRkJSVUU3UVVGRFFUdEJRVU5CTzBGQlEwRTdPMEZCUlVFN1FVRkRRVHRCUVVOQk8wRkJRMEU3TzBGQlJVRTdRVUZEUVR0QlFVTkJPMEZCUTBFN08wRkJSVUU3UVVGRFFUdEJRVU5CTzBGQlEwRTdPMEZCUlVFc1UwRkJVeXhQUVVGUE96dEJRVVZvUWp0QlFVTkJPMEZCUTBFN1FVRkRRVHM3UVVGRlFUdEJRVU5CT3p0QlFVVkJPMEZCUTBFN08wRkJSVUU3UVVGRFFUdEJRVU5CT3p0QlFVVkJPMEZCUTBFc1MwRkJTenRCUVVOTU8wRkJRMEU3TzBGQlJVRTdRVUZEUVR0QlFVTkJMRWxCUVVrN08wRkJSVW83UVVGRFFUdEJRVU5CTzBGQlEwRTdPMEZCUlVFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CT3p0QlFVVkJPMEZCUTBFN08wRkJSVUU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHM3UVVGRlFUdEJRVU5CTzBGQlEwRTdRVUZEUVRzN1FVRkZRVHRCUVVOQk96dEJRVVZCT3p0QlFVVkJPMEZCUTBFN08wRkJSVUU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPenRCUVVWQk8wRkJRMEU3TzBGQlJVRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUczdPMEZCUjBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3TzBGQlJVRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHM3UVVGRlFUdEJRVU5CTzBGQlEwRTdPMEZCUlVFN1FVRkRRVHRCUVVOQk96dEJRVVZCTzBGQlEwRTdPMEZCUlVFN08wRkJSVUU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHM3UVVGRlFUdEJRVU5CT3p0QlFVVkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdPMEZCUlVFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUczdRVUZGUVRzN1FVRkZRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdPMEZCUlVFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRXNSVUZCUlRzN1FVRkZSanRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTEVWQlFVVTdPMEZCUlVZN1FVRkRRVHRCUVVOQkxHRkJRV0U3TzBGQlJXSTdRVUZEUVRzN1FVRkZRVHRCUVVOQk8wRkJRMEU3UVVGRFFUczdRVUZGUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk96dEJRVVZCTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHM3UVVGRlFUdEJRVU5CT3p0QlFVVkJPMEZCUTBFN1FVRkRRVHM3UVVGRlFUdEJRVU5CTzBGQlEwRTdPMEZCUlVFN1FVRkRRVHRCUVVOQk96dEJRVVZCTzBGQlEwRTdRVUZEUVR0QlFVTkJPenRCUVVWQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVRzN1FVRkZRVHRCUVVOQk8wRkJRMEU3UVVGRFFUczdRVUZGUVR0QlFVTkJPMEZCUTBFN08wRkJSVUU3UVVGRFFUdEJRVU5CTEUxQlFVMDdRVUZEVGp0QlFVTkJPMEZCUTBFN08wRkJSVUVzU1VGQlNUczdRVUZGU2p0QlFVTkJPMEZCUTBFN08wRkJSVUU3UVVGRFFUczdRVUZGUVR0QlFVTkJPMEZCUTBFN1FVRkRRU3hGUVVGRk96dEJRVVZHTzBGQlEwRTdRVUZEUVR0QlFVTkJPenRCUVVWQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVRzN1FVRkZRVHRCUVVOQk96dEJRVVZCTzBGQlEwRTdRVUZEUVR0QlFVTkJPenRCUVVWQk8wRkJRMEU3UVVGRFFUdEJRVU5CT3p0QlFVVkJPMEZCUTBFN1FVRkRRVHRCUVVOQk96dEJRVVZCTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN08wRkJSVUU3UVVGRFFUdEJRVU5CTEVWQlFVVTdPMEZCUlVZN1FVRkRRVHRCUVVOQk8wRkJRMEU3TzBGQlJVRTdRVUZEUVR0QlFVTkJPenRCUVVWQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQkxFOUJRVTg3UVVGRFVEdEJRVU5CTzBGQlEwRXNSMEZCUnpzN1FVRkZTRHRCUVVOQk8wRkJRMEU3TzBGQlJVRTdRVUZEUVR0QlFVTkJPMEZCUTBFN08wRkJSVUU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdPMEZCUlVFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN08wRkJSVUU3UVVGRFFUdEJRVU5CT3p0QlFVVkJPMEZCUTBFN1FVRkRRVHM3UVVGRlFUdEJRVU5CTzBGQlEwRTdRVUZEUVN4RlFVRkZPenRCUVVWR08wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVN4dFFrRkJiVUlzWlVGQlpUdEJRVU5zUXp0QlFVTkJMRTlCUVU4N1FVRkRVRHRCUVVOQk8wRkJRMEU3UVVGRFFUczdRVUZGUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEVzUTBGQlF6dEJRVU5FTzBGQlEwRTdRVUZEUVR0QlFVTkJMR2xDUVVGcFFqczdRVUZGYWtJN1FVRkRRVHM3UVVGRlFTeFhRVUZYTEU5QlFVODdRVUZEYkVJN1FVRkRRVHRCUVVOQk96dEJRVVZCTzBGQlEwRTdRVUZEUVRzN1FVRkZRVHRCUVVOQk8wRkJRMEU3UVVGRFFTeEZRVUZGT3p0QlFVVkdPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEVzV1VGQldUdEJRVU5hT3p0QlFVVkJPMEZCUTBFN1FVRkRRVHM3UVVGRlFTeFpRVUZaTEZOQlFWTTdRVUZEY2tJN1FVRkRRVHM3UVVGRlFUdEJRVU5CT3p0QlFVVkJPMEZCUTBFN1FVRkRRVHRCUVVOQkxFZEJRVWM3UVVGRFNEdEJRVU5CTEVWQlFVVTdPenRCUVVkR08wRkJRMEU3UVVGRFFUdEJRVU5CT3p0QlFVVkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFc1JVRkJSVHRCUVVOR08wRkJRMEU3TzBGQlJVRTdRVUZEUVR0QlFVTkJPMEZCUTBFc1JVRkJSVHRCUVVOR08wRkJRMEU3UVVGRFFUczdRVUZGUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQkxFbEJRVWs3UVVGRFNqdEJRVU5CTzBGQlEwRTdPMEZCUlVFN1FVRkRRVHRCUVVOQk96dEJRVVZCTzBGQlEwRTdRVUZEUVN4SlFVRkpPMEZCUTBvN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUczdRVUZGUVRzN1FVRkZRVHRCUVVOQk8wRkJRMEU3UVVGRFFUczdRVUZGUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3TzBGQlJVRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHM3UVVGRlFUdEJRVU5CTzBGQlEwRXNSMEZCUnp0QlFVTklPenRCUVVWQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVN4TFFVRkxPMEZCUTB3N1FVRkRRVHRCUVVOQk8wRkJRMEVzUzBGQlN6dEJRVU5NTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN08wRkJSVUU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk96dEJRVVZCTzBGQlEwRTdRVUZEUVR0QlFVTkJMRVZCUVVVN1FVRkRSanRCUVVOQk8wRkJRMEVzUlVGQlJUdEJRVU5HTzBGQlEwRTdPMEZCUlVFN08wRkJSVUU3UVVGRFFUczdPenM3UVVGTFFUdEJRVU5CTzBGQlEwRTdRVUZEUVRzN1FVRkZRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTEVsQlFVazdRVUZEU2p0QlFVTkJPenRCUVVWQk8wRkJRMEU3UVVGRFFUczdRVUZGUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQkxFZEJRVWM3UVVGRFNEdEJRVU5CT3p0QlFVVkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEVzV1VGQldUczdRVUZGV2p0QlFVTkJPMEZCUTBFN1FVRkRRU3hUUVVGVExFOUJRVTg3UVVGRGFFSTdRVUZEUVR0QlFVTkJPenRCUVVWQk8wRkJRMEU3UVVGRFFUczdRVUZGUVR0QlFVTkJPenRCUVVWQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVN4VFFVRlRMR2RDUVVGblFqdEJRVU42UWpzN1FVRkZRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CT3p0QlFVVkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEVzVjBGQlZ6dEJRVU5ZTzBGQlEwRTdRVUZEUVRzN1FVRkZRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUczdRVUZGUVRzN1FVRkZRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVN4TFFVRkxPMEZCUTB3c1NVRkJTVHRCUVVOS096dEJRVVZCTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk96dEJRVVZCTzBGQlEwRTdRVUZEUVR0QlFVTkJPenRCUVVWQk8wRkJRMEVzVFVGQlRUdEJRVU5PTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHM3UVVGRlFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPenRCUVVWQk8wRkJRMEU3TzBGQlJVRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHM3UVVGRlFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFTeExRVUZMT3p0QlFVVk1PMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CT3p0QlFVVkJPMEZCUTBFN1FVRkRRVHM3UVVGRlFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJMRTlCUVU4N1FVRkRVRHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN08wRkJSVUU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFc1NVRkJTVHRCUVVOS096dEJRVVZCTzBGQlEwRTdRVUZEUVRzN1FVRkZRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVN4TFFVRkxPMEZCUTB3c2EwUkJRV3RFTERCQ1FVRXdRanRCUVVNMVJUczdRVUZGUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHM3UVVGRlFUdEJRVU5CTzBGQlEwRTdRVUZEUVRzN1FVRkZRVHM3UVVGRlFUczdRVUZGUVRzN1FVRkZRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFc1MwRkJTenRCUVVOTU96dEJRVVZCTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdPMEZCUlVFN1FVRkRRVHM3UVVGRlFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3TzBGQlJVRTdRVUZEUVR0QlFVTkJPMEZCUTBFN08wRkJSVUU3UVVGRFFUdEJRVU5CTzBGQlEwRTdPMEZCUlVFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJMRWxCUVVrN1FVRkRTanRCUVVOQk8wRkJRMEU3UVVGRFFUczdRVUZGUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3TzBGQlJVRTdRVUZEUVR0QlFVTkJMRWxCUVVrN1FVRkRTanRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdPMEZCUlVFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CT3p0QlFVVkJMRmRCUVZjc1owSkJRV2RDTzBGQlF6TkNPMEZCUTBFN08wRkJSVUU3TzBGQlJVRTdRVUZEUVR0QlFVTkJPMEZCUTBFN08wRkJSVUU3UVVGRFFUdEJRVU5CTzBGQlEwRTdPMEZCUlVFN1FVRkRRVHRCUVVOQk8wRkJRMEVzUjBGQlJ6dEJRVU5JTzBGQlEwRTdRVUZEUVN3eVFrRkJNa0k3UVVGRE0wSTdRVUZEUVN4eFFrRkJjVUk3UVVGRGNrSTdRVUZEUVN4SlFVRkpPMEZCUTBvN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRU3hKUVVGSk8wRkJRMG83UVVGRFFUczdRVUZGUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTEZsQlFWa3NaMEpCUVdkQ08wRkJRelZDTzBGQlEwRTdPMEZCUlVFc09FTkJRVGhETzBGQlF6bERPMEZCUTBFN1FVRkRRVHRCUVVOQkxFMUJRVTA3UVVGRFRqdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJMRWxCUVVrN1FVRkRTanM3UVVGRlFUczdRVUZGUVN4VFFVRlRMR2RDUVVGblFqdEJRVU42UWp0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdPMEZCUlVFN08wRkJSVUU3UVVGRFFUdEJRVU5CT3p0QlFVVkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUczdRVUZGUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEVzU1VGQlNUdEJRVU5LT3p0QlFVVkJPMEZCUTBFN08wRkJSVUU3TzBGQlJVRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQkxFbEJRVWs3UVVGRFNpeEZRVUZGT3p0QlFVVkdPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEVzU1VGQlNUdEJRVU5LTzBGQlEwRTdPMEZCUlVFN1FVRkRRVHRCUVVOQk96dEJRVVZCTEZWQlFWVXNaMEpCUVdkQ08wRkJRekZDTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFc1JVRkJSVHM3UVVGRlJqczdRVUZGUVR0QlFVTkJPMEZCUTBFN1FVRkRRU3hKUVVGSk8wRkJRMG83UVVGRFFUdEJRVU5CTzBGQlEwRXNSVUZCUlRzN1FVRkZSanRCUVVOQkxHbEZRVUZwUlR0QlFVTnFSVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CT3p0QlFVVkJPMEZCUTBFN1FVRkRRVHM3UVVGRlFTeEhRVUZITzBGQlEwZzdRVUZEUVR0QlFVTkJPenRCUVVWQkxFdEJRVXM3UVVGRFREdEJRVU5CTzBGQlEwRTdRVUZEUVRzN1FVRkZRVHRCUVVOQk8wRkJRMEU3UVVGRFFUczdRVUZGUVR0QlFVTkJPenRCUVVWQk8wRkJRMEU3UVVGRFFUdEJRVU5CT3p0QlFVVkJPMEZCUTBFN1FVRkRRVHRCUVVOQk96dEJRVVZCTzBGQlEwRTdPMEZCUlVFN1FVRkRRVHM3UVVGRlFUdEJRVU5CT3p0QlFVVkJPMEZCUTBFc2NVSkJRWEZDTEdGQlFXRTdRVUZEYkVNc1JVRkJSVHRCUVVOR08wRkJRMEU3UVVGRFFUdEJRVU5CT3p0QlFVVkJPMEZCUTBFc2FVUkJRV2xFT3p0QlFVVnFSRHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CT3p0QlFVVkJPenRCUVVWQk8wRkJRMEU3UVVGRFFUdEJRVU5CTEVWQlFVVTdRVUZEUmp0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3TzBGQlJVRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUczdRVUZGUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk96dEJRVVZCTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFc1MwRkJTenRCUVVOTU8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVRzN1FVRkZRU3huUTBGQlowTXNVMEZCVXp0QlFVTjZRenRCUVVOQk96dEJRVVZCTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN08wRkJSVUU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFc1NVRkJTVHRCUVVOS0xFVkJRVVU3UVVGRFJqdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CT3p0QlFVVkJPMEZCUTBFN08wRkJSVUU3UVVGRFFUczdRVUZGUVR0QlFVTkJPMEZCUTBFN08wRkJSVUU3UVVGRFFTeG5RMEZCWjBNc1UwRkJVenRCUVVONlF6dEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPenRCUVVWQk8wRkJRMEVzYjBKQlFXOUNMR2RDUVVGblFqdEJRVU53UXp0QlFVTkJPMEZCUTBFN1FVRkRRVHM3UVVGRlFUdEJRVU5CTzBGQlEwRXNTVUZCU1R0QlFVTktPMEZCUTBFc1JVRkJSVHM3UVVGRlJqdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQkxFVkJRVVU3TzBGQlJVWTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQkxGZEJRVmNzYVVKQlFXbENPMEZCUXpWQ0xGbEJRVmtzYVVKQlFXbENPMEZCUXpkQ0xHVkJRV1U3UVVGRFppeERRVUZETzBGQlEwUTdRVUZEUVR0QlFVTkJPMEZCUTBFc1JVRkJSVHM3UVVGRlJqdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPenRCUVVWQk96dEJRVVZCTEZOQlFWTXNiVUpCUVcxQ08wRkJRelZDT3p0QlFVVkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3TzBGQlJVRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHM3UVVGRlFUdEJRVU5CTzBGQlEwRTdRVUZEUVRzN1FVRkZRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CT3p0QlFVVkJPMEZCUTBFN1FVRkRRVHM3UVVGRlFUdEJRVU5CTzBGQlEwRTdPMEZCUlVFN1FVRkRRVHRCUVVOQk96dEJRVVZCTzBGQlEwRTdRVUZEUVRzN08wRkJSMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdPMEZCUlVFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTEVkQlFVYzdRVUZEU0RzN08wRkJSMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdPMEZCUlVFN08wRkJSVUU3UVVGRFFUdEJRVU5CT3p0QlFVVkJPMEZCUTBFN1FVRkRRVHM3UVVGRlFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRU3hGUVVGRk96czdRVUZIUmp0QlFVTkJPenRCUVVWQk8wRkJRMEU3UVVGRFFUdEJRVU5CTEVWQlFVVTdPMEZCUlVZN1FVRkRRVHRCUVVOQk8wRkJRMEVzU1VGQlNUdEJRVU5LTzBGQlEwRXNSVUZCUlRzN1FVRkZSanRCUVVOQk8wRkJRMEU3UVVGRFFUczdRVUZGUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHM3UVVGRlFUdEJRVU5CTzBGQlEwRTdRVUZEUVRzN1FVRkZRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdPMEZCUlVFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUczdRVUZGUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHM3UVVGRlFUdEJRVU5CTzBGQlEwRTdPMEZCUlVFN1FVRkRRVHRCUVVOQk96dEJRVVZCT3p0QlFVVkJPMEZCUTBFN1FVRkRRU3hGUVVGRk96dEJRVVZHTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRU3hGUVVGRk96dEJRVVZHTzBGQlEwRTdRVUZEUVRzN1FVRkZRVHRCUVVOQk8wRkJRMEU3TzBGQlJVRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEVzUlVGQlJUczdRVUZGUmp0QlFVTkJPMEZCUTBFN1FVRkRRVHM3UVVGRlFUdEJRVU5CTzBGQlEwRXNTVUZCU1R0QlFVTktPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3TzBGQlJVRTdRVUZEUVRzN1FVRkZRVHRCUVVOQk8wRkJRMEU3TzBGQlJVRTdPMEZCUlVFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRU3hGUVVGRk96czdPenRCUVV0R08wRkJRMEU3TzBGQlJVRTdRVUZEUVR0QlFVTkJPMEZCUTBFc1JVRkJSVHM3UVVGRlJqdEJRVU5CTzBGQlEwRTdRVUZEUVN4SlFVRkpPMEZCUTBvN1FVRkRRU3hGUVVGRk96dEJRVVZHTzBGQlEwRTdRVUZEUVR0QlFVTkJPenRCUVVWQk8wRkJRMEU3UVVGRFFUdEJRVU5CT3p0QlFVVkJPenRCUVVWQk8wRkJRMEU3UVVGRFFUdEJRVU5CT3p0QlFVVkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3TzBGQlJVRTdRVUZEUVRzN1FVRkZRVHRCUVVOQk8wRkJRMEU3TzBGQlJVRTdRVUZEUVN4RlFVRkZPenRCUVVWR08wRkJRMEU3UVVGRFFUczdRVUZGUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk96dEJRVVZCTzBGQlEwRTdRVUZEUVRzN1FVRkZRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVRzN1FVRkZRVHRCUVVOQk8wRkJRMEU3UVVGRFFTeEZRVUZGT3p0QlFVVkdPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEVzUlVGQlJUczdRVUZGUmp0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPenRCUVVWQk96dEJRVVZCTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRU3hIUVVGSE8wRkJRMGc3TzBGQlJVRTdPMEZCUlVFN1FVRkRRVHRCUVVOQk96dEJRVVZCTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk96dEJRVVZCTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFc1JVRkJSVHM3T3pzN1FVRkxSanRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdPenRCUVVkQk8wRkJRMEU3UVVGRFFUczdRVUZGUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdPMEZCUlVFN1FVRkRRVHRCUVVOQk96dEJRVVZCTzBGQlEwRTdRVUZEUVR0QlFVTkJMRXRCUVVzN1FVRkRURHM3UVVGRlFUczdRVUZGUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHM3UVVGRlFUdEJRVU5CTEd0Q1FVRnJRaXgxUWtGQmRVSTdRVUZEZWtNN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUczdRVUZGUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFTeExRVUZMTzBGQlEwdzdPMEZCUlVFN1FVRkRRU3hGUVVGRk96dEJRVVZHTzBGQlEwRTdPMEZCUlVFN1FVRkRRVHRCUVVOQk8wRkJRMEVzUzBGQlN6dEJRVU5NT3p0QlFVVkJPMEZCUTBFN1FVRkRRVHM3UVVGRlFUczdRVUZGUVR0QlFVTkJPMEZCUTBFN08wRkJSVUU3UVVGRFFUczdRVUZGUVR0QlFVTkJMR3RDUVVGclFpeDFRa0ZCZFVJN1FVRkRla003TzBGQlJVRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHM3UVVGRlFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRU3hMUVVGTE8wRkJRMHc3TzBGQlJVRTdRVUZEUVN4RlFVRkZPenRCUVVWR08wRkJRMEU3UVVGRFFUdEJRVU5CT3p0QlFVVkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTEV0QlFVczdRVUZEVERzN1FVRkZRVHRCUVVOQk8wRkJRMEU3TzBGQlJVRTdPMEZCUlVFN1FVRkRRVHM3UVVGRlFUdEJRVU5CT3p0QlFVVkJMR2xDUVVGcFFpeDFRa0ZCZFVJN1FVRkRlRU03TzBGQlJVRTdRVUZEUVR0QlFVTkJPMEZCUTBFc1QwRkJUenRCUVVOUU8wRkJRMEU3UVVGRFFUczdRVUZGUVR0QlFVTkJMRXRCUVVzN1FVRkRURHRCUVVOQk96dEJRVVZCTzBGQlEwRTdRVUZEUVRzN1FVRkZRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFTeEpRVUZKTzBGQlEwb3NSVUZCUlRzN1FVRkZSanRCUVVOQk8wRkJRMEU3TzBGQlJVRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3TzBGQlJVRTdRVUZEUVR0QlFVTkJMRVZCUVVVN096czdPMEZCUzBZN08wRkJSVUU3UVVGRFFUdEJRVU5CTzBGQlEwRTdPMEZCUlVFN1FVRkRRVHRCUVVOQk8wRkJRMEU3TzBGQlJVRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk96dEJRVVZCT3p0QlFVVkJPMEZCUTBFN1FVRkRRVHRCUVVOQk96dEJRVVZCTzBGQlEwRTdRVUZEUVRzN1FVRkZRVHRCUVVOQk96dEJRVVZCT3p0QlFVVkJPMEZCUTBFN08wRkJSVUU3UVVGRFFUdEJRVU5CT3p0QlFVVkJPMEZCUTBFN1FVRkRRU3hMUVVGTE8wRkJRMHc3UVVGRFFUczdRVUZGUVN4clEwRkJhME03UVVGRGJFTTdRVUZEUVRzN1FVRkZRU3hMUVVGTE8wRkJRMHc3TzBGQlJVRXNTMEZCU3p0QlFVTk1PMEZCUTBFN1FVRkRRU3hOUVVGTk8wRkJRMDQ3TzBGQlJVRTdPMEZCUlVFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFTeEpRVUZKTzBGQlEwbzdRVUZEUVN4RlFVRkZPenRCUVVWR08wRkJRMEU3UVVGRFFUdEJRVU5CT3p0QlFVVkJPMEZCUTBFN1FVRkRRVHM3UVVGRlFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRU3hIUVVGSE8wRkJRMGc3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHM3UVVGRlFUdEJRVU5CT3p0QlFVVkJMRTFCUVUwN1FVRkRUanRCUVVOQk96dEJRVVZCTzBGQlEwRXNXVUZCV1N4VFFVRlRPMEZCUTNKQ096dEJRVVZCTzBGQlEwRTdRVUZEUVRzN1FVRkZRVHRCUVVOQk8wRkJRMEU3UVVGRFFUczdRVUZGUVR0QlFVTkJPenRCUVVWQk8wRkJRMEU3UVVGRFFUdEJRVU5CT3p0QlFVVkJPMEZCUTBFN1FVRkRRVHRCUVVOQk96dEJRVVZCTzBGQlEwRXNTVUZCU1RzN1FVRkZTanRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CT3p0QlFVVkJPMEZCUTBFN08wRkJSVUU3TzBGQlJVRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHM3UVVGRlFUdEJRVU5CT3p0QlFVVkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVN4RlFVRkZPenRCUVVWR08wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVN4RlFVRkZPenM3T3p0QlFVdEdPenM3UVVGSFFUczdPMEZCUjBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3TzBGQlJVRTdPMEZCUlVFN08wRkJSVUU3UVVGRFFUdEJRVU5CTzBGQlEwRTdPMEZCUlVFN08wRkJSVUU3UVVGRFFUdEJRVU5CTzBGQlEwRTdPMEZCUlVFc2RVTkJRWFZETzBGQlEzWkRPMEZCUTBFN1FVRkRRVHM3UVVGRlFUczdRVUZGUVN3d1FrRkJNRUk3UVVGRE1VSTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHM3UVVGRlFUdEJRVU5CTzBGQlEwRTdRVUZEUVRzN1FVRkZRU3dyUTBGQkswTTdRVUZETDBNN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUczdRVUZGUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk96dEJRVVZCTzBGQlEwRTdRVUZEUVR0QlFVTkJPenRCUVVWQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdPMEZCUlVFN1FVRkRRU3cwUTBGQk5FTTdRVUZETlVNN08wRkJSVUU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVN4WFFVRlhMRXRCUVVzN1FVRkRhRUk3UVVGRFFUdEJRVU5CT3p0QlFVVkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3TzBGQlJVRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3TzBGQlJVRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk96dEJRVVZCTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CT3p0QlFVVkJPMEZCUTBFN08wRkJSVUU3UVVGRFFUdEJRVU5CT3p0QlFVVkJPMEZCUTBFN1FVRkRRVHM3UVVGRlFUdEJRVU5CT3p0QlFVVkJPMEZCUTBFN1FVRkRRVHM3UVVGRlFUdEJRVU5CT3p0QlFVVkJPMEZCUTBFN1FVRkRRVHM3UVVGRlFUczdRVUZGUVR0QlFVTkJPMEZCUTBFN08wRkJSVUU3TzBGQlJVRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk96dEJRVVZCTzBGQlEwRXNSVUZCUlRzN1FVRkZSanRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk96dEJRVVZCTzBGQlEwRTdPMEZCUlVFc1JVRkJSVHM3UVVGRlJqczdRVUZGUVR0QlFVTkJPMEZCUTBFN1FVRkRRU3hKUVVGSk8wRkJRMG9zUlVGQlJUdEJRVU5HTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQkxFVkJRVVU3T3p0QlFVZEdPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJMR2RDUVVGblFpeHZRMEZCYjBNN08wRkJSWEJFTzBGQlEwRTdRVUZEUVR0QlFVTkJPenRCUVVWQk8wRkJRMEU3TzBGQlJVRTdRVUZEUVR0QlFVTkJPMEZCUTBFN08wRkJSVUU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVN4SlFVRkpPMEZCUTBvN1FVRkRRVHRCUVVOQk96dEJRVVZCTzBGQlEwRTdRVUZEUVRzN1FVRkZRU3hOUVVGTk8wRkJRMDQ3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVN4SFFVRkhPMEZCUTBnN1FVRkRRVHM3UVVGRlFTeGpRVUZqT3p0QlFVVmtPenM3TzBGQlNVRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk96dEJRVVZCTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFc1IwRkJSenM3UVVGRlNEdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRU3hOUVVGTk8wRkJRMDQ3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVRzN08wRkJSMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVRzN1FVRkZRVHRCUVVOQk96dEJRVVZCT3p0QlFVVkJPMEZCUTBFN1FVRkRRVHM3UVVGRlFUdEJRVU5CT3p0QlFVVkJMRXRCUVVzN08wRkJSVXc3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQkxFbEJRVWs3TzBGQlJVb3NSMEZCUnpzN1FVRkZTRHRCUVVOQk8wRkJRMEU3UVVGRFFUczdRVUZGUVN4SFFVRkhPenRCUVVWSU8wRkJRMEU3UVVGRFFUdEJRVU5CT3p0QlFVVkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUczdRVUZGUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHM3UVVGRlFUdEJRVU5CTzBGQlEwRTdPMEZCUlVFN1FVRkRRVHRCUVVOQk96dEJRVVZCTzBGQlEwRTdPMEZCUlVFN1FVRkRRVHRCUVVOQk8wRkJRMEVzU1VGQlNUczdRVUZGU2l4SFFVRkhPenRCUVVWSU8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVRzN1FVRkZRVHRCUVVOQk8wRkJRMEU3TzBGQlJVRTdRVUZEUVR0QlFVTkJPMEZCUTBFc1JVRkJSVHRCUVVOR08wRkJRMEU3TzBGQlJVRTdRVUZEUVR0QlFVTkJPMEZCUTBFc1NVRkJTVHRCUVVOS096dEJRVVZCTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFc1NVRkJTVHRCUVVOS096dEJRVVZCTzBGQlEwRTdRVUZEUVRzN1FVRkZRVHRCUVVOQk8wRkJRMEVzWTBGQll6dEJRVU5rTEUxQlFVMDdRVUZEVGpzN1FVRkZRU3haUVVGWk8wRkJRMW9zU1VGQlNUdEJRVU5LTzBGQlEwRXNSVUZCUlRzN08wRkJSMFk3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVRzN1FVRkZRVHRCUVVOQk8wRkJRMEU3UVVGRFFUczdRVUZGUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVN4blFrRkJaMEk3TzBGQlJXaENPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFTeG5Ra0ZCWjBJN08wRkJSV2hDTEhGRVFVRnhSRHRCUVVOeVJEczdRVUZGUVR0QlFVTkJPenRCUVVWQk96dEJRVVZCTzBGQlEwRTdPMEZCUlVFN1FVRkRRVHM3UVVGRlFUdEJRVU5CTzBGQlEwRTdRVUZEUVRzN1FVRkZRVHRCUVVOQk8wRkJRMEU3TzBGQlJVRTdPMEZCUlVFN1FVRkRRVHM3UVVGRlFUdEJRVU5CTzBGQlEwRTdRVUZEUVRzN1FVRkZRVHRCUVVOQkxFMUJRVTA3UVVGRFRqdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN08wRkJSVUU3UVVGRFFUczdRVUZGUVN4dFFrRkJiVUk3UVVGRGJrSTdPMEZCUlVFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdPMEZCUlVFN1FVRkRRVHRCUVVOQk8wRkJRMEVzUzBGQlN6dEJRVU5NTzBGQlEwRTdRVUZEUVN4SlFVRkpPMEZCUTBvN1FVRkRRVHM3UVVGRlFUdEJRVU5CT3p0QlFVVkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUczdRVUZGUVR0QlFVTkJPMEZCUTBFc2VVUkJRWGxFTzBGQlEzcEVPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3TzBGQlJVRTdRVUZEUVRzN1FVRkZRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CT3p0QlFVVkJPMEZCUTBFN1FVRkRRVHM3UVVGRlFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHM3UVVGRlFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3TzBGQlJVRTdRVUZEUVR0QlFVTkJPMEZCUTBFc1IwRkJSenM3UVVGRlNEdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUczdRVUZGUVR0QlFVTkJPMEZCUTBFN08wRkJSVUU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3TzBGQlJVRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQkxHbENRVUZwUWpzN1FVRkZha0k3UVVGRFFUczdRVUZGUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3TzBGQlJVRTdPMEZCUlVFN1FVRkRRVHM3UVVGRlFUdEJRVU5CTzBGQlEwRTdPMEZCUlVFN1FVRkRRVHRCUVVOQk8wRkJRMEU3TzBGQlJVRTdRVUZEUVRzN1FVRkZRVHM3UVVGRlFUdEJRVU5CT3p0QlFVVkJPenRCUVVWQk8wRkJRMEVzUzBGQlN6czdRVUZGVER0QlFVTkJPenRCUVVWQk8wRkJRMEU3UVVGRFFUczdRVUZGUVR0QlFVTkJPMEZCUTBFN08wRkJSVUU3UVVGRFFUdEJRVU5CTzBGQlEwRTdPMEZCUlVFN1FVRkRRVHRCUVVOQk96dEJRVVZCTzBGQlEwRXNWVUZCVlR0QlFVTldPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdPMEZCUlVFN1FVRkRRVHM3UVVGRlFUdEJRVU5CTzBGQlEwRTdRVUZEUVN4UFFVRlBPMEZCUTFBN1FVRkRRVHRCUVVOQkxGRkJRVkU3UVVGRFVqdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUczdRVUZGUVN4VlFVRlZPMEZCUTFZN08wRkJSVUU3TzBGQlJVRTdRVUZEUVRzN1FVRkZRVHRCUVVOQkxHbENRVUZwUWp0QlFVTnFRaXhUUVVGVE96dEJRVVZVTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEVzYlVSQlFXMUVPenRCUVVWdVJEdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFTeGhRVUZoTzBGQlEySTdPMEZCUlVFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRXNSMEZCUnpzN1FVRkZTRHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTEVkQlFVYzdPMEZCUlVnN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFTeEhRVUZIT3p0QlFVVklPMEZCUTBFN1FVRkRRVHM3UVVGRlFUdEJRVU5CT3p0QlFVVkJPMEZCUTBFN08wRkJSVUU3UVVGRFFUczdRVUZGUVR0QlFVTkJPMEZCUTBFc1IwRkJSenM3UVVGRlNEdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEVzUlVGQlJUczdRVUZGUmp0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk96dEJRVVZCTzBGQlEwRTdPMEZCUlVFN1FVRkRRVHRCUVVOQkxFVkJRVVU3TzBGQlJVWTdRVUZEUVRzN1FVRkZRVHRCUVVOQk96dEJRVVZCTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN08wRkJSVUU3UVVGRFFUczdRVUZGUVRzN1FVRkZRVHRCUVVOQk96dEJRVVZCTzBGQlEwRTdRVUZEUVRzN1FVRkZRVHRCUVVOQk96dEJRVVZCTzBGQlEwRTdPMEZCUlVFN1FVRkRRVHM3UVVGRlFUdEJRVU5CT3p0QlFVVkJPMEZCUTBFN08wRkJSVUU3UVVGRFFUczdRVUZGUVR0QlFVTkJMREpDUVVFeVFqczdRVUZGTTBJN1FVRkRRVHM3UVVGRlFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPenRCUVVWQk8wRkJRMEU3UVVGRFFUczdRVUZGUVR0QlFVTkJMR3REUVVGclF6czdRVUZGYkVNN1FVRkRRU3h6UWtGQmMwSTdRVUZEZEVJc01rSkJRVEpDT3p0QlFVVXpRanRCUVVOQk96dEJRVVZCTzBGQlEwRTdRVUZEUVRzN1FVRkZRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVN4TFFVRkxPenRCUVVWTU8wRkJRMEU3UVVGRFFUdEJRVU5CTEV0QlFVczdPMEZCUlV3N1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJMRXRCUVVzN08wRkJSVXc3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFc1MwRkJTenM3UVVGRlREdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPenRCUVVWQk8wRkJRMEU3UVVGRFFTeFJRVUZST3p0QlFVVlNPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRXNTMEZCU3pzN1FVRkZURHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHM3UVVGRlFUdEJRVU5CT3p0QlFVVkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3TzBGQlJVRTdRVUZEUVRzN1FVRkZRVHRCUVVOQk96dEJRVVZCTzBGQlEwRTdRVUZEUVRzN1FVRkZRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CT3p0QlFVVkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFTeExRVUZMT3p0QlFVVk1PMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3TzBGQlJVRTdRVUZEUVR0QlFVTkJPMEZCUTBFN08wRkJSVUU3UVVGRFFUczdRVUZGUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHM3UVVGRlFUdEJRVU5CTzBGQlEwRTdPMEZCUlVFN1FVRkRRVHRCUVVOQk8wRkJRMEU3TzBGQlJVRTdRVUZEUVRzN1FVRkZRVHRCUVVOQk96dEJRVVZCTzBGQlEwRTdRVUZEUVR0QlFVTkJPenRCUVVWQk8wRkJRMEU3TzBGQlJVRTdRVUZEUVRzN1FVRkZRVHRCUVVOQk8wRkJRMEU3TzBGQlJVRTdRVUZEUVR0QlFVTkJPenRCUVVWQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVRzN1FVRkZRVHRCUVVOQk96dEJRVVZCTzBGQlEwRXNTVUZCU1R0QlFVTktPMEZCUTBFN1FVRkRRVHM3UVVGRlFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3TzBGQlJVRTdRVUZEUVR0QlFVTkJPMEZCUTBFN08wRkJSVUU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJMSFZFUVVGMVJEdEJRVU4yUkR0QlFVTkJPenRCUVVWQk8wRkJRMEU3UVVGRFFUdEJRVU5CT3p0QlFVVkJPMEZCUTBFN1FVRkRRVHM3UVVGRlFUdEJRVU5CTzBGQlEwRTdPMEZCUlVFN1FVRkRRVHM3UVVGRlFUdEJRVU5CTzBGQlEwRTdRVUZEUVRzN1FVRkZRVHRCUVVOQk96dEJRVVZCTzBGQlEwRTdRVUZEUVR0QlFVTkJMRWxCUVVrN1FVRkRTanM3UVVGRlFUdEJRVU5CTzBGQlEwRTdRVUZEUVRzN1FVRkZRVHRCUVVOQk8wRkJRMEU3UVVGRFFUczdRVUZGUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQkxFdEJRVXM3UVVGRFREczdRVUZGUVR0QlFVTkJPMEZCUTBFN1FVRkRRU3hMUVVGTE96dEJRVVZNTzBGQlEwRTdRVUZEUVR0QlFVTkJPenRCUVVWQk8wRkJRMEU3UVVGRFFUdEJRVU5CT3p0QlFVVkJPMEZCUTBFN1FVRkRRVHRCUVVOQk96dEJRVVZCTzBGQlEwRTdRVUZEUVR0QlFVTkJPenRCUVVWQk96dEJRVVZCTzBGQlEwRTdRVUZEUVR0QlFVTkJPenRCUVVWQk8wRkJRMEU3UVVGRFFUczdRVUZGUVR0QlFVTkJPenRCUVVWQk8wRkJRMEU3TzBGQlJVRTdRVUZEUVRzN1FVRkZRVHRCUVVOQk8wRkJRMEU3UVVGRFFUczdRVUZGUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3TzBGQlJVRTdRVUZEUVRzN1FVRkZRVHRCUVVOQk96dEJRVVZCTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdPMEZCUlVFN1FVRkRRVHRCUVVOQk96dEJRVVZCTzBGQlEwRXNUVUZCVFR0QlFVTk9PenRCUVVWQk8wRkJRMEVzVFVGQlRUdEJRVU5PTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRU3hMUVVGTE96dEJRVVZNTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUczdRVUZGUVR0QlFVTkJPMEZCUTBFN08wRkJSVUU3UVVGRFFUdEJRVU5CTzBGQlEwRXNTMEZCU3p0QlFVTk1PMEZCUTBFN08wRkJSVUU3UVVGRFFUdEJRVU5CT3p0QlFVVkJPMEZCUTBFN1FVRkRRVHRCUVVOQk96dEJRVVZCTzBGQlEwRTdPMEZCUlVFN1FVRkRRVHM3UVVGRlFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN08wRkJSVUU3UVVGRFFTeEZRVUZGT3p0QlFVVkdPMEZCUTBFN1FVRkRRU3hGUVVGRk96dEJRVVZHTzBGQlEwRTdRVUZEUVR0QlFVTkJMRVZCUVVVN08wRkJSVVk3UVVGRFFUczdRVUZGUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3TzBGQlJVRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFTeEhRVUZITzBGQlEwZzdRVUZEUVN4RlFVRkZPenRCUVVWR08wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFc1JVRkJSVHM3TzBGQlIwWTdRVUZEUVR0QlFVTkJPenRCUVVWQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVRzN1FVRkZRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRXNSMEZCUnp0QlFVTklPMEZCUTBFN1FVRkRRVHRCUVVOQkxFZEJRVWM3UVVGRFNEczdPMEZCUjBFN1FVRkRRVHRCUVVOQk96dEJRVVZCTzBGQlEwRTdRVUZEUVR0QlFVTkJPenRCUVVWQk8wRkJRMEU3TzBGQlJVRTdRVUZEUVR0QlFVTkJPenRCUVVWQk8wRkJRMEU3TzBGQlJVRTdRVUZEUVR0QlFVTkJPenRCUVVWQk8wRkJRMEVzUzBGQlN6dEJRVU5NT3p0QlFVVkJPMEZCUTBFc1JVRkJSVHM3UVVGRlJqdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJMRXRCUVVzN1FVRkRURHM3UVVGRlFUdEJRVU5CTzBGQlEwRTdPMEZCUlVFN1FVRkRRVHM3UVVGRlFTeExRVUZMTzBGQlEwdzdRVUZEUVR0QlFVTkJMRWxCUVVrN1FVRkRTaXhGUVVGRk96dEJRVVZHTzBGQlEwRTdPMEZCUlVFN1FVRkRRVHRCUVVOQkxFbEJRVWs3UVVGRFNpeEZRVUZGT3p0QlFVVkdPMEZCUTBFN1FVRkRRVHRCUVVOQkxFbEJRVWs3UVVGRFNqdEJRVU5CTzBGQlEwRXNSVUZCUlRzN08wRkJSMFk3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPenM3T3p0QlFVdEJPMEZCUTBFN1FVRkRRVHRCUVVOQkxFZEJRVWM3UVVGRFNEczdRVUZGUVRzN1FVRkZRVHRCUVVOQk96dEJRVVZCTzBGQlEwRTdRVUZEUVR0QlFVTkJMRVZCUVVVN1FVRkRSanM3UVVGRlFUdEJRVU5CT3p0QlFVVkJPMEZCUTBFN08wRkJSVUU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPenRCUVVWQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPenRCUVVWQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVRzN1FVRkZRVHRCUVVOQk8wRkJRMEU3UVVGRFFUczdRVUZGUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CT3p0QlFVVkJPMEZCUTBFN1FVRkRRVHRCUVVOQk96dEJRVVZCTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk96dEJRVVZCTzBGQlEwRTdRVUZEUVN4VFFVRlRPenRCUVVWVU8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVN4VlFVRlZPMEZCUTFZN08wRkJSVUVzYjBSQlFXOUVPMEZCUTNCRU8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRXNVMEZCVXp0QlFVTlVPMEZCUTBFN1FVRkRRVHM3UVVGRlFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFc1dVRkJXU3gxUWtGQmRVSTdRVUZEYmtNc1dVRkJXU3gzUWtGQmQwSTdRVUZEY0VNN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CT3p0QlFVVkJPMEZCUTBFN1FVRkRRVHM3UVVGRlFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFc1RVRkJUVHRCUVVOT096dEJRVVZCTzBGQlEwRTdPMEZCUlVFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJMRk5CUVZNN1FVRkRWRHRCUVVOQk8wRkJRMEU3TzBGQlJVRTdRVUZEUVRzN1FVRkZRVHM3UVVGRlFUdEJRVU5CTzBGQlEwRXNUVUZCVFRzN1FVRkZUanRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRXNTVUZCU1RzN1FVRkZTanRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJMRVZCUVVVN096czdPMEZCUzBZN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTEVWQlFVVTdPMEZCUlVZN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTEVWQlFVVTdRVUZEUmp0QlFVTkJPMEZCUTBFc1JVRkJSVHRCUVVOR08wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJMRVZCUVVVN08wRkJSVVk3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQkxFVkJRVVU3TzBGQlJVWTdRVUZEUVRzN1FVRkZRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVN4blEwRkJaME03UVVGRGFFTXNZMEZCWXl4MVEwRkJkVU03UVVGRGNrUTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEVzVDBGQlR6czdRVUZGVUR0QlFVTkJPMEZCUTBFc1NVRkJTVHRCUVVOS08wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFc1JVRkJSVHM3T3pzN1FVRkxSanRCUVVOQk96dEJRVVZCTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFTeEZRVUZGT3p0QlFVVkdPMEZCUTBFN08wRkJSVUU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHM3UVVGRlFUdEJRVU5CT3p0QlFVVkJPMEZCUTBFN1FVRkRRVHRCUVVOQk96dEJRVVZCTzBGQlEwRTdRVUZEUVR0QlFVTkJMRWxCUVVrN1FVRkRTanRCUVVOQk96dEJRVVZCTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk96dEJRVVZCTzBGQlEwRTdPMEZCUlVFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUczdRVUZGUVR0QlFVTkJPenRCUVVWQk8wRkJRMEU3UVVGRFFUczdRVUZGUVR0QlFVTkJMRXRCUVVzN1FVRkRURHRCUVVOQk96dEJRVVZCTzBGQlEwRTdPMEZCUlVFN1FVRkRRVHM3UVVGRlFUdEJRVU5CTzBGQlEwRTdPMEZCUlVFN1FVRkRRVHRCUVVOQk8wRkJRMEU3TzBGQlJVRTdRVUZEUVN4SlFVRkpPenRCUVVWS08wRkJRMEU3UVVGRFFUdEJRVU5CTEVWQlFVVTdPenM3TzBGQlMwWTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRXNSVUZCUlRzN08wRkJSMFk3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CT3p0QlFVVkJPenRCUVVWQk96dEJRVVZCTzBGQlEwRTdRVUZEUVR0QlFVTkJPenRCUVVWQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJMRWxCUVVrN1FVRkRTanRCUVVOQk8wRkJRMEU3TzBGQlJVRTdRVUZEUVRzN1FVRkZRVHRCUVVOQk8wRkJRMEU3UVVGRFFUczdRVUZGUVRzN1FVRkZRVHRCUVVOQk8wRkJRMEU3TzBGQlJVRTdRVUZEUVRzN08wRkJSMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN08wRkJSVUU3UVVGRFFUdEJRVU5CTzBGQlEwRTdPMEZCUlVFN1FVRkRRVHM3UVVGRlFUdEJRVU5CTzBGQlEwRTdPMEZCUlVFN1FVRkRRU3hIUVVGSE8wRkJRMGc3UVVGRFFUczdRVUZGUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHM3UVVGRlFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRU3hKUVVGSk96dEJRVVZLTzBGQlEwRTdPMEZCUlVFN08wRkJSVUU3UVVGRFFUdEJRVU5CT3p0QlFVVkJPMEZCUTBFN08wRkJSVUU3UVVGRFFUdEJRVU5CTzBGQlEwRXNTVUZCU1R0QlFVTktPMEZCUTBFN1FVRkRRU3hMUVVGTE8wRkJRMHdzU1VGQlNUdEJRVU5LT3p0QlFVVkJPMEZCUTBFN096czdPMEZCUzBFN1FVRkRRVHRCUVVOQk8wRkJRMEVzUjBGQlJ6dEJRVU5JT3pzN096dEJRVXRCTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHM3UVVGRlFUdEJRVU5CTzBGQlEwRTdRVUZEUVRzN1FVRkZRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CT3p0QlFVVkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUczdRVUZGUVN4SlFVRkpPMEZCUTBvN1FVRkRRVHRCUVVOQk96dEJRVVZCT3p0QlFVVkJPMEZCUTBFc2NVUkJRWEZFTzBGQlEzSkVPenRCUVVWQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVRzN1FVRkZRVHRCUVVOQk96dEJRVVZCTEVsQlFVazdRVUZEU2p0QlFVTkJPMEZCUTBFN1FVRkRRVHM3UVVGRlFUczdRVUZGUVR0QlFVTkJPenRCUVVWQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJMRTFCUVUwN1FVRkRUanM3UVVGRlFUdEJRVU5CT3p0QlFVVkJPMEZCUTBFN1FVRkRRVHM3UVVGRlFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFc1dVRkJXVHRCUVVOYU96dEJRVVZCTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEVzUlVGQlJUczdRVUZGUmp0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3TzBGQlJVRTdRVUZEUVR0QlFVTkJMRzlDUVVGdlFqczdRVUZGY0VJN1FVRkRRVHM3UVVGRlFUdEJRVU5CT3p0QlFVVkJMRWxCUVVrN1FVRkRTanM3UVVGRlFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHM3UVVGRlFUdEJRVU5CTzBGQlEwRTdPMEZCUlVFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CT3p0QlFVVkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFTeEZRVUZGT3p0QlFVVkdPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk96dEJRVVZCTzBGQlEwRTdRVUZEUVRzN1FVRkZRVHRCUVVOQkxFbEJRVWs3UVVGRFNqdEJRVU5CTEVWQlFVVTdPMEZCUlVZN1FVRkRRU3hsUVVGbExIRkVRVUZ4UkR0QlFVTndSVHM3UVVGRlFUdEJRVU5CT3p0QlFVVkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEVzUzBGQlN6dEJRVU5NTzBGQlEwRTdPMEZCUlVFN1FVRkRRVHRCUVVOQk96dEJRVVZCTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN08wRkJSVUVzUzBGQlN6dEJRVU5NTzBGQlEwRTdRVUZEUVN4SFFVRkhPMEZCUTBnN1FVRkRRU3hGUVVGRk96dEJRVVZHTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdPMEZCUlVFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVN4RlFVRkZPenM3UVVGSFJqdEJRVU5CTEdWQlFXVXNhME5CUVd0RE8wRkJRMnBFTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFc1JVRkJSVHM3UVVGRlJqdEJRVU5CTzBGQlEwRTdRVUZEUVRzN1FVRkZRVHRCUVVOQk96dEJRVVZCT3p0QlFVVkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3TzBGQlJVRTdRVUZEUVR0QlFVTkJPenRCUVVWQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN08wRkJSVUU3TzBGQlJVRTdRVUZEUVRzN1FVRkZRVHRCUVVOQk8wRkJRMEVzU1VGQlNUdEJRVU5LTzBGQlEwRXNSMEZCUnp0QlFVTklMRVZCUVVVN096dEJRVWRHTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVN4RlFVRkZPenM3T3p0QlFVdEdPenRCUVVWQk8wRkJRMEU3UVVGRFFTeEZRVUZGTzBGQlEwWTdRVUZEUVR0QlFVTkJMRVZCUVVVN08wRkJSVVk3UVVGRFFUdEJRVU5CTEVWQlFVVTdRVUZEUmpzN1FVRkZRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTEVWQlFVVTdPMEZCUlVZN1FVRkRRVHRCUVVOQk8wRkJRMEVzUlVGQlJUczdRVUZGUmp0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk96dEJRVVZCTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3T3pzN08wRkJTMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVRzN1FVRkZRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdPMEZCUlVFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUczdRVUZGUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk96dEJRVVZCTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN08wRkJSVUU3UVVGRFFUczdRVUZGUVR0QlFVTkJPenRCUVVWQk8wRkJRMEU3UVVGRFFUdEJRVU5CTEVkQlFVYzdRVUZEU0R0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVRzN1FVRkZRVHM3UVVGRlFUczdRVUZGUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk96dEJRVVZCTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN08wRkJSVUU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVRzN096dEJRVWxCTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk96dEJRVVZCTzBGQlEwRTdRVUZEUVR0QlFVTkJPenRCUVVWQkxFdEJRVXNzU1VGQk1FTTdRVUZETDBNc1EwRkJReXhwUTBGQmEwSXNSVUZCUlN4dFEwRkJSVHRCUVVOMlFqdEJRVU5CTEVWQlFVVTdRVUZCUVN4clIwRkJSVHRCUVVOS096czdPenRCUVV0Qk96dEJRVVZCTzBGQlEwRTdPMEZCUlVFN1FVRkRRVHM3UVVGRlFUdEJRVU5CTzBGQlEwRTdRVUZEUVRzN1FVRkZRVHRCUVVOQk8wRkJRMEU3TzBGQlJVRTdRVUZEUVRzN1FVRkZRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdPenM3TzBGQlMwRTdRVUZEUVN4RlFVRkZPenM3T3pzN096czdPenM3TzBGRGFuWldSanM3T3pzN096czdPenM3UVVOQlFTeHhRa0ZCVFRzN1FVRkZUaXh4UWtGQlRTeFZRVUZWTEcxQ1FVRlBMRU5CUVVNc2IwUkJRVkU3UVVGRGFFTXNjVUpCUVUwc2IwSkJRVzlDTEcxQ1FVRlBMRU5CUVVNc2QwWkJRWE5ETzBGQlEzaEZMSEZDUVVGTkxITkNRVUZ6UWl4dFFrRkJUeXhEUVVGRExEUkdRVUYzUXp0QlFVTTFSU3h4UWtGQlRTeHhRa0ZCY1VJc2JVSkJRVThzUTBGQlF5d3dSa0ZCZFVNN1FVRkRNVVVzY1VKQlFVMHNkVUpCUVhWQ0xHMUNRVUZQTEVOQlFVTXNPRVpCUVhsRE8wRkJRemxGTEhGQ1FVRk5MR2xDUVVGcFFpeHRRa0ZCVHl4RFFVRkRMR3RHUVVGdFF6dEJRVU5zUlN4eFFrRkJUU3h4UWtGQmNVSXNiVUpCUVU4c1EwRkJReXd3UmtGQmRVTTdRVUZETVVVc2NVSkJRVTBzYlVKQlFXMUNMRzFDUVVGUExFTkJRVU1zYzBaQlFYRkRPenM3T3pzN096czdPenRCUTFSMFJUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQkxFbEJRVWs3UVVGRFNqdEJRVU5CTzBGQlEwRXNTVUZCU1R0QlFVTktPMEZCUTBFN1FVRkRRU3hGUVVGRk8wRkJRMFlzUTBGQlF6czdPenM3T3pzN096dEJRMlJFTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEVzU1VGQlNUdEJRVU5LTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFc1NVRkJTVHRCUVVOS08wRkJRMEU3UVVGRFFTeEZRVUZGTzBGQlEwWXNRMEZCUXpzN096czdPenM3T3pzN1FVTm9Ra1E3UVVGRFFUdEJRVU5CTzBGQlEwRXNXVUZCV1N4UlFVRlJPMEZCUTNCQ08wRkJRMEU3TzBGQlJVRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3TzBGQlJVRTdRVUZEUVR0QlFVTkJMRFJDUVVFMFFpeDVRa0ZCZVVJN1FVRkRja1FzTUVOQlFUQkRPenRCUVVVeFF6dEJRVU5CTzBGQlEwRTdPMEZCUlVFN1FVRkRRVHM3UVVGRlFUdEJRVU5CT3p0QlFVVkJPMEZCUTBFN08wRkJSVUU3UVVGRFFUdEJRVU5CTzBGQlEwRTdPMEZCUlVFN1FVRkRRU3hEUVVGRE96dEJRVVZFTEhGQ1FVRk5MR0ZCUVdFc2NVSkJRVTA3UVVGRGVrSXNjVUpCUVUwN1FVRkRUaXhKUVVGSkxIRkNRVUZOTzBGQlExWXNTMEZCU3p0QlFVTk1PenM3T3pzN096czdPMEZETjBOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFc1NVRkJTVHRCUVVOS08wRkJRMEU3UVVGRFFTeEpRVUZKTzBGQlEwbzdRVUZEUVR0QlFVTkJMRVZCUVVVN1FVRkRSaXhEUVVGRE96czdPenM3T3pzN08wRkRaRVE3TzBGQlJVRTdPMEZCUlVFN1FVRkRRVHM3UVVGRlFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CT3p0QlFVVkJPMEZCUTBFN1FVRkRRVHM3UVVGRlFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRU3hKUVVGSk8wRkJRMG83TzBGQlJVRTdRVUZEUVRzN1FVRkZRVHRCUVVOQk96dEJRVVZCTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQkxFMUJRVTA3UVVGRFRqczdRVUZGUVRzN1FVRkZRVHRCUVVOQk96dEJRVVZCTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFc1RVRkJUVHRCUVVOT0xFdEJRVXM3UVVGRFRDeEpRVUZKTzBGQlEwbzdPMEZCUlVFN08wRkJSVUU3TzBGQlJVRTdRVUZEUVR0QlFVTkJPenRCUVVWQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVN4TFFVRkxPenRCUVVWTU8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQkxFMUJRVTA3UVVGRFRqdEJRVU5CT3p0QlFVVkJPMEZCUTBFc1NVRkJTVHRCUVVOS096dEJRVVZCTzBGQlEwRTdRVUZEUVR0QlFVTkJPenRCUVVWQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVN4TFFVRkxPenRCUVVWTU8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQkxFMUJRVTA3UVVGRFRqdEJRVU5CT3p0QlFVVkJPenRCUVVWQk8wRkJRMEU3TzBGQlJVRTdRVUZEUVR0QlFVTkJPMEZCUTBFc1RVRkJUVHM3UVVGRlRqdEJRVU5CTEV0QlFVczdRVUZEVEN4SlFVRkpPMEZCUTBvN08wRkJSVUU3UVVGRFFUdEJRVU5CT3p0QlFVVkJPMEZCUTBFN08wRkJSVUU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVN4TlFVRk5PMEZCUTA0N1FVRkRRU3hKUVVGSk8wRkJRMG83UVVGRFFUczdRVUZGUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQkxFVkJRVVU3UVVGRFJpeERRVUZET3pzN096czdPenM3T3pzN1FVTXpTa1E3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN08wRkJSVUU3UVVGRFFUczdRVUZGUVR0QlFVTkJPMEZCUTBFN1FVRkRRU3hIUVVGSE96dEJRVVZJT3p0QlFVVkJPMEZCUTBFN1FVRkRRVHM3UVVGRlFUdEJRVU5CT3p0QlFVVkJPMEZCUTBFN1FVRkRRVHRCUVVOQkxFMUJRVTA3UVVGRFRqczdRVUZGUVR0QlFVTkJMSGREUVVGM1F5dzRRa0ZCT0VJN1FVRkRkRVU3UVVGRFFUczdRVUZGUVR0QlFVTkJPMEZCUTBFc2MwTkJRWE5ETEZsQlFWazdRVUZEYkVRN1FVRkRRU3h4UlVGQmNVVXNiVUpCUVcxQ096dEJRVVY0Ump0QlFVTkJPMEZCUTBFc1QwRkJUenRCUVVOUU8wRkJRMEU3TzBGQlJVRTdRVUZEUVR0QlFVTkJPMEZCUTBFc1MwRkJTenRCUVVOTU8wRkJRMEU3UVVGRFFTeExRVUZMT3p0QlFVVk1MRWxCUVVrN1FVRkRTanRCUVVOQk8wRkJRMEU3TzBGQlJVRTdRVUZEUVR0QlFVTkJMSGxEUVVGNVF5eHBRMEZCYVVNN1FVRkRNVVU3UVVGRFFUdEJRVU5CTEV0QlFVczdRVUZEVER0QlFVTkJPMEZCUTBFc1EwRkJRenM3UVVGRlJDd3JSRUZCWlN4blFrRkJaMEk3T3pzN096czdPenM3T3pzN096czdPenM3T3pzN08wRkRka1ZITzBGQlExYzdRVUZEV0R0QlFVTkZPMEZCUTBnN1FVRkRTenM3UVVGRmRFTTdPMEZCUlVFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVRzN1FVRkZRVHRCUVVOQk8wRkJRMEU3UVVGRFFTeDNRMEZCZDBNN08wRkJSWGhETzBGQlEwRTdRVUZEUVR0QlFVTkJMRWxCUVVrN08wRkJSVW83UVVGRFFTeDVSRUZCZVVRc09FUkJRVGhFTzBGQlEzWklPMEZCUTBFN08wRkJSVUU3UVVGRFFUczdRVUZGUVR0QlFVTkJPMEZCUTBFN08wRkJSVUU3UVVGRFFUdEJRVU5CTzBGQlEwRXNZVUZCWVN4VFFVRlRMSGREUVVGM1F5eEpRVUZKTzBGQlEyeEZMRWxCUVVrN08wRkJSVW83UVVGRFFTeDFRa0ZCZFVJc1UwRkJVeXgxUTBGQmRVTXNTVUZCU1RzN1FVRkZNMFU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVN4TFFVRkxPMEZCUTB3N1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTEUxQlFVMDdRVUZEVGp0QlFVTkJPMEZCUTBFc1MwRkJTenRCUVVOTU8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVN4TlFVRk5PMEZCUTA0N1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVRzN1FVRkZRVHRCUVVOQk96dEJRVVZCTzBGQlEwRTdPMEZCUlVFN1FVRkRRVHRCUVVOQk96dEJRVVZCTEhkRlFVRjNSU3hWUVVGVk8wRkJRMnhHTEcxRFFVRnRReXhUUVVGVE8wRkJRelZETEN0Q1FVRXJRaXhQUVVGUExIbERRVUY1UXl4UlFVRlJMRVZCUVVVc1lVRkJZVHRCUVVOMFJ6dEJRVU5CTEUxQlFVMDdRVUZEVGp0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFTeE5RVUZOTzBGQlEwNHNTMEZCU3pzN1FVRkZURHRCUVVOQk8wRkJRMEVzUzBGQlN6dEJRVU5NT3p0QlFVVkJPMEZCUTBFN1FVRkRRU3hMUVVGTE8wRkJRMHdzUzBGQlN6dEJRVU5NTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3TzBGQlJVRTdRVUZEUVR0QlFVTkJPMEZCUTBFc1dVRkJXU3hSUVVGUk8wRkJRM0JDTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRU3hYUVVGWExEWkNRVUUyUWl4eFEwRkJjVU03UVVGRE4wVTdRVUZEUVR0QlFVTkJPenRCUVVWQk8wRkJRMEU3UVVGRFFUdEJRVU5CTEZsQlFWa3NVVUZCVVR0QlFVTndRaXhaUVVGWkxGRkJRVkU3UVVGRGNFSXNXVUZCV1N4UlFVRlJPMEZCUTNCQ08wRkJRMEU3UVVGRFFUdEJRVU5CTERaRFFVRTJRenM3UVVGRk4wTTdRVUZEUVR0QlFVTkJPMEZCUTBFN08wRkJSVUU3UVVGRFFUdEJRVU5CT3p0QlFVVkJPenRCUVVWQk8wRkJRMEVzZFVKQlFYVkNPMEZCUTNaQ08wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdPMEZCUlVFN1FVRkRRVHM3UVVGRlFUdEJRVU5CTzBGQlEwRTdRVUZEUVN4WlFVRlpMRkZCUVZFN1FVRkRjRUk3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFc2VVUkJRWGxFT3p0QlFVVjZSRHRCUVVOQk8wRkJRMEVzUjBGQlJ6dEJRVU5JT3p0QlFVVkJPMEZCUTBFN1FVRkRRVHRCUVVOQkxGbEJRVmtzVVVGQlVUdEJRVU53UWp0QlFVTkJPMEZCUTBFN1FVRkRRVHM3UVVGRlFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFTeEpRVUZKTzBGQlEwbzdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRU3hIUVVGSE96dEJRVVZJTEd0Q1FVRnJRaXh4UWtGQmNVSTdRVUZEZGtNN1FVRkRRVHRCUVVOQk8wRkJRMEU3TzBGQlJVRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQkxHOUZRVUZ2UlN4SlFVRkpMQ3RDUVVFclFpeDFRa0ZCZFVJN1FVRkRPVWdzTWtSQlFUSkVMSE5DUVVGelFqczdRVUZGYWtZN1FVRkRRU3hMUVVGTE8wRkJRMHdzU1VGQlNUdEJRVU5LTzBGQlEwRTdRVUZEUVRzN1FVRkZRVHRCUVVOQk8wRkJRMEU3UVVGRFFTeFpRVUZaTEZGQlFWRTdRVUZEY0VJN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRU3hIUVVGSE8wRkJRMGc3TzBGQlJVRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk96dEJRVVZCTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk96dEJRVVZCTzBGQlEwRTdRVUZEUVRzN1FVRkZRVHRCUVVOQk96dEJRVVZCT3p0QlFVVkJPMEZCUTBFc05rTkJRVFpETEZOQlFWTTdPMEZCUlhSRU8wRkJRMEU3UVVGRFFUczdRVUZGUVR0QlFVTkJPenRCUVVWQk8wRkJRMEU3UVVGRFFUczdRVUZGUVN4RFFVRkRMSEZDUVVGTkxHRkJRV0VzY1VKQlFVMDdRVUZETVVJc1EwRkJReXh4UWtGQlRUdEJRVU5RTEV0QlFVc3NjVUpCUVUwN1FVRkRXRHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHM3UVVGRlFUdEJRVU5CTzBGQlEwRXNSVUZCUlRzN1FVRkZSaXhEUVVGRE96czdPenM3VlVOcVZVUTdWVUZEUVRzN1ZVRkZRVHRWUVVOQk8xVkJRMEU3VlVGRFFUdFZRVU5CTzFWQlEwRTdWVUZEUVR0VlFVTkJPMVZCUTBFN1ZVRkRRVHRWUVVOQk8xVkJRMEU3VlVGRFFUczdWVUZGUVR0VlFVTkJPenRWUVVWQk8xVkJRMEU3VlVGRFFUczdPenM3VjBOMFFrRTdWMEZEUVR0WFFVTkJPMWRCUTBFc1pVRkJaU3cwUWtGQk5FSTdWMEZETTBNc1pVRkJaVHRYUVVObUxHbERRVUZwUXl4WFFVRlhPMWRCUXpWRE8xZEJRMEU3T3pzN08xZERVRUU3VjBGRFFUdFhRVU5CTzFkQlEwRTdWMEZEUVN4NVEwRkJlVU1zZDBOQlFYZERPMWRCUTJwR08xZEJRMEU3VjBGRFFUczdPenM3VjBOUVFUdFhRVU5CTzFkQlEwRTdWMEZEUVR0WFFVTkJMRWRCUVVjN1YwRkRTRHRYUVVOQk8xZEJRMEVzUTBGQlF6czdPenM3VjBOUVJDdzRRMEZCT0VNN096czdPMWREUVRsRE8xZEJRMEU3VjBGRFFUdFhRVU5CTEhWRVFVRjFSQ3hwUWtGQmFVSTdWMEZEZUVVN1YwRkRRU3huUkVGQlowUXNZVUZCWVR0WFFVTTNSRHM3T3pzN096czdPenM3T3pzN096dEJRMDVCTzBGQlEzbERPenRCUVVWNlF6dEJRVU41UXl4RFFVRkRJaXdpYzI5MWNtTmxjeUk2V3lKM1pXSndZV05yT2k4dmJXVnpjMmxoTHk0dmJtOWtaVjl0YjJSMWJHVnpMMEJ3YjNCd1pYSnFjeTlqYjNKbEwyeHBZaTlqY21WaGRHVlFiM0J3WlhJdWFuTWlMQ0ozWldKd1lXTnJPaTh2YldWemMybGhMeTR2Ym05a1pWOXRiMlIxYkdWekwwQndiM0J3WlhKcWN5OWpiM0psTDJ4cFlpOWtiMjB0ZFhScGJITXZZMjl1ZEdGcGJuTXVhbk1pTENKM1pXSndZV05yT2k4dmJXVnpjMmxoTHk0dmJtOWtaVjl0YjJSMWJHVnpMMEJ3YjNCd1pYSnFjeTlqYjNKbEwyeHBZaTlrYjIwdGRYUnBiSE12WjJWMFFtOTFibVJwYm1kRGJHbGxiblJTWldOMExtcHpJaXdpZDJWaWNHRmphem92TDIxbGMzTnBZUzh1TDI1dlpHVmZiVzlrZFd4bGN5OUFjRzl3Y0dWeWFuTXZZMjl5WlM5c2FXSXZaRzl0TFhWMGFXeHpMMmRsZEVOc2FYQndhVzVuVW1WamRDNXFjeUlzSW5kbFluQmhZMnM2THk5dFpYTnphV0V2TGk5dWIyUmxYMjF2WkhWc1pYTXZRSEJ2Y0hCbGNtcHpMMk52Y21VdmJHbGlMMlJ2YlMxMWRHbHNjeTluWlhSRGIyMXdiM05wZEdWU1pXTjBMbXB6SWl3aWQyVmljR0ZqYXpvdkwyMWxjM05wWVM4dUwyNXZaR1ZmYlc5a2RXeGxjeTlBY0c5d2NHVnlhbk12WTI5eVpTOXNhV0l2Wkc5dExYVjBhV3h6TDJkbGRFTnZiWEIxZEdWa1UzUjViR1V1YW5NaUxDSjNaV0p3WVdOck9pOHZiV1Z6YzJsaEx5NHZibTlrWlY5dGIyUjFiR1Z6TDBCd2IzQndaWEpxY3k5amIzSmxMMnhwWWk5a2IyMHRkWFJwYkhNdloyVjBSRzlqZFcxbGJuUkZiR1Z0Wlc1MExtcHpJaXdpZDJWaWNHRmphem92TDIxbGMzTnBZUzh1TDI1dlpHVmZiVzlrZFd4bGN5OUFjRzl3Y0dWeWFuTXZZMjl5WlM5c2FXSXZaRzl0TFhWMGFXeHpMMmRsZEVSdlkzVnRaVzUwVW1WamRDNXFjeUlzSW5kbFluQmhZMnM2THk5dFpYTnphV0V2TGk5dWIyUmxYMjF2WkhWc1pYTXZRSEJ2Y0hCbGNtcHpMMk52Y21VdmJHbGlMMlJ2YlMxMWRHbHNjeTluWlhSSVZFMU1SV3hsYldWdWRGTmpjbTlzYkM1cWN5SXNJbmRsWW5CaFkyczZMeTl0WlhOemFXRXZMaTl1YjJSbFgyMXZaSFZzWlhNdlFIQnZjSEJsY21wekwyTnZjbVV2YkdsaUwyUnZiUzExZEdsc2N5OW5aWFJNWVhsdmRYUlNaV04wTG1weklpd2lkMlZpY0dGamF6b3ZMMjFsYzNOcFlTOHVMMjV2WkdWZmJXOWtkV3hsY3k5QWNHOXdjR1Z5YW5NdlkyOXlaUzlzYVdJdlpHOXRMWFYwYVd4ekwyZGxkRTV2WkdWT1lXMWxMbXB6SWl3aWQyVmljR0ZqYXpvdkwyMWxjM05wWVM4dUwyNXZaR1ZmYlc5a2RXeGxjeTlBY0c5d2NHVnlhbk12WTI5eVpTOXNhV0l2Wkc5dExYVjBhV3h6TDJkbGRFNXZaR1ZUWTNKdmJHd3Vhbk1pTENKM1pXSndZV05yT2k4dmJXVnpjMmxoTHk0dmJtOWtaVjl0YjJSMWJHVnpMMEJ3YjNCd1pYSnFjeTlqYjNKbEwyeHBZaTlrYjIwdGRYUnBiSE12WjJWMFQyWm1jMlYwVUdGeVpXNTBMbXB6SWl3aWQyVmljR0ZqYXpvdkwyMWxjM05wWVM4dUwyNXZaR1ZmYlc5a2RXeGxjeTlBY0c5d2NHVnlhbk12WTI5eVpTOXNhV0l2Wkc5dExYVjBhV3h6TDJkbGRGQmhjbVZ1ZEU1dlpHVXVhbk1pTENKM1pXSndZV05yT2k4dmJXVnpjMmxoTHk0dmJtOWtaVjl0YjJSMWJHVnpMMEJ3YjNCd1pYSnFjeTlqYjNKbEwyeHBZaTlrYjIwdGRYUnBiSE12WjJWMFUyTnliMnhzVUdGeVpXNTBMbXB6SWl3aWQyVmljR0ZqYXpvdkwyMWxjM05wWVM4dUwyNXZaR1ZmYlc5a2RXeGxjeTlBY0c5d2NHVnlhbk12WTI5eVpTOXNhV0l2Wkc5dExYVjBhV3h6TDJkbGRGWnBaWGR3YjNKMFVtVmpkQzVxY3lJc0luZGxZbkJoWTJzNkx5OXRaWE56YVdFdkxpOXViMlJsWDIxdlpIVnNaWE12UUhCdmNIQmxjbXB6TDJOdmNtVXZiR2xpTDJSdmJTMTFkR2xzY3k5blpYUlhhVzVrYjNjdWFuTWlMQ0ozWldKd1lXTnJPaTh2YldWemMybGhMeTR2Ym05a1pWOXRiMlIxYkdWekwwQndiM0J3WlhKcWN5OWpiM0psTDJ4cFlpOWtiMjB0ZFhScGJITXZaMlYwVjJsdVpHOTNVMk55YjJ4c0xtcHpJaXdpZDJWaWNHRmphem92TDIxbGMzTnBZUzh1TDI1dlpHVmZiVzlrZFd4bGN5OUFjRzl3Y0dWeWFuTXZZMjl5WlM5c2FXSXZaRzl0TFhWMGFXeHpMMmRsZEZkcGJtUnZkMU5qY205c2JFSmhjbGd1YW5NaUxDSjNaV0p3WVdOck9pOHZiV1Z6YzJsaEx5NHZibTlrWlY5dGIyUjFiR1Z6TDBCd2IzQndaWEpxY3k5amIzSmxMMnhwWWk5a2IyMHRkWFJwYkhNdmFXNXpkR0Z1WTJWUFppNXFjeUlzSW5kbFluQmhZMnM2THk5dFpYTnphV0V2TGk5dWIyUmxYMjF2WkhWc1pYTXZRSEJ2Y0hCbGNtcHpMMk52Y21VdmJHbGlMMlJ2YlMxMWRHbHNjeTlwYzB4aGVXOTFkRlpwWlhkd2IzSjBMbXB6SWl3aWQyVmljR0ZqYXpvdkwyMWxjM05wWVM4dUwyNXZaR1ZmYlc5a2RXeGxjeTlBY0c5d2NHVnlhbk12WTI5eVpTOXNhV0l2Wkc5dExYVjBhV3h6TDJselUyTnliMnhzVUdGeVpXNTBMbXB6SWl3aWQyVmljR0ZqYXpvdkwyMWxjM05wWVM4dUwyNXZaR1ZmYlc5a2RXeGxjeTlBY0c5d2NHVnlhbk12WTI5eVpTOXNhV0l2Wkc5dExYVjBhV3h6TDJselZHRmliR1ZGYkdWdFpXNTBMbXB6SWl3aWQyVmljR0ZqYXpvdkwyMWxjM05wWVM4dUwyNXZaR1ZmYlc5a2RXeGxjeTlBY0c5d2NHVnlhbk12WTI5eVpTOXNhV0l2Wkc5dExYVjBhV3h6TDJ4cGMzUlRZM0p2Ykd4UVlYSmxiblJ6TG1weklpd2lkMlZpY0dGamF6b3ZMMjFsYzNOcFlTOHVMMjV2WkdWZmJXOWtkV3hsY3k5QWNHOXdjR1Z5YW5NdlkyOXlaUzlzYVdJdlpXNTFiWE11YW5NaUxDSjNaV0p3WVdOck9pOHZiV1Z6YzJsaEx5NHZibTlrWlY5dGIyUjFiR1Z6TDBCd2IzQndaWEpxY3k5amIzSmxMMnhwWWk5cGJtUmxlQzVxY3lJc0luZGxZbkJoWTJzNkx5OXRaWE56YVdFdkxpOXViMlJsWDIxdlpIVnNaWE12UUhCdmNIQmxjbXB6TDJOdmNtVXZiR2xpTDIxdlpHbG1hV1Z5Y3k5aGNIQnNlVk4wZVd4bGN5NXFjeUlzSW5kbFluQmhZMnM2THk5dFpYTnphV0V2TGk5dWIyUmxYMjF2WkhWc1pYTXZRSEJ2Y0hCbGNtcHpMMk52Y21VdmJHbGlMMjF2WkdsbWFXVnljeTloY25KdmR5NXFjeUlzSW5kbFluQmhZMnM2THk5dFpYTnphV0V2TGk5dWIyUmxYMjF2WkhWc1pYTXZRSEJ2Y0hCbGNtcHpMMk52Y21VdmJHbGlMMjF2WkdsbWFXVnljeTlqYjIxd2RYUmxVM1I1YkdWekxtcHpJaXdpZDJWaWNHRmphem92TDIxbGMzTnBZUzh1TDI1dlpHVmZiVzlrZFd4bGN5OUFjRzl3Y0dWeWFuTXZZMjl5WlM5c2FXSXZiVzlrYVdacFpYSnpMMlYyWlc1MFRHbHpkR1Z1WlhKekxtcHpJaXdpZDJWaWNHRmphem92TDIxbGMzTnBZUzh1TDI1dlpHVmZiVzlrZFd4bGN5OUFjRzl3Y0dWeWFuTXZZMjl5WlM5c2FXSXZiVzlrYVdacFpYSnpMMlpzYVhBdWFuTWlMQ0ozWldKd1lXTnJPaTh2YldWemMybGhMeTR2Ym05a1pWOXRiMlIxYkdWekwwQndiM0J3WlhKcWN5OWpiM0psTDJ4cFlpOXRiMlJwWm1sbGNuTXZhR2xrWlM1cWN5SXNJbmRsWW5CaFkyczZMeTl0WlhOemFXRXZMaTl1YjJSbFgyMXZaSFZzWlhNdlFIQnZjSEJsY21wekwyTnZjbVV2YkdsaUwyMXZaR2xtYVdWeWN5OXBibVJsZUM1cWN5SXNJbmRsWW5CaFkyczZMeTl0WlhOemFXRXZMaTl1YjJSbFgyMXZaSFZzWlhNdlFIQnZjSEJsY21wekwyTnZjbVV2YkdsaUwyMXZaR2xtYVdWeWN5OXZabVp6WlhRdWFuTWlMQ0ozWldKd1lXTnJPaTh2YldWemMybGhMeTR2Ym05a1pWOXRiMlIxYkdWekwwQndiM0J3WlhKcWN5OWpiM0psTDJ4cFlpOXRiMlJwWm1sbGNuTXZjRzl3Y0dWeVQyWm1jMlYwY3k1cWN5SXNJbmRsWW5CaFkyczZMeTl0WlhOemFXRXZMaTl1YjJSbFgyMXZaSFZzWlhNdlFIQnZjSEJsY21wekwyTnZjbVV2YkdsaUwyMXZaR2xtYVdWeWN5OXdjbVYyWlc1MFQzWmxjbVpzYjNjdWFuTWlMQ0ozWldKd1lXTnJPaTh2YldWemMybGhMeTR2Ym05a1pWOXRiMlIxYkdWekwwQndiM0J3WlhKcWN5OWpiM0psTDJ4cFlpOXdiM0J3WlhJdGJHbDBaUzVxY3lJc0luZGxZbkJoWTJzNkx5OXRaWE56YVdFdkxpOXViMlJsWDIxdlpIVnNaWE12UUhCdmNIQmxjbXB6TDJOdmNtVXZiR2xpTDNCdmNIQmxjaTVxY3lJc0luZGxZbkJoWTJzNkx5OXRaWE56YVdFdkxpOXViMlJsWDIxdlpIVnNaWE12UUhCdmNIQmxjbXB6TDJOdmNtVXZiR2xpTDNWMGFXeHpMMk52YlhCMWRHVkJkWFJ2VUd4aFkyVnRaVzUwTG1weklpd2lkMlZpY0dGamF6b3ZMMjFsYzNOcFlTOHVMMjV2WkdWZmJXOWtkV3hsY3k5QWNHOXdjR1Z5YW5NdlkyOXlaUzlzYVdJdmRYUnBiSE12WTI5dGNIVjBaVTltWm5ObGRITXVhbk1pTENKM1pXSndZV05yT2k4dmJXVnpjMmxoTHk0dmJtOWtaVjl0YjJSMWJHVnpMMEJ3YjNCd1pYSnFjeTlqYjNKbEwyeHBZaTkxZEdsc2N5OWtaV0p2ZFc1alpTNXFjeUlzSW5kbFluQmhZMnM2THk5dFpYTnphV0V2TGk5dWIyUmxYMjF2WkhWc1pYTXZRSEJ2Y0hCbGNtcHpMMk52Y21VdmJHbGlMM1YwYVd4ekwyUmxkR1ZqZEU5MlpYSm1iRzkzTG1weklpd2lkMlZpY0dGamF6b3ZMMjFsYzNOcFlTOHVMMjV2WkdWZmJXOWtkV3hsY3k5QWNHOXdjR1Z5YW5NdlkyOXlaUzlzYVdJdmRYUnBiSE12Wlhod1lXNWtWRzlJWVhOb1RXRndMbXB6SWl3aWQyVmljR0ZqYXpvdkwyMWxjM05wWVM4dUwyNXZaR1ZmYlc5a2RXeGxjeTlBY0c5d2NHVnlhbk12WTI5eVpTOXNhV0l2ZFhScGJITXZabTl5YldGMExtcHpJaXdpZDJWaWNHRmphem92TDIxbGMzTnBZUzh1TDI1dlpHVmZiVzlrZFd4bGN5OUFjRzl3Y0dWeWFuTXZZMjl5WlM5c2FXSXZkWFJwYkhNdloyVjBRV3gwUVhocGN5NXFjeUlzSW5kbFluQmhZMnM2THk5dFpYTnphV0V2TGk5dWIyUmxYMjF2WkhWc1pYTXZRSEJ2Y0hCbGNtcHpMMk52Y21VdmJHbGlMM1YwYVd4ekwyZGxkRUpoYzJWUWJHRmpaVzFsYm5RdWFuTWlMQ0ozWldKd1lXTnJPaTh2YldWemMybGhMeTR2Ym05a1pWOXRiMlIxYkdWekwwQndiM0J3WlhKcWN5OWpiM0psTDJ4cFlpOTFkR2xzY3k5blpYUkdjbVZ6YUZOcFpHVlBZbXBsWTNRdWFuTWlMQ0ozWldKd1lXTnJPaTh2YldWemMybGhMeTR2Ym05a1pWOXRiMlIxYkdWekwwQndiM0J3WlhKcWN5OWpiM0psTDJ4cFlpOTFkR2xzY3k5blpYUk5ZV2x1UVhocGMwWnliMjFRYkdGalpXMWxiblF1YW5NaUxDSjNaV0p3WVdOck9pOHZiV1Z6YzJsaEx5NHZibTlrWlY5dGIyUjFiR1Z6TDBCd2IzQndaWEpxY3k5amIzSmxMMnhwWWk5MWRHbHNjeTluWlhSUGNIQnZjMmwwWlZCc1lXTmxiV1Z1ZEM1cWN5SXNJbmRsWW5CaFkyczZMeTl0WlhOemFXRXZMaTl1YjJSbFgyMXZaSFZzWlhNdlFIQnZjSEJsY21wekwyTnZjbVV2YkdsaUwzVjBhV3h6TDJkbGRFOXdjRzl6YVhSbFZtRnlhV0YwYVc5dVVHeGhZMlZ0Wlc1MExtcHpJaXdpZDJWaWNHRmphem92TDIxbGMzTnBZUzh1TDI1dlpHVmZiVzlrZFd4bGN5OUFjRzl3Y0dWeWFuTXZZMjl5WlM5c2FXSXZkWFJwYkhNdloyVjBWbUZ5YVdGMGFXOXVMbXB6SWl3aWQyVmljR0ZqYXpvdkwyMWxjM05wWVM4dUwyNXZaR1ZmYlc5a2RXeGxjeTlBY0c5d2NHVnlhbk12WTI5eVpTOXNhV0l2ZFhScGJITXZiV0YwYUM1cWN5SXNJbmRsWW5CaFkyczZMeTl0WlhOemFXRXZMaTl1YjJSbFgyMXZaSFZzWlhNdlFIQnZjSEJsY21wekwyTnZjbVV2YkdsaUwzVjBhV3h6TDIxbGNtZGxRbmxPWVcxbExtcHpJaXdpZDJWaWNHRmphem92TDIxbGMzTnBZUzh1TDI1dlpHVmZiVzlrZFd4bGN5OUFjRzl3Y0dWeWFuTXZZMjl5WlM5c2FXSXZkWFJwYkhNdmJXVnlaMlZRWVdSa2FXNW5UMkpxWldOMExtcHpJaXdpZDJWaWNHRmphem92TDIxbGMzTnBZUzh1TDI1dlpHVmZiVzlrZFd4bGN5OUFjRzl3Y0dWeWFuTXZZMjl5WlM5c2FXSXZkWFJwYkhNdmIzSmtaWEpOYjJScFptbGxjbk11YW5NaUxDSjNaV0p3WVdOck9pOHZiV1Z6YzJsaEx5NHZibTlrWlY5dGIyUjFiR1Z6TDBCd2IzQndaWEpxY3k5amIzSmxMMnhwWWk5MWRHbHNjeTl5WldOMFZHOURiR2xsYm5SU1pXTjBMbXB6SWl3aWQyVmljR0ZqYXpvdkwyMWxjM05wWVM4dUwyNXZaR1ZmYlc5a2RXeGxjeTlBY0c5d2NHVnlhbk12WTI5eVpTOXNhV0l2ZFhScGJITXZkVzVwY1hWbFFua3Vhbk1pTENKM1pXSndZV05yT2k4dmJXVnpjMmxoTHk0dmJtOWtaVjl0YjJSMWJHVnpMMEJ3YjNCd1pYSnFjeTlqYjNKbEwyeHBZaTkxZEdsc2N5OTFjMlZ5UVdkbGJuUXVhbk1pTENKM1pXSndZV05yT2k4dmJXVnpjMmxoTHk0dmJtOWtaVjl0YjJSMWJHVnpMMEJ3YjNCd1pYSnFjeTlqYjNKbEwyeHBZaTkxZEdsc2N5OTJZV3hwWkdGMFpVMXZaR2xtYVdWeWN5NXFjeUlzSW5kbFluQmhZMnM2THk5dFpYTnphV0V2TGk5dWIyUmxYMjF2WkhWc1pYTXZRSEJ2Y0hCbGNtcHpMMk52Y21VdmJHbGlMM1YwYVd4ekwzZHBkR2hwYmk1cWN5SXNJbmRsWW5CaFkyczZMeTl0WlhOemFXRXZMaTl1YjJSbFgyMXZaSFZzWlhNdlltOXZkSE4wY21Gd0wycHpMMlJwYzNRdlltRnpaUzFqYjIxd2IyNWxiblF1YW5NaUxDSjNaV0p3WVdOck9pOHZiV1Z6YzJsaEx5NHZibTlrWlY5dGIyUjFiR1Z6TDJKdmIzUnpkSEpoY0M5cWN5OWthWE4wTDJKMWRIUnZiaTVxY3lJc0luZGxZbkJoWTJzNkx5OXRaWE56YVdFdkxpOXViMlJsWDIxdlpIVnNaWE12WW05dmRITjBjbUZ3TDJwekwyUnBjM1F2WTI5c2JHRndjMlV1YW5NaUxDSjNaV0p3WVdOck9pOHZiV1Z6YzJsaEx5NHZibTlrWlY5dGIyUjFiR1Z6TDJKdmIzUnpkSEpoY0M5cWN5OWthWE4wTDJSdmJTOWtZWFJoTG1weklpd2lkMlZpY0dGamF6b3ZMMjFsYzNOcFlTOHVMMjV2WkdWZmJXOWtkV3hsY3k5aWIyOTBjM1J5WVhBdmFuTXZaR2x6ZEM5a2IyMHZaWFpsYm5RdGFHRnVaR3hsY2k1cWN5SXNJbmRsWW5CaFkyczZMeTl0WlhOemFXRXZMaTl1YjJSbFgyMXZaSFZzWlhNdlltOXZkSE4wY21Gd0wycHpMMlJwYzNRdlpHOXRMMjFoYm1sd2RXeGhkRzl5TG1weklpd2lkMlZpY0dGamF6b3ZMMjFsYzNOcFlTOHVMMjV2WkdWZmJXOWtkV3hsY3k5aWIyOTBjM1J5WVhBdmFuTXZaR2x6ZEM5a2IyMHZjMlZzWldOMGIzSXRaVzVuYVc1bExtcHpJaXdpZDJWaWNHRmphem92TDIxbGMzTnBZUzh1TDI1dlpHVmZiVzlrZFd4bGN5OWliMjkwYzNSeVlYQXZhbk12WkdsemRDOXRiMlJoYkM1cWN5SXNJbmRsWW5CaFkyczZMeTl0WlhOemFXRXZMaTl1YjJSbFgyMXZaSFZzWlhNdlltOXZkSE4wY21Gd0wycHpMMlJwYzNRdmNHOXdiM1psY2k1cWN5SXNJbmRsWW5CaFkyczZMeTl0WlhOemFXRXZMaTl1YjJSbFgyMXZaSFZzWlhNdlltOXZkSE4wY21Gd0wycHpMMlJwYzNRdmMyTnliMnhzYzNCNUxtcHpJaXdpZDJWaWNHRmphem92TDIxbGMzTnBZUzh1TDI1dlpHVmZiVzlrZFd4bGN5OWliMjkwYzNSeVlYQXZhbk12WkdsemRDOTBZV0l1YW5NaUxDSjNaV0p3WVdOck9pOHZiV1Z6YzJsaEx5NHZibTlrWlY5dGIyUjFiR1Z6TDJKdmIzUnpkSEpoY0M5cWN5OWthWE4wTDNSdmIyeDBhWEF1YW5NaUxDSjNaV0p3WVdOck9pOHZiV1Z6YzJsaEx5NHZibTlrWlY5dGIyUjFiR1Z6TDJKdmIzUnpkSEpoY0M5cWN5OWthWE4wTDNWMGFXd3ZZbUZqYTJSeWIzQXVhbk1pTENKM1pXSndZV05yT2k4dmJXVnpjMmxoTHk0dmJtOWtaVjl0YjJSMWJHVnpMMkp2YjNSemRISmhjQzlxY3k5a2FYTjBMM1YwYVd3dlkyOXRjRzl1Wlc1MExXWjFibU4wYVc5dWN5NXFjeUlzSW5kbFluQmhZMnM2THk5dFpYTnphV0V2TGk5dWIyUmxYMjF2WkhWc1pYTXZZbTl2ZEhOMGNtRndMMnB6TDJScGMzUXZkWFJwYkM5amIyNW1hV2N1YW5NaUxDSjNaV0p3WVdOck9pOHZiV1Z6YzJsaEx5NHZibTlrWlY5dGIyUjFiR1Z6TDJKdmIzUnpkSEpoY0M5cWN5OWthWE4wTDNWMGFXd3ZabTlqZFhOMGNtRndMbXB6SWl3aWQyVmljR0ZqYXpvdkwyMWxjM05wWVM4dUwyNXZaR1ZmYlc5a2RXeGxjeTlpYjI5MGMzUnlZWEF2YW5NdlpHbHpkQzkxZEdsc0wybHVaR1Y0TG1weklpd2lkMlZpY0dGamF6b3ZMMjFsYzNOcFlTOHVMMjV2WkdWZmJXOWtkV3hsY3k5aWIyOTBjM1J5WVhBdmFuTXZaR2x6ZEM5MWRHbHNMM05oYm1sMGFYcGxjaTVxY3lJc0luZGxZbkJoWTJzNkx5OXRaWE56YVdFdkxpOXViMlJsWDIxdlpIVnNaWE12WW05dmRITjBjbUZ3TDJwekwyUnBjM1F2ZFhScGJDOXpZM0p2Ykd4aVlYSXVhbk1pTENKM1pXSndZV05yT2k4dmJXVnpjMmxoTHk0dmJtOWtaVjl0YjJSMWJHVnpMMkp2YjNSemRISmhjQzlxY3k5a2FYTjBMM1YwYVd3dmRHVnRjR3hoZEdVdFptRmpkRzl5ZVM1cWN5SXNJbmRsWW5CaFkyczZMeTl0WlhOemFXRXZMaTl1YjJSbFgyMXZaSFZzWlhNdmFuRjFaWEo1TDJScGMzUXZhbkYxWlhKNUxtcHpJaXdpZDJWaWNHRmphem92TDIxbGMzTnBZUzh1TDNOeVl5OXpZM056TDE5bWNtOXVkR1Z1WkM5bWNtOXVkR1Z1WkM1elkzTnpQemt5T0RnaUxDSjNaV0p3WVdOck9pOHZiV1Z6YzJsaEx5NHZjM0pqTDJwekwxOWpiMjF3YjI1bGJuUnpMMTlpYjI5MGMzUnlZWEF1YW5NaUxDSjNaV0p3WVdOck9pOHZiV1Z6YzJsaEx5NHZjM0pqTDJwekwxOWpiMjF3YjI1bGJuUnpMMTlqYUdWamEySnZlQzVxY3lJc0luZGxZbkJoWTJzNkx5OXRaWE56YVdFdkxpOXpjbU12YW5NdlgyTnZiWEJ2Ym1WdWRITXZYMmx1Y0hWMFgzUmxlSFF1YW5NaUxDSjNaV0p3WVdOck9pOHZiV1Z6YzJsaEx5NHZjM0pqTDJwekwxOWpiMjF3YjI1bGJuUnpMMTlzYjJkblpYSXVhbk1pTENKM1pXSndZV05yT2k4dmJXVnpjMmxoTHk0dmMzSmpMMnB6TDE5amIyMXdiMjVsYm5SekwxOXlZV1JwYnk1cWN5SXNJbmRsWW5CaFkyczZMeTl0WlhOemFXRXZMaTl6Y21NdmFuTXZYMk52YlhCdmJtVnVkSE12WDNKcGNIQnNaUzVxY3lJc0luZGxZbkJoWTJzNkx5OXRaWE56YVdFdkxpOXpjbU12YW5NdlgyTnZiWEJ2Ym1WdWRITXZYM2R2Y210bGNsOWthWE53WVhSamFHVnlMbXB6SWl3aWQyVmljR0ZqYXpvdkwyMWxjM05wWVM4dUwzTnlZeTlxY3k5bWNtOXVkR1Z1WkM1cWN5SXNJbmRsWW5CaFkyczZMeTl0WlhOemFXRXZkMlZpY0dGamF5OWliMjkwYzNSeVlYQWlMQ0ozWldKd1lXTnJPaTh2YldWemMybGhMM2RsWW5CaFkyc3ZjblZ1ZEdsdFpTOWpiMjF3WVhRZ1oyVjBJR1JsWm1GMWJIUWdaWGh3YjNKMElpd2lkMlZpY0dGamF6b3ZMMjFsYzNOcFlTOTNaV0p3WVdOckwzSjFiblJwYldVdlpHVm1hVzVsSUhCeWIzQmxjblI1SUdkbGRIUmxjbk1pTENKM1pXSndZV05yT2k4dmJXVnpjMmxoTDNkbFluQmhZMnN2Y25WdWRHbHRaUzluYkc5aVlXd2lMQ0ozWldKd1lXTnJPaTh2YldWemMybGhMM2RsWW5CaFkyc3ZjblZ1ZEdsdFpTOW9ZWE5QZDI1UWNtOXdaWEowZVNCemFHOXlkR2hoYm1RaUxDSjNaV0p3WVdOck9pOHZiV1Z6YzJsaEwzZGxZbkJoWTJzdmNuVnVkR2x0WlM5dFlXdGxJRzVoYldWemNHRmpaU0J2WW1wbFkzUWlMQ0ozWldKd1lXTnJPaTh2YldWemMybGhMeTR2YzNKakwyVnVkSEpwWlhNdlpXNTBjbmt0Wm5KdmJuUmxibVF1YW5NaVhTd2ljMjkxY21ObGMwTnZiblJsYm5RaU9sc2lhVzF3YjNKMElHZGxkRU52YlhCdmMybDBaVkpsWTNRZ1puSnZiU0JjSWk0dlpHOXRMWFYwYVd4ekwyZGxkRU52YlhCdmMybDBaVkpsWTNRdWFuTmNJanRjYm1sdGNHOXlkQ0JuWlhSTVlYbHZkWFJTWldOMElHWnliMjBnWENJdUwyUnZiUzExZEdsc2N5OW5aWFJNWVhsdmRYUlNaV04wTG1welhDSTdYRzVwYlhCdmNuUWdiR2x6ZEZOamNtOXNiRkJoY21WdWRITWdabkp2YlNCY0lpNHZaRzl0TFhWMGFXeHpMMnhwYzNSVFkzSnZiR3hRWVhKbGJuUnpMbXB6WENJN1hHNXBiWEJ2Y25RZ1oyVjBUMlptYzJWMFVHRnlaVzUwSUdaeWIyMGdYQ0l1TDJSdmJTMTFkR2xzY3k5blpYUlBabVp6WlhSUVlYSmxiblF1YW5OY0lqdGNibWx0Y0c5eWRDQm5aWFJEYjIxd2RYUmxaRk4wZVd4bElHWnliMjBnWENJdUwyUnZiUzExZEdsc2N5OW5aWFJEYjIxd2RYUmxaRk4wZVd4bExtcHpYQ0k3WEc1cGJYQnZjblFnYjNKa1pYSk5iMlJwWm1sbGNuTWdabkp2YlNCY0lpNHZkWFJwYkhNdmIzSmtaWEpOYjJScFptbGxjbk11YW5OY0lqdGNibWx0Y0c5eWRDQmtaV0p2ZFc1alpTQm1jbTl0SUZ3aUxpOTFkR2xzY3k5a1pXSnZkVzVqWlM1cWMxd2lPMXh1YVcxd2IzSjBJSFpoYkdsa1lYUmxUVzlrYVdacFpYSnpJR1p5YjIwZ1hDSXVMM1YwYVd4ekwzWmhiR2xrWVhSbFRXOWthV1pwWlhKekxtcHpYQ0k3WEc1cGJYQnZjblFnZFc1cGNYVmxRbmtnWm5KdmJTQmNJaTR2ZFhScGJITXZkVzVwY1hWbFFua3Vhbk5jSWp0Y2JtbHRjRzl5ZENCblpYUkNZWE5sVUd4aFkyVnRaVzUwSUdaeWIyMGdYQ0l1TDNWMGFXeHpMMmRsZEVKaGMyVlFiR0ZqWlcxbGJuUXVhbk5jSWp0Y2JtbHRjRzl5ZENCdFpYSm5aVUo1VG1GdFpTQm1jbTl0SUZ3aUxpOTFkR2xzY3k5dFpYSm5aVUo1VG1GdFpTNXFjMXdpTzF4dWFXMXdiM0owSUdSbGRHVmpkRTkyWlhKbWJHOTNJR1p5YjIwZ1hDSXVMM1YwYVd4ekwyUmxkR1ZqZEU5MlpYSm1iRzkzTG1welhDSTdYRzVwYlhCdmNuUWdleUJwYzBWc1pXMWxiblFnZlNCbWNtOXRJRndpTGk5a2IyMHRkWFJwYkhNdmFXNXpkR0Z1WTJWUFppNXFjMXdpTzF4dWFXMXdiM0owSUhzZ1lYVjBieUI5SUdaeWIyMGdYQ0l1TDJWdWRXMXpMbXB6WENJN1hHNTJZWElnU1U1V1FVeEpSRjlGVEVWTlJVNVVYMFZTVWs5U0lEMGdKMUJ2Y0hCbGNqb2dTVzUyWVd4cFpDQnlaV1psY21WdVkyVWdiM0lnY0c5d2NHVnlJR0Z5WjNWdFpXNTBJSEJ5YjNacFpHVmtMaUJVYUdWNUlHMTFjM1FnWW1VZ1pXbDBhR1Z5SUdFZ1JFOU5JR1ZzWlcxbGJuUWdiM0lnZG1seWRIVmhiQ0JsYkdWdFpXNTBMaWM3WEc1MllYSWdTVTVHU1U1SlZFVmZURTlQVUY5RlVsSlBVaUE5SUNkUWIzQndaWEk2SUVGdUlHbHVabWx1YVhSbElHeHZiM0FnYVc0Z2RHaGxJRzF2WkdsbWFXVnljeUJqZVdOc1pTQm9ZWE1nWW1WbGJpQmtaWFJsWTNSbFpDRWdWR2hsSUdONVkyeGxJR2hoY3lCaVpXVnVJR2x1ZEdWeWNuVndkR1ZrSUhSdklIQnlaWFpsYm5RZ1lTQmljbTkzYzJWeUlHTnlZWE5vTGljN1hHNTJZWElnUkVWR1FWVk1WRjlQVUZSSlQwNVRJRDBnZTF4dUlDQndiR0ZqWlcxbGJuUTZJQ2RpYjNSMGIyMG5MRnh1SUNCdGIyUnBabWxsY25NNklGdGRMRnh1SUNCemRISmhkR1ZuZVRvZ0oyRmljMjlzZFhSbEoxeHVmVHRjYmx4dVpuVnVZM1JwYjI0Z1lYSmxWbUZzYVdSRmJHVnRaVzUwY3lncElIdGNiaUFnWm05eUlDaDJZWElnWDJ4bGJpQTlJR0Z5WjNWdFpXNTBjeTVzWlc1bmRHZ3NJR0Z5WjNNZ1BTQnVaWGNnUVhKeVlYa29YMnhsYmlrc0lGOXJaWGtnUFNBd095QmZhMlY1SUR3Z1gyeGxianNnWDJ0bGVTc3JLU0I3WEc0Z0lDQWdZWEpuYzF0ZmEyVjVYU0E5SUdGeVozVnRaVzUwYzF0ZmEyVjVYVHRjYmlBZ2ZWeHVYRzRnSUhKbGRIVnliaUFoWVhKbmN5NXpiMjFsS0daMWJtTjBhVzl1SUNobGJHVnRaVzUwS1NCN1hHNGdJQ0FnY21WMGRYSnVJQ0VvWld4bGJXVnVkQ0FtSmlCMGVYQmxiMllnWld4bGJXVnVkQzVuWlhSQ2IzVnVaR2x1WjBOc2FXVnVkRkpsWTNRZ1BUMDlJQ2RtZFc1amRHbHZiaWNwTzF4dUlDQjlLVHRjYm4xY2JseHVaWGh3YjNKMElHWjFibU4wYVc5dUlIQnZjSEJsY2tkbGJtVnlZWFJ2Y2loblpXNWxjbUYwYjNKUGNIUnBiMjV6S1NCN1hHNGdJR2xtSUNoblpXNWxjbUYwYjNKUGNIUnBiMjV6SUQwOVBTQjJiMmxrSURBcElIdGNiaUFnSUNCblpXNWxjbUYwYjNKUGNIUnBiMjV6SUQwZ2UzMDdYRzRnSUgxY2JseHVJQ0IyWVhJZ1gyZGxibVZ5WVhSdmNrOXdkR2x2Ym5NZ1BTQm5aVzVsY21GMGIzSlBjSFJwYjI1ekxGeHVJQ0FnSUNBZ1gyZGxibVZ5WVhSdmNrOXdkR2x2Ym5Na1pHVm1JRDBnWDJkbGJtVnlZWFJ2Y2s5d2RHbHZibk11WkdWbVlYVnNkRTF2WkdsbWFXVnljeXhjYmlBZ0lDQWdJR1JsWm1GMWJIUk5iMlJwWm1sbGNuTWdQU0JmWjJWdVpYSmhkRzl5VDNCMGFXOXVjeVJrWldZZ1BUMDlJSFp2YVdRZ01DQS9JRnRkSURvZ1gyZGxibVZ5WVhSdmNrOXdkR2x2Ym5Na1pHVm1MRnh1SUNBZ0lDQWdYMmRsYm1WeVlYUnZjazl3ZEdsdmJuTWtaR1ZtTWlBOUlGOW5aVzVsY21GMGIzSlBjSFJwYjI1ekxtUmxabUYxYkhSUGNIUnBiMjV6TEZ4dUlDQWdJQ0FnWkdWbVlYVnNkRTl3ZEdsdmJuTWdQU0JmWjJWdVpYSmhkRzl5VDNCMGFXOXVjeVJrWldZeUlEMDlQU0IyYjJsa0lEQWdQeUJFUlVaQlZVeFVYMDlRVkVsUFRsTWdPaUJmWjJWdVpYSmhkRzl5VDNCMGFXOXVjeVJrWldZeU8xeHVJQ0J5WlhSMWNtNGdablZ1WTNScGIyNGdZM0psWVhSbFVHOXdjR1Z5S0hKbFptVnlaVzVqWlN3Z2NHOXdjR1Z5TENCdmNIUnBiMjV6S1NCN1hHNGdJQ0FnYVdZZ0tHOXdkR2x2Ym5NZ1BUMDlJSFp2YVdRZ01Da2dlMXh1SUNBZ0lDQWdiM0IwYVc5dWN5QTlJR1JsWm1GMWJIUlBjSFJwYjI1ek8xeHVJQ0FnSUgxY2JseHVJQ0FnSUhaaGNpQnpkR0YwWlNBOUlIdGNiaUFnSUNBZ0lIQnNZV05sYldWdWREb2dKMkp2ZEhSdmJTY3NYRzRnSUNBZ0lDQnZjbVJsY21Wa1RXOWthV1pwWlhKek9pQmJYU3hjYmlBZ0lDQWdJRzl3ZEdsdmJuTTZJRTlpYW1WamRDNWhjM05wWjI0b2UzMHNJRVJGUmtGVlRGUmZUMUJVU1U5T1V5d2daR1ZtWVhWc2RFOXdkR2x2Ym5NcExGeHVJQ0FnSUNBZ2JXOWthV1pwWlhKelJHRjBZVG9nZTMwc1hHNGdJQ0FnSUNCbGJHVnRaVzUwY3pvZ2UxeHVJQ0FnSUNBZ0lDQnlaV1psY21WdVkyVTZJSEpsWm1WeVpXNWpaU3hjYmlBZ0lDQWdJQ0FnY0c5d2NHVnlPaUJ3YjNCd1pYSmNiaUFnSUNBZ0lIMHNYRzRnSUNBZ0lDQmhkSFJ5YVdKMWRHVnpPaUI3ZlN4Y2JpQWdJQ0FnSUhOMGVXeGxjem9nZTMxY2JpQWdJQ0I5TzF4dUlDQWdJSFpoY2lCbFptWmxZM1JEYkdWaGJuVndSbTV6SUQwZ1cxMDdYRzRnSUNBZ2RtRnlJR2x6UkdWemRISnZlV1ZrSUQwZ1ptRnNjMlU3WEc0Z0lDQWdkbUZ5SUdsdWMzUmhibU5sSUQwZ2UxeHVJQ0FnSUNBZ2MzUmhkR1U2SUhOMFlYUmxMRnh1SUNBZ0lDQWdjMlYwVDNCMGFXOXVjem9nWm5WdVkzUnBiMjRnYzJWMFQzQjBhVzl1Y3loelpYUlBjSFJwYjI1elFXTjBhVzl1S1NCN1hHNGdJQ0FnSUNBZ0lIWmhjaUJ2Y0hScGIyNXpJRDBnZEhsd1pXOW1JSE5sZEU5d2RHbHZibk5CWTNScGIyNGdQVDA5SUNkbWRXNWpkR2x2YmljZ1B5QnpaWFJQY0hScGIyNXpRV04wYVc5dUtITjBZWFJsTG05d2RHbHZibk1wSURvZ2MyVjBUM0IwYVc5dWMwRmpkR2x2Ymp0Y2JpQWdJQ0FnSUNBZ1kyeGxZVzUxY0UxdlpHbG1hV1Z5UldabVpXTjBjeWdwTzF4dUlDQWdJQ0FnSUNCemRHRjBaUzV2Y0hScGIyNXpJRDBnVDJKcVpXTjBMbUZ6YzJsbmJpaDdmU3dnWkdWbVlYVnNkRTl3ZEdsdmJuTXNJSE4wWVhSbExtOXdkR2x2Ym5Nc0lHOXdkR2x2Ym5NcE8xeHVJQ0FnSUNBZ0lDQnpkR0YwWlM1elkzSnZiR3hRWVhKbGJuUnpJRDBnZTF4dUlDQWdJQ0FnSUNBZ0lISmxabVZ5Wlc1alpUb2dhWE5GYkdWdFpXNTBLSEpsWm1WeVpXNWpaU2tnUHlCc2FYTjBVMk55YjJ4c1VHRnlaVzUwY3loeVpXWmxjbVZ1WTJVcElEb2djbVZtWlhKbGJtTmxMbU52Ym5SbGVIUkZiR1Z0Wlc1MElEOGdiR2x6ZEZOamNtOXNiRkJoY21WdWRITW9jbVZtWlhKbGJtTmxMbU52Ym5SbGVIUkZiR1Z0Wlc1MEtTQTZJRnRkTEZ4dUlDQWdJQ0FnSUNBZ0lIQnZjSEJsY2pvZ2JHbHpkRk5qY205c2JGQmhjbVZ1ZEhNb2NHOXdjR1Z5S1Z4dUlDQWdJQ0FnSUNCOU95QXZMeUJQY21SbGNuTWdkR2hsSUcxdlpHbG1hV1Z5Y3lCaVlYTmxaQ0J2YmlCMGFHVnBjaUJrWlhCbGJtUmxibU5wWlhNZ1lXNWtJR0J3YUdGelpXQmNiaUFnSUNBZ0lDQWdMeThnY0hKdmNHVnlkR2xsYzF4dVhHNGdJQ0FnSUNBZ0lIWmhjaUJ2Y21SbGNtVmtUVzlrYVdacFpYSnpJRDBnYjNKa1pYSk5iMlJwWm1sbGNuTW9iV1Z5WjJWQ2VVNWhiV1VvVzEwdVkyOXVZMkYwS0dSbFptRjFiSFJOYjJScFptbGxjbk1zSUhOMFlYUmxMbTl3ZEdsdmJuTXViVzlrYVdacFpYSnpLU2twT3lBdkx5QlRkSEpwY0NCdmRYUWdaR2x6WVdKc1pXUWdiVzlrYVdacFpYSnpYRzVjYmlBZ0lDQWdJQ0FnYzNSaGRHVXViM0prWlhKbFpFMXZaR2xtYVdWeWN5QTlJRzl5WkdWeVpXUk5iMlJwWm1sbGNuTXVabWxzZEdWeUtHWjFibU4wYVc5dUlDaHRLU0I3WEc0Z0lDQWdJQ0FnSUNBZ2NtVjBkWEp1SUcwdVpXNWhZbXhsWkR0Y2JpQWdJQ0FnSUNBZ2ZTazdJQzh2SUZaaGJHbGtZWFJsSUhSb1pTQndjbTkyYVdSbFpDQnRiMlJwWm1sbGNuTWdjMjhnZEdoaGRDQjBhR1VnWTI5dWMzVnRaWElnZDJsc2JDQm5aWFFnZDJGeWJtVmtYRzRnSUNBZ0lDQWdJQzh2SUdsbUlHOXVaU0J2WmlCMGFHVWdiVzlrYVdacFpYSnpJR2x6SUdsdWRtRnNhV1FnWm05eUlHRnVlU0J5WldGemIyNWNibHh1SUNBZ0lDQWdJQ0JwWmlBb2NISnZZMlZ6Y3k1bGJuWXVUazlFUlY5RlRsWWdJVDA5SUZ3aWNISnZaSFZqZEdsdmJsd2lLU0I3WEc0Z0lDQWdJQ0FnSUNBZ2RtRnlJRzF2WkdsbWFXVnljeUE5SUhWdWFYRjFaVUo1S0Z0ZExtTnZibU5oZENodmNtUmxjbVZrVFc5a2FXWnBaWEp6TENCemRHRjBaUzV2Y0hScGIyNXpMbTF2WkdsbWFXVnljeWtzSUdaMWJtTjBhVzl1SUNoZmNtVm1LU0I3WEc0Z0lDQWdJQ0FnSUNBZ0lDQjJZWElnYm1GdFpTQTlJRjl5WldZdWJtRnRaVHRjYmlBZ0lDQWdJQ0FnSUNBZ0lISmxkSFZ5YmlCdVlXMWxPMXh1SUNBZ0lDQWdJQ0FnSUgwcE8xeHVJQ0FnSUNBZ0lDQWdJSFpoYkdsa1lYUmxUVzlrYVdacFpYSnpLRzF2WkdsbWFXVnljeWs3WEc1Y2JpQWdJQ0FnSUNBZ0lDQnBaaUFvWjJWMFFtRnpaVkJzWVdObGJXVnVkQ2h6ZEdGMFpTNXZjSFJwYjI1ekxuQnNZV05sYldWdWRDa2dQVDA5SUdGMWRHOHBJSHRjYmlBZ0lDQWdJQ0FnSUNBZ0lIWmhjaUJtYkdsd1RXOWthV1pwWlhJZ1BTQnpkR0YwWlM1dmNtUmxjbVZrVFc5a2FXWnBaWEp6TG1acGJtUW9ablZ1WTNScGIyNGdLRjl5WldZeUtTQjdYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lIWmhjaUJ1WVcxbElEMGdYM0psWmpJdWJtRnRaVHRjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdjbVYwZFhKdUlHNWhiV1VnUFQwOUlDZG1iR2x3Snp0Y2JpQWdJQ0FnSUNBZ0lDQWdJSDBwTzF4dVhHNGdJQ0FnSUNBZ0lDQWdJQ0JwWmlBb0lXWnNhWEJOYjJScFptbGxjaWtnZTF4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0JqYjI1emIyeGxMbVZ5Y205eUtGc25VRzl3Y0dWeU9pQmNJbUYxZEc5Y0lpQndiR0ZqWlcxbGJuUnpJSEpsY1hWcGNtVWdkR2hsSUZ3aVpteHBjRndpSUcxdlpHbG1hV1Z5SUdKbEp5d2dKM0J5WlhObGJuUWdZVzVrSUdWdVlXSnNaV1FnZEc4Z2QyOXlheTRuWFM1cWIybHVLQ2NnSnlrcE8xeHVJQ0FnSUNBZ0lDQWdJQ0FnZlZ4dUlDQWdJQ0FnSUNBZ0lIMWNibHh1SUNBZ0lDQWdJQ0FnSUhaaGNpQmZaMlYwUTI5dGNIVjBaV1JUZEhsc1pTQTlJR2RsZEVOdmJYQjFkR1ZrVTNSNWJHVW9jRzl3Y0dWeUtTeGNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ2JXRnlaMmx1Vkc5d0lEMGdYMmRsZEVOdmJYQjFkR1ZrVTNSNWJHVXViV0Z5WjJsdVZHOXdMRnh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQnRZWEpuYVc1U2FXZG9kQ0E5SUY5blpYUkRiMjF3ZFhSbFpGTjBlV3hsTG0xaGNtZHBibEpwWjJoMExGeHVJQ0FnSUNBZ0lDQWdJQ0FnSUNCdFlYSm5hVzVDYjNSMGIyMGdQU0JmWjJWMFEyOXRjSFYwWldSVGRIbHNaUzV0WVhKbmFXNUNiM1IwYjIwc1hHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUcxaGNtZHBia3hsWm5RZ1BTQmZaMlYwUTI5dGNIVjBaV1JUZEhsc1pTNXRZWEpuYVc1TVpXWjBPeUF2THlCWFpTQnVieUJzYjI1blpYSWdkR0ZyWlNCcGJuUnZJR0ZqWTI5MWJuUWdZRzFoY21kcGJuTmdJRzl1SUhSb1pTQndiM0J3WlhJc0lHRnVaQ0JwZENCallXNWNiaUFnSUNBZ0lDQWdJQ0F2THlCallYVnpaU0JpZFdkeklIZHBkR2dnY0c5emFYUnBiMjVwYm1jc0lITnZJSGRsSjJ4c0lIZGhjbTRnZEdobElHTnZibk4xYldWeVhHNWNibHh1SUNBZ0lDQWdJQ0FnSUdsbUlDaGJiV0Z5WjJsdVZHOXdMQ0J0WVhKbmFXNVNhV2RvZEN3Z2JXRnlaMmx1UW05MGRHOXRMQ0J0WVhKbmFXNU1aV1owWFM1emIyMWxLR1oxYm1OMGFXOXVJQ2h0WVhKbmFXNHBJSHRjYmlBZ0lDQWdJQ0FnSUNBZ0lISmxkSFZ5YmlCd1lYSnpaVVpzYjJGMEtHMWhjbWRwYmlrN1hHNGdJQ0FnSUNBZ0lDQWdmU2twSUh0Y2JpQWdJQ0FnSUNBZ0lDQWdJR052Ym5OdmJHVXVkMkZ5YmloYkoxQnZjSEJsY2pvZ1ExTlRJRndpYldGeVoybHVYQ0lnYzNSNWJHVnpJR05oYm01dmRDQmlaU0IxYzJWa0lIUnZJR0Z3Y0d4NUlIQmhaR1JwYm1jbkxDQW5ZbVYwZDJWbGJpQjBhR1VnY0c5d2NHVnlJR0Z1WkNCcGRITWdjbVZtWlhKbGJtTmxJR1ZzWlcxbGJuUWdiM0lnWW05MWJtUmhjbmt1Snl3Z0oxUnZJSEpsY0d4cFkyRjBaU0J0WVhKbmFXNHNJSFZ6WlNCMGFHVWdZRzltWm5ObGRHQWdiVzlrYVdacFpYSXNJR0Z6SUhkbGJHd2dZWE1uTENBbmRHaGxJR0J3WVdSa2FXNW5ZQ0J2Y0hScGIyNGdhVzRnZEdobElHQndjbVYyWlc1MFQzWmxjbVpzYjNkZ0lHRnVaQ0JnWm14cGNHQW5MQ0FuYlc5a2FXWnBaWEp6TGlkZExtcHZhVzRvSnlBbktTazdYRzRnSUNBZ0lDQWdJQ0FnZlZ4dUlDQWdJQ0FnSUNCOVhHNWNiaUFnSUNBZ0lDQWdjblZ1VFc5a2FXWnBaWEpGWm1abFkzUnpLQ2s3WEc0Z0lDQWdJQ0FnSUhKbGRIVnliaUJwYm5OMFlXNWpaUzUxY0dSaGRHVW9LVHRjYmlBZ0lDQWdJSDBzWEc0Z0lDQWdJQ0F2THlCVGVXNWpJSFZ3WkdGMFpTRGlnSk1nYVhRZ2QybHNiQ0JoYkhkaGVYTWdZbVVnWlhobFkzVjBaV1FzSUdWMlpXNGdhV1lnYm05MElHNWxZMlZ6YzJGeWVTNGdWR2hwYzF4dUlDQWdJQ0FnTHk4Z2FYTWdkWE5sWm5Wc0lHWnZjaUJzYjNjZ1puSmxjWFZsYm1ONUlIVndaR0YwWlhNZ2QyaGxjbVVnYzNsdVl5QmlaV2hoZG1sdmNpQnphVzF3YkdsbWFXVnpJSFJvWlZ4dUlDQWdJQ0FnTHk4Z2JHOW5hV011WEc0Z0lDQWdJQ0F2THlCR2IzSWdhR2xuYUNCbWNtVnhkV1Z1WTNrZ2RYQmtZWFJsY3lBb1pTNW5MaUJnY21WemFYcGxZQ0JoYm1RZ1lITmpjbTlzYkdBZ1pYWmxiblJ6S1N3Z1lXeDNZWGx6WEc0Z0lDQWdJQ0F2THlCd2NtVm1aWElnZEdobElHRnplVzVqSUZCdmNIQmxjaU4xY0dSaGRHVWdiV1YwYUc5a1hHNGdJQ0FnSUNCbWIzSmpaVlZ3WkdGMFpUb2dablZ1WTNScGIyNGdabTl5WTJWVmNHUmhkR1VvS1NCN1hHNGdJQ0FnSUNBZ0lHbG1JQ2hwYzBSbGMzUnliM2xsWkNrZ2UxeHVJQ0FnSUNBZ0lDQWdJSEpsZEhWeWJqdGNiaUFnSUNBZ0lDQWdmVnh1WEc0Z0lDQWdJQ0FnSUhaaGNpQmZjM1JoZEdVa1pXeGxiV1Z1ZEhNZ1BTQnpkR0YwWlM1bGJHVnRaVzUwY3l4Y2JpQWdJQ0FnSUNBZ0lDQWdJSEpsWm1WeVpXNWpaU0E5SUY5emRHRjBaU1JsYkdWdFpXNTBjeTV5WldabGNtVnVZMlVzWEc0Z0lDQWdJQ0FnSUNBZ0lDQndiM0J3WlhJZ1BTQmZjM1JoZEdVa1pXeGxiV1Z1ZEhNdWNHOXdjR1Z5T3lBdkx5QkViMjRuZENCd2NtOWpaV1ZrSUdsbUlHQnlaV1psY21WdVkyVmdJRzl5SUdCd2IzQndaWEpnSUdGeVpTQnViM1FnZG1Gc2FXUWdaV3hsYldWdWRITmNiaUFnSUNBZ0lDQWdMeThnWVc1NWJXOXlaVnh1WEc0Z0lDQWdJQ0FnSUdsbUlDZ2hZWEpsVm1Gc2FXUkZiR1Z0Wlc1MGN5aHlaV1psY21WdVkyVXNJSEJ2Y0hCbGNpa3BJSHRjYmlBZ0lDQWdJQ0FnSUNCcFppQW9jSEp2WTJWemN5NWxibll1VGs5RVJWOUZUbFlnSVQwOUlGd2ljSEp2WkhWamRHbHZibHdpS1NCN1hHNGdJQ0FnSUNBZ0lDQWdJQ0JqYjI1emIyeGxMbVZ5Y205eUtFbE9Wa0ZNU1VSZlJVeEZUVVZPVkY5RlVsSlBVaWs3WEc0Z0lDQWdJQ0FnSUNBZ2ZWeHVYRzRnSUNBZ0lDQWdJQ0FnY21WMGRYSnVPMXh1SUNBZ0lDQWdJQ0I5SUM4dklGTjBiM0psSUhSb1pTQnlaV1psY21WdVkyVWdZVzVrSUhCdmNIQmxjaUJ5WldOMGN5QjBieUJpWlNCeVpXRmtJR0o1SUcxdlpHbG1hV1Z5YzF4dVhHNWNiaUFnSUNBZ0lDQWdjM1JoZEdVdWNtVmpkSE1nUFNCN1hHNGdJQ0FnSUNBZ0lDQWdjbVZtWlhKbGJtTmxPaUJuWlhSRGIyMXdiM05wZEdWU1pXTjBLSEpsWm1WeVpXNWpaU3dnWjJWMFQyWm1jMlYwVUdGeVpXNTBLSEJ2Y0hCbGNpa3NJSE4wWVhSbExtOXdkR2x2Ym5NdWMzUnlZWFJsWjNrZ1BUMDlJQ2RtYVhobFpDY3BMRnh1SUNBZ0lDQWdJQ0FnSUhCdmNIQmxjam9nWjJWMFRHRjViM1YwVW1WamRDaHdiM0J3WlhJcFhHNGdJQ0FnSUNBZ0lIMDdJQzh2SUUxdlpHbG1hV1Z5Y3lCb1lYWmxJSFJvWlNCaFltbHNhWFI1SUhSdklISmxjMlYwSUhSb1pTQmpkWEp5Wlc1MElIVndaR0YwWlNCamVXTnNaUzRnVkdobFhHNGdJQ0FnSUNBZ0lDOHZJRzF2YzNRZ1kyOXRiVzl1SUhWelpTQmpZWE5sSUdadmNpQjBhR2x6SUdseklIUm9aU0JnWm14cGNHQWdiVzlrYVdacFpYSWdZMmhoYm1kcGJtY2dkR2hsWEc0Z0lDQWdJQ0FnSUM4dklIQnNZV05sYldWdWRDd2dkMmhwWTJnZ2RHaGxiaUJ1WldWa2N5QjBieUJ5WlMxeWRXNGdZV3hzSUhSb1pTQnRiMlJwWm1sbGNuTXNJR0psWTJGMWMyVWdkR2hsWEc0Z0lDQWdJQ0FnSUM4dklHeHZaMmxqSUhkaGN5QndjbVYyYVc5MWMyeDVJSEpoYmlCbWIzSWdkR2hsSUhCeVpYWnBiM1Z6SUhCc1lXTmxiV1Z1ZENCaGJtUWdhWE1nZEdobGNtVm1iM0psWEc0Z0lDQWdJQ0FnSUM4dklITjBZV3hsTDJsdVkyOXljbVZqZEZ4dVhHNGdJQ0FnSUNBZ0lITjBZWFJsTG5KbGMyVjBJRDBnWm1Gc2MyVTdYRzRnSUNBZ0lDQWdJSE4wWVhSbExuQnNZV05sYldWdWRDQTlJSE4wWVhSbExtOXdkR2x2Ym5NdWNHeGhZMlZ0Wlc1ME95QXZMeUJQYmlCbFlXTm9JSFZ3WkdGMFpTQmplV05zWlN3Z2RHaGxJR0J0YjJScFptbGxjbk5FWVhSaFlDQndjbTl3WlhKMGVTQm1iM0lnWldGamFDQnRiMlJwWm1sbGNseHVJQ0FnSUNBZ0lDQXZMeUJwY3lCbWFXeHNaV1FnZDJsMGFDQjBhR1VnYVc1cGRHbGhiQ0JrWVhSaElITndaV05wWm1sbFpDQmllU0IwYUdVZ2JXOWthV1pwWlhJdUlGUm9hWE1nYldWaGJuTmNiaUFnSUNBZ0lDQWdMeThnYVhRZ1pHOWxjMjRuZENCd1pYSnphWE4wSUdGdVpDQnBjeUJtY21WemFDQnZiaUJsWVdOb0lIVndaR0YwWlM1Y2JpQWdJQ0FnSUNBZ0x5OGdWRzhnWlc1emRYSmxJSEJsY25OcGMzUmxiblFnWkdGMFlTd2dkWE5sSUdBa2UyNWhiV1Y5STNCbGNuTnBjM1JsYm5SZ1hHNWNiaUFnSUNBZ0lDQWdjM1JoZEdVdWIzSmtaWEpsWkUxdlpHbG1hV1Z5Y3k1bWIzSkZZV05vS0daMWJtTjBhVzl1SUNodGIyUnBabWxsY2lrZ2UxeHVJQ0FnSUNBZ0lDQWdJSEpsZEhWeWJpQnpkR0YwWlM1dGIyUnBabWxsY25ORVlYUmhXMjF2WkdsbWFXVnlMbTVoYldWZElEMGdUMkpxWldOMExtRnpjMmxuYmloN2ZTd2diVzlrYVdacFpYSXVaR0YwWVNrN1hHNGdJQ0FnSUNBZ0lIMHBPMXh1SUNBZ0lDQWdJQ0IyWVhJZ1gxOWtaV0oxWjE5c2IyOXdjMTlmSUQwZ01EdGNibHh1SUNBZ0lDQWdJQ0JtYjNJZ0tIWmhjaUJwYm1SbGVDQTlJREE3SUdsdVpHVjRJRHdnYzNSaGRHVXViM0prWlhKbFpFMXZaR2xtYVdWeWN5NXNaVzVuZEdnN0lHbHVaR1Y0S3lzcElIdGNiaUFnSUNBZ0lDQWdJQ0JwWmlBb2NISnZZMlZ6Y3k1bGJuWXVUazlFUlY5RlRsWWdJVDA5SUZ3aWNISnZaSFZqZEdsdmJsd2lLU0I3WEc0Z0lDQWdJQ0FnSUNBZ0lDQmZYMlJsWW5WblgyeHZiM0J6WDE4Z0t6MGdNVHRjYmx4dUlDQWdJQ0FnSUNBZ0lDQWdhV1lnS0Y5ZlpHVmlkV2RmYkc5dmNITmZYeUErSURFd01Da2dlMXh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQmpiMjV6YjJ4bExtVnljbTl5S0VsT1JrbE9TVlJGWDB4UFQxQmZSVkpTVDFJcE8xeHVJQ0FnSUNBZ0lDQWdJQ0FnSUNCaWNtVmhhenRjYmlBZ0lDQWdJQ0FnSUNBZ0lIMWNiaUFnSUNBZ0lDQWdJQ0I5WEc1Y2JpQWdJQ0FnSUNBZ0lDQnBaaUFvYzNSaGRHVXVjbVZ6WlhRZ1BUMDlJSFJ5ZFdVcElIdGNiaUFnSUNBZ0lDQWdJQ0FnSUhOMFlYUmxMbkpsYzJWMElEMGdabUZzYzJVN1hHNGdJQ0FnSUNBZ0lDQWdJQ0JwYm1SbGVDQTlJQzB4TzF4dUlDQWdJQ0FnSUNBZ0lDQWdZMjl1ZEdsdWRXVTdYRzRnSUNBZ0lDQWdJQ0FnZlZ4dVhHNGdJQ0FnSUNBZ0lDQWdkbUZ5SUY5emRHRjBaU1J2Y21SbGNtVmtUVzlrYVdacFpTQTlJSE4wWVhSbExtOXlaR1Z5WldSTmIyUnBabWxsY25OYmFXNWtaWGhkTEZ4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0JtYmlBOUlGOXpkR0YwWlNSdmNtUmxjbVZrVFc5a2FXWnBaUzVtYml4Y2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnWDNOMFlYUmxKRzl5WkdWeVpXUk5iMlJwWm1sbE1pQTlJRjl6ZEdGMFpTUnZjbVJsY21Wa1RXOWthV1pwWlM1dmNIUnBiMjV6TEZ4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0JmYjNCMGFXOXVjeUE5SUY5emRHRjBaU1J2Y21SbGNtVmtUVzlrYVdacFpUSWdQVDA5SUhadmFXUWdNQ0EvSUh0OUlEb2dYM04wWVhSbEpHOXlaR1Z5WldSTmIyUnBabWxsTWl4Y2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnYm1GdFpTQTlJRjl6ZEdGMFpTUnZjbVJsY21Wa1RXOWthV1pwWlM1dVlXMWxPMXh1WEc0Z0lDQWdJQ0FnSUNBZ2FXWWdLSFI1Y0dWdlppQm1iaUE5UFQwZ0oyWjFibU4wYVc5dUp5a2dlMXh1SUNBZ0lDQWdJQ0FnSUNBZ2MzUmhkR1VnUFNCbWJpaDdYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lITjBZWFJsT2lCemRHRjBaU3hjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdiM0IwYVc5dWN6b2dYMjl3ZEdsdmJuTXNYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lHNWhiV1U2SUc1aGJXVXNYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lHbHVjM1JoYm1ObE9pQnBibk4wWVc1alpWeHVJQ0FnSUNBZ0lDQWdJQ0FnZlNrZ2ZId2djM1JoZEdVN1hHNGdJQ0FnSUNBZ0lDQWdmVnh1SUNBZ0lDQWdJQ0I5WEc0Z0lDQWdJQ0I5TEZ4dUlDQWdJQ0FnTHk4Z1FYTjVibU1nWVc1a0lHOXdkR2x0YVhOMGFXTmhiR3g1SUc5d2RHbHRhWHBsWkNCMWNHUmhkR1VnNG9DVElHbDBJSGRwYkd3Z2JtOTBJR0psSUdWNFpXTjFkR1ZrSUdsbVhHNGdJQ0FnSUNBdkx5QnViM1FnYm1WalpYTnpZWEo1SUNoa1pXSnZkVzVqWldRZ2RHOGdjblZ1SUdGMElHMXZjM1FnYjI1alpTMXdaWEl0ZEdsamF5bGNiaUFnSUNBZ0lIVndaR0YwWlRvZ1pHVmliM1Z1WTJVb1puVnVZM1JwYjI0Z0tDa2dlMXh1SUNBZ0lDQWdJQ0J5WlhSMWNtNGdibVYzSUZCeWIyMXBjMlVvWm5WdVkzUnBiMjRnS0hKbGMyOXNkbVVwSUh0Y2JpQWdJQ0FnSUNBZ0lDQnBibk4wWVc1alpTNW1iM0pqWlZWd1pHRjBaU2dwTzF4dUlDQWdJQ0FnSUNBZ0lISmxjMjlzZG1Vb2MzUmhkR1VwTzF4dUlDQWdJQ0FnSUNCOUtUdGNiaUFnSUNBZ0lIMHBMRnh1SUNBZ0lDQWdaR1Z6ZEhKdmVUb2dablZ1WTNScGIyNGdaR1Z6ZEhKdmVTZ3BJSHRjYmlBZ0lDQWdJQ0FnWTJ4bFlXNTFjRTF2WkdsbWFXVnlSV1ptWldOMGN5Z3BPMXh1SUNBZ0lDQWdJQ0JwYzBSbGMzUnliM2xsWkNBOUlIUnlkV1U3WEc0Z0lDQWdJQ0I5WEc0Z0lDQWdmVHRjYmx4dUlDQWdJR2xtSUNnaFlYSmxWbUZzYVdSRmJHVnRaVzUwY3loeVpXWmxjbVZ1WTJVc0lIQnZjSEJsY2lrcElIdGNiaUFnSUNBZ0lHbG1JQ2h3Y205alpYTnpMbVZ1ZGk1T1QwUkZYMFZPVmlBaFBUMGdYQ0p3Y205a2RXTjBhVzl1WENJcElIdGNiaUFnSUNBZ0lDQWdZMjl1YzI5c1pTNWxjbkp2Y2loSlRsWkJURWxFWDBWTVJVMUZUbFJmUlZKU1QxSXBPMXh1SUNBZ0lDQWdmVnh1WEc0Z0lDQWdJQ0J5WlhSMWNtNGdhVzV6ZEdGdVkyVTdYRzRnSUNBZ2ZWeHVYRzRnSUNBZ2FXNXpkR0Z1WTJVdWMyVjBUM0IwYVc5dWN5aHZjSFJwYjI1ektTNTBhR1Z1S0daMWJtTjBhVzl1SUNoemRHRjBaU2tnZTF4dUlDQWdJQ0FnYVdZZ0tDRnBjMFJsYzNSeWIzbGxaQ0FtSmlCdmNIUnBiMjV6TG05dVJtbHljM1JWY0dSaGRHVXBJSHRjYmlBZ0lDQWdJQ0FnYjNCMGFXOXVjeTV2YmtacGNuTjBWWEJrWVhSbEtITjBZWFJsS1R0Y2JpQWdJQ0FnSUgxY2JpQWdJQ0I5S1RzZ0x5OGdUVzlrYVdacFpYSnpJR2hoZG1VZ2RHaGxJR0ZpYVd4cGRIa2dkRzhnWlhobFkzVjBaU0JoY21KcGRISmhjbmtnWTI5a1pTQmlaV1p2Y21VZ2RHaGxJR1pwY25OMFhHNGdJQ0FnTHk4Z2RYQmtZWFJsSUdONVkyeGxJSEoxYm5NdUlGUm9aWGtnZDJsc2JDQmlaU0JsZUdWamRYUmxaQ0JwYmlCMGFHVWdjMkZ0WlNCdmNtUmxjaUJoY3lCMGFHVWdkWEJrWVhSbFhHNGdJQ0FnTHk4Z1kzbGpiR1V1SUZSb2FYTWdhWE1nZFhObFpuVnNJSGRvWlc0Z1lTQnRiMlJwWm1sbGNpQmhaR1J6SUhOdmJXVWdjR1Z5YzJsemRHVnVkQ0JrWVhSaElIUm9ZWFJjYmlBZ0lDQXZMeUJ2ZEdobGNpQnRiMlJwWm1sbGNuTWdibVZsWkNCMGJ5QjFjMlVzSUdKMWRDQjBhR1VnYlc5a2FXWnBaWElnYVhNZ2NuVnVJR0ZtZEdWeUlIUm9aU0JrWlhCbGJtUmxiblJjYmlBZ0lDQXZMeUJ2Ym1VdVhHNWNiaUFnSUNCbWRXNWpkR2x2YmlCeWRXNU5iMlJwWm1sbGNrVm1abVZqZEhNb0tTQjdYRzRnSUNBZ0lDQnpkR0YwWlM1dmNtUmxjbVZrVFc5a2FXWnBaWEp6TG1admNrVmhZMmdvWm5WdVkzUnBiMjRnS0Y5eVpXWXpLU0I3WEc0Z0lDQWdJQ0FnSUhaaGNpQnVZVzFsSUQwZ1gzSmxaak11Ym1GdFpTeGNiaUFnSUNBZ0lDQWdJQ0FnSUY5eVpXWXpKRzl3ZEdsdmJuTWdQU0JmY21WbU15NXZjSFJwYjI1ekxGeHVJQ0FnSUNBZ0lDQWdJQ0FnYjNCMGFXOXVjeUE5SUY5eVpXWXpKRzl3ZEdsdmJuTWdQVDA5SUhadmFXUWdNQ0EvSUh0OUlEb2dYM0psWmpNa2IzQjBhVzl1Y3l4Y2JpQWdJQ0FnSUNBZ0lDQWdJR1ZtWm1WamRDQTlJRjl5WldZekxtVm1abVZqZER0Y2JseHVJQ0FnSUNBZ0lDQnBaaUFvZEhsd1pXOW1JR1ZtWm1WamRDQTlQVDBnSjJaMWJtTjBhVzl1SnlrZ2UxeHVJQ0FnSUNBZ0lDQWdJSFpoY2lCamJHVmhiblZ3Um00Z1BTQmxabVpsWTNRb2UxeHVJQ0FnSUNBZ0lDQWdJQ0FnYzNSaGRHVTZJSE4wWVhSbExGeHVJQ0FnSUNBZ0lDQWdJQ0FnYm1GdFpUb2dibUZ0WlN4Y2JpQWdJQ0FnSUNBZ0lDQWdJR2x1YzNSaGJtTmxPaUJwYm5OMFlXNWpaU3hjYmlBZ0lDQWdJQ0FnSUNBZ0lHOXdkR2x2Ym5NNklHOXdkR2x2Ym5OY2JpQWdJQ0FnSUNBZ0lDQjlLVHRjYmx4dUlDQWdJQ0FnSUNBZ0lIWmhjaUJ1YjI5d1JtNGdQU0JtZFc1amRHbHZiaUJ1YjI5d1JtNG9LU0I3ZlR0Y2JseHVJQ0FnSUNBZ0lDQWdJR1ZtWm1WamRFTnNaV0Z1ZFhCR2JuTXVjSFZ6YUNoamJHVmhiblZ3Um00Z2ZId2dibTl2Y0VadUtUdGNiaUFnSUNBZ0lDQWdmVnh1SUNBZ0lDQWdmU2s3WEc0Z0lDQWdmVnh1WEc0Z0lDQWdablZ1WTNScGIyNGdZMnhsWVc1MWNFMXZaR2xtYVdWeVJXWm1aV04wY3lncElIdGNiaUFnSUNBZ0lHVm1abVZqZEVOc1pXRnVkWEJHYm5NdVptOXlSV0ZqYUNobWRXNWpkR2x2YmlBb1ptNHBJSHRjYmlBZ0lDQWdJQ0FnY21WMGRYSnVJR1p1S0NrN1hHNGdJQ0FnSUNCOUtUdGNiaUFnSUNBZ0lHVm1abVZqZEVOc1pXRnVkWEJHYm5NZ1BTQmJYVHRjYmlBZ0lDQjlYRzVjYmlBZ0lDQnlaWFIxY200Z2FXNXpkR0Z1WTJVN1hHNGdJSDA3WEc1OVhHNWxlSEJ2Y25RZ2RtRnlJR055WldGMFpWQnZjSEJsY2lBOUlDOHFJMTlmVUZWU1JWOWZLaTl3YjNCd1pYSkhaVzVsY21GMGIzSW9LVHNnTHk4Z1pYTnNhVzUwTFdScGMyRmliR1V0Ym1WNGRDMXNhVzVsSUdsdGNHOXlkQzl1YnkxMWJuVnpaV1F0Ylc5a2RXeGxjMXh1WEc1bGVIQnZjblFnZXlCa1pYUmxZM1JQZG1WeVpteHZkeUI5T3lJc0ltbHRjRzl5ZENCN0lHbHpVMmhoWkc5M1VtOXZkQ0I5SUdaeWIyMGdYQ0l1TDJsdWMzUmhibU5sVDJZdWFuTmNJanRjYm1WNGNHOXlkQ0JrWldaaGRXeDBJR1oxYm1OMGFXOXVJR052Ym5SaGFXNXpLSEJoY21WdWRDd2dZMmhwYkdRcElIdGNiaUFnZG1GeUlISnZiM1JPYjJSbElEMGdZMmhwYkdRdVoyVjBVbTl2ZEU1dlpHVWdKaVlnWTJocGJHUXVaMlYwVW05dmRFNXZaR1VvS1RzZ0x5OGdSbWx5YzNRc0lHRjBkR1Z0Y0hRZ2QybDBhQ0JtWVhOMFpYSWdibUYwYVhabElHMWxkR2h2WkZ4dVhHNGdJR2xtSUNod1lYSmxiblF1WTI5dWRHRnBibk1vWTJocGJHUXBLU0I3WEc0Z0lDQWdjbVYwZFhKdUlIUnlkV1U3WEc0Z0lIMGdMeThnZEdobGJpQm1ZV3hzWW1GamF5QjBieUJqZFhOMGIyMGdhVzF3YkdWdFpXNTBZWFJwYjI0Z2QybDBhQ0JUYUdGa2IzY2dSRTlOSUhOMWNIQnZjblJjYmlBZ1pXeHpaU0JwWmlBb2NtOXZkRTV2WkdVZ0ppWWdhWE5UYUdGa2IzZFNiMjkwS0hKdmIzUk9iMlJsS1NrZ2UxeHVJQ0FnSUNBZ2RtRnlJRzVsZUhRZ1BTQmphR2xzWkR0Y2JseHVJQ0FnSUNBZ1pHOGdlMXh1SUNBZ0lDQWdJQ0JwWmlBb2JtVjRkQ0FtSmlCd1lYSmxiblF1YVhOVFlXMWxUbTlrWlNodVpYaDBLU2tnZTF4dUlDQWdJQ0FnSUNBZ0lISmxkSFZ5YmlCMGNuVmxPMXh1SUNBZ0lDQWdJQ0I5SUM4dklDUkdiRzkzUm1sNFRXVmJjSEp2Y0MxdGFYTnphVzVuWFRvZ2JtVmxaQ0JoSUdKbGRIUmxjaUIzWVhrZ2RHOGdhR0Z1Wkd4bElIUm9hWE11TGk1Y2JseHVYRzRnSUNBZ0lDQWdJRzVsZUhRZ1BTQnVaWGgwTG5CaGNtVnVkRTV2WkdVZ2ZId2dibVY0ZEM1b2IzTjBPMXh1SUNBZ0lDQWdmU0IzYUdsc1pTQW9ibVY0ZENrN1hHNGdJQ0FnZlNBdkx5QkhhWFpsSUhWd0xDQjBhR1VnY21WemRXeDBJR2x6SUdaaGJITmxYRzVjYmx4dUlDQnlaWFIxY200Z1ptRnNjMlU3WEc1OUlpd2lhVzF3YjNKMElIc2dhWE5GYkdWdFpXNTBMQ0JwYzBoVVRVeEZiR1Z0Wlc1MElIMGdabkp2YlNCY0lpNHZhVzV6ZEdGdVkyVlBaaTVxYzF3aU8xeHVhVzF3YjNKMElIc2djbTkxYm1RZ2ZTQm1jbTl0SUZ3aUxpNHZkWFJwYkhNdmJXRjBhQzVxYzF3aU8xeHVhVzF3YjNKMElHZGxkRmRwYm1SdmR5Qm1jbTl0SUZ3aUxpOW5aWFJYYVc1a2IzY3Vhbk5jSWp0Y2JtbHRjRzl5ZENCcGMweGhlVzkxZEZacFpYZHdiM0owSUdaeWIyMGdYQ0l1TDJselRHRjViM1YwVm1sbGQzQnZjblF1YW5OY0lqdGNibVY0Y0c5eWRDQmtaV1poZFd4MElHWjFibU4wYVc5dUlHZGxkRUp2ZFc1a2FXNW5RMnhwWlc1MFVtVmpkQ2hsYkdWdFpXNTBMQ0JwYm1Oc2RXUmxVMk5oYkdVc0lHbHpSbWw0WldSVGRISmhkR1ZuZVNrZ2UxeHVJQ0JwWmlBb2FXNWpiSFZrWlZOallXeGxJRDA5UFNCMmIybGtJREFwSUh0Y2JpQWdJQ0JwYm1Oc2RXUmxVMk5oYkdVZ1BTQm1ZV3h6WlR0Y2JpQWdmVnh1WEc0Z0lHbG1JQ2hwYzBacGVHVmtVM1J5WVhSbFoza2dQVDA5SUhadmFXUWdNQ2tnZTF4dUlDQWdJR2x6Um1sNFpXUlRkSEpoZEdWbmVTQTlJR1poYkhObE8xeHVJQ0I5WEc1Y2JpQWdkbUZ5SUdOc2FXVnVkRkpsWTNRZ1BTQmxiR1Z0Wlc1MExtZGxkRUp2ZFc1a2FXNW5RMnhwWlc1MFVtVmpkQ2dwTzF4dUlDQjJZWElnYzJOaGJHVllJRDBnTVR0Y2JpQWdkbUZ5SUhOallXeGxXU0E5SURFN1hHNWNiaUFnYVdZZ0tHbHVZMngxWkdWVFkyRnNaU0FtSmlCcGMwaFVUVXhGYkdWdFpXNTBLR1ZzWlcxbGJuUXBLU0I3WEc0Z0lDQWdjMk5oYkdWWUlEMGdaV3hsYldWdWRDNXZabVp6WlhSWGFXUjBhQ0ErSURBZ1B5QnliM1Z1WkNoamJHbGxiblJTWldOMExuZHBaSFJvS1NBdklHVnNaVzFsYm5RdWIyWm1jMlYwVjJsa2RHZ2dmSHdnTVNBNklERTdYRzRnSUNBZ2MyTmhiR1ZaSUQwZ1pXeGxiV1Z1ZEM1dlptWnpaWFJJWldsbmFIUWdQaUF3SUQ4Z2NtOTFibVFvWTJ4cFpXNTBVbVZqZEM1b1pXbG5hSFFwSUM4Z1pXeGxiV1Z1ZEM1dlptWnpaWFJJWldsbmFIUWdmSHdnTVNBNklERTdYRzRnSUgxY2JseHVJQ0IyWVhJZ1gzSmxaaUE5SUdselJXeGxiV1Z1ZENobGJHVnRaVzUwS1NBL0lHZGxkRmRwYm1SdmR5aGxiR1Z0Wlc1MEtTQTZJSGRwYm1SdmR5eGNiaUFnSUNBZ0lIWnBjM1ZoYkZacFpYZHdiM0owSUQwZ1gzSmxaaTUyYVhOMVlXeFdhV1YzY0c5eWREdGNibHh1SUNCMllYSWdZV1JrVm1semRXRnNUMlptYzJWMGN5QTlJQ0ZwYzB4aGVXOTFkRlpwWlhkd2IzSjBLQ2tnSmlZZ2FYTkdhWGhsWkZOMGNtRjBaV2Q1TzF4dUlDQjJZWElnZUNBOUlDaGpiR2xsYm5SU1pXTjBMbXhsWm5RZ0t5QW9ZV1JrVm1semRXRnNUMlptYzJWMGN5QW1KaUIyYVhOMVlXeFdhV1YzY0c5eWRDQS9JSFpwYzNWaGJGWnBaWGR3YjNKMExtOW1abk5sZEV4bFpuUWdPaUF3S1NrZ0x5QnpZMkZzWlZnN1hHNGdJSFpoY2lCNUlEMGdLR05zYVdWdWRGSmxZM1F1ZEc5d0lDc2dLR0ZrWkZacGMzVmhiRTltWm5ObGRITWdKaVlnZG1semRXRnNWbWxsZDNCdmNuUWdQeUIyYVhOMVlXeFdhV1YzY0c5eWRDNXZabVp6WlhSVWIzQWdPaUF3S1NrZ0x5QnpZMkZzWlZrN1hHNGdJSFpoY2lCM2FXUjBhQ0E5SUdOc2FXVnVkRkpsWTNRdWQybGtkR2dnTHlCelkyRnNaVmc3WEc0Z0lIWmhjaUJvWldsbmFIUWdQU0JqYkdsbGJuUlNaV04wTG1obGFXZG9kQ0F2SUhOallXeGxXVHRjYmlBZ2NtVjBkWEp1SUh0Y2JpQWdJQ0IzYVdSMGFEb2dkMmxrZEdnc1hHNGdJQ0FnYUdWcFoyaDBPaUJvWldsbmFIUXNYRzRnSUNBZ2RHOXdPaUI1TEZ4dUlDQWdJSEpwWjJoME9pQjRJQ3NnZDJsa2RHZ3NYRzRnSUNBZ1ltOTBkRzl0T2lCNUlDc2dhR1ZwWjJoMExGeHVJQ0FnSUd4bFpuUTZJSGdzWEc0Z0lDQWdlRG9nZUN4Y2JpQWdJQ0I1T2lCNVhHNGdJSDA3WEc1OUlpd2lhVzF3YjNKMElIc2dkbWxsZDNCdmNuUWdmU0JtY205dElGd2lMaTR2Wlc1MWJYTXVhbk5jSWp0Y2JtbHRjRzl5ZENCblpYUldhV1YzY0c5eWRGSmxZM1FnWm5KdmJTQmNJaTR2WjJWMFZtbGxkM0J2Y25SU1pXTjBMbXB6WENJN1hHNXBiWEJ2Y25RZ1oyVjBSRzlqZFcxbGJuUlNaV04wSUdaeWIyMGdYQ0l1TDJkbGRFUnZZM1Z0Wlc1MFVtVmpkQzVxYzF3aU8xeHVhVzF3YjNKMElHeHBjM1JUWTNKdmJHeFFZWEpsYm5SeklHWnliMjBnWENJdUwyeHBjM1JUWTNKdmJHeFFZWEpsYm5SekxtcHpYQ0k3WEc1cGJYQnZjblFnWjJWMFQyWm1jMlYwVUdGeVpXNTBJR1p5YjIwZ1hDSXVMMmRsZEU5bVpuTmxkRkJoY21WdWRDNXFjMXdpTzF4dWFXMXdiM0owSUdkbGRFUnZZM1Z0Wlc1MFJXeGxiV1Z1ZENCbWNtOXRJRndpTGk5blpYUkViMk4xYldWdWRFVnNaVzFsYm5RdWFuTmNJanRjYm1sdGNHOXlkQ0JuWlhSRGIyMXdkWFJsWkZOMGVXeGxJR1p5YjIwZ1hDSXVMMmRsZEVOdmJYQjFkR1ZrVTNSNWJHVXVhbk5jSWp0Y2JtbHRjRzl5ZENCN0lHbHpSV3hsYldWdWRDd2dhWE5JVkUxTVJXeGxiV1Z1ZENCOUlHWnliMjBnWENJdUwybHVjM1JoYm1ObFQyWXVhbk5jSWp0Y2JtbHRjRzl5ZENCblpYUkNiM1Z1WkdsdVowTnNhV1Z1ZEZKbFkzUWdabkp2YlNCY0lpNHZaMlYwUW05MWJtUnBibWREYkdsbGJuUlNaV04wTG1welhDSTdYRzVwYlhCdmNuUWdaMlYwVUdGeVpXNTBUbTlrWlNCbWNtOXRJRndpTGk5blpYUlFZWEpsYm5ST2IyUmxMbXB6WENJN1hHNXBiWEJ2Y25RZ1kyOXVkR0ZwYm5NZ1puSnZiU0JjSWk0dlkyOXVkR0ZwYm5NdWFuTmNJanRjYm1sdGNHOXlkQ0JuWlhST2IyUmxUbUZ0WlNCbWNtOXRJRndpTGk5blpYUk9iMlJsVG1GdFpTNXFjMXdpTzF4dWFXMXdiM0owSUhKbFkzUlViME5zYVdWdWRGSmxZM1FnWm5KdmJTQmNJaTR1TDNWMGFXeHpMM0psWTNSVWIwTnNhV1Z1ZEZKbFkzUXVhbk5jSWp0Y2JtbHRjRzl5ZENCN0lHMWhlQ3dnYldsdUlIMGdabkp2YlNCY0lpNHVMM1YwYVd4ekwyMWhkR2d1YW5OY0lqdGNibHh1Wm5WdVkzUnBiMjRnWjJWMFNXNXVaWEpDYjNWdVpHbHVaME5zYVdWdWRGSmxZM1FvWld4bGJXVnVkQ3dnYzNSeVlYUmxaM2twSUh0Y2JpQWdkbUZ5SUhKbFkzUWdQU0JuWlhSQ2IzVnVaR2x1WjBOc2FXVnVkRkpsWTNRb1pXeGxiV1Z1ZEN3Z1ptRnNjMlVzSUhOMGNtRjBaV2Q1SUQwOVBTQW5abWw0WldRbktUdGNiaUFnY21WamRDNTBiM0FnUFNCeVpXTjBMblJ2Y0NBcklHVnNaVzFsYm5RdVkyeHBaVzUwVkc5d08xeHVJQ0J5WldOMExteGxablFnUFNCeVpXTjBMbXhsWm5RZ0t5QmxiR1Z0Wlc1MExtTnNhV1Z1ZEV4bFpuUTdYRzRnSUhKbFkzUXVZbTkwZEc5dElEMGdjbVZqZEM1MGIzQWdLeUJsYkdWdFpXNTBMbU5zYVdWdWRFaGxhV2RvZER0Y2JpQWdjbVZqZEM1eWFXZG9kQ0E5SUhKbFkzUXViR1ZtZENBcklHVnNaVzFsYm5RdVkyeHBaVzUwVjJsa2RHZzdYRzRnSUhKbFkzUXVkMmxrZEdnZ1BTQmxiR1Z0Wlc1MExtTnNhV1Z1ZEZkcFpIUm9PMXh1SUNCeVpXTjBMbWhsYVdkb2RDQTlJR1ZzWlcxbGJuUXVZMnhwWlc1MFNHVnBaMmgwTzF4dUlDQnlaV04wTG5nZ1BTQnlaV04wTG14bFpuUTdYRzRnSUhKbFkzUXVlU0E5SUhKbFkzUXVkRzl3TzF4dUlDQnlaWFIxY200Z2NtVmpkRHRjYm4xY2JseHVablZ1WTNScGIyNGdaMlYwUTJ4cFpXNTBVbVZqZEVaeWIyMU5hWGhsWkZSNWNHVW9aV3hsYldWdWRDd2dZMnhwY0hCcGJtZFFZWEpsYm5Rc0lITjBjbUYwWldkNUtTQjdYRzRnSUhKbGRIVnliaUJqYkdsd2NHbHVaMUJoY21WdWRDQTlQVDBnZG1sbGQzQnZjblFnUHlCeVpXTjBWRzlEYkdsbGJuUlNaV04wS0dkbGRGWnBaWGR3YjNKMFVtVmpkQ2hsYkdWdFpXNTBMQ0J6ZEhKaGRHVm5lU2twSURvZ2FYTkZiR1Z0Wlc1MEtHTnNhWEJ3YVc1blVHRnlaVzUwS1NBL0lHZGxkRWx1Ym1WeVFtOTFibVJwYm1kRGJHbGxiblJTWldOMEtHTnNhWEJ3YVc1blVHRnlaVzUwTENCemRISmhkR1ZuZVNrZ09pQnlaV04wVkc5RGJHbGxiblJTWldOMEtHZGxkRVJ2WTNWdFpXNTBVbVZqZENoblpYUkViMk4xYldWdWRFVnNaVzFsYm5Rb1pXeGxiV1Z1ZENrcEtUdGNibjBnTHk4Z1FTQmNJbU5zYVhCd2FXNW5JSEJoY21WdWRGd2lJR2x6SUdGdUlHOTJaWEptYkc5M1lXSnNaU0JqYjI1MFlXbHVaWElnZDJsMGFDQjBhR1VnWTJoaGNtRmpkR1Z5YVhOMGFXTWdiMlpjYmk4dklHTnNhWEJ3YVc1bklDaHZjaUJvYVdScGJtY3BJRzkyWlhKbWJHOTNhVzVuSUdWc1pXMWxiblJ6SUhkcGRHZ2dZU0J3YjNOcGRHbHZiaUJrYVdabVpYSmxiblFnWm5KdmJWeHVMeThnWUdsdWFYUnBZV3hnWEc1Y2JseHVablZ1WTNScGIyNGdaMlYwUTJ4cGNIQnBibWRRWVhKbGJuUnpLR1ZzWlcxbGJuUXBJSHRjYmlBZ2RtRnlJR05zYVhCd2FXNW5VR0Z5Wlc1MGN5QTlJR3hwYzNSVFkzSnZiR3hRWVhKbGJuUnpLR2RsZEZCaGNtVnVkRTV2WkdVb1pXeGxiV1Z1ZENrcE8xeHVJQ0IyWVhJZ1kyRnVSWE5qWVhCbFEyeHBjSEJwYm1jZ1BTQmJKMkZpYzI5c2RYUmxKeXdnSjJacGVHVmtKMTB1YVc1a1pYaFBaaWhuWlhSRGIyMXdkWFJsWkZOMGVXeGxLR1ZzWlcxbGJuUXBMbkJ2YzJsMGFXOXVLU0ErUFNBd08xeHVJQ0IyWVhJZ1kyeHBjSEJsY2tWc1pXMWxiblFnUFNCallXNUZjMk5oY0dWRGJHbHdjR2x1WnlBbUppQnBjMGhVVFV4RmJHVnRaVzUwS0dWc1pXMWxiblFwSUQ4Z1oyVjBUMlptYzJWMFVHRnlaVzUwS0dWc1pXMWxiblFwSURvZ1pXeGxiV1Z1ZER0Y2JseHVJQ0JwWmlBb0lXbHpSV3hsYldWdWRDaGpiR2x3Y0dWeVJXeGxiV1Z1ZENrcElIdGNiaUFnSUNCeVpYUjFjbTRnVzEwN1hHNGdJSDBnTHk4Z0pFWnNiM2RHYVhoTlpWdHBibU52YlhCaGRHbGliR1V0Y21WMGRYSnVYVG9nYUhSMGNITTZMeTluYVhSb2RXSXVZMjl0TDJaaFkyVmliMjlyTDJac2IzY3ZhWE56ZFdWekx6RTBNVFJjYmx4dVhHNGdJSEpsZEhWeWJpQmpiR2x3Y0dsdVoxQmhjbVZ1ZEhNdVptbHNkR1Z5S0daMWJtTjBhVzl1SUNoamJHbHdjR2x1WjFCaGNtVnVkQ2tnZTF4dUlDQWdJSEpsZEhWeWJpQnBjMFZzWlcxbGJuUW9ZMnhwY0hCcGJtZFFZWEpsYm5RcElDWW1JR052Ym5SaGFXNXpLR05zYVhCd2FXNW5VR0Z5Wlc1MExDQmpiR2x3Y0dWeVJXeGxiV1Z1ZENrZ0ppWWdaMlYwVG05a1pVNWhiV1VvWTJ4cGNIQnBibWRRWVhKbGJuUXBJQ0U5UFNBblltOWtlU2M3WEc0Z0lIMHBPMXh1ZlNBdkx5QkhaWFJ6SUhSb1pTQnRZWGhwYlhWdElHRnlaV0VnZEdoaGRDQjBhR1VnWld4bGJXVnVkQ0JwY3lCMmFYTnBZbXhsSUdsdUlHUjFaU0IwYnlCaGJua2diblZ0WW1WeUlHOW1YRzR2THlCamJHbHdjR2x1WnlCd1lYSmxiblJ6WEc1Y2JseHVaWGh3YjNKMElHUmxabUYxYkhRZ1puVnVZM1JwYjI0Z1oyVjBRMnhwY0hCcGJtZFNaV04wS0dWc1pXMWxiblFzSUdKdmRXNWtZWEo1TENCeWIyOTBRbTkxYm1SaGNua3NJSE4wY21GMFpXZDVLU0I3WEc0Z0lIWmhjaUJ0WVdsdVEyeHBjSEJwYm1kUVlYSmxiblJ6SUQwZ1ltOTFibVJoY25rZ1BUMDlJQ2RqYkdsd2NHbHVaMUJoY21WdWRITW5JRDhnWjJWMFEyeHBjSEJwYm1kUVlYSmxiblJ6S0dWc1pXMWxiblFwSURvZ1cxMHVZMjl1WTJGMEtHSnZkVzVrWVhKNUtUdGNiaUFnZG1GeUlHTnNhWEJ3YVc1blVHRnlaVzUwY3lBOUlGdGRMbU52Ym1OaGRDaHRZV2x1UTJ4cGNIQnBibWRRWVhKbGJuUnpMQ0JiY205dmRFSnZkVzVrWVhKNVhTazdYRzRnSUhaaGNpQm1hWEp6ZEVOc2FYQndhVzVuVUdGeVpXNTBJRDBnWTJ4cGNIQnBibWRRWVhKbGJuUnpXekJkTzF4dUlDQjJZWElnWTJ4cGNIQnBibWRTWldOMElEMGdZMnhwY0hCcGJtZFFZWEpsYm5SekxuSmxaSFZqWlNobWRXNWpkR2x2YmlBb1lXTmpVbVZqZEN3Z1kyeHBjSEJwYm1kUVlYSmxiblFwSUh0Y2JpQWdJQ0IyWVhJZ2NtVmpkQ0E5SUdkbGRFTnNhV1Z1ZEZKbFkzUkdjbTl0VFdsNFpXUlVlWEJsS0dWc1pXMWxiblFzSUdOc2FYQndhVzVuVUdGeVpXNTBMQ0J6ZEhKaGRHVm5lU2s3WEc0Z0lDQWdZV05qVW1WamRDNTBiM0FnUFNCdFlYZ29jbVZqZEM1MGIzQXNJR0ZqWTFKbFkzUXVkRzl3S1R0Y2JpQWdJQ0JoWTJOU1pXTjBMbkpwWjJoMElEMGdiV2x1S0hKbFkzUXVjbWxuYUhRc0lHRmpZMUpsWTNRdWNtbG5hSFFwTzF4dUlDQWdJR0ZqWTFKbFkzUXVZbTkwZEc5dElEMGdiV2x1S0hKbFkzUXVZbTkwZEc5dExDQmhZMk5TWldOMExtSnZkSFJ2YlNrN1hHNGdJQ0FnWVdOalVtVmpkQzVzWldaMElEMGdiV0Y0S0hKbFkzUXViR1ZtZEN3Z1lXTmpVbVZqZEM1c1pXWjBLVHRjYmlBZ0lDQnlaWFIxY200Z1lXTmpVbVZqZER0Y2JpQWdmU3dnWjJWMFEyeHBaVzUwVW1WamRFWnliMjFOYVhobFpGUjVjR1VvWld4bGJXVnVkQ3dnWm1seWMzUkRiR2x3Y0dsdVoxQmhjbVZ1ZEN3Z2MzUnlZWFJsWjNrcEtUdGNiaUFnWTJ4cGNIQnBibWRTWldOMExuZHBaSFJvSUQwZ1kyeHBjSEJwYm1kU1pXTjBMbkpwWjJoMElDMGdZMnhwY0hCcGJtZFNaV04wTG14bFpuUTdYRzRnSUdOc2FYQndhVzVuVW1WamRDNW9aV2xuYUhRZ1BTQmpiR2x3Y0dsdVoxSmxZM1F1WW05MGRHOXRJQzBnWTJ4cGNIQnBibWRTWldOMExuUnZjRHRjYmlBZ1kyeHBjSEJwYm1kU1pXTjBMbmdnUFNCamJHbHdjR2x1WjFKbFkzUXViR1ZtZER0Y2JpQWdZMnhwY0hCcGJtZFNaV04wTG5rZ1BTQmpiR2x3Y0dsdVoxSmxZM1F1ZEc5d08xeHVJQ0J5WlhSMWNtNGdZMnhwY0hCcGJtZFNaV04wTzF4dWZTSXNJbWx0Y0c5eWRDQm5aWFJDYjNWdVpHbHVaME5zYVdWdWRGSmxZM1FnWm5KdmJTQmNJaTR2WjJWMFFtOTFibVJwYm1kRGJHbGxiblJTWldOMExtcHpYQ0k3WEc1cGJYQnZjblFnWjJWMFRtOWtaVk5qY205c2JDQm1jbTl0SUZ3aUxpOW5aWFJPYjJSbFUyTnliMnhzTG1welhDSTdYRzVwYlhCdmNuUWdaMlYwVG05a1pVNWhiV1VnWm5KdmJTQmNJaTR2WjJWMFRtOWtaVTVoYldVdWFuTmNJanRjYm1sdGNHOXlkQ0I3SUdselNGUk5URVZzWlcxbGJuUWdmU0JtY205dElGd2lMaTlwYm5OMFlXNWpaVTltTG1welhDSTdYRzVwYlhCdmNuUWdaMlYwVjJsdVpHOTNVMk55YjJ4c1FtRnlXQ0JtY205dElGd2lMaTluWlhSWGFXNWtiM2RUWTNKdmJHeENZWEpZTG1welhDSTdYRzVwYlhCdmNuUWdaMlYwUkc5amRXMWxiblJGYkdWdFpXNTBJR1p5YjIwZ1hDSXVMMmRsZEVSdlkzVnRaVzUwUld4bGJXVnVkQzVxYzF3aU8xeHVhVzF3YjNKMElHbHpVMk55YjJ4c1VHRnlaVzUwSUdaeWIyMGdYQ0l1TDJselUyTnliMnhzVUdGeVpXNTBMbXB6WENJN1hHNXBiWEJ2Y25RZ2V5QnliM1Z1WkNCOUlHWnliMjBnWENJdUxpOTFkR2xzY3k5dFlYUm9MbXB6WENJN1hHNWNibVoxYm1OMGFXOXVJR2x6Uld4bGJXVnVkRk5qWVd4bFpDaGxiR1Z0Wlc1MEtTQjdYRzRnSUhaaGNpQnlaV04wSUQwZ1pXeGxiV1Z1ZEM1blpYUkNiM1Z1WkdsdVowTnNhV1Z1ZEZKbFkzUW9LVHRjYmlBZ2RtRnlJSE5qWVd4bFdDQTlJSEp2ZFc1a0tISmxZM1F1ZDJsa2RHZ3BJQzhnWld4bGJXVnVkQzV2Wm1aelpYUlhhV1IwYUNCOGZDQXhPMXh1SUNCMllYSWdjMk5oYkdWWklEMGdjbTkxYm1Rb2NtVmpkQzVvWldsbmFIUXBJQzhnWld4bGJXVnVkQzV2Wm1aelpYUklaV2xuYUhRZ2ZId2dNVHRjYmlBZ2NtVjBkWEp1SUhOallXeGxXQ0FoUFQwZ01TQjhmQ0J6WTJGc1pWa2dJVDA5SURFN1hHNTlJQzh2SUZKbGRIVnlibk1nZEdobElHTnZiWEJ2YzJsMFpTQnlaV04wSUc5bUlHRnVJR1ZzWlcxbGJuUWdjbVZzWVhScGRtVWdkRzhnYVhSeklHOW1abk5sZEZCaGNtVnVkQzVjYmk4dklFTnZiWEJ2YzJsMFpTQnRaV0Z1Y3lCcGRDQjBZV3RsY3lCcGJuUnZJR0ZqWTI5MWJuUWdkSEpoYm5ObWIzSnRjeUJoY3lCM1pXeHNJR0Z6SUd4aGVXOTFkQzVjYmx4dVhHNWxlSEJ2Y25RZ1pHVm1ZWFZzZENCbWRXNWpkR2x2YmlCblpYUkRiMjF3YjNOcGRHVlNaV04wS0dWc1pXMWxiblJQY2xacGNuUjFZV3hGYkdWdFpXNTBMQ0J2Wm1aelpYUlFZWEpsYm5Rc0lHbHpSbWw0WldRcElIdGNiaUFnYVdZZ0tHbHpSbWw0WldRZ1BUMDlJSFp2YVdRZ01Da2dlMXh1SUNBZ0lHbHpSbWw0WldRZ1BTQm1ZV3h6WlR0Y2JpQWdmVnh1WEc0Z0lIWmhjaUJwYzA5bVpuTmxkRkJoY21WdWRFRnVSV3hsYldWdWRDQTlJR2x6U0ZSTlRFVnNaVzFsYm5Rb2IyWm1jMlYwVUdGeVpXNTBLVHRjYmlBZ2RtRnlJRzltWm5ObGRGQmhjbVZ1ZEVselUyTmhiR1ZrSUQwZ2FYTklWRTFNUld4bGJXVnVkQ2h2Wm1aelpYUlFZWEpsYm5RcElDWW1JR2x6Uld4bGJXVnVkRk5qWVd4bFpDaHZabVp6WlhSUVlYSmxiblFwTzF4dUlDQjJZWElnWkc5amRXMWxiblJGYkdWdFpXNTBJRDBnWjJWMFJHOWpkVzFsYm5SRmJHVnRaVzUwS0c5bVpuTmxkRkJoY21WdWRDazdYRzRnSUhaaGNpQnlaV04wSUQwZ1oyVjBRbTkxYm1ScGJtZERiR2xsYm5SU1pXTjBLR1ZzWlcxbGJuUlBjbFpwY25SMVlXeEZiR1Z0Wlc1MExDQnZabVp6WlhSUVlYSmxiblJKYzFOallXeGxaQ3dnYVhOR2FYaGxaQ2s3WEc0Z0lIWmhjaUJ6WTNKdmJHd2dQU0I3WEc0Z0lDQWdjMk55YjJ4c1RHVm1kRG9nTUN4Y2JpQWdJQ0J6WTNKdmJHeFViM0E2SURCY2JpQWdmVHRjYmlBZ2RtRnlJRzltWm5ObGRITWdQU0I3WEc0Z0lDQWdlRG9nTUN4Y2JpQWdJQ0I1T2lBd1hHNGdJSDA3WEc1Y2JpQWdhV1lnS0dselQyWm1jMlYwVUdGeVpXNTBRVzVGYkdWdFpXNTBJSHg4SUNGcGMwOW1abk5sZEZCaGNtVnVkRUZ1Uld4bGJXVnVkQ0FtSmlBaGFYTkdhWGhsWkNrZ2UxeHVJQ0FnSUdsbUlDaG5aWFJPYjJSbFRtRnRaU2h2Wm1aelpYUlFZWEpsYm5RcElDRTlQU0FuWW05a2VTY2dmSHdnTHk4Z2FIUjBjSE02THk5bmFYUm9kV0l1WTI5dEwzQnZjSEJsY21wekwzQnZjSEJsY2kxamIzSmxMMmx6YzNWbGN5OHhNRGM0WEc0Z0lDQWdhWE5UWTNKdmJHeFFZWEpsYm5Rb1pHOWpkVzFsYm5SRmJHVnRaVzUwS1NrZ2UxeHVJQ0FnSUNBZ2MyTnliMnhzSUQwZ1oyVjBUbTlrWlZOamNtOXNiQ2h2Wm1aelpYUlFZWEpsYm5RcE8xeHVJQ0FnSUgxY2JseHVJQ0FnSUdsbUlDaHBjMGhVVFV4RmJHVnRaVzUwS0c5bVpuTmxkRkJoY21WdWRDa3BJSHRjYmlBZ0lDQWdJRzltWm5ObGRITWdQU0JuWlhSQ2IzVnVaR2x1WjBOc2FXVnVkRkpsWTNRb2IyWm1jMlYwVUdGeVpXNTBMQ0IwY25WbEtUdGNiaUFnSUNBZ0lHOW1abk5sZEhNdWVDQXJQU0J2Wm1aelpYUlFZWEpsYm5RdVkyeHBaVzUwVEdWbWREdGNiaUFnSUNBZ0lHOW1abk5sZEhNdWVTQXJQU0J2Wm1aelpYUlFZWEpsYm5RdVkyeHBaVzUwVkc5d08xeHVJQ0FnSUgwZ1pXeHpaU0JwWmlBb1pHOWpkVzFsYm5SRmJHVnRaVzUwS1NCN1hHNGdJQ0FnSUNCdlptWnpaWFJ6TG5nZ1BTQm5aWFJYYVc1a2IzZFRZM0p2Ykd4Q1lYSllLR1J2WTNWdFpXNTBSV3hsYldWdWRDazdYRzRnSUNBZ2ZWeHVJQ0I5WEc1Y2JpQWdjbVYwZFhKdUlIdGNiaUFnSUNCNE9pQnlaV04wTG14bFpuUWdLeUJ6WTNKdmJHd3VjMk55YjJ4c1RHVm1kQ0F0SUc5bVpuTmxkSE11ZUN4Y2JpQWdJQ0I1T2lCeVpXTjBMblJ2Y0NBcklITmpjbTlzYkM1elkzSnZiR3hVYjNBZ0xTQnZabVp6WlhSekxua3NYRzRnSUNBZ2QybGtkR2c2SUhKbFkzUXVkMmxrZEdnc1hHNGdJQ0FnYUdWcFoyaDBPaUJ5WldOMExtaGxhV2RvZEZ4dUlDQjlPMXh1ZlNJc0ltbHRjRzl5ZENCblpYUlhhVzVrYjNjZ1puSnZiU0JjSWk0dloyVjBWMmx1Wkc5M0xtcHpYQ0k3WEc1bGVIQnZjblFnWkdWbVlYVnNkQ0JtZFc1amRHbHZiaUJuWlhSRGIyMXdkWFJsWkZOMGVXeGxLR1ZzWlcxbGJuUXBJSHRjYmlBZ2NtVjBkWEp1SUdkbGRGZHBibVJ2ZHlobGJHVnRaVzUwS1M1blpYUkRiMjF3ZFhSbFpGTjBlV3hsS0dWc1pXMWxiblFwTzF4dWZTSXNJbWx0Y0c5eWRDQjdJR2x6Uld4bGJXVnVkQ0I5SUdaeWIyMGdYQ0l1TDJsdWMzUmhibU5sVDJZdWFuTmNJanRjYm1WNGNHOXlkQ0JrWldaaGRXeDBJR1oxYm1OMGFXOXVJR2RsZEVSdlkzVnRaVzUwUld4bGJXVnVkQ2hsYkdWdFpXNTBLU0I3WEc0Z0lDOHZJQ1JHYkc5M1JtbDRUV1ZiYVc1amIyMXdZWFJwWW14bExYSmxkSFZ5YmwwNklHRnpjM1Z0WlNCaWIyUjVJR2x6SUdGc2QyRjVjeUJoZG1GcGJHRmliR1ZjYmlBZ2NtVjBkWEp1SUNnb2FYTkZiR1Z0Wlc1MEtHVnNaVzFsYm5RcElEOGdaV3hsYldWdWRDNXZkMjVsY2tSdlkzVnRaVzUwSURvZ0x5OGdKRVpzYjNkR2FYaE5aVnR3Y205d0xXMXBjM05wYm1kZFhHNGdJR1ZzWlcxbGJuUXVaRzlqZFcxbGJuUXBJSHg4SUhkcGJtUnZkeTVrYjJOMWJXVnVkQ2t1Wkc5amRXMWxiblJGYkdWdFpXNTBPMXh1ZlNJc0ltbHRjRzl5ZENCblpYUkViMk4xYldWdWRFVnNaVzFsYm5RZ1puSnZiU0JjSWk0dloyVjBSRzlqZFcxbGJuUkZiR1Z0Wlc1MExtcHpYQ0k3WEc1cGJYQnZjblFnWjJWMFEyOXRjSFYwWldSVGRIbHNaU0JtY205dElGd2lMaTluWlhSRGIyMXdkWFJsWkZOMGVXeGxMbXB6WENJN1hHNXBiWEJ2Y25RZ1oyVjBWMmx1Wkc5M1UyTnliMnhzUW1GeVdDQm1jbTl0SUZ3aUxpOW5aWFJYYVc1a2IzZFRZM0p2Ykd4Q1lYSllMbXB6WENJN1hHNXBiWEJ2Y25RZ1oyVjBWMmx1Wkc5M1UyTnliMnhzSUdaeWIyMGdYQ0l1TDJkbGRGZHBibVJ2ZDFOamNtOXNiQzVxYzF3aU8xeHVhVzF3YjNKMElIc2diV0Y0SUgwZ1puSnZiU0JjSWk0dUwzVjBhV3h6TDIxaGRHZ3Vhbk5jSWpzZ0x5OGdSMlYwY3lCMGFHVWdaVzUwYVhKbElITnBlbVVnYjJZZ2RHaGxJSE5qY205c2JHRmliR1VnWkc5amRXMWxiblFnWVhKbFlTd2daWFpsYmlCbGVIUmxibVJwYm1jZ2IzVjBjMmxrWlZ4dUx5OGdiMllnZEdobElHQThhSFJ0YkQ1Z0lHRnVaQ0JnUEdKdlpIaytZQ0J5WldOMElHSnZkVzVrY3lCcFppQm9iM0pwZW05dWRHRnNiSGtnYzJOeWIyeHNZV0pzWlZ4dVhHNWxlSEJ2Y25RZ1pHVm1ZWFZzZENCbWRXNWpkR2x2YmlCblpYUkViMk4xYldWdWRGSmxZM1FvWld4bGJXVnVkQ2tnZTF4dUlDQjJZWElnWDJWc1pXMWxiblFrYjNkdVpYSkViMk4xYldWdU8xeHVYRzRnSUhaaGNpQm9kRzFzSUQwZ1oyVjBSRzlqZFcxbGJuUkZiR1Z0Wlc1MEtHVnNaVzFsYm5RcE8xeHVJQ0IyWVhJZ2QybHVVMk55YjJ4c0lEMGdaMlYwVjJsdVpHOTNVMk55YjJ4c0tHVnNaVzFsYm5RcE8xeHVJQ0IyWVhJZ1ltOWtlU0E5SUNoZlpXeGxiV1Z1ZENSdmQyNWxja1J2WTNWdFpXNGdQU0JsYkdWdFpXNTBMbTkzYm1WeVJHOWpkVzFsYm5RcElEMDlJRzUxYkd3Z1B5QjJiMmxrSURBZ09pQmZaV3hsYldWdWRDUnZkMjVsY2tSdlkzVnRaVzR1WW05a2VUdGNiaUFnZG1GeUlIZHBaSFJvSUQwZ2JXRjRLR2gwYld3dWMyTnliMnhzVjJsa2RHZ3NJR2gwYld3dVkyeHBaVzUwVjJsa2RHZ3NJR0p2WkhrZ1B5QmliMlI1TG5OamNtOXNiRmRwWkhSb0lEb2dNQ3dnWW05a2VTQS9JR0p2WkhrdVkyeHBaVzUwVjJsa2RHZ2dPaUF3S1R0Y2JpQWdkbUZ5SUdobGFXZG9kQ0E5SUcxaGVDaG9kRzFzTG5OamNtOXNiRWhsYVdkb2RDd2dhSFJ0YkM1amJHbGxiblJJWldsbmFIUXNJR0p2WkhrZ1B5QmliMlI1TG5OamNtOXNiRWhsYVdkb2RDQTZJREFzSUdKdlpIa2dQeUJpYjJSNUxtTnNhV1Z1ZEVobGFXZG9kQ0E2SURBcE8xeHVJQ0IyWVhJZ2VDQTlJQzEzYVc1VFkzSnZiR3d1YzJOeWIyeHNUR1ZtZENBcklHZGxkRmRwYm1SdmQxTmpjbTlzYkVKaGNsZ29aV3hsYldWdWRDazdYRzRnSUhaaGNpQjVJRDBnTFhkcGJsTmpjbTlzYkM1elkzSnZiR3hVYjNBN1hHNWNiaUFnYVdZZ0tHZGxkRU52YlhCMWRHVmtVM1I1YkdVb1ltOWtlU0I4ZkNCb2RHMXNLUzVrYVhKbFkzUnBiMjRnUFQwOUlDZHlkR3duS1NCN1hHNGdJQ0FnZUNBclBTQnRZWGdvYUhSdGJDNWpiR2xsYm5SWGFXUjBhQ3dnWW05a2VTQS9JR0p2WkhrdVkyeHBaVzUwVjJsa2RHZ2dPaUF3S1NBdElIZHBaSFJvTzF4dUlDQjlYRzVjYmlBZ2NtVjBkWEp1SUh0Y2JpQWdJQ0IzYVdSMGFEb2dkMmxrZEdnc1hHNGdJQ0FnYUdWcFoyaDBPaUJvWldsbmFIUXNYRzRnSUNBZ2VEb2dlQ3hjYmlBZ0lDQjVPaUI1WEc0Z0lIMDdYRzU5SWl3aVpYaHdiM0owSUdSbFptRjFiSFFnWm5WdVkzUnBiMjRnWjJWMFNGUk5URVZzWlcxbGJuUlRZM0p2Ykd3b1pXeGxiV1Z1ZENrZ2UxeHVJQ0J5WlhSMWNtNGdlMXh1SUNBZ0lITmpjbTlzYkV4bFpuUTZJR1ZzWlcxbGJuUXVjMk55YjJ4c1RHVm1kQ3hjYmlBZ0lDQnpZM0p2Ykd4VWIzQTZJR1ZzWlcxbGJuUXVjMk55YjJ4c1ZHOXdYRzRnSUgwN1hHNTlJaXdpYVcxd2IzSjBJR2RsZEVKdmRXNWthVzVuUTJ4cFpXNTBVbVZqZENCbWNtOXRJRndpTGk5blpYUkNiM1Z1WkdsdVowTnNhV1Z1ZEZKbFkzUXVhbk5jSWpzZ0x5OGdVbVYwZFhKdWN5QjBhR1VnYkdGNWIzVjBJSEpsWTNRZ2IyWWdZVzRnWld4bGJXVnVkQ0J5Wld4aGRHbDJaU0IwYnlCcGRITWdiMlptYzJWMFVHRnlaVzUwTGlCTVlYbHZkWFJjYmk4dklHMWxZVzV6SUdsMElHUnZaWE51SjNRZ2RHRnJaU0JwYm5SdklHRmpZMjkxYm5RZ2RISmhibk5tYjNKdGN5NWNibHh1Wlhod2IzSjBJR1JsWm1GMWJIUWdablZ1WTNScGIyNGdaMlYwVEdGNWIzVjBVbVZqZENobGJHVnRaVzUwS1NCN1hHNGdJSFpoY2lCamJHbGxiblJTWldOMElEMGdaMlYwUW05MWJtUnBibWREYkdsbGJuUlNaV04wS0dWc1pXMWxiblFwT3lBdkx5QlZjMlVnZEdobElHTnNhV1Z1ZEZKbFkzUWdjMmw2WlhNZ2FXWWdhWFFuY3lCdWIzUWdZbVZsYmlCMGNtRnVjMlp2Y20xbFpDNWNiaUFnTHk4Z1JtbDRaWE1nYUhSMGNITTZMeTluYVhSb2RXSXVZMjl0TDNCdmNIQmxjbXB6TDNCdmNIQmxjaTFqYjNKbEwybHpjM1ZsY3k4eE1qSXpYRzVjYmlBZ2RtRnlJSGRwWkhSb0lEMGdaV3hsYldWdWRDNXZabVp6WlhSWGFXUjBhRHRjYmlBZ2RtRnlJR2hsYVdkb2RDQTlJR1ZzWlcxbGJuUXViMlptYzJWMFNHVnBaMmgwTzF4dVhHNGdJR2xtSUNoTllYUm9MbUZpY3loamJHbGxiblJTWldOMExuZHBaSFJvSUMwZ2QybGtkR2dwSUR3OUlERXBJSHRjYmlBZ0lDQjNhV1IwYUNBOUlHTnNhV1Z1ZEZKbFkzUXVkMmxrZEdnN1hHNGdJSDFjYmx4dUlDQnBaaUFvVFdGMGFDNWhZbk1vWTJ4cFpXNTBVbVZqZEM1b1pXbG5hSFFnTFNCb1pXbG5hSFFwSUR3OUlERXBJSHRjYmlBZ0lDQm9aV2xuYUhRZ1BTQmpiR2xsYm5SU1pXTjBMbWhsYVdkb2REdGNiaUFnZlZ4dVhHNGdJSEpsZEhWeWJpQjdYRzRnSUNBZ2VEb2daV3hsYldWdWRDNXZabVp6WlhSTVpXWjBMRnh1SUNBZ0lIazZJR1ZzWlcxbGJuUXViMlptYzJWMFZHOXdMRnh1SUNBZ0lIZHBaSFJvT2lCM2FXUjBhQ3hjYmlBZ0lDQm9aV2xuYUhRNklHaGxhV2RvZEZ4dUlDQjlPMXh1ZlNJc0ltVjRjRzl5ZENCa1pXWmhkV3gwSUdaMWJtTjBhVzl1SUdkbGRFNXZaR1ZPWVcxbEtHVnNaVzFsYm5RcElIdGNiaUFnY21WMGRYSnVJR1ZzWlcxbGJuUWdQeUFvWld4bGJXVnVkQzV1YjJSbFRtRnRaU0I4ZkNBbkp5a3VkRzlNYjNkbGNrTmhjMlVvS1NBNklHNTFiR3c3WEc1OUlpd2lhVzF3YjNKMElHZGxkRmRwYm1SdmQxTmpjbTlzYkNCbWNtOXRJRndpTGk5blpYUlhhVzVrYjNkVFkzSnZiR3d1YW5OY0lqdGNibWx0Y0c5eWRDQm5aWFJYYVc1a2IzY2dabkp2YlNCY0lpNHZaMlYwVjJsdVpHOTNMbXB6WENJN1hHNXBiWEJ2Y25RZ2V5QnBjMGhVVFV4RmJHVnRaVzUwSUgwZ1puSnZiU0JjSWk0dmFXNXpkR0Z1WTJWUFppNXFjMXdpTzF4dWFXMXdiM0owSUdkbGRFaFVUVXhGYkdWdFpXNTBVMk55YjJ4c0lHWnliMjBnWENJdUwyZGxkRWhVVFV4RmJHVnRaVzUwVTJOeWIyeHNMbXB6WENJN1hHNWxlSEJ2Y25RZ1pHVm1ZWFZzZENCbWRXNWpkR2x2YmlCblpYUk9iMlJsVTJOeWIyeHNLRzV2WkdVcElIdGNiaUFnYVdZZ0tHNXZaR1VnUFQwOUlHZGxkRmRwYm1SdmR5aHViMlJsS1NCOGZDQWhhWE5JVkUxTVJXeGxiV1Z1ZENodWIyUmxLU2tnZTF4dUlDQWdJSEpsZEhWeWJpQm5aWFJYYVc1a2IzZFRZM0p2Ykd3b2JtOWtaU2s3WEc0Z0lIMGdaV3h6WlNCN1hHNGdJQ0FnY21WMGRYSnVJR2RsZEVoVVRVeEZiR1Z0Wlc1MFUyTnliMnhzS0c1dlpHVXBPMXh1SUNCOVhHNTlJaXdpYVcxd2IzSjBJR2RsZEZkcGJtUnZkeUJtY205dElGd2lMaTluWlhSWGFXNWtiM2N1YW5OY0lqdGNibWx0Y0c5eWRDQm5aWFJPYjJSbFRtRnRaU0JtY205dElGd2lMaTluWlhST2IyUmxUbUZ0WlM1cWMxd2lPMXh1YVcxd2IzSjBJR2RsZEVOdmJYQjFkR1ZrVTNSNWJHVWdabkp2YlNCY0lpNHZaMlYwUTI5dGNIVjBaV1JUZEhsc1pTNXFjMXdpTzF4dWFXMXdiM0owSUhzZ2FYTklWRTFNUld4bGJXVnVkQ3dnYVhOVGFHRmtiM2RTYjI5MElIMGdabkp2YlNCY0lpNHZhVzV6ZEdGdVkyVlBaaTVxYzF3aU8xeHVhVzF3YjNKMElHbHpWR0ZpYkdWRmJHVnRaVzUwSUdaeWIyMGdYQ0l1TDJselZHRmliR1ZGYkdWdFpXNTBMbXB6WENJN1hHNXBiWEJ2Y25RZ1oyVjBVR0Z5Wlc1MFRtOWtaU0JtY205dElGd2lMaTluWlhSUVlYSmxiblJPYjJSbExtcHpYQ0k3WEc1cGJYQnZjblFnWjJWMFZVRlRkSEpwYm1jZ1puSnZiU0JjSWk0dUwzVjBhV3h6TDNWelpYSkJaMlZ1ZEM1cWMxd2lPMXh1WEc1bWRXNWpkR2x2YmlCblpYUlVjblZsVDJabWMyVjBVR0Z5Wlc1MEtHVnNaVzFsYm5RcElIdGNiaUFnYVdZZ0tDRnBjMGhVVFV4RmJHVnRaVzUwS0dWc1pXMWxiblFwSUh4OElDOHZJR2gwZEhCek9pOHZaMmwwYUhWaUxtTnZiUzl3YjNCd1pYSnFjeTl3YjNCd1pYSXRZMjl5WlM5cGMzTjFaWE12T0RNM1hHNGdJR2RsZEVOdmJYQjFkR1ZrVTNSNWJHVW9aV3hsYldWdWRDa3VjRzl6YVhScGIyNGdQVDA5SUNkbWFYaGxaQ2NwSUh0Y2JpQWdJQ0J5WlhSMWNtNGdiblZzYkR0Y2JpQWdmVnh1WEc0Z0lISmxkSFZ5YmlCbGJHVnRaVzUwTG05bVpuTmxkRkJoY21WdWREdGNibjBnTHk4Z1lDNXZabVp6WlhSUVlYSmxiblJnSUhKbGNHOXlkSE1nWUc1MWJHeGdJR1p2Y2lCbWFYaGxaQ0JsYkdWdFpXNTBjeXdnZDJocGJHVWdZV0p6YjJ4MWRHVWdaV3hsYldWdWRITmNiaTh2SUhKbGRIVnliaUIwYUdVZ1kyOXVkR0ZwYm1sdVp5QmliRzlqYTF4dVhHNWNibVoxYm1OMGFXOXVJR2RsZEVOdmJuUmhhVzVwYm1kQ2JHOWpheWhsYkdWdFpXNTBLU0I3WEc0Z0lIWmhjaUJwYzBacGNtVm1iM2dnUFNBdlptbHlaV1p2ZUM5cExuUmxjM1FvWjJWMFZVRlRkSEpwYm1jb0tTazdYRzRnSUhaaGNpQnBjMGxGSUQwZ0wxUnlhV1JsYm5RdmFTNTBaWE4wS0dkbGRGVkJVM1J5YVc1bktDa3BPMXh1WEc0Z0lHbG1JQ2hwYzBsRklDWW1JR2x6U0ZSTlRFVnNaVzFsYm5Rb1pXeGxiV1Z1ZENrcElIdGNiaUFnSUNBdkx5QkpiaUJKUlNBNUxDQXhNQ0JoYm1RZ01URWdabWw0WldRZ1pXeGxiV1Z1ZEhNZ1kyOXVkR0ZwYm1sdVp5QmliRzlqYXlCcGN5QmhiSGRoZVhNZ1pYTjBZV0pzYVhOb1pXUWdZbmtnZEdobElIWnBaWGR3YjNKMFhHNGdJQ0FnZG1GeUlHVnNaVzFsYm5SRGMzTWdQU0JuWlhSRGIyMXdkWFJsWkZOMGVXeGxLR1ZzWlcxbGJuUXBPMXh1WEc0Z0lDQWdhV1lnS0dWc1pXMWxiblJEYzNNdWNHOXphWFJwYjI0Z1BUMDlJQ2RtYVhobFpDY3BJSHRjYmlBZ0lDQWdJSEpsZEhWeWJpQnVkV3hzTzF4dUlDQWdJSDFjYmlBZ2ZWeHVYRzRnSUhaaGNpQmpkWEp5Wlc1MFRtOWtaU0E5SUdkbGRGQmhjbVZ1ZEU1dlpHVW9aV3hsYldWdWRDazdYRzVjYmlBZ2FXWWdLR2x6VTJoaFpHOTNVbTl2ZENoamRYSnlaVzUwVG05a1pTa3BJSHRjYmlBZ0lDQmpkWEp5Wlc1MFRtOWtaU0E5SUdOMWNuSmxiblJPYjJSbExtaHZjM1E3WEc0Z0lIMWNibHh1SUNCM2FHbHNaU0FvYVhOSVZFMU1SV3hsYldWdWRDaGpkWEp5Wlc1MFRtOWtaU2tnSmlZZ1d5ZG9kRzFzSnl3Z0oySnZaSGtuWFM1cGJtUmxlRTltS0dkbGRFNXZaR1ZPWVcxbEtHTjFjbkpsYm5ST2IyUmxLU2tnUENBd0tTQjdYRzRnSUNBZ2RtRnlJR056Y3lBOUlHZGxkRU52YlhCMWRHVmtVM1I1YkdVb1kzVnljbVZ1ZEU1dlpHVXBPeUF2THlCVWFHbHpJR2x6SUc1dmJpMWxlR2hoZFhOMGFYWmxJR0oxZENCamIzWmxjbk1nZEdobElHMXZjM1FnWTI5dGJXOXVJRU5UVXlCd2NtOXdaWEowYVdWeklIUm9ZWFJjYmlBZ0lDQXZMeUJqY21WaGRHVWdZU0JqYjI1MFlXbHVhVzVuSUdKc2IyTnJMbHh1SUNBZ0lDOHZJR2gwZEhCek9pOHZaR1YyWld4dmNHVnlMbTF2ZW1sc2JHRXViM0puTDJWdUxWVlRMMlJ2WTNNdlYyVmlMME5UVXk5RGIyNTBZV2x1YVc1blgySnNiMk5ySTJsa1pXNTBhV1o1YVc1blgzUm9aVjlqYjI1MFlXbHVhVzVuWDJKc2IyTnJYRzVjYmlBZ0lDQnBaaUFvWTNOekxuUnlZVzV6Wm05eWJTQWhQVDBnSjI1dmJtVW5JSHg4SUdOemN5NXdaWEp6Y0dWamRHbDJaU0FoUFQwZ0oyNXZibVVuSUh4OElHTnpjeTVqYjI1MFlXbHVJRDA5UFNBbmNHRnBiblFuSUh4OElGc25kSEpoYm5ObWIzSnRKeXdnSjNCbGNuTndaV04wYVhabEoxMHVhVzVrWlhoUFppaGpjM011ZDJsc2JFTm9ZVzVuWlNrZ0lUMDlJQzB4SUh4OElHbHpSbWx5WldadmVDQW1KaUJqYzNNdWQybHNiRU5vWVc1blpTQTlQVDBnSjJacGJIUmxjaWNnZkh3Z2FYTkdhWEpsWm05NElDWW1JR056Y3k1bWFXeDBaWElnSmlZZ1kzTnpMbVpwYkhSbGNpQWhQVDBnSjI1dmJtVW5LU0I3WEc0Z0lDQWdJQ0J5WlhSMWNtNGdZM1Z5Y21WdWRFNXZaR1U3WEc0Z0lDQWdmU0JsYkhObElIdGNiaUFnSUNBZ0lHTjFjbkpsYm5ST2IyUmxJRDBnWTNWeWNtVnVkRTV2WkdVdWNHRnlaVzUwVG05a1pUdGNiaUFnSUNCOVhHNGdJSDFjYmx4dUlDQnlaWFIxY200Z2JuVnNiRHRjYm4wZ0x5OGdSMlYwY3lCMGFHVWdZMnh2YzJWemRDQmhibU5sYzNSdmNpQndiM05wZEdsdmJtVmtJR1ZzWlcxbGJuUXVJRWhoYm1Sc1pYTWdjMjl0WlNCbFpHZGxJR05oYzJWekxGeHVMeThnYzNWamFDQmhjeUIwWVdKc1pTQmhibU5sYzNSdmNuTWdZVzVrSUdOeWIzTnpJR0p5YjNkelpYSWdZblZuY3k1Y2JseHVYRzVsZUhCdmNuUWdaR1ZtWVhWc2RDQm1kVzVqZEdsdmJpQm5aWFJQWm1aelpYUlFZWEpsYm5Rb1pXeGxiV1Z1ZENrZ2UxeHVJQ0IyWVhJZ2QybHVaRzkzSUQwZ1oyVjBWMmx1Wkc5M0tHVnNaVzFsYm5RcE8xeHVJQ0IyWVhJZ2IyWm1jMlYwVUdGeVpXNTBJRDBnWjJWMFZISjFaVTltWm5ObGRGQmhjbVZ1ZENobGJHVnRaVzUwS1R0Y2JseHVJQ0IzYUdsc1pTQW9iMlptYzJWMFVHRnlaVzUwSUNZbUlHbHpWR0ZpYkdWRmJHVnRaVzUwS0c5bVpuTmxkRkJoY21WdWRDa2dKaVlnWjJWMFEyOXRjSFYwWldSVGRIbHNaU2h2Wm1aelpYUlFZWEpsYm5RcExuQnZjMmwwYVc5dUlEMDlQU0FuYzNSaGRHbGpKeWtnZTF4dUlDQWdJRzltWm5ObGRGQmhjbVZ1ZENBOUlHZGxkRlJ5ZFdWUFptWnpaWFJRWVhKbGJuUW9iMlptYzJWMFVHRnlaVzUwS1R0Y2JpQWdmVnh1WEc0Z0lHbG1JQ2h2Wm1aelpYUlFZWEpsYm5RZ0ppWWdLR2RsZEU1dlpHVk9ZVzFsS0c5bVpuTmxkRkJoY21WdWRDa2dQVDA5SUNkb2RHMXNKeUI4ZkNCblpYUk9iMlJsVG1GdFpTaHZabVp6WlhSUVlYSmxiblFwSUQwOVBTQW5ZbTlrZVNjZ0ppWWdaMlYwUTI5dGNIVjBaV1JUZEhsc1pTaHZabVp6WlhSUVlYSmxiblFwTG5CdmMybDBhVzl1SUQwOVBTQW5jM1JoZEdsakp5a3BJSHRjYmlBZ0lDQnlaWFIxY200Z2QybHVaRzkzTzF4dUlDQjlYRzVjYmlBZ2NtVjBkWEp1SUc5bVpuTmxkRkJoY21WdWRDQjhmQ0JuWlhSRGIyNTBZV2x1YVc1blFteHZZMnNvWld4bGJXVnVkQ2tnZkh3Z2QybHVaRzkzTzF4dWZTSXNJbWx0Y0c5eWRDQm5aWFJPYjJSbFRtRnRaU0JtY205dElGd2lMaTluWlhST2IyUmxUbUZ0WlM1cWMxd2lPMXh1YVcxd2IzSjBJR2RsZEVSdlkzVnRaVzUwUld4bGJXVnVkQ0JtY205dElGd2lMaTluWlhSRWIyTjFiV1Z1ZEVWc1pXMWxiblF1YW5OY0lqdGNibWx0Y0c5eWRDQjdJR2x6VTJoaFpHOTNVbTl2ZENCOUlHWnliMjBnWENJdUwybHVjM1JoYm1ObFQyWXVhbk5jSWp0Y2JtVjRjRzl5ZENCa1pXWmhkV3gwSUdaMWJtTjBhVzl1SUdkbGRGQmhjbVZ1ZEU1dlpHVW9aV3hsYldWdWRDa2dlMXh1SUNCcFppQW9aMlYwVG05a1pVNWhiV1VvWld4bGJXVnVkQ2tnUFQwOUlDZG9kRzFzSnlrZ2UxeHVJQ0FnSUhKbGRIVnliaUJsYkdWdFpXNTBPMXh1SUNCOVhHNWNiaUFnY21WMGRYSnVJQ2d2THlCMGFHbHpJR2x6SUdFZ2NYVnBZMnRsY2lBb1luVjBJR3hsYzNNZ2RIbHdaU0J6WVdabEtTQjNZWGtnZEc4Z2MyRjJaU0J4ZFdsMFpTQnpiMjFsSUdKNWRHVnpJR1p5YjIwZ2RHaGxJR0oxYm1Sc1pWeHVJQ0FnSUM4dklDUkdiRzkzUm1sNFRXVmJhVzVqYjIxd1lYUnBZbXhsTFhKbGRIVnlibDFjYmlBZ0lDQXZMeUFrUm14dmQwWnBlRTFsVzNCeWIzQXRiV2x6YzJsdVoxMWNiaUFnSUNCbGJHVnRaVzUwTG1GemMybG5ibVZrVTJ4dmRDQjhmQ0F2THlCemRHVndJR2x1ZEc4Z2RHaGxJSE5vWVdSdmR5QkVUMDBnYjJZZ2RHaGxJSEJoY21WdWRDQnZaaUJoSUhOc2IzUjBaV1FnYm05a1pWeHVJQ0FnSUdWc1pXMWxiblF1Y0dGeVpXNTBUbTlrWlNCOGZDQW9JQzh2SUVSUFRTQkZiR1Z0Wlc1MElHUmxkR1ZqZEdWa1hHNGdJQ0FnYVhOVGFHRmtiM2RTYjI5MEtHVnNaVzFsYm5RcElEOGdaV3hsYldWdWRDNW9iM04wSURvZ2JuVnNiQ2tnZkh3Z0x5OGdVMmhoWkc5M1VtOXZkQ0JrWlhSbFkzUmxaRnh1SUNBZ0lDOHZJQ1JHYkc5M1JtbDRUV1ZiYVc1amIyMXdZWFJwWW14bExXTmhiR3hkT2lCSVZFMU1SV3hsYldWdWRDQnBjeUJoSUU1dlpHVmNiaUFnSUNCblpYUkViMk4xYldWdWRFVnNaVzFsYm5Rb1pXeGxiV1Z1ZENrZ0x5OGdabUZzYkdKaFkydGNibHh1SUNBcE8xeHVmU0lzSW1sdGNHOXlkQ0JuWlhSUVlYSmxiblJPYjJSbElHWnliMjBnWENJdUwyZGxkRkJoY21WdWRFNXZaR1V1YW5OY0lqdGNibWx0Y0c5eWRDQnBjMU5qY205c2JGQmhjbVZ1ZENCbWNtOXRJRndpTGk5cGMxTmpjbTlzYkZCaGNtVnVkQzVxYzF3aU8xeHVhVzF3YjNKMElHZGxkRTV2WkdWT1lXMWxJR1p5YjIwZ1hDSXVMMmRsZEU1dlpHVk9ZVzFsTG1welhDSTdYRzVwYlhCdmNuUWdleUJwYzBoVVRVeEZiR1Z0Wlc1MElIMGdabkp2YlNCY0lpNHZhVzV6ZEdGdVkyVlBaaTVxYzF3aU8xeHVaWGh3YjNKMElHUmxabUYxYkhRZ1puVnVZM1JwYjI0Z1oyVjBVMk55YjJ4c1VHRnlaVzUwS0c1dlpHVXBJSHRjYmlBZ2FXWWdLRnNuYUhSdGJDY3NJQ2RpYjJSNUp5d2dKeU5rYjJOMWJXVnVkQ2RkTG1sdVpHVjRUMllvWjJWMFRtOWtaVTVoYldVb2JtOWtaU2twSUQ0OUlEQXBJSHRjYmlBZ0lDQXZMeUFrUm14dmQwWnBlRTFsVzJsdVkyOXRjR0YwYVdKc1pTMXlaWFIxY201ZE9pQmhjM04xYldVZ1ltOWtlU0JwY3lCaGJIZGhlWE1nWVhaaGFXeGhZbXhsWEc0Z0lDQWdjbVYwZFhKdUlHNXZaR1V1YjNkdVpYSkViMk4xYldWdWRDNWliMlI1TzF4dUlDQjlYRzVjYmlBZ2FXWWdLR2x6U0ZSTlRFVnNaVzFsYm5Rb2JtOWtaU2tnSmlZZ2FYTlRZM0p2Ykd4UVlYSmxiblFvYm05a1pTa3BJSHRjYmlBZ0lDQnlaWFIxY200Z2JtOWtaVHRjYmlBZ2ZWeHVYRzRnSUhKbGRIVnliaUJuWlhSVFkzSnZiR3hRWVhKbGJuUW9aMlYwVUdGeVpXNTBUbTlrWlNodWIyUmxLU2s3WEc1OUlpd2lhVzF3YjNKMElHZGxkRmRwYm1SdmR5Qm1jbTl0SUZ3aUxpOW5aWFJYYVc1a2IzY3Vhbk5jSWp0Y2JtbHRjRzl5ZENCblpYUkViMk4xYldWdWRFVnNaVzFsYm5RZ1puSnZiU0JjSWk0dloyVjBSRzlqZFcxbGJuUkZiR1Z0Wlc1MExtcHpYQ0k3WEc1cGJYQnZjblFnWjJWMFYybHVaRzkzVTJOeWIyeHNRbUZ5V0NCbWNtOXRJRndpTGk5blpYUlhhVzVrYjNkVFkzSnZiR3hDWVhKWUxtcHpYQ0k3WEc1cGJYQnZjblFnYVhOTVlYbHZkWFJXYVdWM2NHOXlkQ0JtY205dElGd2lMaTlwYzB4aGVXOTFkRlpwWlhkd2IzSjBMbXB6WENJN1hHNWxlSEJ2Y25RZ1pHVm1ZWFZzZENCbWRXNWpkR2x2YmlCblpYUldhV1YzY0c5eWRGSmxZM1FvWld4bGJXVnVkQ3dnYzNSeVlYUmxaM2twSUh0Y2JpQWdkbUZ5SUhkcGJpQTlJR2RsZEZkcGJtUnZkeWhsYkdWdFpXNTBLVHRjYmlBZ2RtRnlJR2gwYld3Z1BTQm5aWFJFYjJOMWJXVnVkRVZzWlcxbGJuUW9aV3hsYldWdWRDazdYRzRnSUhaaGNpQjJhWE4xWVd4V2FXVjNjRzl5ZENBOUlIZHBiaTUyYVhOMVlXeFdhV1YzY0c5eWREdGNiaUFnZG1GeUlIZHBaSFJvSUQwZ2FIUnRiQzVqYkdsbGJuUlhhV1IwYUR0Y2JpQWdkbUZ5SUdobGFXZG9kQ0E5SUdoMGJXd3VZMnhwWlc1MFNHVnBaMmgwTzF4dUlDQjJZWElnZUNBOUlEQTdYRzRnSUhaaGNpQjVJRDBnTUR0Y2JseHVJQ0JwWmlBb2RtbHpkV0ZzVm1sbGQzQnZjblFwSUh0Y2JpQWdJQ0IzYVdSMGFDQTlJSFpwYzNWaGJGWnBaWGR3YjNKMExuZHBaSFJvTzF4dUlDQWdJR2hsYVdkb2RDQTlJSFpwYzNWaGJGWnBaWGR3YjNKMExtaGxhV2RvZER0Y2JpQWdJQ0IyWVhJZ2JHRjViM1YwVm1sbGQzQnZjblFnUFNCcGMweGhlVzkxZEZacFpYZHdiM0owS0NrN1hHNWNiaUFnSUNCcFppQW9iR0Y1YjNWMFZtbGxkM0J2Y25RZ2ZId2dJV3hoZVc5MWRGWnBaWGR3YjNKMElDWW1JSE4wY21GMFpXZDVJRDA5UFNBblptbDRaV1FuS1NCN1hHNGdJQ0FnSUNCNElEMGdkbWx6ZFdGc1ZtbGxkM0J2Y25RdWIyWm1jMlYwVEdWbWREdGNiaUFnSUNBZ0lIa2dQU0IyYVhOMVlXeFdhV1YzY0c5eWRDNXZabVp6WlhSVWIzQTdYRzRnSUNBZ2ZWeHVJQ0I5WEc1Y2JpQWdjbVYwZFhKdUlIdGNiaUFnSUNCM2FXUjBhRG9nZDJsa2RHZ3NYRzRnSUNBZ2FHVnBaMmgwT2lCb1pXbG5hSFFzWEc0Z0lDQWdlRG9nZUNBcklHZGxkRmRwYm1SdmQxTmpjbTlzYkVKaGNsZ29aV3hsYldWdWRDa3NYRzRnSUNBZ2VUb2dlVnh1SUNCOU8xeHVmU0lzSW1WNGNHOXlkQ0JrWldaaGRXeDBJR1oxYm1OMGFXOXVJR2RsZEZkcGJtUnZkeWh1YjJSbEtTQjdYRzRnSUdsbUlDaHViMlJsSUQwOUlHNTFiR3dwSUh0Y2JpQWdJQ0J5WlhSMWNtNGdkMmx1Wkc5M08xeHVJQ0I5WEc1Y2JpQWdhV1lnS0c1dlpHVXVkRzlUZEhKcGJtY29LU0FoUFQwZ0oxdHZZbXBsWTNRZ1YybHVaRzkzWFNjcElIdGNiaUFnSUNCMllYSWdiM2R1WlhKRWIyTjFiV1Z1ZENBOUlHNXZaR1V1YjNkdVpYSkViMk4xYldWdWREdGNiaUFnSUNCeVpYUjFjbTRnYjNkdVpYSkViMk4xYldWdWRDQS9JRzkzYm1WeVJHOWpkVzFsYm5RdVpHVm1ZWFZzZEZacFpYY2dmSHdnZDJsdVpHOTNJRG9nZDJsdVpHOTNPMXh1SUNCOVhHNWNiaUFnY21WMGRYSnVJRzV2WkdVN1hHNTlJaXdpYVcxd2IzSjBJR2RsZEZkcGJtUnZkeUJtY205dElGd2lMaTluWlhSWGFXNWtiM2N1YW5OY0lqdGNibVY0Y0c5eWRDQmtaV1poZFd4MElHWjFibU4wYVc5dUlHZGxkRmRwYm1SdmQxTmpjbTlzYkNodWIyUmxLU0I3WEc0Z0lIWmhjaUIzYVc0Z1BTQm5aWFJYYVc1a2IzY29ibTlrWlNrN1hHNGdJSFpoY2lCelkzSnZiR3hNWldaMElEMGdkMmx1TG5CaFoyVllUMlptYzJWME8xeHVJQ0IyWVhJZ2MyTnliMnhzVkc5d0lEMGdkMmx1TG5CaFoyVlpUMlptYzJWME8xeHVJQ0J5WlhSMWNtNGdlMXh1SUNBZ0lITmpjbTlzYkV4bFpuUTZJSE5qY205c2JFeGxablFzWEc0Z0lDQWdjMk55YjJ4c1ZHOXdPaUJ6WTNKdmJHeFViM0JjYmlBZ2ZUdGNibjBpTENKcGJYQnZjblFnWjJWMFFtOTFibVJwYm1kRGJHbGxiblJTWldOMElHWnliMjBnWENJdUwyZGxkRUp2ZFc1a2FXNW5RMnhwWlc1MFVtVmpkQzVxYzF3aU8xeHVhVzF3YjNKMElHZGxkRVJ2WTNWdFpXNTBSV3hsYldWdWRDQm1jbTl0SUZ3aUxpOW5aWFJFYjJOMWJXVnVkRVZzWlcxbGJuUXVhbk5jSWp0Y2JtbHRjRzl5ZENCblpYUlhhVzVrYjNkVFkzSnZiR3dnWm5KdmJTQmNJaTR2WjJWMFYybHVaRzkzVTJOeWIyeHNMbXB6WENJN1hHNWxlSEJ2Y25RZ1pHVm1ZWFZzZENCbWRXNWpkR2x2YmlCblpYUlhhVzVrYjNkVFkzSnZiR3hDWVhKWUtHVnNaVzFsYm5RcElIdGNiaUFnTHk4Z1NXWWdQR2gwYld3K0lHaGhjeUJoSUVOVFV5QjNhV1IwYUNCbmNtVmhkR1Z5SUhSb1lXNGdkR2hsSUhacFpYZHdiM0owTENCMGFHVnVJSFJvYVhNZ2QybHNiQ0JpWlZ4dUlDQXZMeUJwYm1OdmNuSmxZM1FnWm05eUlGSlVUQzVjYmlBZ0x5OGdVRzl3Y0dWeUlERWdhWE1nWW5KdmEyVnVJR2x1SUhSb2FYTWdZMkZ6WlNCaGJtUWdibVYyWlhJZ2FHRmtJR0VnWW5WbklISmxjRzl5ZENCemJ5QnNaWFFuY3lCaGMzTjFiV1ZjYmlBZ0x5OGdhWFFuY3lCdWIzUWdZVzRnYVhOemRXVXVJRWtnWkc5dUozUWdkR2hwYm1zZ1lXNTViMjVsSUdWMlpYSWdjM0JsWTJsbWFXVnpJSGRwWkhSb0lHOXVJRHhvZEcxc1BseHVJQ0F2THlCaGJubDNZWGt1WEc0Z0lDOHZJRUp5YjNkelpYSnpJSGRvWlhKbElIUm9aU0JzWldaMElITmpjbTlzYkdKaGNpQmtiMlZ6YmlkMElHTmhkWE5sSUdGdUlHbHpjM1ZsSUhKbGNHOXlkQ0JnTUdBZ1ptOXlYRzRnSUM4dklIUm9hWE1nS0dVdVp5NGdSV1JuWlNBeU1ERTVMQ0JKUlRFeExDQlRZV1poY21rcFhHNGdJSEpsZEhWeWJpQm5aWFJDYjNWdVpHbHVaME5zYVdWdWRGSmxZM1FvWjJWMFJHOWpkVzFsYm5SRmJHVnRaVzUwS0dWc1pXMWxiblFwS1M1c1pXWjBJQ3NnWjJWMFYybHVaRzkzVTJOeWIyeHNLR1ZzWlcxbGJuUXBMbk5qY205c2JFeGxablE3WEc1OUlpd2lhVzF3YjNKMElHZGxkRmRwYm1SdmR5Qm1jbTl0SUZ3aUxpOW5aWFJYYVc1a2IzY3Vhbk5jSWp0Y2JseHVablZ1WTNScGIyNGdhWE5GYkdWdFpXNTBLRzV2WkdVcElIdGNiaUFnZG1GeUlFOTNia1ZzWlcxbGJuUWdQU0JuWlhSWGFXNWtiM2NvYm05a1pTa3VSV3hsYldWdWREdGNiaUFnY21WMGRYSnVJRzV2WkdVZ2FXNXpkR0Z1WTJWdlppQlBkMjVGYkdWdFpXNTBJSHg4SUc1dlpHVWdhVzV6ZEdGdVkyVnZaaUJGYkdWdFpXNTBPMXh1ZlZ4dVhHNW1kVzVqZEdsdmJpQnBjMGhVVFV4RmJHVnRaVzUwS0c1dlpHVXBJSHRjYmlBZ2RtRnlJRTkzYmtWc1pXMWxiblFnUFNCblpYUlhhVzVrYjNjb2JtOWtaU2t1U0ZSTlRFVnNaVzFsYm5RN1hHNGdJSEpsZEhWeWJpQnViMlJsSUdsdWMzUmhibU5sYjJZZ1QzZHVSV3hsYldWdWRDQjhmQ0J1YjJSbElHbHVjM1JoYm1ObGIyWWdTRlJOVEVWc1pXMWxiblE3WEc1OVhHNWNibVoxYm1OMGFXOXVJR2x6VTJoaFpHOTNVbTl2ZENodWIyUmxLU0I3WEc0Z0lDOHZJRWxGSURFeElHaGhjeUJ1YnlCVGFHRmtiM2RTYjI5MFhHNGdJR2xtSUNoMGVYQmxiMllnVTJoaFpHOTNVbTl2ZENBOVBUMGdKM1Z1WkdWbWFXNWxaQ2NwSUh0Y2JpQWdJQ0J5WlhSMWNtNGdabUZzYzJVN1hHNGdJSDFjYmx4dUlDQjJZWElnVDNkdVJXeGxiV1Z1ZENBOUlHZGxkRmRwYm1SdmR5aHViMlJsS1M1VGFHRmtiM2RTYjI5ME8xeHVJQ0J5WlhSMWNtNGdibTlrWlNCcGJuTjBZVzVqWlc5bUlFOTNia1ZzWlcxbGJuUWdmSHdnYm05a1pTQnBibk4wWVc1alpXOW1JRk5vWVdSdmQxSnZiM1E3WEc1OVhHNWNibVY0Y0c5eWRDQjdJR2x6Uld4bGJXVnVkQ3dnYVhOSVZFMU1SV3hsYldWdWRDd2dhWE5UYUdGa2IzZFNiMjkwSUgwN0lpd2lhVzF3YjNKMElHZGxkRlZCVTNSeWFXNW5JR1p5YjIwZ1hDSXVMaTkxZEdsc2N5OTFjMlZ5UVdkbGJuUXVhbk5jSWp0Y2JtVjRjRzl5ZENCa1pXWmhkV3gwSUdaMWJtTjBhVzl1SUdselRHRjViM1YwVm1sbGQzQnZjblFvS1NCN1hHNGdJSEpsZEhWeWJpQWhMMTRvS0Q4aFkyaHliMjFsZkdGdVpISnZhV1FwTGlrcWMyRm1ZWEpwTDJrdWRHVnpkQ2huWlhSVlFWTjBjbWx1WnlncEtUdGNibjBpTENKcGJYQnZjblFnWjJWMFEyOXRjSFYwWldSVGRIbHNaU0JtY205dElGd2lMaTluWlhSRGIyMXdkWFJsWkZOMGVXeGxMbXB6WENJN1hHNWxlSEJ2Y25RZ1pHVm1ZWFZzZENCbWRXNWpkR2x2YmlCcGMxTmpjbTlzYkZCaGNtVnVkQ2hsYkdWdFpXNTBLU0I3WEc0Z0lDOHZJRVpwY21WbWIzZ2dkMkZ1ZEhNZ2RYTWdkRzhnWTJobFkyc2dZQzE0WUNCaGJtUWdZQzE1WUNCMllYSnBZWFJwYjI1eklHRnpJSGRsYkd4Y2JpQWdkbUZ5SUY5blpYUkRiMjF3ZFhSbFpGTjBlV3hsSUQwZ1oyVjBRMjl0Y0hWMFpXUlRkSGxzWlNobGJHVnRaVzUwS1N4Y2JpQWdJQ0FnSUc5MlpYSm1iRzkzSUQwZ1gyZGxkRU52YlhCMWRHVmtVM1I1YkdVdWIzWmxjbVpzYjNjc1hHNGdJQ0FnSUNCdmRtVnlabXh2ZDFnZ1BTQmZaMlYwUTI5dGNIVjBaV1JUZEhsc1pTNXZkbVZ5Wm14dmQxZ3NYRzRnSUNBZ0lDQnZkbVZ5Wm14dmQxa2dQU0JmWjJWMFEyOXRjSFYwWldSVGRIbHNaUzV2ZG1WeVpteHZkMWs3WEc1Y2JpQWdjbVYwZFhKdUlDOWhkWFJ2ZkhOamNtOXNiSHh2ZG1WeWJHRjVmR2hwWkdSbGJpOHVkR1Z6ZENodmRtVnlabXh2ZHlBcklHOTJaWEptYkc5M1dTQXJJRzkyWlhKbWJHOTNXQ2s3WEc1OUlpd2lhVzF3YjNKMElHZGxkRTV2WkdWT1lXMWxJR1p5YjIwZ1hDSXVMMmRsZEU1dlpHVk9ZVzFsTG1welhDSTdYRzVsZUhCdmNuUWdaR1ZtWVhWc2RDQm1kVzVqZEdsdmJpQnBjMVJoWW14bFJXeGxiV1Z1ZENobGJHVnRaVzUwS1NCN1hHNGdJSEpsZEhWeWJpQmJKM1JoWW14bEp5d2dKM1JrSnl3Z0ozUm9KMTB1YVc1a1pYaFBaaWhuWlhST2IyUmxUbUZ0WlNobGJHVnRaVzUwS1NrZ1BqMGdNRHRjYm4waUxDSnBiWEJ2Y25RZ1oyVjBVMk55YjJ4c1VHRnlaVzUwSUdaeWIyMGdYQ0l1TDJkbGRGTmpjbTlzYkZCaGNtVnVkQzVxYzF3aU8xeHVhVzF3YjNKMElHZGxkRkJoY21WdWRFNXZaR1VnWm5KdmJTQmNJaTR2WjJWMFVHRnlaVzUwVG05a1pTNXFjMXdpTzF4dWFXMXdiM0owSUdkbGRGZHBibVJ2ZHlCbWNtOXRJRndpTGk5blpYUlhhVzVrYjNjdWFuTmNJanRjYm1sdGNHOXlkQ0JwYzFOamNtOXNiRkJoY21WdWRDQm1jbTl0SUZ3aUxpOXBjMU5qY205c2JGQmhjbVZ1ZEM1cWMxd2lPMXh1THlwY2JtZHBkbVZ1SUdFZ1JFOU5JR1ZzWlcxbGJuUXNJSEpsZEhWeWJpQjBhR1VnYkdsemRDQnZaaUJoYkd3Z2MyTnliMnhzSUhCaGNtVnVkSE1zSUhWd0lIUm9aU0JzYVhOMElHOW1JR0Z1WTJWemIzSnpYRzUxYm5ScGJDQjNaU0JuWlhRZ2RHOGdkR2hsSUhSdmNDQjNhVzVrYjNjZ2IySnFaV04wTGlCVWFHbHpJR3hwYzNRZ2FYTWdkMmhoZENCM1pTQmhkSFJoWTJnZ2MyTnliMnhzSUd4cGMzUmxibVZ5YzF4dWRHOHNJR0psWTJGMWMyVWdhV1lnWVc1NUlHOW1JSFJvWlhObElIQmhjbVZ1ZENCbGJHVnRaVzUwY3lCelkzSnZiR3dzSUhkbEoyeHNJRzVsWldRZ2RHOGdjbVV0WTJGc1kzVnNZWFJsSUhSb1pWeHVjbVZtWlhKbGJtTmxJR1ZzWlcxbGJuUW5jeUJ3YjNOcGRHbHZiaTVjYmlvdlhHNWNibVY0Y0c5eWRDQmtaV1poZFd4MElHWjFibU4wYVc5dUlHeHBjM1JUWTNKdmJHeFFZWEpsYm5SektHVnNaVzFsYm5Rc0lHeHBjM1FwSUh0Y2JpQWdkbUZ5SUY5bGJHVnRaVzUwSkc5M2JtVnlSRzlqZFcxbGJqdGNibHh1SUNCcFppQW9iR2x6ZENBOVBUMGdkbTlwWkNBd0tTQjdYRzRnSUNBZ2JHbHpkQ0E5SUZ0ZE8xeHVJQ0I5WEc1Y2JpQWdkbUZ5SUhOamNtOXNiRkJoY21WdWRDQTlJR2RsZEZOamNtOXNiRkJoY21WdWRDaGxiR1Z0Wlc1MEtUdGNiaUFnZG1GeUlHbHpRbTlrZVNBOUlITmpjbTlzYkZCaGNtVnVkQ0E5UFQwZ0tDaGZaV3hsYldWdWRDUnZkMjVsY2tSdlkzVnRaVzRnUFNCbGJHVnRaVzUwTG05M2JtVnlSRzlqZFcxbGJuUXBJRDA5SUc1MWJHd2dQeUIyYjJsa0lEQWdPaUJmWld4bGJXVnVkQ1J2ZDI1bGNrUnZZM1Z0Wlc0dVltOWtlU2s3WEc0Z0lIWmhjaUIzYVc0Z1BTQm5aWFJYYVc1a2IzY29jMk55YjJ4c1VHRnlaVzUwS1R0Y2JpQWdkbUZ5SUhSaGNtZGxkQ0E5SUdselFtOWtlU0EvSUZ0M2FXNWRMbU52Ym1OaGRDaDNhVzR1ZG1semRXRnNWbWxsZDNCdmNuUWdmSHdnVzEwc0lHbHpVMk55YjJ4c1VHRnlaVzUwS0hOamNtOXNiRkJoY21WdWRDa2dQeUJ6WTNKdmJHeFFZWEpsYm5RZ09pQmJYU2tnT2lCelkzSnZiR3hRWVhKbGJuUTdYRzRnSUhaaGNpQjFjR1JoZEdWa1RHbHpkQ0E5SUd4cGMzUXVZMjl1WTJGMEtIUmhjbWRsZENrN1hHNGdJSEpsZEhWeWJpQnBjMEp2WkhrZ1B5QjFjR1JoZEdWa1RHbHpkQ0E2SUM4dklDUkdiRzkzUm1sNFRXVmJhVzVqYjIxd1lYUnBZbXhsTFdOaGJHeGRPaUJwYzBKdlpIa2dkR1ZzYkhNZ2RYTWdkR0Z5WjJWMElIZHBiR3dnWW1VZ1lXNGdTRlJOVEVWc1pXMWxiblFnYUdWeVpWeHVJQ0IxY0dSaGRHVmtUR2x6ZEM1amIyNWpZWFFvYkdsemRGTmpjbTlzYkZCaGNtVnVkSE1vWjJWMFVHRnlaVzUwVG05a1pTaDBZWEpuWlhRcEtTazdYRzU5SWl3aVpYaHdiM0owSUhaaGNpQjBiM0FnUFNBbmRHOXdKenRjYm1WNGNHOXlkQ0IyWVhJZ1ltOTBkRzl0SUQwZ0oySnZkSFJ2YlNjN1hHNWxlSEJ2Y25RZ2RtRnlJSEpwWjJoMElEMGdKM0pwWjJoMEp6dGNibVY0Y0c5eWRDQjJZWElnYkdWbWRDQTlJQ2RzWldaMEp6dGNibVY0Y0c5eWRDQjJZWElnWVhWMGJ5QTlJQ2RoZFhSdkp6dGNibVY0Y0c5eWRDQjJZWElnWW1GelpWQnNZV05sYldWdWRITWdQU0JiZEc5d0xDQmliM1IwYjIwc0lISnBaMmgwTENCc1pXWjBYVHRjYm1WNGNHOXlkQ0IyWVhJZ2MzUmhjblFnUFNBbmMzUmhjblFuTzF4dVpYaHdiM0owSUhaaGNpQmxibVFnUFNBblpXNWtKenRjYm1WNGNHOXlkQ0IyWVhJZ1kyeHBjSEJwYm1kUVlYSmxiblJ6SUQwZ0oyTnNhWEJ3YVc1blVHRnlaVzUwY3ljN1hHNWxlSEJ2Y25RZ2RtRnlJSFpwWlhkd2IzSjBJRDBnSjNacFpYZHdiM0owSnp0Y2JtVjRjRzl5ZENCMllYSWdjRzl3Y0dWeUlEMGdKM0J2Y0hCbGNpYzdYRzVsZUhCdmNuUWdkbUZ5SUhKbFptVnlaVzVqWlNBOUlDZHlaV1psY21WdVkyVW5PMXh1Wlhod2IzSjBJSFpoY2lCMllYSnBZWFJwYjI1UWJHRmpaVzFsYm5SeklEMGdMeW9qWDE5UVZWSkZYMThxTDJKaGMyVlFiR0ZqWlcxbGJuUnpMbkpsWkhWalpTaG1kVzVqZEdsdmJpQW9ZV05qTENCd2JHRmpaVzFsYm5RcElIdGNiaUFnY21WMGRYSnVJR0ZqWXk1amIyNWpZWFFvVzNCc1lXTmxiV1Z1ZENBcklGd2lMVndpSUNzZ2MzUmhjblFzSUhCc1lXTmxiV1Z1ZENBcklGd2lMVndpSUNzZ1pXNWtYU2s3WEc1OUxDQmJYU2s3WEc1bGVIQnZjblFnZG1GeUlIQnNZV05sYldWdWRITWdQU0F2S2lOZlgxQlZVa1ZmWHlvdlcxMHVZMjl1WTJGMEtHSmhjMlZRYkdGalpXMWxiblJ6TENCYllYVjBiMTBwTG5KbFpIVmpaU2htZFc1amRHbHZiaUFvWVdOakxDQndiR0ZqWlcxbGJuUXBJSHRjYmlBZ2NtVjBkWEp1SUdGall5NWpiMjVqWVhRb1czQnNZV05sYldWdWRDd2djR3hoWTJWdFpXNTBJQ3NnWENJdFhDSWdLeUJ6ZEdGeWRDd2djR3hoWTJWdFpXNTBJQ3NnWENJdFhDSWdLeUJsYm1SZEtUdGNibjBzSUZ0ZEtUc2dMeThnYlc5a2FXWnBaWEp6SUhSb1lYUWdibVZsWkNCMGJ5QnlaV0ZrSUhSb1pTQkVUMDFjYmx4dVpYaHdiM0owSUhaaGNpQmlaV1p2Y21WU1pXRmtJRDBnSjJKbFptOXlaVkpsWVdRbk8xeHVaWGh3YjNKMElIWmhjaUJ5WldGa0lEMGdKM0psWVdRbk8xeHVaWGh3YjNKMElIWmhjaUJoWm5SbGNsSmxZV1FnUFNBbllXWjBaWEpTWldGa0p6c2dMeThnY0hWeVpTMXNiMmRwWXlCdGIyUnBabWxsY25OY2JseHVaWGh3YjNKMElIWmhjaUJpWldadmNtVk5ZV2x1SUQwZ0oySmxabTl5WlUxaGFXNG5PMXh1Wlhod2IzSjBJSFpoY2lCdFlXbHVJRDBnSjIxaGFXNG5PMXh1Wlhod2IzSjBJSFpoY2lCaFpuUmxjazFoYVc0Z1BTQW5ZV1owWlhKTllXbHVKenNnTHk4Z2JXOWthV1pwWlhJZ2QybDBhQ0IwYUdVZ2NIVnljRzl6WlNCMGJ5QjNjbWwwWlNCMGJ5QjBhR1VnUkU5TklDaHZjaUIzY21sMFpTQnBiblJ2SUdFZ1puSmhiV1YzYjNKcklITjBZWFJsS1Z4dVhHNWxlSEJ2Y25RZ2RtRnlJR0psWm05eVpWZHlhWFJsSUQwZ0oySmxabTl5WlZkeWFYUmxKenRjYm1WNGNHOXlkQ0IyWVhJZ2QzSnBkR1VnUFNBbmQzSnBkR1VuTzF4dVpYaHdiM0owSUhaaGNpQmhablJsY2xkeWFYUmxJRDBnSjJGbWRHVnlWM0pwZEdVbk8xeHVaWGh3YjNKMElIWmhjaUJ0YjJScFptbGxjbEJvWVhObGN5QTlJRnRpWldadmNtVlNaV0ZrTENCeVpXRmtMQ0JoWm5SbGNsSmxZV1FzSUdKbFptOXlaVTFoYVc0c0lHMWhhVzRzSUdGbWRHVnlUV0ZwYml3Z1ltVm1iM0psVjNKcGRHVXNJSGR5YVhSbExDQmhablJsY2xkeWFYUmxYVHNpTENKbGVIQnZjblFnS2lCbWNtOXRJRndpTGk5bGJuVnRjeTVxYzF3aU8xeHVaWGh3YjNKMElDb2dabkp2YlNCY0lpNHZiVzlrYVdacFpYSnpMMmx1WkdWNExtcHpYQ0k3SUM4dklHVnpiR2x1ZEMxa2FYTmhZbXhsTFc1bGVIUXRiR2x1WlNCcGJYQnZjblF2Ym04dGRXNTFjMlZrTFcxdlpIVnNaWE5jYmx4dVpYaHdiM0owSUhzZ2NHOXdjR1Z5UjJWdVpYSmhkRzl5TENCa1pYUmxZM1JQZG1WeVpteHZkeXdnWTNKbFlYUmxVRzl3Y0dWeUlHRnpJR055WldGMFpWQnZjSEJsY2tKaGMyVWdmU0JtY205dElGd2lMaTlqY21WaGRHVlFiM0J3WlhJdWFuTmNJanNnTHk4Z1pYTnNhVzUwTFdScGMyRmliR1V0Ym1WNGRDMXNhVzVsSUdsdGNHOXlkQzl1YnkxMWJuVnpaV1F0Ylc5a2RXeGxjMXh1WEc1bGVIQnZjblFnZXlCamNtVmhkR1ZRYjNCd1pYSWdmU0JtY205dElGd2lMaTl3YjNCd1pYSXVhbk5jSWpzZ0x5OGdaWE5zYVc1MExXUnBjMkZpYkdVdGJtVjRkQzFzYVc1bElHbHRjRzl5ZEM5dWJ5MTFiblZ6WldRdGJXOWtkV3hsYzF4dVhHNWxlSEJ2Y25RZ2V5QmpjbVZoZEdWUWIzQndaWElnWVhNZ1kzSmxZWFJsVUc5d2NHVnlUR2wwWlNCOUlHWnliMjBnWENJdUwzQnZjSEJsY2kxc2FYUmxMbXB6WENJN0lpd2lhVzF3YjNKMElHZGxkRTV2WkdWT1lXMWxJR1p5YjIwZ1hDSXVMaTlrYjIwdGRYUnBiSE12WjJWMFRtOWtaVTVoYldVdWFuTmNJanRjYm1sdGNHOXlkQ0I3SUdselNGUk5URVZzWlcxbGJuUWdmU0JtY205dElGd2lMaTR2Wkc5dExYVjBhV3h6TDJsdWMzUmhibU5sVDJZdWFuTmNJanNnTHk4Z1ZHaHBjeUJ0YjJScFptbGxjaUIwWVd0bGN5QjBhR1VnYzNSNWJHVnpJSEJ5WlhCaGNtVmtJR0o1SUhSb1pTQmdZMjl0Y0hWMFpWTjBlV3hsYzJBZ2JXOWthV1pwWlhKY2JpOHZJR0Z1WkNCaGNIQnNhV1Z6SUhSb1pXMGdkRzhnZEdobElFaFVUVXhGYkdWdFpXNTBjeUJ6ZFdOb0lHRnpJSEJ2Y0hCbGNpQmhibVFnWVhKeWIzZGNibHh1Wm5WdVkzUnBiMjRnWVhCd2JIbFRkSGxzWlhNb1gzSmxaaWtnZTF4dUlDQjJZWElnYzNSaGRHVWdQU0JmY21WbUxuTjBZWFJsTzF4dUlDQlBZbXBsWTNRdWEyVjVjeWh6ZEdGMFpTNWxiR1Z0Wlc1MGN5a3VabTl5UldGamFDaG1kVzVqZEdsdmJpQW9ibUZ0WlNrZ2UxeHVJQ0FnSUhaaGNpQnpkSGxzWlNBOUlITjBZWFJsTG5OMGVXeGxjMXR1WVcxbFhTQjhmQ0I3ZlR0Y2JpQWdJQ0IyWVhJZ1lYUjBjbWxpZFhSbGN5QTlJSE4wWVhSbExtRjBkSEpwWW5WMFpYTmJibUZ0WlYwZ2ZId2dlMzA3WEc0Z0lDQWdkbUZ5SUdWc1pXMWxiblFnUFNCemRHRjBaUzVsYkdWdFpXNTBjMXR1WVcxbFhUc2dMeThnWVhKeWIzY2dhWE1nYjNCMGFXOXVZV3dnS3lCMmFYSjBkV0ZzSUdWc1pXMWxiblJ6WEc1Y2JpQWdJQ0JwWmlBb0lXbHpTRlJOVEVWc1pXMWxiblFvWld4bGJXVnVkQ2tnZkh3Z0lXZGxkRTV2WkdWT1lXMWxLR1ZzWlcxbGJuUXBLU0I3WEc0Z0lDQWdJQ0J5WlhSMWNtNDdYRzRnSUNBZ2ZTQXZMeUJHYkc5M0lHUnZaWE51SjNRZ2MzVndjRzl5ZENCMGJ5QmxlSFJsYm1RZ2RHaHBjeUJ3Y205d1pYSjBlU3dnWW5WMElHbDBKM01nZEdobElHMXZjM1JjYmlBZ0lDQXZMeUJsWm1abFkzUnBkbVVnZDJGNUlIUnZJR0Z3Y0d4NUlITjBlV3hsY3lCMGJ5QmhiaUJJVkUxTVJXeGxiV1Z1ZEZ4dUlDQWdJQzh2SUNSR2JHOTNSbWw0VFdWYlkyRnVibTkwTFhkeWFYUmxYVnh1WEc1Y2JpQWdJQ0JQWW1wbFkzUXVZWE56YVdkdUtHVnNaVzFsYm5RdWMzUjViR1VzSUhOMGVXeGxLVHRjYmlBZ0lDQlBZbXBsWTNRdWEyVjVjeWhoZEhSeWFXSjFkR1Z6S1M1bWIzSkZZV05vS0daMWJtTjBhVzl1SUNodVlXMWxLU0I3WEc0Z0lDQWdJQ0IyWVhJZ2RtRnNkV1VnUFNCaGRIUnlhV0oxZEdWelcyNWhiV1ZkTzF4dVhHNGdJQ0FnSUNCcFppQW9kbUZzZFdVZ1BUMDlJR1poYkhObEtTQjdYRzRnSUNBZ0lDQWdJR1ZzWlcxbGJuUXVjbVZ0YjNabFFYUjBjbWxpZFhSbEtHNWhiV1VwTzF4dUlDQWdJQ0FnZlNCbGJITmxJSHRjYmlBZ0lDQWdJQ0FnWld4bGJXVnVkQzV6WlhSQmRIUnlhV0oxZEdVb2JtRnRaU3dnZG1Gc2RXVWdQVDA5SUhSeWRXVWdQeUFuSnlBNklIWmhiSFZsS1R0Y2JpQWdJQ0FnSUgxY2JpQWdJQ0I5S1R0Y2JpQWdmU2s3WEc1OVhHNWNibVoxYm1OMGFXOXVJR1ZtWm1WamRDaGZjbVZtTWlrZ2UxeHVJQ0IyWVhJZ2MzUmhkR1VnUFNCZmNtVm1NaTV6ZEdGMFpUdGNiaUFnZG1GeUlHbHVhWFJwWVd4VGRIbHNaWE1nUFNCN1hHNGdJQ0FnY0c5d2NHVnlPaUI3WEc0Z0lDQWdJQ0J3YjNOcGRHbHZiam9nYzNSaGRHVXViM0IwYVc5dWN5NXpkSEpoZEdWbmVTeGNiaUFnSUNBZ0lHeGxablE2SUNjd0p5eGNiaUFnSUNBZ0lIUnZjRG9nSnpBbkxGeHVJQ0FnSUNBZ2JXRnlaMmx1T2lBbk1DZGNiaUFnSUNCOUxGeHVJQ0FnSUdGeWNtOTNPaUI3WEc0Z0lDQWdJQ0J3YjNOcGRHbHZiam9nSjJGaWMyOXNkWFJsSjF4dUlDQWdJSDBzWEc0Z0lDQWdjbVZtWlhKbGJtTmxPaUI3ZlZ4dUlDQjlPMXh1SUNCUFltcGxZM1F1WVhOemFXZHVLSE4wWVhSbExtVnNaVzFsYm5SekxuQnZjSEJsY2k1emRIbHNaU3dnYVc1cGRHbGhiRk4wZVd4bGN5NXdiM0J3WlhJcE8xeHVJQ0J6ZEdGMFpTNXpkSGxzWlhNZ1BTQnBibWwwYVdGc1UzUjViR1Z6TzF4dVhHNGdJR2xtSUNoemRHRjBaUzVsYkdWdFpXNTBjeTVoY25KdmR5a2dlMXh1SUNBZ0lFOWlhbVZqZEM1aGMzTnBaMjRvYzNSaGRHVXVaV3hsYldWdWRITXVZWEp5YjNjdWMzUjViR1VzSUdsdWFYUnBZV3hUZEhsc1pYTXVZWEp5YjNjcE8xeHVJQ0I5WEc1Y2JpQWdjbVYwZFhKdUlHWjFibU4wYVc5dUlDZ3BJSHRjYmlBZ0lDQlBZbXBsWTNRdWEyVjVjeWh6ZEdGMFpTNWxiR1Z0Wlc1MGN5a3VabTl5UldGamFDaG1kVzVqZEdsdmJpQW9ibUZ0WlNrZ2UxeHVJQ0FnSUNBZ2RtRnlJR1ZzWlcxbGJuUWdQU0J6ZEdGMFpTNWxiR1Z0Wlc1MGMxdHVZVzFsWFR0Y2JpQWdJQ0FnSUhaaGNpQmhkSFJ5YVdKMWRHVnpJRDBnYzNSaGRHVXVZWFIwY21saWRYUmxjMXR1WVcxbFhTQjhmQ0I3ZlR0Y2JpQWdJQ0FnSUhaaGNpQnpkSGxzWlZCeWIzQmxjblJwWlhNZ1BTQlBZbXBsWTNRdWEyVjVjeWh6ZEdGMFpTNXpkSGxzWlhNdWFHRnpUM2R1VUhKdmNHVnlkSGtvYm1GdFpTa2dQeUJ6ZEdGMFpTNXpkSGxzWlhOYmJtRnRaVjBnT2lCcGJtbDBhV0ZzVTNSNWJHVnpXMjVoYldWZEtUc2dMeThnVTJWMElHRnNiQ0IyWVd4MVpYTWdkRzhnWVc0Z1pXMXdkSGtnYzNSeWFXNW5JSFJ2SUhWdWMyVjBJSFJvWlcxY2JseHVJQ0FnSUNBZ2RtRnlJSE4wZVd4bElEMGdjM1I1YkdWUWNtOXdaWEowYVdWekxuSmxaSFZqWlNobWRXNWpkR2x2YmlBb2MzUjViR1VzSUhCeWIzQmxjblI1S1NCN1hHNGdJQ0FnSUNBZ0lITjBlV3hsVzNCeWIzQmxjblI1WFNBOUlDY25PMXh1SUNBZ0lDQWdJQ0J5WlhSMWNtNGdjM1I1YkdVN1hHNGdJQ0FnSUNCOUxDQjdmU2s3SUM4dklHRnljbTkzSUdseklHOXdkR2x2Ym1Gc0lDc2dkbWx5ZEhWaGJDQmxiR1Z0Wlc1MGMxeHVYRzRnSUNBZ0lDQnBaaUFvSVdselNGUk5URVZzWlcxbGJuUW9aV3hsYldWdWRDa2dmSHdnSVdkbGRFNXZaR1ZPWVcxbEtHVnNaVzFsYm5RcEtTQjdYRzRnSUNBZ0lDQWdJSEpsZEhWeWJqdGNiaUFnSUNBZ0lIMWNibHh1SUNBZ0lDQWdUMkpxWldOMExtRnpjMmxuYmlobGJHVnRaVzUwTG5OMGVXeGxMQ0J6ZEhsc1pTazdYRzRnSUNBZ0lDQlBZbXBsWTNRdWEyVjVjeWhoZEhSeWFXSjFkR1Z6S1M1bWIzSkZZV05vS0daMWJtTjBhVzl1SUNoaGRIUnlhV0oxZEdVcElIdGNiaUFnSUNBZ0lDQWdaV3hsYldWdWRDNXlaVzF2ZG1WQmRIUnlhV0oxZEdVb1lYUjBjbWxpZFhSbEtUdGNiaUFnSUNBZ0lIMHBPMXh1SUNBZ0lIMHBPMXh1SUNCOU8xeHVmU0F2THlCbGMyeHBiblF0WkdsellXSnNaUzF1WlhoMExXeHBibVVnYVcxd2IzSjBMMjV2TFhWdWRYTmxaQzF0YjJSMWJHVnpYRzVjYmx4dVpYaHdiM0owSUdSbFptRjFiSFFnZTF4dUlDQnVZVzFsT2lBbllYQndiSGxUZEhsc1pYTW5MRnh1SUNCbGJtRmliR1ZrT2lCMGNuVmxMRnh1SUNCd2FHRnpaVG9nSjNkeWFYUmxKeXhjYmlBZ1ptNDZJR0Z3Y0d4NVUzUjViR1Z6TEZ4dUlDQmxabVpsWTNRNklHVm1abVZqZEN4Y2JpQWdjbVZ4ZFdseVpYTTZJRnNuWTI5dGNIVjBaVk4wZVd4bGN5ZGRYRzU5T3lJc0ltbHRjRzl5ZENCblpYUkNZWE5sVUd4aFkyVnRaVzUwSUdaeWIyMGdYQ0l1TGk5MWRHbHNjeTluWlhSQ1lYTmxVR3hoWTJWdFpXNTBMbXB6WENJN1hHNXBiWEJ2Y25RZ1oyVjBUR0Y1YjNWMFVtVmpkQ0JtY205dElGd2lMaTR2Wkc5dExYVjBhV3h6TDJkbGRFeGhlVzkxZEZKbFkzUXVhbk5jSWp0Y2JtbHRjRzl5ZENCamIyNTBZV2x1Y3lCbWNtOXRJRndpTGk0dlpHOXRMWFYwYVd4ekwyTnZiblJoYVc1ekxtcHpYQ0k3WEc1cGJYQnZjblFnWjJWMFQyWm1jMlYwVUdGeVpXNTBJR1p5YjIwZ1hDSXVMaTlrYjIwdGRYUnBiSE12WjJWMFQyWm1jMlYwVUdGeVpXNTBMbXB6WENJN1hHNXBiWEJ2Y25RZ1oyVjBUV0ZwYmtGNGFYTkdjbTl0VUd4aFkyVnRaVzUwSUdaeWIyMGdYQ0l1TGk5MWRHbHNjeTluWlhSTllXbHVRWGhwYzBaeWIyMVFiR0ZqWlcxbGJuUXVhbk5jSWp0Y2JtbHRjRzl5ZENCN0lIZHBkR2hwYmlCOUlHWnliMjBnWENJdUxpOTFkR2xzY3k5M2FYUm9hVzR1YW5OY0lqdGNibWx0Y0c5eWRDQnRaWEpuWlZCaFpHUnBibWRQWW1wbFkzUWdabkp2YlNCY0lpNHVMM1YwYVd4ekwyMWxjbWRsVUdGa1pHbHVaMDlpYW1WamRDNXFjMXdpTzF4dWFXMXdiM0owSUdWNGNHRnVaRlJ2U0dGemFFMWhjQ0JtY205dElGd2lMaTR2ZFhScGJITXZaWGh3WVc1a1ZHOUlZWE5vVFdGd0xtcHpYQ0k3WEc1cGJYQnZjblFnZXlCc1pXWjBMQ0J5YVdkb2RDd2dZbUZ6WlZCc1lXTmxiV1Z1ZEhNc0lIUnZjQ3dnWW05MGRHOXRJSDBnWm5KdmJTQmNJaTR1TDJWdWRXMXpMbXB6WENJN1hHNXBiWEJ2Y25RZ2V5QnBjMGhVVFV4RmJHVnRaVzUwSUgwZ1puSnZiU0JjSWk0dUwyUnZiUzExZEdsc2N5OXBibk4wWVc1alpVOW1MbXB6WENJN0lDOHZJR1Z6YkdsdWRDMWthWE5oWW14bExXNWxlSFF0YkdsdVpTQnBiWEJ2Y25RdmJtOHRkVzUxYzJWa0xXMXZaSFZzWlhOY2JseHVkbUZ5SUhSdlVHRmtaR2x1WjA5aWFtVmpkQ0E5SUdaMWJtTjBhVzl1SUhSdlVHRmtaR2x1WjA5aWFtVmpkQ2h3WVdSa2FXNW5MQ0J6ZEdGMFpTa2dlMXh1SUNCd1lXUmthVzVuSUQwZ2RIbHdaVzltSUhCaFpHUnBibWNnUFQwOUlDZG1kVzVqZEdsdmJpY2dQeUJ3WVdSa2FXNW5LRTlpYW1WamRDNWhjM05wWjI0b2UzMHNJSE4wWVhSbExuSmxZM1J6TENCN1hHNGdJQ0FnY0d4aFkyVnRaVzUwT2lCemRHRjBaUzV3YkdGalpXMWxiblJjYmlBZ2ZTa3BJRG9nY0dGa1pHbHVaenRjYmlBZ2NtVjBkWEp1SUcxbGNtZGxVR0ZrWkdsdVowOWlhbVZqZENoMGVYQmxiMllnY0dGa1pHbHVaeUFoUFQwZ0oyNTFiV0psY2ljZ1B5QndZV1JrYVc1bklEb2daWGh3WVc1a1ZHOUlZWE5vVFdGd0tIQmhaR1JwYm1jc0lHSmhjMlZRYkdGalpXMWxiblJ6S1NrN1hHNTlPMXh1WEc1bWRXNWpkR2x2YmlCaGNuSnZkeWhmY21WbUtTQjdYRzRnSUhaaGNpQmZjM1JoZEdVa2JXOWthV1pwWlhKelJHRjBZU1E3WEc1Y2JpQWdkbUZ5SUhOMFlYUmxJRDBnWDNKbFppNXpkR0YwWlN4Y2JpQWdJQ0FnSUc1aGJXVWdQU0JmY21WbUxtNWhiV1VzWEc0Z0lDQWdJQ0J2Y0hScGIyNXpJRDBnWDNKbFppNXZjSFJwYjI1ek8xeHVJQ0IyWVhJZ1lYSnliM2RGYkdWdFpXNTBJRDBnYzNSaGRHVXVaV3hsYldWdWRITXVZWEp5YjNjN1hHNGdJSFpoY2lCd2IzQndaWEpQWm1aelpYUnpJRDBnYzNSaGRHVXViVzlrYVdacFpYSnpSR0YwWVM1d2IzQndaWEpQWm1aelpYUnpPMXh1SUNCMllYSWdZbUZ6WlZCc1lXTmxiV1Z1ZENBOUlHZGxkRUpoYzJWUWJHRmpaVzFsYm5Rb2MzUmhkR1V1Y0d4aFkyVnRaVzUwS1R0Y2JpQWdkbUZ5SUdGNGFYTWdQU0JuWlhSTllXbHVRWGhwYzBaeWIyMVFiR0ZqWlcxbGJuUW9ZbUZ6WlZCc1lXTmxiV1Z1ZENrN1hHNGdJSFpoY2lCcGMxWmxjblJwWTJGc0lEMGdXMnhsWm5Rc0lISnBaMmgwWFM1cGJtUmxlRTltS0dKaGMyVlFiR0ZqWlcxbGJuUXBJRDQ5SURBN1hHNGdJSFpoY2lCc1pXNGdQU0JwYzFabGNuUnBZMkZzSUQ4Z0oyaGxhV2RvZENjZ09pQW5kMmxrZEdnbk8xeHVYRzRnSUdsbUlDZ2hZWEp5YjNkRmJHVnRaVzUwSUh4OElDRndiM0J3WlhKUFptWnpaWFJ6S1NCN1hHNGdJQ0FnY21WMGRYSnVPMXh1SUNCOVhHNWNiaUFnZG1GeUlIQmhaR1JwYm1kUFltcGxZM1FnUFNCMGIxQmhaR1JwYm1kUFltcGxZM1FvYjNCMGFXOXVjeTV3WVdSa2FXNW5MQ0J6ZEdGMFpTazdYRzRnSUhaaGNpQmhjbkp2ZDFKbFkzUWdQU0JuWlhSTVlYbHZkWFJTWldOMEtHRnljbTkzUld4bGJXVnVkQ2s3WEc0Z0lIWmhjaUJ0YVc1UWNtOXdJRDBnWVhocGN5QTlQVDBnSjNrbklEOGdkRzl3SURvZ2JHVm1kRHRjYmlBZ2RtRnlJRzFoZUZCeWIzQWdQU0JoZUdseklEMDlQU0FuZVNjZ1B5QmliM1IwYjIwZ09pQnlhV2RvZER0Y2JpQWdkbUZ5SUdWdVpFUnBabVlnUFNCemRHRjBaUzV5WldOMGN5NXlaV1psY21WdVkyVmJiR1Z1WFNBcklITjBZWFJsTG5KbFkzUnpMbkpsWm1WeVpXNWpaVnRoZUdselhTQXRJSEJ2Y0hCbGNrOW1abk5sZEhOYllYaHBjMTBnTFNCemRHRjBaUzV5WldOMGN5NXdiM0J3WlhKYmJHVnVYVHRjYmlBZ2RtRnlJSE4wWVhKMFJHbG1aaUE5SUhCdmNIQmxjazltWm5ObGRITmJZWGhwYzEwZ0xTQnpkR0YwWlM1eVpXTjBjeTV5WldabGNtVnVZMlZiWVhocGMxMDdYRzRnSUhaaGNpQmhjbkp2ZDA5bVpuTmxkRkJoY21WdWRDQTlJR2RsZEU5bVpuTmxkRkJoY21WdWRDaGhjbkp2ZDBWc1pXMWxiblFwTzF4dUlDQjJZWElnWTJ4cFpXNTBVMmw2WlNBOUlHRnljbTkzVDJabWMyVjBVR0Z5Wlc1MElEOGdZWGhwY3lBOVBUMGdKM2tuSUQ4Z1lYSnliM2RQWm1aelpYUlFZWEpsYm5RdVkyeHBaVzUwU0dWcFoyaDBJSHg4SURBZ09pQmhjbkp2ZDA5bVpuTmxkRkJoY21WdWRDNWpiR2xsYm5SWGFXUjBhQ0I4ZkNBd0lEb2dNRHRjYmlBZ2RtRnlJR05sYm5SbGNsUnZVbVZtWlhKbGJtTmxJRDBnWlc1a1JHbG1aaUF2SURJZ0xTQnpkR0Z5ZEVScFptWWdMeUF5T3lBdkx5Qk5ZV3RsSUhOMWNtVWdkR2hsSUdGeWNtOTNJR1J2WlhOdUozUWdiM1psY21ac2IzY2dkR2hsSUhCdmNIQmxjaUJwWmlCMGFHVWdZMlZ1ZEdWeUlIQnZhVzUwSUdselhHNGdJQzh2SUc5MWRITnBaR1VnYjJZZ2RHaGxJSEJ2Y0hCbGNpQmliM1Z1WkhOY2JseHVJQ0IyWVhJZ2JXbHVJRDBnY0dGa1pHbHVaMDlpYW1WamRGdHRhVzVRY205d1hUdGNiaUFnZG1GeUlHMWhlQ0E5SUdOc2FXVnVkRk5wZW1VZ0xTQmhjbkp2ZDFKbFkzUmJiR1Z1WFNBdElIQmhaR1JwYm1kUFltcGxZM1JiYldGNFVISnZjRjA3WEc0Z0lIWmhjaUJqWlc1MFpYSWdQU0JqYkdsbGJuUlRhWHBsSUM4Z01pQXRJR0Z5Y205M1VtVmpkRnRzWlc1ZElDOGdNaUFySUdObGJuUmxjbFJ2VW1WbVpYSmxibU5sTzF4dUlDQjJZWElnYjJabWMyVjBJRDBnZDJsMGFHbHVLRzFwYml3Z1kyVnVkR1Z5TENCdFlYZ3BPeUF2THlCUWNtVjJaVzUwY3lCaWNtVmhhMmx1WnlCemVXNTBZWGdnYUdsbmFHeHBaMmgwYVc1bkxpNHVYRzVjYmlBZ2RtRnlJR0Y0YVhOUWNtOXdJRDBnWVhocGN6dGNiaUFnYzNSaGRHVXViVzlrYVdacFpYSnpSR0YwWVZ0dVlXMWxYU0E5SUNoZmMzUmhkR1VrYlc5a2FXWnBaWEp6UkdGMFlTUWdQU0I3ZlN3Z1gzTjBZWFJsSkcxdlpHbG1hV1Z5YzBSaGRHRWtXMkY0YVhOUWNtOXdYU0E5SUc5bVpuTmxkQ3dnWDNOMFlYUmxKRzF2WkdsbWFXVnljMFJoZEdFa0xtTmxiblJsY2s5bVpuTmxkQ0E5SUc5bVpuTmxkQ0F0SUdObGJuUmxjaXdnWDNOMFlYUmxKRzF2WkdsbWFXVnljMFJoZEdFa0tUdGNibjFjYmx4dVpuVnVZM1JwYjI0Z1pXWm1aV04wS0Y5eVpXWXlLU0I3WEc0Z0lIWmhjaUJ6ZEdGMFpTQTlJRjl5WldZeUxuTjBZWFJsTEZ4dUlDQWdJQ0FnYjNCMGFXOXVjeUE5SUY5eVpXWXlMbTl3ZEdsdmJuTTdYRzRnSUhaaGNpQmZiM0IwYVc5dWN5UmxiR1Z0Wlc1MElEMGdiM0IwYVc5dWN5NWxiR1Z0Wlc1MExGeHVJQ0FnSUNBZ1lYSnliM2RGYkdWdFpXNTBJRDBnWDI5d2RHbHZibk1rWld4bGJXVnVkQ0E5UFQwZ2RtOXBaQ0F3SUQ4Z0oxdGtZWFJoTFhCdmNIQmxjaTFoY25KdmQxMG5JRG9nWDI5d2RHbHZibk1rWld4bGJXVnVkRHRjYmx4dUlDQnBaaUFvWVhKeWIzZEZiR1Z0Wlc1MElEMDlJRzUxYkd3cElIdGNiaUFnSUNCeVpYUjFjbTQ3WEc0Z0lIMGdMeThnUTFOVElITmxiR1ZqZEc5eVhHNWNibHh1SUNCcFppQW9kSGx3Wlc5bUlHRnljbTkzUld4bGJXVnVkQ0E5UFQwZ0ozTjBjbWx1WnljcElIdGNiaUFnSUNCaGNuSnZkMFZzWlcxbGJuUWdQU0J6ZEdGMFpTNWxiR1Z0Wlc1MGN5NXdiM0J3WlhJdWNYVmxjbmxUWld4bFkzUnZjaWhoY25KdmQwVnNaVzFsYm5RcE8xeHVYRzRnSUNBZ2FXWWdLQ0ZoY25KdmQwVnNaVzFsYm5RcElIdGNiaUFnSUNBZ0lISmxkSFZ5Ymp0Y2JpQWdJQ0I5WEc0Z0lIMWNibHh1SUNCcFppQW9jSEp2WTJWemN5NWxibll1VGs5RVJWOUZUbFlnSVQwOUlGd2ljSEp2WkhWamRHbHZibHdpS1NCN1hHNGdJQ0FnYVdZZ0tDRnBjMGhVVFV4RmJHVnRaVzUwS0dGeWNtOTNSV3hsYldWdWRDa3BJSHRjYmlBZ0lDQWdJR052Ym5OdmJHVXVaWEp5YjNJb1d5ZFFiM0J3WlhJNklGd2lZWEp5YjNkY0lpQmxiR1Z0Wlc1MElHMTFjM1FnWW1VZ1lXNGdTRlJOVEVWc1pXMWxiblFnS0c1dmRDQmhiaUJUVmtkRmJHVnRaVzUwS1M0bkxDQW5WRzhnZFhObElHRnVJRk5XUnlCaGNuSnZkeXdnZDNKaGNDQnBkQ0JwYmlCaGJpQklWRTFNUld4bGJXVnVkQ0IwYUdGMElIZHBiR3dnWW1VZ2RYTmxaQ0JoY3ljc0lDZDBhR1VnWVhKeWIzY3VKMTB1YW05cGJpZ25JQ2NwS1R0Y2JpQWdJQ0I5WEc0Z0lIMWNibHh1SUNCcFppQW9JV052Ym5SaGFXNXpLSE4wWVhSbExtVnNaVzFsYm5SekxuQnZjSEJsY2l3Z1lYSnliM2RGYkdWdFpXNTBLU2tnZTF4dUlDQWdJR2xtSUNod2NtOWpaWE56TG1WdWRpNU9UMFJGWDBWT1ZpQWhQVDBnWENKd2NtOWtkV04wYVc5dVhDSXBJSHRjYmlBZ0lDQWdJR052Ym5OdmJHVXVaWEp5YjNJb1d5ZFFiM0J3WlhJNklGd2lZWEp5YjNkY0lpQnRiMlJwWm1sbGNseGNKM01nWUdWc1pXMWxiblJnSUcxMWMzUWdZbVVnWVNCamFHbHNaQ0J2WmlCMGFHVWdjRzl3Y0dWeUp5d2dKMlZzWlcxbGJuUXVKMTB1YW05cGJpZ25JQ2NwS1R0Y2JpQWdJQ0I5WEc1Y2JpQWdJQ0J5WlhSMWNtNDdYRzRnSUgxY2JseHVJQ0J6ZEdGMFpTNWxiR1Z0Wlc1MGN5NWhjbkp2ZHlBOUlHRnljbTkzUld4bGJXVnVkRHRjYm4wZ0x5OGdaWE5zYVc1MExXUnBjMkZpYkdVdGJtVjRkQzFzYVc1bElHbHRjRzl5ZEM5dWJ5MTFiblZ6WldRdGJXOWtkV3hsYzF4dVhHNWNibVY0Y0c5eWRDQmtaV1poZFd4MElIdGNiaUFnYm1GdFpUb2dKMkZ5Y205M0p5eGNiaUFnWlc1aFlteGxaRG9nZEhKMVpTeGNiaUFnY0doaGMyVTZJQ2R0WVdsdUp5eGNiaUFnWm00NklHRnljbTkzTEZ4dUlDQmxabVpsWTNRNklHVm1abVZqZEN4Y2JpQWdjbVZ4ZFdseVpYTTZJRnNuY0c5d2NHVnlUMlptYzJWMGN5ZGRMRnh1SUNCeVpYRjFhWEpsYzBsbVJYaHBjM1J6T2lCYkozQnlaWFpsYm5SUGRtVnlabXh2ZHlkZFhHNTlPeUlzSW1sdGNHOXlkQ0I3SUhSdmNDd2diR1ZtZEN3Z2NtbG5hSFFzSUdKdmRIUnZiU3dnWlc1a0lIMGdabkp2YlNCY0lpNHVMMlZ1ZFcxekxtcHpYQ0k3WEc1cGJYQnZjblFnWjJWMFQyWm1jMlYwVUdGeVpXNTBJR1p5YjIwZ1hDSXVMaTlrYjIwdGRYUnBiSE12WjJWMFQyWm1jMlYwVUdGeVpXNTBMbXB6WENJN1hHNXBiWEJ2Y25RZ1oyVjBWMmx1Wkc5M0lHWnliMjBnWENJdUxpOWtiMjB0ZFhScGJITXZaMlYwVjJsdVpHOTNMbXB6WENJN1hHNXBiWEJ2Y25RZ1oyVjBSRzlqZFcxbGJuUkZiR1Z0Wlc1MElHWnliMjBnWENJdUxpOWtiMjB0ZFhScGJITXZaMlYwUkc5amRXMWxiblJGYkdWdFpXNTBMbXB6WENJN1hHNXBiWEJ2Y25RZ1oyVjBRMjl0Y0hWMFpXUlRkSGxzWlNCbWNtOXRJRndpTGk0dlpHOXRMWFYwYVd4ekwyZGxkRU52YlhCMWRHVmtVM1I1YkdVdWFuTmNJanRjYm1sdGNHOXlkQ0JuWlhSQ1lYTmxVR3hoWTJWdFpXNTBJR1p5YjIwZ1hDSXVMaTkxZEdsc2N5OW5aWFJDWVhObFVHeGhZMlZ0Wlc1MExtcHpYQ0k3WEc1cGJYQnZjblFnWjJWMFZtRnlhV0YwYVc5dUlHWnliMjBnWENJdUxpOTFkR2xzY3k5blpYUldZWEpwWVhScGIyNHVhbk5jSWp0Y2JtbHRjRzl5ZENCN0lISnZkVzVrSUgwZ1puSnZiU0JjSWk0dUwzVjBhV3h6TDIxaGRHZ3Vhbk5jSWpzZ0x5OGdaWE5zYVc1MExXUnBjMkZpYkdVdGJtVjRkQzFzYVc1bElHbHRjRzl5ZEM5dWJ5MTFiblZ6WldRdGJXOWtkV3hsYzF4dVhHNTJZWElnZFc1elpYUlRhV1JsY3lBOUlIdGNiaUFnZEc5d09pQW5ZWFYwYnljc1hHNGdJSEpwWjJoME9pQW5ZWFYwYnljc1hHNGdJR0p2ZEhSdmJUb2dKMkYxZEc4bkxGeHVJQ0JzWldaME9pQW5ZWFYwYnlkY2JuMDdJQzh2SUZKdmRXNWtJSFJvWlNCdlptWnpaWFJ6SUhSdklIUm9aU0J1WldGeVpYTjBJSE4xYVhSaFlteGxJSE4xWW5CcGVHVnNJR0poYzJWa0lHOXVJSFJvWlNCRVVGSXVYRzR2THlCYWIyOXRhVzVuSUdOaGJpQmphR0Z1WjJVZ2RHaGxJRVJRVWl3Z1luVjBJR2wwSUhObFpXMXpJSFJ2SUhKbGNHOXlkQ0JoSUhaaGJIVmxJSFJvWVhRZ2QybHNiRnh1THk4Z1kyeGxZVzVzZVNCa2FYWnBaR1VnZEdobElIWmhiSFZsY3lCcGJuUnZJSFJvWlNCaGNIQnliM0J5YVdGMFpTQnpkV0p3YVhobGJITXVYRzVjYm1aMWJtTjBhVzl1SUhKdmRXNWtUMlptYzJWMGMwSjVSRkJTS0Y5eVpXWXBJSHRjYmlBZ2RtRnlJSGdnUFNCZmNtVm1MbmdzWEc0Z0lDQWdJQ0I1SUQwZ1gzSmxaaTU1TzF4dUlDQjJZWElnZDJsdUlEMGdkMmx1Wkc5M08xeHVJQ0IyWVhJZ1pIQnlJRDBnZDJsdUxtUmxkbWxqWlZCcGVHVnNVbUYwYVc4Z2ZId2dNVHRjYmlBZ2NtVjBkWEp1SUh0Y2JpQWdJQ0I0T2lCeWIzVnVaQ2g0SUNvZ1pIQnlLU0F2SUdSd2NpQjhmQ0F3TEZ4dUlDQWdJSGs2SUhKdmRXNWtLSGtnS2lCa2NISXBJQzhnWkhCeUlIeDhJREJjYmlBZ2ZUdGNibjFjYmx4dVpYaHdiM0owSUdaMWJtTjBhVzl1SUcxaGNGUnZVM1I1YkdWektGOXlaV1l5S1NCN1hHNGdJSFpoY2lCZlQySnFaV04wSkdGemMybG5iakk3WEc1Y2JpQWdkbUZ5SUhCdmNIQmxjaUE5SUY5eVpXWXlMbkJ2Y0hCbGNpeGNiaUFnSUNBZ0lIQnZjSEJsY2xKbFkzUWdQU0JmY21WbU1pNXdiM0J3WlhKU1pXTjBMRnh1SUNBZ0lDQWdjR3hoWTJWdFpXNTBJRDBnWDNKbFpqSXVjR3hoWTJWdFpXNTBMRnh1SUNBZ0lDQWdkbUZ5YVdGMGFXOXVJRDBnWDNKbFpqSXVkbUZ5YVdGMGFXOXVMRnh1SUNBZ0lDQWdiMlptYzJWMGN5QTlJRjl5WldZeUxtOW1abk5sZEhNc1hHNGdJQ0FnSUNCd2IzTnBkR2x2YmlBOUlGOXlaV1l5TG5CdmMybDBhVzl1TEZ4dUlDQWdJQ0FnWjNCMVFXTmpaV3hsY21GMGFXOXVJRDBnWDNKbFpqSXVaM0IxUVdOalpXeGxjbUYwYVc5dUxGeHVJQ0FnSUNBZ1lXUmhjSFJwZG1VZ1BTQmZjbVZtTWk1aFpHRndkR2wyWlN4Y2JpQWdJQ0FnSUhKdmRXNWtUMlptYzJWMGN5QTlJRjl5WldZeUxuSnZkVzVrVDJabWMyVjBjeXhjYmlBZ0lDQWdJR2x6Um1sNFpXUWdQU0JmY21WbU1pNXBjMFpwZUdWa08xeHVJQ0IyWVhJZ1gyOW1abk5sZEhNa2VDQTlJRzltWm5ObGRITXVlQ3hjYmlBZ0lDQWdJSGdnUFNCZmIyWm1jMlYwY3lSNElEMDlQU0IyYjJsa0lEQWdQeUF3SURvZ1gyOW1abk5sZEhNa2VDeGNiaUFnSUNBZ0lGOXZabVp6WlhSekpIa2dQU0J2Wm1aelpYUnpMbmtzWEc0Z0lDQWdJQ0I1SUQwZ1gyOW1abk5sZEhNa2VTQTlQVDBnZG05cFpDQXdJRDhnTUNBNklGOXZabVp6WlhSekpIazdYRzVjYmlBZ2RtRnlJRjl5WldZeklEMGdkSGx3Wlc5bUlISnZkVzVrVDJabWMyVjBjeUE5UFQwZ0oyWjFibU4wYVc5dUp5QS9JSEp2ZFc1a1QyWm1jMlYwY3loN1hHNGdJQ0FnZURvZ2VDeGNiaUFnSUNCNU9pQjVYRzRnSUgwcElEb2dlMXh1SUNBZ0lIZzZJSGdzWEc0Z0lDQWdlVG9nZVZ4dUlDQjlPMXh1WEc0Z0lIZ2dQU0JmY21WbU15NTRPMXh1SUNCNUlEMGdYM0psWmpNdWVUdGNiaUFnZG1GeUlHaGhjMWdnUFNCdlptWnpaWFJ6TG1oaGMwOTNibEJ5YjNCbGNuUjVLQ2Q0SnlrN1hHNGdJSFpoY2lCb1lYTlpJRDBnYjJabWMyVjBjeTVvWVhOUGQyNVFjbTl3WlhKMGVTZ25lU2NwTzF4dUlDQjJZWElnYzJsa1pWZ2dQU0JzWldaME8xeHVJQ0IyWVhJZ2MybGtaVmtnUFNCMGIzQTdYRzRnSUhaaGNpQjNhVzRnUFNCM2FXNWtiM2M3WEc1Y2JpQWdhV1lnS0dGa1lYQjBhWFpsS1NCN1hHNGdJQ0FnZG1GeUlHOW1abk5sZEZCaGNtVnVkQ0E5SUdkbGRFOW1abk5sZEZCaGNtVnVkQ2h3YjNCd1pYSXBPMXh1SUNBZ0lIWmhjaUJvWldsbmFIUlFjbTl3SUQwZ0oyTnNhV1Z1ZEVobGFXZG9kQ2M3WEc0Z0lDQWdkbUZ5SUhkcFpIUm9VSEp2Y0NBOUlDZGpiR2xsYm5SWGFXUjBhQ2M3WEc1Y2JpQWdJQ0JwWmlBb2IyWm1jMlYwVUdGeVpXNTBJRDA5UFNCblpYUlhhVzVrYjNjb2NHOXdjR1Z5S1NrZ2UxeHVJQ0FnSUNBZ2IyWm1jMlYwVUdGeVpXNTBJRDBnWjJWMFJHOWpkVzFsYm5SRmJHVnRaVzUwS0hCdmNIQmxjaWs3WEc1Y2JpQWdJQ0FnSUdsbUlDaG5aWFJEYjIxd2RYUmxaRk4wZVd4bEtHOW1abk5sZEZCaGNtVnVkQ2t1Y0c5emFYUnBiMjRnSVQwOUlDZHpkR0YwYVdNbklDWW1JSEJ2YzJsMGFXOXVJRDA5UFNBbllXSnpiMngxZEdVbktTQjdYRzRnSUNBZ0lDQWdJR2hsYVdkb2RGQnliM0FnUFNBbmMyTnliMnhzU0dWcFoyaDBKenRjYmlBZ0lDQWdJQ0FnZDJsa2RHaFFjbTl3SUQwZ0ozTmpjbTlzYkZkcFpIUm9KenRjYmlBZ0lDQWdJSDFjYmlBZ0lDQjlJQzh2SUNSR2JHOTNSbWw0VFdWYmFXNWpiMjF3WVhScFlteGxMV05oYzNSZE9pQm1iM0pqWlNCMGVYQmxJSEpsWm1sdVpXMWxiblFzSUhkbElHTnZiWEJoY21VZ2IyWm1jMlYwVUdGeVpXNTBJSGRwZEdnZ2QybHVaRzkzSUdGaWIzWmxMQ0JpZFhRZ1JteHZkeUJrYjJWemJpZDBJR1JsZEdWamRDQnBkRnh1WEc1Y2JpQWdJQ0J2Wm1aelpYUlFZWEpsYm5RZ1BTQnZabVp6WlhSUVlYSmxiblE3WEc1Y2JpQWdJQ0JwWmlBb2NHeGhZMlZ0Wlc1MElEMDlQU0IwYjNBZ2ZId2dLSEJzWVdObGJXVnVkQ0E5UFQwZ2JHVm1kQ0I4ZkNCd2JHRmpaVzFsYm5RZ1BUMDlJSEpwWjJoMEtTQW1KaUIyWVhKcFlYUnBiMjRnUFQwOUlHVnVaQ2tnZTF4dUlDQWdJQ0FnYzJsa1pWa2dQU0JpYjNSMGIyMDdYRzRnSUNBZ0lDQjJZWElnYjJabWMyVjBXU0E5SUdselJtbDRaV1FnSmlZZ2IyWm1jMlYwVUdGeVpXNTBJRDA5UFNCM2FXNGdKaVlnZDJsdUxuWnBjM1ZoYkZacFpYZHdiM0owSUQ4Z2QybHVMblpwYzNWaGJGWnBaWGR3YjNKMExtaGxhV2RvZENBNklDOHZJQ1JHYkc5M1JtbDRUV1ZiY0hKdmNDMXRhWE56YVc1blhWeHVJQ0FnSUNBZ2IyWm1jMlYwVUdGeVpXNTBXMmhsYVdkb2RGQnliM0JkTzF4dUlDQWdJQ0FnZVNBdFBTQnZabVp6WlhSWklDMGdjRzl3Y0dWeVVtVmpkQzVvWldsbmFIUTdYRzRnSUNBZ0lDQjVJQ285SUdkd2RVRmpZMlZzWlhKaGRHbHZiaUEvSURFZ09pQXRNVHRjYmlBZ0lDQjlYRzVjYmlBZ0lDQnBaaUFvY0d4aFkyVnRaVzUwSUQwOVBTQnNaV1owSUh4OElDaHdiR0ZqWlcxbGJuUWdQVDA5SUhSdmNDQjhmQ0J3YkdGalpXMWxiblFnUFQwOUlHSnZkSFJ2YlNrZ0ppWWdkbUZ5YVdGMGFXOXVJRDA5UFNCbGJtUXBJSHRjYmlBZ0lDQWdJSE5wWkdWWUlEMGdjbWxuYUhRN1hHNGdJQ0FnSUNCMllYSWdiMlptYzJWMFdDQTlJR2x6Um1sNFpXUWdKaVlnYjJabWMyVjBVR0Z5Wlc1MElEMDlQU0IzYVc0Z0ppWWdkMmx1TG5acGMzVmhiRlpwWlhkd2IzSjBJRDhnZDJsdUxuWnBjM1ZoYkZacFpYZHdiM0owTG5kcFpIUm9JRG9nTHk4Z0pFWnNiM2RHYVhoTlpWdHdjbTl3TFcxcGMzTnBibWRkWEc0Z0lDQWdJQ0J2Wm1aelpYUlFZWEpsYm5SYmQybGtkR2hRY205d1hUdGNiaUFnSUNBZ0lIZ2dMVDBnYjJabWMyVjBXQ0F0SUhCdmNIQmxjbEpsWTNRdWQybGtkR2c3WEc0Z0lDQWdJQ0I0SUNvOUlHZHdkVUZqWTJWc1pYSmhkR2x2YmlBL0lERWdPaUF0TVR0Y2JpQWdJQ0I5WEc0Z0lIMWNibHh1SUNCMllYSWdZMjl0Ylc5dVUzUjViR1Z6SUQwZ1QySnFaV04wTG1GemMybG5iaWg3WEc0Z0lDQWdjRzl6YVhScGIyNDZJSEJ2YzJsMGFXOXVYRzRnSUgwc0lHRmtZWEIwYVhabElDWW1JSFZ1YzJWMFUybGtaWE1wTzF4dVhHNGdJSFpoY2lCZmNtVm1OQ0E5SUhKdmRXNWtUMlptYzJWMGN5QTlQVDBnZEhKMVpTQS9JSEp2ZFc1a1QyWm1jMlYwYzBKNVJGQlNLSHRjYmlBZ0lDQjRPaUI0TEZ4dUlDQWdJSGs2SUhsY2JpQWdmU2tnT2lCN1hHNGdJQ0FnZURvZ2VDeGNiaUFnSUNCNU9pQjVYRzRnSUgwN1hHNWNiaUFnZUNBOUlGOXlaV1kwTG5nN1hHNGdJSGtnUFNCZmNtVm1OQzU1TzF4dVhHNGdJR2xtSUNobmNIVkJZMk5sYkdWeVlYUnBiMjRwSUh0Y2JpQWdJQ0IyWVhJZ1gwOWlhbVZqZENSaGMzTnBaMjQ3WEc1Y2JpQWdJQ0J5WlhSMWNtNGdUMkpxWldOMExtRnpjMmxuYmloN2ZTd2dZMjl0Ylc5dVUzUjViR1Z6TENBb1gwOWlhbVZqZENSaGMzTnBaMjRnUFNCN2ZTd2dYMDlpYW1WamRDUmhjM05wWjI1YmMybGtaVmxkSUQwZ2FHRnpXU0EvSUNjd0p5QTZJQ2NuTENCZlQySnFaV04wSkdGemMybG5ibHR6YVdSbFdGMGdQU0JvWVhOWUlEOGdKekFuSURvZ0p5Y3NJRjlQWW1wbFkzUWtZWE56YVdkdUxuUnlZVzV6Wm05eWJTQTlJQ2gzYVc0dVpHVjJhV05sVUdsNFpXeFNZWFJwYnlCOGZDQXhLU0E4UFNBeElEOGdYQ0owY21GdWMyeGhkR1VvWENJZ0t5QjRJQ3NnWENKd2VDd2dYQ0lnS3lCNUlDc2dYQ0p3ZUNsY0lpQTZJRndpZEhKaGJuTnNZWFJsTTJRb1hDSWdLeUI0SUNzZ1hDSndlQ3dnWENJZ0t5QjVJQ3NnWENKd2VDd2dNQ2xjSWl3Z1gwOWlhbVZqZENSaGMzTnBaMjRwS1R0Y2JpQWdmVnh1WEc0Z0lISmxkSFZ5YmlCUFltcGxZM1F1WVhOemFXZHVLSHQ5TENCamIyMXRiMjVUZEhsc1pYTXNJQ2hmVDJKcVpXTjBKR0Z6YzJsbmJqSWdQU0I3ZlN3Z1gwOWlhbVZqZENSaGMzTnBaMjR5VzNOcFpHVlpYU0E5SUdoaGMxa2dQeUI1SUNzZ1hDSndlRndpSURvZ0p5Y3NJRjlQWW1wbFkzUWtZWE56YVdkdU1sdHphV1JsV0YwZ1BTQm9ZWE5ZSUQ4Z2VDQXJJRndpY0hoY0lpQTZJQ2NuTENCZlQySnFaV04wSkdGemMybG5iakl1ZEhKaGJuTm1iM0p0SUQwZ0p5Y3NJRjlQWW1wbFkzUWtZWE56YVdkdU1pa3BPMXh1ZlZ4dVhHNW1kVzVqZEdsdmJpQmpiMjF3ZFhSbFUzUjViR1Z6S0Y5eVpXWTFLU0I3WEc0Z0lIWmhjaUJ6ZEdGMFpTQTlJRjl5WldZMUxuTjBZWFJsTEZ4dUlDQWdJQ0FnYjNCMGFXOXVjeUE5SUY5eVpXWTFMbTl3ZEdsdmJuTTdYRzRnSUhaaGNpQmZiM0IwYVc5dWN5Um5jSFZCWTJObGJHVnlZWFFnUFNCdmNIUnBiMjV6TG1kd2RVRmpZMlZzWlhKaGRHbHZiaXhjYmlBZ0lDQWdJR2R3ZFVGalkyVnNaWEpoZEdsdmJpQTlJRjl2Y0hScGIyNXpKR2R3ZFVGalkyVnNaWEpoZENBOVBUMGdkbTlwWkNBd0lEOGdkSEoxWlNBNklGOXZjSFJwYjI1ekpHZHdkVUZqWTJWc1pYSmhkQ3hjYmlBZ0lDQWdJRjl2Y0hScGIyNXpKR0ZrWVhCMGFYWmxJRDBnYjNCMGFXOXVjeTVoWkdGd2RHbDJaU3hjYmlBZ0lDQWdJR0ZrWVhCMGFYWmxJRDBnWDI5d2RHbHZibk1rWVdSaGNIUnBkbVVnUFQwOUlIWnZhV1FnTUNBL0lIUnlkV1VnT2lCZmIzQjBhVzl1Y3lSaFpHRndkR2wyWlN4Y2JpQWdJQ0FnSUY5dmNIUnBiMjV6SkhKdmRXNWtUMlptYzJWMGN5QTlJRzl3ZEdsdmJuTXVjbTkxYm1SUFptWnpaWFJ6TEZ4dUlDQWdJQ0FnY205MWJtUlBabVp6WlhSeklEMGdYMjl3ZEdsdmJuTWtjbTkxYm1SUFptWnpaWFJ6SUQwOVBTQjJiMmxrSURBZ1B5QjBjblZsSURvZ1gyOXdkR2x2Ym5Na2NtOTFibVJQWm1aelpYUnpPMXh1WEc0Z0lHbG1JQ2h3Y205alpYTnpMbVZ1ZGk1T1QwUkZYMFZPVmlBaFBUMGdYQ0p3Y205a2RXTjBhVzl1WENJcElIdGNiaUFnSUNCMllYSWdkSEpoYm5OcGRHbHZibEJ5YjNCbGNuUjVJRDBnWjJWMFEyOXRjSFYwWldSVGRIbHNaU2h6ZEdGMFpTNWxiR1Z0Wlc1MGN5NXdiM0J3WlhJcExuUnlZVzV6YVhScGIyNVFjbTl3WlhKMGVTQjhmQ0FuSnp0Y2JseHVJQ0FnSUdsbUlDaGhaR0Z3ZEdsMlpTQW1KaUJiSjNSeVlXNXpabTl5YlNjc0lDZDBiM0FuTENBbmNtbG5hSFFuTENBblltOTBkRzl0Snl3Z0oyeGxablFuWFM1emIyMWxLR1oxYm1OMGFXOXVJQ2h3Y205d1pYSjBlU2tnZTF4dUlDQWdJQ0FnY21WMGRYSnVJSFJ5WVc1emFYUnBiMjVRY205d1pYSjBlUzVwYm1SbGVFOW1LSEJ5YjNCbGNuUjVLU0ErUFNBd08xeHVJQ0FnSUgwcEtTQjdYRzRnSUNBZ0lDQmpiMjV6YjJ4bExuZGhjbTRvV3lkUWIzQndaWEk2SUVSbGRHVmpkR1ZrSUVOVFV5QjBjbUZ1YzJsMGFXOXVjeUJ2YmlCaGRDQnNaV0Z6ZENCdmJtVWdiMllnZEdobElHWnZiR3h2ZDJsdVp5Y3NJQ2REVTFNZ2NISnZjR1Z5ZEdsbGN6b2dYQ0owY21GdWMyWnZjbTFjSWl3Z1hDSjBiM0JjSWl3Z1hDSnlhV2RvZEZ3aUxDQmNJbUp2ZEhSdmJWd2lMQ0JjSW14bFpuUmNJaTRuTENBblhGeHVYRnh1Snl3Z0owUnBjMkZpYkdVZ2RHaGxJRndpWTI5dGNIVjBaVk4wZVd4bGMxd2lJRzF2WkdsbWFXVnlYRnduY3lCZ1lXUmhjSFJwZG1WZ0lHOXdkR2x2YmlCMGJ5QmhiR3h2ZHljc0lDZG1iM0lnYzIxdmIzUm9JSFJ5WVc1emFYUnBiMjV6TENCdmNpQnlaVzF2ZG1VZ2RHaGxjMlVnY0hKdmNHVnlkR2xsY3lCbWNtOXRJSFJvWlNCRFUxTW5MQ0FuZEhKaGJuTnBkR2x2YmlCa1pXTnNZWEpoZEdsdmJpQnZiaUIwYUdVZ2NHOXdjR1Z5SUdWc1pXMWxiblFnYVdZZ2IyNXNlU0IwY21GdWMybDBhVzl1YVc1bkp5d2dKMjl3WVdOcGRIa2diM0lnWW1GamEyZHliM1Z1WkMxamIyeHZjaUJtYjNJZ1pYaGhiWEJzWlM0bkxDQW5YRnh1WEZ4dUp5d2dKMWRsSUhKbFkyOXRiV1Z1WkNCMWMybHVaeUIwYUdVZ2NHOXdjR1Z5SUdWc1pXMWxiblFnWVhNZ1lTQjNjbUZ3Y0dWeUlHRnliM1Z1WkNCaGJpQnBibTVsY2ljc0lDZGxiR1Z0Wlc1MElIUm9ZWFFnWTJGdUlHaGhkbVVnWVc1NUlFTlRVeUJ3Y205d1pYSjBlU0IwY21GdWMybDBhVzl1WldRZ1ptOXlJR0Z1YVcxaGRHbHZibk11SjEwdWFtOXBiaWduSUNjcEtUdGNiaUFnSUNCOVhHNGdJSDFjYmx4dUlDQjJZWElnWTI5dGJXOXVVM1I1YkdWeklEMGdlMXh1SUNBZ0lIQnNZV05sYldWdWREb2daMlYwUW1GelpWQnNZV05sYldWdWRDaHpkR0YwWlM1d2JHRmpaVzFsYm5RcExGeHVJQ0FnSUhaaGNtbGhkR2x2YmpvZ1oyVjBWbUZ5YVdGMGFXOXVLSE4wWVhSbExuQnNZV05sYldWdWRDa3NYRzRnSUNBZ2NHOXdjR1Z5T2lCemRHRjBaUzVsYkdWdFpXNTBjeTV3YjNCd1pYSXNYRzRnSUNBZ2NHOXdjR1Z5VW1WamREb2djM1JoZEdVdWNtVmpkSE11Y0c5d2NHVnlMRnh1SUNBZ0lHZHdkVUZqWTJWc1pYSmhkR2x2YmpvZ1ozQjFRV05qWld4bGNtRjBhVzl1TEZ4dUlDQWdJR2x6Um1sNFpXUTZJSE4wWVhSbExtOXdkR2x2Ym5NdWMzUnlZWFJsWjNrZ1BUMDlJQ2RtYVhobFpDZGNiaUFnZlR0Y2JseHVJQ0JwWmlBb2MzUmhkR1V1Ylc5a2FXWnBaWEp6UkdGMFlTNXdiM0J3WlhKUFptWnpaWFJ6SUNFOUlHNTFiR3dwSUh0Y2JpQWdJQ0J6ZEdGMFpTNXpkSGxzWlhNdWNHOXdjR1Z5SUQwZ1QySnFaV04wTG1GemMybG5iaWg3ZlN3Z2MzUmhkR1V1YzNSNWJHVnpMbkJ2Y0hCbGNpd2diV0Z3Vkc5VGRIbHNaWE1vVDJKcVpXTjBMbUZ6YzJsbmJpaDdmU3dnWTI5dGJXOXVVM1I1YkdWekxDQjdYRzRnSUNBZ0lDQnZabVp6WlhSek9pQnpkR0YwWlM1dGIyUnBabWxsY25ORVlYUmhMbkJ2Y0hCbGNrOW1abk5sZEhNc1hHNGdJQ0FnSUNCd2IzTnBkR2x2YmpvZ2MzUmhkR1V1YjNCMGFXOXVjeTV6ZEhKaGRHVm5lU3hjYmlBZ0lDQWdJR0ZrWVhCMGFYWmxPaUJoWkdGd2RHbDJaU3hjYmlBZ0lDQWdJSEp2ZFc1a1QyWm1jMlYwY3pvZ2NtOTFibVJQWm1aelpYUnpYRzRnSUNBZ2ZTa3BLVHRjYmlBZ2ZWeHVYRzRnSUdsbUlDaHpkR0YwWlM1dGIyUnBabWxsY25ORVlYUmhMbUZ5Y205M0lDRTlJRzUxYkd3cElIdGNiaUFnSUNCemRHRjBaUzV6ZEhsc1pYTXVZWEp5YjNjZ1BTQlBZbXBsWTNRdVlYTnphV2R1S0h0OUxDQnpkR0YwWlM1emRIbHNaWE11WVhKeWIzY3NJRzFoY0ZSdlUzUjViR1Z6S0U5aWFtVmpkQzVoYzNOcFoyNG9lMzBzSUdOdmJXMXZibE4wZVd4bGN5d2dlMXh1SUNBZ0lDQWdiMlptYzJWMGN6b2djM1JoZEdVdWJXOWthV1pwWlhKelJHRjBZUzVoY25KdmR5eGNiaUFnSUNBZ0lIQnZjMmwwYVc5dU9pQW5ZV0p6YjJ4MWRHVW5MRnh1SUNBZ0lDQWdZV1JoY0hScGRtVTZJR1poYkhObExGeHVJQ0FnSUNBZ2NtOTFibVJQWm1aelpYUnpPaUJ5YjNWdVpFOW1abk5sZEhOY2JpQWdJQ0I5S1NrcE8xeHVJQ0I5WEc1Y2JpQWdjM1JoZEdVdVlYUjBjbWxpZFhSbGN5NXdiM0J3WlhJZ1BTQlBZbXBsWTNRdVlYTnphV2R1S0h0OUxDQnpkR0YwWlM1aGRIUnlhV0oxZEdWekxuQnZjSEJsY2l3Z2UxeHVJQ0FnSUNka1lYUmhMWEJ2Y0hCbGNpMXdiR0ZqWlcxbGJuUW5PaUJ6ZEdGMFpTNXdiR0ZqWlcxbGJuUmNiaUFnZlNrN1hHNTlJQzh2SUdWemJHbHVkQzFrYVhOaFlteGxMVzVsZUhRdGJHbHVaU0JwYlhCdmNuUXZibTh0ZFc1MWMyVmtMVzF2WkhWc1pYTmNibHh1WEc1bGVIQnZjblFnWkdWbVlYVnNkQ0I3WEc0Z0lHNWhiV1U2SUNkamIyMXdkWFJsVTNSNWJHVnpKeXhjYmlBZ1pXNWhZbXhsWkRvZ2RISjFaU3hjYmlBZ2NHaGhjMlU2SUNkaVpXWnZjbVZYY21sMFpTY3NYRzRnSUdadU9pQmpiMjF3ZFhSbFUzUjViR1Z6TEZ4dUlDQmtZWFJoT2lCN2ZWeHVmVHNpTENKcGJYQnZjblFnWjJWMFYybHVaRzkzSUdaeWIyMGdYQ0l1TGk5a2IyMHRkWFJwYkhNdloyVjBWMmx1Wkc5M0xtcHpYQ0k3SUM4dklHVnpiR2x1ZEMxa2FYTmhZbXhsTFc1bGVIUXRiR2x1WlNCcGJYQnZjblF2Ym04dGRXNTFjMlZrTFcxdlpIVnNaWE5jYmx4dWRtRnlJSEJoYzNOcGRtVWdQU0I3WEc0Z0lIQmhjM05wZG1VNklIUnlkV1ZjYm4wN1hHNWNibVoxYm1OMGFXOXVJR1ZtWm1WamRDaGZjbVZtS1NCN1hHNGdJSFpoY2lCemRHRjBaU0E5SUY5eVpXWXVjM1JoZEdVc1hHNGdJQ0FnSUNCcGJuTjBZVzVqWlNBOUlGOXlaV1l1YVc1emRHRnVZMlVzWEc0Z0lDQWdJQ0J2Y0hScGIyNXpJRDBnWDNKbFppNXZjSFJwYjI1ek8xeHVJQ0IyWVhJZ1gyOXdkR2x2Ym5Na2MyTnliMnhzSUQwZ2IzQjBhVzl1Y3k1elkzSnZiR3dzWEc0Z0lDQWdJQ0J6WTNKdmJHd2dQU0JmYjNCMGFXOXVjeVJ6WTNKdmJHd2dQVDA5SUhadmFXUWdNQ0EvSUhSeWRXVWdPaUJmYjNCMGFXOXVjeVJ6WTNKdmJHd3NYRzRnSUNBZ0lDQmZiM0IwYVc5dWN5UnlaWE5wZW1VZ1BTQnZjSFJwYjI1ekxuSmxjMmw2WlN4Y2JpQWdJQ0FnSUhKbGMybDZaU0E5SUY5dmNIUnBiMjV6SkhKbGMybDZaU0E5UFQwZ2RtOXBaQ0F3SUQ4Z2RISjFaU0E2SUY5dmNIUnBiMjV6SkhKbGMybDZaVHRjYmlBZ2RtRnlJSGRwYm1SdmR5QTlJR2RsZEZkcGJtUnZkeWh6ZEdGMFpTNWxiR1Z0Wlc1MGN5NXdiM0J3WlhJcE8xeHVJQ0IyWVhJZ2MyTnliMnhzVUdGeVpXNTBjeUE5SUZ0ZExtTnZibU5oZENoemRHRjBaUzV6WTNKdmJHeFFZWEpsYm5SekxuSmxabVZ5Wlc1alpTd2djM1JoZEdVdWMyTnliMnhzVUdGeVpXNTBjeTV3YjNCd1pYSXBPMXh1WEc0Z0lHbG1JQ2h6WTNKdmJHd3BJSHRjYmlBZ0lDQnpZM0p2Ykd4UVlYSmxiblJ6TG1admNrVmhZMmdvWm5WdVkzUnBiMjRnS0hOamNtOXNiRkJoY21WdWRDa2dlMXh1SUNBZ0lDQWdjMk55YjJ4c1VHRnlaVzUwTG1Ga1pFVjJaVzUwVEdsemRHVnVaWElvSjNOamNtOXNiQ2NzSUdsdWMzUmhibU5sTG5Wd1pHRjBaU3dnY0dGemMybDJaU2s3WEc0Z0lDQWdmU2s3WEc0Z0lIMWNibHh1SUNCcFppQW9jbVZ6YVhwbEtTQjdYRzRnSUNBZ2QybHVaRzkzTG1Ga1pFVjJaVzUwVEdsemRHVnVaWElvSjNKbGMybDZaU2NzSUdsdWMzUmhibU5sTG5Wd1pHRjBaU3dnY0dGemMybDJaU2s3WEc0Z0lIMWNibHh1SUNCeVpYUjFjbTRnWm5WdVkzUnBiMjRnS0NrZ2UxeHVJQ0FnSUdsbUlDaHpZM0p2Ykd3cElIdGNiaUFnSUNBZ0lITmpjbTlzYkZCaGNtVnVkSE11Wm05eVJXRmphQ2htZFc1amRHbHZiaUFvYzJOeWIyeHNVR0Z5Wlc1MEtTQjdYRzRnSUNBZ0lDQWdJSE5qY205c2JGQmhjbVZ1ZEM1eVpXMXZkbVZGZG1WdWRFeHBjM1JsYm1WeUtDZHpZM0p2Ykd3bkxDQnBibk4wWVc1alpTNTFjR1JoZEdVc0lIQmhjM05wZG1VcE8xeHVJQ0FnSUNBZ2ZTazdYRzRnSUNBZ2ZWeHVYRzRnSUNBZ2FXWWdLSEpsYzJsNlpTa2dlMXh1SUNBZ0lDQWdkMmx1Wkc5M0xuSmxiVzkyWlVWMlpXNTBUR2x6ZEdWdVpYSW9KM0psYzJsNlpTY3NJR2x1YzNSaGJtTmxMblZ3WkdGMFpTd2djR0Z6YzJsMlpTazdYRzRnSUNBZ2ZWeHVJQ0I5TzF4dWZTQXZMeUJsYzJ4cGJuUXRaR2x6WVdKc1pTMXVaWGgwTFd4cGJtVWdhVzF3YjNKMEwyNXZMWFZ1ZFhObFpDMXRiMlIxYkdWelhHNWNibHh1Wlhod2IzSjBJR1JsWm1GMWJIUWdlMXh1SUNCdVlXMWxPaUFuWlhabGJuUk1hWE4wWlc1bGNuTW5MRnh1SUNCbGJtRmliR1ZrT2lCMGNuVmxMRnh1SUNCd2FHRnpaVG9nSjNkeWFYUmxKeXhjYmlBZ1ptNDZJR1oxYm1OMGFXOXVJR1p1S0NrZ2UzMHNYRzRnSUdWbVptVmpkRG9nWldabVpXTjBMRnh1SUNCa1lYUmhPaUI3ZlZ4dWZUc2lMQ0pwYlhCdmNuUWdaMlYwVDNCd2IzTnBkR1ZRYkdGalpXMWxiblFnWm5KdmJTQmNJaTR1TDNWMGFXeHpMMmRsZEU5d2NHOXphWFJsVUd4aFkyVnRaVzUwTG1welhDSTdYRzVwYlhCdmNuUWdaMlYwUW1GelpWQnNZV05sYldWdWRDQm1jbTl0SUZ3aUxpNHZkWFJwYkhNdloyVjBRbUZ6WlZCc1lXTmxiV1Z1ZEM1cWMxd2lPMXh1YVcxd2IzSjBJR2RsZEU5d2NHOXphWFJsVm1GeWFXRjBhVzl1VUd4aFkyVnRaVzUwSUdaeWIyMGdYQ0l1TGk5MWRHbHNjeTluWlhSUGNIQnZjMmwwWlZaaGNtbGhkR2x2YmxCc1lXTmxiV1Z1ZEM1cWMxd2lPMXh1YVcxd2IzSjBJR1JsZEdWamRFOTJaWEptYkc5M0lHWnliMjBnWENJdUxpOTFkR2xzY3k5a1pYUmxZM1JQZG1WeVpteHZkeTVxYzF3aU8xeHVhVzF3YjNKMElHTnZiWEIxZEdWQmRYUnZVR3hoWTJWdFpXNTBJR1p5YjIwZ1hDSXVMaTkxZEdsc2N5OWpiMjF3ZFhSbFFYVjBiMUJzWVdObGJXVnVkQzVxYzF3aU8xeHVhVzF3YjNKMElIc2dZbTkwZEc5dExDQjBiM0FzSUhOMFlYSjBMQ0J5YVdkb2RDd2diR1ZtZEN3Z1lYVjBieUI5SUdaeWIyMGdYQ0l1TGk5bGJuVnRjeTVxYzF3aU8xeHVhVzF3YjNKMElHZGxkRlpoY21saGRHbHZiaUJtY205dElGd2lMaTR2ZFhScGJITXZaMlYwVm1GeWFXRjBhVzl1TG1welhDSTdJQzh2SUdWemJHbHVkQzFrYVhOaFlteGxMVzVsZUhRdGJHbHVaU0JwYlhCdmNuUXZibTh0ZFc1MWMyVmtMVzF2WkhWc1pYTmNibHh1Wm5WdVkzUnBiMjRnWjJWMFJYaHdZVzVrWldSR1lXeHNZbUZqYTFCc1lXTmxiV1Z1ZEhNb2NHeGhZMlZ0Wlc1MEtTQjdYRzRnSUdsbUlDaG5aWFJDWVhObFVHeGhZMlZ0Wlc1MEtIQnNZV05sYldWdWRDa2dQVDA5SUdGMWRHOHBJSHRjYmlBZ0lDQnlaWFIxY200Z1cxMDdYRzRnSUgxY2JseHVJQ0IyWVhJZ2IzQndiM05wZEdWUWJHRmpaVzFsYm5RZ1BTQm5aWFJQY0hCdmMybDBaVkJzWVdObGJXVnVkQ2h3YkdGalpXMWxiblFwTzF4dUlDQnlaWFIxY200Z1cyZGxkRTl3Y0c5emFYUmxWbUZ5YVdGMGFXOXVVR3hoWTJWdFpXNTBLSEJzWVdObGJXVnVkQ2tzSUc5d2NHOXphWFJsVUd4aFkyVnRaVzUwTENCblpYUlBjSEJ2YzJsMFpWWmhjbWxoZEdsdmJsQnNZV05sYldWdWRDaHZjSEJ2YzJsMFpWQnNZV05sYldWdWRDbGRPMXh1ZlZ4dVhHNW1kVzVqZEdsdmJpQm1iR2x3S0Y5eVpXWXBJSHRjYmlBZ2RtRnlJSE4wWVhSbElEMGdYM0psWmk1emRHRjBaU3hjYmlBZ0lDQWdJRzl3ZEdsdmJuTWdQU0JmY21WbUxtOXdkR2x2Ym5Nc1hHNGdJQ0FnSUNCdVlXMWxJRDBnWDNKbFppNXVZVzFsTzF4dVhHNGdJR2xtSUNoemRHRjBaUzV0YjJScFptbGxjbk5FWVhSaFcyNWhiV1ZkTGw5emEybHdLU0I3WEc0Z0lDQWdjbVYwZFhKdU8xeHVJQ0I5WEc1Y2JpQWdkbUZ5SUY5dmNIUnBiMjV6SkcxaGFXNUJlR2x6SUQwZ2IzQjBhVzl1Y3k1dFlXbHVRWGhwY3l4Y2JpQWdJQ0FnSUdOb1pXTnJUV0ZwYmtGNGFYTWdQU0JmYjNCMGFXOXVjeVJ0WVdsdVFYaHBjeUE5UFQwZ2RtOXBaQ0F3SUQ4Z2RISjFaU0E2SUY5dmNIUnBiMjV6SkcxaGFXNUJlR2x6TEZ4dUlDQWdJQ0FnWDI5d2RHbHZibk1rWVd4MFFYaHBjeUE5SUc5d2RHbHZibk11WVd4MFFYaHBjeXhjYmlBZ0lDQWdJR05vWldOclFXeDBRWGhwY3lBOUlGOXZjSFJwYjI1ekpHRnNkRUY0YVhNZ1BUMDlJSFp2YVdRZ01DQS9JSFJ5ZFdVZ09pQmZiM0IwYVc5dWN5UmhiSFJCZUdsekxGeHVJQ0FnSUNBZ2MzQmxZMmxtYVdWa1JtRnNiR0poWTJ0UWJHRmpaVzFsYm5SeklEMGdiM0IwYVc5dWN5NW1ZV3hzWW1GamExQnNZV05sYldWdWRITXNYRzRnSUNBZ0lDQndZV1JrYVc1bklEMGdiM0IwYVc5dWN5NXdZV1JrYVc1bkxGeHVJQ0FnSUNBZ1ltOTFibVJoY25rZ1BTQnZjSFJwYjI1ekxtSnZkVzVrWVhKNUxGeHVJQ0FnSUNBZ2NtOXZkRUp2ZFc1a1lYSjVJRDBnYjNCMGFXOXVjeTV5YjI5MFFtOTFibVJoY25rc1hHNGdJQ0FnSUNCaGJIUkNiM1Z1WkdGeWVTQTlJRzl3ZEdsdmJuTXVZV3gwUW05MWJtUmhjbmtzWEc0Z0lDQWdJQ0JmYjNCMGFXOXVjeVJtYkdsd1ZtRnlhV0YwYVc4Z1BTQnZjSFJwYjI1ekxtWnNhWEJXWVhKcFlYUnBiMjV6TEZ4dUlDQWdJQ0FnWm14cGNGWmhjbWxoZEdsdmJuTWdQU0JmYjNCMGFXOXVjeVJtYkdsd1ZtRnlhV0YwYVc4Z1BUMDlJSFp2YVdRZ01DQS9JSFJ5ZFdVZ09pQmZiM0IwYVc5dWN5Um1iR2x3Vm1GeWFXRjBhVzhzWEc0Z0lDQWdJQ0JoYkd4dmQyVmtRWFYwYjFCc1lXTmxiV1Z1ZEhNZ1BTQnZjSFJwYjI1ekxtRnNiRzkzWldSQmRYUnZVR3hoWTJWdFpXNTBjenRjYmlBZ2RtRnlJSEJ5WldabGNuSmxaRkJzWVdObGJXVnVkQ0E5SUhOMFlYUmxMbTl3ZEdsdmJuTXVjR3hoWTJWdFpXNTBPMXh1SUNCMllYSWdZbUZ6WlZCc1lXTmxiV1Z1ZENBOUlHZGxkRUpoYzJWUWJHRmpaVzFsYm5Rb2NISmxabVZ5Y21Wa1VHeGhZMlZ0Wlc1MEtUdGNiaUFnZG1GeUlHbHpRbUZ6WlZCc1lXTmxiV1Z1ZENBOUlHSmhjMlZRYkdGalpXMWxiblFnUFQwOUlIQnlaV1psY25KbFpGQnNZV05sYldWdWREdGNiaUFnZG1GeUlHWmhiR3hpWVdOclVHeGhZMlZ0Wlc1MGN5QTlJSE53WldOcFptbGxaRVpoYkd4aVlXTnJVR3hoWTJWdFpXNTBjeUI4ZkNBb2FYTkNZWE5sVUd4aFkyVnRaVzUwSUh4OElDRm1iR2x3Vm1GeWFXRjBhVzl1Y3lBL0lGdG5aWFJQY0hCdmMybDBaVkJzWVdObGJXVnVkQ2h3Y21WbVpYSnlaV1JRYkdGalpXMWxiblFwWFNBNklHZGxkRVY0Y0dGdVpHVmtSbUZzYkdKaFkydFFiR0ZqWlcxbGJuUnpLSEJ5WldabGNuSmxaRkJzWVdObGJXVnVkQ2twTzF4dUlDQjJZWElnY0d4aFkyVnRaVzUwY3lBOUlGdHdjbVZtWlhKeVpXUlFiR0ZqWlcxbGJuUmRMbU52Ym1OaGRDaG1ZV3hzWW1GamExQnNZV05sYldWdWRITXBMbkpsWkhWalpTaG1kVzVqZEdsdmJpQW9ZV05qTENCd2JHRmpaVzFsYm5RcElIdGNiaUFnSUNCeVpYUjFjbTRnWVdOakxtTnZibU5oZENoblpYUkNZWE5sVUd4aFkyVnRaVzUwS0hCc1lXTmxiV1Z1ZENrZ1BUMDlJR0YxZEc4Z1B5QmpiMjF3ZFhSbFFYVjBiMUJzWVdObGJXVnVkQ2h6ZEdGMFpTd2dlMXh1SUNBZ0lDQWdjR3hoWTJWdFpXNTBPaUJ3YkdGalpXMWxiblFzWEc0Z0lDQWdJQ0JpYjNWdVpHRnllVG9nWW05MWJtUmhjbmtzWEc0Z0lDQWdJQ0J5YjI5MFFtOTFibVJoY25rNklISnZiM1JDYjNWdVpHRnllU3hjYmlBZ0lDQWdJSEJoWkdScGJtYzZJSEJoWkdScGJtY3NYRzRnSUNBZ0lDQm1iR2x3Vm1GeWFXRjBhVzl1Y3pvZ1pteHBjRlpoY21saGRHbHZibk1zWEc0Z0lDQWdJQ0JoYkd4dmQyVmtRWFYwYjFCc1lXTmxiV1Z1ZEhNNklHRnNiRzkzWldSQmRYUnZVR3hoWTJWdFpXNTBjMXh1SUNBZ0lIMHBJRG9nY0d4aFkyVnRaVzUwS1R0Y2JpQWdmU3dnVzEwcE8xeHVJQ0IyWVhJZ2NtVm1aWEpsYm1ObFVtVmpkQ0E5SUhOMFlYUmxMbkpsWTNSekxuSmxabVZ5Wlc1alpUdGNiaUFnZG1GeUlIQnZjSEJsY2xKbFkzUWdQU0J6ZEdGMFpTNXlaV04wY3k1d2IzQndaWEk3WEc0Z0lIWmhjaUJqYUdWamEzTk5ZWEFnUFNCdVpYY2dUV0Z3S0NrN1hHNGdJSFpoY2lCdFlXdGxSbUZzYkdKaFkydERhR1ZqYTNNZ1BTQjBjblZsTzF4dUlDQjJZWElnWm1seWMzUkdhWFIwYVc1blVHeGhZMlZ0Wlc1MElEMGdjR3hoWTJWdFpXNTBjMXN3WFR0Y2JseHVJQ0JtYjNJZ0tIWmhjaUJwSUQwZ01Ec2dhU0E4SUhCc1lXTmxiV1Z1ZEhNdWJHVnVaM1JvT3lCcEt5c3BJSHRjYmlBZ0lDQjJZWElnY0d4aFkyVnRaVzUwSUQwZ2NHeGhZMlZ0Wlc1MGMxdHBYVHRjYmx4dUlDQWdJSFpoY2lCZlltRnpaVkJzWVdObGJXVnVkQ0E5SUdkbGRFSmhjMlZRYkdGalpXMWxiblFvY0d4aFkyVnRaVzUwS1R0Y2JseHVJQ0FnSUhaaGNpQnBjMU4wWVhKMFZtRnlhV0YwYVc5dUlEMGdaMlYwVm1GeWFXRjBhVzl1S0hCc1lXTmxiV1Z1ZENrZ1BUMDlJSE4wWVhKME8xeHVJQ0FnSUhaaGNpQnBjMVpsY25ScFkyRnNJRDBnVzNSdmNDd2dZbTkwZEc5dFhTNXBibVJsZUU5bUtGOWlZWE5sVUd4aFkyVnRaVzUwS1NBK1BTQXdPMXh1SUNBZ0lIWmhjaUJzWlc0Z1BTQnBjMVpsY25ScFkyRnNJRDhnSjNkcFpIUm9KeUE2SUNkb1pXbG5hSFFuTzF4dUlDQWdJSFpoY2lCdmRtVnlabXh2ZHlBOUlHUmxkR1ZqZEU5MlpYSm1iRzkzS0hOMFlYUmxMQ0I3WEc0Z0lDQWdJQ0J3YkdGalpXMWxiblE2SUhCc1lXTmxiV1Z1ZEN4Y2JpQWdJQ0FnSUdKdmRXNWtZWEo1T2lCaWIzVnVaR0Z5ZVN4Y2JpQWdJQ0FnSUhKdmIzUkNiM1Z1WkdGeWVUb2djbTl2ZEVKdmRXNWtZWEo1TEZ4dUlDQWdJQ0FnWVd4MFFtOTFibVJoY25rNklHRnNkRUp2ZFc1a1lYSjVMRnh1SUNBZ0lDQWdjR0ZrWkdsdVp6b2djR0ZrWkdsdVoxeHVJQ0FnSUgwcE8xeHVJQ0FnSUhaaGNpQnRZV2x1Vm1GeWFXRjBhVzl1VTJsa1pTQTlJR2x6Vm1WeWRHbGpZV3dnUHlCcGMxTjBZWEowVm1GeWFXRjBhVzl1SUQ4Z2NtbG5hSFFnT2lCc1pXWjBJRG9nYVhOVGRHRnlkRlpoY21saGRHbHZiaUEvSUdKdmRIUnZiU0E2SUhSdmNEdGNibHh1SUNBZ0lHbG1JQ2h5WldabGNtVnVZMlZTWldOMFcyeGxibDBnUGlCd2IzQndaWEpTWldOMFcyeGxibDBwSUh0Y2JpQWdJQ0FnSUcxaGFXNVdZWEpwWVhScGIyNVRhV1JsSUQwZ1oyVjBUM0J3YjNOcGRHVlFiR0ZqWlcxbGJuUW9iV0ZwYmxaaGNtbGhkR2x2YmxOcFpHVXBPMXh1SUNBZ0lIMWNibHh1SUNBZ0lIWmhjaUJoYkhSV1lYSnBZWFJwYjI1VGFXUmxJRDBnWjJWMFQzQndiM05wZEdWUWJHRmpaVzFsYm5Rb2JXRnBibFpoY21saGRHbHZibE5wWkdVcE8xeHVJQ0FnSUhaaGNpQmphR1ZqYTNNZ1BTQmJYVHRjYmx4dUlDQWdJR2xtSUNoamFHVmphMDFoYVc1QmVHbHpLU0I3WEc0Z0lDQWdJQ0JqYUdWamEzTXVjSFZ6YUNodmRtVnlabXh2ZDF0ZlltRnpaVkJzWVdObGJXVnVkRjBnUEQwZ01DazdYRzRnSUNBZ2ZWeHVYRzRnSUNBZ2FXWWdLR05vWldOclFXeDBRWGhwY3lrZ2UxeHVJQ0FnSUNBZ1kyaGxZMnR6TG5CMWMyZ29iM1psY21ac2IzZGJiV0ZwYmxaaGNtbGhkR2x2YmxOcFpHVmRJRHc5SURBc0lHOTJaWEptYkc5M1cyRnNkRlpoY21saGRHbHZibE5wWkdWZElEdzlJREFwTzF4dUlDQWdJSDFjYmx4dUlDQWdJR2xtSUNoamFHVmphM011WlhabGNua29ablZ1WTNScGIyNGdLR05vWldOcktTQjdYRzRnSUNBZ0lDQnlaWFIxY200Z1kyaGxZMnM3WEc0Z0lDQWdmU2twSUh0Y2JpQWdJQ0FnSUdacGNuTjBSbWwwZEdsdVoxQnNZV05sYldWdWRDQTlJSEJzWVdObGJXVnVkRHRjYmlBZ0lDQWdJRzFoYTJWR1lXeHNZbUZqYTBOb1pXTnJjeUE5SUdaaGJITmxPMXh1SUNBZ0lDQWdZbkpsWVdzN1hHNGdJQ0FnZlZ4dVhHNGdJQ0FnWTJobFkydHpUV0Z3TG5ObGRDaHdiR0ZqWlcxbGJuUXNJR05vWldOcmN5azdYRzRnSUgxY2JseHVJQ0JwWmlBb2JXRnJaVVpoYkd4aVlXTnJRMmhsWTJ0ektTQjdYRzRnSUNBZ0x5OGdZREpnSUcxaGVTQmlaU0JrWlhOcGNtVmtJR2x1SUhOdmJXVWdZMkZ6WlhNZzRvQ1RJSEpsYzJWaGNtTm9JR3hoZEdWeVhHNGdJQ0FnZG1GeUlHNTFiV0psY2s5bVEyaGxZMnR6SUQwZ1pteHBjRlpoY21saGRHbHZibk1nUHlBeklEb2dNVHRjYmx4dUlDQWdJSFpoY2lCZmJHOXZjQ0E5SUdaMWJtTjBhVzl1SUY5c2IyOXdLRjlwS1NCN1hHNGdJQ0FnSUNCMllYSWdabWwwZEdsdVoxQnNZV05sYldWdWRDQTlJSEJzWVdObGJXVnVkSE11Wm1sdVpDaG1kVzVqZEdsdmJpQW9jR3hoWTJWdFpXNTBLU0I3WEc0Z0lDQWdJQ0FnSUhaaGNpQmphR1ZqYTNNZ1BTQmphR1ZqYTNOTllYQXVaMlYwS0hCc1lXTmxiV1Z1ZENrN1hHNWNiaUFnSUNBZ0lDQWdhV1lnS0dOb1pXTnJjeWtnZTF4dUlDQWdJQ0FnSUNBZ0lISmxkSFZ5YmlCamFHVmphM011YzJ4cFkyVW9NQ3dnWDJrcExtVjJaWEo1S0daMWJtTjBhVzl1SUNoamFHVmpheWtnZTF4dUlDQWdJQ0FnSUNBZ0lDQWdjbVYwZFhKdUlHTm9aV05yTzF4dUlDQWdJQ0FnSUNBZ0lIMHBPMXh1SUNBZ0lDQWdJQ0I5WEc0Z0lDQWdJQ0I5S1R0Y2JseHVJQ0FnSUNBZ2FXWWdLR1pwZEhScGJtZFFiR0ZqWlcxbGJuUXBJSHRjYmlBZ0lDQWdJQ0FnWm1seWMzUkdhWFIwYVc1blVHeGhZMlZ0Wlc1MElEMGdabWwwZEdsdVoxQnNZV05sYldWdWREdGNiaUFnSUNBZ0lDQWdjbVYwZFhKdUlGd2lZbkpsWVd0Y0lqdGNiaUFnSUNBZ0lIMWNiaUFnSUNCOU8xeHVYRzRnSUNBZ1ptOXlJQ2gyWVhJZ1gya2dQU0J1ZFcxaVpYSlBaa05vWldOcmN6c2dYMmtnUGlBd095QmZhUzB0S1NCN1hHNGdJQ0FnSUNCMllYSWdYM0psZENBOUlGOXNiMjl3S0Y5cEtUdGNibHh1SUNBZ0lDQWdhV1lnS0Y5eVpYUWdQVDA5SUZ3aVluSmxZV3RjSWlrZ1luSmxZV3M3WEc0Z0lDQWdmVnh1SUNCOVhHNWNiaUFnYVdZZ0tITjBZWFJsTG5Cc1lXTmxiV1Z1ZENBaFBUMGdabWx5YzNSR2FYUjBhVzVuVUd4aFkyVnRaVzUwS1NCN1hHNGdJQ0FnYzNSaGRHVXViVzlrYVdacFpYSnpSR0YwWVZ0dVlXMWxYUzVmYzJ0cGNDQTlJSFJ5ZFdVN1hHNGdJQ0FnYzNSaGRHVXVjR3hoWTJWdFpXNTBJRDBnWm1seWMzUkdhWFIwYVc1blVHeGhZMlZ0Wlc1ME8xeHVJQ0FnSUhOMFlYUmxMbkpsYzJWMElEMGdkSEoxWlR0Y2JpQWdmVnh1ZlNBdkx5QmxjMnhwYm5RdFpHbHpZV0pzWlMxdVpYaDBMV3hwYm1VZ2FXMXdiM0owTDI1dkxYVnVkWE5sWkMxdGIyUjFiR1Z6WEc1Y2JseHVaWGh3YjNKMElHUmxabUYxYkhRZ2UxeHVJQ0J1WVcxbE9pQW5abXhwY0Njc1hHNGdJR1Z1WVdKc1pXUTZJSFJ5ZFdVc1hHNGdJSEJvWVhObE9pQW5iV0ZwYmljc1hHNGdJR1p1T2lCbWJHbHdMRnh1SUNCeVpYRjFhWEpsYzBsbVJYaHBjM1J6T2lCYkoyOW1abk5sZENkZExGeHVJQ0JrWVhSaE9pQjdYRzRnSUNBZ1gzTnJhWEE2SUdaaGJITmxYRzRnSUgxY2JuMDdJaXdpYVcxd2IzSjBJSHNnZEc5d0xDQmliM1IwYjIwc0lHeGxablFzSUhKcFoyaDBJSDBnWm5KdmJTQmNJaTR1TDJWdWRXMXpMbXB6WENJN1hHNXBiWEJ2Y25RZ1pHVjBaV04wVDNabGNtWnNiM2NnWm5KdmJTQmNJaTR1TDNWMGFXeHpMMlJsZEdWamRFOTJaWEptYkc5M0xtcHpYQ0k3WEc1Y2JtWjFibU4wYVc5dUlHZGxkRk5wWkdWUFptWnpaWFJ6S0c5MlpYSm1iRzkzTENCeVpXTjBMQ0J3Y21WMlpXNTBaV1JQWm1aelpYUnpLU0I3WEc0Z0lHbG1JQ2h3Y21WMlpXNTBaV1JQWm1aelpYUnpJRDA5UFNCMmIybGtJREFwSUh0Y2JpQWdJQ0J3Y21WMlpXNTBaV1JQWm1aelpYUnpJRDBnZTF4dUlDQWdJQ0FnZURvZ01DeGNiaUFnSUNBZ0lIazZJREJjYmlBZ0lDQjlPMXh1SUNCOVhHNWNiaUFnY21WMGRYSnVJSHRjYmlBZ0lDQjBiM0E2SUc5MlpYSm1iRzkzTG5SdmNDQXRJSEpsWTNRdWFHVnBaMmgwSUMwZ2NISmxkbVZ1ZEdWa1QyWm1jMlYwY3k1NUxGeHVJQ0FnSUhKcFoyaDBPaUJ2ZG1WeVpteHZkeTV5YVdkb2RDQXRJSEpsWTNRdWQybGtkR2dnS3lCd2NtVjJaVzUwWldSUFptWnpaWFJ6TG5nc1hHNGdJQ0FnWW05MGRHOXRPaUJ2ZG1WeVpteHZkeTVpYjNSMGIyMGdMU0J5WldOMExtaGxhV2RvZENBcklIQnlaWFpsYm5SbFpFOW1abk5sZEhNdWVTeGNiaUFnSUNCc1pXWjBPaUJ2ZG1WeVpteHZkeTVzWldaMElDMGdjbVZqZEM1M2FXUjBhQ0F0SUhCeVpYWmxiblJsWkU5bVpuTmxkSE11ZUZ4dUlDQjlPMXh1ZlZ4dVhHNW1kVzVqZEdsdmJpQnBjMEZ1ZVZOcFpHVkdkV3hzZVVOc2FYQndaV1FvYjNabGNtWnNiM2NwSUh0Y2JpQWdjbVYwZFhKdUlGdDBiM0FzSUhKcFoyaDBMQ0JpYjNSMGIyMHNJR3hsWm5SZExuTnZiV1VvWm5WdVkzUnBiMjRnS0hOcFpHVXBJSHRjYmlBZ0lDQnlaWFIxY200Z2IzWmxjbVpzYjNkYmMybGtaVjBnUGowZ01EdGNiaUFnZlNrN1hHNTlYRzVjYm1aMWJtTjBhVzl1SUdocFpHVW9YM0psWmlrZ2UxeHVJQ0IyWVhJZ2MzUmhkR1VnUFNCZmNtVm1Mbk4wWVhSbExGeHVJQ0FnSUNBZ2JtRnRaU0E5SUY5eVpXWXVibUZ0WlR0Y2JpQWdkbUZ5SUhKbFptVnlaVzVqWlZKbFkzUWdQU0J6ZEdGMFpTNXlaV04wY3k1eVpXWmxjbVZ1WTJVN1hHNGdJSFpoY2lCd2IzQndaWEpTWldOMElEMGdjM1JoZEdVdWNtVmpkSE11Y0c5d2NHVnlPMXh1SUNCMllYSWdjSEpsZG1WdWRHVmtUMlptYzJWMGN5QTlJSE4wWVhSbExtMXZaR2xtYVdWeWMwUmhkR0V1Y0hKbGRtVnVkRTkyWlhKbWJHOTNPMXh1SUNCMllYSWdjbVZtWlhKbGJtTmxUM1psY21ac2IzY2dQU0JrWlhSbFkzUlBkbVZ5Wm14dmR5aHpkR0YwWlN3Z2UxeHVJQ0FnSUdWc1pXMWxiblJEYjI1MFpYaDBPaUFuY21WbVpYSmxibU5sSjF4dUlDQjlLVHRjYmlBZ2RtRnlJSEJ2Y0hCbGNrRnNkRTkyWlhKbWJHOTNJRDBnWkdWMFpXTjBUM1psY21ac2IzY29jM1JoZEdVc0lIdGNiaUFnSUNCaGJIUkNiM1Z1WkdGeWVUb2dkSEoxWlZ4dUlDQjlLVHRjYmlBZ2RtRnlJSEpsWm1WeVpXNWpaVU5zYVhCd2FXNW5UMlptYzJWMGN5QTlJR2RsZEZOcFpHVlBabVp6WlhSektISmxabVZ5Wlc1alpVOTJaWEptYkc5M0xDQnlaV1psY21WdVkyVlNaV04wS1R0Y2JpQWdkbUZ5SUhCdmNIQmxja1Z6WTJGd1pVOW1abk5sZEhNZ1BTQm5aWFJUYVdSbFQyWm1jMlYwY3lod2IzQndaWEpCYkhSUGRtVnlabXh2ZHl3Z2NHOXdjR1Z5VW1WamRDd2djSEpsZG1WdWRHVmtUMlptYzJWMGN5azdYRzRnSUhaaGNpQnBjMUpsWm1WeVpXNWpaVWhwWkdSbGJpQTlJR2x6UVc1NVUybGtaVVoxYkd4NVEyeHBjSEJsWkNoeVpXWmxjbVZ1WTJWRGJHbHdjR2x1WjA5bVpuTmxkSE1wTzF4dUlDQjJZWElnYUdGelVHOXdjR1Z5UlhOallYQmxaQ0E5SUdselFXNTVVMmxrWlVaMWJHeDVRMnhwY0hCbFpDaHdiM0J3WlhKRmMyTmhjR1ZQWm1aelpYUnpLVHRjYmlBZ2MzUmhkR1V1Ylc5a2FXWnBaWEp6UkdGMFlWdHVZVzFsWFNBOUlIdGNiaUFnSUNCeVpXWmxjbVZ1WTJWRGJHbHdjR2x1WjA5bVpuTmxkSE02SUhKbFptVnlaVzVqWlVOc2FYQndhVzVuVDJabWMyVjBjeXhjYmlBZ0lDQndiM0J3WlhKRmMyTmhjR1ZQWm1aelpYUnpPaUJ3YjNCd1pYSkZjMk5oY0dWUFptWnpaWFJ6TEZ4dUlDQWdJR2x6VW1WbVpYSmxibU5sU0dsa1pHVnVPaUJwYzFKbFptVnlaVzVqWlVocFpHUmxiaXhjYmlBZ0lDQm9ZWE5RYjNCd1pYSkZjMk5oY0dWa09pQm9ZWE5RYjNCd1pYSkZjMk5oY0dWa1hHNGdJSDA3WEc0Z0lITjBZWFJsTG1GMGRISnBZblYwWlhNdWNHOXdjR1Z5SUQwZ1QySnFaV04wTG1GemMybG5iaWg3ZlN3Z2MzUmhkR1V1WVhSMGNtbGlkWFJsY3k1d2IzQndaWElzSUh0Y2JpQWdJQ0FuWkdGMFlTMXdiM0J3WlhJdGNtVm1aWEpsYm1ObExXaHBaR1JsYmljNklHbHpVbVZtWlhKbGJtTmxTR2xrWkdWdUxGeHVJQ0FnSUNka1lYUmhMWEJ2Y0hCbGNpMWxjMk5oY0dWa0p6b2dhR0Z6VUc5d2NHVnlSWE5qWVhCbFpGeHVJQ0I5S1R0Y2JuMGdMeThnWlhOc2FXNTBMV1JwYzJGaWJHVXRibVY0ZEMxc2FXNWxJR2x0Y0c5eWRDOXVieTExYm5WelpXUXRiVzlrZFd4bGMxeHVYRzVjYm1WNGNHOXlkQ0JrWldaaGRXeDBJSHRjYmlBZ2JtRnRaVG9nSjJocFpHVW5MRnh1SUNCbGJtRmliR1ZrT2lCMGNuVmxMRnh1SUNCd2FHRnpaVG9nSjIxaGFXNG5MRnh1SUNCeVpYRjFhWEpsYzBsbVJYaHBjM1J6T2lCYkozQnlaWFpsYm5SUGRtVnlabXh2ZHlkZExGeHVJQ0JtYmpvZ2FHbGtaVnh1ZlRzaUxDSmxlSEJ2Y25RZ2V5QmtaV1poZFd4MElHRnpJR0Z3Y0d4NVUzUjViR1Z6SUgwZ1puSnZiU0JjSWk0dllYQndiSGxUZEhsc1pYTXVhbk5jSWp0Y2JtVjRjRzl5ZENCN0lHUmxabUYxYkhRZ1lYTWdZWEp5YjNjZ2ZTQm1jbTl0SUZ3aUxpOWhjbkp2ZHk1cWMxd2lPMXh1Wlhod2IzSjBJSHNnWkdWbVlYVnNkQ0JoY3lCamIyMXdkWFJsVTNSNWJHVnpJSDBnWm5KdmJTQmNJaTR2WTI5dGNIVjBaVk4wZVd4bGN5NXFjMXdpTzF4dVpYaHdiM0owSUhzZ1pHVm1ZWFZzZENCaGN5QmxkbVZ1ZEV4cGMzUmxibVZ5Y3lCOUlHWnliMjBnWENJdUwyVjJaVzUwVEdsemRHVnVaWEp6TG1welhDSTdYRzVsZUhCdmNuUWdleUJrWldaaGRXeDBJR0Z6SUdac2FYQWdmU0JtY205dElGd2lMaTltYkdsd0xtcHpYQ0k3WEc1bGVIQnZjblFnZXlCa1pXWmhkV3gwSUdGeklHaHBaR1VnZlNCbWNtOXRJRndpTGk5b2FXUmxMbXB6WENJN1hHNWxlSEJ2Y25RZ2V5QmtaV1poZFd4MElHRnpJRzltWm5ObGRDQjlJR1p5YjIwZ1hDSXVMMjltWm5ObGRDNXFjMXdpTzF4dVpYaHdiM0owSUhzZ1pHVm1ZWFZzZENCaGN5QndiM0J3WlhKUFptWnpaWFJ6SUgwZ1puSnZiU0JjSWk0dmNHOXdjR1Z5VDJabWMyVjBjeTVxYzF3aU8xeHVaWGh3YjNKMElIc2daR1ZtWVhWc2RDQmhjeUJ3Y21WMlpXNTBUM1psY21ac2IzY2dmU0JtY205dElGd2lMaTl3Y21WMlpXNTBUM1psY21ac2IzY3Vhbk5jSWpzaUxDSnBiWEJ2Y25RZ1oyVjBRbUZ6WlZCc1lXTmxiV1Z1ZENCbWNtOXRJRndpTGk0dmRYUnBiSE12WjJWMFFtRnpaVkJzWVdObGJXVnVkQzVxYzF3aU8xeHVhVzF3YjNKMElIc2dkRzl3TENCc1pXWjBMQ0J5YVdkb2RDd2djR3hoWTJWdFpXNTBjeUI5SUdaeWIyMGdYQ0l1TGk5bGJuVnRjeTVxYzF3aU95QXZMeUJsYzJ4cGJuUXRaR2x6WVdKc1pTMXVaWGgwTFd4cGJtVWdhVzF3YjNKMEwyNXZMWFZ1ZFhObFpDMXRiMlIxYkdWelhHNWNibVY0Y0c5eWRDQm1kVzVqZEdsdmJpQmthWE4wWVc1alpVRnVaRk5yYVdSa2FXNW5WRzlZV1Nod2JHRmpaVzFsYm5Rc0lISmxZM1J6TENCdlptWnpaWFFwSUh0Y2JpQWdkbUZ5SUdKaGMyVlFiR0ZqWlcxbGJuUWdQU0JuWlhSQ1lYTmxVR3hoWTJWdFpXNTBLSEJzWVdObGJXVnVkQ2s3WEc0Z0lIWmhjaUJwYm5abGNuUkVhWE4wWVc1alpTQTlJRnRzWldaMExDQjBiM0JkTG1sdVpHVjRUMllvWW1GelpWQnNZV05sYldWdWRDa2dQajBnTUNBL0lDMHhJRG9nTVR0Y2JseHVJQ0IyWVhJZ1gzSmxaaUE5SUhSNWNHVnZaaUJ2Wm1aelpYUWdQVDA5SUNkbWRXNWpkR2x2YmljZ1B5QnZabVp6WlhRb1QySnFaV04wTG1GemMybG5iaWg3ZlN3Z2NtVmpkSE1zSUh0Y2JpQWdJQ0J3YkdGalpXMWxiblE2SUhCc1lXTmxiV1Z1ZEZ4dUlDQjlLU2tnT2lCdlptWnpaWFFzWEc0Z0lDQWdJQ0J6YTJsa1pHbHVaeUE5SUY5eVpXWmJNRjBzWEc0Z0lDQWdJQ0JrYVhOMFlXNWpaU0E5SUY5eVpXWmJNVjA3WEc1Y2JpQWdjMnRwWkdScGJtY2dQU0J6YTJsa1pHbHVaeUI4ZkNBd08xeHVJQ0JrYVhOMFlXNWpaU0E5SUNoa2FYTjBZVzVqWlNCOGZDQXdLU0FxSUdsdWRtVnlkRVJwYzNSaGJtTmxPMXh1SUNCeVpYUjFjbTRnVzJ4bFpuUXNJSEpwWjJoMFhTNXBibVJsZUU5bUtHSmhjMlZRYkdGalpXMWxiblFwSUQ0OUlEQWdQeUI3WEc0Z0lDQWdlRG9nWkdsemRHRnVZMlVzWEc0Z0lDQWdlVG9nYzJ0cFpHUnBibWRjYmlBZ2ZTQTZJSHRjYmlBZ0lDQjRPaUJ6YTJsa1pHbHVaeXhjYmlBZ0lDQjVPaUJrYVhOMFlXNWpaVnh1SUNCOU8xeHVmVnh1WEc1bWRXNWpkR2x2YmlCdlptWnpaWFFvWDNKbFpqSXBJSHRjYmlBZ2RtRnlJSE4wWVhSbElEMGdYM0psWmpJdWMzUmhkR1VzWEc0Z0lDQWdJQ0J2Y0hScGIyNXpJRDBnWDNKbFpqSXViM0IwYVc5dWN5eGNiaUFnSUNBZ0lHNWhiV1VnUFNCZmNtVm1NaTV1WVcxbE8xeHVJQ0IyWVhJZ1gyOXdkR2x2Ym5Na2IyWm1jMlYwSUQwZ2IzQjBhVzl1Y3k1dlptWnpaWFFzWEc0Z0lDQWdJQ0J2Wm1aelpYUWdQU0JmYjNCMGFXOXVjeVJ2Wm1aelpYUWdQVDA5SUhadmFXUWdNQ0EvSUZzd0xDQXdYU0E2SUY5dmNIUnBiMjV6Skc5bVpuTmxkRHRjYmlBZ2RtRnlJR1JoZEdFZ1BTQndiR0ZqWlcxbGJuUnpMbkpsWkhWalpTaG1kVzVqZEdsdmJpQW9ZV05qTENCd2JHRmpaVzFsYm5RcElIdGNiaUFnSUNCaFkyTmJjR3hoWTJWdFpXNTBYU0E5SUdScGMzUmhibU5sUVc1a1UydHBaR1JwYm1kVWIxaFpLSEJzWVdObGJXVnVkQ3dnYzNSaGRHVXVjbVZqZEhNc0lHOW1abk5sZENrN1hHNGdJQ0FnY21WMGRYSnVJR0ZqWXp0Y2JpQWdmU3dnZTMwcE8xeHVJQ0IyWVhJZ1gyUmhkR0VrYzNSaGRHVWtjR3hoWTJWdFpXNTBJRDBnWkdGMFlWdHpkR0YwWlM1d2JHRmpaVzFsYm5SZExGeHVJQ0FnSUNBZ2VDQTlJRjlrWVhSaEpITjBZWFJsSkhCc1lXTmxiV1Z1ZEM1NExGeHVJQ0FnSUNBZ2VTQTlJRjlrWVhSaEpITjBZWFJsSkhCc1lXTmxiV1Z1ZEM1NU8xeHVYRzRnSUdsbUlDaHpkR0YwWlM1dGIyUnBabWxsY25ORVlYUmhMbkJ2Y0hCbGNrOW1abk5sZEhNZ0lUMGdiblZzYkNrZ2UxeHVJQ0FnSUhOMFlYUmxMbTF2WkdsbWFXVnljMFJoZEdFdWNHOXdjR1Z5VDJabWMyVjBjeTU0SUNzOUlIZzdYRzRnSUNBZ2MzUmhkR1V1Ylc5a2FXWnBaWEp6UkdGMFlTNXdiM0J3WlhKUFptWnpaWFJ6TG5rZ0t6MGdlVHRjYmlBZ2ZWeHVYRzRnSUhOMFlYUmxMbTF2WkdsbWFXVnljMFJoZEdGYmJtRnRaVjBnUFNCa1lYUmhPMXh1ZlNBdkx5QmxjMnhwYm5RdFpHbHpZV0pzWlMxdVpYaDBMV3hwYm1VZ2FXMXdiM0owTDI1dkxYVnVkWE5sWkMxdGIyUjFiR1Z6WEc1Y2JseHVaWGh3YjNKMElHUmxabUYxYkhRZ2UxeHVJQ0J1WVcxbE9pQW5iMlptYzJWMEp5eGNiaUFnWlc1aFlteGxaRG9nZEhKMVpTeGNiaUFnY0doaGMyVTZJQ2R0WVdsdUp5eGNiaUFnY21WeGRXbHlaWE02SUZzbmNHOXdjR1Z5VDJabWMyVjBjeWRkTEZ4dUlDQm1iam9nYjJabWMyVjBYRzU5T3lJc0ltbHRjRzl5ZENCamIyMXdkWFJsVDJabWMyVjBjeUJtY205dElGd2lMaTR2ZFhScGJITXZZMjl0Y0hWMFpVOW1abk5sZEhNdWFuTmNJanRjYmx4dVpuVnVZM1JwYjI0Z2NHOXdjR1Z5VDJabWMyVjBjeWhmY21WbUtTQjdYRzRnSUhaaGNpQnpkR0YwWlNBOUlGOXlaV1l1YzNSaGRHVXNYRzRnSUNBZ0lDQnVZVzFsSUQwZ1gzSmxaaTV1WVcxbE8xeHVJQ0F2THlCUFptWnpaWFJ6SUdGeVpTQjBhR1VnWVdOMGRXRnNJSEJ2YzJsMGFXOXVJSFJvWlNCd2IzQndaWElnYm1WbFpITWdkRzhnYUdGMlpTQjBieUJpWlZ4dUlDQXZMeUJ3Y205d1pYSnNlU0J3YjNOcGRHbHZibVZrSUc1bFlYSWdhWFJ6SUhKbFptVnlaVzVqWlNCbGJHVnRaVzUwWEc0Z0lDOHZJRlJvYVhNZ2FYTWdkR2hsSUcxdmMzUWdZbUZ6YVdNZ2NHeGhZMlZ0Wlc1MExDQmhibVFnZDJsc2JDQmlaU0JoWkdwMWMzUmxaQ0JpZVZ4dUlDQXZMeUIwYUdVZ2JXOWthV1pwWlhKeklHbHVJSFJvWlNCdVpYaDBJSE4wWlhCY2JpQWdjM1JoZEdVdWJXOWthV1pwWlhKelJHRjBZVnR1WVcxbFhTQTlJR052YlhCMWRHVlBabVp6WlhSektIdGNiaUFnSUNCeVpXWmxjbVZ1WTJVNklITjBZWFJsTG5KbFkzUnpMbkpsWm1WeVpXNWpaU3hjYmlBZ0lDQmxiR1Z0Wlc1ME9pQnpkR0YwWlM1eVpXTjBjeTV3YjNCd1pYSXNYRzRnSUNBZ2MzUnlZWFJsWjNrNklDZGhZbk52YkhWMFpTY3NYRzRnSUNBZ2NHeGhZMlZ0Wlc1ME9pQnpkR0YwWlM1d2JHRmpaVzFsYm5SY2JpQWdmU2s3WEc1OUlDOHZJR1Z6YkdsdWRDMWthWE5oWW14bExXNWxlSFF0YkdsdVpTQnBiWEJ2Y25RdmJtOHRkVzUxYzJWa0xXMXZaSFZzWlhOY2JseHVYRzVsZUhCdmNuUWdaR1ZtWVhWc2RDQjdYRzRnSUc1aGJXVTZJQ2R3YjNCd1pYSlBabVp6WlhSekp5eGNiaUFnWlc1aFlteGxaRG9nZEhKMVpTeGNiaUFnY0doaGMyVTZJQ2R5WldGa0p5eGNiaUFnWm00NklIQnZjSEJsY2s5bVpuTmxkSE1zWEc0Z0lHUmhkR0U2SUh0OVhHNTlPeUlzSW1sdGNHOXlkQ0I3SUhSdmNDd2diR1ZtZEN3Z2NtbG5hSFFzSUdKdmRIUnZiU3dnYzNSaGNuUWdmU0JtY205dElGd2lMaTR2Wlc1MWJYTXVhbk5jSWp0Y2JtbHRjRzl5ZENCblpYUkNZWE5sVUd4aFkyVnRaVzUwSUdaeWIyMGdYQ0l1TGk5MWRHbHNjeTluWlhSQ1lYTmxVR3hoWTJWdFpXNTBMbXB6WENJN1hHNXBiWEJ2Y25RZ1oyVjBUV0ZwYmtGNGFYTkdjbTl0VUd4aFkyVnRaVzUwSUdaeWIyMGdYQ0l1TGk5MWRHbHNjeTluWlhSTllXbHVRWGhwYzBaeWIyMVFiR0ZqWlcxbGJuUXVhbk5jSWp0Y2JtbHRjRzl5ZENCblpYUkJiSFJCZUdseklHWnliMjBnWENJdUxpOTFkR2xzY3k5blpYUkJiSFJCZUdsekxtcHpYQ0k3WEc1cGJYQnZjblFnZXlCM2FYUm9hVzRzSUhkcGRHaHBiazFoZUVOc1lXMXdJSDBnWm5KdmJTQmNJaTR1TDNWMGFXeHpMM2RwZEdocGJpNXFjMXdpTzF4dWFXMXdiM0owSUdkbGRFeGhlVzkxZEZKbFkzUWdabkp2YlNCY0lpNHVMMlJ2YlMxMWRHbHNjeTluWlhSTVlYbHZkWFJTWldOMExtcHpYQ0k3WEc1cGJYQnZjblFnWjJWMFQyWm1jMlYwVUdGeVpXNTBJR1p5YjIwZ1hDSXVMaTlrYjIwdGRYUnBiSE12WjJWMFQyWm1jMlYwVUdGeVpXNTBMbXB6WENJN1hHNXBiWEJ2Y25RZ1pHVjBaV04wVDNabGNtWnNiM2NnWm5KdmJTQmNJaTR1TDNWMGFXeHpMMlJsZEdWamRFOTJaWEptYkc5M0xtcHpYQ0k3WEc1cGJYQnZjblFnWjJWMFZtRnlhV0YwYVc5dUlHWnliMjBnWENJdUxpOTFkR2xzY3k5blpYUldZWEpwWVhScGIyNHVhbk5jSWp0Y2JtbHRjRzl5ZENCblpYUkdjbVZ6YUZOcFpHVlBZbXBsWTNRZ1puSnZiU0JjSWk0dUwzVjBhV3h6TDJkbGRFWnlaWE5vVTJsa1pVOWlhbVZqZEM1cWMxd2lPMXh1YVcxd2IzSjBJSHNnYldsdUlHRnpJRzFoZEdoTmFXNHNJRzFoZUNCaGN5QnRZWFJvVFdGNElIMGdabkp2YlNCY0lpNHVMM1YwYVd4ekwyMWhkR2d1YW5OY0lqdGNibHh1Wm5WdVkzUnBiMjRnY0hKbGRtVnVkRTkyWlhKbWJHOTNLRjl5WldZcElIdGNiaUFnZG1GeUlITjBZWFJsSUQwZ1gzSmxaaTV6ZEdGMFpTeGNiaUFnSUNBZ0lHOXdkR2x2Ym5NZ1BTQmZjbVZtTG05d2RHbHZibk1zWEc0Z0lDQWdJQ0J1WVcxbElEMGdYM0psWmk1dVlXMWxPMXh1SUNCMllYSWdYMjl3ZEdsdmJuTWtiV0ZwYmtGNGFYTWdQU0J2Y0hScGIyNXpMbTFoYVc1QmVHbHpMRnh1SUNBZ0lDQWdZMmhsWTJ0TllXbHVRWGhwY3lBOUlGOXZjSFJwYjI1ekpHMWhhVzVCZUdseklEMDlQU0IyYjJsa0lEQWdQeUIwY25WbElEb2dYMjl3ZEdsdmJuTWtiV0ZwYmtGNGFYTXNYRzRnSUNBZ0lDQmZiM0IwYVc5dWN5UmhiSFJCZUdseklEMGdiM0IwYVc5dWN5NWhiSFJCZUdsekxGeHVJQ0FnSUNBZ1kyaGxZMnRCYkhSQmVHbHpJRDBnWDI5d2RHbHZibk1rWVd4MFFYaHBjeUE5UFQwZ2RtOXBaQ0F3SUQ4Z1ptRnNjMlVnT2lCZmIzQjBhVzl1Y3lSaGJIUkJlR2x6TEZ4dUlDQWdJQ0FnWW05MWJtUmhjbmtnUFNCdmNIUnBiMjV6TG1KdmRXNWtZWEo1TEZ4dUlDQWdJQ0FnY205dmRFSnZkVzVrWVhKNUlEMGdiM0IwYVc5dWN5NXliMjkwUW05MWJtUmhjbmtzWEc0Z0lDQWdJQ0JoYkhSQ2IzVnVaR0Z5ZVNBOUlHOXdkR2x2Ym5NdVlXeDBRbTkxYm1SaGNua3NYRzRnSUNBZ0lDQndZV1JrYVc1bklEMGdiM0IwYVc5dWN5NXdZV1JrYVc1bkxGeHVJQ0FnSUNBZ1gyOXdkR2x2Ym5Na2RHVjBhR1Z5SUQwZ2IzQjBhVzl1Y3k1MFpYUm9aWElzWEc0Z0lDQWdJQ0IwWlhSb1pYSWdQU0JmYjNCMGFXOXVjeVIwWlhSb1pYSWdQVDA5SUhadmFXUWdNQ0EvSUhSeWRXVWdPaUJmYjNCMGFXOXVjeVIwWlhSb1pYSXNYRzRnSUNBZ0lDQmZiM0IwYVc5dWN5UjBaWFJvWlhKUFptWnpaWFFnUFNCdmNIUnBiMjV6TG5SbGRHaGxjazltWm5ObGRDeGNiaUFnSUNBZ0lIUmxkR2hsY2s5bVpuTmxkQ0E5SUY5dmNIUnBiMjV6SkhSbGRHaGxjazltWm5ObGRDQTlQVDBnZG05cFpDQXdJRDhnTUNBNklGOXZjSFJwYjI1ekpIUmxkR2hsY2s5bVpuTmxkRHRjYmlBZ2RtRnlJRzkyWlhKbWJHOTNJRDBnWkdWMFpXTjBUM1psY21ac2IzY29jM1JoZEdVc0lIdGNiaUFnSUNCaWIzVnVaR0Z5ZVRvZ1ltOTFibVJoY25rc1hHNGdJQ0FnY205dmRFSnZkVzVrWVhKNU9pQnliMjkwUW05MWJtUmhjbmtzWEc0Z0lDQWdjR0ZrWkdsdVp6b2djR0ZrWkdsdVp5eGNiaUFnSUNCaGJIUkNiM1Z1WkdGeWVUb2dZV3gwUW05MWJtUmhjbmxjYmlBZ2ZTazdYRzRnSUhaaGNpQmlZWE5sVUd4aFkyVnRaVzUwSUQwZ1oyVjBRbUZ6WlZCc1lXTmxiV1Z1ZENoemRHRjBaUzV3YkdGalpXMWxiblFwTzF4dUlDQjJZWElnZG1GeWFXRjBhVzl1SUQwZ1oyVjBWbUZ5YVdGMGFXOXVLSE4wWVhSbExuQnNZV05sYldWdWRDazdYRzRnSUhaaGNpQnBjMEpoYzJWUWJHRmpaVzFsYm5RZ1BTQWhkbUZ5YVdGMGFXOXVPMXh1SUNCMllYSWdiV0ZwYmtGNGFYTWdQU0JuWlhSTllXbHVRWGhwYzBaeWIyMVFiR0ZqWlcxbGJuUW9ZbUZ6WlZCc1lXTmxiV1Z1ZENrN1hHNGdJSFpoY2lCaGJIUkJlR2x6SUQwZ1oyVjBRV3gwUVhocGN5aHRZV2x1UVhocGN5azdYRzRnSUhaaGNpQndiM0J3WlhKUFptWnpaWFJ6SUQwZ2MzUmhkR1V1Ylc5a2FXWnBaWEp6UkdGMFlTNXdiM0J3WlhKUFptWnpaWFJ6TzF4dUlDQjJZWElnY21WbVpYSmxibU5sVW1WamRDQTlJSE4wWVhSbExuSmxZM1J6TG5KbFptVnlaVzVqWlR0Y2JpQWdkbUZ5SUhCdmNIQmxjbEpsWTNRZ1BTQnpkR0YwWlM1eVpXTjBjeTV3YjNCd1pYSTdYRzRnSUhaaGNpQjBaWFJvWlhKUFptWnpaWFJXWVd4MVpTQTlJSFI1Y0dWdlppQjBaWFJvWlhKUFptWnpaWFFnUFQwOUlDZG1kVzVqZEdsdmJpY2dQeUIwWlhSb1pYSlBabVp6WlhRb1QySnFaV04wTG1GemMybG5iaWg3ZlN3Z2MzUmhkR1V1Y21WamRITXNJSHRjYmlBZ0lDQndiR0ZqWlcxbGJuUTZJSE4wWVhSbExuQnNZV05sYldWdWRGeHVJQ0I5S1NrZ09pQjBaWFJvWlhKUFptWnpaWFE3WEc0Z0lIWmhjaUJ1YjNKdFlXeHBlbVZrVkdWMGFHVnlUMlptYzJWMFZtRnNkV1VnUFNCMGVYQmxiMllnZEdWMGFHVnlUMlptYzJWMFZtRnNkV1VnUFQwOUlDZHVkVzFpWlhJbklEOGdlMXh1SUNBZ0lHMWhhVzVCZUdsek9pQjBaWFJvWlhKUFptWnpaWFJXWVd4MVpTeGNiaUFnSUNCaGJIUkJlR2x6T2lCMFpYUm9aWEpQWm1aelpYUldZV3gxWlZ4dUlDQjlJRG9nVDJKcVpXTjBMbUZ6YzJsbmJpaDdYRzRnSUNBZ2JXRnBia0Y0YVhNNklEQXNYRzRnSUNBZ1lXeDBRWGhwY3pvZ01GeHVJQ0I5TENCMFpYUm9aWEpQWm1aelpYUldZV3gxWlNrN1hHNGdJSFpoY2lCdlptWnpaWFJOYjJScFptbGxjbE4wWVhSbElEMGdjM1JoZEdVdWJXOWthV1pwWlhKelJHRjBZUzV2Wm1aelpYUWdQeUJ6ZEdGMFpTNXRiMlJwWm1sbGNuTkVZWFJoTG05bVpuTmxkRnR6ZEdGMFpTNXdiR0ZqWlcxbGJuUmRJRG9nYm5Wc2JEdGNiaUFnZG1GeUlHUmhkR0VnUFNCN1hHNGdJQ0FnZURvZ01DeGNiaUFnSUNCNU9pQXdYRzRnSUgwN1hHNWNiaUFnYVdZZ0tDRndiM0J3WlhKUFptWnpaWFJ6S1NCN1hHNGdJQ0FnY21WMGRYSnVPMXh1SUNCOVhHNWNiaUFnYVdZZ0tHTm9aV05yVFdGcGJrRjRhWE1wSUh0Y2JpQWdJQ0IyWVhJZ1gyOW1abk5sZEUxdlpHbG1hV1Z5VTNSaGRHVWtPMXh1WEc0Z0lDQWdkbUZ5SUcxaGFXNVRhV1JsSUQwZ2JXRnBia0Y0YVhNZ1BUMDlJQ2Q1SnlBL0lIUnZjQ0E2SUd4bFpuUTdYRzRnSUNBZ2RtRnlJR0ZzZEZOcFpHVWdQU0J0WVdsdVFYaHBjeUE5UFQwZ0oza25JRDhnWW05MGRHOXRJRG9nY21sbmFIUTdYRzRnSUNBZ2RtRnlJR3hsYmlBOUlHMWhhVzVCZUdseklEMDlQU0FuZVNjZ1B5QW5hR1ZwWjJoMEp5QTZJQ2QzYVdSMGFDYzdYRzRnSUNBZ2RtRnlJRzltWm5ObGRDQTlJSEJ2Y0hCbGNrOW1abk5sZEhOYmJXRnBia0Y0YVhOZE8xeHVJQ0FnSUhaaGNpQnRhVzRnUFNCdlptWnpaWFFnS3lCdmRtVnlabXh2ZDF0dFlXbHVVMmxrWlYwN1hHNGdJQ0FnZG1GeUlHMWhlQ0E5SUc5bVpuTmxkQ0F0SUc5MlpYSm1iRzkzVzJGc2RGTnBaR1ZkTzF4dUlDQWdJSFpoY2lCaFpHUnBkR2wyWlNBOUlIUmxkR2hsY2lBL0lDMXdiM0J3WlhKU1pXTjBXMnhsYmwwZ0x5QXlJRG9nTUR0Y2JpQWdJQ0IyWVhJZ2JXbHVUR1Z1SUQwZ2RtRnlhV0YwYVc5dUlEMDlQU0J6ZEdGeWRDQS9JSEpsWm1WeVpXNWpaVkpsWTNSYmJHVnVYU0E2SUhCdmNIQmxjbEpsWTNSYmJHVnVYVHRjYmlBZ0lDQjJZWElnYldGNFRHVnVJRDBnZG1GeWFXRjBhVzl1SUQwOVBTQnpkR0Z5ZENBL0lDMXdiM0J3WlhKU1pXTjBXMnhsYmwwZ09pQXRjbVZtWlhKbGJtTmxVbVZqZEZ0c1pXNWRPeUF2THlCWFpTQnVaV1ZrSUhSdklHbHVZMngxWkdVZ2RHaGxJR0Z5Y205M0lHbHVJSFJvWlNCallXeGpkV3hoZEdsdmJpQnpieUIwYUdVZ1lYSnliM2NnWkc5bGMyNG5kQ0JuYjF4dUlDQWdJQzh2SUc5MWRITnBaR1VnZEdobElISmxabVZ5Wlc1alpTQmliM1Z1WkhOY2JseHVJQ0FnSUhaaGNpQmhjbkp2ZDBWc1pXMWxiblFnUFNCemRHRjBaUzVsYkdWdFpXNTBjeTVoY25KdmR6dGNiaUFnSUNCMllYSWdZWEp5YjNkU1pXTjBJRDBnZEdWMGFHVnlJQ1ltSUdGeWNtOTNSV3hsYldWdWRDQS9JR2RsZEV4aGVXOTFkRkpsWTNRb1lYSnliM2RGYkdWdFpXNTBLU0E2SUh0Y2JpQWdJQ0FnSUhkcFpIUm9PaUF3TEZ4dUlDQWdJQ0FnYUdWcFoyaDBPaUF3WEc0Z0lDQWdmVHRjYmlBZ0lDQjJZWElnWVhKeWIzZFFZV1JrYVc1blQySnFaV04wSUQwZ2MzUmhkR1V1Ylc5a2FXWnBaWEp6UkdGMFlWc25ZWEp5YjNjamNHVnljMmx6ZEdWdWRDZGRJRDhnYzNSaGRHVXViVzlrYVdacFpYSnpSR0YwWVZzbllYSnliM2NqY0dWeWMybHpkR1Z1ZENkZExuQmhaR1JwYm1jZ09pQm5aWFJHY21WemFGTnBaR1ZQWW1wbFkzUW9LVHRjYmlBZ0lDQjJZWElnWVhKeWIzZFFZV1JrYVc1blRXbHVJRDBnWVhKeWIzZFFZV1JrYVc1blQySnFaV04wVzIxaGFXNVRhV1JsWFR0Y2JpQWdJQ0IyWVhJZ1lYSnliM2RRWVdSa2FXNW5UV0Y0SUQwZ1lYSnliM2RRWVdSa2FXNW5UMkpxWldOMFcyRnNkRk5wWkdWZE95QXZMeUJKWmlCMGFHVWdjbVZtWlhKbGJtTmxJR3hsYm1kMGFDQnBjeUJ6YldGc2JHVnlJSFJvWVc0Z2RHaGxJR0Z5Y205M0lHeGxibWQwYUN3Z2QyVWdaRzl1SjNRZ2QyRnVkRnh1SUNBZ0lDOHZJSFJ2SUdsdVkyeDFaR1VnYVhSeklHWjFiR3dnYzJsNlpTQnBiaUIwYUdVZ1kyRnNZM1ZzWVhScGIyNHVJRWxtSUhSb1pTQnlaV1psY21WdVkyVWdhWE1nYzIxaGJHeGNiaUFnSUNBdkx5QmhibVFnYm1WaGNpQjBhR1VnWldSblpTQnZaaUJoSUdKdmRXNWtZWEo1TENCMGFHVWdjRzl3Y0dWeUlHTmhiaUJ2ZG1WeVpteHZkeUJsZG1WdUlHbG1JSFJvWlZ4dUlDQWdJQzh2SUhKbFptVnlaVzVqWlNCcGN5QnViM1FnYjNabGNtWnNiM2RwYm1jZ1lYTWdkMlZzYkNBb1pTNW5MaUIyYVhKMGRXRnNJR1ZzWlcxbGJuUnpJSGRwZEdnZ2JtOWNiaUFnSUNBdkx5QjNhV1IwYUNCdmNpQm9aV2xuYUhRcFhHNWNiaUFnSUNCMllYSWdZWEp5YjNkTVpXNGdQU0IzYVhSb2FXNG9NQ3dnY21WbVpYSmxibU5sVW1WamRGdHNaVzVkTENCaGNuSnZkMUpsWTNSYmJHVnVYU2s3WEc0Z0lDQWdkbUZ5SUcxcGJrOW1abk5sZENBOUlHbHpRbUZ6WlZCc1lXTmxiV1Z1ZENBL0lISmxabVZ5Wlc1alpWSmxZM1JiYkdWdVhTQXZJRElnTFNCaFpHUnBkR2wyWlNBdElHRnljbTkzVEdWdUlDMGdZWEp5YjNkUVlXUmthVzVuVFdsdUlDMGdibTl5YldGc2FYcGxaRlJsZEdobGNrOW1abk5sZEZaaGJIVmxMbTFoYVc1QmVHbHpJRG9nYldsdVRHVnVJQzBnWVhKeWIzZE1aVzRnTFNCaGNuSnZkMUJoWkdScGJtZE5hVzRnTFNCdWIzSnRZV3hwZW1Wa1ZHVjBhR1Z5VDJabWMyVjBWbUZzZFdVdWJXRnBia0Y0YVhNN1hHNGdJQ0FnZG1GeUlHMWhlRTltWm5ObGRDQTlJR2x6UW1GelpWQnNZV05sYldWdWRDQS9JQzF5WldabGNtVnVZMlZTWldOMFcyeGxibDBnTHlBeUlDc2dZV1JrYVhScGRtVWdLeUJoY25KdmQweGxiaUFySUdGeWNtOTNVR0ZrWkdsdVowMWhlQ0FySUc1dmNtMWhiR2w2WldSVVpYUm9aWEpQWm1aelpYUldZV3gxWlM1dFlXbHVRWGhwY3lBNklHMWhlRXhsYmlBcklHRnljbTkzVEdWdUlDc2dZWEp5YjNkUVlXUmthVzVuVFdGNElDc2dibTl5YldGc2FYcGxaRlJsZEdobGNrOW1abk5sZEZaaGJIVmxMbTFoYVc1QmVHbHpPMXh1SUNBZ0lIWmhjaUJoY25KdmQwOW1abk5sZEZCaGNtVnVkQ0E5SUhOMFlYUmxMbVZzWlcxbGJuUnpMbUZ5Y205M0lDWW1JR2RsZEU5bVpuTmxkRkJoY21WdWRDaHpkR0YwWlM1bGJHVnRaVzUwY3k1aGNuSnZkeWs3WEc0Z0lDQWdkbUZ5SUdOc2FXVnVkRTltWm5ObGRDQTlJR0Z5Y205M1QyWm1jMlYwVUdGeVpXNTBJRDhnYldGcGJrRjRhWE1nUFQwOUlDZDVKeUEvSUdGeWNtOTNUMlptYzJWMFVHRnlaVzUwTG1Oc2FXVnVkRlJ2Y0NCOGZDQXdJRG9nWVhKeWIzZFBabVp6WlhSUVlYSmxiblF1WTJ4cFpXNTBUR1ZtZENCOGZDQXdJRG9nTUR0Y2JpQWdJQ0IyWVhJZ2IyWm1jMlYwVFc5a2FXWnBaWEpXWVd4MVpTQTlJQ2hmYjJabWMyVjBUVzlrYVdacFpYSlRkR0YwWlNRZ1BTQnZabVp6WlhSTmIyUnBabWxsY2xOMFlYUmxJRDA5SUc1MWJHd2dQeUIyYjJsa0lEQWdPaUJ2Wm1aelpYUk5iMlJwWm1sbGNsTjBZWFJsVzIxaGFXNUJlR2x6WFNrZ0lUMGdiblZzYkNBL0lGOXZabVp6WlhSTmIyUnBabWxsY2xOMFlYUmxKQ0E2SURBN1hHNGdJQ0FnZG1GeUlIUmxkR2hsY2sxcGJpQTlJRzltWm5ObGRDQXJJRzFwYms5bVpuTmxkQ0F0SUc5bVpuTmxkRTF2WkdsbWFXVnlWbUZzZFdVZ0xTQmpiR2xsYm5SUFptWnpaWFE3WEc0Z0lDQWdkbUZ5SUhSbGRHaGxjazFoZUNBOUlHOW1abk5sZENBcklHMWhlRTltWm5ObGRDQXRJRzltWm5ObGRFMXZaR2xtYVdWeVZtRnNkV1U3WEc0Z0lDQWdkbUZ5SUhCeVpYWmxiblJsWkU5bVpuTmxkQ0E5SUhkcGRHaHBiaWgwWlhSb1pYSWdQeUJ0WVhSb1RXbHVLRzFwYml3Z2RHVjBhR1Z5VFdsdUtTQTZJRzFwYml3Z2IyWm1jMlYwTENCMFpYUm9aWElnUHlCdFlYUm9UV0Y0S0cxaGVDd2dkR1YwYUdWeVRXRjRLU0E2SUcxaGVDazdYRzRnSUNBZ2NHOXdjR1Z5VDJabWMyVjBjMXR0WVdsdVFYaHBjMTBnUFNCd2NtVjJaVzUwWldSUFptWnpaWFE3WEc0Z0lDQWdaR0YwWVZ0dFlXbHVRWGhwYzEwZ1BTQndjbVYyWlc1MFpXUlBabVp6WlhRZ0xTQnZabVp6WlhRN1hHNGdJSDFjYmx4dUlDQnBaaUFvWTJobFkydEJiSFJCZUdsektTQjdYRzRnSUNBZ2RtRnlJRjl2Wm1aelpYUk5iMlJwWm1sbGNsTjBZWFJsSkRJN1hHNWNiaUFnSUNCMllYSWdYMjFoYVc1VGFXUmxJRDBnYldGcGJrRjRhWE1nUFQwOUlDZDRKeUEvSUhSdmNDQTZJR3hsWm5RN1hHNWNiaUFnSUNCMllYSWdYMkZzZEZOcFpHVWdQU0J0WVdsdVFYaHBjeUE5UFQwZ0ozZ25JRDhnWW05MGRHOXRJRG9nY21sbmFIUTdYRzVjYmlBZ0lDQjJZWElnWDI5bVpuTmxkQ0E5SUhCdmNIQmxjazltWm5ObGRITmJZV3gwUVhocGMxMDdYRzVjYmlBZ0lDQjJZWElnWDJ4bGJpQTlJR0ZzZEVGNGFYTWdQVDA5SUNkNUp5QS9JQ2RvWldsbmFIUW5JRG9nSjNkcFpIUm9KenRjYmx4dUlDQWdJSFpoY2lCZmJXbHVJRDBnWDI5bVpuTmxkQ0FySUc5MlpYSm1iRzkzVzE5dFlXbHVVMmxrWlYwN1hHNWNiaUFnSUNCMllYSWdYMjFoZUNBOUlGOXZabVp6WlhRZ0xTQnZkbVZ5Wm14dmQxdGZZV3gwVTJsa1pWMDdYRzVjYmlBZ0lDQjJZWElnYVhOUGNtbG5hVzVUYVdSbElEMGdXM1J2Y0N3Z2JHVm1kRjB1YVc1a1pYaFBaaWhpWVhObFVHeGhZMlZ0Wlc1MEtTQWhQVDBnTFRFN1hHNWNiaUFnSUNCMllYSWdYMjltWm5ObGRFMXZaR2xtYVdWeVZtRnNkV1VnUFNBb1gyOW1abk5sZEUxdlpHbG1hV1Z5VTNSaGRHVWtNaUE5SUc5bVpuTmxkRTF2WkdsbWFXVnlVM1JoZEdVZ1BUMGdiblZzYkNBL0lIWnZhV1FnTUNBNklHOW1abk5sZEUxdlpHbG1hV1Z5VTNSaGRHVmJZV3gwUVhocGMxMHBJQ0U5SUc1MWJHd2dQeUJmYjJabWMyVjBUVzlrYVdacFpYSlRkR0YwWlNReUlEb2dNRHRjYmx4dUlDQWdJSFpoY2lCZmRHVjBhR1Z5VFdsdUlEMGdhWE5QY21sbmFXNVRhV1JsSUQ4Z1gyMXBiaUE2SUY5dlptWnpaWFFnTFNCeVpXWmxjbVZ1WTJWU1pXTjBXMTlzWlc1ZElDMGdjRzl3Y0dWeVVtVmpkRnRmYkdWdVhTQXRJRjl2Wm1aelpYUk5iMlJwWm1sbGNsWmhiSFZsSUNzZ2JtOXliV0ZzYVhwbFpGUmxkR2hsY2s5bVpuTmxkRlpoYkhWbExtRnNkRUY0YVhNN1hHNWNiaUFnSUNCMllYSWdYM1JsZEdobGNrMWhlQ0E5SUdselQzSnBaMmx1VTJsa1pTQS9JRjl2Wm1aelpYUWdLeUJ5WldabGNtVnVZMlZTWldOMFcxOXNaVzVkSUNzZ2NHOXdjR1Z5VW1WamRGdGZiR1Z1WFNBdElGOXZabVp6WlhSTmIyUnBabWxsY2xaaGJIVmxJQzBnYm05eWJXRnNhWHBsWkZSbGRHaGxjazltWm5ObGRGWmhiSFZsTG1Gc2RFRjRhWE1nT2lCZmJXRjRPMXh1WEc0Z0lDQWdkbUZ5SUY5d2NtVjJaVzUwWldSUFptWnpaWFFnUFNCMFpYUm9aWElnSmlZZ2FYTlBjbWxuYVc1VGFXUmxJRDhnZDJsMGFHbHVUV0Y0UTJ4aGJYQW9YM1JsZEdobGNrMXBiaXdnWDI5bVpuTmxkQ3dnWDNSbGRHaGxjazFoZUNrZ09pQjNhWFJvYVc0b2RHVjBhR1Z5SUQ4Z1gzUmxkR2hsY2sxcGJpQTZJRjl0YVc0c0lGOXZabVp6WlhRc0lIUmxkR2hsY2lBL0lGOTBaWFJvWlhKTllYZ2dPaUJmYldGNEtUdGNibHh1SUNBZ0lIQnZjSEJsY2s5bVpuTmxkSE5iWVd4MFFYaHBjMTBnUFNCZmNISmxkbVZ1ZEdWa1QyWm1jMlYwTzF4dUlDQWdJR1JoZEdGYllXeDBRWGhwYzEwZ1BTQmZjSEpsZG1WdWRHVmtUMlptYzJWMElDMGdYMjltWm5ObGREdGNiaUFnZlZ4dVhHNGdJSE4wWVhSbExtMXZaR2xtYVdWeWMwUmhkR0ZiYm1GdFpWMGdQU0JrWVhSaE8xeHVmU0F2THlCbGMyeHBiblF0WkdsellXSnNaUzF1WlhoMExXeHBibVVnYVcxd2IzSjBMMjV2TFhWdWRYTmxaQzF0YjJSMWJHVnpYRzVjYmx4dVpYaHdiM0owSUdSbFptRjFiSFFnZTF4dUlDQnVZVzFsT2lBbmNISmxkbVZ1ZEU5MlpYSm1iRzkzSnl4Y2JpQWdaVzVoWW14bFpEb2dkSEoxWlN4Y2JpQWdjR2hoYzJVNklDZHRZV2x1Snl4Y2JpQWdabTQ2SUhCeVpYWmxiblJQZG1WeVpteHZkeXhjYmlBZ2NtVnhkV2x5WlhOSlprVjRhWE4wY3pvZ1d5ZHZabVp6WlhRblhWeHVmVHNpTENKcGJYQnZjblFnZXlCd2IzQndaWEpIWlc1bGNtRjBiM0lzSUdSbGRHVmpkRTkyWlhKbWJHOTNJSDBnWm5KdmJTQmNJaTR2WTNKbFlYUmxVRzl3Y0dWeUxtcHpYQ0k3WEc1cGJYQnZjblFnWlhabGJuUk1hWE4wWlc1bGNuTWdabkp2YlNCY0lpNHZiVzlrYVdacFpYSnpMMlYyWlc1MFRHbHpkR1Z1WlhKekxtcHpYQ0k3WEc1cGJYQnZjblFnY0c5d2NHVnlUMlptYzJWMGN5Qm1jbTl0SUZ3aUxpOXRiMlJwWm1sbGNuTXZjRzl3Y0dWeVQyWm1jMlYwY3k1cWMxd2lPMXh1YVcxd2IzSjBJR052YlhCMWRHVlRkSGxzWlhNZ1puSnZiU0JjSWk0dmJXOWthV1pwWlhKekwyTnZiWEIxZEdWVGRIbHNaWE11YW5OY0lqdGNibWx0Y0c5eWRDQmhjSEJzZVZOMGVXeGxjeUJtY205dElGd2lMaTl0YjJScFptbGxjbk12WVhCd2JIbFRkSGxzWlhNdWFuTmNJanRjYm5aaGNpQmtaV1poZFd4MFRXOWthV1pwWlhKeklEMGdXMlYyWlc1MFRHbHpkR1Z1WlhKekxDQndiM0J3WlhKUFptWnpaWFJ6TENCamIyMXdkWFJsVTNSNWJHVnpMQ0JoY0hCc2VWTjBlV3hsYzEwN1hHNTJZWElnWTNKbFlYUmxVRzl3Y0dWeUlEMGdMeW9qWDE5UVZWSkZYMThxTDNCdmNIQmxja2RsYm1WeVlYUnZjaWg3WEc0Z0lHUmxabUYxYkhSTmIyUnBabWxsY25NNklHUmxabUYxYkhSTmIyUnBabWxsY25OY2JuMHBPeUF2THlCbGMyeHBiblF0WkdsellXSnNaUzF1WlhoMExXeHBibVVnYVcxd2IzSjBMMjV2TFhWdWRYTmxaQzF0YjJSMWJHVnpYRzVjYm1WNGNHOXlkQ0I3SUdOeVpXRjBaVkJ2Y0hCbGNpd2djRzl3Y0dWeVIyVnVaWEpoZEc5eUxDQmtaV1poZFd4MFRXOWthV1pwWlhKekxDQmtaWFJsWTNSUGRtVnlabXh2ZHlCOU95SXNJbWx0Y0c5eWRDQjdJSEJ2Y0hCbGNrZGxibVZ5WVhSdmNpd2daR1YwWldOMFQzWmxjbVpzYjNjZ2ZTQm1jbTl0SUZ3aUxpOWpjbVZoZEdWUWIzQndaWEl1YW5OY0lqdGNibWx0Y0c5eWRDQmxkbVZ1ZEV4cGMzUmxibVZ5Y3lCbWNtOXRJRndpTGk5dGIyUnBabWxsY25NdlpYWmxiblJNYVhOMFpXNWxjbk11YW5OY0lqdGNibWx0Y0c5eWRDQndiM0J3WlhKUFptWnpaWFJ6SUdaeWIyMGdYQ0l1TDIxdlpHbG1hV1Z5Y3k5d2IzQndaWEpQWm1aelpYUnpMbXB6WENJN1hHNXBiWEJ2Y25RZ1kyOXRjSFYwWlZOMGVXeGxjeUJtY205dElGd2lMaTl0YjJScFptbGxjbk12WTI5dGNIVjBaVk4wZVd4bGN5NXFjMXdpTzF4dWFXMXdiM0owSUdGd2NHeDVVM1I1YkdWeklHWnliMjBnWENJdUwyMXZaR2xtYVdWeWN5OWhjSEJzZVZOMGVXeGxjeTVxYzF3aU8xeHVhVzF3YjNKMElHOW1abk5sZENCbWNtOXRJRndpTGk5dGIyUnBabWxsY25NdmIyWm1jMlYwTG1welhDSTdYRzVwYlhCdmNuUWdabXhwY0NCbWNtOXRJRndpTGk5dGIyUnBabWxsY25NdlpteHBjQzVxYzF3aU8xeHVhVzF3YjNKMElIQnlaWFpsYm5SUGRtVnlabXh2ZHlCbWNtOXRJRndpTGk5dGIyUnBabWxsY25NdmNISmxkbVZ1ZEU5MlpYSm1iRzkzTG1welhDSTdYRzVwYlhCdmNuUWdZWEp5YjNjZ1puSnZiU0JjSWk0dmJXOWthV1pwWlhKekwyRnljbTkzTG1welhDSTdYRzVwYlhCdmNuUWdhR2xrWlNCbWNtOXRJRndpTGk5dGIyUnBabWxsY25NdmFHbGtaUzVxYzF3aU8xeHVkbUZ5SUdSbFptRjFiSFJOYjJScFptbGxjbk1nUFNCYlpYWmxiblJNYVhOMFpXNWxjbk1zSUhCdmNIQmxjazltWm5ObGRITXNJR052YlhCMWRHVlRkSGxzWlhNc0lHRndjR3g1VTNSNWJHVnpMQ0J2Wm1aelpYUXNJR1pzYVhBc0lIQnlaWFpsYm5SUGRtVnlabXh2ZHl3Z1lYSnliM2NzSUdocFpHVmRPMXh1ZG1GeUlHTnlaV0YwWlZCdmNIQmxjaUE5SUM4cUkxOWZVRlZTUlY5ZktpOXdiM0J3WlhKSFpXNWxjbUYwYjNJb2UxeHVJQ0JrWldaaGRXeDBUVzlrYVdacFpYSnpPaUJrWldaaGRXeDBUVzlrYVdacFpYSnpYRzU5S1RzZ0x5OGdaWE5zYVc1MExXUnBjMkZpYkdVdGJtVjRkQzFzYVc1bElHbHRjRzl5ZEM5dWJ5MTFiblZ6WldRdGJXOWtkV3hsYzF4dVhHNWxlSEJ2Y25RZ2V5QmpjbVZoZEdWUWIzQndaWElzSUhCdmNIQmxja2RsYm1WeVlYUnZjaXdnWkdWbVlYVnNkRTF2WkdsbWFXVnljeXdnWkdWMFpXTjBUM1psY21ac2IzY2dmVHNnTHk4Z1pYTnNhVzUwTFdScGMyRmliR1V0Ym1WNGRDMXNhVzVsSUdsdGNHOXlkQzl1YnkxMWJuVnpaV1F0Ylc5a2RXeGxjMXh1WEc1bGVIQnZjblFnZXlCamNtVmhkR1ZRYjNCd1pYSWdZWE1nWTNKbFlYUmxVRzl3Y0dWeVRHbDBaU0I5SUdaeWIyMGdYQ0l1TDNCdmNIQmxjaTFzYVhSbExtcHpYQ0k3SUM4dklHVnpiR2x1ZEMxa2FYTmhZbXhsTFc1bGVIUXRiR2x1WlNCcGJYQnZjblF2Ym04dGRXNTFjMlZrTFcxdlpIVnNaWE5jYmx4dVpYaHdiM0owSUNvZ1puSnZiU0JjSWk0dmJXOWthV1pwWlhKekwybHVaR1Y0TG1welhDSTdJaXdpYVcxd2IzSjBJR2RsZEZaaGNtbGhkR2x2YmlCbWNtOXRJRndpTGk5blpYUldZWEpwWVhScGIyNHVhbk5jSWp0Y2JtbHRjRzl5ZENCN0lIWmhjbWxoZEdsdmJsQnNZV05sYldWdWRITXNJR0poYzJWUWJHRmpaVzFsYm5SekxDQndiR0ZqWlcxbGJuUnpJR0Z6SUdGc2JGQnNZV05sYldWdWRITWdmU0JtY205dElGd2lMaTR2Wlc1MWJYTXVhbk5jSWp0Y2JtbHRjRzl5ZENCa1pYUmxZM1JQZG1WeVpteHZkeUJtY205dElGd2lMaTlrWlhSbFkzUlBkbVZ5Wm14dmR5NXFjMXdpTzF4dWFXMXdiM0owSUdkbGRFSmhjMlZRYkdGalpXMWxiblFnWm5KdmJTQmNJaTR2WjJWMFFtRnpaVkJzWVdObGJXVnVkQzVxYzF3aU8xeHVaWGh3YjNKMElHUmxabUYxYkhRZ1puVnVZM1JwYjI0Z1kyOXRjSFYwWlVGMWRHOVFiR0ZqWlcxbGJuUW9jM1JoZEdVc0lHOXdkR2x2Ym5NcElIdGNiaUFnYVdZZ0tHOXdkR2x2Ym5NZ1BUMDlJSFp2YVdRZ01Da2dlMXh1SUNBZ0lHOXdkR2x2Ym5NZ1BTQjdmVHRjYmlBZ2ZWeHVYRzRnSUhaaGNpQmZiM0IwYVc5dWN5QTlJRzl3ZEdsdmJuTXNYRzRnSUNBZ0lDQndiR0ZqWlcxbGJuUWdQU0JmYjNCMGFXOXVjeTV3YkdGalpXMWxiblFzWEc0Z0lDQWdJQ0JpYjNWdVpHRnllU0E5SUY5dmNIUnBiMjV6TG1KdmRXNWtZWEo1TEZ4dUlDQWdJQ0FnY205dmRFSnZkVzVrWVhKNUlEMGdYMjl3ZEdsdmJuTXVjbTl2ZEVKdmRXNWtZWEo1TEZ4dUlDQWdJQ0FnY0dGa1pHbHVaeUE5SUY5dmNIUnBiMjV6TG5CaFpHUnBibWNzWEc0Z0lDQWdJQ0JtYkdsd1ZtRnlhV0YwYVc5dWN5QTlJRjl2Y0hScGIyNXpMbVpzYVhCV1lYSnBZWFJwYjI1ekxGeHVJQ0FnSUNBZ1gyOXdkR2x2Ym5Na1lXeHNiM2RsWkVGMWRHOVFJRDBnWDI5d2RHbHZibk11WVd4c2IzZGxaRUYxZEc5UWJHRmpaVzFsYm5SekxGeHVJQ0FnSUNBZ1lXeHNiM2RsWkVGMWRHOVFiR0ZqWlcxbGJuUnpJRDBnWDI5d2RHbHZibk1rWVd4c2IzZGxaRUYxZEc5UUlEMDlQU0IyYjJsa0lEQWdQeUJoYkd4UWJHRmpaVzFsYm5SeklEb2dYMjl3ZEdsdmJuTWtZV3hzYjNkbFpFRjFkRzlRTzF4dUlDQjJZWElnZG1GeWFXRjBhVzl1SUQwZ1oyVjBWbUZ5YVdGMGFXOXVLSEJzWVdObGJXVnVkQ2s3WEc0Z0lIWmhjaUJ3YkdGalpXMWxiblJ6SUQwZ2RtRnlhV0YwYVc5dUlEOGdabXhwY0ZaaGNtbGhkR2x2Ym5NZ1B5QjJZWEpwWVhScGIyNVFiR0ZqWlcxbGJuUnpJRG9nZG1GeWFXRjBhVzl1VUd4aFkyVnRaVzUwY3k1bWFXeDBaWElvWm5WdVkzUnBiMjRnS0hCc1lXTmxiV1Z1ZENrZ2UxeHVJQ0FnSUhKbGRIVnliaUJuWlhSV1lYSnBZWFJwYjI0b2NHeGhZMlZ0Wlc1MEtTQTlQVDBnZG1GeWFXRjBhVzl1TzF4dUlDQjlLU0E2SUdKaGMyVlFiR0ZqWlcxbGJuUnpPMXh1SUNCMllYSWdZV3hzYjNkbFpGQnNZV05sYldWdWRITWdQU0J3YkdGalpXMWxiblJ6TG1acGJIUmxjaWhtZFc1amRHbHZiaUFvY0d4aFkyVnRaVzUwS1NCN1hHNGdJQ0FnY21WMGRYSnVJR0ZzYkc5M1pXUkJkWFJ2VUd4aFkyVnRaVzUwY3k1cGJtUmxlRTltS0hCc1lXTmxiV1Z1ZENrZ1BqMGdNRHRjYmlBZ2ZTazdYRzVjYmlBZ2FXWWdLR0ZzYkc5M1pXUlFiR0ZqWlcxbGJuUnpMbXhsYm1kMGFDQTlQVDBnTUNrZ2UxeHVJQ0FnSUdGc2JHOTNaV1JRYkdGalpXMWxiblJ6SUQwZ2NHeGhZMlZ0Wlc1MGN6dGNibHh1SUNBZ0lHbG1JQ2h3Y205alpYTnpMbVZ1ZGk1T1QwUkZYMFZPVmlBaFBUMGdYQ0p3Y205a2RXTjBhVzl1WENJcElIdGNiaUFnSUNBZ0lHTnZibk52YkdVdVpYSnliM0lvV3lkUWIzQndaWEk2SUZSb1pTQmdZV3hzYjNkbFpFRjFkRzlRYkdGalpXMWxiblJ6WUNCdmNIUnBiMjRnWkdsa0lHNXZkQ0JoYkd4dmR5QmhibmtuTENBbmNHeGhZMlZ0Wlc1MGN5NGdSVzV6ZFhKbElIUm9aU0JnY0d4aFkyVnRaVzUwWUNCdmNIUnBiMjRnYldGMFkyaGxjeUIwYUdVZ2RtRnlhV0YwYVc5dUp5d2dKMjltSUhSb1pTQmhiR3h2ZDJWa0lIQnNZV05sYldWdWRITXVKeXdnSjBadmNpQmxlR0Z0Y0d4bExDQmNJbUYxZEc5Y0lpQmpZVzV1YjNRZ1ltVWdkWE5sWkNCMGJ5QmhiR3h2ZHlCY0ltSnZkSFJ2YlMxemRHRnlkRndpTGljc0lDZFZjMlVnWENKaGRYUnZMWE4wWVhKMFhDSWdhVzV6ZEdWaFpDNG5YUzVxYjJsdUtDY2dKeWtwTzF4dUlDQWdJSDFjYmlBZ2ZTQXZMeUFrUm14dmQwWnBlRTFsVzJsdVkyOXRjR0YwYVdKc1pTMTBlWEJsWFRvZ1JteHZkeUJ6WldWdGN5QjBieUJvWVhabElIQnliMkpzWlcxeklIZHBkR2dnZEhkdklHRnljbUY1SUhWdWFXOXVjeTR1TGx4dVhHNWNiaUFnZG1GeUlHOTJaWEptYkc5M2N5QTlJR0ZzYkc5M1pXUlFiR0ZqWlcxbGJuUnpMbkpsWkhWalpTaG1kVzVqZEdsdmJpQW9ZV05qTENCd2JHRmpaVzFsYm5RcElIdGNiaUFnSUNCaFkyTmJjR3hoWTJWdFpXNTBYU0E5SUdSbGRHVmpkRTkyWlhKbWJHOTNLSE4wWVhSbExDQjdYRzRnSUNBZ0lDQndiR0ZqWlcxbGJuUTZJSEJzWVdObGJXVnVkQ3hjYmlBZ0lDQWdJR0p2ZFc1a1lYSjVPaUJpYjNWdVpHRnllU3hjYmlBZ0lDQWdJSEp2YjNSQ2IzVnVaR0Z5ZVRvZ2NtOXZkRUp2ZFc1a1lYSjVMRnh1SUNBZ0lDQWdjR0ZrWkdsdVp6b2djR0ZrWkdsdVoxeHVJQ0FnSUgwcFcyZGxkRUpoYzJWUWJHRmpaVzFsYm5Rb2NHeGhZMlZ0Wlc1MEtWMDdYRzRnSUNBZ2NtVjBkWEp1SUdGall6dGNiaUFnZlN3Z2UzMHBPMXh1SUNCeVpYUjFjbTRnVDJKcVpXTjBMbXRsZVhNb2IzWmxjbVpzYjNkektTNXpiM0owS0daMWJtTjBhVzl1SUNoaExDQmlLU0I3WEc0Z0lDQWdjbVYwZFhKdUlHOTJaWEptYkc5M2MxdGhYU0F0SUc5MlpYSm1iRzkzYzF0aVhUdGNiaUFnZlNrN1hHNTlJaXdpYVcxd2IzSjBJR2RsZEVKaGMyVlFiR0ZqWlcxbGJuUWdabkp2YlNCY0lpNHZaMlYwUW1GelpWQnNZV05sYldWdWRDNXFjMXdpTzF4dWFXMXdiM0owSUdkbGRGWmhjbWxoZEdsdmJpQm1jbTl0SUZ3aUxpOW5aWFJXWVhKcFlYUnBiMjR1YW5OY0lqdGNibWx0Y0c5eWRDQm5aWFJOWVdsdVFYaHBjMFp5YjIxUWJHRmpaVzFsYm5RZ1puSnZiU0JjSWk0dloyVjBUV0ZwYmtGNGFYTkdjbTl0VUd4aFkyVnRaVzUwTG1welhDSTdYRzVwYlhCdmNuUWdleUIwYjNBc0lISnBaMmgwTENCaWIzUjBiMjBzSUd4bFpuUXNJSE4wWVhKMExDQmxibVFnZlNCbWNtOXRJRndpTGk0dlpXNTFiWE11YW5OY0lqdGNibVY0Y0c5eWRDQmtaV1poZFd4MElHWjFibU4wYVc5dUlHTnZiWEIxZEdWUFptWnpaWFJ6S0Y5eVpXWXBJSHRjYmlBZ2RtRnlJSEpsWm1WeVpXNWpaU0E5SUY5eVpXWXVjbVZtWlhKbGJtTmxMRnh1SUNBZ0lDQWdaV3hsYldWdWRDQTlJRjl5WldZdVpXeGxiV1Z1ZEN4Y2JpQWdJQ0FnSUhCc1lXTmxiV1Z1ZENBOUlGOXlaV1l1Y0d4aFkyVnRaVzUwTzF4dUlDQjJZWElnWW1GelpWQnNZV05sYldWdWRDQTlJSEJzWVdObGJXVnVkQ0EvSUdkbGRFSmhjMlZRYkdGalpXMWxiblFvY0d4aFkyVnRaVzUwS1NBNklHNTFiR3c3WEc0Z0lIWmhjaUIyWVhKcFlYUnBiMjRnUFNCd2JHRmpaVzFsYm5RZ1B5Qm5aWFJXWVhKcFlYUnBiMjRvY0d4aFkyVnRaVzUwS1NBNklHNTFiR3c3WEc0Z0lIWmhjaUJqYjIxdGIyNVlJRDBnY21WbVpYSmxibU5sTG5nZ0t5QnlaV1psY21WdVkyVXVkMmxrZEdnZ0x5QXlJQzBnWld4bGJXVnVkQzUzYVdSMGFDQXZJREk3WEc0Z0lIWmhjaUJqYjIxdGIyNVpJRDBnY21WbVpYSmxibU5sTG5rZ0t5QnlaV1psY21WdVkyVXVhR1ZwWjJoMElDOGdNaUF0SUdWc1pXMWxiblF1YUdWcFoyaDBJQzhnTWp0Y2JpQWdkbUZ5SUc5bVpuTmxkSE03WEc1Y2JpQWdjM2RwZEdOb0lDaGlZWE5sVUd4aFkyVnRaVzUwS1NCN1hHNGdJQ0FnWTJGelpTQjBiM0E2WEc0Z0lDQWdJQ0J2Wm1aelpYUnpJRDBnZTF4dUlDQWdJQ0FnSUNCNE9pQmpiMjF0YjI1WUxGeHVJQ0FnSUNBZ0lDQjVPaUJ5WldabGNtVnVZMlV1ZVNBdElHVnNaVzFsYm5RdWFHVnBaMmgwWEc0Z0lDQWdJQ0I5TzF4dUlDQWdJQ0FnWW5KbFlXczdYRzVjYmlBZ0lDQmpZWE5sSUdKdmRIUnZiVHBjYmlBZ0lDQWdJRzltWm5ObGRITWdQU0I3WEc0Z0lDQWdJQ0FnSUhnNklHTnZiVzF2Ymxnc1hHNGdJQ0FnSUNBZ0lIazZJSEpsWm1WeVpXNWpaUzU1SUNzZ2NtVm1aWEpsYm1ObExtaGxhV2RvZEZ4dUlDQWdJQ0FnZlR0Y2JpQWdJQ0FnSUdKeVpXRnJPMXh1WEc0Z0lDQWdZMkZ6WlNCeWFXZG9kRHBjYmlBZ0lDQWdJRzltWm5ObGRITWdQU0I3WEc0Z0lDQWdJQ0FnSUhnNklISmxabVZ5Wlc1alpTNTRJQ3NnY21WbVpYSmxibU5sTG5kcFpIUm9MRnh1SUNBZ0lDQWdJQ0I1T2lCamIyMXRiMjVaWEc0Z0lDQWdJQ0I5TzF4dUlDQWdJQ0FnWW5KbFlXczdYRzVjYmlBZ0lDQmpZWE5sSUd4bFpuUTZYRzRnSUNBZ0lDQnZabVp6WlhSeklEMGdlMXh1SUNBZ0lDQWdJQ0I0T2lCeVpXWmxjbVZ1WTJVdWVDQXRJR1ZzWlcxbGJuUXVkMmxrZEdnc1hHNGdJQ0FnSUNBZ0lIazZJR052YlcxdmJsbGNiaUFnSUNBZ0lIMDdYRzRnSUNBZ0lDQmljbVZoYXp0Y2JseHVJQ0FnSUdSbFptRjFiSFE2WEc0Z0lDQWdJQ0J2Wm1aelpYUnpJRDBnZTF4dUlDQWdJQ0FnSUNCNE9pQnlaV1psY21WdVkyVXVlQ3hjYmlBZ0lDQWdJQ0FnZVRvZ2NtVm1aWEpsYm1ObExubGNiaUFnSUNBZ0lIMDdYRzRnSUgxY2JseHVJQ0IyWVhJZ2JXRnBia0Y0YVhNZ1BTQmlZWE5sVUd4aFkyVnRaVzUwSUQ4Z1oyVjBUV0ZwYmtGNGFYTkdjbTl0VUd4aFkyVnRaVzUwS0dKaGMyVlFiR0ZqWlcxbGJuUXBJRG9nYm5Wc2JEdGNibHh1SUNCcFppQW9iV0ZwYmtGNGFYTWdJVDBnYm5Wc2JDa2dlMXh1SUNBZ0lIWmhjaUJzWlc0Z1BTQnRZV2x1UVhocGN5QTlQVDBnSjNrbklEOGdKMmhsYVdkb2RDY2dPaUFuZDJsa2RHZ25PMXh1WEc0Z0lDQWdjM2RwZEdOb0lDaDJZWEpwWVhScGIyNHBJSHRjYmlBZ0lDQWdJR05oYzJVZ2MzUmhjblE2WEc0Z0lDQWdJQ0FnSUc5bVpuTmxkSE5iYldGcGJrRjRhWE5kSUQwZ2IyWm1jMlYwYzF0dFlXbHVRWGhwYzEwZ0xTQW9jbVZtWlhKbGJtTmxXMnhsYmwwZ0x5QXlJQzBnWld4bGJXVnVkRnRzWlc1ZElDOGdNaWs3WEc0Z0lDQWdJQ0FnSUdKeVpXRnJPMXh1WEc0Z0lDQWdJQ0JqWVhObElHVnVaRHBjYmlBZ0lDQWdJQ0FnYjJabWMyVjBjMXR0WVdsdVFYaHBjMTBnUFNCdlptWnpaWFJ6VzIxaGFXNUJlR2x6WFNBcklDaHlaV1psY21WdVkyVmJiR1Z1WFNBdklESWdMU0JsYkdWdFpXNTBXMnhsYmwwZ0x5QXlLVHRjYmlBZ0lDQWdJQ0FnWW5KbFlXczdYRzVjYmlBZ0lDQWdJR1JsWm1GMWJIUTZYRzRnSUNBZ2ZWeHVJQ0I5WEc1Y2JpQWdjbVYwZFhKdUlHOW1abk5sZEhNN1hHNTlJaXdpWlhod2IzSjBJR1JsWm1GMWJIUWdablZ1WTNScGIyNGdaR1ZpYjNWdVkyVW9abTRwSUh0Y2JpQWdkbUZ5SUhCbGJtUnBibWM3WEc0Z0lISmxkSFZ5YmlCbWRXNWpkR2x2YmlBb0tTQjdYRzRnSUNBZ2FXWWdLQ0Z3Wlc1a2FXNW5LU0I3WEc0Z0lDQWdJQ0J3Wlc1a2FXNW5JRDBnYm1WM0lGQnliMjFwYzJVb1puVnVZM1JwYjI0Z0tISmxjMjlzZG1VcElIdGNiaUFnSUNBZ0lDQWdVSEp2YldselpTNXlaWE52YkhabEtDa3VkR2hsYmlobWRXNWpkR2x2YmlBb0tTQjdYRzRnSUNBZ0lDQWdJQ0FnY0dWdVpHbHVaeUE5SUhWdVpHVm1hVzVsWkR0Y2JpQWdJQ0FnSUNBZ0lDQnlaWE52YkhabEtHWnVLQ2twTzF4dUlDQWdJQ0FnSUNCOUtUdGNiaUFnSUNBZ0lIMHBPMXh1SUNBZ0lIMWNibHh1SUNBZ0lISmxkSFZ5YmlCd1pXNWthVzVuTzF4dUlDQjlPMXh1ZlNJc0ltbHRjRzl5ZENCblpYUkRiR2x3Y0dsdVoxSmxZM1FnWm5KdmJTQmNJaTR1TDJSdmJTMTFkR2xzY3k5blpYUkRiR2x3Y0dsdVoxSmxZM1F1YW5OY0lqdGNibWx0Y0c5eWRDQm5aWFJFYjJOMWJXVnVkRVZzWlcxbGJuUWdabkp2YlNCY0lpNHVMMlJ2YlMxMWRHbHNjeTluWlhSRWIyTjFiV1Z1ZEVWc1pXMWxiblF1YW5OY0lqdGNibWx0Y0c5eWRDQm5aWFJDYjNWdVpHbHVaME5zYVdWdWRGSmxZM1FnWm5KdmJTQmNJaTR1TDJSdmJTMTFkR2xzY3k5blpYUkNiM1Z1WkdsdVowTnNhV1Z1ZEZKbFkzUXVhbk5jSWp0Y2JtbHRjRzl5ZENCamIyMXdkWFJsVDJabWMyVjBjeUJtY205dElGd2lMaTlqYjIxd2RYUmxUMlptYzJWMGN5NXFjMXdpTzF4dWFXMXdiM0owSUhKbFkzUlViME5zYVdWdWRGSmxZM1FnWm5KdmJTQmNJaTR2Y21WamRGUnZRMnhwWlc1MFVtVmpkQzVxYzF3aU8xeHVhVzF3YjNKMElIc2dZMnhwY0hCcGJtZFFZWEpsYm5SekxDQnlaV1psY21WdVkyVXNJSEJ2Y0hCbGNpd2dZbTkwZEc5dExDQjBiM0FzSUhKcFoyaDBMQ0JpWVhObFVHeGhZMlZ0Wlc1MGN5d2dkbWxsZDNCdmNuUWdmU0JtY205dElGd2lMaTR2Wlc1MWJYTXVhbk5jSWp0Y2JtbHRjRzl5ZENCN0lHbHpSV3hsYldWdWRDQjlJR1p5YjIwZ1hDSXVMaTlrYjIwdGRYUnBiSE12YVc1emRHRnVZMlZQWmk1cWMxd2lPMXh1YVcxd2IzSjBJRzFsY21kbFVHRmtaR2x1WjA5aWFtVmpkQ0JtY205dElGd2lMaTl0WlhKblpWQmhaR1JwYm1kUFltcGxZM1F1YW5OY0lqdGNibWx0Y0c5eWRDQmxlSEJoYm1SVWIwaGhjMmhOWVhBZ1puSnZiU0JjSWk0dlpYaHdZVzVrVkc5SVlYTm9UV0Z3TG1welhDSTdJQzh2SUdWemJHbHVkQzFrYVhOaFlteGxMVzVsZUhRdGJHbHVaU0JwYlhCdmNuUXZibTh0ZFc1MWMyVmtMVzF2WkhWc1pYTmNibHh1Wlhod2IzSjBJR1JsWm1GMWJIUWdablZ1WTNScGIyNGdaR1YwWldOMFQzWmxjbVpzYjNjb2MzUmhkR1VzSUc5d2RHbHZibk1wSUh0Y2JpQWdhV1lnS0c5d2RHbHZibk1nUFQwOUlIWnZhV1FnTUNrZ2UxeHVJQ0FnSUc5d2RHbHZibk1nUFNCN2ZUdGNiaUFnZlZ4dVhHNGdJSFpoY2lCZmIzQjBhVzl1Y3lBOUlHOXdkR2x2Ym5Nc1hHNGdJQ0FnSUNCZmIzQjBhVzl1Y3lSd2JHRmpaVzFsYm5RZ1BTQmZiM0IwYVc5dWN5NXdiR0ZqWlcxbGJuUXNYRzRnSUNBZ0lDQndiR0ZqWlcxbGJuUWdQU0JmYjNCMGFXOXVjeVJ3YkdGalpXMWxiblFnUFQwOUlIWnZhV1FnTUNBL0lITjBZWFJsTG5Cc1lXTmxiV1Z1ZENBNklGOXZjSFJwYjI1ekpIQnNZV05sYldWdWRDeGNiaUFnSUNBZ0lGOXZjSFJwYjI1ekpITjBjbUYwWldkNUlEMGdYMjl3ZEdsdmJuTXVjM1J5WVhSbFoza3NYRzRnSUNBZ0lDQnpkSEpoZEdWbmVTQTlJRjl2Y0hScGIyNXpKSE4wY21GMFpXZDVJRDA5UFNCMmIybGtJREFnUHlCemRHRjBaUzV6ZEhKaGRHVm5lU0E2SUY5dmNIUnBiMjV6SkhOMGNtRjBaV2Q1TEZ4dUlDQWdJQ0FnWDI5d2RHbHZibk1rWW05MWJtUmhjbmtnUFNCZmIzQjBhVzl1Y3k1aWIzVnVaR0Z5ZVN4Y2JpQWdJQ0FnSUdKdmRXNWtZWEo1SUQwZ1gyOXdkR2x2Ym5Na1ltOTFibVJoY25rZ1BUMDlJSFp2YVdRZ01DQS9JR05zYVhCd2FXNW5VR0Z5Wlc1MGN5QTZJRjl2Y0hScGIyNXpKR0p2ZFc1a1lYSjVMRnh1SUNBZ0lDQWdYMjl3ZEdsdmJuTWtjbTl2ZEVKdmRXNWtZWEo1SUQwZ1gyOXdkR2x2Ym5NdWNtOXZkRUp2ZFc1a1lYSjVMRnh1SUNBZ0lDQWdjbTl2ZEVKdmRXNWtZWEo1SUQwZ1gyOXdkR2x2Ym5Na2NtOXZkRUp2ZFc1a1lYSjVJRDA5UFNCMmIybGtJREFnUHlCMmFXVjNjRzl5ZENBNklGOXZjSFJwYjI1ekpISnZiM1JDYjNWdVpHRnllU3hjYmlBZ0lDQWdJRjl2Y0hScGIyNXpKR1ZzWlcxbGJuUkRiMjUwWlNBOUlGOXZjSFJwYjI1ekxtVnNaVzFsYm5SRGIyNTBaWGgwTEZ4dUlDQWdJQ0FnWld4bGJXVnVkRU52Ym5SbGVIUWdQU0JmYjNCMGFXOXVjeVJsYkdWdFpXNTBRMjl1ZEdVZ1BUMDlJSFp2YVdRZ01DQS9JSEJ2Y0hCbGNpQTZJRjl2Y0hScGIyNXpKR1ZzWlcxbGJuUkRiMjUwWlN4Y2JpQWdJQ0FnSUY5dmNIUnBiMjV6SkdGc2RFSnZkVzVrWVhKNUlEMGdYMjl3ZEdsdmJuTXVZV3gwUW05MWJtUmhjbmtzWEc0Z0lDQWdJQ0JoYkhSQ2IzVnVaR0Z5ZVNBOUlGOXZjSFJwYjI1ekpHRnNkRUp2ZFc1a1lYSjVJRDA5UFNCMmIybGtJREFnUHlCbVlXeHpaU0E2SUY5dmNIUnBiMjV6SkdGc2RFSnZkVzVrWVhKNUxGeHVJQ0FnSUNBZ1gyOXdkR2x2Ym5Na2NHRmtaR2x1WnlBOUlGOXZjSFJwYjI1ekxuQmhaR1JwYm1jc1hHNGdJQ0FnSUNCd1lXUmthVzVuSUQwZ1gyOXdkR2x2Ym5Na2NHRmtaR2x1WnlBOVBUMGdkbTlwWkNBd0lEOGdNQ0E2SUY5dmNIUnBiMjV6SkhCaFpHUnBibWM3WEc0Z0lIWmhjaUJ3WVdSa2FXNW5UMkpxWldOMElEMGdiV1Z5WjJWUVlXUmthVzVuVDJKcVpXTjBLSFI1Y0dWdlppQndZV1JrYVc1bklDRTlQU0FuYm5WdFltVnlKeUEvSUhCaFpHUnBibWNnT2lCbGVIQmhibVJVYjBoaGMyaE5ZWEFvY0dGa1pHbHVaeXdnWW1GelpWQnNZV05sYldWdWRITXBLVHRjYmlBZ2RtRnlJR0ZzZEVOdmJuUmxlSFFnUFNCbGJHVnRaVzUwUTI5dWRHVjRkQ0E5UFQwZ2NHOXdjR1Z5SUQ4Z2NtVm1aWEpsYm1ObElEb2djRzl3Y0dWeU8xeHVJQ0IyWVhJZ2NHOXdjR1Z5VW1WamRDQTlJSE4wWVhSbExuSmxZM1J6TG5CdmNIQmxjanRjYmlBZ2RtRnlJR1ZzWlcxbGJuUWdQU0J6ZEdGMFpTNWxiR1Z0Wlc1MGMxdGhiSFJDYjNWdVpHRnllU0EvSUdGc2RFTnZiblJsZUhRZ09pQmxiR1Z0Wlc1MFEyOXVkR1Y0ZEYwN1hHNGdJSFpoY2lCamJHbHdjR2x1WjBOc2FXVnVkRkpsWTNRZ1BTQm5aWFJEYkdsd2NHbHVaMUpsWTNRb2FYTkZiR1Z0Wlc1MEtHVnNaVzFsYm5RcElEOGdaV3hsYldWdWRDQTZJR1ZzWlcxbGJuUXVZMjl1ZEdWNGRFVnNaVzFsYm5RZ2ZId2daMlYwUkc5amRXMWxiblJGYkdWdFpXNTBLSE4wWVhSbExtVnNaVzFsYm5SekxuQnZjSEJsY2lrc0lHSnZkVzVrWVhKNUxDQnliMjkwUW05MWJtUmhjbmtzSUhOMGNtRjBaV2Q1S1R0Y2JpQWdkbUZ5SUhKbFptVnlaVzVqWlVOc2FXVnVkRkpsWTNRZ1BTQm5aWFJDYjNWdVpHbHVaME5zYVdWdWRGSmxZM1FvYzNSaGRHVXVaV3hsYldWdWRITXVjbVZtWlhKbGJtTmxLVHRjYmlBZ2RtRnlJSEJ2Y0hCbGNrOW1abk5sZEhNZ1BTQmpiMjF3ZFhSbFQyWm1jMlYwY3loN1hHNGdJQ0FnY21WbVpYSmxibU5sT2lCeVpXWmxjbVZ1WTJWRGJHbGxiblJTWldOMExGeHVJQ0FnSUdWc1pXMWxiblE2SUhCdmNIQmxjbEpsWTNRc1hHNGdJQ0FnYzNSeVlYUmxaM2s2SUNkaFluTnZiSFYwWlNjc1hHNGdJQ0FnY0d4aFkyVnRaVzUwT2lCd2JHRmpaVzFsYm5SY2JpQWdmU2s3WEc0Z0lIWmhjaUJ3YjNCd1pYSkRiR2xsYm5SU1pXTjBJRDBnY21WamRGUnZRMnhwWlc1MFVtVmpkQ2hQWW1wbFkzUXVZWE56YVdkdUtIdDlMQ0J3YjNCd1pYSlNaV04wTENCd2IzQndaWEpQWm1aelpYUnpLU2s3WEc0Z0lIWmhjaUJsYkdWdFpXNTBRMnhwWlc1MFVtVmpkQ0E5SUdWc1pXMWxiblJEYjI1MFpYaDBJRDA5UFNCd2IzQndaWElnUHlCd2IzQndaWEpEYkdsbGJuUlNaV04wSURvZ2NtVm1aWEpsYm1ObFEyeHBaVzUwVW1WamREc2dMeThnY0c5emFYUnBkbVVnUFNCdmRtVnlabXh2ZDJsdVp5QjBhR1VnWTJ4cGNIQnBibWNnY21WamRGeHVJQ0F2THlBd0lHOXlJRzVsWjJGMGFYWmxJRDBnZDJsMGFHbHVJSFJvWlNCamJHbHdjR2x1WnlCeVpXTjBYRzVjYmlBZ2RtRnlJRzkyWlhKbWJHOTNUMlptYzJWMGN5QTlJSHRjYmlBZ0lDQjBiM0E2SUdOc2FYQndhVzVuUTJ4cFpXNTBVbVZqZEM1MGIzQWdMU0JsYkdWdFpXNTBRMnhwWlc1MFVtVmpkQzUwYjNBZ0t5QndZV1JrYVc1blQySnFaV04wTG5SdmNDeGNiaUFnSUNCaWIzUjBiMjA2SUdWc1pXMWxiblJEYkdsbGJuUlNaV04wTG1KdmRIUnZiU0F0SUdOc2FYQndhVzVuUTJ4cFpXNTBVbVZqZEM1aWIzUjBiMjBnS3lCd1lXUmthVzVuVDJKcVpXTjBMbUp2ZEhSdmJTeGNiaUFnSUNCc1pXWjBPaUJqYkdsd2NHbHVaME5zYVdWdWRGSmxZM1F1YkdWbWRDQXRJR1ZzWlcxbGJuUkRiR2xsYm5SU1pXTjBMbXhsWm5RZ0t5QndZV1JrYVc1blQySnFaV04wTG14bFpuUXNYRzRnSUNBZ2NtbG5hSFE2SUdWc1pXMWxiblJEYkdsbGJuUlNaV04wTG5KcFoyaDBJQzBnWTJ4cGNIQnBibWREYkdsbGJuUlNaV04wTG5KcFoyaDBJQ3NnY0dGa1pHbHVaMDlpYW1WamRDNXlhV2RvZEZ4dUlDQjlPMXh1SUNCMllYSWdiMlptYzJWMFJHRjBZU0E5SUhOMFlYUmxMbTF2WkdsbWFXVnljMFJoZEdFdWIyWm1jMlYwT3lBdkx5QlBabVp6WlhSeklHTmhiaUJpWlNCaGNIQnNhV1ZrSUc5dWJIa2dkRzhnZEdobElIQnZjSEJsY2lCbGJHVnRaVzUwWEc1Y2JpQWdhV1lnS0dWc1pXMWxiblJEYjI1MFpYaDBJRDA5UFNCd2IzQndaWElnSmlZZ2IyWm1jMlYwUkdGMFlTa2dlMXh1SUNBZ0lIWmhjaUJ2Wm1aelpYUWdQU0J2Wm1aelpYUkVZWFJoVzNCc1lXTmxiV1Z1ZEYwN1hHNGdJQ0FnVDJKcVpXTjBMbXRsZVhNb2IzWmxjbVpzYjNkUFptWnpaWFJ6S1M1bWIzSkZZV05vS0daMWJtTjBhVzl1SUNoclpYa3BJSHRjYmlBZ0lDQWdJSFpoY2lCdGRXeDBhWEJzZVNBOUlGdHlhV2RvZEN3Z1ltOTBkRzl0WFM1cGJtUmxlRTltS0d0bGVTa2dQajBnTUNBL0lERWdPaUF0TVR0Y2JpQWdJQ0FnSUhaaGNpQmhlR2x6SUQwZ1czUnZjQ3dnWW05MGRHOXRYUzVwYm1SbGVFOW1LR3RsZVNrZ1BqMGdNQ0EvSUNkNUp5QTZJQ2Q0Snp0Y2JpQWdJQ0FnSUc5MlpYSm1iRzkzVDJabWMyVjBjMXRyWlhsZElDczlJRzltWm5ObGRGdGhlR2x6WFNBcUlHMTFiSFJwY0d4NU8xeHVJQ0FnSUgwcE8xeHVJQ0I5WEc1Y2JpQWdjbVYwZFhKdUlHOTJaWEptYkc5M1QyWm1jMlYwY3p0Y2JuMGlMQ0psZUhCdmNuUWdaR1ZtWVhWc2RDQm1kVzVqZEdsdmJpQmxlSEJoYm1SVWIwaGhjMmhOWVhBb2RtRnNkV1VzSUd0bGVYTXBJSHRjYmlBZ2NtVjBkWEp1SUd0bGVYTXVjbVZrZFdObEtHWjFibU4wYVc5dUlDaG9ZWE5vVFdGd0xDQnJaWGtwSUh0Y2JpQWdJQ0JvWVhOb1RXRndXMnRsZVYwZ1BTQjJZV3gxWlR0Y2JpQWdJQ0J5WlhSMWNtNGdhR0Z6YUUxaGNEdGNiaUFnZlN3Z2UzMHBPMXh1ZlNJc0ltVjRjRzl5ZENCa1pXWmhkV3gwSUdaMWJtTjBhVzl1SUdadmNtMWhkQ2h6ZEhJcElIdGNiaUFnWm05eUlDaDJZWElnWDJ4bGJpQTlJR0Z5WjNWdFpXNTBjeTVzWlc1bmRHZ3NJR0Z5WjNNZ1BTQnVaWGNnUVhKeVlYa29YMnhsYmlBK0lERWdQeUJmYkdWdUlDMGdNU0E2SURBcExDQmZhMlY1SUQwZ01Uc2dYMnRsZVNBOElGOXNaVzQ3SUY5clpYa3JLeWtnZTF4dUlDQWdJR0Z5WjNOYlgydGxlU0F0SURGZElEMGdZWEpuZFcxbGJuUnpXMTlyWlhsZE8xeHVJQ0I5WEc1Y2JpQWdjbVYwZFhKdUlGdGRMbU52Ym1OaGRDaGhjbWR6S1M1eVpXUjFZMlVvWm5WdVkzUnBiMjRnS0hBc0lHTXBJSHRjYmlBZ0lDQnlaWFIxY200Z2NDNXlaWEJzWVdObEtDOGxjeThzSUdNcE8xeHVJQ0I5TENCemRISXBPMXh1ZlNJc0ltVjRjRzl5ZENCa1pXWmhkV3gwSUdaMWJtTjBhVzl1SUdkbGRFRnNkRUY0YVhNb1lYaHBjeWtnZTF4dUlDQnlaWFIxY200Z1lYaHBjeUE5UFQwZ0ozZ25JRDhnSjNrbklEb2dKM2duTzF4dWZTSXNJbWx0Y0c5eWRDQjdJR0YxZEc4Z2ZTQm1jbTl0SUZ3aUxpNHZaVzUxYlhNdWFuTmNJanRjYm1WNGNHOXlkQ0JrWldaaGRXeDBJR1oxYm1OMGFXOXVJR2RsZEVKaGMyVlFiR0ZqWlcxbGJuUW9jR3hoWTJWdFpXNTBLU0I3WEc0Z0lISmxkSFZ5YmlCd2JHRmpaVzFsYm5RdWMzQnNhWFFvSnkwbktWc3dYVHRjYm4waUxDSmxlSEJ2Y25RZ1pHVm1ZWFZzZENCbWRXNWpkR2x2YmlCblpYUkdjbVZ6YUZOcFpHVlBZbXBsWTNRb0tTQjdYRzRnSUhKbGRIVnliaUI3WEc0Z0lDQWdkRzl3T2lBd0xGeHVJQ0FnSUhKcFoyaDBPaUF3TEZ4dUlDQWdJR0p2ZEhSdmJUb2dNQ3hjYmlBZ0lDQnNaV1owT2lBd1hHNGdJSDA3WEc1OUlpd2laWGh3YjNKMElHUmxabUYxYkhRZ1puVnVZM1JwYjI0Z1oyVjBUV0ZwYmtGNGFYTkdjbTl0VUd4aFkyVnRaVzUwS0hCc1lXTmxiV1Z1ZENrZ2UxeHVJQ0J5WlhSMWNtNGdXeWQwYjNBbkxDQW5ZbTkwZEc5dEoxMHVhVzVrWlhoUFppaHdiR0ZqWlcxbGJuUXBJRDQ5SURBZ1B5QW5lQ2NnT2lBbmVTYzdYRzU5SWl3aWRtRnlJR2hoYzJnZ1BTQjdYRzRnSUd4bFpuUTZJQ2R5YVdkb2RDY3NYRzRnSUhKcFoyaDBPaUFuYkdWbWRDY3NYRzRnSUdKdmRIUnZiVG9nSjNSdmNDY3NYRzRnSUhSdmNEb2dKMkp2ZEhSdmJTZGNibjA3WEc1bGVIQnZjblFnWkdWbVlYVnNkQ0JtZFc1amRHbHZiaUJuWlhSUGNIQnZjMmwwWlZCc1lXTmxiV1Z1ZENod2JHRmpaVzFsYm5RcElIdGNiaUFnY21WMGRYSnVJSEJzWVdObGJXVnVkQzV5WlhCc1lXTmxLQzlzWldaMGZISnBaMmgwZkdKdmRIUnZiWHgwYjNBdlp5d2dablZ1WTNScGIyNGdLRzFoZEdOb1pXUXBJSHRjYmlBZ0lDQnlaWFIxY200Z2FHRnphRnR0WVhSamFHVmtYVHRjYmlBZ2ZTazdYRzU5SWl3aWRtRnlJR2hoYzJnZ1BTQjdYRzRnSUhOMFlYSjBPaUFuWlc1a0p5eGNiaUFnWlc1a09pQW5jM1JoY25RblhHNTlPMXh1Wlhod2IzSjBJR1JsWm1GMWJIUWdablZ1WTNScGIyNGdaMlYwVDNCd2IzTnBkR1ZXWVhKcFlYUnBiMjVRYkdGalpXMWxiblFvY0d4aFkyVnRaVzUwS1NCN1hHNGdJSEpsZEhWeWJpQndiR0ZqWlcxbGJuUXVjbVZ3YkdGalpTZ3ZjM1JoY25SOFpXNWtMMmNzSUdaMWJtTjBhVzl1SUNodFlYUmphR1ZrS1NCN1hHNGdJQ0FnY21WMGRYSnVJR2hoYzJoYmJXRjBZMmhsWkYwN1hHNGdJSDBwTzF4dWZTSXNJbVY0Y0c5eWRDQmtaV1poZFd4MElHWjFibU4wYVc5dUlHZGxkRlpoY21saGRHbHZiaWh3YkdGalpXMWxiblFwSUh0Y2JpQWdjbVYwZFhKdUlIQnNZV05sYldWdWRDNXpjR3hwZENnbkxTY3BXekZkTzF4dWZTSXNJbVY0Y0c5eWRDQjJZWElnYldGNElEMGdUV0YwYUM1dFlYZzdYRzVsZUhCdmNuUWdkbUZ5SUcxcGJpQTlJRTFoZEdndWJXbHVPMXh1Wlhod2IzSjBJSFpoY2lCeWIzVnVaQ0E5SUUxaGRHZ3VjbTkxYm1RN0lpd2laWGh3YjNKMElHUmxabUYxYkhRZ1puVnVZM1JwYjI0Z2JXVnlaMlZDZVU1aGJXVW9iVzlrYVdacFpYSnpLU0I3WEc0Z0lIWmhjaUJ0WlhKblpXUWdQU0J0YjJScFptbGxjbk11Y21Wa2RXTmxLR1oxYm1OMGFXOXVJQ2h0WlhKblpXUXNJR04xY25KbGJuUXBJSHRjYmlBZ0lDQjJZWElnWlhocGMzUnBibWNnUFNCdFpYSm5aV1JiWTNWeWNtVnVkQzV1WVcxbFhUdGNiaUFnSUNCdFpYSm5aV1JiWTNWeWNtVnVkQzV1WVcxbFhTQTlJR1Y0YVhOMGFXNW5JRDhnVDJKcVpXTjBMbUZ6YzJsbmJpaDdmU3dnWlhocGMzUnBibWNzSUdOMWNuSmxiblFzSUh0Y2JpQWdJQ0FnSUc5d2RHbHZibk02SUU5aWFtVmpkQzVoYzNOcFoyNG9lMzBzSUdWNGFYTjBhVzVuTG05d2RHbHZibk1zSUdOMWNuSmxiblF1YjNCMGFXOXVjeWtzWEc0Z0lDQWdJQ0JrWVhSaE9pQlBZbXBsWTNRdVlYTnphV2R1S0h0OUxDQmxlR2x6ZEdsdVp5NWtZWFJoTENCamRYSnlaVzUwTG1SaGRHRXBYRzRnSUNBZ2ZTa2dPaUJqZFhKeVpXNTBPMXh1SUNBZ0lISmxkSFZ5YmlCdFpYSm5aV1E3WEc0Z0lIMHNJSHQ5S1RzZ0x5OGdTVVV4TVNCa2IyVnpJRzV2ZENCemRYQndiM0owSUU5aWFtVmpkQzUyWVd4MVpYTmNibHh1SUNCeVpYUjFjbTRnVDJKcVpXTjBMbXRsZVhNb2JXVnlaMlZrS1M1dFlYQW9ablZ1WTNScGIyNGdLR3RsZVNrZ2UxeHVJQ0FnSUhKbGRIVnliaUJ0WlhKblpXUmJhMlY1WFR0Y2JpQWdmU2s3WEc1OUlpd2lhVzF3YjNKMElHZGxkRVp5WlhOb1UybGtaVTlpYW1WamRDQm1jbTl0SUZ3aUxpOW5aWFJHY21WemFGTnBaR1ZQWW1wbFkzUXVhbk5jSWp0Y2JtVjRjRzl5ZENCa1pXWmhkV3gwSUdaMWJtTjBhVzl1SUcxbGNtZGxVR0ZrWkdsdVowOWlhbVZqZENod1lXUmthVzVuVDJKcVpXTjBLU0I3WEc0Z0lISmxkSFZ5YmlCUFltcGxZM1F1WVhOemFXZHVLSHQ5TENCblpYUkdjbVZ6YUZOcFpHVlBZbXBsWTNRb0tTd2djR0ZrWkdsdVowOWlhbVZqZENrN1hHNTlJaXdpYVcxd2IzSjBJSHNnYlc5a2FXWnBaWEpRYUdGelpYTWdmU0JtY205dElGd2lMaTR2Wlc1MWJYTXVhbk5jSWpzZ0x5OGdjMjkxY21ObE9pQm9kSFJ3Y3pvdkwzTjBZV05yYjNabGNtWnNiM2N1WTI5dEwzRjFaWE4wYVc5dWN5ODBPVGczTlRJMU5WeHVYRzVtZFc1amRHbHZiaUJ2Y21SbGNpaHRiMlJwWm1sbGNuTXBJSHRjYmlBZ2RtRnlJRzFoY0NBOUlHNWxkeUJOWVhBb0tUdGNiaUFnZG1GeUlIWnBjMmwwWldRZ1BTQnVaWGNnVTJWMEtDazdYRzRnSUhaaGNpQnlaWE4xYkhRZ1BTQmJYVHRjYmlBZ2JXOWthV1pwWlhKekxtWnZja1ZoWTJnb1puVnVZM1JwYjI0Z0tHMXZaR2xtYVdWeUtTQjdYRzRnSUNBZ2JXRndMbk5sZENodGIyUnBabWxsY2k1dVlXMWxMQ0J0YjJScFptbGxjaWs3WEc0Z0lIMHBPeUF2THlCUGJpQjJhWE5wZEdsdVp5QnZZbXBsWTNRc0lHTm9aV05ySUdadmNpQnBkSE1nWkdWd1pXNWtaVzVqYVdWeklHRnVaQ0IyYVhOcGRDQjBhR1Z0SUhKbFkzVnljMmwyWld4NVhHNWNiaUFnWm5WdVkzUnBiMjRnYzI5eWRDaHRiMlJwWm1sbGNpa2dlMXh1SUNBZ0lIWnBjMmwwWldRdVlXUmtLRzF2WkdsbWFXVnlMbTVoYldVcE8xeHVJQ0FnSUhaaGNpQnlaWEYxYVhKbGN5QTlJRnRkTG1OdmJtTmhkQ2h0YjJScFptbGxjaTV5WlhGMWFYSmxjeUI4ZkNCYlhTd2diVzlrYVdacFpYSXVjbVZ4ZFdseVpYTkpaa1Y0YVhOMGN5QjhmQ0JiWFNrN1hHNGdJQ0FnY21WeGRXbHlaWE11Wm05eVJXRmphQ2htZFc1amRHbHZiaUFvWkdWd0tTQjdYRzRnSUNBZ0lDQnBaaUFvSVhacGMybDBaV1F1YUdGektHUmxjQ2twSUh0Y2JpQWdJQ0FnSUNBZ2RtRnlJR1JsY0UxdlpHbG1hV1Z5SUQwZ2JXRndMbWRsZENoa1pYQXBPMXh1WEc0Z0lDQWdJQ0FnSUdsbUlDaGtaWEJOYjJScFptbGxjaWtnZTF4dUlDQWdJQ0FnSUNBZ0lITnZjblFvWkdWd1RXOWthV1pwWlhJcE8xeHVJQ0FnSUNBZ0lDQjlYRzRnSUNBZ0lDQjlYRzRnSUNBZ2ZTazdYRzRnSUNBZ2NtVnpkV3gwTG5CMWMyZ29iVzlrYVdacFpYSXBPMXh1SUNCOVhHNWNiaUFnYlc5a2FXWnBaWEp6TG1admNrVmhZMmdvWm5WdVkzUnBiMjRnS0cxdlpHbG1hV1Z5S1NCN1hHNGdJQ0FnYVdZZ0tDRjJhWE5wZEdWa0xtaGhjeWh0YjJScFptbGxjaTV1WVcxbEtTa2dlMXh1SUNBZ0lDQWdMeThnWTJobFkyc2dabTl5SUhacGMybDBaV1FnYjJKcVpXTjBYRzRnSUNBZ0lDQnpiM0owS0cxdlpHbG1hV1Z5S1R0Y2JpQWdJQ0I5WEc0Z0lIMHBPMXh1SUNCeVpYUjFjbTRnY21WemRXeDBPMXh1ZlZ4dVhHNWxlSEJ2Y25RZ1pHVm1ZWFZzZENCbWRXNWpkR2x2YmlCdmNtUmxjazF2WkdsbWFXVnljeWh0YjJScFptbGxjbk1wSUh0Y2JpQWdMeThnYjNKa1pYSWdZbUZ6WldRZ2IyNGdaR1Z3Wlc1a1pXNWphV1Z6WEc0Z0lIWmhjaUJ2Y21SbGNtVmtUVzlrYVdacFpYSnpJRDBnYjNKa1pYSW9iVzlrYVdacFpYSnpLVHNnTHk4Z2IzSmtaWElnWW1GelpXUWdiMjRnY0doaGMyVmNibHh1SUNCeVpYUjFjbTRnYlc5a2FXWnBaWEpRYUdGelpYTXVjbVZrZFdObEtHWjFibU4wYVc5dUlDaGhZMk1zSUhCb1lYTmxLU0I3WEc0Z0lDQWdjbVYwZFhKdUlHRmpZeTVqYjI1allYUW9iM0prWlhKbFpFMXZaR2xtYVdWeWN5NW1hV3gwWlhJb1puVnVZM1JwYjI0Z0tHMXZaR2xtYVdWeUtTQjdYRzRnSUNBZ0lDQnlaWFIxY200Z2JXOWthV1pwWlhJdWNHaGhjMlVnUFQwOUlIQm9ZWE5sTzF4dUlDQWdJSDBwS1R0Y2JpQWdmU3dnVzEwcE8xeHVmU0lzSW1WNGNHOXlkQ0JrWldaaGRXeDBJR1oxYm1OMGFXOXVJSEpsWTNSVWIwTnNhV1Z1ZEZKbFkzUW9jbVZqZENrZ2UxeHVJQ0J5WlhSMWNtNGdUMkpxWldOMExtRnpjMmxuYmloN2ZTd2djbVZqZEN3Z2UxeHVJQ0FnSUd4bFpuUTZJSEpsWTNRdWVDeGNiaUFnSUNCMGIzQTZJSEpsWTNRdWVTeGNiaUFnSUNCeWFXZG9kRG9nY21WamRDNTRJQ3NnY21WamRDNTNhV1IwYUN4Y2JpQWdJQ0JpYjNSMGIyMDZJSEpsWTNRdWVTQXJJSEpsWTNRdWFHVnBaMmgwWEc0Z0lIMHBPMXh1ZlNJc0ltVjRjRzl5ZENCa1pXWmhkV3gwSUdaMWJtTjBhVzl1SUhWdWFYRjFaVUo1S0dGeWNpd2dabTRwSUh0Y2JpQWdkbUZ5SUdsa1pXNTBhV1pwWlhKeklEMGdibVYzSUZObGRDZ3BPMXh1SUNCeVpYUjFjbTRnWVhKeUxtWnBiSFJsY2lobWRXNWpkR2x2YmlBb2FYUmxiU2tnZTF4dUlDQWdJSFpoY2lCcFpHVnVkR2xtYVdWeUlEMGdabTRvYVhSbGJTazdYRzVjYmlBZ0lDQnBaaUFvSVdsa1pXNTBhV1pwWlhKekxtaGhjeWhwWkdWdWRHbG1hV1Z5S1NrZ2UxeHVJQ0FnSUNBZ2FXUmxiblJwWm1sbGNuTXVZV1JrS0dsa1pXNTBhV1pwWlhJcE8xeHVJQ0FnSUNBZ2NtVjBkWEp1SUhSeWRXVTdYRzRnSUNBZ2ZWeHVJQ0I5S1R0Y2JuMGlMQ0psZUhCdmNuUWdaR1ZtWVhWc2RDQm1kVzVqZEdsdmJpQm5aWFJWUVZOMGNtbHVaeWdwSUh0Y2JpQWdkbUZ5SUhWaFJHRjBZU0E5SUc1aGRtbG5ZWFJ2Y2k1MWMyVnlRV2RsYm5SRVlYUmhPMXh1WEc0Z0lHbG1JQ2gxWVVSaGRHRWdJVDBnYm5Wc2JDQW1KaUIxWVVSaGRHRXVZbkpoYm1SektTQjdYRzRnSUNBZ2NtVjBkWEp1SUhWaFJHRjBZUzVpY21GdVpITXViV0Z3S0daMWJtTjBhVzl1SUNocGRHVnRLU0I3WEc0Z0lDQWdJQ0J5WlhSMWNtNGdhWFJsYlM1aWNtRnVaQ0FySUZ3aUwxd2lJQ3NnYVhSbGJTNTJaWEp6YVc5dU8xeHVJQ0FnSUgwcExtcHZhVzRvSnlBbktUdGNiaUFnZlZ4dVhHNGdJSEpsZEhWeWJpQnVZWFpwWjJGMGIzSXVkWE5sY2tGblpXNTBPMXh1ZlNJc0ltbHRjRzl5ZENCbWIzSnRZWFFnWm5KdmJTQmNJaTR2Wm05eWJXRjBMbXB6WENJN1hHNXBiWEJ2Y25RZ2V5QnRiMlJwWm1sbGNsQm9ZWE5sY3lCOUlHWnliMjBnWENJdUxpOWxiblZ0Y3k1cWMxd2lPMXh1ZG1GeUlFbE9Wa0ZNU1VSZlRVOUVTVVpKUlZKZlJWSlNUMUlnUFNBblVHOXdjR1Z5T2lCdGIyUnBabWxsY2lCY0lpVnpYQ0lnY0hKdmRtbGtaV1FnWVc0Z2FXNTJZV3hwWkNBbGN5QndjbTl3WlhKMGVTd2daWGh3WldOMFpXUWdKWE1nWW5WMElHZHZkQ0FsY3ljN1hHNTJZWElnVFVsVFUwbE9SMTlFUlZCRlRrUkZUa05aWDBWU1VrOVNJRDBnSjFCdmNIQmxjam9nYlc5a2FXWnBaWElnWENJbGMxd2lJSEpsY1hWcGNtVnpJRndpSlhOY0lpd2dZblYwSUZ3aUpYTmNJaUJ0YjJScFptbGxjaUJwY3lCdWIzUWdZWFpoYVd4aFlteGxKenRjYm5aaGNpQldRVXhKUkY5UVVrOVFSVkpVU1VWVElEMGdXeWR1WVcxbEp5d2dKMlZ1WVdKc1pXUW5MQ0FuY0doaGMyVW5MQ0FuWm00bkxDQW5aV1ptWldOMEp5d2dKM0psY1hWcGNtVnpKeXdnSjI5d2RHbHZibk1uWFR0Y2JtVjRjRzl5ZENCa1pXWmhkV3gwSUdaMWJtTjBhVzl1SUhaaGJHbGtZWFJsVFc5a2FXWnBaWEp6S0cxdlpHbG1hV1Z5Y3lrZ2UxeHVJQ0J0YjJScFptbGxjbk11Wm05eVJXRmphQ2htZFc1amRHbHZiaUFvYlc5a2FXWnBaWElwSUh0Y2JpQWdJQ0JiWFM1amIyNWpZWFFvVDJKcVpXTjBMbXRsZVhNb2JXOWthV1pwWlhJcExDQldRVXhKUkY5UVVrOVFSVkpVU1VWVEtTQXZMeUJKUlRFeExXTnZiWEJoZEdsaWJHVWdjbVZ3YkdGalpXMWxiblFnWm05eUlHQnVaWGNnVTJWMEtHbDBaWEpoWW14bEtXQmNiaUFnSUNBdVptbHNkR1Z5S0daMWJtTjBhVzl1SUNoMllXeDFaU3dnYVc1a1pYZ3NJSE5sYkdZcElIdGNiaUFnSUNBZ0lISmxkSFZ5YmlCelpXeG1MbWx1WkdWNFQyWW9kbUZzZFdVcElEMDlQU0JwYm1SbGVEdGNiaUFnSUNCOUtTNW1iM0pGWVdOb0tHWjFibU4wYVc5dUlDaHJaWGtwSUh0Y2JpQWdJQ0FnSUhOM2FYUmphQ0FvYTJWNUtTQjdYRzRnSUNBZ0lDQWdJR05oYzJVZ0oyNWhiV1VuT2x4dUlDQWdJQ0FnSUNBZ0lHbG1JQ2gwZVhCbGIyWWdiVzlrYVdacFpYSXVibUZ0WlNBaFBUMGdKM04wY21sdVp5Y3BJSHRjYmlBZ0lDQWdJQ0FnSUNBZ0lHTnZibk52YkdVdVpYSnliM0lvWm05eWJXRjBLRWxPVmtGTVNVUmZUVTlFU1VaSlJWSmZSVkpTVDFJc0lGTjBjbWx1WnlodGIyUnBabWxsY2k1dVlXMWxLU3dnSjF3aWJtRnRaVndpSnl3Z0oxd2ljM1J5YVc1blhDSW5MQ0JjSWx4Y1hDSmNJaUFySUZOMGNtbHVaeWh0YjJScFptbGxjaTV1WVcxbEtTQXJJRndpWEZ4Y0lsd2lLU2s3WEc0Z0lDQWdJQ0FnSUNBZ2ZWeHVYRzRnSUNBZ0lDQWdJQ0FnWW5KbFlXczdYRzVjYmlBZ0lDQWdJQ0FnWTJGelpTQW5aVzVoWW14bFpDYzZYRzRnSUNBZ0lDQWdJQ0FnYVdZZ0tIUjVjR1Z2WmlCdGIyUnBabWxsY2k1bGJtRmliR1ZrSUNFOVBTQW5ZbTl2YkdWaGJpY3BJSHRjYmlBZ0lDQWdJQ0FnSUNBZ0lHTnZibk52YkdVdVpYSnliM0lvWm05eWJXRjBLRWxPVmtGTVNVUmZUVTlFU1VaSlJWSmZSVkpTVDFJc0lHMXZaR2xtYVdWeUxtNWhiV1VzSUNkY0ltVnVZV0pzWldSY0lpY3NJQ2RjSW1KdmIyeGxZVzVjSWljc0lGd2lYRnhjSWx3aUlDc2dVM1J5YVc1bktHMXZaR2xtYVdWeUxtVnVZV0pzWldRcElDc2dYQ0pjWEZ3aVhDSXBLVHRjYmlBZ0lDQWdJQ0FnSUNCOVhHNWNiaUFnSUNBZ0lDQWdJQ0JpY21WaGF6dGNibHh1SUNBZ0lDQWdJQ0JqWVhObElDZHdhR0Z6WlNjNlhHNGdJQ0FnSUNBZ0lDQWdhV1lnS0cxdlpHbG1hV1Z5VUdoaGMyVnpMbWx1WkdWNFQyWW9iVzlrYVdacFpYSXVjR2hoYzJVcElEd2dNQ2tnZTF4dUlDQWdJQ0FnSUNBZ0lDQWdZMjl1YzI5c1pTNWxjbkp2Y2lobWIzSnRZWFFvU1U1V1FVeEpSRjlOVDBSSlJrbEZVbDlGVWxKUFVpd2diVzlrYVdacFpYSXVibUZ0WlN3Z0oxd2ljR2hoYzJWY0lpY3NJRndpWldsMGFHVnlJRndpSUNzZ2JXOWthV1pwWlhKUWFHRnpaWE11YW05cGJpZ25MQ0FuS1N3Z1hDSmNYRndpWENJZ0t5QlRkSEpwYm1jb2JXOWthV1pwWlhJdWNHaGhjMlVwSUNzZ1hDSmNYRndpWENJcEtUdGNiaUFnSUNBZ0lDQWdJQ0I5WEc1Y2JpQWdJQ0FnSUNBZ0lDQmljbVZoYXp0Y2JseHVJQ0FnSUNBZ0lDQmpZWE5sSUNkbWJpYzZYRzRnSUNBZ0lDQWdJQ0FnYVdZZ0tIUjVjR1Z2WmlCdGIyUnBabWxsY2k1bWJpQWhQVDBnSjJaMWJtTjBhVzl1SnlrZ2UxeHVJQ0FnSUNBZ0lDQWdJQ0FnWTI5dWMyOXNaUzVsY25KdmNpaG1iM0p0WVhRb1NVNVdRVXhKUkY5TlQwUkpSa2xGVWw5RlVsSlBVaXdnYlc5a2FXWnBaWEl1Ym1GdFpTd2dKMXdpWm01Y0lpY3NJQ2RjSW1aMWJtTjBhVzl1WENJbkxDQmNJbHhjWENKY0lpQXJJRk4wY21sdVp5aHRiMlJwWm1sbGNpNW1iaWtnS3lCY0lseGNYQ0pjSWlrcE8xeHVJQ0FnSUNBZ0lDQWdJSDFjYmx4dUlDQWdJQ0FnSUNBZ0lHSnlaV0ZyTzF4dVhHNGdJQ0FnSUNBZ0lHTmhjMlVnSjJWbVptVmpkQ2M2WEc0Z0lDQWdJQ0FnSUNBZ2FXWWdLRzF2WkdsbWFXVnlMbVZtWm1WamRDQWhQU0J1ZFd4c0lDWW1JSFI1Y0dWdlppQnRiMlJwWm1sbGNpNWxabVpsWTNRZ0lUMDlJQ2RtZFc1amRHbHZiaWNwSUh0Y2JpQWdJQ0FnSUNBZ0lDQWdJR052Ym5OdmJHVXVaWEp5YjNJb1ptOXliV0YwS0VsT1ZrRk1TVVJmVFU5RVNVWkpSVkpmUlZKU1QxSXNJRzF2WkdsbWFXVnlMbTVoYldVc0lDZGNJbVZtWm1WamRGd2lKeXdnSjF3aVpuVnVZM1JwYjI1Y0lpY3NJRndpWEZ4Y0lsd2lJQ3NnVTNSeWFXNW5LRzF2WkdsbWFXVnlMbVp1S1NBcklGd2lYRnhjSWx3aUtTazdYRzRnSUNBZ0lDQWdJQ0FnZlZ4dVhHNGdJQ0FnSUNBZ0lDQWdZbkpsWVdzN1hHNWNiaUFnSUNBZ0lDQWdZMkZ6WlNBbmNtVnhkV2x5WlhNbk9seHVJQ0FnSUNBZ0lDQWdJR2xtSUNodGIyUnBabWxsY2k1eVpYRjFhWEpsY3lBaFBTQnVkV3hzSUNZbUlDRkJjbkpoZVM1cGMwRnljbUY1S0cxdlpHbG1hV1Z5TG5KbGNYVnBjbVZ6S1NrZ2UxeHVJQ0FnSUNBZ0lDQWdJQ0FnWTI5dWMyOXNaUzVsY25KdmNpaG1iM0p0WVhRb1NVNVdRVXhKUkY5TlQwUkpSa2xGVWw5RlVsSlBVaXdnYlc5a2FXWnBaWEl1Ym1GdFpTd2dKMXdpY21WeGRXbHlaWE5jSWljc0lDZGNJbUZ5Y21GNVhDSW5MQ0JjSWx4Y1hDSmNJaUFySUZOMGNtbHVaeWh0YjJScFptbGxjaTV5WlhGMWFYSmxjeWtnS3lCY0lseGNYQ0pjSWlrcE8xeHVJQ0FnSUNBZ0lDQWdJSDFjYmx4dUlDQWdJQ0FnSUNBZ0lHSnlaV0ZyTzF4dVhHNGdJQ0FnSUNBZ0lHTmhjMlVnSjNKbGNYVnBjbVZ6U1daRmVHbHpkSE1uT2x4dUlDQWdJQ0FnSUNBZ0lHbG1JQ2doUVhKeVlYa3VhWE5CY25KaGVTaHRiMlJwWm1sbGNpNXlaWEYxYVhKbGMwbG1SWGhwYzNSektTa2dlMXh1SUNBZ0lDQWdJQ0FnSUNBZ1kyOXVjMjlzWlM1bGNuSnZjaWhtYjNKdFlYUW9TVTVXUVV4SlJGOU5UMFJKUmtsRlVsOUZVbEpQVWl3Z2JXOWthV1pwWlhJdWJtRnRaU3dnSjF3aWNtVnhkV2x5WlhOSlprVjRhWE4wYzF3aUp5d2dKMXdpWVhKeVlYbGNJaWNzSUZ3aVhGeGNJbHdpSUNzZ1UzUnlhVzVuS0cxdlpHbG1hV1Z5TG5KbGNYVnBjbVZ6U1daRmVHbHpkSE1wSUNzZ1hDSmNYRndpWENJcEtUdGNiaUFnSUNBZ0lDQWdJQ0I5WEc1Y2JpQWdJQ0FnSUNBZ0lDQmljbVZoYXp0Y2JseHVJQ0FnSUNBZ0lDQmpZWE5sSUNkdmNIUnBiMjV6SnpwY2JpQWdJQ0FnSUNBZ1kyRnpaU0FuWkdGMFlTYzZYRzRnSUNBZ0lDQWdJQ0FnWW5KbFlXczdYRzVjYmlBZ0lDQWdJQ0FnWkdWbVlYVnNkRHBjYmlBZ0lDQWdJQ0FnSUNCamIyNXpiMnhsTG1WeWNtOXlLRndpVUc5d2NHVnlTbE02SUdGdUlHbHVkbUZzYVdRZ2NISnZjR1Z5ZEhrZ2FHRnpJR0psWlc0Z2NISnZkbWxrWldRZ2RHOGdkR2hsSUZ4Y1hDSmNJaUFySUcxdlpHbG1hV1Z5TG01aGJXVWdLeUJjSWx4Y1hDSWdiVzlrYVdacFpYSXNJSFpoYkdsa0lIQnliM0JsY25ScFpYTWdZWEpsSUZ3aUlDc2dWa0ZNU1VSZlVGSlBVRVZTVkVsRlV5NXRZWEFvWm5WdVkzUnBiMjRnS0hNcElIdGNiaUFnSUNBZ0lDQWdJQ0FnSUhKbGRIVnliaUJjSWx4Y1hDSmNJaUFySUhNZ0t5QmNJbHhjWENKY0lqdGNiaUFnSUNBZ0lDQWdJQ0I5S1M1cWIybHVLQ2NzSUNjcElDc2dYQ0k3SUdKMWRDQmNYRndpWENJZ0t5QnJaWGtnS3lCY0lseGNYQ0lnZDJGeklIQnliM1pwWkdWa0xsd2lLVHRjYmlBZ0lDQWdJSDFjYmx4dUlDQWdJQ0FnYlc5a2FXWnBaWEl1Y21WeGRXbHlaWE1nSmlZZ2JXOWthV1pwWlhJdWNtVnhkV2x5WlhNdVptOXlSV0ZqYUNobWRXNWpkR2x2YmlBb2NtVnhkV2x5WlcxbGJuUXBJSHRjYmlBZ0lDQWdJQ0FnYVdZZ0tHMXZaR2xtYVdWeWN5NW1hVzVrS0daMWJtTjBhVzl1SUNodGIyUXBJSHRjYmlBZ0lDQWdJQ0FnSUNCeVpYUjFjbTRnYlc5a0xtNWhiV1VnUFQwOUlISmxjWFZwY21WdFpXNTBPMXh1SUNBZ0lDQWdJQ0I5S1NBOVBTQnVkV3hzS1NCN1hHNGdJQ0FnSUNBZ0lDQWdZMjl1YzI5c1pTNWxjbkp2Y2lobWIzSnRZWFFvVFVsVFUwbE9SMTlFUlZCRlRrUkZUa05aWDBWU1VrOVNMQ0JUZEhKcGJtY29iVzlrYVdacFpYSXVibUZ0WlNrc0lISmxjWFZwY21WdFpXNTBMQ0J5WlhGMWFYSmxiV1Z1ZENrcE8xeHVJQ0FnSUNBZ0lDQjlYRzRnSUNBZ0lDQjlLVHRjYmlBZ0lDQjlLVHRjYmlBZ2ZTazdYRzU5SWl3aWFXMXdiM0owSUhzZ2JXRjRJR0Z6SUcxaGRHaE5ZWGdzSUcxcGJpQmhjeUJ0WVhSb1RXbHVJSDBnWm5KdmJTQmNJaTR2YldGMGFDNXFjMXdpTzF4dVpYaHdiM0owSUdaMWJtTjBhVzl1SUhkcGRHaHBiaWh0YVc0c0lIWmhiSFZsTENCdFlYZ3BJSHRjYmlBZ2NtVjBkWEp1SUcxaGRHaE5ZWGdvYldsdUxDQnRZWFJvVFdsdUtIWmhiSFZsTENCdFlYZ3BLVHRjYm4xY2JtVjRjRzl5ZENCbWRXNWpkR2x2YmlCM2FYUm9hVzVOWVhoRGJHRnRjQ2h0YVc0c0lIWmhiSFZsTENCdFlYZ3BJSHRjYmlBZ2RtRnlJSFlnUFNCM2FYUm9hVzRvYldsdUxDQjJZV3gxWlN3Z2JXRjRLVHRjYmlBZ2NtVjBkWEp1SUhZZ1BpQnRZWGdnUHlCdFlYZ2dPaUIyTzF4dWZTSXNJaThxSVZ4dUlDQXFJRUp2YjNSemRISmhjQ0JpWVhObExXTnZiWEJ2Ym1WdWRDNXFjeUIyTlM0eUxqTWdLR2gwZEhCek9pOHZaMlYwWW05dmRITjBjbUZ3TG1OdmJTOHBYRzRnSUNvZ1EyOXdlWEpwWjJoMElESXdNVEV0TWpBeU1pQlVhR1VnUW05dmRITjBjbUZ3SUVGMWRHaHZjbk1nS0doMGRIQnpPaTh2WjJsMGFIVmlMbU52YlM5MGQySnpMMkp2YjNSemRISmhjQzluY21Gd2FITXZZMjl1ZEhKcFluVjBiM0p6S1Z4dUlDQXFJRXhwWTJWdWMyVmtJSFZ1WkdWeUlFMUpWQ0FvYUhSMGNITTZMeTluYVhSb2RXSXVZMjl0TDNSM1luTXZZbTl2ZEhOMGNtRndMMkpzYjJJdmJXRnBiaTlNU1VORlRsTkZLVnh1SUNBcUwxeHVLR1oxYm1OMGFXOXVJQ2huYkc5aVlXd3NJR1poWTNSdmNua3BJSHRjYmlBZ2RIbHdaVzltSUdWNGNHOXlkSE1nUFQwOUlDZHZZbXBsWTNRbklDWW1JSFI1Y0dWdlppQnRiMlIxYkdVZ0lUMDlJQ2QxYm1SbFptbHVaV1FuSUQ4Z2JXOWtkV3hsTG1WNGNHOXlkSE1nUFNCbVlXTjBiM0o1S0hKbGNYVnBjbVVvSnk0dlpHOXRMMlJoZEdFbktTd2djbVZ4ZFdseVpTZ25MaTkxZEdsc0wybHVaR1Y0Snlrc0lISmxjWFZwY21Vb0p5NHZaRzl0TDJWMlpXNTBMV2hoYm1Sc1pYSW5LU3dnY21WeGRXbHlaU2duTGk5MWRHbHNMMk52Ym1acFp5Y3BLU0E2WEc0Z0lIUjVjR1Z2WmlCa1pXWnBibVVnUFQwOUlDZG1kVzVqZEdsdmJpY2dKaVlnWkdWbWFXNWxMbUZ0WkNBL0lHUmxabWx1WlNoYkp5NHZaRzl0TDJSaGRHRW5MQ0FuTGk5MWRHbHNMMmx1WkdWNEp5d2dKeTR2Wkc5dEwyVjJaVzUwTFdoaGJtUnNaWEluTENBbkxpOTFkR2xzTDJOdmJtWnBaeWRkTENCbVlXTjBiM0o1S1NBNlhHNGdJQ2huYkc5aVlXd2dQU0IwZVhCbGIyWWdaMnh2WW1Gc1ZHaHBjeUFoUFQwZ0ozVnVaR1ZtYVc1bFpDY2dQeUJuYkc5aVlXeFVhR2x6SURvZ1oyeHZZbUZzSUh4OElITmxiR1lzSUdkc2IySmhiQzVDWVhObFEyOXRjRzl1Wlc1MElEMGdabUZqZEc5eWVTaG5iRzlpWVd3dVJHRjBZU3dnWjJ4dlltRnNMa2x1WkdWNExDQm5iRzlpWVd3dVJYWmxiblJJWVc1a2JHVnlMQ0JuYkc5aVlXd3VRMjl1Wm1sbktTazdYRzU5S1NoMGFHbHpMQ0FvWm5WdVkzUnBiMjRnS0VSaGRHRXNJR2x1WkdWNExDQkZkbVZ1ZEVoaGJtUnNaWElzSUVOdmJtWnBaeWtnZXlBbmRYTmxJSE4wY21samRDYzdYRzVjYmlBZ1kyOXVjM1FnWDJsdWRHVnliM0JFWldaaGRXeDBUR1ZuWVdONUlEMGdaU0E5UGlCbElDWW1JSFI1Y0dWdlppQmxJRDA5UFNBbmIySnFaV04wSnlBbUppQW5aR1ZtWVhWc2RDY2dhVzRnWlNBL0lHVWdPaUI3SUdSbFptRjFiSFE2SUdVZ2ZUdGNibHh1SUNCamIyNXpkQ0JFWVhSaFgxOWtaV1poZFd4MElEMGdMeW9qWDE5UVZWSkZYMThxTDE5cGJuUmxjbTl3UkdWbVlYVnNkRXhsWjJGamVTaEVZWFJoS1R0Y2JpQWdZMjl1YzNRZ1JYWmxiblJJWVc1a2JHVnlYMTlrWldaaGRXeDBJRDBnTHlvalgxOVFWVkpGWDE4cUwxOXBiblJsY205d1JHVm1ZWFZzZEV4bFoyRmplU2hGZG1WdWRFaGhibVJzWlhJcE8xeHVJQ0JqYjI1emRDQkRiMjVtYVdkZlgyUmxabUYxYkhRZ1BTQXZLaU5mWDFCVlVrVmZYeW92WDJsdWRHVnliM0JFWldaaGRXeDBUR1ZuWVdONUtFTnZibVpwWnlrN1hHNWNiaUFnTHlvcVhHNGdJQ0FxSUMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdFhHNGdJQ0FxSUVKdmIzUnpkSEpoY0NBb2RqVXVNaTR6S1RvZ1ltRnpaUzFqYjIxd2IyNWxiblF1YW5OY2JpQWdJQ29nVEdsalpXNXpaV1FnZFc1a1pYSWdUVWxVSUNob2RIUndjem92TDJkcGRHaDFZaTVqYjIwdmRIZGljeTlpYjI5MGMzUnlZWEF2WW14dllpOXRZV2x1TDB4SlEwVk9VMFVwWEc0Z0lDQXFJQzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0WEc0Z0lDQXFMMXh1SUNBdktpcGNiaUFnSUNvZ1EyOXVjM1JoYm5SelhHNGdJQ0FxTDF4dVhHNGdJR052Ym5OMElGWkZVbE5KVDA0Z1BTQW5OUzR5TGpNbk8xeHVJQ0F2S2lwY2JpQWdJQ29nUTJ4aGMzTWdaR1ZtYVc1cGRHbHZibHh1SUNBZ0tpOWNibHh1SUNCamJHRnpjeUJDWVhObFEyOXRjRzl1Wlc1MElHVjRkR1Z1WkhNZ1EyOXVabWxuWDE5a1pXWmhkV3gwTG1SbFptRjFiSFFnZTF4dUlDQWdJR052Ym5OMGNuVmpkRzl5S0dWc1pXMWxiblFzSUdOdmJtWnBaeWtnZTF4dUlDQWdJQ0FnYzNWd1pYSW9LVHRjYmlBZ0lDQWdJR1ZzWlcxbGJuUWdQU0JwYm1SbGVDNW5aWFJGYkdWdFpXNTBLR1ZzWlcxbGJuUXBPMXh1WEc0Z0lDQWdJQ0JwWmlBb0lXVnNaVzFsYm5RcElIdGNiaUFnSUNBZ0lDQWdjbVYwZFhKdU8xeHVJQ0FnSUNBZ2ZWeHVYRzRnSUNBZ0lDQjBhR2x6TGw5bGJHVnRaVzUwSUQwZ1pXeGxiV1Z1ZER0Y2JpQWdJQ0FnSUhSb2FYTXVYMk52Ym1acFp5QTlJSFJvYVhNdVgyZGxkRU52Ym1acFp5aGpiMjVtYVdjcE8xeHVJQ0FnSUNBZ1JHRjBZVjlmWkdWbVlYVnNkQzVrWldaaGRXeDBMbk5sZENoMGFHbHpMbDlsYkdWdFpXNTBMQ0IwYUdsekxtTnZibk4wY25WamRHOXlMa1JCVkVGZlMwVlpMQ0IwYUdsektUdGNiaUFnSUNCOUlDOHZJRkIxWW14cFkxeHVYRzVjYmlBZ0lDQmthWE53YjNObEtDa2dlMXh1SUNBZ0lDQWdSR0YwWVY5ZlpHVm1ZWFZzZEM1a1pXWmhkV3gwTG5KbGJXOTJaU2gwYUdsekxsOWxiR1Z0Wlc1MExDQjBhR2x6TG1OdmJuTjBjblZqZEc5eUxrUkJWRUZmUzBWWktUdGNiaUFnSUNBZ0lFVjJaVzUwU0dGdVpHeGxjbDlmWkdWbVlYVnNkQzVrWldaaGRXeDBMbTltWmloMGFHbHpMbDlsYkdWdFpXNTBMQ0IwYUdsekxtTnZibk4wY25WamRHOXlMa1ZXUlU1VVgwdEZXU2s3WEc1Y2JpQWdJQ0FnSUdadmNpQW9ZMjl1YzNRZ2NISnZjR1Z5ZEhsT1lXMWxJRzltSUU5aWFtVmpkQzVuWlhSUGQyNVFjbTl3WlhKMGVVNWhiV1Z6S0hSb2FYTXBLU0I3WEc0Z0lDQWdJQ0FnSUhSb2FYTmJjSEp2Y0dWeWRIbE9ZVzFsWFNBOUlHNTFiR3c3WEc0Z0lDQWdJQ0I5WEc0Z0lDQWdmVnh1WEc0Z0lDQWdYM0YxWlhWbFEyRnNiR0poWTJzb1kyRnNiR0poWTJzc0lHVnNaVzFsYm5Rc0lHbHpRVzVwYldGMFpXUWdQU0IwY25WbEtTQjdYRzRnSUNBZ0lDQnBibVJsZUM1bGVHVmpkWFJsUVdaMFpYSlVjbUZ1YzJsMGFXOXVLR05oYkd4aVlXTnJMQ0JsYkdWdFpXNTBMQ0JwYzBGdWFXMWhkR1ZrS1R0Y2JpQWdJQ0I5WEc1Y2JpQWdJQ0JmWjJWMFEyOXVabWxuS0dOdmJtWnBaeWtnZTF4dUlDQWdJQ0FnWTI5dVptbG5JRDBnZEdocGN5NWZiV1Z5WjJWRGIyNW1hV2RQWW1vb1kyOXVabWxuTENCMGFHbHpMbDlsYkdWdFpXNTBLVHRjYmlBZ0lDQWdJR052Ym1acFp5QTlJSFJvYVhNdVgyTnZibVpwWjBGbWRHVnlUV1Z5WjJVb1kyOXVabWxuS1R0Y2JseHVJQ0FnSUNBZ2RHaHBjeTVmZEhsd1pVTm9aV05yUTI5dVptbG5LR052Ym1acFp5azdYRzVjYmlBZ0lDQWdJSEpsZEhWeWJpQmpiMjVtYVdjN1hHNGdJQ0FnZlNBdkx5QlRkR0YwYVdOY2JseHVYRzRnSUNBZ2MzUmhkR2xqSUdkbGRFbHVjM1JoYm1ObEtHVnNaVzFsYm5RcElIdGNiaUFnSUNBZ0lISmxkSFZ5YmlCRVlYUmhYMTlrWldaaGRXeDBMbVJsWm1GMWJIUXVaMlYwS0dsdVpHVjRMbWRsZEVWc1pXMWxiblFvWld4bGJXVnVkQ2tzSUhSb2FYTXVSRUZVUVY5TFJWa3BPMXh1SUNBZ0lIMWNibHh1SUNBZ0lITjBZWFJwWXlCblpYUlBja055WldGMFpVbHVjM1JoYm1ObEtHVnNaVzFsYm5Rc0lHTnZibVpwWnlBOUlIdDlLU0I3WEc0Z0lDQWdJQ0J5WlhSMWNtNGdkR2hwY3k1blpYUkpibk4wWVc1alpTaGxiR1Z0Wlc1MEtTQjhmQ0J1WlhjZ2RHaHBjeWhsYkdWdFpXNTBMQ0IwZVhCbGIyWWdZMjl1Wm1sbklEMDlQU0FuYjJKcVpXTjBKeUEvSUdOdmJtWnBaeUE2SUc1MWJHd3BPMXh1SUNBZ0lIMWNibHh1SUNBZ0lITjBZWFJwWXlCblpYUWdWa1ZTVTBsUFRpZ3BJSHRjYmlBZ0lDQWdJSEpsZEhWeWJpQldSVkpUU1U5T08xeHVJQ0FnSUgxY2JseHVJQ0FnSUhOMFlYUnBZeUJuWlhRZ1JFRlVRVjlMUlZrb0tTQjdYRzRnSUNBZ0lDQnlaWFIxY200Z1lHSnpMaVI3ZEdocGN5NU9RVTFGZldBN1hHNGdJQ0FnZlZ4dVhHNGdJQ0FnYzNSaGRHbGpJR2RsZENCRlZrVk9WRjlMUlZrb0tTQjdYRzRnSUNBZ0lDQnlaWFIxY200Z1lDNGtlM1JvYVhNdVJFRlVRVjlMUlZsOVlEdGNiaUFnSUNCOVhHNWNiaUFnSUNCemRHRjBhV01nWlhabGJuUk9ZVzFsS0c1aGJXVXBJSHRjYmlBZ0lDQWdJSEpsZEhWeWJpQmdKSHR1WVcxbGZTUjdkR2hwY3k1RlZrVk9WRjlMUlZsOVlEdGNiaUFnSUNCOVhHNWNiaUFnZlZ4dVhHNGdJSEpsZEhWeWJpQkNZWE5sUTI5dGNHOXVaVzUwTzF4dVhHNTlLU2s3WEc0dkx5TWdjMjkxY21ObFRXRndjR2x1WjFWU1REMWlZWE5sTFdOdmJYQnZibVZ1ZEM1cWN5NXRZWEJjYmlJc0lpOHFJVnh1SUNBcUlFSnZiM1J6ZEhKaGNDQmlkWFIwYjI0dWFuTWdkalV1TWk0eklDaG9kSFJ3Y3pvdkwyZGxkR0p2YjNSemRISmhjQzVqYjIwdktWeHVJQ0FxSUVOdmNIbHlhV2RvZENBeU1ERXhMVEl3TWpJZ1ZHaGxJRUp2YjNSemRISmhjQ0JCZFhSb2IzSnpJQ2hvZEhSd2N6b3ZMMmRwZEdoMVlpNWpiMjB2ZEhkaWN5OWliMjkwYzNSeVlYQXZaM0poY0doekwyTnZiblJ5YVdKMWRHOXljeWxjYmlBZ0tpQk1hV05sYm5ObFpDQjFibVJsY2lCTlNWUWdLR2gwZEhCek9pOHZaMmwwYUhWaUxtTnZiUzkwZDJKekwySnZiM1J6ZEhKaGNDOWliRzlpTDIxaGFXNHZURWxEUlU1VFJTbGNiaUFnS2k5Y2JpaG1kVzVqZEdsdmJpQW9aMnh2WW1Gc0xDQm1ZV04wYjNKNUtTQjdYRzRnSUhSNWNHVnZaaUJsZUhCdmNuUnpJRDA5UFNBbmIySnFaV04wSnlBbUppQjBlWEJsYjJZZ2JXOWtkV3hsSUNFOVBTQW5kVzVrWldacGJtVmtKeUEvSUcxdlpIVnNaUzVsZUhCdmNuUnpJRDBnWm1GamRHOXllU2h5WlhGMWFYSmxLQ2N1TDNWMGFXd3ZhVzVrWlhnbktTd2djbVZ4ZFdseVpTZ25MaTlrYjIwdlpYWmxiblF0YUdGdVpHeGxjaWNwTENCeVpYRjFhWEpsS0NjdUwySmhjMlV0WTI5dGNHOXVaVzUwSnlrcElEcGNiaUFnZEhsd1pXOW1JR1JsWm1sdVpTQTlQVDBnSjJaMWJtTjBhVzl1SnlBbUppQmtaV1pwYm1VdVlXMWtJRDhnWkdWbWFXNWxLRnNuTGk5MWRHbHNMMmx1WkdWNEp5d2dKeTR2Wkc5dEwyVjJaVzUwTFdoaGJtUnNaWEluTENBbkxpOWlZWE5sTFdOdmJYQnZibVZ1ZENkZExDQm1ZV04wYjNKNUtTQTZYRzRnSUNobmJHOWlZV3dnUFNCMGVYQmxiMllnWjJ4dlltRnNWR2hwY3lBaFBUMGdKM1Z1WkdWbWFXNWxaQ2NnUHlCbmJHOWlZV3hVYUdseklEb2daMnh2WW1Gc0lIeDhJSE5sYkdZc0lHZHNiMkpoYkM1Q2RYUjBiMjRnUFNCbVlXTjBiM0o1S0dkc2IySmhiQzVKYm1SbGVDd2daMnh2WW1Gc0xrVjJaVzUwU0dGdVpHeGxjaXdnWjJ4dlltRnNMa0poYzJWRGIyMXdiMjVsYm5RcEtUdGNibjBwS0hSb2FYTXNJQ2htZFc1amRHbHZiaUFvYVc1a1pYZ3NJRVYyWlc1MFNHRnVaR3hsY2l3Z1FtRnpaVU52YlhCdmJtVnVkQ2tnZXlBbmRYTmxJSE4wY21samRDYzdYRzVjYmlBZ1kyOXVjM1FnWDJsdWRHVnliM0JFWldaaGRXeDBUR1ZuWVdONUlEMGdaU0E5UGlCbElDWW1JSFI1Y0dWdlppQmxJRDA5UFNBbmIySnFaV04wSnlBbUppQW5aR1ZtWVhWc2RDY2dhVzRnWlNBL0lHVWdPaUI3SUdSbFptRjFiSFE2SUdVZ2ZUdGNibHh1SUNCamIyNXpkQ0JGZG1WdWRFaGhibVJzWlhKZlgyUmxabUYxYkhRZ1BTQXZLaU5mWDFCVlVrVmZYeW92WDJsdWRHVnliM0JFWldaaGRXeDBUR1ZuWVdONUtFVjJaVzUwU0dGdVpHeGxjaWs3WEc0Z0lHTnZibk4wSUVKaGMyVkRiMjF3YjI1bGJuUmZYMlJsWm1GMWJIUWdQU0F2S2lOZlgxQlZVa1ZmWHlvdlgybHVkR1Z5YjNCRVpXWmhkV3gwVEdWbllXTjVLRUpoYzJWRGIyMXdiMjVsYm5RcE8xeHVYRzRnSUM4cUtseHVJQ0FnS2lBdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExWeHVJQ0FnS2lCQ2IyOTBjM1J5WVhBZ0tIWTFMakl1TXlrNklHSjFkSFJ2Ymk1cWMxeHVJQ0FnS2lCTWFXTmxibk5sWkNCMWJtUmxjaUJOU1ZRZ0tHaDBkSEJ6T2k4dloybDBhSFZpTG1OdmJTOTBkMkp6TDJKdmIzUnpkSEpoY0M5aWJHOWlMMjFoYVc0dlRFbERSVTVUUlNsY2JpQWdJQ29nTFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMxY2JpQWdJQ292WEc0Z0lDOHFLbHh1SUNBZ0tpQkRiMjV6ZEdGdWRITmNiaUFnSUNvdlhHNWNiaUFnWTI5dWMzUWdUa0ZOUlNBOUlDZGlkWFIwYjI0bk8xeHVJQ0JqYjI1emRDQkVRVlJCWDB0RldTQTlJQ2RpY3k1aWRYUjBiMjRuTzF4dUlDQmpiMjV6ZENCRlZrVk9WRjlMUlZrZ1BTQmdMaVI3UkVGVVFWOUxSVmw5WUR0Y2JpQWdZMjl1YzNRZ1JFRlVRVjlCVUVsZlMwVlpJRDBnSnk1a1lYUmhMV0Z3YVNjN1hHNGdJR052Ym5OMElFTk1RVk5UWDA1QlRVVmZRVU5VU1ZaRklEMGdKMkZqZEdsMlpTYzdYRzRnSUdOdmJuTjBJRk5GVEVWRFZFOVNYMFJCVkVGZlZFOUhSMHhGSUQwZ0oxdGtZWFJoTFdKekxYUnZaMmRzWlQxY0ltSjFkSFJ2Ymx3aVhTYzdYRzRnSUdOdmJuTjBJRVZXUlU1VVgwTk1TVU5MWDBSQlZFRmZRVkJKSUQwZ1lHTnNhV05ySkh0RlZrVk9WRjlMUlZsOUpIdEVRVlJCWDBGUVNWOUxSVmw5WUR0Y2JpQWdMeW9xWEc0Z0lDQXFJRU5zWVhOeklHUmxabWx1YVhScGIyNWNiaUFnSUNvdlhHNWNiaUFnWTJ4aGMzTWdRblYwZEc5dUlHVjRkR1Z1WkhNZ1FtRnpaVU52YlhCdmJtVnVkRjlmWkdWbVlYVnNkQzVrWldaaGRXeDBJSHRjYmlBZ0lDQXZMeUJIWlhSMFpYSnpYRzRnSUNBZ2MzUmhkR2xqSUdkbGRDQk9RVTFGS0NrZ2UxeHVJQ0FnSUNBZ2NtVjBkWEp1SUU1QlRVVTdYRzRnSUNBZ2ZTQXZMeUJRZFdKc2FXTmNibHh1WEc0Z0lDQWdkRzluWjJ4bEtDa2dlMXh1SUNBZ0lDQWdMeThnVkc5bloyeGxJR05zWVhOeklHRnVaQ0J6ZVc1aklIUm9aU0JnWVhKcFlTMXdjbVZ6YzJWa1lDQmhkSFJ5YVdKMWRHVWdkMmwwYUNCMGFHVWdjbVYwZFhKdUlIWmhiSFZsSUc5bUlIUm9aU0JnTG5SdloyZHNaU2dwWUNCdFpYUm9iMlJjYmlBZ0lDQWdJSFJvYVhNdVgyVnNaVzFsYm5RdWMyVjBRWFIwY21saWRYUmxLQ2RoY21saExYQnlaWE56WldRbkxDQjBhR2x6TGw5bGJHVnRaVzUwTG1Oc1lYTnpUR2x6ZEM1MGIyZG5iR1VvUTB4QlUxTmZUa0ZOUlY5QlExUkpWa1VwS1R0Y2JpQWdJQ0I5SUM4dklGTjBZWFJwWTF4dVhHNWNiaUFnSUNCemRHRjBhV01nYWxGMVpYSjVTVzUwWlhKbVlXTmxLR052Ym1acFp5a2dlMXh1SUNBZ0lDQWdjbVYwZFhKdUlIUm9hWE11WldGamFDaG1kVzVqZEdsdmJpQW9LU0I3WEc0Z0lDQWdJQ0FnSUdOdmJuTjBJR1JoZEdFZ1BTQkNkWFIwYjI0dVoyVjBUM0pEY21WaGRHVkpibk4wWVc1alpTaDBhR2x6S1R0Y2JseHVJQ0FnSUNBZ0lDQnBaaUFvWTI5dVptbG5JRDA5UFNBbmRHOW5aMnhsSnlrZ2UxeHVJQ0FnSUNBZ0lDQWdJR1JoZEdGYlkyOXVabWxuWFNncE8xeHVJQ0FnSUNBZ0lDQjlYRzRnSUNBZ0lDQjlLVHRjYmlBZ0lDQjlYRzVjYmlBZ2ZWeHVJQ0F2S2lwY2JpQWdJQ29nUkdGMFlTQkJVRWtnYVcxd2JHVnRaVzUwWVhScGIyNWNiaUFnSUNvdlhHNWNibHh1SUNCRmRtVnVkRWhoYm1Sc1pYSmZYMlJsWm1GMWJIUXVaR1ZtWVhWc2RDNXZiaWhrYjJOMWJXVnVkQ3dnUlZaRlRsUmZRMHhKUTB0ZlJFRlVRVjlCVUVrc0lGTkZURVZEVkU5U1gwUkJWRUZmVkU5SFIweEZMQ0JsZG1WdWRDQTlQaUI3WEc0Z0lDQWdaWFpsYm5RdWNISmxkbVZ1ZEVSbFptRjFiSFFvS1R0Y2JpQWdJQ0JqYjI1emRDQmlkWFIwYjI0Z1BTQmxkbVZ1ZEM1MFlYSm5aWFF1WTJ4dmMyVnpkQ2hUUlV4RlExUlBVbDlFUVZSQlgxUlBSMGRNUlNrN1hHNGdJQ0FnWTI5dWMzUWdaR0YwWVNBOUlFSjFkSFJ2Ymk1blpYUlBja055WldGMFpVbHVjM1JoYm1ObEtHSjFkSFJ2YmlrN1hHNGdJQ0FnWkdGMFlTNTBiMmRuYkdVb0tUdGNiaUFnZlNrN1hHNGdJQzhxS2x4dUlDQWdLaUJxVVhWbGNubGNiaUFnSUNvdlhHNWNiaUFnYVc1a1pYZ3VaR1ZtYVc1bFNsRjFaWEo1VUd4MVoybHVLRUoxZEhSdmJpazdYRzVjYmlBZ2NtVjBkWEp1SUVKMWRIUnZianRjYmx4dWZTa3BPMXh1THk4aklITnZkWEpqWlUxaGNIQnBibWRWVWt3OVluVjBkRzl1TG1wekxtMWhjRnh1SWl3aUx5b2hYRzRnSUNvZ1FtOXZkSE4wY21Gd0lHTnZiR3hoY0hObExtcHpJSFkxTGpJdU15QW9hSFIwY0hNNkx5OW5aWFJpYjI5MGMzUnlZWEF1WTI5dEx5bGNiaUFnS2lCRGIzQjVjbWxuYUhRZ01qQXhNUzB5TURJeUlGUm9aU0JDYjI5MGMzUnlZWEFnUVhWMGFHOXljeUFvYUhSMGNITTZMeTluYVhSb2RXSXVZMjl0TDNSM1luTXZZbTl2ZEhOMGNtRndMMmR5WVhCb2N5OWpiMjUwY21saWRYUnZjbk1wWEc0Z0lDb2dUR2xqWlc1elpXUWdkVzVrWlhJZ1RVbFVJQ2hvZEhSd2N6b3ZMMmRwZEdoMVlpNWpiMjB2ZEhkaWN5OWliMjkwYzNSeVlYQXZZbXh2WWk5dFlXbHVMMHhKUTBWT1UwVXBYRzRnSUNvdlhHNG9ablZ1WTNScGIyNGdLR2RzYjJKaGJDd2dabUZqZEc5eWVTa2dlMXh1SUNCMGVYQmxiMllnWlhod2IzSjBjeUE5UFQwZ0oyOWlhbVZqZENjZ0ppWWdkSGx3Wlc5bUlHMXZaSFZzWlNBaFBUMGdKM1Z1WkdWbWFXNWxaQ2NnUHlCdGIyUjFiR1V1Wlhod2IzSjBjeUE5SUdaaFkzUnZjbmtvY21WeGRXbHlaU2duTGk5MWRHbHNMMmx1WkdWNEp5a3NJSEpsY1hWcGNtVW9KeTR2Wkc5dEwyVjJaVzUwTFdoaGJtUnNaWEluS1N3Z2NtVnhkV2x5WlNnbkxpOWtiMjB2YzJWc1pXTjBiM0l0Wlc1bmFXNWxKeWtzSUhKbGNYVnBjbVVvSnk0dlltRnpaUzFqYjIxd2IyNWxiblFuS1NrZ09seHVJQ0IwZVhCbGIyWWdaR1ZtYVc1bElEMDlQU0FuWm5WdVkzUnBiMjRuSUNZbUlHUmxabWx1WlM1aGJXUWdQeUJrWldacGJtVW9XeWN1TDNWMGFXd3ZhVzVrWlhnbkxDQW5MaTlrYjIwdlpYWmxiblF0YUdGdVpHeGxjaWNzSUNjdUwyUnZiUzl6Wld4bFkzUnZjaTFsYm1kcGJtVW5MQ0FuTGk5aVlYTmxMV052YlhCdmJtVnVkQ2RkTENCbVlXTjBiM0o1S1NBNlhHNGdJQ2huYkc5aVlXd2dQU0IwZVhCbGIyWWdaMnh2WW1Gc1ZHaHBjeUFoUFQwZ0ozVnVaR1ZtYVc1bFpDY2dQeUJuYkc5aVlXeFVhR2x6SURvZ1oyeHZZbUZzSUh4OElITmxiR1lzSUdkc2IySmhiQzVEYjJ4c1lYQnpaU0E5SUdaaFkzUnZjbmtvWjJ4dlltRnNMa2x1WkdWNExDQm5iRzlpWVd3dVJYWmxiblJJWVc1a2JHVnlMQ0JuYkc5aVlXd3VVMlZzWldOMGIzSkZibWRwYm1Vc0lHZHNiMkpoYkM1Q1lYTmxRMjl0Y0c5dVpXNTBLU2s3WEc1OUtTaDBhR2x6TENBb1puVnVZM1JwYjI0Z0tHbHVaR1Y0TENCRmRtVnVkRWhoYm1Sc1pYSXNJRk5sYkdWamRHOXlSVzVuYVc1bExDQkNZWE5sUTI5dGNHOXVaVzUwS1NCN0lDZDFjMlVnYzNSeWFXTjBKenRjYmx4dUlDQmpiMjV6ZENCZmFXNTBaWEp2Y0VSbFptRjFiSFJNWldkaFkza2dQU0JsSUQwK0lHVWdKaVlnZEhsd1pXOW1JR1VnUFQwOUlDZHZZbXBsWTNRbklDWW1JQ2RrWldaaGRXeDBKeUJwYmlCbElEOGdaU0E2SUhzZ1pHVm1ZWFZzZERvZ1pTQjlPMXh1WEc0Z0lHTnZibk4wSUVWMlpXNTBTR0Z1Wkd4bGNsOWZaR1ZtWVhWc2RDQTlJQzhxSTE5ZlVGVlNSVjlmS2k5ZmFXNTBaWEp2Y0VSbFptRjFiSFJNWldkaFkza29SWFpsYm5SSVlXNWtiR1Z5S1R0Y2JpQWdZMjl1YzNRZ1UyVnNaV04wYjNKRmJtZHBibVZmWDJSbFptRjFiSFFnUFNBdktpTmZYMUJWVWtWZlh5b3ZYMmx1ZEdWeWIzQkVaV1poZFd4MFRHVm5ZV041S0ZObGJHVmpkRzl5Ulc1bmFXNWxLVHRjYmlBZ1kyOXVjM1FnUW1GelpVTnZiWEJ2Ym1WdWRGOWZaR1ZtWVhWc2RDQTlJQzhxSTE5ZlVGVlNSVjlmS2k5ZmFXNTBaWEp2Y0VSbFptRjFiSFJNWldkaFkza29RbUZ6WlVOdmJYQnZibVZ1ZENrN1hHNWNiaUFnTHlvcVhHNGdJQ0FxSUMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdFhHNGdJQ0FxSUVKdmIzUnpkSEpoY0NBb2RqVXVNaTR6S1RvZ1kyOXNiR0Z3YzJVdWFuTmNiaUFnSUNvZ1RHbGpaVzV6WldRZ2RXNWtaWElnVFVsVUlDaG9kSFJ3Y3pvdkwyZHBkR2gxWWk1amIyMHZkSGRpY3k5aWIyOTBjM1J5WVhBdllteHZZaTl0WVdsdUwweEpRMFZPVTBVcFhHNGdJQ0FxSUMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdFhHNGdJQ0FxTDF4dUlDQXZLaXBjYmlBZ0lDb2dRMjl1YzNSaGJuUnpYRzRnSUNBcUwxeHVYRzRnSUdOdmJuTjBJRTVCVFVVZ1BTQW5ZMjlzYkdGd2MyVW5PMXh1SUNCamIyNXpkQ0JFUVZSQlgwdEZXU0E5SUNkaWN5NWpiMnhzWVhCelpTYzdYRzRnSUdOdmJuTjBJRVZXUlU1VVgwdEZXU0E5SUdBdUpIdEVRVlJCWDB0RldYMWdPMXh1SUNCamIyNXpkQ0JFUVZSQlgwRlFTVjlMUlZrZ1BTQW5MbVJoZEdFdFlYQnBKenRjYmlBZ1kyOXVjM1FnUlZaRlRsUmZVMGhQVnlBOUlHQnphRzkzSkh0RlZrVk9WRjlMUlZsOVlEdGNiaUFnWTI5dWMzUWdSVlpGVGxSZlUwaFBWMDRnUFNCZ2MyaHZkMjRrZTBWV1JVNVVYMHRGV1gxZ08xeHVJQ0JqYjI1emRDQkZWa1ZPVkY5SVNVUkZJRDBnWUdocFpHVWtlMFZXUlU1VVgwdEZXWDFnTzF4dUlDQmpiMjV6ZENCRlZrVk9WRjlJU1VSRVJVNGdQU0JnYUdsa1pHVnVKSHRGVmtWT1ZGOUxSVmw5WUR0Y2JpQWdZMjl1YzNRZ1JWWkZUbFJmUTB4SlEwdGZSRUZVUVY5QlVFa2dQU0JnWTJ4cFkyc2tlMFZXUlU1VVgwdEZXWDBrZTBSQlZFRmZRVkJKWDB0RldYMWdPMXh1SUNCamIyNXpkQ0JEVEVGVFUxOU9RVTFGWDFOSVQxY2dQU0FuYzJodmR5YzdYRzRnSUdOdmJuTjBJRU5NUVZOVFgwNUJUVVZmUTA5TVRFRlFVMFVnUFNBblkyOXNiR0Z3YzJVbk8xeHVJQ0JqYjI1emRDQkRURUZUVTE5T1FVMUZYME5QVEV4QlVGTkpUa2NnUFNBblkyOXNiR0Z3YzJsdVp5YzdYRzRnSUdOdmJuTjBJRU5NUVZOVFgwNUJUVVZmUTA5TVRFRlFVMFZFSUQwZ0oyTnZiR3hoY0hObFpDYzdYRzRnSUdOdmJuTjBJRU5NUVZOVFgwNUJUVVZmUkVWRlVFVlNYME5JU1V4RVVrVk9JRDBnWURwelkyOXdaU0F1Skh0RFRFRlRVMTlPUVUxRlgwTlBURXhCVUZORmZTQXVKSHREVEVGVFUxOU9RVTFGWDBOUFRFeEJVRk5GZldBN1hHNGdJR052Ym5OMElFTk1RVk5UWDA1QlRVVmZTRTlTU1ZwUFRsUkJUQ0E5SUNkamIyeHNZWEJ6WlMxb2IzSnBlbTl1ZEdGc0p6dGNiaUFnWTI5dWMzUWdWMGxFVkVnZ1BTQW5kMmxrZEdnbk8xeHVJQ0JqYjI1emRDQklSVWxIU0ZRZ1BTQW5hR1ZwWjJoMEp6dGNiaUFnWTI5dWMzUWdVMFZNUlVOVVQxSmZRVU5VU1ZaRlV5QTlJQ2N1WTI5c2JHRndjMlV1YzJodmR5d2dMbU52Ykd4aGNITmxMbU52Ykd4aGNITnBibWNuTzF4dUlDQmpiMjV6ZENCVFJVeEZRMVJQVWw5RVFWUkJYMVJQUjBkTVJTQTlJQ2RiWkdGMFlTMWljeTEwYjJkbmJHVTlYQ0pqYjJ4c1lYQnpaVndpWFNjN1hHNGdJR052Ym5OMElFUmxabUYxYkhRZ1BTQjdYRzRnSUNBZ2NHRnlaVzUwT2lCdWRXeHNMRnh1SUNBZ0lIUnZaMmRzWlRvZ2RISjFaVnh1SUNCOU8xeHVJQ0JqYjI1emRDQkVaV1poZFd4MFZIbHdaU0E5SUh0Y2JpQWdJQ0J3WVhKbGJuUTZJQ2NvYm5Wc2JIeGxiR1Z0Wlc1MEtTY3NYRzRnSUNBZ2RHOW5aMnhsT2lBblltOXZiR1ZoYmlkY2JpQWdmVHRjYmlBZ0x5b3FYRzRnSUNBcUlFTnNZWE56SUdSbFptbHVhWFJwYjI1Y2JpQWdJQ292WEc1Y2JpQWdZMnhoYzNNZ1EyOXNiR0Z3YzJVZ1pYaDBaVzVrY3lCQ1lYTmxRMjl0Y0c5dVpXNTBYMTlrWldaaGRXeDBMbVJsWm1GMWJIUWdlMXh1SUNBZ0lHTnZibk4wY25WamRHOXlLR1ZzWlcxbGJuUXNJR052Ym1acFp5a2dlMXh1SUNBZ0lDQWdjM1Z3WlhJb1pXeGxiV1Z1ZEN3Z1kyOXVabWxuS1R0Y2JpQWdJQ0FnSUhSb2FYTXVYMmx6VkhKaGJuTnBkR2x2Ym1sdVp5QTlJR1poYkhObE8xeHVJQ0FnSUNBZ2RHaHBjeTVmZEhKcFoyZGxja0Z5Y21GNUlEMGdXMTA3WEc0Z0lDQWdJQ0JqYjI1emRDQjBiMmRuYkdWTWFYTjBJRDBnVTJWc1pXTjBiM0pGYm1kcGJtVmZYMlJsWm1GMWJIUXVaR1ZtWVhWc2RDNW1hVzVrS0ZORlRFVkRWRTlTWDBSQlZFRmZWRTlIUjB4RktUdGNibHh1SUNBZ0lDQWdabTl5SUNoamIyNXpkQ0JsYkdWdElHOW1JSFJ2WjJkc1pVeHBjM1FwSUh0Y2JpQWdJQ0FnSUNBZ1kyOXVjM1FnYzJWc1pXTjBiM0lnUFNCcGJtUmxlQzVuWlhSVFpXeGxZM1J2Y2taeWIyMUZiR1Z0Wlc1MEtHVnNaVzBwTzF4dUlDQWdJQ0FnSUNCamIyNXpkQ0JtYVd4MFpYSkZiR1Z0Wlc1MElEMGdVMlZzWldOMGIzSkZibWRwYm1WZlgyUmxabUYxYkhRdVpHVm1ZWFZzZEM1bWFXNWtLSE5sYkdWamRHOXlLUzVtYVd4MFpYSW9abTkxYm1SRmJHVnRaVzUwSUQwK0lHWnZkVzVrUld4bGJXVnVkQ0E5UFQwZ2RHaHBjeTVmWld4bGJXVnVkQ2s3WEc1Y2JpQWdJQ0FnSUNBZ2FXWWdLSE5sYkdWamRHOXlJQ0U5UFNCdWRXeHNJQ1ltSUdacGJIUmxja1ZzWlcxbGJuUXViR1Z1WjNSb0tTQjdYRzRnSUNBZ0lDQWdJQ0FnZEdocGN5NWZkSEpwWjJkbGNrRnljbUY1TG5CMWMyZ29aV3hsYlNrN1hHNGdJQ0FnSUNBZ0lIMWNiaUFnSUNBZ0lIMWNibHh1SUNBZ0lDQWdkR2hwY3k1ZmFXNXBkR2xoYkdsNlpVTm9hV3hrY21WdUtDazdYRzVjYmlBZ0lDQWdJR2xtSUNnaGRHaHBjeTVmWTI5dVptbG5MbkJoY21WdWRDa2dlMXh1SUNBZ0lDQWdJQ0IwYUdsekxsOWhaR1JCY21saFFXNWtRMjlzYkdGd2MyVmtRMnhoYzNNb2RHaHBjeTVmZEhKcFoyZGxja0Z5Y21GNUxDQjBhR2x6TGw5cGMxTm9iM2R1S0NrcE8xeHVJQ0FnSUNBZ2ZWeHVYRzRnSUNBZ0lDQnBaaUFvZEdocGN5NWZZMjl1Wm1sbkxuUnZaMmRzWlNrZ2UxeHVJQ0FnSUNBZ0lDQjBhR2x6TG5SdloyZHNaU2dwTzF4dUlDQWdJQ0FnZlZ4dUlDQWdJSDBnTHk4Z1IyVjBkR1Z5YzF4dVhHNWNiaUFnSUNCemRHRjBhV01nWjJWMElFUmxabUYxYkhRb0tTQjdYRzRnSUNBZ0lDQnlaWFIxY200Z1JHVm1ZWFZzZER0Y2JpQWdJQ0I5WEc1Y2JpQWdJQ0J6ZEdGMGFXTWdaMlYwSUVSbFptRjFiSFJVZVhCbEtDa2dlMXh1SUNBZ0lDQWdjbVYwZFhKdUlFUmxabUYxYkhSVWVYQmxPMXh1SUNBZ0lIMWNibHh1SUNBZ0lITjBZWFJwWXlCblpYUWdUa0ZOUlNncElIdGNiaUFnSUNBZ0lISmxkSFZ5YmlCT1FVMUZPMXh1SUNBZ0lIMGdMeThnVUhWaWJHbGpYRzVjYmx4dUlDQWdJSFJ2WjJkc1pTZ3BJSHRjYmlBZ0lDQWdJR2xtSUNoMGFHbHpMbDlwYzFOb2IzZHVLQ2twSUh0Y2JpQWdJQ0FnSUNBZ2RHaHBjeTVvYVdSbEtDazdYRzRnSUNBZ0lDQjlJR1ZzYzJVZ2UxeHVJQ0FnSUNBZ0lDQjBhR2x6TG5Ob2IzY29LVHRjYmlBZ0lDQWdJSDFjYmlBZ0lDQjlYRzVjYmlBZ0lDQnphRzkzS0NrZ2UxeHVJQ0FnSUNBZ2FXWWdLSFJvYVhNdVgybHpWSEpoYm5OcGRHbHZibWx1WnlCOGZDQjBhR2x6TGw5cGMxTm9iM2R1S0NrcElIdGNiaUFnSUNBZ0lDQWdjbVYwZFhKdU8xeHVJQ0FnSUNBZ2ZWeHVYRzRnSUNBZ0lDQnNaWFFnWVdOMGFYWmxRMmhwYkdSeVpXNGdQU0JiWFRzZ0x5OGdabWx1WkNCaFkzUnBkbVVnWTJocGJHUnlaVzVjYmx4dUlDQWdJQ0FnYVdZZ0tIUm9hWE11WDJOdmJtWnBaeTV3WVhKbGJuUXBJSHRjYmlBZ0lDQWdJQ0FnWVdOMGFYWmxRMmhwYkdSeVpXNGdQU0IwYUdsekxsOW5aWFJHYVhKemRFeGxkbVZzUTJocGJHUnlaVzRvVTBWTVJVTlVUMUpmUVVOVVNWWkZVeWt1Wm1sc2RHVnlLR1ZzWlcxbGJuUWdQVDRnWld4bGJXVnVkQ0FoUFQwZ2RHaHBjeTVmWld4bGJXVnVkQ2t1YldGd0tHVnNaVzFsYm5RZ1BUNGdRMjlzYkdGd2MyVXVaMlYwVDNKRGNtVmhkR1ZKYm5OMFlXNWpaU2hsYkdWdFpXNTBMQ0I3WEc0Z0lDQWdJQ0FnSUNBZ2RHOW5aMnhsT2lCbVlXeHpaVnh1SUNBZ0lDQWdJQ0I5S1NrN1hHNGdJQ0FnSUNCOVhHNWNiaUFnSUNBZ0lHbG1JQ2hoWTNScGRtVkRhR2xzWkhKbGJpNXNaVzVuZEdnZ0ppWWdZV04wYVhabFEyaHBiR1J5Wlc1Yk1GMHVYMmx6VkhKaGJuTnBkR2x2Ym1sdVp5a2dlMXh1SUNBZ0lDQWdJQ0J5WlhSMWNtNDdYRzRnSUNBZ0lDQjlYRzVjYmlBZ0lDQWdJR052Ym5OMElITjBZWEowUlhabGJuUWdQU0JGZG1WdWRFaGhibVJzWlhKZlgyUmxabUYxYkhRdVpHVm1ZWFZzZEM1MGNtbG5aMlZ5S0hSb2FYTXVYMlZzWlcxbGJuUXNJRVZXUlU1VVgxTklUMWNwTzF4dVhHNGdJQ0FnSUNCcFppQW9jM1JoY25SRmRtVnVkQzVrWldaaGRXeDBVSEpsZG1WdWRHVmtLU0I3WEc0Z0lDQWdJQ0FnSUhKbGRIVnlianRjYmlBZ0lDQWdJSDFjYmx4dUlDQWdJQ0FnWm05eUlDaGpiMjV6ZENCaFkzUnBkbVZKYm5OMFlXNWpaU0J2WmlCaFkzUnBkbVZEYUdsc1pISmxiaWtnZTF4dUlDQWdJQ0FnSUNCaFkzUnBkbVZKYm5OMFlXNWpaUzVvYVdSbEtDazdYRzRnSUNBZ0lDQjlYRzVjYmlBZ0lDQWdJR052Ym5OMElHUnBiV1Z1YzJsdmJpQTlJSFJvYVhNdVgyZGxkRVJwYldWdWMybHZiaWdwTzF4dVhHNGdJQ0FnSUNCMGFHbHpMbDlsYkdWdFpXNTBMbU5zWVhOelRHbHpkQzV5WlcxdmRtVW9RMHhCVTFOZlRrRk5SVjlEVDB4TVFWQlRSU2s3WEc1Y2JpQWdJQ0FnSUhSb2FYTXVYMlZzWlcxbGJuUXVZMnhoYzNOTWFYTjBMbUZrWkNoRFRFRlRVMTlPUVUxRlgwTlBURXhCVUZOSlRrY3BPMXh1WEc0Z0lDQWdJQ0IwYUdsekxsOWxiR1Z0Wlc1MExuTjBlV3hsVzJScGJXVnVjMmx2YmwwZ1BTQXdPMXh1WEc0Z0lDQWdJQ0IwYUdsekxsOWhaR1JCY21saFFXNWtRMjlzYkdGd2MyVmtRMnhoYzNNb2RHaHBjeTVmZEhKcFoyZGxja0Z5Y21GNUxDQjBjblZsS1R0Y2JseHVJQ0FnSUNBZ2RHaHBjeTVmYVhOVWNtRnVjMmwwYVc5dWFXNW5JRDBnZEhKMVpUdGNibHh1SUNBZ0lDQWdZMjl1YzNRZ1kyOXRjR3hsZEdVZ1BTQW9LU0E5UGlCN1hHNGdJQ0FnSUNBZ0lIUm9hWE11WDJselZISmhibk5wZEdsdmJtbHVaeUE5SUdaaGJITmxPMXh1WEc0Z0lDQWdJQ0FnSUhSb2FYTXVYMlZzWlcxbGJuUXVZMnhoYzNOTWFYTjBMbkpsYlc5MlpTaERURUZUVTE5T1FVMUZYME5QVEV4QlVGTkpUa2NwTzF4dVhHNGdJQ0FnSUNBZ0lIUm9hWE11WDJWc1pXMWxiblF1WTJ4aGMzTk1hWE4wTG1Ga1pDaERURUZUVTE5T1FVMUZYME5QVEV4QlVGTkZMQ0JEVEVGVFUxOU9RVTFGWDFOSVQxY3BPMXh1WEc0Z0lDQWdJQ0FnSUhSb2FYTXVYMlZzWlcxbGJuUXVjM1I1YkdWYlpHbHRaVzV6YVc5dVhTQTlJQ2NuTzF4dUlDQWdJQ0FnSUNCRmRtVnVkRWhoYm1Sc1pYSmZYMlJsWm1GMWJIUXVaR1ZtWVhWc2RDNTBjbWxuWjJWeUtIUm9hWE11WDJWc1pXMWxiblFzSUVWV1JVNVVYMU5JVDFkT0tUdGNiaUFnSUNBZ0lIMDdYRzVjYmlBZ0lDQWdJR052Ym5OMElHTmhjR2wwWVd4cGVtVmtSR2x0Wlc1emFXOXVJRDBnWkdsdFpXNXphVzl1V3pCZExuUnZWWEJ3WlhKRFlYTmxLQ2tnS3lCa2FXMWxibk5wYjI0dWMyeHBZMlVvTVNrN1hHNGdJQ0FnSUNCamIyNXpkQ0J6WTNKdmJHeFRhWHBsSUQwZ1lITmpjbTlzYkNSN1kyRndhWFJoYkdsNlpXUkVhVzFsYm5OcGIyNTlZRHRjYmx4dUlDQWdJQ0FnZEdocGN5NWZjWFZsZFdWRFlXeHNZbUZqYXloamIyMXdiR1YwWlN3Z2RHaHBjeTVmWld4bGJXVnVkQ3dnZEhKMVpTazdYRzVjYmlBZ0lDQWdJSFJvYVhNdVgyVnNaVzFsYm5RdWMzUjViR1ZiWkdsdFpXNXphVzl1WFNBOUlHQWtlM1JvYVhNdVgyVnNaVzFsYm5SYmMyTnliMnhzVTJsNlpWMTljSGhnTzF4dUlDQWdJSDFjYmx4dUlDQWdJR2hwWkdVb0tTQjdYRzRnSUNBZ0lDQnBaaUFvZEdocGN5NWZhWE5VY21GdWMybDBhVzl1YVc1bklIeDhJQ0YwYUdsekxsOXBjMU5vYjNkdUtDa3BJSHRjYmlBZ0lDQWdJQ0FnY21WMGRYSnVPMXh1SUNBZ0lDQWdmVnh1WEc0Z0lDQWdJQ0JqYjI1emRDQnpkR0Z5ZEVWMlpXNTBJRDBnUlhabGJuUklZVzVrYkdWeVgxOWtaV1poZFd4MExtUmxabUYxYkhRdWRISnBaMmRsY2loMGFHbHpMbDlsYkdWdFpXNTBMQ0JGVmtWT1ZGOUlTVVJGS1R0Y2JseHVJQ0FnSUNBZ2FXWWdLSE4wWVhKMFJYWmxiblF1WkdWbVlYVnNkRkJ5WlhabGJuUmxaQ2tnZTF4dUlDQWdJQ0FnSUNCeVpYUjFjbTQ3WEc0Z0lDQWdJQ0I5WEc1Y2JpQWdJQ0FnSUdOdmJuTjBJR1JwYldWdWMybHZiaUE5SUhSb2FYTXVYMmRsZEVScGJXVnVjMmx2YmlncE8xeHVYRzRnSUNBZ0lDQjBhR2x6TGw5bGJHVnRaVzUwTG5OMGVXeGxXMlJwYldWdWMybHZibDBnUFNCZ0pIdDBhR2x6TGw5bGJHVnRaVzUwTG1kbGRFSnZkVzVrYVc1blEyeHBaVzUwVW1WamRDZ3BXMlJwYldWdWMybHZibDE5Y0hoZ08xeHVJQ0FnSUNBZ2FXNWtaWGd1Y21WbWJHOTNLSFJvYVhNdVgyVnNaVzFsYm5RcE8xeHVYRzRnSUNBZ0lDQjBhR2x6TGw5bGJHVnRaVzUwTG1Oc1lYTnpUR2x6ZEM1aFpHUW9RMHhCVTFOZlRrRk5SVjlEVDB4TVFWQlRTVTVIS1R0Y2JseHVJQ0FnSUNBZ2RHaHBjeTVmWld4bGJXVnVkQzVqYkdGemMweHBjM1F1Y21WdGIzWmxLRU5NUVZOVFgwNUJUVVZmUTA5TVRFRlFVMFVzSUVOTVFWTlRYMDVCVFVWZlUwaFBWeWs3WEc1Y2JpQWdJQ0FnSUdadmNpQW9ZMjl1YzNRZ2RISnBaMmRsY2lCdlppQjBhR2x6TGw5MGNtbG5aMlZ5UVhKeVlYa3BJSHRjYmlBZ0lDQWdJQ0FnWTI5dWMzUWdaV3hsYldWdWRDQTlJR2x1WkdWNExtZGxkRVZzWlcxbGJuUkdjbTl0VTJWc1pXTjBiM0lvZEhKcFoyZGxjaWs3WEc1Y2JpQWdJQ0FnSUNBZ2FXWWdLR1ZzWlcxbGJuUWdKaVlnSVhSb2FYTXVYMmx6VTJodmQyNG9aV3hsYldWdWRDa3BJSHRjYmlBZ0lDQWdJQ0FnSUNCMGFHbHpMbDloWkdSQmNtbGhRVzVrUTI5c2JHRndjMlZrUTJ4aGMzTW9XM1J5YVdkblpYSmRMQ0JtWVd4elpTazdYRzRnSUNBZ0lDQWdJSDFjYmlBZ0lDQWdJSDFjYmx4dUlDQWdJQ0FnZEdocGN5NWZhWE5VY21GdWMybDBhVzl1YVc1bklEMGdkSEoxWlR0Y2JseHVJQ0FnSUNBZ1kyOXVjM1FnWTI5dGNHeGxkR1VnUFNBb0tTQTlQaUI3WEc0Z0lDQWdJQ0FnSUhSb2FYTXVYMmx6VkhKaGJuTnBkR2x2Ym1sdVp5QTlJR1poYkhObE8xeHVYRzRnSUNBZ0lDQWdJSFJvYVhNdVgyVnNaVzFsYm5RdVkyeGhjM05NYVhOMExuSmxiVzkyWlNoRFRFRlRVMTlPUVUxRlgwTlBURXhCVUZOSlRrY3BPMXh1WEc0Z0lDQWdJQ0FnSUhSb2FYTXVYMlZzWlcxbGJuUXVZMnhoYzNOTWFYTjBMbUZrWkNoRFRFRlRVMTlPUVUxRlgwTlBURXhCVUZORktUdGNibHh1SUNBZ0lDQWdJQ0JGZG1WdWRFaGhibVJzWlhKZlgyUmxabUYxYkhRdVpHVm1ZWFZzZEM1MGNtbG5aMlZ5S0hSb2FYTXVYMlZzWlcxbGJuUXNJRVZXUlU1VVgwaEpSRVJGVGlrN1hHNGdJQ0FnSUNCOU8xeHVYRzRnSUNBZ0lDQjBhR2x6TGw5bGJHVnRaVzUwTG5OMGVXeGxXMlJwYldWdWMybHZibDBnUFNBbkp6dGNibHh1SUNBZ0lDQWdkR2hwY3k1ZmNYVmxkV1ZEWVd4c1ltRmpheWhqYjIxd2JHVjBaU3dnZEdocGN5NWZaV3hsYldWdWRDd2dkSEoxWlNrN1hHNGdJQ0FnZlZ4dVhHNGdJQ0FnWDJselUyaHZkMjRvWld4bGJXVnVkQ0E5SUhSb2FYTXVYMlZzWlcxbGJuUXBJSHRjYmlBZ0lDQWdJSEpsZEhWeWJpQmxiR1Z0Wlc1MExtTnNZWE56VEdsemRDNWpiMjUwWVdsdWN5aERURUZUVTE5T1FVMUZYMU5JVDFjcE8xeHVJQ0FnSUgwZ0x5OGdVSEpwZG1GMFpWeHVYRzVjYmlBZ0lDQmZZMjl1Wm1sblFXWjBaWEpOWlhKblpTaGpiMjVtYVdjcElIdGNiaUFnSUNBZ0lHTnZibVpwWnk1MGIyZG5iR1VnUFNCQ2IyOXNaV0Z1S0dOdmJtWnBaeTUwYjJkbmJHVXBPeUF2THlCRGIyVnlZMlVnYzNSeWFXNW5JSFpoYkhWbGMxeHVYRzRnSUNBZ0lDQmpiMjVtYVdjdWNHRnlaVzUwSUQwZ2FXNWtaWGd1WjJWMFJXeGxiV1Z1ZENoamIyNW1hV2N1Y0dGeVpXNTBLVHRjYmlBZ0lDQWdJSEpsZEhWeWJpQmpiMjVtYVdjN1hHNGdJQ0FnZlZ4dVhHNGdJQ0FnWDJkbGRFUnBiV1Z1YzJsdmJpZ3BJSHRjYmlBZ0lDQWdJSEpsZEhWeWJpQjBhR2x6TGw5bGJHVnRaVzUwTG1Oc1lYTnpUR2x6ZEM1amIyNTBZV2x1Y3loRFRFRlRVMTlPUVUxRlgwaFBVa2xhVDA1VVFVd3BJRDhnVjBsRVZFZ2dPaUJJUlVsSFNGUTdYRzRnSUNBZ2ZWeHVYRzRnSUNBZ1gybHVhWFJwWVd4cGVtVkRhR2xzWkhKbGJpZ3BJSHRjYmlBZ0lDQWdJR2xtSUNnaGRHaHBjeTVmWTI5dVptbG5MbkJoY21WdWRDa2dlMXh1SUNBZ0lDQWdJQ0J5WlhSMWNtNDdYRzRnSUNBZ0lDQjlYRzVjYmlBZ0lDQWdJR052Ym5OMElHTm9hV3hrY21WdUlEMGdkR2hwY3k1ZloyVjBSbWx5YzNSTVpYWmxiRU5vYVd4a2NtVnVLRk5GVEVWRFZFOVNYMFJCVkVGZlZFOUhSMHhGS1R0Y2JseHVJQ0FnSUNBZ1ptOXlJQ2hqYjI1emRDQmxiR1Z0Wlc1MElHOW1JR05vYVd4a2NtVnVLU0I3WEc0Z0lDQWdJQ0FnSUdOdmJuTjBJSE5sYkdWamRHVmtJRDBnYVc1a1pYZ3VaMlYwUld4bGJXVnVkRVp5YjIxVFpXeGxZM1J2Y2lobGJHVnRaVzUwS1R0Y2JseHVJQ0FnSUNBZ0lDQnBaaUFvYzJWc1pXTjBaV1FwSUh0Y2JpQWdJQ0FnSUNBZ0lDQjBhR2x6TGw5aFpHUkJjbWxoUVc1a1EyOXNiR0Z3YzJWa1EyeGhjM01vVzJWc1pXMWxiblJkTENCMGFHbHpMbDlwYzFOb2IzZHVLSE5sYkdWamRHVmtLU2s3WEc0Z0lDQWdJQ0FnSUgxY2JpQWdJQ0FnSUgxY2JpQWdJQ0I5WEc1Y2JpQWdJQ0JmWjJWMFJtbHljM1JNWlhabGJFTm9hV3hrY21WdUtITmxiR1ZqZEc5eUtTQjdYRzRnSUNBZ0lDQmpiMjV6ZENCamFHbHNaSEpsYmlBOUlGTmxiR1ZqZEc5eVJXNW5hVzVsWDE5a1pXWmhkV3gwTG1SbFptRjFiSFF1Wm1sdVpDaERURUZUVTE5T1FVMUZYMFJGUlZCRlVsOURTRWxNUkZKRlRpd2dkR2hwY3k1ZlkyOXVabWxuTG5CaGNtVnVkQ2s3SUM4dklISmxiVzkyWlNCamFHbHNaSEpsYmlCcFppQm5jbVZoZEdWeUlHUmxjSFJvWEc1Y2JpQWdJQ0FnSUhKbGRIVnliaUJUWld4bFkzUnZja1Z1WjJsdVpWOWZaR1ZtWVhWc2RDNWtaV1poZFd4MExtWnBibVFvYzJWc1pXTjBiM0lzSUhSb2FYTXVYMk52Ym1acFp5NXdZWEpsYm5RcExtWnBiSFJsY2lobGJHVnRaVzUwSUQwK0lDRmphR2xzWkhKbGJpNXBibU5zZFdSbGN5aGxiR1Z0Wlc1MEtTazdYRzRnSUNBZ2ZWeHVYRzRnSUNBZ1gyRmtaRUZ5YVdGQmJtUkRiMnhzWVhCelpXUkRiR0Z6Y3loMGNtbG5aMlZ5UVhKeVlYa3NJR2x6VDNCbGJpa2dlMXh1SUNBZ0lDQWdhV1lnS0NGMGNtbG5aMlZ5UVhKeVlYa3ViR1Z1WjNSb0tTQjdYRzRnSUNBZ0lDQWdJSEpsZEhWeWJqdGNiaUFnSUNBZ0lIMWNibHh1SUNBZ0lDQWdabTl5SUNoamIyNXpkQ0JsYkdWdFpXNTBJRzltSUhSeWFXZG5aWEpCY25KaGVTa2dlMXh1SUNBZ0lDQWdJQ0JsYkdWdFpXNTBMbU5zWVhOelRHbHpkQzUwYjJkbmJHVW9RMHhCVTFOZlRrRk5SVjlEVDB4TVFWQlRSVVFzSUNGcGMwOXdaVzRwTzF4dUlDQWdJQ0FnSUNCbGJHVnRaVzUwTG5ObGRFRjBkSEpwWW5WMFpTZ25ZWEpwWVMxbGVIQmhibVJsWkNjc0lHbHpUM0JsYmlrN1hHNGdJQ0FnSUNCOVhHNGdJQ0FnZlNBdkx5QlRkR0YwYVdOY2JseHVYRzRnSUNBZ2MzUmhkR2xqSUdwUmRXVnllVWx1ZEdWeVptRmpaU2hqYjI1bWFXY3BJSHRjYmlBZ0lDQWdJR052Ym5OMElGOWpiMjVtYVdjZ1BTQjdmVHRjYmx4dUlDQWdJQ0FnYVdZZ0tIUjVjR1Z2WmlCamIyNW1hV2NnUFQwOUlDZHpkSEpwYm1jbklDWW1JQzl6YUc5M2ZHaHBaR1V2TG5SbGMzUW9ZMjl1Wm1sbktTa2dlMXh1SUNBZ0lDQWdJQ0JmWTI5dVptbG5MblJ2WjJkc1pTQTlJR1poYkhObE8xeHVJQ0FnSUNBZ2ZWeHVYRzRnSUNBZ0lDQnlaWFIxY200Z2RHaHBjeTVsWVdOb0tHWjFibU4wYVc5dUlDZ3BJSHRjYmlBZ0lDQWdJQ0FnWTI5dWMzUWdaR0YwWVNBOUlFTnZiR3hoY0hObExtZGxkRTl5UTNKbFlYUmxTVzV6ZEdGdVkyVW9kR2hwY3l3Z1gyTnZibVpwWnlrN1hHNWNiaUFnSUNBZ0lDQWdhV1lnS0hSNWNHVnZaaUJqYjI1bWFXY2dQVDA5SUNkemRISnBibWNuS1NCN1hHNGdJQ0FnSUNBZ0lDQWdhV1lnS0hSNWNHVnZaaUJrWVhSaFcyTnZibVpwWjEwZ1BUMDlJQ2QxYm1SbFptbHVaV1FuS1NCN1hHNGdJQ0FnSUNBZ0lDQWdJQ0IwYUhKdmR5QnVaWGNnVkhsd1pVVnljbTl5S0dCT2J5QnRaWFJvYjJRZ2JtRnRaV1FnWENJa2UyTnZibVpwWjMxY0ltQXBPMXh1SUNBZ0lDQWdJQ0FnSUgxY2JseHVJQ0FnSUNBZ0lDQWdJR1JoZEdGYlkyOXVabWxuWFNncE8xeHVJQ0FnSUNBZ0lDQjlYRzRnSUNBZ0lDQjlLVHRjYmlBZ0lDQjlYRzVjYmlBZ2ZWeHVJQ0F2S2lwY2JpQWdJQ29nUkdGMFlTQkJVRWtnYVcxd2JHVnRaVzUwWVhScGIyNWNiaUFnSUNvdlhHNWNibHh1SUNCRmRtVnVkRWhoYm1Sc1pYSmZYMlJsWm1GMWJIUXVaR1ZtWVhWc2RDNXZiaWhrYjJOMWJXVnVkQ3dnUlZaRlRsUmZRMHhKUTB0ZlJFRlVRVjlCVUVrc0lGTkZURVZEVkU5U1gwUkJWRUZmVkU5SFIweEZMQ0JtZFc1amRHbHZiaUFvWlhabGJuUXBJSHRjYmlBZ0lDQXZMeUJ3Y21WMlpXNTBSR1ZtWVhWc2RDQnZibXg1SUdadmNpQThZVDRnWld4bGJXVnVkSE1nS0hkb2FXTm9JR05vWVc1blpTQjBhR1VnVlZKTUtTQnViM1FnYVc1emFXUmxJSFJvWlNCamIyeHNZWEJ6YVdKc1pTQmxiR1Z0Wlc1MFhHNGdJQ0FnYVdZZ0tHVjJaVzUwTG5SaGNtZGxkQzUwWVdkT1lXMWxJRDA5UFNBblFTY2dmSHdnWlhabGJuUXVaR1ZzWldkaGRHVlVZWEpuWlhRZ0ppWWdaWFpsYm5RdVpHVnNaV2RoZEdWVVlYSm5aWFF1ZEdGblRtRnRaU0E5UFQwZ0owRW5LU0I3WEc0Z0lDQWdJQ0JsZG1WdWRDNXdjbVYyWlc1MFJHVm1ZWFZzZENncE8xeHVJQ0FnSUgxY2JseHVJQ0FnSUdOdmJuTjBJSE5sYkdWamRHOXlJRDBnYVc1a1pYZ3VaMlYwVTJWc1pXTjBiM0pHY205dFJXeGxiV1Z1ZENoMGFHbHpLVHRjYmlBZ0lDQmpiMjV6ZENCelpXeGxZM1J2Y2tWc1pXMWxiblJ6SUQwZ1UyVnNaV04wYjNKRmJtZHBibVZmWDJSbFptRjFiSFF1WkdWbVlYVnNkQzVtYVc1a0tITmxiR1ZqZEc5eUtUdGNibHh1SUNBZ0lHWnZjaUFvWTI5dWMzUWdaV3hsYldWdWRDQnZaaUJ6Wld4bFkzUnZja1ZzWlcxbGJuUnpLU0I3WEc0Z0lDQWdJQ0JEYjJ4c1lYQnpaUzVuWlhSUGNrTnlaV0YwWlVsdWMzUmhibU5sS0dWc1pXMWxiblFzSUh0Y2JpQWdJQ0FnSUNBZ2RHOW5aMnhsT2lCbVlXeHpaVnh1SUNBZ0lDQWdmU2t1ZEc5bloyeGxLQ2s3WEc0Z0lDQWdmVnh1SUNCOUtUdGNiaUFnTHlvcVhHNGdJQ0FxSUdwUmRXVnllVnh1SUNBZ0tpOWNibHh1SUNCcGJtUmxlQzVrWldacGJtVktVWFZsY25sUWJIVm5hVzRvUTI5c2JHRndjMlVwTzF4dVhHNGdJSEpsZEhWeWJpQkRiMnhzWVhCelpUdGNibHh1ZlNrcE8xeHVMeThqSUhOdmRYSmpaVTFoY0hCcGJtZFZVa3c5WTI5c2JHRndjMlV1YW5NdWJXRndYRzRpTENJdktpRmNiaUFnS2lCQ2IyOTBjM1J5WVhBZ1pHRjBZUzVxY3lCMk5TNHlMak1nS0doMGRIQnpPaTh2WjJWMFltOXZkSE4wY21Gd0xtTnZiUzhwWEc0Z0lDb2dRMjl3ZVhKcFoyaDBJREl3TVRFdE1qQXlNaUJVYUdVZ1FtOXZkSE4wY21Gd0lFRjFkR2h2Y25NZ0tHaDBkSEJ6T2k4dloybDBhSFZpTG1OdmJTOTBkMkp6TDJKdmIzUnpkSEpoY0M5bmNtRndhSE12WTI5dWRISnBZblYwYjNKektWeHVJQ0FxSUV4cFkyVnVjMlZrSUhWdVpHVnlJRTFKVkNBb2FIUjBjSE02THk5bmFYUm9kV0l1WTI5dEwzUjNZbk12WW05dmRITjBjbUZ3TDJKc2IySXZiV0ZwYmk5TVNVTkZUbE5GS1Z4dUlDQXFMMXh1S0daMWJtTjBhVzl1SUNobmJHOWlZV3dzSUdaaFkzUnZjbmtwSUh0Y2JpQWdkSGx3Wlc5bUlHVjRjRzl5ZEhNZ1BUMDlJQ2R2WW1wbFkzUW5JQ1ltSUhSNWNHVnZaaUJ0YjJSMWJHVWdJVDA5SUNkMWJtUmxabWx1WldRbklEOGdiVzlrZFd4bExtVjRjRzl5ZEhNZ1BTQm1ZV04wYjNKNUtDa2dPbHh1SUNCMGVYQmxiMllnWkdWbWFXNWxJRDA5UFNBblpuVnVZM1JwYjI0bklDWW1JR1JsWm1sdVpTNWhiV1FnUHlCa1pXWnBibVVvWm1GamRHOXllU2tnT2x4dUlDQW9aMnh2WW1Gc0lEMGdkSGx3Wlc5bUlHZHNiMkpoYkZSb2FYTWdJVDA5SUNkMWJtUmxabWx1WldRbklEOGdaMnh2WW1Gc1ZHaHBjeUE2SUdkc2IySmhiQ0I4ZkNCelpXeG1MQ0JuYkc5aVlXd3VSR0YwWVNBOUlHWmhZM1J2Y25rb0tTazdYRzU5S1NoMGFHbHpMQ0FvWm5WdVkzUnBiMjRnS0NrZ2V5QW5kWE5sSUhOMGNtbGpkQ2M3WEc1Y2JpQWdMeW9xWEc0Z0lDQXFJQzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0WEc0Z0lDQXFJRUp2YjNSemRISmhjQ0FvZGpVdU1pNHpLVG9nWkc5dEwyUmhkR0V1YW5OY2JpQWdJQ29nVEdsalpXNXpaV1FnZFc1a1pYSWdUVWxVSUNob2RIUndjem92TDJkcGRHaDFZaTVqYjIwdmRIZGljeTlpYjI5MGMzUnlZWEF2WW14dllpOXRZV2x1TDB4SlEwVk9VMFVwWEc0Z0lDQXFJQzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0WEc0Z0lDQXFMMXh1WEc0Z0lDOHFLbHh1SUNBZ0tpQkRiMjV6ZEdGdWRITmNiaUFnSUNvdlhHNGdJR052Ym5OMElHVnNaVzFsYm5STllYQWdQU0J1WlhjZ1RXRndLQ2s3WEc0Z0lHTnZibk4wSUdSaGRHRWdQU0I3WEc0Z0lDQWdjMlYwS0dWc1pXMWxiblFzSUd0bGVTd2dhVzV6ZEdGdVkyVXBJSHRjYmlBZ0lDQWdJR2xtSUNnaFpXeGxiV1Z1ZEUxaGNDNW9ZWE1vWld4bGJXVnVkQ2twSUh0Y2JpQWdJQ0FnSUNBZ1pXeGxiV1Z1ZEUxaGNDNXpaWFFvWld4bGJXVnVkQ3dnYm1WM0lFMWhjQ2dwS1R0Y2JpQWdJQ0FnSUgxY2JseHVJQ0FnSUNBZ1kyOXVjM1FnYVc1emRHRnVZMlZOWVhBZ1BTQmxiR1Z0Wlc1MFRXRndMbWRsZENobGJHVnRaVzUwS1RzZ0x5OGdiV0ZyWlNCcGRDQmpiR1ZoY2lCM1pTQnZibXg1SUhkaGJuUWdiMjVsSUdsdWMzUmhibU5sSUhCbGNpQmxiR1Z0Wlc1MFhHNGdJQ0FnSUNBdkx5QmpZVzRnWW1VZ2NtVnRiM1psWkNCc1lYUmxjaUIzYUdWdUlHMTFiSFJwY0d4bElHdGxlUzlwYm5OMFlXNWpaWE1nWVhKbElHWnBibVVnZEc4Z1ltVWdkWE5sWkZ4dVhHNGdJQ0FnSUNCcFppQW9JV2x1YzNSaGJtTmxUV0Z3TG1oaGN5aHJaWGtwSUNZbUlHbHVjM1JoYm1ObFRXRndMbk5wZW1VZ0lUMDlJREFwSUh0Y2JpQWdJQ0FnSUNBZ0x5OGdaWE5zYVc1MExXUnBjMkZpYkdVdGJtVjRkQzFzYVc1bElHNXZMV052Ym5OdmJHVmNiaUFnSUNBZ0lDQWdZMjl1YzI5c1pTNWxjbkp2Y2loZ1FtOXZkSE4wY21Gd0lHUnZaWE51SjNRZ1lXeHNiM2NnYlc5eVpTQjBhR0Z1SUc5dVpTQnBibk4wWVc1alpTQndaWElnWld4bGJXVnVkQzRnUW05MWJtUWdhVzV6ZEdGdVkyVTZJQ1I3UVhKeVlYa3Vabkp2YlNocGJuTjBZVzVqWlUxaGNDNXJaWGx6S0NrcFd6QmRmUzVnS1R0Y2JpQWdJQ0FnSUNBZ2NtVjBkWEp1TzF4dUlDQWdJQ0FnZlZ4dVhHNGdJQ0FnSUNCcGJuTjBZVzVqWlUxaGNDNXpaWFFvYTJWNUxDQnBibk4wWVc1alpTazdYRzRnSUNBZ2ZTeGNibHh1SUNBZ0lHZGxkQ2hsYkdWdFpXNTBMQ0JyWlhrcElIdGNiaUFnSUNBZ0lHbG1JQ2hsYkdWdFpXNTBUV0Z3TG1oaGN5aGxiR1Z0Wlc1MEtTa2dlMXh1SUNBZ0lDQWdJQ0J5WlhSMWNtNGdaV3hsYldWdWRFMWhjQzVuWlhRb1pXeGxiV1Z1ZENrdVoyVjBLR3RsZVNrZ2ZId2diblZzYkR0Y2JpQWdJQ0FnSUgxY2JseHVJQ0FnSUNBZ2NtVjBkWEp1SUc1MWJHdzdYRzRnSUNBZ2ZTeGNibHh1SUNBZ0lISmxiVzkyWlNobGJHVnRaVzUwTENCclpYa3BJSHRjYmlBZ0lDQWdJR2xtSUNnaFpXeGxiV1Z1ZEUxaGNDNW9ZWE1vWld4bGJXVnVkQ2twSUh0Y2JpQWdJQ0FnSUNBZ2NtVjBkWEp1TzF4dUlDQWdJQ0FnZlZ4dVhHNGdJQ0FnSUNCamIyNXpkQ0JwYm5OMFlXNWpaVTFoY0NBOUlHVnNaVzFsYm5STllYQXVaMlYwS0dWc1pXMWxiblFwTzF4dUlDQWdJQ0FnYVc1emRHRnVZMlZOWVhBdVpHVnNaWFJsS0d0bGVTazdJQzh2SUdaeVpXVWdkWEFnWld4bGJXVnVkQ0J5WldabGNtVnVZMlZ6SUdsbUlIUm9aWEpsSUdGeVpTQnVieUJwYm5OMFlXNWpaWE1nYkdWbWRDQm1iM0lnWVc0Z1pXeGxiV1Z1ZEZ4dVhHNGdJQ0FnSUNCcFppQW9hVzV6ZEdGdVkyVk5ZWEF1YzJsNlpTQTlQVDBnTUNrZ2UxeHVJQ0FnSUNBZ0lDQmxiR1Z0Wlc1MFRXRndMbVJsYkdWMFpTaGxiR1Z0Wlc1MEtUdGNiaUFnSUNBZ0lIMWNiaUFnSUNCOVhHNWNiaUFnZlR0Y2JseHVJQ0J5WlhSMWNtNGdaR0YwWVR0Y2JseHVmU2twTzF4dUx5OGpJSE52ZFhKalpVMWhjSEJwYm1kVlVrdzlaR0YwWVM1cWN5NXRZWEJjYmlJc0lpOHFJVnh1SUNBcUlFSnZiM1J6ZEhKaGNDQmxkbVZ1ZEMxb1lXNWtiR1Z5TG1weklIWTFMakl1TXlBb2FIUjBjSE02THk5blpYUmliMjkwYzNSeVlYQXVZMjl0THlsY2JpQWdLaUJEYjNCNWNtbG5hSFFnTWpBeE1TMHlNREl5SUZSb1pTQkNiMjkwYzNSeVlYQWdRWFYwYUc5eWN5QW9hSFIwY0hNNkx5OW5hWFJvZFdJdVkyOXRMM1IzWW5NdlltOXZkSE4wY21Gd0wyZHlZWEJvY3k5amIyNTBjbWxpZFhSdmNuTXBYRzRnSUNvZ1RHbGpaVzV6WldRZ2RXNWtaWElnVFVsVUlDaG9kSFJ3Y3pvdkwyZHBkR2gxWWk1amIyMHZkSGRpY3k5aWIyOTBjM1J5WVhBdllteHZZaTl0WVdsdUwweEpRMFZPVTBVcFhHNGdJQ292WEc0b1puVnVZM1JwYjI0Z0tHZHNiMkpoYkN3Z1ptRmpkRzl5ZVNrZ2UxeHVJQ0IwZVhCbGIyWWdaWGh3YjNKMGN5QTlQVDBnSjI5aWFtVmpkQ2NnSmlZZ2RIbHdaVzltSUcxdlpIVnNaU0FoUFQwZ0ozVnVaR1ZtYVc1bFpDY2dQeUJ0YjJSMWJHVXVaWGh3YjNKMGN5QTlJR1poWTNSdmNua29jbVZ4ZFdseVpTZ25MaTR2ZFhScGJDOXBibVJsZUNjcEtTQTZYRzRnSUhSNWNHVnZaaUJrWldacGJtVWdQVDA5SUNkbWRXNWpkR2x2YmljZ0ppWWdaR1ZtYVc1bExtRnRaQ0EvSUdSbFptbHVaU2hiSnk0dUwzVjBhV3d2YVc1a1pYZ25YU3dnWm1GamRHOXllU2tnT2x4dUlDQW9aMnh2WW1Gc0lEMGdkSGx3Wlc5bUlHZHNiMkpoYkZSb2FYTWdJVDA5SUNkMWJtUmxabWx1WldRbklEOGdaMnh2WW1Gc1ZHaHBjeUE2SUdkc2IySmhiQ0I4ZkNCelpXeG1MQ0JuYkc5aVlXd3VSWFpsYm5SSVlXNWtiR1Z5SUQwZ1ptRmpkRzl5ZVNobmJHOWlZV3d1U1c1a1pYZ3BLVHRjYm4wcEtIUm9hWE1zSUNobWRXNWpkR2x2YmlBb2FXNWtaWGdwSUhzZ0ozVnpaU0J6ZEhKcFkzUW5PMXh1WEc0Z0lDOHFLbHh1SUNBZ0tpQXRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMVnh1SUNBZ0tpQkNiMjkwYzNSeVlYQWdLSFkxTGpJdU15azZJR1J2YlM5bGRtVnVkQzFvWVc1a2JHVnlMbXB6WEc0Z0lDQXFJRXhwWTJWdWMyVmtJSFZ1WkdWeUlFMUpWQ0FvYUhSMGNITTZMeTluYVhSb2RXSXVZMjl0TDNSM1luTXZZbTl2ZEhOMGNtRndMMkpzYjJJdmJXRnBiaTlNU1VORlRsTkZLVnh1SUNBZ0tpQXRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMVnh1SUNBZ0tpOWNiaUFnTHlvcVhHNGdJQ0FxSUVOdmJuTjBZVzUwYzF4dUlDQWdLaTljYmx4dUlDQmpiMjV6ZENCdVlXMWxjM0JoWTJWU1pXZGxlQ0E5SUM5YlhpNWRLaWcvUFZ4Y0xpNHFLVnhjTG53dUtpODdYRzRnSUdOdmJuTjBJSE4wY21sd1RtRnRaVkpsWjJWNElEMGdMMXhjTGk0cUx6dGNiaUFnWTI5dWMzUWdjM1J5YVhCVmFXUlNaV2RsZUNBOUlDODZPbHhjWkNza0x6dGNiaUFnWTI5dWMzUWdaWFpsYm5SU1pXZHBjM1J5ZVNBOUlIdDlPeUF2THlCRmRtVnVkSE1nYzNSdmNtRm5aVnh1WEc0Z0lHeGxkQ0IxYVdSRmRtVnVkQ0E5SURFN1hHNGdJR052Ym5OMElHTjFjM1J2YlVWMlpXNTBjeUE5SUh0Y2JpQWdJQ0J0YjNWelpXVnVkR1Z5T2lBbmJXOTFjMlZ2ZG1WeUp5eGNiaUFnSUNCdGIzVnpaV3hsWVhabE9pQW5iVzkxYzJWdmRYUW5YRzRnSUgwN1hHNGdJR052Ym5OMElHNWhkR2wyWlVWMlpXNTBjeUE5SUc1bGR5QlRaWFFvV3lkamJHbGpheWNzSUNka1lteGpiR2xqYXljc0lDZHRiM1Z6WlhWd0p5d2dKMjF2ZFhObFpHOTNiaWNzSUNkamIyNTBaWGgwYldWdWRTY3NJQ2R0YjNWelpYZG9aV1ZzSnl3Z0owUlBUVTF2ZFhObFUyTnliMnhzSnl3Z0oyMXZkWE5sYjNabGNpY3NJQ2R0YjNWelpXOTFkQ2NzSUNkdGIzVnpaVzF2ZG1VbkxDQW5jMlZzWldOMGMzUmhjblFuTENBbmMyVnNaV04wWlc1a0p5d2dKMnRsZVdSdmQyNG5MQ0FuYTJWNWNISmxjM01uTENBbmEyVjVkWEFuTENBbmIzSnBaVzUwWVhScGIyNWphR0Z1WjJVbkxDQW5kRzkxWTJoemRHRnlkQ2NzSUNkMGIzVmphRzF2ZG1VbkxDQW5kRzkxWTJobGJtUW5MQ0FuZEc5MVkyaGpZVzVqWld3bkxDQW5jRzlwYm5SbGNtUnZkMjRuTENBbmNHOXBiblJsY20xdmRtVW5MQ0FuY0c5cGJuUmxjblZ3Snl3Z0ozQnZhVzUwWlhKc1pXRjJaU2NzSUNkd2IybHVkR1Z5WTJGdVkyVnNKeXdnSjJkbGMzUjFjbVZ6ZEdGeWRDY3NJQ2RuWlhOMGRYSmxZMmhoYm1kbEp5d2dKMmRsYzNSMWNtVmxibVFuTENBblptOWpkWE1uTENBbllteDFjaWNzSUNkamFHRnVaMlVuTENBbmNtVnpaWFFuTENBbmMyVnNaV04wSnl3Z0ozTjFZbTFwZENjc0lDZG1iMk4xYzJsdUp5d2dKMlp2WTNWemIzVjBKeXdnSjJ4dllXUW5MQ0FuZFc1c2IyRmtKeXdnSjJKbFptOXlaWFZ1Ykc5aFpDY3NJQ2R5WlhOcGVtVW5MQ0FuYlc5MlpTY3NJQ2RFVDAxRGIyNTBaVzUwVEc5aFpHVmtKeXdnSjNKbFlXUjVjM1JoZEdWamFHRnVaMlVuTENBblpYSnliM0luTENBbllXSnZjblFuTENBbmMyTnliMnhzSjEwcE8xeHVJQ0F2S2lwY2JpQWdJQ29nVUhKcGRtRjBaU0J0WlhSb2IyUnpYRzRnSUNBcUwxeHVYRzRnSUdaMWJtTjBhVzl1SUcxaGEyVkZkbVZ1ZEZWcFpDaGxiR1Z0Wlc1MExDQjFhV1FwSUh0Y2JpQWdJQ0J5WlhSMWNtNGdkV2xrSUNZbUlHQWtlM1ZwWkgwNk9pUjdkV2xrUlhabGJuUXJLMzFnSUh4OElHVnNaVzFsYm5RdWRXbGtSWFpsYm5RZ2ZId2dkV2xrUlhabGJuUXJLenRjYmlBZ2ZWeHVYRzRnSUdaMWJtTjBhVzl1SUdkbGRFVnNaVzFsYm5SRmRtVnVkSE1vWld4bGJXVnVkQ2tnZTF4dUlDQWdJR052Ym5OMElIVnBaQ0E5SUcxaGEyVkZkbVZ1ZEZWcFpDaGxiR1Z0Wlc1MEtUdGNiaUFnSUNCbGJHVnRaVzUwTG5WcFpFVjJaVzUwSUQwZ2RXbGtPMXh1SUNBZ0lHVjJaVzUwVW1WbmFYTjBjbmxiZFdsa1hTQTlJR1YyWlc1MFVtVm5hWE4wY25sYmRXbGtYU0I4ZkNCN2ZUdGNiaUFnSUNCeVpYUjFjbTRnWlhabGJuUlNaV2RwYzNSeWVWdDFhV1JkTzF4dUlDQjlYRzVjYmlBZ1puVnVZM1JwYjI0Z1ltOXZkSE4wY21Gd1NHRnVaR3hsY2lobGJHVnRaVzUwTENCbWJpa2dlMXh1SUNBZ0lISmxkSFZ5YmlCbWRXNWpkR2x2YmlCb1lXNWtiR1Z5S0dWMlpXNTBLU0I3WEc0Z0lDQWdJQ0JvZVdSeVlYUmxUMkpxS0dWMlpXNTBMQ0I3WEc0Z0lDQWdJQ0FnSUdSbGJHVm5ZWFJsVkdGeVoyVjBPaUJsYkdWdFpXNTBYRzRnSUNBZ0lDQjlLVHRjYmx4dUlDQWdJQ0FnYVdZZ0tHaGhibVJzWlhJdWIyNWxUMlptS1NCN1hHNGdJQ0FnSUNBZ0lFVjJaVzUwU0dGdVpHeGxjaTV2Wm1Zb1pXeGxiV1Z1ZEN3Z1pYWmxiblF1ZEhsd1pTd2dabTRwTzF4dUlDQWdJQ0FnZlZ4dVhHNGdJQ0FnSUNCeVpYUjFjbTRnWm00dVlYQndiSGtvWld4bGJXVnVkQ3dnVzJWMlpXNTBYU2s3WEc0Z0lDQWdmVHRjYmlBZ2ZWeHVYRzRnSUdaMWJtTjBhVzl1SUdKdmIzUnpkSEpoY0VSbGJHVm5ZWFJwYjI1SVlXNWtiR1Z5S0dWc1pXMWxiblFzSUhObGJHVmpkRzl5TENCbWJpa2dlMXh1SUNBZ0lISmxkSFZ5YmlCbWRXNWpkR2x2YmlCb1lXNWtiR1Z5S0dWMlpXNTBLU0I3WEc0Z0lDQWdJQ0JqYjI1emRDQmtiMjFGYkdWdFpXNTBjeUE5SUdWc1pXMWxiblF1Y1hWbGNubFRaV3hsWTNSdmNrRnNiQ2h6Wld4bFkzUnZjaWs3WEc1Y2JpQWdJQ0FnSUdadmNpQW9iR1YwSUh0Y2JpQWdJQ0FnSUNBZ2RHRnlaMlYwWEc0Z0lDQWdJQ0I5SUQwZ1pYWmxiblE3SUhSaGNtZGxkQ0FtSmlCMFlYSm5aWFFnSVQwOUlIUm9hWE03SUhSaGNtZGxkQ0E5SUhSaGNtZGxkQzV3WVhKbGJuUk9iMlJsS1NCN1hHNGdJQ0FnSUNBZ0lHWnZjaUFvWTI5dWMzUWdaRzl0Uld4bGJXVnVkQ0J2WmlCa2IyMUZiR1Z0Wlc1MGN5a2dlMXh1SUNBZ0lDQWdJQ0FnSUdsbUlDaGtiMjFGYkdWdFpXNTBJQ0U5UFNCMFlYSm5aWFFwSUh0Y2JpQWdJQ0FnSUNBZ0lDQWdJR052Ym5ScGJuVmxPMXh1SUNBZ0lDQWdJQ0FnSUgxY2JseHVJQ0FnSUNBZ0lDQWdJR2g1WkhKaGRHVlBZbW9vWlhabGJuUXNJSHRjYmlBZ0lDQWdJQ0FnSUNBZ0lHUmxiR1ZuWVhSbFZHRnlaMlYwT2lCMFlYSm5aWFJjYmlBZ0lDQWdJQ0FnSUNCOUtUdGNibHh1SUNBZ0lDQWdJQ0FnSUdsbUlDaG9ZVzVrYkdWeUxtOXVaVTltWmlrZ2UxeHVJQ0FnSUNBZ0lDQWdJQ0FnUlhabGJuUklZVzVrYkdWeUxtOW1aaWhsYkdWdFpXNTBMQ0JsZG1WdWRDNTBlWEJsTENCelpXeGxZM1J2Y2l3Z1ptNHBPMXh1SUNBZ0lDQWdJQ0FnSUgxY2JseHVJQ0FnSUNBZ0lDQWdJSEpsZEhWeWJpQm1iaTVoY0hCc2VTaDBZWEpuWlhRc0lGdGxkbVZ1ZEYwcE8xeHVJQ0FnSUNBZ0lDQjlYRzRnSUNBZ0lDQjlYRzRnSUNBZ2ZUdGNiaUFnZlZ4dVhHNGdJR1oxYm1OMGFXOXVJR1pwYm1SSVlXNWtiR1Z5S0dWMlpXNTBjeXdnWTJGc2JHRmliR1VzSUdSbGJHVm5ZWFJwYjI1VFpXeGxZM1J2Y2lBOUlHNTFiR3dwSUh0Y2JpQWdJQ0J5WlhSMWNtNGdUMkpxWldOMExuWmhiSFZsY3lobGRtVnVkSE1wTG1acGJtUW9aWFpsYm5RZ1BUNGdaWFpsYm5RdVkyRnNiR0ZpYkdVZ1BUMDlJR05oYkd4aFlteGxJQ1ltSUdWMlpXNTBMbVJsYkdWbllYUnBiMjVUWld4bFkzUnZjaUE5UFQwZ1pHVnNaV2RoZEdsdmJsTmxiR1ZqZEc5eUtUdGNiaUFnZlZ4dVhHNGdJR1oxYm1OMGFXOXVJRzV2Y20xaGJHbDZaVkJoY21GdFpYUmxjbk1vYjNKcFoybHVZV3hVZVhCbFJYWmxiblFzSUdoaGJtUnNaWElzSUdSbGJHVm5ZWFJwYjI1R2RXNWpkR2x2YmlrZ2UxeHVJQ0FnSUdOdmJuTjBJR2x6UkdWc1pXZGhkR1ZrSUQwZ2RIbHdaVzltSUdoaGJtUnNaWElnUFQwOUlDZHpkSEpwYm1jbk95QXZMeUIwYjJSdk9pQjBiMjlzZEdsd0lIQmhjM05sY3lCZ1ptRnNjMlZnSUdsdWMzUmxZV1FnYjJZZ2MyVnNaV04wYjNJc0lITnZJSGRsSUc1bFpXUWdkRzhnWTJobFkydGNibHh1SUNBZ0lHTnZibk4wSUdOaGJHeGhZbXhsSUQwZ2FYTkVaV3hsWjJGMFpXUWdQeUJrWld4bFoyRjBhVzl1Um5WdVkzUnBiMjRnT2lCb1lXNWtiR1Z5SUh4OElHUmxiR1ZuWVhScGIyNUdkVzVqZEdsdmJqdGNiaUFnSUNCc1pYUWdkSGx3WlVWMlpXNTBJRDBnWjJWMFZIbHdaVVYyWlc1MEtHOXlhV2RwYm1Gc1ZIbHdaVVYyWlc1MEtUdGNibHh1SUNBZ0lHbG1JQ2doYm1GMGFYWmxSWFpsYm5SekxtaGhjeWgwZVhCbFJYWmxiblFwS1NCN1hHNGdJQ0FnSUNCMGVYQmxSWFpsYm5RZ1BTQnZjbWxuYVc1aGJGUjVjR1ZGZG1WdWREdGNiaUFnSUNCOVhHNWNiaUFnSUNCeVpYUjFjbTRnVzJselJHVnNaV2RoZEdWa0xDQmpZV3hzWVdKc1pTd2dkSGx3WlVWMlpXNTBYVHRjYmlBZ2ZWeHVYRzRnSUdaMWJtTjBhVzl1SUdGa1pFaGhibVJzWlhJb1pXeGxiV1Z1ZEN3Z2IzSnBaMmx1WVd4VWVYQmxSWFpsYm5Rc0lHaGhibVJzWlhJc0lHUmxiR1ZuWVhScGIyNUdkVzVqZEdsdmJpd2diMjVsVDJabUtTQjdYRzRnSUNBZ2FXWWdLSFI1Y0dWdlppQnZjbWxuYVc1aGJGUjVjR1ZGZG1WdWRDQWhQVDBnSjNOMGNtbHVaeWNnZkh3Z0lXVnNaVzFsYm5RcElIdGNiaUFnSUNBZ0lISmxkSFZ5Ymp0Y2JpQWdJQ0I5WEc1Y2JpQWdJQ0JzWlhRZ1cybHpSR1ZzWldkaGRHVmtMQ0JqWVd4c1lXSnNaU3dnZEhsd1pVVjJaVzUwWFNBOUlHNXZjbTFoYkdsNlpWQmhjbUZ0WlhSbGNuTW9iM0pwWjJsdVlXeFVlWEJsUlhabGJuUXNJR2hoYm1Sc1pYSXNJR1JsYkdWbllYUnBiMjVHZFc1amRHbHZiaWs3SUM4dklHbHVJR05oYzJVZ2IyWWdiVzkxYzJWbGJuUmxjaUJ2Y2lCdGIzVnpaV3hsWVhabElIZHlZWEFnZEdobElHaGhibVJzWlhJZ2QybDBhR2x1SUdFZ1puVnVZM1JwYjI0Z2RHaGhkQ0JqYUdWamEzTWdabTl5SUdsMGN5QkVUMDBnY0c5emFYUnBiMjVjYmlBZ0lDQXZMeUIwYUdseklIQnlaWFpsYm5SeklIUm9aU0JvWVc1a2JHVnlJR1p5YjIwZ1ltVnBibWNnWkdsemNHRjBZMmhsWkNCMGFHVWdjMkZ0WlNCM1lYa2dZWE1nYlc5MWMyVnZkbVZ5SUc5eUlHMXZkWE5sYjNWMElHUnZaWE5jYmx4dUlDQWdJR2xtSUNodmNtbG5hVzVoYkZSNWNHVkZkbVZ1ZENCcGJpQmpkWE4wYjIxRmRtVnVkSE1wSUh0Y2JpQWdJQ0FnSUdOdmJuTjBJSGR5WVhCR2RXNWpkR2x2YmlBOUlHWnVJRDArSUh0Y2JpQWdJQ0FnSUNBZ2NtVjBkWEp1SUdaMWJtTjBhVzl1SUNobGRtVnVkQ2tnZTF4dUlDQWdJQ0FnSUNBZ0lHbG1JQ2doWlhabGJuUXVjbVZzWVhSbFpGUmhjbWRsZENCOGZDQmxkbVZ1ZEM1eVpXeGhkR1ZrVkdGeVoyVjBJQ0U5UFNCbGRtVnVkQzVrWld4bFoyRjBaVlJoY21kbGRDQW1KaUFoWlhabGJuUXVaR1ZzWldkaGRHVlVZWEpuWlhRdVkyOXVkR0ZwYm5Nb1pYWmxiblF1Y21Wc1lYUmxaRlJoY21kbGRDa3BJSHRjYmlBZ0lDQWdJQ0FnSUNBZ0lISmxkSFZ5YmlCbWJpNWpZV3hzS0hSb2FYTXNJR1YyWlc1MEtUdGNiaUFnSUNBZ0lDQWdJQ0I5WEc0Z0lDQWdJQ0FnSUgwN1hHNGdJQ0FnSUNCOU8xeHVYRzRnSUNBZ0lDQmpZV3hzWVdKc1pTQTlJSGR5WVhCR2RXNWpkR2x2YmloallXeHNZV0pzWlNrN1hHNGdJQ0FnZlZ4dVhHNGdJQ0FnWTI5dWMzUWdaWFpsYm5SeklEMGdaMlYwUld4bGJXVnVkRVYyWlc1MGN5aGxiR1Z0Wlc1MEtUdGNiaUFnSUNCamIyNXpkQ0JvWVc1a2JHVnljeUE5SUdWMlpXNTBjMXQwZVhCbFJYWmxiblJkSUh4OElDaGxkbVZ1ZEhOYmRIbHdaVVYyWlc1MFhTQTlJSHQ5S1R0Y2JpQWdJQ0JqYjI1emRDQndjbVYyYVc5MWMwWjFibU4wYVc5dUlEMGdabWx1WkVoaGJtUnNaWElvYUdGdVpHeGxjbk1zSUdOaGJHeGhZbXhsTENCcGMwUmxiR1ZuWVhSbFpDQS9JR2hoYm1Sc1pYSWdPaUJ1ZFd4c0tUdGNibHh1SUNBZ0lHbG1JQ2h3Y21WMmFXOTFjMFoxYm1OMGFXOXVLU0I3WEc0Z0lDQWdJQ0J3Y21WMmFXOTFjMFoxYm1OMGFXOXVMbTl1WlU5bVppQTlJSEJ5WlhacGIzVnpSblZ1WTNScGIyNHViMjVsVDJabUlDWW1JRzl1WlU5bVpqdGNiaUFnSUNBZ0lISmxkSFZ5Ymp0Y2JpQWdJQ0I5WEc1Y2JpQWdJQ0JqYjI1emRDQjFhV1FnUFNCdFlXdGxSWFpsYm5SVmFXUW9ZMkZzYkdGaWJHVXNJRzl5YVdkcGJtRnNWSGx3WlVWMlpXNTBMbkpsY0d4aFkyVW9ibUZ0WlhOd1lXTmxVbVZuWlhnc0lDY25LU2s3WEc0Z0lDQWdZMjl1YzNRZ1ptNGdQU0JwYzBSbGJHVm5ZWFJsWkNBL0lHSnZiM1J6ZEhKaGNFUmxiR1ZuWVhScGIyNUlZVzVrYkdWeUtHVnNaVzFsYm5Rc0lHaGhibVJzWlhJc0lHTmhiR3hoWW14bEtTQTZJR0p2YjNSemRISmhjRWhoYm1Sc1pYSW9aV3hsYldWdWRDd2dZMkZzYkdGaWJHVXBPMXh1SUNBZ0lHWnVMbVJsYkdWbllYUnBiMjVUWld4bFkzUnZjaUE5SUdselJHVnNaV2RoZEdWa0lEOGdhR0Z1Wkd4bGNpQTZJRzUxYkd3N1hHNGdJQ0FnWm00dVkyRnNiR0ZpYkdVZ1BTQmpZV3hzWVdKc1pUdGNiaUFnSUNCbWJpNXZibVZQWm1ZZ1BTQnZibVZQWm1ZN1hHNGdJQ0FnWm00dWRXbGtSWFpsYm5RZ1BTQjFhV1E3WEc0Z0lDQWdhR0Z1Wkd4bGNuTmJkV2xrWFNBOUlHWnVPMXh1SUNBZ0lHVnNaVzFsYm5RdVlXUmtSWFpsYm5STWFYTjBaVzVsY2loMGVYQmxSWFpsYm5Rc0lHWnVMQ0JwYzBSbGJHVm5ZWFJsWkNrN1hHNGdJSDFjYmx4dUlDQm1kVzVqZEdsdmJpQnlaVzF2ZG1WSVlXNWtiR1Z5S0dWc1pXMWxiblFzSUdWMlpXNTBjeXdnZEhsd1pVVjJaVzUwTENCb1lXNWtiR1Z5TENCa1pXeGxaMkYwYVc5dVUyVnNaV04wYjNJcElIdGNiaUFnSUNCamIyNXpkQ0JtYmlBOUlHWnBibVJJWVc1a2JHVnlLR1YyWlc1MGMxdDBlWEJsUlhabGJuUmRMQ0JvWVc1a2JHVnlMQ0JrWld4bFoyRjBhVzl1VTJWc1pXTjBiM0lwTzF4dVhHNGdJQ0FnYVdZZ0tDRm1iaWtnZTF4dUlDQWdJQ0FnY21WMGRYSnVPMXh1SUNBZ0lIMWNibHh1SUNBZ0lHVnNaVzFsYm5RdWNtVnRiM1psUlhabGJuUk1hWE4wWlc1bGNpaDBlWEJsUlhabGJuUXNJR1p1TENCQ2IyOXNaV0Z1S0dSbGJHVm5ZWFJwYjI1VFpXeGxZM1J2Y2lrcE8xeHVJQ0FnSUdSbGJHVjBaU0JsZG1WdWRITmJkSGx3WlVWMlpXNTBYVnRtYmk1MWFXUkZkbVZ1ZEYwN1hHNGdJSDFjYmx4dUlDQm1kVzVqZEdsdmJpQnlaVzF2ZG1WT1lXMWxjM0JoWTJWa1NHRnVaR3hsY25Nb1pXeGxiV1Z1ZEN3Z1pYWmxiblJ6TENCMGVYQmxSWFpsYm5Rc0lHNWhiV1Z6Y0dGalpTa2dlMXh1SUNBZ0lHTnZibk4wSUhOMGIzSmxSV3hsYldWdWRFVjJaVzUwSUQwZ1pYWmxiblJ6VzNSNWNHVkZkbVZ1ZEYwZ2ZId2dlMzA3WEc1Y2JpQWdJQ0JtYjNJZ0tHTnZibk4wSUdoaGJtUnNaWEpMWlhrZ2IyWWdUMkpxWldOMExtdGxlWE1vYzNSdmNtVkZiR1Z0Wlc1MFJYWmxiblFwS1NCN1hHNGdJQ0FnSUNCcFppQW9hR0Z1Wkd4bGNrdGxlUzVwYm1Oc2RXUmxjeWh1WVcxbGMzQmhZMlVwS1NCN1hHNGdJQ0FnSUNBZ0lHTnZibk4wSUdWMlpXNTBJRDBnYzNSdmNtVkZiR1Z0Wlc1MFJYWmxiblJiYUdGdVpHeGxja3RsZVYwN1hHNGdJQ0FnSUNBZ0lISmxiVzkyWlVoaGJtUnNaWElvWld4bGJXVnVkQ3dnWlhabGJuUnpMQ0IwZVhCbFJYWmxiblFzSUdWMlpXNTBMbU5oYkd4aFlteGxMQ0JsZG1WdWRDNWtaV3hsWjJGMGFXOXVVMlZzWldOMGIzSXBPMXh1SUNBZ0lDQWdmVnh1SUNBZ0lIMWNiaUFnZlZ4dVhHNGdJR1oxYm1OMGFXOXVJR2RsZEZSNWNHVkZkbVZ1ZENobGRtVnVkQ2tnZTF4dUlDQWdJQzh2SUdGc2JHOTNJSFJ2SUdkbGRDQjBhR1VnYm1GMGFYWmxJR1YyWlc1MGN5Qm1jbTl0SUc1aGJXVnpjR0ZqWldRZ1pYWmxiblJ6SUNnblkyeHBZMnN1WW5NdVluVjBkRzl1SnlBdExUNGdKMk5zYVdOckp5bGNiaUFnSUNCbGRtVnVkQ0E5SUdWMlpXNTBMbkpsY0d4aFkyVW9jM1J5YVhCT1lXMWxVbVZuWlhnc0lDY25LVHRjYmlBZ0lDQnlaWFIxY200Z1kzVnpkRzl0UlhabGJuUnpXMlYyWlc1MFhTQjhmQ0JsZG1WdWREdGNiaUFnZlZ4dVhHNGdJR052Ym5OMElFVjJaVzUwU0dGdVpHeGxjaUE5SUh0Y2JpQWdJQ0J2YmlobGJHVnRaVzUwTENCbGRtVnVkQ3dnYUdGdVpHeGxjaXdnWkdWc1pXZGhkR2x2YmtaMWJtTjBhVzl1S1NCN1hHNGdJQ0FnSUNCaFpHUklZVzVrYkdWeUtHVnNaVzFsYm5Rc0lHVjJaVzUwTENCb1lXNWtiR1Z5TENCa1pXeGxaMkYwYVc5dVJuVnVZM1JwYjI0c0lHWmhiSE5sS1R0Y2JpQWdJQ0I5TEZ4dVhHNGdJQ0FnYjI1bEtHVnNaVzFsYm5Rc0lHVjJaVzUwTENCb1lXNWtiR1Z5TENCa1pXeGxaMkYwYVc5dVJuVnVZM1JwYjI0cElIdGNiaUFnSUNBZ0lHRmtaRWhoYm1Sc1pYSW9aV3hsYldWdWRDd2daWFpsYm5Rc0lHaGhibVJzWlhJc0lHUmxiR1ZuWVhScGIyNUdkVzVqZEdsdmJpd2dkSEoxWlNrN1hHNGdJQ0FnZlN4Y2JseHVJQ0FnSUc5bVppaGxiR1Z0Wlc1MExDQnZjbWxuYVc1aGJGUjVjR1ZGZG1WdWRDd2dhR0Z1Wkd4bGNpd2daR1ZzWldkaGRHbHZia1oxYm1OMGFXOXVLU0I3WEc0Z0lDQWdJQ0JwWmlBb2RIbHdaVzltSUc5eWFXZHBibUZzVkhsd1pVVjJaVzUwSUNFOVBTQW5jM1J5YVc1bkp5QjhmQ0FoWld4bGJXVnVkQ2tnZTF4dUlDQWdJQ0FnSUNCeVpYUjFjbTQ3WEc0Z0lDQWdJQ0I5WEc1Y2JpQWdJQ0FnSUdOdmJuTjBJRnRwYzBSbGJHVm5ZWFJsWkN3Z1kyRnNiR0ZpYkdVc0lIUjVjR1ZGZG1WdWRGMGdQU0J1YjNKdFlXeHBlbVZRWVhKaGJXVjBaWEp6S0c5eWFXZHBibUZzVkhsd1pVVjJaVzUwTENCb1lXNWtiR1Z5TENCa1pXeGxaMkYwYVc5dVJuVnVZM1JwYjI0cE8xeHVJQ0FnSUNBZ1kyOXVjM1FnYVc1T1lXMWxjM0JoWTJVZ1BTQjBlWEJsUlhabGJuUWdJVDA5SUc5eWFXZHBibUZzVkhsd1pVVjJaVzUwTzF4dUlDQWdJQ0FnWTI5dWMzUWdaWFpsYm5SeklEMGdaMlYwUld4bGJXVnVkRVYyWlc1MGN5aGxiR1Z0Wlc1MEtUdGNiaUFnSUNBZ0lHTnZibk4wSUhOMGIzSmxSV3hsYldWdWRFVjJaVzUwSUQwZ1pYWmxiblJ6VzNSNWNHVkZkbVZ1ZEYwZ2ZId2dlMzA3WEc0Z0lDQWdJQ0JqYjI1emRDQnBjMDVoYldWemNHRmpaU0E5SUc5eWFXZHBibUZzVkhsd1pVVjJaVzUwTG5OMFlYSjBjMWRwZEdnb0p5NG5LVHRjYmx4dUlDQWdJQ0FnYVdZZ0tIUjVjR1Z2WmlCallXeHNZV0pzWlNBaFBUMGdKM1Z1WkdWbWFXNWxaQ2NwSUh0Y2JpQWdJQ0FnSUNBZ0x5OGdVMmx0Y0d4bGMzUWdZMkZ6WlRvZ2FHRnVaR3hsY2lCcGN5QndZWE56WldRc0lISmxiVzkyWlNCMGFHRjBJR3hwYzNSbGJtVnlJRTlPVEZrdVhHNGdJQ0FnSUNBZ0lHbG1JQ2doVDJKcVpXTjBMbXRsZVhNb2MzUnZjbVZGYkdWdFpXNTBSWFpsYm5RcExteGxibWQwYUNrZ2UxeHVJQ0FnSUNBZ0lDQWdJSEpsZEhWeWJqdGNiaUFnSUNBZ0lDQWdmVnh1WEc0Z0lDQWdJQ0FnSUhKbGJXOTJaVWhoYm1Sc1pYSW9aV3hsYldWdWRDd2daWFpsYm5SekxDQjBlWEJsUlhabGJuUXNJR05oYkd4aFlteGxMQ0JwYzBSbGJHVm5ZWFJsWkNBL0lHaGhibVJzWlhJZ09pQnVkV3hzS1R0Y2JpQWdJQ0FnSUNBZ2NtVjBkWEp1TzF4dUlDQWdJQ0FnZlZ4dVhHNGdJQ0FnSUNCcFppQW9hWE5PWVcxbGMzQmhZMlVwSUh0Y2JpQWdJQ0FnSUNBZ1ptOXlJQ2hqYjI1emRDQmxiR1Z0Wlc1MFJYWmxiblFnYjJZZ1QySnFaV04wTG10bGVYTW9aWFpsYm5SektTa2dlMXh1SUNBZ0lDQWdJQ0FnSUhKbGJXOTJaVTVoYldWemNHRmpaV1JJWVc1a2JHVnljeWhsYkdWdFpXNTBMQ0JsZG1WdWRITXNJR1ZzWlcxbGJuUkZkbVZ1ZEN3Z2IzSnBaMmx1WVd4VWVYQmxSWFpsYm5RdWMyeHBZMlVvTVNrcE8xeHVJQ0FnSUNBZ0lDQjlYRzRnSUNBZ0lDQjlYRzVjYmlBZ0lDQWdJR1p2Y2lBb1kyOXVjM1FnYTJWNVNHRnVaR3hsY25NZ2IyWWdUMkpxWldOMExtdGxlWE1vYzNSdmNtVkZiR1Z0Wlc1MFJYWmxiblFwS1NCN1hHNGdJQ0FnSUNBZ0lHTnZibk4wSUdoaGJtUnNaWEpMWlhrZ1BTQnJaWGxJWVc1a2JHVnljeTV5WlhCc1lXTmxLSE4wY21sd1ZXbGtVbVZuWlhnc0lDY25LVHRjYmx4dUlDQWdJQ0FnSUNCcFppQW9JV2x1VG1GdFpYTndZV05sSUh4OElHOXlhV2RwYm1Gc1ZIbHdaVVYyWlc1MExtbHVZMngxWkdWektHaGhibVJzWlhKTFpYa3BLU0I3WEc0Z0lDQWdJQ0FnSUNBZ1kyOXVjM1FnWlhabGJuUWdQU0J6ZEc5eVpVVnNaVzFsYm5SRmRtVnVkRnRyWlhsSVlXNWtiR1Z5YzEwN1hHNGdJQ0FnSUNBZ0lDQWdjbVZ0YjNabFNHRnVaR3hsY2lobGJHVnRaVzUwTENCbGRtVnVkSE1zSUhSNWNHVkZkbVZ1ZEN3Z1pYWmxiblF1WTJGc2JHRmliR1VzSUdWMlpXNTBMbVJsYkdWbllYUnBiMjVUWld4bFkzUnZjaWs3WEc0Z0lDQWdJQ0FnSUgxY2JpQWdJQ0FnSUgxY2JpQWdJQ0I5TEZ4dVhHNGdJQ0FnZEhKcFoyZGxjaWhsYkdWdFpXNTBMQ0JsZG1WdWRDd2dZWEpuY3lrZ2UxeHVJQ0FnSUNBZ2FXWWdLSFI1Y0dWdlppQmxkbVZ1ZENBaFBUMGdKM04wY21sdVp5Y2dmSHdnSVdWc1pXMWxiblFwSUh0Y2JpQWdJQ0FnSUNBZ2NtVjBkWEp1SUc1MWJHdzdYRzRnSUNBZ0lDQjlYRzVjYmlBZ0lDQWdJR052Ym5OMElDUWdQU0JwYm1SbGVDNW5aWFJxVVhWbGNua29LVHRjYmlBZ0lDQWdJR052Ym5OMElIUjVjR1ZGZG1WdWRDQTlJR2RsZEZSNWNHVkZkbVZ1ZENobGRtVnVkQ2s3WEc0Z0lDQWdJQ0JqYjI1emRDQnBiazVoYldWemNHRmpaU0E5SUdWMlpXNTBJQ0U5UFNCMGVYQmxSWFpsYm5RN1hHNGdJQ0FnSUNCc1pYUWdhbEYxWlhKNVJYWmxiblFnUFNCdWRXeHNPMXh1SUNBZ0lDQWdiR1YwSUdKMVltSnNaWE1nUFNCMGNuVmxPMXh1SUNBZ0lDQWdiR1YwSUc1aGRHbDJaVVJwYzNCaGRHTm9JRDBnZEhKMVpUdGNiaUFnSUNBZ0lHeGxkQ0JrWldaaGRXeDBVSEpsZG1WdWRHVmtJRDBnWm1Gc2MyVTdYRzVjYmlBZ0lDQWdJR2xtSUNocGJrNWhiV1Z6Y0dGalpTQW1KaUFrS1NCN1hHNGdJQ0FnSUNBZ0lHcFJkV1Z5ZVVWMlpXNTBJRDBnSkM1RmRtVnVkQ2hsZG1WdWRDd2dZWEpuY3lrN1hHNGdJQ0FnSUNBZ0lDUW9aV3hsYldWdWRDa3VkSEpwWjJkbGNpaHFVWFZsY25sRmRtVnVkQ2s3WEc0Z0lDQWdJQ0FnSUdKMVltSnNaWE1nUFNBaGFsRjFaWEo1UlhabGJuUXVhWE5RY205d1lXZGhkR2x2YmxOMGIzQndaV1FvS1R0Y2JpQWdJQ0FnSUNBZ2JtRjBhWFpsUkdsemNHRjBZMmdnUFNBaGFsRjFaWEo1UlhabGJuUXVhWE5KYlcxbFpHbGhkR1ZRY205d1lXZGhkR2x2YmxOMGIzQndaV1FvS1R0Y2JpQWdJQ0FnSUNBZ1pHVm1ZWFZzZEZCeVpYWmxiblJsWkNBOUlHcFJkV1Z5ZVVWMlpXNTBMbWx6UkdWbVlYVnNkRkJ5WlhabGJuUmxaQ2dwTzF4dUlDQWdJQ0FnZlZ4dVhHNGdJQ0FnSUNCc1pYUWdaWFowSUQwZ2JtVjNJRVYyWlc1MEtHVjJaVzUwTENCN1hHNGdJQ0FnSUNBZ0lHSjFZbUpzWlhNc1hHNGdJQ0FnSUNBZ0lHTmhibU5sYkdGaWJHVTZJSFJ5ZFdWY2JpQWdJQ0FnSUgwcE8xeHVJQ0FnSUNBZ1pYWjBJRDBnYUhsa2NtRjBaVTlpYWlobGRuUXNJR0Z5WjNNcE8xeHVYRzRnSUNBZ0lDQnBaaUFvWkdWbVlYVnNkRkJ5WlhabGJuUmxaQ2tnZTF4dUlDQWdJQ0FnSUNCbGRuUXVjSEpsZG1WdWRFUmxabUYxYkhRb0tUdGNiaUFnSUNBZ0lIMWNibHh1SUNBZ0lDQWdhV1lnS0c1aGRHbDJaVVJwYzNCaGRHTm9LU0I3WEc0Z0lDQWdJQ0FnSUdWc1pXMWxiblF1WkdsemNHRjBZMmhGZG1WdWRDaGxkblFwTzF4dUlDQWdJQ0FnZlZ4dVhHNGdJQ0FnSUNCcFppQW9aWFowTG1SbFptRjFiSFJRY21WMlpXNTBaV1FnSmlZZ2FsRjFaWEo1UlhabGJuUXBJSHRjYmlBZ0lDQWdJQ0FnYWxGMVpYSjVSWFpsYm5RdWNISmxkbVZ1ZEVSbFptRjFiSFFvS1R0Y2JpQWdJQ0FnSUgxY2JseHVJQ0FnSUNBZ2NtVjBkWEp1SUdWMmREdGNiaUFnSUNCOVhHNWNiaUFnZlR0Y2JseHVJQ0JtZFc1amRHbHZiaUJvZVdSeVlYUmxUMkpxS0c5aWFpd2diV1YwWVNrZ2UxeHVJQ0FnSUdadmNpQW9ZMjl1YzNRZ1cydGxlU3dnZG1Gc2RXVmRJRzltSUU5aWFtVmpkQzVsYm5SeWFXVnpLRzFsZEdFZ2ZId2dlMzBwS1NCN1hHNGdJQ0FnSUNCMGNua2dlMXh1SUNBZ0lDQWdJQ0J2WW1wYmEyVjVYU0E5SUhaaGJIVmxPMXh1SUNBZ0lDQWdmU0JqWVhSamFDQW9YM1Z1ZFhObFpDa2dlMXh1SUNBZ0lDQWdJQ0JQWW1wbFkzUXVaR1ZtYVc1bFVISnZjR1Z5ZEhrb2IySnFMQ0JyWlhrc0lIdGNiaUFnSUNBZ0lDQWdJQ0JqYjI1bWFXZDFjbUZpYkdVNklIUnlkV1VzWEc1Y2JpQWdJQ0FnSUNBZ0lDQm5aWFFvS1NCN1hHNGdJQ0FnSUNBZ0lDQWdJQ0J5WlhSMWNtNGdkbUZzZFdVN1hHNGdJQ0FnSUNBZ0lDQWdmVnh1WEc0Z0lDQWdJQ0FnSUgwcE8xeHVJQ0FnSUNBZ2ZWeHVJQ0FnSUgxY2JseHVJQ0FnSUhKbGRIVnliaUJ2WW1vN1hHNGdJSDFjYmx4dUlDQnlaWFIxY200Z1JYWmxiblJJWVc1a2JHVnlPMXh1WEc1OUtTazdYRzR2THlNZ2MyOTFjbU5sVFdGd2NHbHVaMVZTVEQxbGRtVnVkQzFvWVc1a2JHVnlMbXB6TG0xaGNGeHVJaXdpTHlvaFhHNGdJQ29nUW05dmRITjBjbUZ3SUcxaGJtbHdkV3hoZEc5eUxtcHpJSFkxTGpJdU15QW9hSFIwY0hNNkx5OW5aWFJpYjI5MGMzUnlZWEF1WTI5dEx5bGNiaUFnS2lCRGIzQjVjbWxuYUhRZ01qQXhNUzB5TURJeUlGUm9aU0JDYjI5MGMzUnlZWEFnUVhWMGFHOXljeUFvYUhSMGNITTZMeTluYVhSb2RXSXVZMjl0TDNSM1luTXZZbTl2ZEhOMGNtRndMMmR5WVhCb2N5OWpiMjUwY21saWRYUnZjbk1wWEc0Z0lDb2dUR2xqWlc1elpXUWdkVzVrWlhJZ1RVbFVJQ2hvZEhSd2N6b3ZMMmRwZEdoMVlpNWpiMjB2ZEhkaWN5OWliMjkwYzNSeVlYQXZZbXh2WWk5dFlXbHVMMHhKUTBWT1UwVXBYRzRnSUNvdlhHNG9ablZ1WTNScGIyNGdLR2RzYjJKaGJDd2dabUZqZEc5eWVTa2dlMXh1SUNCMGVYQmxiMllnWlhod2IzSjBjeUE5UFQwZ0oyOWlhbVZqZENjZ0ppWWdkSGx3Wlc5bUlHMXZaSFZzWlNBaFBUMGdKM1Z1WkdWbWFXNWxaQ2NnUHlCdGIyUjFiR1V1Wlhod2IzSjBjeUE5SUdaaFkzUnZjbmtvS1NBNlhHNGdJSFI1Y0dWdlppQmtaV1pwYm1VZ1BUMDlJQ2RtZFc1amRHbHZiaWNnSmlZZ1pHVm1hVzVsTG1GdFpDQS9JR1JsWm1sdVpTaG1ZV04wYjNKNUtTQTZYRzRnSUNobmJHOWlZV3dnUFNCMGVYQmxiMllnWjJ4dlltRnNWR2hwY3lBaFBUMGdKM1Z1WkdWbWFXNWxaQ2NnUHlCbmJHOWlZV3hVYUdseklEb2daMnh2WW1Gc0lIeDhJSE5sYkdZc0lHZHNiMkpoYkM1TllXNXBjSFZzWVhSdmNpQTlJR1poWTNSdmNua29LU2s3WEc1OUtTaDBhR2x6TENBb1puVnVZM1JwYjI0Z0tDa2dleUFuZFhObElITjBjbWxqZENjN1hHNWNiaUFnTHlvcVhHNGdJQ0FxSUMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdFhHNGdJQ0FxSUVKdmIzUnpkSEpoY0NBb2RqVXVNaTR6S1RvZ1pHOXRMMjFoYm1sd2RXeGhkRzl5TG1welhHNGdJQ0FxSUV4cFkyVnVjMlZrSUhWdVpHVnlJRTFKVkNBb2FIUjBjSE02THk5bmFYUm9kV0l1WTI5dEwzUjNZbk12WW05dmRITjBjbUZ3TDJKc2IySXZiV0ZwYmk5TVNVTkZUbE5GS1Z4dUlDQWdLaUF0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFZ4dUlDQWdLaTljYmlBZ1puVnVZM1JwYjI0Z2JtOXliV0ZzYVhwbFJHRjBZU2gyWVd4MVpTa2dlMXh1SUNBZ0lHbG1JQ2gyWVd4MVpTQTlQVDBnSjNSeWRXVW5LU0I3WEc0Z0lDQWdJQ0J5WlhSMWNtNGdkSEoxWlR0Y2JpQWdJQ0I5WEc1Y2JpQWdJQ0JwWmlBb2RtRnNkV1VnUFQwOUlDZG1ZV3h6WlNjcElIdGNiaUFnSUNBZ0lISmxkSFZ5YmlCbVlXeHpaVHRjYmlBZ0lDQjlYRzVjYmlBZ0lDQnBaaUFvZG1Gc2RXVWdQVDA5SUU1MWJXSmxjaWgyWVd4MVpTa3VkRzlUZEhKcGJtY29LU2tnZTF4dUlDQWdJQ0FnY21WMGRYSnVJRTUxYldKbGNpaDJZV3gxWlNrN1hHNGdJQ0FnZlZ4dVhHNGdJQ0FnYVdZZ0tIWmhiSFZsSUQwOVBTQW5KeUI4ZkNCMllXeDFaU0E5UFQwZ0oyNTFiR3duS1NCN1hHNGdJQ0FnSUNCeVpYUjFjbTRnYm5Wc2JEdGNiaUFnSUNCOVhHNWNiaUFnSUNCcFppQW9kSGx3Wlc5bUlIWmhiSFZsSUNFOVBTQW5jM1J5YVc1bkp5a2dlMXh1SUNBZ0lDQWdjbVYwZFhKdUlIWmhiSFZsTzF4dUlDQWdJSDFjYmx4dUlDQWdJSFJ5ZVNCN1hHNGdJQ0FnSUNCeVpYUjFjbTRnU2xOUFRpNXdZWEp6WlNoa1pXTnZaR1ZWVWtsRGIyMXdiMjVsYm5Rb2RtRnNkV1VwS1R0Y2JpQWdJQ0I5SUdOaGRHTm9JQ2hmZFc1MWMyVmtLU0I3WEc0Z0lDQWdJQ0J5WlhSMWNtNGdkbUZzZFdVN1hHNGdJQ0FnZlZ4dUlDQjlYRzVjYmlBZ1puVnVZM1JwYjI0Z2JtOXliV0ZzYVhwbFJHRjBZVXRsZVNoclpYa3BJSHRjYmlBZ0lDQnlaWFIxY200Z2EyVjVMbkpsY0d4aFkyVW9MMXRCTFZwZEwyY3NJR05vY2lBOVBpQmdMU1I3WTJoeUxuUnZURzkzWlhKRFlYTmxLQ2w5WUNrN1hHNGdJSDFjYmx4dUlDQmpiMjV6ZENCTllXNXBjSFZzWVhSdmNpQTlJSHRjYmlBZ0lDQnpaWFJFWVhSaFFYUjBjbWxpZFhSbEtHVnNaVzFsYm5Rc0lHdGxlU3dnZG1Gc2RXVXBJSHRjYmlBZ0lDQWdJR1ZzWlcxbGJuUXVjMlYwUVhSMGNtbGlkWFJsS0dCa1lYUmhMV0p6TFNSN2JtOXliV0ZzYVhwbFJHRjBZVXRsZVNoclpYa3BmV0FzSUhaaGJIVmxLVHRjYmlBZ0lDQjlMRnh1WEc0Z0lDQWdjbVZ0YjNabFJHRjBZVUYwZEhKcFluVjBaU2hsYkdWdFpXNTBMQ0JyWlhrcElIdGNiaUFnSUNBZ0lHVnNaVzFsYm5RdWNtVnRiM1psUVhSMGNtbGlkWFJsS0dCa1lYUmhMV0p6TFNSN2JtOXliV0ZzYVhwbFJHRjBZVXRsZVNoclpYa3BmV0FwTzF4dUlDQWdJSDBzWEc1Y2JpQWdJQ0JuWlhSRVlYUmhRWFIwY21saWRYUmxjeWhsYkdWdFpXNTBLU0I3WEc0Z0lDQWdJQ0JwWmlBb0lXVnNaVzFsYm5RcElIdGNiaUFnSUNBZ0lDQWdjbVYwZFhKdUlIdDlPMXh1SUNBZ0lDQWdmVnh1WEc0Z0lDQWdJQ0JqYjI1emRDQmhkSFJ5YVdKMWRHVnpJRDBnZTMwN1hHNGdJQ0FnSUNCamIyNXpkQ0JpYzB0bGVYTWdQU0JQWW1wbFkzUXVhMlY1Y3lobGJHVnRaVzUwTG1SaGRHRnpaWFFwTG1acGJIUmxjaWhyWlhrZ1BUNGdhMlY1TG5OMFlYSjBjMWRwZEdnb0oySnpKeWtnSmlZZ0lXdGxlUzV6ZEdGeWRITlhhWFJvS0NkaWMwTnZibVpwWnljcEtUdGNibHh1SUNBZ0lDQWdabTl5SUNoamIyNXpkQ0JyWlhrZ2IyWWdZbk5MWlhsektTQjdYRzRnSUNBZ0lDQWdJR3hsZENCd2RYSmxTMlY1SUQwZ2EyVjVMbkpsY0d4aFkyVW9MMTVpY3k4c0lDY25LVHRjYmlBZ0lDQWdJQ0FnY0hWeVpVdGxlU0E5SUhCMWNtVkxaWGt1WTJoaGNrRjBLREFwTG5SdlRHOTNaWEpEWVhObEtDa2dLeUJ3ZFhKbFMyVjVMbk5zYVdObEtERXNJSEIxY21WTFpYa3ViR1Z1WjNSb0tUdGNiaUFnSUNBZ0lDQWdZWFIwY21saWRYUmxjMXR3ZFhKbFMyVjVYU0E5SUc1dmNtMWhiR2w2WlVSaGRHRW9aV3hsYldWdWRDNWtZWFJoYzJWMFcydGxlVjBwTzF4dUlDQWdJQ0FnZlZ4dVhHNGdJQ0FnSUNCeVpYUjFjbTRnWVhSMGNtbGlkWFJsY3p0Y2JpQWdJQ0I5TEZ4dVhHNGdJQ0FnWjJWMFJHRjBZVUYwZEhKcFluVjBaU2hsYkdWdFpXNTBMQ0JyWlhrcElIdGNiaUFnSUNBZ0lISmxkSFZ5YmlCdWIzSnRZV3hwZW1WRVlYUmhLR1ZzWlcxbGJuUXVaMlYwUVhSMGNtbGlkWFJsS0dCa1lYUmhMV0p6TFNSN2JtOXliV0ZzYVhwbFJHRjBZVXRsZVNoclpYa3BmV0FwS1R0Y2JpQWdJQ0I5WEc1Y2JpQWdmVHRjYmx4dUlDQnlaWFIxY200Z1RXRnVhWEIxYkdGMGIzSTdYRzVjYm4wcEtUdGNiaTh2SXlCemIzVnlZMlZOWVhCd2FXNW5WVkpNUFcxaGJtbHdkV3hoZEc5eUxtcHpMbTFoY0Z4dUlpd2lMeW9oWEc0Z0lDb2dRbTl2ZEhOMGNtRndJSE5sYkdWamRHOXlMV1Z1WjJsdVpTNXFjeUIyTlM0eUxqTWdLR2gwZEhCek9pOHZaMlYwWW05dmRITjBjbUZ3TG1OdmJTOHBYRzRnSUNvZ1EyOXdlWEpwWjJoMElESXdNVEV0TWpBeU1pQlVhR1VnUW05dmRITjBjbUZ3SUVGMWRHaHZjbk1nS0doMGRIQnpPaTh2WjJsMGFIVmlMbU52YlM5MGQySnpMMkp2YjNSemRISmhjQzluY21Gd2FITXZZMjl1ZEhKcFluVjBiM0p6S1Z4dUlDQXFJRXhwWTJWdWMyVmtJSFZ1WkdWeUlFMUpWQ0FvYUhSMGNITTZMeTluYVhSb2RXSXVZMjl0TDNSM1luTXZZbTl2ZEhOMGNtRndMMkpzYjJJdmJXRnBiaTlNU1VORlRsTkZLVnh1SUNBcUwxeHVLR1oxYm1OMGFXOXVJQ2huYkc5aVlXd3NJR1poWTNSdmNua3BJSHRjYmlBZ2RIbHdaVzltSUdWNGNHOXlkSE1nUFQwOUlDZHZZbXBsWTNRbklDWW1JSFI1Y0dWdlppQnRiMlIxYkdVZ0lUMDlJQ2QxYm1SbFptbHVaV1FuSUQ4Z2JXOWtkV3hsTG1WNGNHOXlkSE1nUFNCbVlXTjBiM0o1S0hKbGNYVnBjbVVvSnk0dUwzVjBhV3d2YVc1a1pYZ25LU2tnT2x4dUlDQjBlWEJsYjJZZ1pHVm1hVzVsSUQwOVBTQW5ablZ1WTNScGIyNG5JQ1ltSUdSbFptbHVaUzVoYldRZ1B5QmtaV1pwYm1Vb1d5Y3VMaTkxZEdsc0wybHVaR1Y0SjEwc0lHWmhZM1J2Y25rcElEcGNiaUFnS0dkc2IySmhiQ0E5SUhSNWNHVnZaaUJuYkc5aVlXeFVhR2x6SUNFOVBTQW5kVzVrWldacGJtVmtKeUEvSUdkc2IySmhiRlJvYVhNZ09pQm5iRzlpWVd3Z2ZId2djMlZzWml3Z1oyeHZZbUZzTGxObGJHVmpkRzl5Ulc1bmFXNWxJRDBnWm1GamRHOXllU2huYkc5aVlXd3VTVzVrWlhncEtUdGNibjBwS0hSb2FYTXNJQ2htZFc1amRHbHZiaUFvYVc1a1pYZ3BJSHNnSjNWelpTQnpkSEpwWTNRbk8xeHVYRzRnSUM4cUtseHVJQ0FnS2lBdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExWeHVJQ0FnS2lCQ2IyOTBjM1J5WVhBZ0tIWTFMakl1TXlrNklHUnZiUzl6Wld4bFkzUnZjaTFsYm1kcGJtVXVhbk5jYmlBZ0lDb2dUR2xqWlc1elpXUWdkVzVrWlhJZ1RVbFVJQ2hvZEhSd2N6b3ZMMmRwZEdoMVlpNWpiMjB2ZEhkaWN5OWliMjkwYzNSeVlYQXZZbXh2WWk5dFlXbHVMMHhKUTBWT1UwVXBYRzRnSUNBcUlDMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRYRzRnSUNBcUwxeHVJQ0F2S2lwY2JpQWdJQ29nUTI5dWMzUmhiblJ6WEc0Z0lDQXFMMXh1WEc0Z0lHTnZibk4wSUZObGJHVmpkRzl5Ulc1bmFXNWxJRDBnZTF4dUlDQWdJR1pwYm1Rb2MyVnNaV04wYjNJc0lHVnNaVzFsYm5RZ1BTQmtiMk4xYldWdWRDNWtiMk4xYldWdWRFVnNaVzFsYm5RcElIdGNiaUFnSUNBZ0lISmxkSFZ5YmlCYlhTNWpiMjVqWVhRb0xpNHVSV3hsYldWdWRDNXdjbTkwYjNSNWNHVXVjWFZsY25sVFpXeGxZM1J2Y2tGc2JDNWpZV3hzS0dWc1pXMWxiblFzSUhObGJHVmpkRzl5S1NrN1hHNGdJQ0FnZlN4Y2JseHVJQ0FnSUdacGJtUlBibVVvYzJWc1pXTjBiM0lzSUdWc1pXMWxiblFnUFNCa2IyTjFiV1Z1ZEM1a2IyTjFiV1Z1ZEVWc1pXMWxiblFwSUh0Y2JpQWdJQ0FnSUhKbGRIVnliaUJGYkdWdFpXNTBMbkJ5YjNSdmRIbHdaUzV4ZFdWeWVWTmxiR1ZqZEc5eUxtTmhiR3dvWld4bGJXVnVkQ3dnYzJWc1pXTjBiM0lwTzF4dUlDQWdJSDBzWEc1Y2JpQWdJQ0JqYUdsc1pISmxiaWhsYkdWdFpXNTBMQ0J6Wld4bFkzUnZjaWtnZTF4dUlDQWdJQ0FnY21WMGRYSnVJRnRkTG1OdmJtTmhkQ2d1TGk1bGJHVnRaVzUwTG1Ob2FXeGtjbVZ1S1M1bWFXeDBaWElvWTJocGJHUWdQVDRnWTJocGJHUXViV0YwWTJobGN5aHpaV3hsWTNSdmNpa3BPMXh1SUNBZ0lIMHNYRzVjYmlBZ0lDQndZWEpsYm5SektHVnNaVzFsYm5Rc0lITmxiR1ZqZEc5eUtTQjdYRzRnSUNBZ0lDQmpiMjV6ZENCd1lYSmxiblJ6SUQwZ1cxMDdYRzRnSUNBZ0lDQnNaWFFnWVc1alpYTjBiM0lnUFNCbGJHVnRaVzUwTG5CaGNtVnVkRTV2WkdVdVkyeHZjMlZ6ZENoelpXeGxZM1J2Y2lrN1hHNWNiaUFnSUNBZ0lIZG9hV3hsSUNoaGJtTmxjM1J2Y2lrZ2UxeHVJQ0FnSUNBZ0lDQndZWEpsYm5SekxuQjFjMmdvWVc1alpYTjBiM0lwTzF4dUlDQWdJQ0FnSUNCaGJtTmxjM1J2Y2lBOUlHRnVZMlZ6ZEc5eUxuQmhjbVZ1ZEU1dlpHVXVZMnh2YzJWemRDaHpaV3hsWTNSdmNpazdYRzRnSUNBZ0lDQjlYRzVjYmlBZ0lDQWdJSEpsZEhWeWJpQndZWEpsYm5Sek8xeHVJQ0FnSUgwc1hHNWNiaUFnSUNCd2NtVjJLR1ZzWlcxbGJuUXNJSE5sYkdWamRHOXlLU0I3WEc0Z0lDQWdJQ0JzWlhRZ2NISmxkbWx2ZFhNZ1BTQmxiR1Z0Wlc1MExuQnlaWFpwYjNWelJXeGxiV1Z1ZEZOcFlteHBibWM3WEc1Y2JpQWdJQ0FnSUhkb2FXeGxJQ2h3Y21WMmFXOTFjeWtnZTF4dUlDQWdJQ0FnSUNCcFppQW9jSEpsZG1sdmRYTXViV0YwWTJobGN5aHpaV3hsWTNSdmNpa3BJSHRjYmlBZ0lDQWdJQ0FnSUNCeVpYUjFjbTRnVzNCeVpYWnBiM1Z6WFR0Y2JpQWdJQ0FnSUNBZ2ZWeHVYRzRnSUNBZ0lDQWdJSEJ5WlhacGIzVnpJRDBnY0hKbGRtbHZkWE11Y0hKbGRtbHZkWE5GYkdWdFpXNTBVMmxpYkdsdVp6dGNiaUFnSUNBZ0lIMWNibHh1SUNBZ0lDQWdjbVYwZFhKdUlGdGRPMXh1SUNBZ0lIMHNYRzVjYmlBZ0lDQXZMeUJVVDBSUE9pQjBhR2x6SUdseklHNXZkeUIxYm5WelpXUTdJSEpsYlc5MlpTQnNZWFJsY2lCaGJHOXVaeUIzYVhSb0lIQnlaWFlvS1Z4dUlDQWdJRzVsZUhRb1pXeGxiV1Z1ZEN3Z2MyVnNaV04wYjNJcElIdGNiaUFnSUNBZ0lHeGxkQ0J1WlhoMElEMGdaV3hsYldWdWRDNXVaWGgwUld4bGJXVnVkRk5wWW14cGJtYzdYRzVjYmlBZ0lDQWdJSGRvYVd4bElDaHVaWGgwS1NCN1hHNGdJQ0FnSUNBZ0lHbG1JQ2h1WlhoMExtMWhkR05vWlhNb2MyVnNaV04wYjNJcEtTQjdYRzRnSUNBZ0lDQWdJQ0FnY21WMGRYSnVJRnR1WlhoMFhUdGNiaUFnSUNBZ0lDQWdmVnh1WEc0Z0lDQWdJQ0FnSUc1bGVIUWdQU0J1WlhoMExtNWxlSFJGYkdWdFpXNTBVMmxpYkdsdVp6dGNiaUFnSUNBZ0lIMWNibHh1SUNBZ0lDQWdjbVYwZFhKdUlGdGRPMXh1SUNBZ0lIMHNYRzVjYmlBZ0lDQm1iMk4xYzJGaWJHVkRhR2xzWkhKbGJpaGxiR1Z0Wlc1MEtTQjdYRzRnSUNBZ0lDQmpiMjV6ZENCbWIyTjFjMkZpYkdWeklEMGdXeWRoSnl3Z0oySjFkSFJ2Ymljc0lDZHBibkIxZENjc0lDZDBaWGgwWVhKbFlTY3NJQ2R6Wld4bFkzUW5MQ0FuWkdWMFlXbHNjeWNzSUNkYmRHRmlhVzVrWlhoZEp5d2dKMXRqYjI1MFpXNTBaV1JwZEdGaWJHVTlYQ0owY25WbFhDSmRKMTB1YldGd0tITmxiR1ZqZEc5eUlEMCtJR0FrZTNObGJHVmpkRzl5ZlRwdWIzUW9XM1JoWW1sdVpHVjRYajFjSWkxY0lsMHBZQ2t1YW05cGJpZ25MQ2NwTzF4dUlDQWdJQ0FnY21WMGRYSnVJSFJvYVhNdVptbHVaQ2htYjJOMWMyRmliR1Z6TENCbGJHVnRaVzUwS1M1bWFXeDBaWElvWld3Z1BUNGdJV2x1WkdWNExtbHpSR2x6WVdKc1pXUW9aV3dwSUNZbUlHbHVaR1Y0TG1selZtbHphV0pzWlNobGJDa3BPMXh1SUNBZ0lIMWNibHh1SUNCOU8xeHVYRzRnSUhKbGRIVnliaUJUWld4bFkzUnZja1Z1WjJsdVpUdGNibHh1ZlNrcE8xeHVMeThqSUhOdmRYSmpaVTFoY0hCcGJtZFZVa3c5YzJWc1pXTjBiM0l0Wlc1bmFXNWxMbXB6TG0xaGNGeHVJaXdpTHlvaFhHNGdJQ29nUW05dmRITjBjbUZ3SUcxdlpHRnNMbXB6SUhZMUxqSXVNeUFvYUhSMGNITTZMeTluWlhSaWIyOTBjM1J5WVhBdVkyOXRMeWxjYmlBZ0tpQkRiM0I1Y21sbmFIUWdNakF4TVMweU1ESXlJRlJvWlNCQ2IyOTBjM1J5WVhBZ1FYVjBhRzl5Y3lBb2FIUjBjSE02THk5bmFYUm9kV0l1WTI5dEwzUjNZbk12WW05dmRITjBjbUZ3TDJkeVlYQm9jeTlqYjI1MGNtbGlkWFJ2Y25NcFhHNGdJQ29nVEdsalpXNXpaV1FnZFc1a1pYSWdUVWxVSUNob2RIUndjem92TDJkcGRHaDFZaTVqYjIwdmRIZGljeTlpYjI5MGMzUnlZWEF2WW14dllpOXRZV2x1TDB4SlEwVk9VMFVwWEc0Z0lDb3ZYRzRvWm5WdVkzUnBiMjRnS0dkc2IySmhiQ3dnWm1GamRHOXllU2tnZTF4dUlDQjBlWEJsYjJZZ1pYaHdiM0owY3lBOVBUMGdKMjlpYW1WamRDY2dKaVlnZEhsd1pXOW1JRzF2WkhWc1pTQWhQVDBnSjNWdVpHVm1hVzVsWkNjZ1B5QnRiMlIxYkdVdVpYaHdiM0owY3lBOUlHWmhZM1J2Y25rb2NtVnhkV2x5WlNnbkxpOTFkR2xzTDJsdVpHVjRKeWtzSUhKbGNYVnBjbVVvSnk0dlpHOXRMMlYyWlc1MExXaGhibVJzWlhJbktTd2djbVZ4ZFdseVpTZ25MaTlrYjIwdmMyVnNaV04wYjNJdFpXNW5hVzVsSnlrc0lISmxjWFZwY21Vb0p5NHZkWFJwYkM5elkzSnZiR3hpWVhJbktTd2djbVZ4ZFdseVpTZ25MaTlpWVhObExXTnZiWEJ2Ym1WdWRDY3BMQ0J5WlhGMWFYSmxLQ2N1TDNWMGFXd3ZZbUZqYTJSeWIzQW5LU3dnY21WeGRXbHlaU2duTGk5MWRHbHNMMlp2WTNWemRISmhjQ2NwTENCeVpYRjFhWEpsS0NjdUwzVjBhV3d2WTI5dGNHOXVaVzUwTFdaMWJtTjBhVzl1Y3ljcEtTQTZYRzRnSUhSNWNHVnZaaUJrWldacGJtVWdQVDA5SUNkbWRXNWpkR2x2YmljZ0ppWWdaR1ZtYVc1bExtRnRaQ0EvSUdSbFptbHVaU2hiSnk0dmRYUnBiQzlwYm1SbGVDY3NJQ2N1TDJSdmJTOWxkbVZ1ZEMxb1lXNWtiR1Z5Snl3Z0p5NHZaRzl0TDNObGJHVmpkRzl5TFdWdVoybHVaU2NzSUNjdUwzVjBhV3d2YzJOeWIyeHNZbUZ5Snl3Z0p5NHZZbUZ6WlMxamIyMXdiMjVsYm5RbkxDQW5MaTkxZEdsc0wySmhZMnRrY205d0p5d2dKeTR2ZFhScGJDOW1iMk4xYzNSeVlYQW5MQ0FuTGk5MWRHbHNMMk52YlhCdmJtVnVkQzFtZFc1amRHbHZibk1uWFN3Z1ptRmpkRzl5ZVNrZ09seHVJQ0FvWjJ4dlltRnNJRDBnZEhsd1pXOW1JR2RzYjJKaGJGUm9hWE1nSVQwOUlDZDFibVJsWm1sdVpXUW5JRDhnWjJ4dlltRnNWR2hwY3lBNklHZHNiMkpoYkNCOGZDQnpaV3htTENCbmJHOWlZV3d1VFc5a1lXd2dQU0JtWVdOMGIzSjVLR2RzYjJKaGJDNUpibVJsZUN3Z1oyeHZZbUZzTGtWMlpXNTBTR0Z1Wkd4bGNpd2daMnh2WW1Gc0xsTmxiR1ZqZEc5eVJXNW5hVzVsTENCbmJHOWlZV3d1VTJOeWIyeHNZbUZ5TENCbmJHOWlZV3d1UW1GelpVTnZiWEJ2Ym1WdWRDd2daMnh2WW1Gc0xrSmhZMnRrY205d0xDQm5iRzlpWVd3dVJtOWpkWE4wY21Gd0xDQm5iRzlpWVd3dVEyOXRjRzl1Wlc1MFJuVnVZM1JwYjI1ektTazdYRzU5S1NoMGFHbHpMQ0FvWm5WdVkzUnBiMjRnS0dsdVpHVjRMQ0JGZG1WdWRFaGhibVJzWlhJc0lGTmxiR1ZqZEc5eVJXNW5hVzVsTENCVFkzSnZiR3hDWVhKSVpXeHdaWElzSUVKaGMyVkRiMjF3YjI1bGJuUXNJRUpoWTJ0a2NtOXdMQ0JHYjJOMWMxUnlZWEFzSUdOdmJYQnZibVZ1ZEVaMWJtTjBhVzl1Y3lrZ2V5QW5kWE5sSUhOMGNtbGpkQ2M3WEc1Y2JpQWdZMjl1YzNRZ1gybHVkR1Z5YjNCRVpXWmhkV3gwVEdWbllXTjVJRDBnWlNBOVBpQmxJQ1ltSUhSNWNHVnZaaUJsSUQwOVBTQW5iMkpxWldOMEp5QW1KaUFuWkdWbVlYVnNkQ2NnYVc0Z1pTQS9JR1VnT2lCN0lHUmxabUYxYkhRNklHVWdmVHRjYmx4dUlDQmpiMjV6ZENCRmRtVnVkRWhoYm1Sc1pYSmZYMlJsWm1GMWJIUWdQU0F2S2lOZlgxQlZVa1ZmWHlvdlgybHVkR1Z5YjNCRVpXWmhkV3gwVEdWbllXTjVLRVYyWlc1MFNHRnVaR3hsY2lrN1hHNGdJR052Ym5OMElGTmxiR1ZqZEc5eVJXNW5hVzVsWDE5a1pXWmhkV3gwSUQwZ0x5b2pYMTlRVlZKRlgxOHFMMTlwYm5SbGNtOXdSR1ZtWVhWc2RFeGxaMkZqZVNoVFpXeGxZM1J2Y2tWdVoybHVaU2s3WEc0Z0lHTnZibk4wSUZOamNtOXNiRUpoY2tobGJIQmxjbDlmWkdWbVlYVnNkQ0E5SUM4cUkxOWZVRlZTUlY5ZktpOWZhVzUwWlhKdmNFUmxabUYxYkhSTVpXZGhZM2tvVTJOeWIyeHNRbUZ5U0dWc2NHVnlLVHRjYmlBZ1kyOXVjM1FnUW1GelpVTnZiWEJ2Ym1WdWRGOWZaR1ZtWVhWc2RDQTlJQzhxSTE5ZlVGVlNSVjlmS2k5ZmFXNTBaWEp2Y0VSbFptRjFiSFJNWldkaFkza29RbUZ6WlVOdmJYQnZibVZ1ZENrN1hHNGdJR052Ym5OMElFSmhZMnRrY205d1gxOWtaV1poZFd4MElEMGdMeW9qWDE5UVZWSkZYMThxTDE5cGJuUmxjbTl3UkdWbVlYVnNkRXhsWjJGamVTaENZV05yWkhKdmNDazdYRzRnSUdOdmJuTjBJRVp2WTNWelZISmhjRjlmWkdWbVlYVnNkQ0E5SUM4cUkxOWZVRlZTUlY5ZktpOWZhVzUwWlhKdmNFUmxabUYxYkhSTVpXZGhZM2tvUm05amRYTlVjbUZ3S1R0Y2JseHVJQ0F2S2lwY2JpQWdJQ29nTFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMxY2JpQWdJQ29nUW05dmRITjBjbUZ3SUNoMk5TNHlMak1wT2lCdGIyUmhiQzVxYzF4dUlDQWdLaUJNYVdObGJuTmxaQ0IxYm1SbGNpQk5TVlFnS0doMGRIQnpPaTh2WjJsMGFIVmlMbU52YlM5MGQySnpMMkp2YjNSemRISmhjQzlpYkc5aUwyMWhhVzR2VEVsRFJVNVRSU2xjYmlBZ0lDb2dMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzFjYmlBZ0lDb3ZYRzRnSUM4cUtseHVJQ0FnS2lCRGIyNXpkR0Z1ZEhOY2JpQWdJQ292WEc1Y2JpQWdZMjl1YzNRZ1RrRk5SU0E5SUNkdGIyUmhiQ2M3WEc0Z0lHTnZibk4wSUVSQlZFRmZTMFZaSUQwZ0oySnpMbTF2WkdGc0p6dGNiaUFnWTI5dWMzUWdSVlpGVGxSZlMwVlpJRDBnWUM0a2UwUkJWRUZmUzBWWmZXQTdYRzRnSUdOdmJuTjBJRVJCVkVGZlFWQkpYMHRGV1NBOUlDY3VaR0YwWVMxaGNHa25PMXh1SUNCamIyNXpkQ0JGVTBOQlVFVmZTMFZaSUQwZ0owVnpZMkZ3WlNjN1hHNGdJR052Ym5OMElFVldSVTVVWDBoSlJFVWdQU0JnYUdsa1pTUjdSVlpGVGxSZlMwVlpmV0E3WEc0Z0lHTnZibk4wSUVWV1JVNVVYMGhKUkVWZlVGSkZWa1ZPVkVWRUlEMGdZR2hwWkdWUWNtVjJaVzUwWldRa2UwVldSVTVVWDB0RldYMWdPMXh1SUNCamIyNXpkQ0JGVmtWT1ZGOUlTVVJFUlU0Z1BTQmdhR2xrWkdWdUpIdEZWa1ZPVkY5TFJWbDlZRHRjYmlBZ1kyOXVjM1FnUlZaRlRsUmZVMGhQVnlBOUlHQnphRzkzSkh0RlZrVk9WRjlMUlZsOVlEdGNiaUFnWTI5dWMzUWdSVlpGVGxSZlUwaFBWMDRnUFNCZ2MyaHZkMjRrZTBWV1JVNVVYMHRGV1gxZ08xeHVJQ0JqYjI1emRDQkZWa1ZPVkY5U1JWTkpXa1VnUFNCZ2NtVnphWHBsSkh0RlZrVk9WRjlMUlZsOVlEdGNiaUFnWTI5dWMzUWdSVlpGVGxSZlEweEpRMHRmUkVsVFRVbFRVeUE5SUdCamJHbGpheTVrYVhOdGFYTnpKSHRGVmtWT1ZGOUxSVmw5WUR0Y2JpQWdZMjl1YzNRZ1JWWkZUbFJmVFU5VlUwVkVUMWRPWDBSSlUwMUpVMU1nUFNCZ2JXOTFjMlZrYjNkdUxtUnBjMjFwYzNNa2UwVldSVTVVWDB0RldYMWdPMXh1SUNCamIyNXpkQ0JGVmtWT1ZGOUxSVmxFVDFkT1gwUkpVMDFKVTFNZ1BTQmdhMlY1Wkc5M2JpNWthWE50YVhOekpIdEZWa1ZPVkY5TFJWbDlZRHRjYmlBZ1kyOXVjM1FnUlZaRlRsUmZRMHhKUTB0ZlJFRlVRVjlCVUVrZ1BTQmdZMnhwWTJza2UwVldSVTVVWDB0RldYMGtlMFJCVkVGZlFWQkpYMHRGV1gxZ08xeHVJQ0JqYjI1emRDQkRURUZUVTE5T1FVMUZYMDlRUlU0Z1BTQW5iVzlrWVd3dGIzQmxiaWM3WEc0Z0lHTnZibk4wSUVOTVFWTlRYMDVCVFVWZlJrRkVSU0E5SUNkbVlXUmxKenRjYmlBZ1kyOXVjM1FnUTB4QlUxTmZUa0ZOUlY5VFNFOVhJRDBnSjNOb2IzY25PMXh1SUNCamIyNXpkQ0JEVEVGVFUxOU9RVTFGWDFOVVFWUkpReUE5SUNkdGIyUmhiQzF6ZEdGMGFXTW5PMXh1SUNCamIyNXpkQ0JQVUVWT1gxTkZURVZEVkU5U0lEMGdKeTV0YjJSaGJDNXphRzkzSnp0Y2JpQWdZMjl1YzNRZ1UwVk1SVU5VVDFKZlJFbEJURTlISUQwZ0p5NXRiMlJoYkMxa2FXRnNiMmNuTzF4dUlDQmpiMjV6ZENCVFJVeEZRMVJQVWw5TlQwUkJURjlDVDBSWklEMGdKeTV0YjJSaGJDMWliMlI1Snp0Y2JpQWdZMjl1YzNRZ1UwVk1SVU5VVDFKZlJFRlVRVjlVVDBkSFRFVWdQU0FuVzJSaGRHRXRZbk10ZEc5bloyeGxQVndpYlc5a1lXeGNJbDBuTzF4dUlDQmpiMjV6ZENCRVpXWmhkV3gwSUQwZ2UxeHVJQ0FnSUdKaFkydGtjbTl3T2lCMGNuVmxMRnh1SUNBZ0lHWnZZM1Z6T2lCMGNuVmxMRnh1SUNBZ0lHdGxlV0p2WVhKa09pQjBjblZsWEc0Z0lIMDdYRzRnSUdOdmJuTjBJRVJsWm1GMWJIUlVlWEJsSUQwZ2UxeHVJQ0FnSUdKaFkydGtjbTl3T2lBbktHSnZiMnhsWVc1OGMzUnlhVzVuS1Njc1hHNGdJQ0FnWm05amRYTTZJQ2RpYjI5c1pXRnVKeXhjYmlBZ0lDQnJaWGxpYjJGeVpEb2dKMkp2YjJ4bFlXNG5YRzRnSUgwN1hHNGdJQzhxS2x4dUlDQWdLaUJEYkdGemN5QmtaV1pwYm1sMGFXOXVYRzRnSUNBcUwxeHVYRzRnSUdOc1lYTnpJRTF2WkdGc0lHVjRkR1Z1WkhNZ1FtRnpaVU52YlhCdmJtVnVkRjlmWkdWbVlYVnNkQzVrWldaaGRXeDBJSHRjYmlBZ0lDQmpiMjV6ZEhKMVkzUnZjaWhsYkdWdFpXNTBMQ0JqYjI1bWFXY3BJSHRjYmlBZ0lDQWdJSE4xY0dWeUtHVnNaVzFsYm5Rc0lHTnZibVpwWnlrN1hHNGdJQ0FnSUNCMGFHbHpMbDlrYVdGc2IyY2dQU0JUWld4bFkzUnZja1Z1WjJsdVpWOWZaR1ZtWVhWc2RDNWtaV1poZFd4MExtWnBibVJQYm1Vb1UwVk1SVU5VVDFKZlJFbEJURTlITENCMGFHbHpMbDlsYkdWdFpXNTBLVHRjYmlBZ0lDQWdJSFJvYVhNdVgySmhZMnRrY205d0lEMGdkR2hwY3k1ZmFXNXBkR2xoYkdsNlpVSmhZMnRFY205d0tDazdYRzRnSUNBZ0lDQjBhR2x6TGw5bWIyTjFjM1J5WVhBZ1BTQjBhR2x6TGw5cGJtbDBhV0ZzYVhwbFJtOWpkWE5VY21Gd0tDazdYRzRnSUNBZ0lDQjBhR2x6TGw5cGMxTm9iM2R1SUQwZ1ptRnNjMlU3WEc0Z0lDQWdJQ0IwYUdsekxsOXBjMVJ5WVc1emFYUnBiMjVwYm1jZ1BTQm1ZV3h6WlR0Y2JpQWdJQ0FnSUhSb2FYTXVYM05qY205c2JFSmhjaUE5SUc1bGR5QlRZM0p2Ykd4Q1lYSklaV3h3WlhKZlgyUmxabUYxYkhRdVpHVm1ZWFZzZENncE8xeHVYRzRnSUNBZ0lDQjBhR2x6TGw5aFpHUkZkbVZ1ZEV4cGMzUmxibVZ5Y3lncE8xeHVJQ0FnSUgwZ0x5OGdSMlYwZEdWeWMxeHVYRzVjYmlBZ0lDQnpkR0YwYVdNZ1oyVjBJRVJsWm1GMWJIUW9LU0I3WEc0Z0lDQWdJQ0J5WlhSMWNtNGdSR1ZtWVhWc2REdGNiaUFnSUNCOVhHNWNiaUFnSUNCemRHRjBhV01nWjJWMElFUmxabUYxYkhSVWVYQmxLQ2tnZTF4dUlDQWdJQ0FnY21WMGRYSnVJRVJsWm1GMWJIUlVlWEJsTzF4dUlDQWdJSDFjYmx4dUlDQWdJSE4wWVhScFl5Qm5aWFFnVGtGTlJTZ3BJSHRjYmlBZ0lDQWdJSEpsZEhWeWJpQk9RVTFGTzF4dUlDQWdJSDBnTHk4Z1VIVmliR2xqWEc1Y2JseHVJQ0FnSUhSdloyZHNaU2h5Wld4aGRHVmtWR0Z5WjJWMEtTQjdYRzRnSUNBZ0lDQnlaWFIxY200Z2RHaHBjeTVmYVhOVGFHOTNiaUEvSUhSb2FYTXVhR2xrWlNncElEb2dkR2hwY3k1emFHOTNLSEpsYkdGMFpXUlVZWEpuWlhRcE8xeHVJQ0FnSUgxY2JseHVJQ0FnSUhOb2IzY29jbVZzWVhSbFpGUmhjbWRsZENrZ2UxeHVJQ0FnSUNBZ2FXWWdLSFJvYVhNdVgybHpVMmh2ZDI0Z2ZId2dkR2hwY3k1ZmFYTlVjbUZ1YzJsMGFXOXVhVzVuS1NCN1hHNGdJQ0FnSUNBZ0lISmxkSFZ5Ymp0Y2JpQWdJQ0FnSUgxY2JseHVJQ0FnSUNBZ1kyOXVjM1FnYzJodmQwVjJaVzUwSUQwZ1JYWmxiblJJWVc1a2JHVnlYMTlrWldaaGRXeDBMbVJsWm1GMWJIUXVkSEpwWjJkbGNpaDBhR2x6TGw5bGJHVnRaVzUwTENCRlZrVk9WRjlUU0U5WExDQjdYRzRnSUNBZ0lDQWdJSEpsYkdGMFpXUlVZWEpuWlhSY2JpQWdJQ0FnSUgwcE8xeHVYRzRnSUNBZ0lDQnBaaUFvYzJodmQwVjJaVzUwTG1SbFptRjFiSFJRY21WMlpXNTBaV1FwSUh0Y2JpQWdJQ0FnSUNBZ2NtVjBkWEp1TzF4dUlDQWdJQ0FnZlZ4dVhHNGdJQ0FnSUNCMGFHbHpMbDlwYzFOb2IzZHVJRDBnZEhKMVpUdGNiaUFnSUNBZ0lIUm9hWE11WDJselZISmhibk5wZEdsdmJtbHVaeUE5SUhSeWRXVTdYRzVjYmlBZ0lDQWdJSFJvYVhNdVgzTmpjbTlzYkVKaGNpNW9hV1JsS0NrN1hHNWNiaUFnSUNBZ0lHUnZZM1Z0Wlc1MExtSnZaSGt1WTJ4aGMzTk1hWE4wTG1Ga1pDaERURUZUVTE5T1FVMUZYMDlRUlU0cE8xeHVYRzRnSUNBZ0lDQjBhR2x6TGw5aFpHcDFjM1JFYVdGc2IyY29LVHRjYmx4dUlDQWdJQ0FnZEdocGN5NWZZbUZqYTJSeWIzQXVjMmh2ZHlnb0tTQTlQaUIwYUdsekxsOXphRzkzUld4bGJXVnVkQ2h5Wld4aGRHVmtWR0Z5WjJWMEtTazdYRzRnSUNBZ2ZWeHVYRzRnSUNBZ2FHbGtaU2dwSUh0Y2JpQWdJQ0FnSUdsbUlDZ2hkR2hwY3k1ZmFYTlRhRzkzYmlCOGZDQjBhR2x6TGw5cGMxUnlZVzV6YVhScGIyNXBibWNwSUh0Y2JpQWdJQ0FnSUNBZ2NtVjBkWEp1TzF4dUlDQWdJQ0FnZlZ4dVhHNGdJQ0FnSUNCamIyNXpkQ0JvYVdSbFJYWmxiblFnUFNCRmRtVnVkRWhoYm1Sc1pYSmZYMlJsWm1GMWJIUXVaR1ZtWVhWc2RDNTBjbWxuWjJWeUtIUm9hWE11WDJWc1pXMWxiblFzSUVWV1JVNVVYMGhKUkVVcE8xeHVYRzRnSUNBZ0lDQnBaaUFvYUdsa1pVVjJaVzUwTG1SbFptRjFiSFJRY21WMlpXNTBaV1FwSUh0Y2JpQWdJQ0FnSUNBZ2NtVjBkWEp1TzF4dUlDQWdJQ0FnZlZ4dVhHNGdJQ0FnSUNCMGFHbHpMbDlwYzFOb2IzZHVJRDBnWm1Gc2MyVTdYRzRnSUNBZ0lDQjBhR2x6TGw5cGMxUnlZVzV6YVhScGIyNXBibWNnUFNCMGNuVmxPMXh1WEc0Z0lDQWdJQ0IwYUdsekxsOW1iMk4xYzNSeVlYQXVaR1ZoWTNScGRtRjBaU2dwTzF4dVhHNGdJQ0FnSUNCMGFHbHpMbDlsYkdWdFpXNTBMbU5zWVhOelRHbHpkQzV5WlcxdmRtVW9RMHhCVTFOZlRrRk5SVjlUU0U5WEtUdGNibHh1SUNBZ0lDQWdkR2hwY3k1ZmNYVmxkV1ZEWVd4c1ltRmpheWdvS1NBOVBpQjBhR2x6TGw5b2FXUmxUVzlrWVd3b0tTd2dkR2hwY3k1ZlpXeGxiV1Z1ZEN3Z2RHaHBjeTVmYVhOQmJtbHRZWFJsWkNncEtUdGNiaUFnSUNCOVhHNWNiaUFnSUNCa2FYTndiM05sS0NrZ2UxeHVJQ0FnSUNBZ1ptOXlJQ2hqYjI1emRDQm9kRzFzUld4bGJXVnVkQ0J2WmlCYmQybHVaRzkzTENCMGFHbHpMbDlrYVdGc2IyZGRLU0I3WEc0Z0lDQWdJQ0FnSUVWMlpXNTBTR0Z1Wkd4bGNsOWZaR1ZtWVhWc2RDNWtaV1poZFd4MExtOW1aaWhvZEcxc1JXeGxiV1Z1ZEN3Z1JWWkZUbFJmUzBWWktUdGNiaUFnSUNBZ0lIMWNibHh1SUNBZ0lDQWdkR2hwY3k1ZlltRmphMlJ5YjNBdVpHbHpjRzl6WlNncE8xeHVYRzRnSUNBZ0lDQjBhR2x6TGw5bWIyTjFjM1J5WVhBdVpHVmhZM1JwZG1GMFpTZ3BPMXh1WEc0Z0lDQWdJQ0J6ZFhCbGNpNWthWE53YjNObEtDazdYRzRnSUNBZ2ZWeHVYRzRnSUNBZ2FHRnVaR3hsVlhCa1lYUmxLQ2tnZTF4dUlDQWdJQ0FnZEdocGN5NWZZV1JxZFhOMFJHbGhiRzluS0NrN1hHNGdJQ0FnZlNBdkx5QlFjbWwyWVhSbFhHNWNibHh1SUNBZ0lGOXBibWwwYVdGc2FYcGxRbUZqYTBSeWIzQW9LU0I3WEc0Z0lDQWdJQ0J5WlhSMWNtNGdibVYzSUVKaFkydGtjbTl3WDE5a1pXWmhkV3gwTG1SbFptRjFiSFFvZTF4dUlDQWdJQ0FnSUNCcGMxWnBjMmxpYkdVNklFSnZiMnhsWVc0b2RHaHBjeTVmWTI5dVptbG5MbUpoWTJ0a2NtOXdLU3hjYmlBZ0lDQWdJQ0FnTHk4Z0ozTjBZWFJwWXljZ2IzQjBhVzl1SUhkcGJHd2dZbVVnZEhKaGJuTnNZWFJsWkNCMGJ5QjBjblZsTENCaGJtUWdZbTl2YkdWaGJuTWdkMmxzYkNCclpXVndJSFJvWldseUlIWmhiSFZsTEZ4dUlDQWdJQ0FnSUNCcGMwRnVhVzFoZEdWa09pQjBhR2x6TGw5cGMwRnVhVzFoZEdWa0tDbGNiaUFnSUNBZ0lIMHBPMXh1SUNBZ0lIMWNibHh1SUNBZ0lGOXBibWwwYVdGc2FYcGxSbTlqZFhOVWNtRndLQ2tnZTF4dUlDQWdJQ0FnY21WMGRYSnVJRzVsZHlCR2IyTjFjMVJ5WVhCZlgyUmxabUYxYkhRdVpHVm1ZWFZzZENoN1hHNGdJQ0FnSUNBZ0lIUnlZWEJGYkdWdFpXNTBPaUIwYUdsekxsOWxiR1Z0Wlc1MFhHNGdJQ0FnSUNCOUtUdGNiaUFnSUNCOVhHNWNiaUFnSUNCZmMyaHZkMFZzWlcxbGJuUW9jbVZzWVhSbFpGUmhjbWRsZENrZ2UxeHVJQ0FnSUNBZ0x5OGdkSEo1SUhSdklHRndjR1Z1WkNCa2VXNWhiV2xqSUcxdlpHRnNYRzRnSUNBZ0lDQnBaaUFvSVdSdlkzVnRaVzUwTG1KdlpIa3VZMjl1ZEdGcGJuTW9kR2hwY3k1ZlpXeGxiV1Z1ZENrcElIdGNiaUFnSUNBZ0lDQWdaRzlqZFcxbGJuUXVZbTlrZVM1aGNIQmxibVFvZEdocGN5NWZaV3hsYldWdWRDazdYRzRnSUNBZ0lDQjlYRzVjYmlBZ0lDQWdJSFJvYVhNdVgyVnNaVzFsYm5RdWMzUjViR1V1WkdsemNHeGhlU0E5SUNkaWJHOWpheWM3WEc1Y2JpQWdJQ0FnSUhSb2FYTXVYMlZzWlcxbGJuUXVjbVZ0YjNabFFYUjBjbWxpZFhSbEtDZGhjbWxoTFdocFpHUmxiaWNwTzF4dVhHNGdJQ0FnSUNCMGFHbHpMbDlsYkdWdFpXNTBMbk5sZEVGMGRISnBZblYwWlNnbllYSnBZUzF0YjJSaGJDY3NJSFJ5ZFdVcE8xeHVYRzRnSUNBZ0lDQjBhR2x6TGw5bGJHVnRaVzUwTG5ObGRFRjBkSEpwWW5WMFpTZ25jbTlzWlNjc0lDZGthV0ZzYjJjbktUdGNibHh1SUNBZ0lDQWdkR2hwY3k1ZlpXeGxiV1Z1ZEM1elkzSnZiR3hVYjNBZ1BTQXdPMXh1SUNBZ0lDQWdZMjl1YzNRZ2JXOWtZV3hDYjJSNUlEMGdVMlZzWldOMGIzSkZibWRwYm1WZlgyUmxabUYxYkhRdVpHVm1ZWFZzZEM1bWFXNWtUMjVsS0ZORlRFVkRWRTlTWDAxUFJFRk1YMEpQUkZrc0lIUm9hWE11WDJScFlXeHZaeWs3WEc1Y2JpQWdJQ0FnSUdsbUlDaHRiMlJoYkVKdlpIa3BJSHRjYmlBZ0lDQWdJQ0FnYlc5a1lXeENiMlI1TG5OamNtOXNiRlJ2Y0NBOUlEQTdYRzRnSUNBZ0lDQjlYRzVjYmlBZ0lDQWdJR2x1WkdWNExuSmxabXh2ZHloMGFHbHpMbDlsYkdWdFpXNTBLVHRjYmx4dUlDQWdJQ0FnZEdocGN5NWZaV3hsYldWdWRDNWpiR0Z6YzB4cGMzUXVZV1JrS0VOTVFWTlRYMDVCVFVWZlUwaFBWeWs3WEc1Y2JpQWdJQ0FnSUdOdmJuTjBJSFJ5WVc1emFYUnBiMjVEYjIxd2JHVjBaU0E5SUNncElEMCtJSHRjYmlBZ0lDQWdJQ0FnYVdZZ0tIUm9hWE11WDJOdmJtWnBaeTVtYjJOMWN5a2dlMXh1SUNBZ0lDQWdJQ0FnSUhSb2FYTXVYMlp2WTNWemRISmhjQzVoWTNScGRtRjBaU2dwTzF4dUlDQWdJQ0FnSUNCOVhHNWNiaUFnSUNBZ0lDQWdkR2hwY3k1ZmFYTlVjbUZ1YzJsMGFXOXVhVzVuSUQwZ1ptRnNjMlU3WEc0Z0lDQWdJQ0FnSUVWMlpXNTBTR0Z1Wkd4bGNsOWZaR1ZtWVhWc2RDNWtaV1poZFd4MExuUnlhV2RuWlhJb2RHaHBjeTVmWld4bGJXVnVkQ3dnUlZaRlRsUmZVMGhQVjA0c0lIdGNiaUFnSUNBZ0lDQWdJQ0J5Wld4aGRHVmtWR0Z5WjJWMFhHNGdJQ0FnSUNBZ0lIMHBPMXh1SUNBZ0lDQWdmVHRjYmx4dUlDQWdJQ0FnZEdocGN5NWZjWFZsZFdWRFlXeHNZbUZqYXloMGNtRnVjMmwwYVc5dVEyOXRjR3hsZEdVc0lIUm9hWE11WDJScFlXeHZaeXdnZEdocGN5NWZhWE5CYm1sdFlYUmxaQ2dwS1R0Y2JpQWdJQ0I5WEc1Y2JpQWdJQ0JmWVdSa1JYWmxiblJNYVhOMFpXNWxjbk1vS1NCN1hHNGdJQ0FnSUNCRmRtVnVkRWhoYm1Sc1pYSmZYMlJsWm1GMWJIUXVaR1ZtWVhWc2RDNXZiaWgwYUdsekxsOWxiR1Z0Wlc1MExDQkZWa1ZPVkY5TFJWbEVUMWRPWDBSSlUwMUpVMU1zSUdWMlpXNTBJRDArSUh0Y2JpQWdJQ0FnSUNBZ2FXWWdLR1YyWlc1MExtdGxlU0FoUFQwZ1JWTkRRVkJGWDB0RldTa2dlMXh1SUNBZ0lDQWdJQ0FnSUhKbGRIVnlianRjYmlBZ0lDQWdJQ0FnZlZ4dVhHNGdJQ0FnSUNBZ0lHbG1JQ2gwYUdsekxsOWpiMjVtYVdjdWEyVjVZbTloY21RcElIdGNiaUFnSUNBZ0lDQWdJQ0JsZG1WdWRDNXdjbVYyWlc1MFJHVm1ZWFZzZENncE8xeHVJQ0FnSUNBZ0lDQWdJSFJvYVhNdWFHbGtaU2dwTzF4dUlDQWdJQ0FnSUNBZ0lISmxkSFZ5Ymp0Y2JpQWdJQ0FnSUNBZ2ZWeHVYRzRnSUNBZ0lDQWdJSFJvYVhNdVgzUnlhV2RuWlhKQ1lXTnJaSEp2Y0ZSeVlXNXphWFJwYjI0b0tUdGNiaUFnSUNBZ0lIMHBPMXh1SUNBZ0lDQWdSWFpsYm5SSVlXNWtiR1Z5WDE5a1pXWmhkV3gwTG1SbFptRjFiSFF1YjI0b2QybHVaRzkzTENCRlZrVk9WRjlTUlZOSldrVXNJQ2dwSUQwK0lIdGNiaUFnSUNBZ0lDQWdhV1lnS0hSb2FYTXVYMmx6VTJodmQyNGdKaVlnSVhSb2FYTXVYMmx6VkhKaGJuTnBkR2x2Ym1sdVp5a2dlMXh1SUNBZ0lDQWdJQ0FnSUhSb2FYTXVYMkZrYW5WemRFUnBZV3h2WnlncE8xeHVJQ0FnSUNBZ0lDQjlYRzRnSUNBZ0lDQjlLVHRjYmlBZ0lDQWdJRVYyWlc1MFNHRnVaR3hsY2w5ZlpHVm1ZWFZzZEM1a1pXWmhkV3gwTG05dUtIUm9hWE11WDJWc1pXMWxiblFzSUVWV1JVNVVYMDFQVlZORlJFOVhUbDlFU1ZOTlNWTlRMQ0JsZG1WdWRDQTlQaUI3WEc0Z0lDQWdJQ0FnSUM4dklHRWdZbUZrSUhSeWFXTnJJSFJ2SUhObFozSmxaMkYwWlNCamJHbGphM01nZEdoaGRDQnRZWGtnYzNSaGNuUWdhVzV6YVdSbElHUnBZV3h2WnlCaWRYUWdaVzVrSUc5MWRITnBaR1VzSUdGdVpDQmhkbTlwWkNCc2FYTjBaVzRnZEc4Z2MyTnliMnhzWW1GeUlHTnNhV05yYzF4dUlDQWdJQ0FnSUNCRmRtVnVkRWhoYm1Sc1pYSmZYMlJsWm1GMWJIUXVaR1ZtWVhWc2RDNXZibVVvZEdocGN5NWZaV3hsYldWdWRDd2dSVlpGVGxSZlEweEpRMHRmUkVsVFRVbFRVeXdnWlhabGJuUXlJRDArSUh0Y2JpQWdJQ0FnSUNBZ0lDQnBaaUFvZEdocGN5NWZaV3hsYldWdWRDQWhQVDBnWlhabGJuUXVkR0Z5WjJWMElIeDhJSFJvYVhNdVgyVnNaVzFsYm5RZ0lUMDlJR1YyWlc1ME1pNTBZWEpuWlhRcElIdGNiaUFnSUNBZ0lDQWdJQ0FnSUhKbGRIVnlianRjYmlBZ0lDQWdJQ0FnSUNCOVhHNWNiaUFnSUNBZ0lDQWdJQ0JwWmlBb2RHaHBjeTVmWTI5dVptbG5MbUpoWTJ0a2NtOXdJRDA5UFNBbmMzUmhkR2xqSnlrZ2UxeHVJQ0FnSUNBZ0lDQWdJQ0FnZEdocGN5NWZkSEpwWjJkbGNrSmhZMnRrY205d1ZISmhibk5wZEdsdmJpZ3BPMXh1WEc0Z0lDQWdJQ0FnSUNBZ0lDQnlaWFIxY200N1hHNGdJQ0FnSUNBZ0lDQWdmVnh1WEc0Z0lDQWdJQ0FnSUNBZ2FXWWdLSFJvYVhNdVgyTnZibVpwWnk1aVlXTnJaSEp2Y0NrZ2UxeHVJQ0FnSUNBZ0lDQWdJQ0FnZEdocGN5NW9hV1JsS0NrN1hHNGdJQ0FnSUNBZ0lDQWdmVnh1SUNBZ0lDQWdJQ0I5S1R0Y2JpQWdJQ0FnSUgwcE8xeHVJQ0FnSUgxY2JseHVJQ0FnSUY5b2FXUmxUVzlrWVd3b0tTQjdYRzRnSUNBZ0lDQjBhR2x6TGw5bGJHVnRaVzUwTG5OMGVXeGxMbVJwYzNCc1lYa2dQU0FuYm05dVpTYzdYRzVjYmlBZ0lDQWdJSFJvYVhNdVgyVnNaVzFsYm5RdWMyVjBRWFIwY21saWRYUmxLQ2RoY21saExXaHBaR1JsYmljc0lIUnlkV1VwTzF4dVhHNGdJQ0FnSUNCMGFHbHpMbDlsYkdWdFpXNTBMbkpsYlc5MlpVRjBkSEpwWW5WMFpTZ25ZWEpwWVMxdGIyUmhiQ2NwTzF4dVhHNGdJQ0FnSUNCMGFHbHpMbDlsYkdWdFpXNTBMbkpsYlc5MlpVRjBkSEpwWW5WMFpTZ25jbTlzWlNjcE8xeHVYRzRnSUNBZ0lDQjBhR2x6TGw5cGMxUnlZVzV6YVhScGIyNXBibWNnUFNCbVlXeHpaVHRjYmx4dUlDQWdJQ0FnZEdocGN5NWZZbUZqYTJSeWIzQXVhR2xrWlNnb0tTQTlQaUI3WEc0Z0lDQWdJQ0FnSUdSdlkzVnRaVzUwTG1KdlpIa3VZMnhoYzNOTWFYTjBMbkpsYlc5MlpTaERURUZUVTE5T1FVMUZYMDlRUlU0cE8xeHVYRzRnSUNBZ0lDQWdJSFJvYVhNdVgzSmxjMlYwUVdScWRYTjBiV1Z1ZEhNb0tUdGNibHh1SUNBZ0lDQWdJQ0IwYUdsekxsOXpZM0p2Ykd4Q1lYSXVjbVZ6WlhRb0tUdGNibHh1SUNBZ0lDQWdJQ0JGZG1WdWRFaGhibVJzWlhKZlgyUmxabUYxYkhRdVpHVm1ZWFZzZEM1MGNtbG5aMlZ5S0hSb2FYTXVYMlZzWlcxbGJuUXNJRVZXUlU1VVgwaEpSRVJGVGlrN1hHNGdJQ0FnSUNCOUtUdGNiaUFnSUNCOVhHNWNiaUFnSUNCZmFYTkJibWx0WVhSbFpDZ3BJSHRjYmlBZ0lDQWdJSEpsZEhWeWJpQjBhR2x6TGw5bGJHVnRaVzUwTG1Oc1lYTnpUR2x6ZEM1amIyNTBZV2x1Y3loRFRFRlRVMTlPUVUxRlgwWkJSRVVwTzF4dUlDQWdJSDFjYmx4dUlDQWdJRjkwY21sbloyVnlRbUZqYTJSeWIzQlVjbUZ1YzJsMGFXOXVLQ2tnZTF4dUlDQWdJQ0FnWTI5dWMzUWdhR2xrWlVWMlpXNTBJRDBnUlhabGJuUklZVzVrYkdWeVgxOWtaV1poZFd4MExtUmxabUYxYkhRdWRISnBaMmRsY2loMGFHbHpMbDlsYkdWdFpXNTBMQ0JGVmtWT1ZGOUlTVVJGWDFCU1JWWkZUbFJGUkNrN1hHNWNiaUFnSUNBZ0lHbG1JQ2hvYVdSbFJYWmxiblF1WkdWbVlYVnNkRkJ5WlhabGJuUmxaQ2tnZTF4dUlDQWdJQ0FnSUNCeVpYUjFjbTQ3WEc0Z0lDQWdJQ0I5WEc1Y2JpQWdJQ0FnSUdOdmJuTjBJR2x6VFc5a1lXeFBkbVZ5Wm14dmQybHVaeUE5SUhSb2FYTXVYMlZzWlcxbGJuUXVjMk55YjJ4c1NHVnBaMmgwSUQ0Z1pHOWpkVzFsYm5RdVpHOWpkVzFsYm5SRmJHVnRaVzUwTG1Oc2FXVnVkRWhsYVdkb2REdGNiaUFnSUNBZ0lHTnZibk4wSUdsdWFYUnBZV3hQZG1WeVpteHZkMWtnUFNCMGFHbHpMbDlsYkdWdFpXNTBMbk4wZVd4bExtOTJaWEptYkc5M1dUc2dMeThnY21WMGRYSnVJR2xtSUhSb1pTQm1iMnhzYjNkcGJtY2dZbUZqYTJkeWIzVnVaQ0IwY21GdWMybDBhVzl1SUdoaGMyNG5kQ0I1WlhRZ1kyOXRjR3hsZEdWa1hHNWNiaUFnSUNBZ0lHbG1JQ2hwYm1sMGFXRnNUM1psY21ac2IzZFpJRDA5UFNBbmFHbGtaR1Z1SnlCOGZDQjBhR2x6TGw5bGJHVnRaVzUwTG1Oc1lYTnpUR2x6ZEM1amIyNTBZV2x1Y3loRFRFRlRVMTlPUVUxRlgxTlVRVlJKUXlrcElIdGNiaUFnSUNBZ0lDQWdjbVYwZFhKdU8xeHVJQ0FnSUNBZ2ZWeHVYRzRnSUNBZ0lDQnBaaUFvSVdselRXOWtZV3hQZG1WeVpteHZkMmx1WnlrZ2UxeHVJQ0FnSUNBZ0lDQjBhR2x6TGw5bGJHVnRaVzUwTG5OMGVXeGxMbTkyWlhKbWJHOTNXU0E5SUNkb2FXUmtaVzRuTzF4dUlDQWdJQ0FnZlZ4dVhHNGdJQ0FnSUNCMGFHbHpMbDlsYkdWdFpXNTBMbU5zWVhOelRHbHpkQzVoWkdRb1EweEJVMU5mVGtGTlJWOVRWRUZVU1VNcE8xeHVYRzRnSUNBZ0lDQjBhR2x6TGw5eGRXVjFaVU5oYkd4aVlXTnJLQ2dwSUQwK0lIdGNiaUFnSUNBZ0lDQWdkR2hwY3k1ZlpXeGxiV1Z1ZEM1amJHRnpjMHhwYzNRdWNtVnRiM1psS0VOTVFWTlRYMDVCVFVWZlUxUkJWRWxES1R0Y2JseHVJQ0FnSUNBZ0lDQjBhR2x6TGw5eGRXVjFaVU5oYkd4aVlXTnJLQ2dwSUQwK0lIdGNiaUFnSUNBZ0lDQWdJQ0IwYUdsekxsOWxiR1Z0Wlc1MExuTjBlV3hsTG05MlpYSm1iRzkzV1NBOUlHbHVhWFJwWVd4UGRtVnlabXh2ZDFrN1hHNGdJQ0FnSUNBZ0lIMHNJSFJvYVhNdVgyUnBZV3h2WnlrN1hHNGdJQ0FnSUNCOUxDQjBhR2x6TGw5a2FXRnNiMmNwTzF4dVhHNGdJQ0FnSUNCMGFHbHpMbDlsYkdWdFpXNTBMbVp2WTNWektDazdYRzRnSUNBZ2ZWeHVJQ0FnSUM4cUtseHVJQ0FnSUNBcUlGUm9aU0JtYjJ4c2IzZHBibWNnYldWMGFHOWtjeUJoY21VZ2RYTmxaQ0IwYnlCb1lXNWtiR1VnYjNabGNtWnNiM2RwYm1jZ2JXOWtZV3h6WEc0Z0lDQWdJQ292WEc1Y2JseHVJQ0FnSUY5aFpHcDFjM1JFYVdGc2IyY29LU0I3WEc0Z0lDQWdJQ0JqYjI1emRDQnBjMDF2WkdGc1QzWmxjbVpzYjNkcGJtY2dQU0IwYUdsekxsOWxiR1Z0Wlc1MExuTmpjbTlzYkVobGFXZG9kQ0ErSUdSdlkzVnRaVzUwTG1SdlkzVnRaVzUwUld4bGJXVnVkQzVqYkdsbGJuUklaV2xuYUhRN1hHNWNiaUFnSUNBZ0lHTnZibk4wSUhOamNtOXNiR0poY2xkcFpIUm9JRDBnZEdocGN5NWZjMk55YjJ4c1FtRnlMbWRsZEZkcFpIUm9LQ2s3WEc1Y2JpQWdJQ0FnSUdOdmJuTjBJR2x6UW05a2VVOTJaWEptYkc5M2FXNW5JRDBnYzJOeWIyeHNZbUZ5VjJsa2RHZ2dQaUF3TzF4dVhHNGdJQ0FnSUNCcFppQW9hWE5DYjJSNVQzWmxjbVpzYjNkcGJtY2dKaVlnSVdselRXOWtZV3hQZG1WeVpteHZkMmx1WnlrZ2UxeHVJQ0FnSUNBZ0lDQmpiMjV6ZENCd2NtOXdaWEowZVNBOUlHbHVaR1Y0TG1selVsUk1LQ2tnUHlBbmNHRmtaR2x1WjB4bFpuUW5JRG9nSjNCaFpHUnBibWRTYVdkb2RDYzdYRzRnSUNBZ0lDQWdJSFJvYVhNdVgyVnNaVzFsYm5RdWMzUjViR1ZiY0hKdmNHVnlkSGxkSUQwZ1lDUjdjMk55YjJ4c1ltRnlWMmxrZEdoOWNIaGdPMXh1SUNBZ0lDQWdmVnh1WEc0Z0lDQWdJQ0JwWmlBb0lXbHpRbTlrZVU5MlpYSm1iRzkzYVc1bklDWW1JR2x6VFc5a1lXeFBkbVZ5Wm14dmQybHVaeWtnZTF4dUlDQWdJQ0FnSUNCamIyNXpkQ0J3Y205d1pYSjBlU0E5SUdsdVpHVjRMbWx6VWxSTUtDa2dQeUFuY0dGa1pHbHVaMUpwWjJoMEp5QTZJQ2R3WVdSa2FXNW5UR1ZtZENjN1hHNGdJQ0FnSUNBZ0lIUm9hWE11WDJWc1pXMWxiblF1YzNSNWJHVmJjSEp2Y0dWeWRIbGRJRDBnWUNSN2MyTnliMnhzWW1GeVYybGtkR2g5Y0hoZ08xeHVJQ0FnSUNBZ2ZWeHVJQ0FnSUgxY2JseHVJQ0FnSUY5eVpYTmxkRUZrYW5WemRHMWxiblJ6S0NrZ2UxeHVJQ0FnSUNBZ2RHaHBjeTVmWld4bGJXVnVkQzV6ZEhsc1pTNXdZV1JrYVc1blRHVm1kQ0E5SUNjbk8xeHVJQ0FnSUNBZ2RHaHBjeTVmWld4bGJXVnVkQzV6ZEhsc1pTNXdZV1JrYVc1blVtbG5hSFFnUFNBbkp6dGNiaUFnSUNCOUlDOHZJRk4wWVhScFkxeHVYRzVjYmlBZ0lDQnpkR0YwYVdNZ2FsRjFaWEo1U1c1MFpYSm1ZV05sS0dOdmJtWnBaeXdnY21Wc1lYUmxaRlJoY21kbGRDa2dlMXh1SUNBZ0lDQWdjbVYwZFhKdUlIUm9hWE11WldGamFDaG1kVzVqZEdsdmJpQW9LU0I3WEc0Z0lDQWdJQ0FnSUdOdmJuTjBJR1JoZEdFZ1BTQk5iMlJoYkM1blpYUlBja055WldGMFpVbHVjM1JoYm1ObEtIUm9hWE1zSUdOdmJtWnBaeWs3WEc1Y2JpQWdJQ0FnSUNBZ2FXWWdLSFI1Y0dWdlppQmpiMjVtYVdjZ0lUMDlJQ2R6ZEhKcGJtY25LU0I3WEc0Z0lDQWdJQ0FnSUNBZ2NtVjBkWEp1TzF4dUlDQWdJQ0FnSUNCOVhHNWNiaUFnSUNBZ0lDQWdhV1lnS0hSNWNHVnZaaUJrWVhSaFcyTnZibVpwWjEwZ1BUMDlJQ2QxYm1SbFptbHVaV1FuS1NCN1hHNGdJQ0FnSUNBZ0lDQWdkR2h5YjNjZ2JtVjNJRlI1Y0dWRmNuSnZjaWhnVG04Z2JXVjBhRzlrSUc1aGJXVmtJRndpSkh0amIyNW1hV2Q5WENKZ0tUdGNiaUFnSUNBZ0lDQWdmVnh1WEc0Z0lDQWdJQ0FnSUdSaGRHRmJZMjl1Wm1sblhTaHlaV3hoZEdWa1ZHRnlaMlYwS1R0Y2JpQWdJQ0FnSUgwcE8xeHVJQ0FnSUgxY2JseHVJQ0I5WEc0Z0lDOHFLbHh1SUNBZ0tpQkVZWFJoSUVGUVNTQnBiWEJzWlcxbGJuUmhkR2x2Ymx4dUlDQWdLaTljYmx4dVhHNGdJRVYyWlc1MFNHRnVaR3hsY2w5ZlpHVm1ZWFZzZEM1a1pXWmhkV3gwTG05dUtHUnZZM1Z0Wlc1MExDQkZWa1ZPVkY5RFRFbERTMTlFUVZSQlgwRlFTU3dnVTBWTVJVTlVUMUpmUkVGVVFWOVVUMGRIVEVVc0lHWjFibU4wYVc5dUlDaGxkbVZ1ZENrZ2UxeHVJQ0FnSUdOdmJuTjBJSFJoY21kbGRDQTlJR2x1WkdWNExtZGxkRVZzWlcxbGJuUkdjbTl0VTJWc1pXTjBiM0lvZEdocGN5azdYRzVjYmlBZ0lDQnBaaUFvV3lkQkp5d2dKMEZTUlVFblhTNXBibU5zZFdSbGN5aDBhR2x6TG5SaFowNWhiV1VwS1NCN1hHNGdJQ0FnSUNCbGRtVnVkQzV3Y21WMlpXNTBSR1ZtWVhWc2RDZ3BPMXh1SUNBZ0lIMWNibHh1SUNBZ0lFVjJaVzUwU0dGdVpHeGxjbDlmWkdWbVlYVnNkQzVrWldaaGRXeDBMbTl1WlNoMFlYSm5aWFFzSUVWV1JVNVVYMU5JVDFjc0lITm9iM2RGZG1WdWRDQTlQaUI3WEc0Z0lDQWdJQ0JwWmlBb2MyaHZkMFYyWlc1MExtUmxabUYxYkhSUWNtVjJaVzUwWldRcElIdGNiaUFnSUNBZ0lDQWdMeThnYjI1c2VTQnlaV2RwYzNSbGNpQm1iMk4xY3lCeVpYTjBiM0psY2lCcFppQnRiMlJoYkNCM2FXeHNJR0ZqZEhWaGJHeDVJR2RsZENCemFHOTNibHh1SUNBZ0lDQWdJQ0J5WlhSMWNtNDdYRzRnSUNBZ0lDQjlYRzVjYmlBZ0lDQWdJRVYyWlc1MFNHRnVaR3hsY2w5ZlpHVm1ZWFZzZEM1a1pXWmhkV3gwTG05dVpTaDBZWEpuWlhRc0lFVldSVTVVWDBoSlJFUkZUaXdnS0NrZ1BUNGdlMXh1SUNBZ0lDQWdJQ0JwWmlBb2FXNWtaWGd1YVhOV2FYTnBZbXhsS0hSb2FYTXBLU0I3WEc0Z0lDQWdJQ0FnSUNBZ2RHaHBjeTVtYjJOMWN5Z3BPMXh1SUNBZ0lDQWdJQ0I5WEc0Z0lDQWdJQ0I5S1R0Y2JpQWdJQ0I5S1RzZ0x5OGdZWFp2YVdRZ1kyOXVabXhwWTNRZ2QyaGxiaUJqYkdsamEybHVaeUJ0YjJSaGJDQjBiMmRuYkdWeUlIZG9hV3hsSUdGdWIzUm9aWElnYjI1bElHbHpJRzl3Wlc1Y2JseHVJQ0FnSUdOdmJuTjBJR0ZzY21WaFpIbFBjR1Z1SUQwZ1UyVnNaV04wYjNKRmJtZHBibVZmWDJSbFptRjFiSFF1WkdWbVlYVnNkQzVtYVc1a1QyNWxLRTlRUlU1ZlUwVk1SVU5VVDFJcE8xeHVYRzRnSUNBZ2FXWWdLR0ZzY21WaFpIbFBjR1Z1S1NCN1hHNGdJQ0FnSUNCTmIyUmhiQzVuWlhSSmJuTjBZVzVqWlNoaGJISmxZV1I1VDNCbGJpa3VhR2xrWlNncE8xeHVJQ0FnSUgxY2JseHVJQ0FnSUdOdmJuTjBJR1JoZEdFZ1BTQk5iMlJoYkM1blpYUlBja055WldGMFpVbHVjM1JoYm1ObEtIUmhjbWRsZENrN1hHNGdJQ0FnWkdGMFlTNTBiMmRuYkdVb2RHaHBjeWs3WEc0Z0lIMHBPMXh1SUNCamIyMXdiMjVsYm5SR2RXNWpkR2x2Ym5NdVpXNWhZbXhsUkdsemJXbHpjMVJ5YVdkblpYSW9UVzlrWVd3cE8xeHVJQ0F2S2lwY2JpQWdJQ29nYWxGMVpYSjVYRzRnSUNBcUwxeHVYRzRnSUdsdVpHVjRMbVJsWm1sdVpVcFJkV1Z5ZVZCc2RXZHBiaWhOYjJSaGJDazdYRzVjYmlBZ2NtVjBkWEp1SUUxdlpHRnNPMXh1WEc1OUtTazdYRzR2THlNZ2MyOTFjbU5sVFdGd2NHbHVaMVZTVEQxdGIyUmhiQzVxY3k1dFlYQmNiaUlzSWk4cUlWeHVJQ0FxSUVKdmIzUnpkSEpoY0NCd2IzQnZkbVZ5TG1weklIWTFMakl1TXlBb2FIUjBjSE02THk5blpYUmliMjkwYzNSeVlYQXVZMjl0THlsY2JpQWdLaUJEYjNCNWNtbG5hSFFnTWpBeE1TMHlNREl5SUZSb1pTQkNiMjkwYzNSeVlYQWdRWFYwYUc5eWN5QW9hSFIwY0hNNkx5OW5hWFJvZFdJdVkyOXRMM1IzWW5NdlltOXZkSE4wY21Gd0wyZHlZWEJvY3k5amIyNTBjbWxpZFhSdmNuTXBYRzRnSUNvZ1RHbGpaVzV6WldRZ2RXNWtaWElnVFVsVUlDaG9kSFJ3Y3pvdkwyZHBkR2gxWWk1amIyMHZkSGRpY3k5aWIyOTBjM1J5WVhBdllteHZZaTl0WVdsdUwweEpRMFZPVTBVcFhHNGdJQ292WEc0b1puVnVZM1JwYjI0Z0tHZHNiMkpoYkN3Z1ptRmpkRzl5ZVNrZ2UxeHVJQ0IwZVhCbGIyWWdaWGh3YjNKMGN5QTlQVDBnSjI5aWFtVmpkQ2NnSmlZZ2RIbHdaVzltSUcxdlpIVnNaU0FoUFQwZ0ozVnVaR1ZtYVc1bFpDY2dQeUJ0YjJSMWJHVXVaWGh3YjNKMGN5QTlJR1poWTNSdmNua29jbVZ4ZFdseVpTZ25MaTkxZEdsc0wybHVaR1Y0Snlrc0lISmxjWFZwY21Vb0p5NHZkRzl2YkhScGNDY3BLU0E2WEc0Z0lIUjVjR1Z2WmlCa1pXWnBibVVnUFQwOUlDZG1kVzVqZEdsdmJpY2dKaVlnWkdWbWFXNWxMbUZ0WkNBL0lHUmxabWx1WlNoYkp5NHZkWFJwYkM5cGJtUmxlQ2NzSUNjdUwzUnZiMngwYVhBblhTd2dabUZqZEc5eWVTa2dPbHh1SUNBb1oyeHZZbUZzSUQwZ2RIbHdaVzltSUdkc2IySmhiRlJvYVhNZ0lUMDlJQ2QxYm1SbFptbHVaV1FuSUQ4Z1oyeHZZbUZzVkdocGN5QTZJR2RzYjJKaGJDQjhmQ0J6Wld4bUxDQm5iRzlpWVd3dVVHOXdiM1psY2lBOUlHWmhZM1J2Y25rb1oyeHZZbUZzTGtsdVpHVjRMQ0JuYkc5aVlXd3VWRzl2YkhScGNDa3BPMXh1ZlNrb2RHaHBjeXdnS0daMWJtTjBhVzl1SUNocGJtUmxlQ3dnVkc5dmJIUnBjQ2tnZXlBbmRYTmxJSE4wY21samRDYzdYRzVjYmlBZ1kyOXVjM1FnWDJsdWRHVnliM0JFWldaaGRXeDBUR1ZuWVdONUlEMGdaU0E5UGlCbElDWW1JSFI1Y0dWdlppQmxJRDA5UFNBbmIySnFaV04wSnlBbUppQW5aR1ZtWVhWc2RDY2dhVzRnWlNBL0lHVWdPaUI3SUdSbFptRjFiSFE2SUdVZ2ZUdGNibHh1SUNCamIyNXpkQ0JVYjI5c2RHbHdYMTlrWldaaGRXeDBJRDBnTHlvalgxOVFWVkpGWDE4cUwxOXBiblJsY205d1JHVm1ZWFZzZEV4bFoyRmplU2hVYjI5c2RHbHdLVHRjYmx4dUlDQXZLaXBjYmlBZ0lDb2dMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzFjYmlBZ0lDb2dRbTl2ZEhOMGNtRndJQ2gyTlM0eUxqTXBPaUJ3YjNCdmRtVnlMbXB6WEc0Z0lDQXFJRXhwWTJWdWMyVmtJSFZ1WkdWeUlFMUpWQ0FvYUhSMGNITTZMeTluYVhSb2RXSXVZMjl0TDNSM1luTXZZbTl2ZEhOMGNtRndMMkpzYjJJdmJXRnBiaTlNU1VORlRsTkZLVnh1SUNBZ0tpQXRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMVnh1SUNBZ0tpOWNiaUFnTHlvcVhHNGdJQ0FxSUVOdmJuTjBZVzUwYzF4dUlDQWdLaTljYmx4dUlDQmpiMjV6ZENCT1FVMUZJRDBnSjNCdmNHOTJaWEluTzF4dUlDQmpiMjV6ZENCVFJVeEZRMVJQVWw5VVNWUk1SU0E5SUNjdWNHOXdiM1psY2kxb1pXRmtaWEluTzF4dUlDQmpiMjV6ZENCVFJVeEZRMVJQVWw5RFQwNVVSVTVVSUQwZ0p5NXdiM0J2ZG1WeUxXSnZaSGtuTzF4dUlDQmpiMjV6ZENCRVpXWmhkV3gwSUQwZ2V5QXVMaTVVYjI5c2RHbHdYMTlrWldaaGRXeDBMbVJsWm1GMWJIUXVSR1ZtWVhWc2RDeGNiaUFnSUNCamIyNTBaVzUwT2lBbkp5eGNiaUFnSUNCdlptWnpaWFE2SUZzd0xDQTRYU3hjYmlBZ0lDQndiR0ZqWlcxbGJuUTZJQ2R5YVdkb2RDY3NYRzRnSUNBZ2RHVnRjR3hoZEdVNklDYzhaR2wySUdOc1lYTnpQVndpY0c5d2IzWmxjbHdpSUhKdmJHVTlYQ0owYjI5c2RHbHdYQ0krSnlBcklDYzhaR2wySUdOc1lYTnpQVndpY0c5d2IzWmxjaTFoY25KdmQxd2lQand2WkdsMlBpY2dLeUFuUEdneklHTnNZWE56UFZ3aWNHOXdiM1psY2kxb1pXRmtaWEpjSWo0OEwyZ3pQaWNnS3lBblBHUnBkaUJqYkdGemN6MWNJbkJ2Y0c5MlpYSXRZbTlrZVZ3aVBqd3ZaR2wyUGljZ0t5QW5QQzlrYVhZK0p5eGNiaUFnSUNCMGNtbG5aMlZ5T2lBblkyeHBZMnNuWEc0Z0lIMDdYRzRnSUdOdmJuTjBJRVJsWm1GMWJIUlVlWEJsSUQwZ2V5QXVMaTVVYjI5c2RHbHdYMTlrWldaaGRXeDBMbVJsWm1GMWJIUXVSR1ZtWVhWc2RGUjVjR1VzWEc0Z0lDQWdZMjl1ZEdWdWREb2dKeWh1ZFd4c2ZITjBjbWx1WjN4bGJHVnRaVzUwZkdaMWJtTjBhVzl1S1NkY2JpQWdmVHRjYmlBZ0x5b3FYRzRnSUNBcUlFTnNZWE56SUdSbFptbHVhWFJwYjI1Y2JpQWdJQ292WEc1Y2JpQWdZMnhoYzNNZ1VHOXdiM1psY2lCbGVIUmxibVJ6SUZSdmIyeDBhWEJmWDJSbFptRjFiSFF1WkdWbVlYVnNkQ0I3WEc0Z0lDQWdMeThnUjJWMGRHVnljMXh1SUNBZ0lITjBZWFJwWXlCblpYUWdSR1ZtWVhWc2RDZ3BJSHRjYmlBZ0lDQWdJSEpsZEhWeWJpQkVaV1poZFd4ME8xeHVJQ0FnSUgxY2JseHVJQ0FnSUhOMFlYUnBZeUJuWlhRZ1JHVm1ZWFZzZEZSNWNHVW9LU0I3WEc0Z0lDQWdJQ0J5WlhSMWNtNGdSR1ZtWVhWc2RGUjVjR1U3WEc0Z0lDQWdmVnh1WEc0Z0lDQWdjM1JoZEdsaklHZGxkQ0JPUVUxRktDa2dlMXh1SUNBZ0lDQWdjbVYwZFhKdUlFNUJUVVU3WEc0Z0lDQWdmU0F2THlCUGRtVnljbWxrWlhOY2JseHVYRzRnSUNBZ1gybHpWMmwwYUVOdmJuUmxiblFvS1NCN1hHNGdJQ0FnSUNCeVpYUjFjbTRnZEdocGN5NWZaMlYwVkdsMGJHVW9LU0I4ZkNCMGFHbHpMbDluWlhSRGIyNTBaVzUwS0NrN1hHNGdJQ0FnZlNBdkx5QlFjbWwyWVhSbFhHNWNibHh1SUNBZ0lGOW5aWFJEYjI1MFpXNTBSbTl5VkdWdGNHeGhkR1VvS1NCN1hHNGdJQ0FnSUNCeVpYUjFjbTRnZTF4dUlDQWdJQ0FnSUNCYlUwVk1SVU5VVDFKZlZFbFVURVZkT2lCMGFHbHpMbDluWlhSVWFYUnNaU2dwTEZ4dUlDQWdJQ0FnSUNCYlUwVk1SVU5VVDFKZlEwOU9WRVZPVkYwNklIUm9hWE11WDJkbGRFTnZiblJsYm5Rb0tWeHVJQ0FnSUNBZ2ZUdGNiaUFnSUNCOVhHNWNiaUFnSUNCZloyVjBRMjl1ZEdWdWRDZ3BJSHRjYmlBZ0lDQWdJSEpsZEhWeWJpQjBhR2x6TGw5eVpYTnZiSFpsVUc5emMybGliR1ZHZFc1amRHbHZiaWgwYUdsekxsOWpiMjVtYVdjdVkyOXVkR1Z1ZENrN1hHNGdJQ0FnZlNBdkx5QlRkR0YwYVdOY2JseHVYRzRnSUNBZ2MzUmhkR2xqSUdwUmRXVnllVWx1ZEdWeVptRmpaU2hqYjI1bWFXY3BJSHRjYmlBZ0lDQWdJSEpsZEhWeWJpQjBhR2x6TG1WaFkyZ29ablZ1WTNScGIyNGdLQ2tnZTF4dUlDQWdJQ0FnSUNCamIyNXpkQ0JrWVhSaElEMGdVRzl3YjNabGNpNW5aWFJQY2tOeVpXRjBaVWx1YzNSaGJtTmxLSFJvYVhNc0lHTnZibVpwWnlrN1hHNWNiaUFnSUNBZ0lDQWdhV1lnS0hSNWNHVnZaaUJqYjI1bWFXY2dJVDA5SUNkemRISnBibWNuS1NCN1hHNGdJQ0FnSUNBZ0lDQWdjbVYwZFhKdU8xeHVJQ0FnSUNBZ0lDQjlYRzVjYmlBZ0lDQWdJQ0FnYVdZZ0tIUjVjR1Z2WmlCa1lYUmhXMk52Ym1acFoxMGdQVDA5SUNkMWJtUmxabWx1WldRbktTQjdYRzRnSUNBZ0lDQWdJQ0FnZEdoeWIzY2dibVYzSUZSNWNHVkZjbkp2Y2loZ1RtOGdiV1YwYUc5a0lHNWhiV1ZrSUZ3aUpIdGpiMjVtYVdkOVhDSmdLVHRjYmlBZ0lDQWdJQ0FnZlZ4dVhHNGdJQ0FnSUNBZ0lHUmhkR0ZiWTI5dVptbG5YU2dwTzF4dUlDQWdJQ0FnZlNrN1hHNGdJQ0FnZlZ4dVhHNGdJSDFjYmlBZ0x5b3FYRzRnSUNBcUlHcFJkV1Z5ZVZ4dUlDQWdLaTljYmx4dVhHNGdJR2x1WkdWNExtUmxabWx1WlVwUmRXVnllVkJzZFdkcGJpaFFiM0J2ZG1WeUtUdGNibHh1SUNCeVpYUjFjbTRnVUc5d2IzWmxjanRjYmx4dWZTa3BPMXh1THk4aklITnZkWEpqWlUxaGNIQnBibWRWVWt3OWNHOXdiM1psY2k1cWN5NXRZWEJjYmlJc0lpOHFJVnh1SUNBcUlFSnZiM1J6ZEhKaGNDQnpZM0p2Ykd4emNIa3Vhbk1nZGpVdU1pNHpJQ2hvZEhSd2N6b3ZMMmRsZEdKdmIzUnpkSEpoY0M1amIyMHZLVnh1SUNBcUlFTnZjSGx5YVdkb2RDQXlNREV4TFRJd01qSWdWR2hsSUVKdmIzUnpkSEpoY0NCQmRYUm9iM0p6SUNob2RIUndjem92TDJkcGRHaDFZaTVqYjIwdmRIZGljeTlpYjI5MGMzUnlZWEF2WjNKaGNHaHpMMk52Ym5SeWFXSjFkRzl5Y3lsY2JpQWdLaUJNYVdObGJuTmxaQ0IxYm1SbGNpQk5TVlFnS0doMGRIQnpPaTh2WjJsMGFIVmlMbU52YlM5MGQySnpMMkp2YjNSemRISmhjQzlpYkc5aUwyMWhhVzR2VEVsRFJVNVRSU2xjYmlBZ0tpOWNiaWhtZFc1amRHbHZiaUFvWjJ4dlltRnNMQ0JtWVdOMGIzSjVLU0I3WEc0Z0lIUjVjR1Z2WmlCbGVIQnZjblJ6SUQwOVBTQW5iMkpxWldOMEp5QW1KaUIwZVhCbGIyWWdiVzlrZFd4bElDRTlQU0FuZFc1a1pXWnBibVZrSnlBL0lHMXZaSFZzWlM1bGVIQnZjblJ6SUQwZ1ptRmpkRzl5ZVNoeVpYRjFhWEpsS0NjdUwzVjBhV3d2YVc1a1pYZ25LU3dnY21WeGRXbHlaU2duTGk5a2IyMHZaWFpsYm5RdGFHRnVaR3hsY2ljcExDQnlaWEYxYVhKbEtDY3VMMlJ2YlM5elpXeGxZM1J2Y2kxbGJtZHBibVVuS1N3Z2NtVnhkV2x5WlNnbkxpOWlZWE5sTFdOdmJYQnZibVZ1ZENjcEtTQTZYRzRnSUhSNWNHVnZaaUJrWldacGJtVWdQVDA5SUNkbWRXNWpkR2x2YmljZ0ppWWdaR1ZtYVc1bExtRnRaQ0EvSUdSbFptbHVaU2hiSnk0dmRYUnBiQzlwYm1SbGVDY3NJQ2N1TDJSdmJTOWxkbVZ1ZEMxb1lXNWtiR1Z5Snl3Z0p5NHZaRzl0TDNObGJHVmpkRzl5TFdWdVoybHVaU2NzSUNjdUwySmhjMlV0WTI5dGNHOXVaVzUwSjEwc0lHWmhZM1J2Y25rcElEcGNiaUFnS0dkc2IySmhiQ0E5SUhSNWNHVnZaaUJuYkc5aVlXeFVhR2x6SUNFOVBTQW5kVzVrWldacGJtVmtKeUEvSUdkc2IySmhiRlJvYVhNZ09pQm5iRzlpWVd3Z2ZId2djMlZzWml3Z1oyeHZZbUZzTGxOamNtOXNiSE53ZVNBOUlHWmhZM1J2Y25rb1oyeHZZbUZzTGtsdVpHVjRMQ0JuYkc5aVlXd3VSWFpsYm5SSVlXNWtiR1Z5TENCbmJHOWlZV3d1VTJWc1pXTjBiM0pGYm1kcGJtVXNJR2RzYjJKaGJDNUNZWE5sUTI5dGNHOXVaVzUwS1NrN1hHNTlLU2gwYUdsekxDQW9ablZ1WTNScGIyNGdLR2x1WkdWNExDQkZkbVZ1ZEVoaGJtUnNaWElzSUZObGJHVmpkRzl5Ulc1bmFXNWxMQ0JDWVhObFEyOXRjRzl1Wlc1MEtTQjdJQ2QxYzJVZ2MzUnlhV04wSnp0Y2JseHVJQ0JqYjI1emRDQmZhVzUwWlhKdmNFUmxabUYxYkhSTVpXZGhZM2tnUFNCbElEMCtJR1VnSmlZZ2RIbHdaVzltSUdVZ1BUMDlJQ2R2WW1wbFkzUW5JQ1ltSUNka1pXWmhkV3gwSnlCcGJpQmxJRDhnWlNBNklIc2daR1ZtWVhWc2REb2daU0I5TzF4dVhHNGdJR052Ym5OMElFVjJaVzUwU0dGdVpHeGxjbDlmWkdWbVlYVnNkQ0E5SUM4cUkxOWZVRlZTUlY5ZktpOWZhVzUwWlhKdmNFUmxabUYxYkhSTVpXZGhZM2tvUlhabGJuUklZVzVrYkdWeUtUdGNiaUFnWTI5dWMzUWdVMlZzWldOMGIzSkZibWRwYm1WZlgyUmxabUYxYkhRZ1BTQXZLaU5mWDFCVlVrVmZYeW92WDJsdWRHVnliM0JFWldaaGRXeDBUR1ZuWVdONUtGTmxiR1ZqZEc5eVJXNW5hVzVsS1R0Y2JpQWdZMjl1YzNRZ1FtRnpaVU52YlhCdmJtVnVkRjlmWkdWbVlYVnNkQ0E5SUM4cUkxOWZVRlZTUlY5ZktpOWZhVzUwWlhKdmNFUmxabUYxYkhSTVpXZGhZM2tvUW1GelpVTnZiWEJ2Ym1WdWRDazdYRzVjYmlBZ0x5b3FYRzRnSUNBcUlDMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRYRzRnSUNBcUlFSnZiM1J6ZEhKaGNDQW9kalV1TWk0ektUb2djMk55YjJ4c2MzQjVMbXB6WEc0Z0lDQXFJRXhwWTJWdWMyVmtJSFZ1WkdWeUlFMUpWQ0FvYUhSMGNITTZMeTluYVhSb2RXSXVZMjl0TDNSM1luTXZZbTl2ZEhOMGNtRndMMkpzYjJJdmJXRnBiaTlNU1VORlRsTkZLVnh1SUNBZ0tpQXRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMVnh1SUNBZ0tpOWNiaUFnTHlvcVhHNGdJQ0FxSUVOdmJuTjBZVzUwYzF4dUlDQWdLaTljYmx4dUlDQmpiMjV6ZENCT1FVMUZJRDBnSjNOamNtOXNiSE53ZVNjN1hHNGdJR052Ym5OMElFUkJWRUZmUzBWWklEMGdKMkp6TG5OamNtOXNiSE53ZVNjN1hHNGdJR052Ym5OMElFVldSVTVVWDB0RldTQTlJR0F1Skh0RVFWUkJYMHRGV1gxZ08xeHVJQ0JqYjI1emRDQkVRVlJCWDBGUVNWOUxSVmtnUFNBbkxtUmhkR0V0WVhCcEp6dGNiaUFnWTI5dWMzUWdSVlpGVGxSZlFVTlVTVlpCVkVVZ1BTQmdZV04wYVhaaGRHVWtlMFZXUlU1VVgwdEZXWDFnTzF4dUlDQmpiMjV6ZENCRlZrVk9WRjlEVEVsRFN5QTlJR0JqYkdsamF5UjdSVlpGVGxSZlMwVlpmV0E3WEc0Z0lHTnZibk4wSUVWV1JVNVVYMHhQUVVSZlJFRlVRVjlCVUVrZ1BTQmdiRzloWkNSN1JWWkZUbFJmUzBWWmZTUjdSRUZVUVY5QlVFbGZTMFZaZldBN1hHNGdJR052Ym5OMElFTk1RVk5UWDA1QlRVVmZSRkpQVUVSUFYwNWZTVlJGVFNBOUlDZGtjbTl3Wkc5M2JpMXBkR1Z0Snp0Y2JpQWdZMjl1YzNRZ1EweEJVMU5mVGtGTlJWOUJRMVJKVmtVZ1BTQW5ZV04wYVhabEp6dGNiaUFnWTI5dWMzUWdVMFZNUlVOVVQxSmZSRUZVUVY5VFVGa2dQU0FuVzJSaGRHRXRZbk10YzNCNVBWd2ljMk55YjJ4c1hDSmRKenRjYmlBZ1kyOXVjM1FnVTBWTVJVTlVUMUpmVkVGU1IwVlVYMHhKVGt0VElEMGdKMXRvY21WbVhTYzdYRzRnSUdOdmJuTjBJRk5GVEVWRFZFOVNYMDVCVmw5TVNWTlVYMGRTVDFWUUlEMGdKeTV1WVhZc0lDNXNhWE4wTFdkeWIzVndKenRjYmlBZ1kyOXVjM1FnVTBWTVJVTlVUMUpmVGtGV1gweEpUa3RUSUQwZ0p5NXVZWFl0YkdsdWF5YzdYRzRnSUdOdmJuTjBJRk5GVEVWRFZFOVNYMDVCVmw5SlZFVk5VeUE5SUNjdWJtRjJMV2wwWlcwbk8xeHVJQ0JqYjI1emRDQlRSVXhGUTFSUFVsOU1TVk5VWDBsVVJVMVRJRDBnSnk1c2FYTjBMV2R5YjNWd0xXbDBaVzBuTzF4dUlDQmpiMjV6ZENCVFJVeEZRMVJQVWw5TVNVNUxYMGxVUlUxVElEMGdZQ1I3VTBWTVJVTlVUMUpmVGtGV1gweEpUa3RUZlN3Z0pIdFRSVXhGUTFSUFVsOU9RVlpmU1ZSRlRWTjlJRDRnSkh0VFJVeEZRMVJQVWw5T1FWWmZURWxPUzFOOUxDQWtlMU5GVEVWRFZFOVNYMHhKVTFSZlNWUkZUVk45WUR0Y2JpQWdZMjl1YzNRZ1UwVk1SVU5VVDFKZlJGSlBVRVJQVjA0Z1BTQW5MbVJ5YjNCa2IzZHVKenRjYmlBZ1kyOXVjM1FnVTBWTVJVTlVUMUpmUkZKUFVFUlBWMDVmVkU5SFIweEZJRDBnSnk1a2NtOXdaRzkzYmkxMGIyZG5iR1VuTzF4dUlDQmpiMjV6ZENCRVpXWmhkV3gwSUQwZ2UxeHVJQ0FnSUc5bVpuTmxkRG9nYm5Wc2JDeGNiaUFnSUNBdkx5QlVUMFJQT2lCMk5pQkFaR1Z3Y21WallYUmxaQ3dnYTJWbGNDQnBkQ0JtYjNJZ1ltRmphM2RoY21SeklHTnZiWEJoZEdsaWFXeHBkSGtnY21WaGMyOXVjMXh1SUNBZ0lISnZiM1JOWVhKbmFXNDZJQ2N3Y0hnZ01IQjRJQzB5TlNVbkxGeHVJQ0FnSUhOdGIyOTBhRk5qY205c2JEb2dabUZzYzJVc1hHNGdJQ0FnZEdGeVoyVjBPaUJ1ZFd4c0xGeHVJQ0FnSUhSb2NtVnphRzlzWkRvZ1d6QXVNU3dnTUM0MUxDQXhYVnh1SUNCOU8xeHVJQ0JqYjI1emRDQkVaV1poZFd4MFZIbHdaU0E5SUh0Y2JpQWdJQ0J2Wm1aelpYUTZJQ2NvYm5WdFltVnlmRzUxYkd3cEp5eGNiaUFnSUNBdkx5QlVUMFJQSUhZMklFQmtaWEJ5WldOaGRHVmtMQ0JyWldWd0lHbDBJR1p2Y2lCaVlXTnJkMkZ5WkhNZ1kyOXRjR0YwYVdKcGJHbDBlU0J5WldGemIyNXpYRzRnSUNBZ2NtOXZkRTFoY21kcGJqb2dKM04wY21sdVp5Y3NYRzRnSUNBZ2MyMXZiM1JvVTJOeWIyeHNPaUFuWW05dmJHVmhiaWNzWEc0Z0lDQWdkR0Z5WjJWME9pQW5aV3hsYldWdWRDY3NYRzRnSUNBZ2RHaHlaWE5vYjJ4a09pQW5ZWEp5WVhrblhHNGdJSDA3WEc0Z0lDOHFLbHh1SUNBZ0tpQkRiR0Z6Y3lCa1pXWnBibWwwYVc5dVhHNGdJQ0FxTDF4dVhHNGdJR05zWVhOeklGTmpjbTlzYkZOd2VTQmxlSFJsYm1SeklFSmhjMlZEYjIxd2IyNWxiblJmWDJSbFptRjFiSFF1WkdWbVlYVnNkQ0I3WEc0Z0lDQWdZMjl1YzNSeWRXTjBiM0lvWld4bGJXVnVkQ3dnWTI5dVptbG5LU0I3WEc0Z0lDQWdJQ0J6ZFhCbGNpaGxiR1Z0Wlc1MExDQmpiMjVtYVdjcE95QXZMeUIwYUdsekxsOWxiR1Z0Wlc1MElHbHpJSFJvWlNCdlluTmxjblpoWW14bGMwTnZiblJoYVc1bGNpQmhibVFnWTI5dVptbG5MblJoY21kbGRDQjBhR1VnYldWdWRTQnNhVzVyY3lCM2NtRndjR1Z5WEc1Y2JpQWdJQ0FnSUhSb2FYTXVYM1JoY21kbGRFeHBibXR6SUQwZ2JtVjNJRTFoY0NncE8xeHVJQ0FnSUNBZ2RHaHBjeTVmYjJKelpYSjJZV0pzWlZObFkzUnBiMjV6SUQwZ2JtVjNJRTFoY0NncE8xeHVJQ0FnSUNBZ2RHaHBjeTVmY205dmRFVnNaVzFsYm5RZ1BTQm5aWFJEYjIxd2RYUmxaRk4wZVd4bEtIUm9hWE11WDJWc1pXMWxiblFwTG05MlpYSm1iRzkzV1NBOVBUMGdKM1pwYzJsaWJHVW5JRDhnYm5Wc2JDQTZJSFJvYVhNdVgyVnNaVzFsYm5RN1hHNGdJQ0FnSUNCMGFHbHpMbDloWTNScGRtVlVZWEpuWlhRZ1BTQnVkV3hzTzF4dUlDQWdJQ0FnZEdocGN5NWZiMkp6WlhKMlpYSWdQU0J1ZFd4c08xeHVJQ0FnSUNBZ2RHaHBjeTVmY0hKbGRtbHZkWE5UWTNKdmJHeEVZWFJoSUQwZ2UxeHVJQ0FnSUNBZ0lDQjJhWE5wWW14bFJXNTBjbmxVYjNBNklEQXNYRzRnSUNBZ0lDQWdJSEJoY21WdWRGTmpjbTlzYkZSdmNEb2dNRnh1SUNBZ0lDQWdmVHRjYmlBZ0lDQWdJSFJvYVhNdWNtVm1jbVZ6YUNncE95QXZMeUJwYm1sMGFXRnNhWHBsWEc0Z0lDQWdmU0F2THlCSFpYUjBaWEp6WEc1Y2JseHVJQ0FnSUhOMFlYUnBZeUJuWlhRZ1JHVm1ZWFZzZENncElIdGNiaUFnSUNBZ0lISmxkSFZ5YmlCRVpXWmhkV3gwTzF4dUlDQWdJSDFjYmx4dUlDQWdJSE4wWVhScFl5Qm5aWFFnUkdWbVlYVnNkRlI1Y0dVb0tTQjdYRzRnSUNBZ0lDQnlaWFIxY200Z1JHVm1ZWFZzZEZSNWNHVTdYRzRnSUNBZ2ZWeHVYRzRnSUNBZ2MzUmhkR2xqSUdkbGRDQk9RVTFGS0NrZ2UxeHVJQ0FnSUNBZ2NtVjBkWEp1SUU1QlRVVTdYRzRnSUNBZ2ZTQXZMeUJRZFdKc2FXTmNibHh1WEc0Z0lDQWdjbVZtY21WemFDZ3BJSHRjYmlBZ0lDQWdJSFJvYVhNdVgybHVhWFJwWVd4cGVtVlVZWEpuWlhSelFXNWtUMkp6WlhKMllXSnNaWE1vS1R0Y2JseHVJQ0FnSUNBZ2RHaHBjeTVmYldGNVltVkZibUZpYkdWVGJXOXZkR2hUWTNKdmJHd29LVHRjYmx4dUlDQWdJQ0FnYVdZZ0tIUm9hWE11WDI5aWMyVnlkbVZ5S1NCN1hHNGdJQ0FnSUNBZ0lIUm9hWE11WDI5aWMyVnlkbVZ5TG1ScGMyTnZibTVsWTNRb0tUdGNiaUFnSUNBZ0lIMGdaV3h6WlNCN1hHNGdJQ0FnSUNBZ0lIUm9hWE11WDI5aWMyVnlkbVZ5SUQwZ2RHaHBjeTVmWjJWMFRtVjNUMkp6WlhKMlpYSW9LVHRjYmlBZ0lDQWdJSDFjYmx4dUlDQWdJQ0FnWm05eUlDaGpiMjV6ZENCelpXTjBhVzl1SUc5bUlIUm9hWE11WDI5aWMyVnlkbUZpYkdWVFpXTjBhVzl1Y3k1MllXeDFaWE1vS1NrZ2UxeHVJQ0FnSUNBZ0lDQjBhR2x6TGw5dlluTmxjblpsY2k1dlluTmxjblpsS0hObFkzUnBiMjRwTzF4dUlDQWdJQ0FnZlZ4dUlDQWdJSDFjYmx4dUlDQWdJR1JwYzNCdmMyVW9LU0I3WEc0Z0lDQWdJQ0IwYUdsekxsOXZZbk5sY25abGNpNWthWE5qYjI1dVpXTjBLQ2s3WEc1Y2JpQWdJQ0FnSUhOMWNHVnlMbVJwYzNCdmMyVW9LVHRjYmlBZ0lDQjlJQzh2SUZCeWFYWmhkR1ZjYmx4dVhHNGdJQ0FnWDJOdmJtWnBaMEZtZEdWeVRXVnlaMlVvWTI5dVptbG5LU0I3WEc0Z0lDQWdJQ0F2THlCVVQwUlBPaUJ2YmlCMk5pQjBZWEpuWlhRZ2MyaHZkV3hrSUdKbElHZHBkbVZ1SUdWNGNHeHBZMmwwYkhrZ0ppQnlaVzF2ZG1VZ2RHaGxJSHQwWVhKblpYUTZJQ2R6Y3kxMFlYSm5aWFFuZlNCallYTmxYRzRnSUNBZ0lDQmpiMjVtYVdjdWRHRnlaMlYwSUQwZ2FXNWtaWGd1WjJWMFJXeGxiV1Z1ZENoamIyNW1hV2N1ZEdGeVoyVjBLU0I4ZkNCa2IyTjFiV1Z1ZEM1aWIyUjVPeUF2THlCVVQwUlBPaUIyTmlCUGJteDVJR1p2Y2lCaVlXTnJkMkZ5WkhNZ1kyOXRjR0YwYVdKcGJHbDBlU0J5WldGemIyNXpMaUJWYzJVZ2NtOXZkRTFoY21kcGJpQnZibXg1WEc1Y2JpQWdJQ0FnSUdOdmJtWnBaeTV5YjI5MFRXRnlaMmx1SUQwZ1kyOXVabWxuTG05bVpuTmxkQ0EvSUdBa2UyTnZibVpwWnk1dlptWnpaWFI5Y0hnZ01IQjRJQzB6TUNWZ0lEb2dZMjl1Wm1sbkxuSnZiM1JOWVhKbmFXNDdYRzVjYmlBZ0lDQWdJR2xtSUNoMGVYQmxiMllnWTI5dVptbG5MblJvY21WemFHOXNaQ0E5UFQwZ0ozTjBjbWx1WnljcElIdGNiaUFnSUNBZ0lDQWdZMjl1Wm1sbkxuUm9jbVZ6YUc5c1pDQTlJR052Ym1acFp5NTBhSEpsYzJodmJHUXVjM0JzYVhRb0p5d25LUzV0WVhBb2RtRnNkV1VnUFQ0Z1RuVnRZbVZ5TG5CaGNuTmxSbXh2WVhRb2RtRnNkV1VwS1R0Y2JpQWdJQ0FnSUgxY2JseHVJQ0FnSUNBZ2NtVjBkWEp1SUdOdmJtWnBaenRjYmlBZ0lDQjlYRzVjYmlBZ0lDQmZiV0Y1WW1WRmJtRmliR1ZUYlc5dmRHaFRZM0p2Ykd3b0tTQjdYRzRnSUNBZ0lDQnBaaUFvSVhSb2FYTXVYMk52Ym1acFp5NXpiVzl2ZEdoVFkzSnZiR3dwSUh0Y2JpQWdJQ0FnSUNBZ2NtVjBkWEp1TzF4dUlDQWdJQ0FnZlNBdkx5QjFibkpsWjJsemRHVnlJR0Z1ZVNCd2NtVjJhVzkxY3lCc2FYTjBaVzVsY25OY2JseHVYRzRnSUNBZ0lDQkZkbVZ1ZEVoaGJtUnNaWEpmWDJSbFptRjFiSFF1WkdWbVlYVnNkQzV2Wm1Zb2RHaHBjeTVmWTI5dVptbG5MblJoY21kbGRDd2dSVlpGVGxSZlEweEpRMHNwTzF4dUlDQWdJQ0FnUlhabGJuUklZVzVrYkdWeVgxOWtaV1poZFd4MExtUmxabUYxYkhRdWIyNG9kR2hwY3k1ZlkyOXVabWxuTG5SaGNtZGxkQ3dnUlZaRlRsUmZRMHhKUTBzc0lGTkZURVZEVkU5U1gxUkJVa2RGVkY5TVNVNUxVeXdnWlhabGJuUWdQVDRnZTF4dUlDQWdJQ0FnSUNCamIyNXpkQ0J2WW5ObGNuWmhZbXhsVTJWamRHbHZiaUE5SUhSb2FYTXVYMjlpYzJWeWRtRmliR1ZUWldOMGFXOXVjeTVuWlhRb1pYWmxiblF1ZEdGeVoyVjBMbWhoYzJncE8xeHVYRzRnSUNBZ0lDQWdJR2xtSUNodlluTmxjblpoWW14bFUyVmpkR2x2YmlrZ2UxeHVJQ0FnSUNBZ0lDQWdJR1YyWlc1MExuQnlaWFpsYm5SRVpXWmhkV3gwS0NrN1hHNGdJQ0FnSUNBZ0lDQWdZMjl1YzNRZ2NtOXZkQ0E5SUhSb2FYTXVYM0p2YjNSRmJHVnRaVzUwSUh4OElIZHBibVJ2ZHp0Y2JpQWdJQ0FnSUNBZ0lDQmpiMjV6ZENCb1pXbG5hSFFnUFNCdlluTmxjblpoWW14bFUyVmpkR2x2Ymk1dlptWnpaWFJVYjNBZ0xTQjBhR2x6TGw5bGJHVnRaVzUwTG05bVpuTmxkRlJ2Y0R0Y2JseHVJQ0FnSUNBZ0lDQWdJR2xtSUNoeWIyOTBMbk5qY205c2JGUnZLU0I3WEc0Z0lDQWdJQ0FnSUNBZ0lDQnliMjkwTG5OamNtOXNiRlJ2S0h0Y2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnZEc5d09pQm9aV2xuYUhRc1hHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUdKbGFHRjJhVzl5T2lBbmMyMXZiM1JvSjF4dUlDQWdJQ0FnSUNBZ0lDQWdmU2s3WEc0Z0lDQWdJQ0FnSUNBZ0lDQnlaWFIxY200N1hHNGdJQ0FnSUNBZ0lDQWdmU0F2THlCRGFISnZiV1VnTmpBZ1pHOWxjMjRuZENCemRYQndiM0owSUdCelkzSnZiR3hVYjJCY2JseHVYRzRnSUNBZ0lDQWdJQ0FnY205dmRDNXpZM0p2Ykd4VWIzQWdQU0JvWldsbmFIUTdYRzRnSUNBZ0lDQWdJSDFjYmlBZ0lDQWdJSDBwTzF4dUlDQWdJSDFjYmx4dUlDQWdJRjluWlhST1pYZFBZbk5sY25abGNpZ3BJSHRjYmlBZ0lDQWdJR052Ym5OMElHOXdkR2x2Ym5NZ1BTQjdYRzRnSUNBZ0lDQWdJSEp2YjNRNklIUm9hWE11WDNKdmIzUkZiR1Z0Wlc1MExGeHVJQ0FnSUNBZ0lDQjBhSEpsYzJodmJHUTZJSFJvYVhNdVgyTnZibVpwWnk1MGFISmxjMmh2YkdRc1hHNGdJQ0FnSUNBZ0lISnZiM1JOWVhKbmFXNDZJSFJvYVhNdVgyTnZibVpwWnk1eWIyOTBUV0Z5WjJsdVhHNGdJQ0FnSUNCOU8xeHVJQ0FnSUNBZ2NtVjBkWEp1SUc1bGR5QkpiblJsY25ObFkzUnBiMjVQWW5ObGNuWmxjaWhsYm5SeWFXVnpJRDArSUhSb2FYTXVYMjlpYzJWeWRtVnlRMkZzYkdKaFkyc29aVzUwY21sbGN5a3NJRzl3ZEdsdmJuTXBPMXh1SUNBZ0lIMGdMeThnVkdobElHeHZaMmxqSUc5bUlITmxiR1ZqZEdsdmJseHVYRzVjYmlBZ0lDQmZiMkp6WlhKMlpYSkRZV3hzWW1GamF5aGxiblJ5YVdWektTQjdYRzRnSUNBZ0lDQmpiMjV6ZENCMFlYSm5aWFJGYkdWdFpXNTBJRDBnWlc1MGNua2dQVDRnZEdocGN5NWZkR0Z5WjJWMFRHbHVhM011WjJWMEtHQWpKSHRsYm5SeWVTNTBZWEpuWlhRdWFXUjlZQ2s3WEc1Y2JpQWdJQ0FnSUdOdmJuTjBJR0ZqZEdsMllYUmxJRDBnWlc1MGNua2dQVDRnZTF4dUlDQWdJQ0FnSUNCMGFHbHpMbDl3Y21WMmFXOTFjMU5qY205c2JFUmhkR0V1ZG1semFXSnNaVVZ1ZEhKNVZHOXdJRDBnWlc1MGNua3VkR0Z5WjJWMExtOW1abk5sZEZSdmNEdGNibHh1SUNBZ0lDQWdJQ0IwYUdsekxsOXdjbTlqWlhOektIUmhjbWRsZEVWc1pXMWxiblFvWlc1MGNua3BLVHRjYmlBZ0lDQWdJSDA3WEc1Y2JpQWdJQ0FnSUdOdmJuTjBJSEJoY21WdWRGTmpjbTlzYkZSdmNDQTlJQ2gwYUdsekxsOXliMjkwUld4bGJXVnVkQ0I4ZkNCa2IyTjFiV1Z1ZEM1a2IyTjFiV1Z1ZEVWc1pXMWxiblFwTG5OamNtOXNiRlJ2Y0R0Y2JpQWdJQ0FnSUdOdmJuTjBJSFZ6WlhKVFkzSnZiR3h6Ukc5M2JpQTlJSEJoY21WdWRGTmpjbTlzYkZSdmNDQStQU0IwYUdsekxsOXdjbVYyYVc5MWMxTmpjbTlzYkVSaGRHRXVjR0Z5Wlc1MFUyTnliMnhzVkc5d08xeHVJQ0FnSUNBZ2RHaHBjeTVmY0hKbGRtbHZkWE5UWTNKdmJHeEVZWFJoTG5CaGNtVnVkRk5qY205c2JGUnZjQ0E5SUhCaGNtVnVkRk5qY205c2JGUnZjRHRjYmx4dUlDQWdJQ0FnWm05eUlDaGpiMjV6ZENCbGJuUnllU0J2WmlCbGJuUnlhV1Z6S1NCN1hHNGdJQ0FnSUNBZ0lHbG1JQ2doWlc1MGNua3VhWE5KYm5SbGNuTmxZM1JwYm1jcElIdGNiaUFnSUNBZ0lDQWdJQ0IwYUdsekxsOWhZM1JwZG1WVVlYSm5aWFFnUFNCdWRXeHNPMXh1WEc0Z0lDQWdJQ0FnSUNBZ2RHaHBjeTVmWTJ4bFlYSkJZM1JwZG1WRGJHRnpjeWgwWVhKblpYUkZiR1Z0Wlc1MEtHVnVkSEo1S1NrN1hHNWNiaUFnSUNBZ0lDQWdJQ0JqYjI1MGFXNTFaVHRjYmlBZ0lDQWdJQ0FnZlZ4dVhHNGdJQ0FnSUNBZ0lHTnZibk4wSUdWdWRISjVTWE5NYjNkbGNsUm9ZVzVRY21WMmFXOTFjeUE5SUdWdWRISjVMblJoY21kbGRDNXZabVp6WlhSVWIzQWdQajBnZEdocGN5NWZjSEpsZG1sdmRYTlRZM0p2Ykd4RVlYUmhMblpwYzJsaWJHVkZiblJ5ZVZSdmNEc2dMeThnYVdZZ2QyVWdZWEpsSUhOamNtOXNiR2x1WnlCa2IzZHVMQ0J3YVdOcklIUm9aU0JpYVdkblpYSWdiMlptYzJWMFZHOXdYRzVjYmlBZ0lDQWdJQ0FnYVdZZ0tIVnpaWEpUWTNKdmJHeHpSRzkzYmlBbUppQmxiblJ5ZVVselRHOTNaWEpVYUdGdVVISmxkbWx2ZFhNcElIdGNiaUFnSUNBZ0lDQWdJQ0JoWTNScGRtRjBaU2hsYm5SeWVTazdJQzh2SUdsbUlIQmhjbVZ1ZENCcGMyNG5kQ0J6WTNKdmJHeGxaQ3dnYkdWMEozTWdhMlZsY0NCMGFHVWdabWx5YzNRZ2RtbHphV0pzWlNCcGRHVnRMQ0JpY21WaGEybHVaeUIwYUdVZ2FYUmxjbUYwYVc5dVhHNWNiaUFnSUNBZ0lDQWdJQ0JwWmlBb0lYQmhjbVZ1ZEZOamNtOXNiRlJ2Y0NrZ2UxeHVJQ0FnSUNBZ0lDQWdJQ0FnY21WMGRYSnVPMXh1SUNBZ0lDQWdJQ0FnSUgxY2JseHVJQ0FnSUNBZ0lDQWdJR052Ym5ScGJuVmxPMXh1SUNBZ0lDQWdJQ0I5SUM4dklHbG1JSGRsSUdGeVpTQnpZM0p2Ykd4cGJtY2dkWEFzSUhCcFkyc2dkR2hsSUhOdFlXeHNaWE4wSUc5bVpuTmxkRlJ2Y0Z4dVhHNWNiaUFnSUNBZ0lDQWdhV1lnS0NGMWMyVnlVMk55YjJ4c2MwUnZkMjRnSmlZZ0lXVnVkSEo1U1hOTWIzZGxjbFJvWVc1UWNtVjJhVzkxY3lrZ2UxeHVJQ0FnSUNBZ0lDQWdJR0ZqZEdsMllYUmxLR1Z1ZEhKNUtUdGNiaUFnSUNBZ0lDQWdmVnh1SUNBZ0lDQWdmVnh1SUNBZ0lIMWNibHh1SUNBZ0lGOXBibWwwYVdGc2FYcGxWR0Z5WjJWMGMwRnVaRTlpYzJWeWRtRmliR1Z6S0NrZ2UxeHVJQ0FnSUNBZ2RHaHBjeTVmZEdGeVoyVjBUR2x1YTNNZ1BTQnVaWGNnVFdGd0tDazdYRzRnSUNBZ0lDQjBhR2x6TGw5dlluTmxjblpoWW14bFUyVmpkR2x2Ym5NZ1BTQnVaWGNnVFdGd0tDazdYRzRnSUNBZ0lDQmpiMjV6ZENCMFlYSm5aWFJNYVc1cmN5QTlJRk5sYkdWamRHOXlSVzVuYVc1bFgxOWtaV1poZFd4MExtUmxabUYxYkhRdVptbHVaQ2hUUlV4RlExUlBVbDlVUVZKSFJWUmZURWxPUzFNc0lIUm9hWE11WDJOdmJtWnBaeTUwWVhKblpYUXBPMXh1WEc0Z0lDQWdJQ0JtYjNJZ0tHTnZibk4wSUdGdVkyaHZjaUJ2WmlCMFlYSm5aWFJNYVc1cmN5a2dlMXh1SUNBZ0lDQWdJQ0F2THlCbGJuTjFjbVVnZEdoaGRDQjBhR1VnWVc1amFHOXlJR2hoY3lCaGJpQnBaQ0JoYm1RZ2FYTWdibTkwSUdScGMyRmliR1ZrWEc0Z0lDQWdJQ0FnSUdsbUlDZ2hZVzVqYUc5eUxtaGhjMmdnZkh3Z2FXNWtaWGd1YVhORWFYTmhZbXhsWkNoaGJtTm9iM0lwS1NCN1hHNGdJQ0FnSUNBZ0lDQWdZMjl1ZEdsdWRXVTdYRzRnSUNBZ0lDQWdJSDFjYmx4dUlDQWdJQ0FnSUNCamIyNXpkQ0J2WW5ObGNuWmhZbXhsVTJWamRHbHZiaUE5SUZObGJHVmpkRzl5Ulc1bmFXNWxYMTlrWldaaGRXeDBMbVJsWm1GMWJIUXVabWx1WkU5dVpTaGhibU5vYjNJdWFHRnphQ3dnZEdocGN5NWZaV3hsYldWdWRDazdJQzh2SUdWdWMzVnlaU0IwYUdGMElIUm9aU0J2WW5ObGNuWmhZbXhsVTJWamRHbHZiaUJsZUdsemRITWdKaUJwY3lCMmFYTnBZbXhsWEc1Y2JpQWdJQ0FnSUNBZ2FXWWdLR2x1WkdWNExtbHpWbWx6YVdKc1pTaHZZbk5sY25aaFlteGxVMlZqZEdsdmJpa3BJSHRjYmlBZ0lDQWdJQ0FnSUNCMGFHbHpMbDkwWVhKblpYUk1hVzVyY3k1elpYUW9ZVzVqYUc5eUxtaGhjMmdzSUdGdVkyaHZjaWs3WEc1Y2JpQWdJQ0FnSUNBZ0lDQjBhR2x6TGw5dlluTmxjblpoWW14bFUyVmpkR2x2Ym5NdWMyVjBLR0Z1WTJodmNpNW9ZWE5vTENCdlluTmxjblpoWW14bFUyVmpkR2x2YmlrN1hHNGdJQ0FnSUNBZ0lIMWNiaUFnSUNBZ0lIMWNiaUFnSUNCOVhHNWNiaUFnSUNCZmNISnZZMlZ6Y3loMFlYSm5aWFFwSUh0Y2JpQWdJQ0FnSUdsbUlDaDBhR2x6TGw5aFkzUnBkbVZVWVhKblpYUWdQVDA5SUhSaGNtZGxkQ2tnZTF4dUlDQWdJQ0FnSUNCeVpYUjFjbTQ3WEc0Z0lDQWdJQ0I5WEc1Y2JpQWdJQ0FnSUhSb2FYTXVYMk5zWldGeVFXTjBhWFpsUTJ4aGMzTW9kR2hwY3k1ZlkyOXVabWxuTG5SaGNtZGxkQ2s3WEc1Y2JpQWdJQ0FnSUhSb2FYTXVYMkZqZEdsMlpWUmhjbWRsZENBOUlIUmhjbWRsZER0Y2JpQWdJQ0FnSUhSaGNtZGxkQzVqYkdGemMweHBjM1F1WVdSa0tFTk1RVk5UWDA1QlRVVmZRVU5VU1ZaRktUdGNibHh1SUNBZ0lDQWdkR2hwY3k1ZllXTjBhWFpoZEdWUVlYSmxiblJ6S0hSaGNtZGxkQ2s3WEc1Y2JpQWdJQ0FnSUVWMlpXNTBTR0Z1Wkd4bGNsOWZaR1ZtWVhWc2RDNWtaV1poZFd4MExuUnlhV2RuWlhJb2RHaHBjeTVmWld4bGJXVnVkQ3dnUlZaRlRsUmZRVU5VU1ZaQlZFVXNJSHRjYmlBZ0lDQWdJQ0FnY21Wc1lYUmxaRlJoY21kbGREb2dkR0Z5WjJWMFhHNGdJQ0FnSUNCOUtUdGNiaUFnSUNCOVhHNWNiaUFnSUNCZllXTjBhWFpoZEdWUVlYSmxiblJ6S0hSaGNtZGxkQ2tnZTF4dUlDQWdJQ0FnTHk4Z1FXTjBhWFpoZEdVZ1pISnZjR1J2ZDI0Z2NHRnlaVzUwYzF4dUlDQWdJQ0FnYVdZZ0tIUmhjbWRsZEM1amJHRnpjMHhwYzNRdVkyOXVkR0ZwYm5Nb1EweEJVMU5mVGtGTlJWOUVVazlRUkU5WFRsOUpWRVZOS1NrZ2UxeHVJQ0FnSUNBZ0lDQlRaV3hsWTNSdmNrVnVaMmx1WlY5ZlpHVm1ZWFZzZEM1a1pXWmhkV3gwTG1acGJtUlBibVVvVTBWTVJVTlVUMUpmUkZKUFVFUlBWMDVmVkU5SFIweEZMQ0IwWVhKblpYUXVZMnh2YzJWemRDaFRSVXhGUTFSUFVsOUVVazlRUkU5WFRpa3BMbU5zWVhOelRHbHpkQzVoWkdRb1EweEJVMU5mVGtGTlJWOUJRMVJKVmtVcE8xeHVJQ0FnSUNBZ0lDQnlaWFIxY200N1hHNGdJQ0FnSUNCOVhHNWNiaUFnSUNBZ0lHWnZjaUFvWTI5dWMzUWdiR2x6ZEVkeWIzVndJRzltSUZObGJHVmpkRzl5Ulc1bmFXNWxYMTlrWldaaGRXeDBMbVJsWm1GMWJIUXVjR0Z5Wlc1MGN5aDBZWEpuWlhRc0lGTkZURVZEVkU5U1gwNUJWbDlNU1ZOVVgwZFNUMVZRS1NrZ2UxeHVJQ0FnSUNBZ0lDQXZMeUJUWlhRZ2RISnBaMmRsY21Wa0lHeHBibXR6SUhCaGNtVnVkSE1nWVhNZ1lXTjBhWFpsWEc0Z0lDQWdJQ0FnSUM4dklGZHBkR2dnWW05MGFDQThkV3crSUdGdVpDQThibUYyUGlCdFlYSnJkWEFnWVNCd1lYSmxiblFnYVhNZ2RHaGxJSEJ5WlhacGIzVnpJSE5wWW14cGJtY2diMllnWVc1NUlHNWhkaUJoYm1ObGMzUnZjbHh1SUNBZ0lDQWdJQ0JtYjNJZ0tHTnZibk4wSUdsMFpXMGdiMllnVTJWc1pXTjBiM0pGYm1kcGJtVmZYMlJsWm1GMWJIUXVaR1ZtWVhWc2RDNXdjbVYyS0d4cGMzUkhjbTkxY0N3Z1UwVk1SVU5VVDFKZlRFbE9TMTlKVkVWTlV5a3BJSHRjYmlBZ0lDQWdJQ0FnSUNCcGRHVnRMbU5zWVhOelRHbHpkQzVoWkdRb1EweEJVMU5mVGtGTlJWOUJRMVJKVmtVcE8xeHVJQ0FnSUNBZ0lDQjlYRzRnSUNBZ0lDQjlYRzRnSUNBZ2ZWeHVYRzRnSUNBZ1gyTnNaV0Z5UVdOMGFYWmxRMnhoYzNNb2NHRnlaVzUwS1NCN1hHNGdJQ0FnSUNCd1lYSmxiblF1WTJ4aGMzTk1hWE4wTG5KbGJXOTJaU2hEVEVGVFUxOU9RVTFGWDBGRFZFbFdSU2s3WEc0Z0lDQWdJQ0JqYjI1emRDQmhZM1JwZG1WT2IyUmxjeUE5SUZObGJHVmpkRzl5Ulc1bmFXNWxYMTlrWldaaGRXeDBMbVJsWm1GMWJIUXVabWx1WkNoZ0pIdFRSVXhGUTFSUFVsOVVRVkpIUlZSZlRFbE9TMU45TGlSN1EweEJVMU5mVGtGTlJWOUJRMVJKVmtWOVlDd2djR0Z5Wlc1MEtUdGNibHh1SUNBZ0lDQWdabTl5SUNoamIyNXpkQ0J1YjJSbElHOW1JR0ZqZEdsMlpVNXZaR1Z6S1NCN1hHNGdJQ0FnSUNBZ0lHNXZaR1V1WTJ4aGMzTk1hWE4wTG5KbGJXOTJaU2hEVEVGVFUxOU9RVTFGWDBGRFZFbFdSU2s3WEc0Z0lDQWdJQ0I5WEc0Z0lDQWdmU0F2THlCVGRHRjBhV05jYmx4dVhHNGdJQ0FnYzNSaGRHbGpJR3BSZFdWeWVVbHVkR1Z5Wm1GalpTaGpiMjVtYVdjcElIdGNiaUFnSUNBZ0lISmxkSFZ5YmlCMGFHbHpMbVZoWTJnb1puVnVZM1JwYjI0Z0tDa2dlMXh1SUNBZ0lDQWdJQ0JqYjI1emRDQmtZWFJoSUQwZ1UyTnliMnhzVTNCNUxtZGxkRTl5UTNKbFlYUmxTVzV6ZEdGdVkyVW9kR2hwY3l3Z1kyOXVabWxuS1R0Y2JseHVJQ0FnSUNBZ0lDQnBaaUFvZEhsd1pXOW1JR052Ym1acFp5QWhQVDBnSjNOMGNtbHVaeWNwSUh0Y2JpQWdJQ0FnSUNBZ0lDQnlaWFIxY200N1hHNGdJQ0FnSUNBZ0lIMWNibHh1SUNBZ0lDQWdJQ0JwWmlBb1pHRjBZVnRqYjI1bWFXZGRJRDA5UFNCMWJtUmxabWx1WldRZ2ZId2dZMjl1Wm1sbkxuTjBZWEowYzFkcGRHZ29KMThuS1NCOGZDQmpiMjVtYVdjZ1BUMDlJQ2RqYjI1emRISjFZM1J2Y2ljcElIdGNiaUFnSUNBZ0lDQWdJQ0IwYUhKdmR5QnVaWGNnVkhsd1pVVnljbTl5S0dCT2J5QnRaWFJvYjJRZ2JtRnRaV1FnWENJa2UyTnZibVpwWjMxY0ltQXBPMXh1SUNBZ0lDQWdJQ0I5WEc1Y2JpQWdJQ0FnSUNBZ1pHRjBZVnRqYjI1bWFXZGRLQ2s3WEc0Z0lDQWdJQ0I5S1R0Y2JpQWdJQ0I5WEc1Y2JpQWdmVnh1SUNBdktpcGNiaUFnSUNvZ1JHRjBZU0JCVUVrZ2FXMXdiR1Z0Wlc1MFlYUnBiMjVjYmlBZ0lDb3ZYRzVjYmx4dUlDQkZkbVZ1ZEVoaGJtUnNaWEpmWDJSbFptRjFiSFF1WkdWbVlYVnNkQzV2YmloM2FXNWtiM2NzSUVWV1JVNVVYMHhQUVVSZlJFRlVRVjlCVUVrc0lDZ3BJRDArSUh0Y2JpQWdJQ0JtYjNJZ0tHTnZibk4wSUhOd2VTQnZaaUJUWld4bFkzUnZja1Z1WjJsdVpWOWZaR1ZtWVhWc2RDNWtaV1poZFd4MExtWnBibVFvVTBWTVJVTlVUMUpmUkVGVVFWOVRVRmtwS1NCN1hHNGdJQ0FnSUNCVFkzSnZiR3hUY0hrdVoyVjBUM0pEY21WaGRHVkpibk4wWVc1alpTaHpjSGtwTzF4dUlDQWdJSDFjYmlBZ2ZTazdYRzRnSUM4cUtseHVJQ0FnS2lCcVVYVmxjbmxjYmlBZ0lDb3ZYRzVjYmlBZ2FXNWtaWGd1WkdWbWFXNWxTbEYxWlhKNVVHeDFaMmx1S0ZOamNtOXNiRk53ZVNrN1hHNWNiaUFnY21WMGRYSnVJRk5qY205c2JGTndlVHRjYmx4dWZTa3BPMXh1THk4aklITnZkWEpqWlUxaGNIQnBibWRWVWt3OWMyTnliMnhzYzNCNUxtcHpMbTFoY0Z4dUlpd2lMeW9oWEc0Z0lDb2dRbTl2ZEhOMGNtRndJSFJoWWk1cWN5QjJOUzR5TGpNZ0tHaDBkSEJ6T2k4dloyVjBZbTl2ZEhOMGNtRndMbU52YlM4cFhHNGdJQ29nUTI5d2VYSnBaMmgwSURJd01URXRNakF5TWlCVWFHVWdRbTl2ZEhOMGNtRndJRUYxZEdodmNuTWdLR2gwZEhCek9pOHZaMmwwYUhWaUxtTnZiUzkwZDJKekwySnZiM1J6ZEhKaGNDOW5jbUZ3YUhNdlkyOXVkSEpwWW5WMGIzSnpLVnh1SUNBcUlFeHBZMlZ1YzJWa0lIVnVaR1Z5SUUxSlZDQW9hSFIwY0hNNkx5OW5hWFJvZFdJdVkyOXRMM1IzWW5NdlltOXZkSE4wY21Gd0wySnNiMkl2YldGcGJpOU1TVU5GVGxORktWeHVJQ0FxTDF4dUtHWjFibU4wYVc5dUlDaG5iRzlpWVd3c0lHWmhZM1J2Y25rcElIdGNiaUFnZEhsd1pXOW1JR1Y0Y0c5eWRITWdQVDA5SUNkdlltcGxZM1FuSUNZbUlIUjVjR1Z2WmlCdGIyUjFiR1VnSVQwOUlDZDFibVJsWm1sdVpXUW5JRDhnYlc5a2RXeGxMbVY0Y0c5eWRITWdQU0JtWVdOMGIzSjVLSEpsY1hWcGNtVW9KeTR2ZFhScGJDOXBibVJsZUNjcExDQnlaWEYxYVhKbEtDY3VMMlJ2YlM5bGRtVnVkQzFvWVc1a2JHVnlKeWtzSUhKbGNYVnBjbVVvSnk0dlpHOXRMM05sYkdWamRHOXlMV1Z1WjJsdVpTY3BMQ0J5WlhGMWFYSmxLQ2N1TDJKaGMyVXRZMjl0Y0c5dVpXNTBKeWtwSURwY2JpQWdkSGx3Wlc5bUlHUmxabWx1WlNBOVBUMGdKMloxYm1OMGFXOXVKeUFtSmlCa1pXWnBibVV1WVcxa0lEOGdaR1ZtYVc1bEtGc25MaTkxZEdsc0wybHVaR1Y0Snl3Z0p5NHZaRzl0TDJWMlpXNTBMV2hoYm1Sc1pYSW5MQ0FuTGk5a2IyMHZjMlZzWldOMGIzSXRaVzVuYVc1bEp5d2dKeTR2WW1GelpTMWpiMjF3YjI1bGJuUW5YU3dnWm1GamRHOXllU2tnT2x4dUlDQW9aMnh2WW1Gc0lEMGdkSGx3Wlc5bUlHZHNiMkpoYkZSb2FYTWdJVDA5SUNkMWJtUmxabWx1WldRbklEOGdaMnh2WW1Gc1ZHaHBjeUE2SUdkc2IySmhiQ0I4ZkNCelpXeG1MQ0JuYkc5aVlXd3VWR0ZpSUQwZ1ptRmpkRzl5ZVNobmJHOWlZV3d1U1c1a1pYZ3NJR2RzYjJKaGJDNUZkbVZ1ZEVoaGJtUnNaWElzSUdkc2IySmhiQzVUWld4bFkzUnZja1Z1WjJsdVpTd2daMnh2WW1Gc0xrSmhjMlZEYjIxd2IyNWxiblFwS1R0Y2JuMHBLSFJvYVhNc0lDaG1kVzVqZEdsdmJpQW9hVzVrWlhnc0lFVjJaVzUwU0dGdVpHeGxjaXdnVTJWc1pXTjBiM0pGYm1kcGJtVXNJRUpoYzJWRGIyMXdiMjVsYm5RcElIc2dKM1Z6WlNCemRISnBZM1FuTzF4dVhHNGdJR052Ym5OMElGOXBiblJsY205d1JHVm1ZWFZzZEV4bFoyRmplU0E5SUdVZ1BUNGdaU0FtSmlCMGVYQmxiMllnWlNBOVBUMGdKMjlpYW1WamRDY2dKaVlnSjJSbFptRjFiSFFuSUdsdUlHVWdQeUJsSURvZ2V5QmtaV1poZFd4ME9pQmxJSDA3WEc1Y2JpQWdZMjl1YzNRZ1JYWmxiblJJWVc1a2JHVnlYMTlrWldaaGRXeDBJRDBnTHlvalgxOVFWVkpGWDE4cUwxOXBiblJsY205d1JHVm1ZWFZzZEV4bFoyRmplU2hGZG1WdWRFaGhibVJzWlhJcE8xeHVJQ0JqYjI1emRDQlRaV3hsWTNSdmNrVnVaMmx1WlY5ZlpHVm1ZWFZzZENBOUlDOHFJMTlmVUZWU1JWOWZLaTlmYVc1MFpYSnZjRVJsWm1GMWJIUk1aV2RoWTNrb1UyVnNaV04wYjNKRmJtZHBibVVwTzF4dUlDQmpiMjV6ZENCQ1lYTmxRMjl0Y0c5dVpXNTBYMTlrWldaaGRXeDBJRDBnTHlvalgxOVFWVkpGWDE4cUwxOXBiblJsY205d1JHVm1ZWFZzZEV4bFoyRmplU2hDWVhObFEyOXRjRzl1Wlc1MEtUdGNibHh1SUNBdktpcGNiaUFnSUNvZ0xTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMWNiaUFnSUNvZ1FtOXZkSE4wY21Gd0lDaDJOUzR5TGpNcE9pQjBZV0l1YW5OY2JpQWdJQ29nVEdsalpXNXpaV1FnZFc1a1pYSWdUVWxVSUNob2RIUndjem92TDJkcGRHaDFZaTVqYjIwdmRIZGljeTlpYjI5MGMzUnlZWEF2WW14dllpOXRZV2x1TDB4SlEwVk9VMFVwWEc0Z0lDQXFJQzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0WEc0Z0lDQXFMMXh1SUNBdktpcGNiaUFnSUNvZ1EyOXVjM1JoYm5SelhHNGdJQ0FxTDF4dVhHNGdJR052Ym5OMElFNUJUVVVnUFNBbmRHRmlKenRjYmlBZ1kyOXVjM1FnUkVGVVFWOUxSVmtnUFNBblluTXVkR0ZpSnp0Y2JpQWdZMjl1YzNRZ1JWWkZUbFJmUzBWWklEMGdZQzRrZTBSQlZFRmZTMFZaZldBN1hHNGdJR052Ym5OMElFVldSVTVVWDBoSlJFVWdQU0JnYUdsa1pTUjdSVlpGVGxSZlMwVlpmV0E3WEc0Z0lHTnZibk4wSUVWV1JVNVVYMGhKUkVSRlRpQTlJR0JvYVdSa1pXNGtlMFZXUlU1VVgwdEZXWDFnTzF4dUlDQmpiMjV6ZENCRlZrVk9WRjlUU0U5WElEMGdZSE5vYjNja2UwVldSVTVVWDB0RldYMWdPMXh1SUNCamIyNXpkQ0JGVmtWT1ZGOVRTRTlYVGlBOUlHQnphRzkzYmlSN1JWWkZUbFJmUzBWWmZXQTdYRzRnSUdOdmJuTjBJRVZXUlU1VVgwTk1TVU5MWDBSQlZFRmZRVkJKSUQwZ1lHTnNhV05ySkh0RlZrVk9WRjlMUlZsOVlEdGNiaUFnWTI5dWMzUWdSVlpGVGxSZlMwVlpSRTlYVGlBOUlHQnJaWGxrYjNkdUpIdEZWa1ZPVkY5TFJWbDlZRHRjYmlBZ1kyOXVjM1FnUlZaRlRsUmZURTlCUkY5RVFWUkJYMEZRU1NBOUlHQnNiMkZrSkh0RlZrVk9WRjlMUlZsOVlEdGNiaUFnWTI5dWMzUWdRVkpTVDFkZlRFVkdWRjlMUlZrZ1BTQW5RWEp5YjNkTVpXWjBKenRjYmlBZ1kyOXVjM1FnUVZKU1QxZGZVa2xIU0ZSZlMwVlpJRDBnSjBGeWNtOTNVbWxuYUhRbk8xeHVJQ0JqYjI1emRDQkJVbEpQVjE5VlVGOUxSVmtnUFNBblFYSnliM2RWY0NjN1hHNGdJR052Ym5OMElFRlNVazlYWDBSUFYwNWZTMFZaSUQwZ0owRnljbTkzUkc5M2JpYzdYRzRnSUdOdmJuTjBJRU5NUVZOVFgwNUJUVVZmUVVOVVNWWkZJRDBnSjJGamRHbDJaU2M3WEc0Z0lHTnZibk4wSUVOTVFWTlRYMDVCVFVWZlJrRkVSU0E5SUNkbVlXUmxKenRjYmlBZ1kyOXVjM1FnUTB4QlUxTmZUa0ZOUlY5VFNFOVhJRDBnSjNOb2IzY25PMXh1SUNCamIyNXpkQ0JEVEVGVFUxOUVVazlRUkU5WFRpQTlJQ2RrY205d1pHOTNiaWM3WEc0Z0lHTnZibk4wSUZORlRFVkRWRTlTWDBSU1QxQkVUMWRPWDFSUFIwZE1SU0E5SUNjdVpISnZjR1J2ZDI0dGRHOW5aMnhsSnp0Y2JpQWdZMjl1YzNRZ1UwVk1SVU5VVDFKZlJGSlBVRVJQVjA1ZlRVVk9WU0E5SUNjdVpISnZjR1J2ZDI0dGJXVnVkU2M3WEc0Z0lHTnZibk4wSUU1UFZGOVRSVXhGUTFSUFVsOUVVazlRUkU5WFRsOVVUMGRIVEVVZ1BTQW5PbTV2ZENndVpISnZjR1J2ZDI0dGRHOW5aMnhsS1NjN1hHNGdJR052Ym5OMElGTkZURVZEVkU5U1gxUkJRbDlRUVU1RlRDQTlJQ2N1YkdsemRDMW5jbTkxY0N3Z0xtNWhkaXdnVzNKdmJHVTlYQ0owWVdKc2FYTjBYQ0pkSnp0Y2JpQWdZMjl1YzNRZ1UwVk1SVU5VVDFKZlQxVlVSVklnUFNBbkxtNWhkaTFwZEdWdExDQXViR2x6ZEMxbmNtOTFjQzFwZEdWdEp6dGNiaUFnWTI5dWMzUWdVMFZNUlVOVVQxSmZTVTVPUlZJZ1BTQmdMbTVoZGkxc2FXNXJKSHRPVDFSZlUwVk1SVU5VVDFKZlJGSlBVRVJQVjA1ZlZFOUhSMHhGZlN3Z0xteHBjM1F0WjNKdmRYQXRhWFJsYlNSN1RrOVVYMU5GVEVWRFZFOVNYMFJTVDFCRVQxZE9YMVJQUjBkTVJYMHNJRnR5YjJ4bFBWd2lkR0ZpWENKZEpIdE9UMVJmVTBWTVJVTlVUMUpmUkZKUFVFUlBWMDVmVkU5SFIweEZmV0E3WEc0Z0lHTnZibk4wSUZORlRFVkRWRTlTWDBSQlZFRmZWRTlIUjB4RklEMGdKMXRrWVhSaExXSnpMWFJ2WjJkc1pUMWNJblJoWWx3aVhTd2dXMlJoZEdFdFluTXRkRzluWjJ4bFBWd2ljR2xzYkZ3aVhTd2dXMlJoZEdFdFluTXRkRzluWjJ4bFBWd2liR2x6ZEZ3aVhTYzdJQzh2SUhSdlpHODZkalk2SUdOdmRXeGtJR0psSUc5dWJIa2dZSFJoWW1CY2JseHVJQ0JqYjI1emRDQlRSVXhGUTFSUFVsOUpUazVGVWw5RlRFVk5JRDBnWUNSN1UwVk1SVU5VVDFKZlNVNU9SVko5TENBa2UxTkZURVZEVkU5U1gwUkJWRUZmVkU5SFIweEZmV0E3WEc0Z0lHTnZibk4wSUZORlRFVkRWRTlTWDBSQlZFRmZWRTlIUjB4RlgwRkRWRWxXUlNBOUlHQXVKSHREVEVGVFUxOU9RVTFGWDBGRFZFbFdSWDFiWkdGMFlTMWljeTEwYjJkbmJHVTlYQ0owWVdKY0lsMHNJQzRrZTBOTVFWTlRYMDVCVFVWZlFVTlVTVlpGZlZ0a1lYUmhMV0p6TFhSdloyZHNaVDFjSW5CcGJHeGNJbDBzSUM0a2UwTk1RVk5UWDA1QlRVVmZRVU5VU1ZaRmZWdGtZWFJoTFdKekxYUnZaMmRzWlQxY0lteHBjM1JjSWwxZ08xeHVJQ0F2S2lwY2JpQWdJQ29nUTJ4aGMzTWdaR1ZtYVc1cGRHbHZibHh1SUNBZ0tpOWNibHh1SUNCamJHRnpjeUJVWVdJZ1pYaDBaVzVrY3lCQ1lYTmxRMjl0Y0c5dVpXNTBYMTlrWldaaGRXeDBMbVJsWm1GMWJIUWdlMXh1SUNBZ0lHTnZibk4wY25WamRHOXlLR1ZzWlcxbGJuUXBJSHRjYmlBZ0lDQWdJSE4xY0dWeUtHVnNaVzFsYm5RcE8xeHVJQ0FnSUNBZ2RHaHBjeTVmY0dGeVpXNTBJRDBnZEdocGN5NWZaV3hsYldWdWRDNWpiRzl6WlhOMEtGTkZURVZEVkU5U1gxUkJRbDlRUVU1RlRDazdYRzVjYmlBZ0lDQWdJR2xtSUNnaGRHaHBjeTVmY0dGeVpXNTBLU0I3WEc0Z0lDQWdJQ0FnSUhKbGRIVnlianNnTHk4Z2RHOWtiem9nYzJodmRXeGtJRlJvY205M0lHVjRZMlZ3ZEdsdmJpQnZiaUIyTmx4dUlDQWdJQ0FnSUNBdkx5QjBhSEp2ZHlCdVpYY2dWSGx3WlVWeWNtOXlLR0FrZTJWc1pXMWxiblF1YjNWMFpYSklWRTFNZlNCb1lYTWdibTkwSUdFZ2RtRnNhV1FnY0dGeVpXNTBJQ1I3VTBWTVJVTlVUMUpmU1U1T1JWSmZSVXhGVFgxZ0tWeHVJQ0FnSUNBZ2ZTQXZMeUJUWlhRZ2RYQWdhVzVwZEdsaGJDQmhjbWxoSUdGMGRISnBZblYwWlhOY2JseHVYRzRnSUNBZ0lDQjBhR2x6TGw5elpYUkpibWwwYVdGc1FYUjBjbWxpZFhSbGN5aDBhR2x6TGw5d1lYSmxiblFzSUhSb2FYTXVYMmRsZEVOb2FXeGtjbVZ1S0NrcE8xeHVYRzRnSUNBZ0lDQkZkbVZ1ZEVoaGJtUnNaWEpmWDJSbFptRjFiSFF1WkdWbVlYVnNkQzV2YmloMGFHbHpMbDlsYkdWdFpXNTBMQ0JGVmtWT1ZGOUxSVmxFVDFkT0xDQmxkbVZ1ZENBOVBpQjBhR2x6TGw5clpYbGtiM2R1S0dWMlpXNTBLU2s3WEc0Z0lDQWdmU0F2THlCSFpYUjBaWEp6WEc1Y2JseHVJQ0FnSUhOMFlYUnBZeUJuWlhRZ1RrRk5SU2dwSUh0Y2JpQWdJQ0FnSUhKbGRIVnliaUJPUVUxRk8xeHVJQ0FnSUgwZ0x5OGdVSFZpYkdsalhHNWNibHh1SUNBZ0lITm9iM2NvS1NCN1hHNGdJQ0FnSUNBdkx5QlRhRzkzY3lCMGFHbHpJR1ZzWlcwZ1lXNWtJR1JsWVdOMGFYWmhkR1VnZEdobElHRmpkR2wyWlNCemFXSnNhVzVuSUdsbUlHVjRhWE4wYzF4dUlDQWdJQ0FnWTI5dWMzUWdhVzV1WlhKRmJHVnRJRDBnZEdocGN5NWZaV3hsYldWdWREdGNibHh1SUNBZ0lDQWdhV1lnS0hSb2FYTXVYMlZzWlcxSmMwRmpkR2wyWlNocGJtNWxja1ZzWlcwcEtTQjdYRzRnSUNBZ0lDQWdJSEpsZEhWeWJqdGNiaUFnSUNBZ0lIMGdMeThnVTJWaGNtTm9JR1p2Y2lCaFkzUnBkbVVnZEdGaUlHOXVJSE5oYldVZ2NHRnlaVzUwSUhSdklHUmxZV04wYVhaaGRHVWdhWFJjYmx4dVhHNGdJQ0FnSUNCamIyNXpkQ0JoWTNScGRtVWdQU0IwYUdsekxsOW5aWFJCWTNScGRtVkZiR1Z0S0NrN1hHNWNiaUFnSUNBZ0lHTnZibk4wSUdocFpHVkZkbVZ1ZENBOUlHRmpkR2wyWlNBL0lFVjJaVzUwU0dGdVpHeGxjbDlmWkdWbVlYVnNkQzVrWldaaGRXeDBMblJ5YVdkblpYSW9ZV04wYVhabExDQkZWa1ZPVkY5SVNVUkZMQ0I3WEc0Z0lDQWdJQ0FnSUhKbGJHRjBaV1JVWVhKblpYUTZJR2x1Ym1WeVJXeGxiVnh1SUNBZ0lDQWdmU2tnT2lCdWRXeHNPMXh1SUNBZ0lDQWdZMjl1YzNRZ2MyaHZkMFYyWlc1MElEMGdSWFpsYm5SSVlXNWtiR1Z5WDE5a1pXWmhkV3gwTG1SbFptRjFiSFF1ZEhKcFoyZGxjaWhwYm01bGNrVnNaVzBzSUVWV1JVNVVYMU5JVDFjc0lIdGNiaUFnSUNBZ0lDQWdjbVZzWVhSbFpGUmhjbWRsZERvZ1lXTjBhWFpsWEc0Z0lDQWdJQ0I5S1R0Y2JseHVJQ0FnSUNBZ2FXWWdLSE5vYjNkRmRtVnVkQzVrWldaaGRXeDBVSEpsZG1WdWRHVmtJSHg4SUdocFpHVkZkbVZ1ZENBbUppQm9hV1JsUlhabGJuUXVaR1ZtWVhWc2RGQnlaWFpsYm5SbFpDa2dlMXh1SUNBZ0lDQWdJQ0J5WlhSMWNtNDdYRzRnSUNBZ0lDQjlYRzVjYmlBZ0lDQWdJSFJvYVhNdVgyUmxZV04wYVhaaGRHVW9ZV04wYVhabExDQnBibTVsY2tWc1pXMHBPMXh1WEc0Z0lDQWdJQ0IwYUdsekxsOWhZM1JwZG1GMFpTaHBibTVsY2tWc1pXMHNJR0ZqZEdsMlpTazdYRzRnSUNBZ2ZTQXZMeUJRY21sMllYUmxYRzVjYmx4dUlDQWdJRjloWTNScGRtRjBaU2hsYkdWdFpXNTBMQ0J5Wld4aGRHVmtSV3hsYlNrZ2UxeHVJQ0FnSUNBZ2FXWWdLQ0ZsYkdWdFpXNTBLU0I3WEc0Z0lDQWdJQ0FnSUhKbGRIVnlianRjYmlBZ0lDQWdJSDFjYmx4dUlDQWdJQ0FnWld4bGJXVnVkQzVqYkdGemMweHBjM1F1WVdSa0tFTk1RVk5UWDA1QlRVVmZRVU5VU1ZaRktUdGNibHh1SUNBZ0lDQWdkR2hwY3k1ZllXTjBhWFpoZEdVb2FXNWtaWGd1WjJWMFJXeGxiV1Z1ZEVaeWIyMVRaV3hsWTNSdmNpaGxiR1Z0Wlc1MEtTazdJQzh2SUZObFlYSmphQ0JoYm1RZ1lXTjBhWFpoZEdVdmMyaHZkeUIwYUdVZ2NISnZjR1Z5SUhObFkzUnBiMjVjYmx4dVhHNGdJQ0FnSUNCamIyNXpkQ0JqYjIxd2JHVjBaU0E5SUNncElEMCtJSHRjYmlBZ0lDQWdJQ0FnYVdZZ0tHVnNaVzFsYm5RdVoyVjBRWFIwY21saWRYUmxLQ2R5YjJ4bEp5a2dJVDA5SUNkMFlXSW5LU0I3WEc0Z0lDQWdJQ0FnSUNBZ1pXeGxiV1Z1ZEM1amJHRnpjMHhwYzNRdVlXUmtLRU5NUVZOVFgwNUJUVVZmVTBoUFZ5azdYRzRnSUNBZ0lDQWdJQ0FnY21WMGRYSnVPMXh1SUNBZ0lDQWdJQ0I5WEc1Y2JpQWdJQ0FnSUNBZ1pXeGxiV1Z1ZEM1eVpXMXZkbVZCZEhSeWFXSjFkR1VvSjNSaFltbHVaR1Y0SnlrN1hHNGdJQ0FnSUNBZ0lHVnNaVzFsYm5RdWMyVjBRWFIwY21saWRYUmxLQ2RoY21saExYTmxiR1ZqZEdWa0p5d2dkSEoxWlNrN1hHNWNiaUFnSUNBZ0lDQWdkR2hwY3k1ZmRHOW5aMnhsUkhKdmNFUnZkMjRvWld4bGJXVnVkQ3dnZEhKMVpTazdYRzVjYmlBZ0lDQWdJQ0FnUlhabGJuUklZVzVrYkdWeVgxOWtaV1poZFd4MExtUmxabUYxYkhRdWRISnBaMmRsY2lobGJHVnRaVzUwTENCRlZrVk9WRjlUU0U5WFRpd2dlMXh1SUNBZ0lDQWdJQ0FnSUhKbGJHRjBaV1JVWVhKblpYUTZJSEpsYkdGMFpXUkZiR1Z0WEc0Z0lDQWdJQ0FnSUgwcE8xeHVJQ0FnSUNBZ2ZUdGNibHh1SUNBZ0lDQWdkR2hwY3k1ZmNYVmxkV1ZEWVd4c1ltRmpheWhqYjIxd2JHVjBaU3dnWld4bGJXVnVkQ3dnWld4bGJXVnVkQzVqYkdGemMweHBjM1F1WTI5dWRHRnBibk1vUTB4QlUxTmZUa0ZOUlY5R1FVUkZLU2s3WEc0Z0lDQWdmVnh1WEc0Z0lDQWdYMlJsWVdOMGFYWmhkR1VvWld4bGJXVnVkQ3dnY21Wc1lYUmxaRVZzWlcwcElIdGNiaUFnSUNBZ0lHbG1JQ2doWld4bGJXVnVkQ2tnZTF4dUlDQWdJQ0FnSUNCeVpYUjFjbTQ3WEc0Z0lDQWdJQ0I5WEc1Y2JpQWdJQ0FnSUdWc1pXMWxiblF1WTJ4aGMzTk1hWE4wTG5KbGJXOTJaU2hEVEVGVFUxOU9RVTFGWDBGRFZFbFdSU2s3WEc0Z0lDQWdJQ0JsYkdWdFpXNTBMbUpzZFhJb0tUdGNibHh1SUNBZ0lDQWdkR2hwY3k1ZlpHVmhZM1JwZG1GMFpTaHBibVJsZUM1blpYUkZiR1Z0Wlc1MFJuSnZiVk5sYkdWamRHOXlLR1ZzWlcxbGJuUXBLVHNnTHk4Z1UyVmhjbU5vSUdGdVpDQmtaV0ZqZEdsMllYUmxJSFJvWlNCemFHOTNiaUJ6WldOMGFXOXVJSFJ2YjF4dVhHNWNiaUFnSUNBZ0lHTnZibk4wSUdOdmJYQnNaWFJsSUQwZ0tDa2dQVDRnZTF4dUlDQWdJQ0FnSUNCcFppQW9aV3hsYldWdWRDNW5aWFJCZEhSeWFXSjFkR1VvSjNKdmJHVW5LU0FoUFQwZ0ozUmhZaWNwSUh0Y2JpQWdJQ0FnSUNBZ0lDQmxiR1Z0Wlc1MExtTnNZWE56VEdsemRDNXlaVzF2ZG1Vb1EweEJVMU5mVGtGTlJWOVRTRTlYS1R0Y2JpQWdJQ0FnSUNBZ0lDQnlaWFIxY200N1hHNGdJQ0FnSUNBZ0lIMWNibHh1SUNBZ0lDQWdJQ0JsYkdWdFpXNTBMbk5sZEVGMGRISnBZblYwWlNnbllYSnBZUzF6Wld4bFkzUmxaQ2NzSUdaaGJITmxLVHRjYmlBZ0lDQWdJQ0FnWld4bGJXVnVkQzV6WlhSQmRIUnlhV0oxZEdVb0ozUmhZbWx1WkdWNEp5d2dKeTB4SnlrN1hHNWNiaUFnSUNBZ0lDQWdkR2hwY3k1ZmRHOW5aMnhsUkhKdmNFUnZkMjRvWld4bGJXVnVkQ3dnWm1Gc2MyVXBPMXh1WEc0Z0lDQWdJQ0FnSUVWMlpXNTBTR0Z1Wkd4bGNsOWZaR1ZtWVhWc2RDNWtaV1poZFd4MExuUnlhV2RuWlhJb1pXeGxiV1Z1ZEN3Z1JWWkZUbFJmU0VsRVJFVk9MQ0I3WEc0Z0lDQWdJQ0FnSUNBZ2NtVnNZWFJsWkZSaGNtZGxkRG9nY21Wc1lYUmxaRVZzWlcxY2JpQWdJQ0FnSUNBZ2ZTazdYRzRnSUNBZ0lDQjlPMXh1WEc0Z0lDQWdJQ0IwYUdsekxsOXhkV1YxWlVOaGJHeGlZV05yS0dOdmJYQnNaWFJsTENCbGJHVnRaVzUwTENCbGJHVnRaVzUwTG1Oc1lYTnpUR2x6ZEM1amIyNTBZV2x1Y3loRFRFRlRVMTlPUVUxRlgwWkJSRVVwS1R0Y2JpQWdJQ0I5WEc1Y2JpQWdJQ0JmYTJWNVpHOTNiaWhsZG1WdWRDa2dlMXh1SUNBZ0lDQWdhV1lnS0NGYlFWSlNUMWRmVEVWR1ZGOUxSVmtzSUVGU1VrOVhYMUpKUjBoVVgwdEZXU3dnUVZKU1QxZGZWVkJmUzBWWkxDQkJVbEpQVjE5RVQxZE9YMHRGV1YwdWFXNWpiSFZrWlhNb1pYWmxiblF1YTJWNUtTa2dlMXh1SUNBZ0lDQWdJQ0J5WlhSMWNtNDdYRzRnSUNBZ0lDQjlYRzVjYmlBZ0lDQWdJR1YyWlc1MExuTjBiM0JRY205d1lXZGhkR2x2YmlncE95QXZMeUJ6ZEc5d1VISnZjR0ZuWVhScGIyNHZjSEpsZG1WdWRFUmxabUYxYkhRZ1ltOTBhQ0JoWkdSbFpDQjBieUJ6ZFhCd2IzSjBJSFZ3TDJSdmQyNGdhMlY1Y3lCM2FYUm9iM1YwSUhOamNtOXNiR2x1WnlCMGFHVWdjR0ZuWlZ4dVhHNGdJQ0FnSUNCbGRtVnVkQzV3Y21WMlpXNTBSR1ZtWVhWc2RDZ3BPMXh1SUNBZ0lDQWdZMjl1YzNRZ2FYTk9aWGgwSUQwZ1cwRlNVazlYWDFKSlIwaFVYMHRGV1N3Z1FWSlNUMWRmUkU5WFRsOUxSVmxkTG1sdVkyeDFaR1Z6S0dWMlpXNTBMbXRsZVNrN1hHNGdJQ0FnSUNCamIyNXpkQ0J1WlhoMFFXTjBhWFpsUld4bGJXVnVkQ0E5SUdsdVpHVjRMbWRsZEU1bGVIUkJZM1JwZG1WRmJHVnRaVzUwS0hSb2FYTXVYMmRsZEVOb2FXeGtjbVZ1S0NrdVptbHNkR1Z5S0dWc1pXMWxiblFnUFQ0Z0lXbHVaR1Y0TG1selJHbHpZV0pzWldRb1pXeGxiV1Z1ZENrcExDQmxkbVZ1ZEM1MFlYSm5aWFFzSUdselRtVjRkQ3dnZEhKMVpTazdYRzVjYmlBZ0lDQWdJR2xtSUNodVpYaDBRV04wYVhabFJXeGxiV1Z1ZENrZ2UxeHVJQ0FnSUNBZ0lDQnVaWGgwUVdOMGFYWmxSV3hsYldWdWRDNW1iMk4xY3loN1hHNGdJQ0FnSUNBZ0lDQWdjSEpsZG1WdWRGTmpjbTlzYkRvZ2RISjFaVnh1SUNBZ0lDQWdJQ0I5S1R0Y2JpQWdJQ0FnSUNBZ1ZHRmlMbWRsZEU5eVEzSmxZWFJsU1c1emRHRnVZMlVvYm1WNGRFRmpkR2wyWlVWc1pXMWxiblFwTG5Ob2IzY29LVHRjYmlBZ0lDQWdJSDFjYmlBZ0lDQjlYRzVjYmlBZ0lDQmZaMlYwUTJocGJHUnlaVzRvS1NCN1hHNGdJQ0FnSUNBdkx5QmpiMnhzWldOMGFXOXVJRzltSUdsdWJtVnlJR1ZzWlcxbGJuUnpYRzRnSUNBZ0lDQnlaWFIxY200Z1UyVnNaV04wYjNKRmJtZHBibVZmWDJSbFptRjFiSFF1WkdWbVlYVnNkQzVtYVc1a0tGTkZURVZEVkU5U1gwbE9Ua1ZTWDBWTVJVMHNJSFJvYVhNdVgzQmhjbVZ1ZENrN1hHNGdJQ0FnZlZ4dVhHNGdJQ0FnWDJkbGRFRmpkR2wyWlVWc1pXMG9LU0I3WEc0Z0lDQWdJQ0J5WlhSMWNtNGdkR2hwY3k1ZloyVjBRMmhwYkdSeVpXNG9LUzVtYVc1a0tHTm9hV3hrSUQwK0lIUm9hWE11WDJWc1pXMUpjMEZqZEdsMlpTaGphR2xzWkNrcElIeDhJRzUxYkd3N1hHNGdJQ0FnZlZ4dVhHNGdJQ0FnWDNObGRFbHVhWFJwWVd4QmRIUnlhV0oxZEdWektIQmhjbVZ1ZEN3Z1kyaHBiR1J5Wlc0cElIdGNiaUFnSUNBZ0lIUm9hWE11WDNObGRFRjBkSEpwWW5WMFpVbG1UbTkwUlhocGMzUnpLSEJoY21WdWRDd2dKM0p2YkdVbkxDQW5kR0ZpYkdsemRDY3BPMXh1WEc0Z0lDQWdJQ0JtYjNJZ0tHTnZibk4wSUdOb2FXeGtJRzltSUdOb2FXeGtjbVZ1S1NCN1hHNGdJQ0FnSUNBZ0lIUm9hWE11WDNObGRFbHVhWFJwWVd4QmRIUnlhV0oxZEdWelQyNURhR2xzWkNoamFHbHNaQ2s3WEc0Z0lDQWdJQ0I5WEc0Z0lDQWdmVnh1WEc0Z0lDQWdYM05sZEVsdWFYUnBZV3hCZEhSeWFXSjFkR1Z6VDI1RGFHbHNaQ2hqYUdsc1pDa2dlMXh1SUNBZ0lDQWdZMmhwYkdRZ1BTQjBhR2x6TGw5blpYUkpibTVsY2tWc1pXMWxiblFvWTJocGJHUXBPMXh1WEc0Z0lDQWdJQ0JqYjI1emRDQnBjMEZqZEdsMlpTQTlJSFJvYVhNdVgyVnNaVzFKYzBGamRHbDJaU2hqYUdsc1pDazdYRzVjYmlBZ0lDQWdJR052Ym5OMElHOTFkR1Z5Uld4bGJTQTlJSFJvYVhNdVgyZGxkRTkxZEdWeVJXeGxiV1Z1ZENoamFHbHNaQ2s3WEc1Y2JpQWdJQ0FnSUdOb2FXeGtMbk5sZEVGMGRISnBZblYwWlNnbllYSnBZUzF6Wld4bFkzUmxaQ2NzSUdselFXTjBhWFpsS1R0Y2JseHVJQ0FnSUNBZ2FXWWdLRzkxZEdWeVJXeGxiU0FoUFQwZ1kyaHBiR1FwSUh0Y2JpQWdJQ0FnSUNBZ2RHaHBjeTVmYzJWMFFYUjBjbWxpZFhSbFNXWk9iM1JGZUdsemRITW9iM1YwWlhKRmJHVnRMQ0FuY205c1pTY3NJQ2R3Y21WelpXNTBZWFJwYjI0bktUdGNiaUFnSUNBZ0lIMWNibHh1SUNBZ0lDQWdhV1lnS0NGcGMwRmpkR2wyWlNrZ2UxeHVJQ0FnSUNBZ0lDQmphR2xzWkM1elpYUkJkSFJ5YVdKMWRHVW9KM1JoWW1sdVpHVjRKeXdnSnkweEp5azdYRzRnSUNBZ0lDQjlYRzVjYmlBZ0lDQWdJSFJvYVhNdVgzTmxkRUYwZEhKcFluVjBaVWxtVG05MFJYaHBjM1J6S0dOb2FXeGtMQ0FuY205c1pTY3NJQ2QwWVdJbktUc2dMeThnYzJWMElHRjBkSEpwWW5WMFpYTWdkRzhnZEdobElISmxiR0YwWldRZ2NHRnVaV3dnZEc5dlhHNWNibHh1SUNBZ0lDQWdkR2hwY3k1ZmMyVjBTVzVwZEdsaGJFRjBkSEpwWW5WMFpYTlBibFJoY21kbGRGQmhibVZzS0dOb2FXeGtLVHRjYmlBZ0lDQjlYRzVjYmlBZ0lDQmZjMlYwU1c1cGRHbGhiRUYwZEhKcFluVjBaWE5QYmxSaGNtZGxkRkJoYm1Wc0tHTm9hV3hrS1NCN1hHNGdJQ0FnSUNCamIyNXpkQ0IwWVhKblpYUWdQU0JwYm1SbGVDNW5aWFJGYkdWdFpXNTBSbkp2YlZObGJHVmpkRzl5S0dOb2FXeGtLVHRjYmx4dUlDQWdJQ0FnYVdZZ0tDRjBZWEpuWlhRcElIdGNiaUFnSUNBZ0lDQWdjbVYwZFhKdU8xeHVJQ0FnSUNBZ2ZWeHVYRzRnSUNBZ0lDQjBhR2x6TGw5elpYUkJkSFJ5YVdKMWRHVkpaazV2ZEVWNGFYTjBjeWgwWVhKblpYUXNJQ2R5YjJ4bEp5d2dKM1JoWW5CaGJtVnNKeWs3WEc1Y2JpQWdJQ0FnSUdsbUlDaGphR2xzWkM1cFpDa2dlMXh1SUNBZ0lDQWdJQ0IwYUdsekxsOXpaWFJCZEhSeWFXSjFkR1ZKWms1dmRFVjRhWE4wY3loMFlYSm5aWFFzSUNkaGNtbGhMV3hoWW1Wc2JHVmtZbmtuTENCZ0l5UjdZMmhwYkdRdWFXUjlZQ2s3WEc0Z0lDQWdJQ0I5WEc0Z0lDQWdmVnh1WEc0Z0lDQWdYM1J2WjJkc1pVUnliM0JFYjNkdUtHVnNaVzFsYm5Rc0lHOXdaVzRwSUh0Y2JpQWdJQ0FnSUdOdmJuTjBJRzkxZEdWeVJXeGxiU0E5SUhSb2FYTXVYMmRsZEU5MWRHVnlSV3hsYldWdWRDaGxiR1Z0Wlc1MEtUdGNibHh1SUNBZ0lDQWdhV1lnS0NGdmRYUmxja1ZzWlcwdVkyeGhjM05NYVhOMExtTnZiblJoYVc1ektFTk1RVk5UWDBSU1QxQkVUMWRPS1NrZ2UxeHVJQ0FnSUNBZ0lDQnlaWFIxY200N1hHNGdJQ0FnSUNCOVhHNWNiaUFnSUNBZ0lHTnZibk4wSUhSdloyZHNaU0E5SUNoelpXeGxZM1J2Y2l3Z1kyeGhjM05PWVcxbEtTQTlQaUI3WEc0Z0lDQWdJQ0FnSUdOdmJuTjBJR1ZzWlcxbGJuUWdQU0JUWld4bFkzUnZja1Z1WjJsdVpWOWZaR1ZtWVhWc2RDNWtaV1poZFd4MExtWnBibVJQYm1Vb2MyVnNaV04wYjNJc0lHOTFkR1Z5Uld4bGJTazdYRzVjYmlBZ0lDQWdJQ0FnYVdZZ0tHVnNaVzFsYm5RcElIdGNiaUFnSUNBZ0lDQWdJQ0JsYkdWdFpXNTBMbU5zWVhOelRHbHpkQzUwYjJkbmJHVW9ZMnhoYzNOT1lXMWxMQ0J2Y0dWdUtUdGNiaUFnSUNBZ0lDQWdmVnh1SUNBZ0lDQWdmVHRjYmx4dUlDQWdJQ0FnZEc5bloyeGxLRk5GVEVWRFZFOVNYMFJTVDFCRVQxZE9YMVJQUjBkTVJTd2dRMHhCVTFOZlRrRk5SVjlCUTFSSlZrVXBPMXh1SUNBZ0lDQWdkRzluWjJ4bEtGTkZURVZEVkU5U1gwUlNUMUJFVDFkT1gwMUZUbFVzSUVOTVFWTlRYMDVCVFVWZlUwaFBWeWs3WEc0Z0lDQWdJQ0J2ZFhSbGNrVnNaVzB1YzJWMFFYUjBjbWxpZFhSbEtDZGhjbWxoTFdWNGNHRnVaR1ZrSnl3Z2IzQmxiaWs3WEc0Z0lDQWdmVnh1WEc0Z0lDQWdYM05sZEVGMGRISnBZblYwWlVsbVRtOTBSWGhwYzNSektHVnNaVzFsYm5Rc0lHRjBkSEpwWW5WMFpTd2dkbUZzZFdVcElIdGNiaUFnSUNBZ0lHbG1JQ2doWld4bGJXVnVkQzVvWVhOQmRIUnlhV0oxZEdVb1lYUjBjbWxpZFhSbEtTa2dlMXh1SUNBZ0lDQWdJQ0JsYkdWdFpXNTBMbk5sZEVGMGRISnBZblYwWlNoaGRIUnlhV0oxZEdVc0lIWmhiSFZsS1R0Y2JpQWdJQ0FnSUgxY2JpQWdJQ0I5WEc1Y2JpQWdJQ0JmWld4bGJVbHpRV04wYVhabEtHVnNaVzBwSUh0Y2JpQWdJQ0FnSUhKbGRIVnliaUJsYkdWdExtTnNZWE56VEdsemRDNWpiMjUwWVdsdWN5aERURUZUVTE5T1FVMUZYMEZEVkVsV1JTazdYRzRnSUNBZ2ZTQXZMeUJVY25rZ2RHOGdaMlYwSUhSb1pTQnBibTVsY2lCbGJHVnRaVzUwSUNoMWMzVmhiR3g1SUhSb1pTQXVibUYyTFd4cGJtc3BYRzVjYmx4dUlDQWdJRjluWlhSSmJtNWxja1ZzWlcxbGJuUW9aV3hsYlNrZ2UxeHVJQ0FnSUNBZ2NtVjBkWEp1SUdWc1pXMHViV0YwWTJobGN5aFRSVXhGUTFSUFVsOUpUazVGVWw5RlRFVk5LU0EvSUdWc1pXMGdPaUJUWld4bFkzUnZja1Z1WjJsdVpWOWZaR1ZtWVhWc2RDNWtaV1poZFd4MExtWnBibVJQYm1Vb1UwVk1SVU5VVDFKZlNVNU9SVkpmUlV4RlRTd2daV3hsYlNrN1hHNGdJQ0FnZlNBdkx5QlVjbmtnZEc4Z1oyVjBJSFJvWlNCdmRYUmxjaUJsYkdWdFpXNTBJQ2gxYzNWaGJHeDVJSFJvWlNBdWJtRjJMV2wwWlcwcFhHNWNibHh1SUNBZ0lGOW5aWFJQZFhSbGNrVnNaVzFsYm5Rb1pXeGxiU2tnZTF4dUlDQWdJQ0FnY21WMGRYSnVJR1ZzWlcwdVkyeHZjMlZ6ZENoVFJVeEZRMVJQVWw5UFZWUkZVaWtnZkh3Z1pXeGxiVHRjYmlBZ0lDQjlJQzh2SUZOMFlYUnBZMXh1WEc1Y2JpQWdJQ0J6ZEdGMGFXTWdhbEYxWlhKNVNXNTBaWEptWVdObEtHTnZibVpwWnlrZ2UxeHVJQ0FnSUNBZ2NtVjBkWEp1SUhSb2FYTXVaV0ZqYUNobWRXNWpkR2x2YmlBb0tTQjdYRzRnSUNBZ0lDQWdJR052Ym5OMElHUmhkR0VnUFNCVVlXSXVaMlYwVDNKRGNtVmhkR1ZKYm5OMFlXNWpaU2gwYUdsektUdGNibHh1SUNBZ0lDQWdJQ0JwWmlBb2RIbHdaVzltSUdOdmJtWnBaeUFoUFQwZ0ozTjBjbWx1WnljcElIdGNiaUFnSUNBZ0lDQWdJQ0J5WlhSMWNtNDdYRzRnSUNBZ0lDQWdJSDFjYmx4dUlDQWdJQ0FnSUNCcFppQW9aR0YwWVZ0amIyNW1hV2RkSUQwOVBTQjFibVJsWm1sdVpXUWdmSHdnWTI5dVptbG5Mbk4wWVhKMGMxZHBkR2dvSjE4bktTQjhmQ0JqYjI1bWFXY2dQVDA5SUNkamIyNXpkSEoxWTNSdmNpY3BJSHRjYmlBZ0lDQWdJQ0FnSUNCMGFISnZkeUJ1WlhjZ1ZIbHdaVVZ5Y205eUtHQk9ieUJ0WlhSb2IyUWdibUZ0WldRZ1hDSWtlMk52Ym1acFozMWNJbUFwTzF4dUlDQWdJQ0FnSUNCOVhHNWNiaUFnSUNBZ0lDQWdaR0YwWVZ0amIyNW1hV2RkS0NrN1hHNGdJQ0FnSUNCOUtUdGNiaUFnSUNCOVhHNWNiaUFnZlZ4dUlDQXZLaXBjYmlBZ0lDb2dSR0YwWVNCQlVFa2dhVzF3YkdWdFpXNTBZWFJwYjI1Y2JpQWdJQ292WEc1Y2JseHVJQ0JGZG1WdWRFaGhibVJzWlhKZlgyUmxabUYxYkhRdVpHVm1ZWFZzZEM1dmJpaGtiMk4xYldWdWRDd2dSVlpGVGxSZlEweEpRMHRmUkVGVVFWOUJVRWtzSUZORlRFVkRWRTlTWDBSQlZFRmZWRTlIUjB4RkxDQm1kVzVqZEdsdmJpQW9aWFpsYm5RcElIdGNiaUFnSUNCcFppQW9XeWRCSnl3Z0owRlNSVUVuWFM1cGJtTnNkV1JsY3loMGFHbHpMblJoWjA1aGJXVXBLU0I3WEc0Z0lDQWdJQ0JsZG1WdWRDNXdjbVYyWlc1MFJHVm1ZWFZzZENncE8xeHVJQ0FnSUgxY2JseHVJQ0FnSUdsbUlDaHBibVJsZUM1cGMwUnBjMkZpYkdWa0tIUm9hWE1wS1NCN1hHNGdJQ0FnSUNCeVpYUjFjbTQ3WEc0Z0lDQWdmVnh1WEc0Z0lDQWdWR0ZpTG1kbGRFOXlRM0psWVhSbFNXNXpkR0Z1WTJVb2RHaHBjeWt1YzJodmR5Z3BPMXh1SUNCOUtUdGNiaUFnTHlvcVhHNGdJQ0FxSUVsdWFYUnBZV3hwZW1VZ2IyNGdabTlqZFhOY2JpQWdJQ292WEc1Y2JpQWdSWFpsYm5SSVlXNWtiR1Z5WDE5a1pXWmhkV3gwTG1SbFptRjFiSFF1YjI0b2QybHVaRzkzTENCRlZrVk9WRjlNVDBGRVgwUkJWRUZmUVZCSkxDQW9LU0E5UGlCN1hHNGdJQ0FnWm05eUlDaGpiMjV6ZENCbGJHVnRaVzUwSUc5bUlGTmxiR1ZqZEc5eVJXNW5hVzVsWDE5a1pXWmhkV3gwTG1SbFptRjFiSFF1Wm1sdVpDaFRSVXhGUTFSUFVsOUVRVlJCWDFSUFIwZE1SVjlCUTFSSlZrVXBLU0I3WEc0Z0lDQWdJQ0JVWVdJdVoyVjBUM0pEY21WaGRHVkpibk4wWVc1alpTaGxiR1Z0Wlc1MEtUdGNiaUFnSUNCOVhHNGdJSDBwTzF4dUlDQXZLaXBjYmlBZ0lDb2dhbEYxWlhKNVhHNGdJQ0FxTDF4dVhHNGdJR2x1WkdWNExtUmxabWx1WlVwUmRXVnllVkJzZFdkcGJpaFVZV0lwTzF4dVhHNGdJSEpsZEhWeWJpQlVZV0k3WEc1Y2JuMHBLVHRjYmk4dkl5QnpiM1Z5WTJWTllYQndhVzVuVlZKTVBYUmhZaTVxY3k1dFlYQmNiaUlzSWk4cUlWeHVJQ0FxSUVKdmIzUnpkSEpoY0NCMGIyOXNkR2x3TG1weklIWTFMakl1TXlBb2FIUjBjSE02THk5blpYUmliMjkwYzNSeVlYQXVZMjl0THlsY2JpQWdLaUJEYjNCNWNtbG5hSFFnTWpBeE1TMHlNREl5SUZSb1pTQkNiMjkwYzNSeVlYQWdRWFYwYUc5eWN5QW9hSFIwY0hNNkx5OW5hWFJvZFdJdVkyOXRMM1IzWW5NdlltOXZkSE4wY21Gd0wyZHlZWEJvY3k5amIyNTBjbWxpZFhSdmNuTXBYRzRnSUNvZ1RHbGpaVzV6WldRZ2RXNWtaWElnVFVsVUlDaG9kSFJ3Y3pvdkwyZHBkR2gxWWk1amIyMHZkSGRpY3k5aWIyOTBjM1J5WVhBdllteHZZaTl0WVdsdUwweEpRMFZPVTBVcFhHNGdJQ292WEc0b1puVnVZM1JwYjI0Z0tHZHNiMkpoYkN3Z1ptRmpkRzl5ZVNrZ2UxeHVJQ0IwZVhCbGIyWWdaWGh3YjNKMGN5QTlQVDBnSjI5aWFtVmpkQ2NnSmlZZ2RIbHdaVzltSUcxdlpIVnNaU0FoUFQwZ0ozVnVaR1ZtYVc1bFpDY2dQeUJ0YjJSMWJHVXVaWGh3YjNKMGN5QTlJR1poWTNSdmNua29jbVZ4ZFdseVpTZ25RSEJ2Y0hCbGNtcHpMMk52Y21VbktTd2djbVZ4ZFdseVpTZ25MaTkxZEdsc0wybHVaR1Y0Snlrc0lISmxjWFZwY21Vb0p5NHZkWFJwYkM5ellXNXBkR2w2WlhJbktTd2djbVZ4ZFdseVpTZ25MaTlrYjIwdlpYWmxiblF0YUdGdVpHeGxjaWNwTENCeVpYRjFhWEpsS0NjdUwyUnZiUzl0WVc1cGNIVnNZWFJ2Y2ljcExDQnlaWEYxYVhKbEtDY3VMMkpoYzJVdFkyOXRjRzl1Wlc1MEp5a3NJSEpsY1hWcGNtVW9KeTR2ZFhScGJDOTBaVzF3YkdGMFpTMW1ZV04wYjNKNUp5a3BJRHBjYmlBZ2RIbHdaVzltSUdSbFptbHVaU0E5UFQwZ0oyWjFibU4wYVc5dUp5QW1KaUJrWldacGJtVXVZVzFrSUQ4Z1pHVm1hVzVsS0ZzblFIQnZjSEJsY21wekwyTnZjbVVuTENBbkxpOTFkR2xzTDJsdVpHVjRKeXdnSnk0dmRYUnBiQzl6WVc1cGRHbDZaWEluTENBbkxpOWtiMjB2WlhabGJuUXRhR0Z1Wkd4bGNpY3NJQ2N1TDJSdmJTOXRZVzVwY0hWc1lYUnZjaWNzSUNjdUwySmhjMlV0WTI5dGNHOXVaVzUwSnl3Z0p5NHZkWFJwYkM5MFpXMXdiR0YwWlMxbVlXTjBiM0o1SjEwc0lHWmhZM1J2Y25rcElEcGNiaUFnS0dkc2IySmhiQ0E5SUhSNWNHVnZaaUJuYkc5aVlXeFVhR2x6SUNFOVBTQW5kVzVrWldacGJtVmtKeUEvSUdkc2IySmhiRlJvYVhNZ09pQm5iRzlpWVd3Z2ZId2djMlZzWml3Z1oyeHZZbUZzTGxSdmIyeDBhWEFnUFNCbVlXTjBiM0o1S0dkc2IySmhiRnRjSWtCd2IzQndaWEpxY3k5amIzSmxYQ0pkTENCbmJHOWlZV3d1U1c1a1pYZ3NJR2RzYjJKaGJDNVRZVzVwZEdsNlpYSXNJR2RzYjJKaGJDNUZkbVZ1ZEVoaGJtUnNaWElzSUdkc2IySmhiQzVOWVc1cGNIVnNZWFJ2Y2l3Z1oyeHZZbUZzTGtKaGMyVkRiMjF3YjI1bGJuUXNJR2RzYjJKaGJDNVVaVzF3YkdGMFpVWmhZM1J2Y25rcEtUdGNibjBwS0hSb2FYTXNJQ2htZFc1amRHbHZiaUFvVUc5d2NHVnlMQ0JwYm1SbGVDd2djMkZ1YVhScGVtVnlMQ0JGZG1WdWRFaGhibVJzWlhJc0lFMWhibWx3ZFd4aGRHOXlMQ0JDWVhObFEyOXRjRzl1Wlc1MExDQlVaVzF3YkdGMFpVWmhZM1J2Y25rcElIc2dKM1Z6WlNCemRISnBZM1FuTzF4dVhHNGdJR052Ym5OMElGOXBiblJsY205d1JHVm1ZWFZzZEV4bFoyRmplU0E5SUdVZ1BUNGdaU0FtSmlCMGVYQmxiMllnWlNBOVBUMGdKMjlpYW1WamRDY2dKaVlnSjJSbFptRjFiSFFuSUdsdUlHVWdQeUJsSURvZ2V5QmtaV1poZFd4ME9pQmxJSDA3WEc1Y2JpQWdablZ1WTNScGIyNGdYMmx1ZEdWeWIzQk9ZVzFsYzNCaFkyVW9aU2tnZTF4dUlDQWdJR2xtSUNobElDWW1JR1V1WDE5bGMwMXZaSFZzWlNrZ2NtVjBkWEp1SUdVN1hHNGdJQ0FnWTI5dWMzUWdiaUE5SUU5aWFtVmpkQzVqY21WaGRHVW9iblZzYkN3Z2V5QmJVM2x0WW05c0xuUnZVM1J5YVc1blZHRm5YVG9nZXlCMllXeDFaVG9nSjAxdlpIVnNaU2NnZlNCOUtUdGNiaUFnSUNCcFppQW9aU2tnZTF4dUlDQWdJQ0FnWm05eUlDaGpiMjV6ZENCcklHbHVJR1VwSUh0Y2JpQWdJQ0FnSUNBZ2FXWWdLR3NnSVQwOUlDZGtaV1poZFd4MEp5a2dlMXh1SUNBZ0lDQWdJQ0FnSUdOdmJuTjBJR1FnUFNCUFltcGxZM1F1WjJWMFQzZHVVSEp2Y0dWeWRIbEVaWE5qY21sd2RHOXlLR1VzSUdzcE8xeHVJQ0FnSUNBZ0lDQWdJRTlpYW1WamRDNWtaV1pwYm1WUWNtOXdaWEowZVNodUxDQnJMQ0JrTG1kbGRDQS9JR1FnT2lCN1hHNGdJQ0FnSUNBZ0lDQWdJQ0JsYm5WdFpYSmhZbXhsT2lCMGNuVmxMRnh1SUNBZ0lDQWdJQ0FnSUNBZ1oyVjBPaUFvS1NBOVBpQmxXMnRkWEc0Z0lDQWdJQ0FnSUNBZ2ZTazdYRzRnSUNBZ0lDQWdJSDFjYmlBZ0lDQWdJSDFjYmlBZ0lDQjlYRzRnSUNBZ2JpNWtaV1poZFd4MElEMGdaVHRjYmlBZ0lDQnlaWFIxY200Z1QySnFaV04wTG1aeVpXVjZaU2h1S1R0Y2JpQWdmVnh1WEc0Z0lHTnZibk4wSUZCdmNIQmxjbDlmYm1GdFpYTndZV05sSUQwZ0x5b2pYMTlRVlZKRlgxOHFMMTlwYm5SbGNtOXdUbUZ0WlhOd1lXTmxLRkJ2Y0hCbGNpazdYRzRnSUdOdmJuTjBJRVYyWlc1MFNHRnVaR3hsY2w5ZlpHVm1ZWFZzZENBOUlDOHFJMTlmVUZWU1JWOWZLaTlmYVc1MFpYSnZjRVJsWm1GMWJIUk1aV2RoWTNrb1JYWmxiblJJWVc1a2JHVnlLVHRjYmlBZ1kyOXVjM1FnVFdGdWFYQjFiR0YwYjNKZlgyUmxabUYxYkhRZ1BTQXZLaU5mWDFCVlVrVmZYeW92WDJsdWRHVnliM0JFWldaaGRXeDBUR1ZuWVdONUtFMWhibWx3ZFd4aGRHOXlLVHRjYmlBZ1kyOXVjM1FnUW1GelpVTnZiWEJ2Ym1WdWRGOWZaR1ZtWVhWc2RDQTlJQzhxSTE5ZlVGVlNSVjlmS2k5ZmFXNTBaWEp2Y0VSbFptRjFiSFJNWldkaFkza29RbUZ6WlVOdmJYQnZibVZ1ZENrN1hHNGdJR052Ym5OMElGUmxiWEJzWVhSbFJtRmpkRzl5ZVY5ZlpHVm1ZWFZzZENBOUlDOHFJMTlmVUZWU1JWOWZLaTlmYVc1MFpYSnZjRVJsWm1GMWJIUk1aV2RoWTNrb1ZHVnRjR3hoZEdWR1lXTjBiM0o1S1R0Y2JseHVJQ0F2S2lwY2JpQWdJQ29nTFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMxY2JpQWdJQ29nUW05dmRITjBjbUZ3SUNoMk5TNHlMak1wT2lCMGIyOXNkR2x3TG1welhHNGdJQ0FxSUV4cFkyVnVjMlZrSUhWdVpHVnlJRTFKVkNBb2FIUjBjSE02THk5bmFYUm9kV0l1WTI5dEwzUjNZbk12WW05dmRITjBjbUZ3TDJKc2IySXZiV0ZwYmk5TVNVTkZUbE5GS1Z4dUlDQWdLaUF0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFZ4dUlDQWdLaTljYmlBZ0x5b3FYRzRnSUNBcUlFTnZibk4wWVc1MGMxeHVJQ0FnS2k5Y2JseHVJQ0JqYjI1emRDQk9RVTFGSUQwZ0ozUnZiMngwYVhBbk8xeHVJQ0JqYjI1emRDQkVTVk5CVEV4UFYwVkVYMEZVVkZKSlFsVlVSVk1nUFNCdVpYY2dVMlYwS0ZzbmMyRnVhWFJwZW1VbkxDQW5ZV3hzYjNkTWFYTjBKeXdnSjNOaGJtbDBhWHBsUm00blhTazdYRzRnSUdOdmJuTjBJRU5NUVZOVFgwNUJUVVZmUmtGRVJTQTlJQ2RtWVdSbEp6dGNiaUFnWTI5dWMzUWdRMHhCVTFOZlRrRk5SVjlOVDBSQlRDQTlJQ2R0YjJSaGJDYzdYRzRnSUdOdmJuTjBJRU5NUVZOVFgwNUJUVVZmVTBoUFZ5QTlJQ2R6YUc5M0p6dGNiaUFnWTI5dWMzUWdVMFZNUlVOVVQxSmZWRTlQVEZSSlVGOUpUazVGVWlBOUlDY3VkRzl2YkhScGNDMXBibTVsY2ljN1hHNGdJR052Ym5OMElGTkZURVZEVkU5U1gwMVBSRUZNSUQwZ1lDNGtlME5NUVZOVFgwNUJUVVZmVFU5RVFVeDlZRHRjYmlBZ1kyOXVjM1FnUlZaRlRsUmZUVTlFUVV4ZlNFbEVSU0E5SUNkb2FXUmxMbUp6TG0xdlpHRnNKenRjYmlBZ1kyOXVjM1FnVkZKSlIwZEZVbDlJVDFaRlVpQTlJQ2RvYjNabGNpYzdYRzRnSUdOdmJuTjBJRlJTU1VkSFJWSmZSazlEVlZNZ1BTQW5abTlqZFhNbk8xeHVJQ0JqYjI1emRDQlVVa2xIUjBWU1gwTk1TVU5MSUQwZ0oyTnNhV05ySnp0Y2JpQWdZMjl1YzNRZ1ZGSkpSMGRGVWw5TlFVNVZRVXdnUFNBbmJXRnVkV0ZzSnp0Y2JpQWdZMjl1YzNRZ1JWWkZUbFJmU0VsRVJTQTlJQ2RvYVdSbEp6dGNiaUFnWTI5dWMzUWdSVlpGVGxSZlNFbEVSRVZPSUQwZ0oyaHBaR1JsYmljN1hHNGdJR052Ym5OMElFVldSVTVVWDFOSVQxY2dQU0FuYzJodmR5YzdYRzRnSUdOdmJuTjBJRVZXUlU1VVgxTklUMWRPSUQwZ0ozTm9iM2R1Snp0Y2JpQWdZMjl1YzNRZ1JWWkZUbFJmU1U1VFJWSlVSVVFnUFNBbmFXNXpaWEowWldRbk8xeHVJQ0JqYjI1emRDQkZWa1ZPVkY5RFRFbERTeUE5SUNkamJHbGpheWM3WEc0Z0lHTnZibk4wSUVWV1JVNVVYMFpQUTFWVFNVNGdQU0FuWm05amRYTnBiaWM3WEc0Z0lHTnZibk4wSUVWV1JVNVVYMFpQUTFWVFQxVlVJRDBnSjJadlkzVnpiM1YwSnp0Y2JpQWdZMjl1YzNRZ1JWWkZUbFJmVFU5VlUwVkZUbFJGVWlBOUlDZHRiM1Z6WldWdWRHVnlKenRjYmlBZ1kyOXVjM1FnUlZaRlRsUmZUVTlWVTBWTVJVRldSU0E5SUNkdGIzVnpaV3hsWVhabEp6dGNiaUFnWTI5dWMzUWdRWFIwWVdOb2JXVnVkRTFoY0NBOUlIdGNiaUFnSUNCQlZWUlBPaUFuWVhWMGJ5Y3NYRzRnSUNBZ1ZFOVFPaUFuZEc5d0p5eGNiaUFnSUNCU1NVZElWRG9nYVc1a1pYZ3VhWE5TVkV3b0tTQS9JQ2RzWldaMEp5QTZJQ2R5YVdkb2RDY3NYRzRnSUNBZ1FrOVVWRTlOT2lBblltOTBkRzl0Snl4Y2JpQWdJQ0JNUlVaVU9pQnBibVJsZUM1cGMxSlVUQ2dwSUQ4Z0ozSnBaMmgwSnlBNklDZHNaV1owSjF4dUlDQjlPMXh1SUNCamIyNXpkQ0JFWldaaGRXeDBJRDBnZTF4dUlDQWdJR0ZzYkc5M1RHbHpkRG9nYzJGdWFYUnBlbVZ5TGtSbFptRjFiSFJCYkd4dmQyeHBjM1FzWEc0Z0lDQWdZVzVwYldGMGFXOXVPaUIwY25WbExGeHVJQ0FnSUdKdmRXNWtZWEo1T2lBblkyeHBjSEJwYm1kUVlYSmxiblJ6Snl4Y2JpQWdJQ0JqYjI1MFlXbHVaWEk2SUdaaGJITmxMRnh1SUNBZ0lHTjFjM1J2YlVOc1lYTnpPaUFuSnl4Y2JpQWdJQ0JrWld4aGVUb2dNQ3hjYmlBZ0lDQm1ZV3hzWW1GamExQnNZV05sYldWdWRITTZJRnNuZEc5d0p5d2dKM0pwWjJoMEp5d2dKMkp2ZEhSdmJTY3NJQ2RzWldaMEoxMHNYRzRnSUNBZ2FIUnRiRG9nWm1Gc2MyVXNYRzRnSUNBZ2IyWm1jMlYwT2lCYk1Dd2dNRjBzWEc0Z0lDQWdjR3hoWTJWdFpXNTBPaUFuZEc5d0p5eGNiaUFnSUNCd2IzQndaWEpEYjI1bWFXYzZJRzUxYkd3c1hHNGdJQ0FnYzJGdWFYUnBlbVU2SUhSeWRXVXNYRzRnSUNBZ2MyRnVhWFJwZW1WR2Jqb2diblZzYkN4Y2JpQWdJQ0J6Wld4bFkzUnZjam9nWm1Gc2MyVXNYRzRnSUNBZ2RHVnRjR3hoZEdVNklDYzhaR2wySUdOc1lYTnpQVndpZEc5dmJIUnBjRndpSUhKdmJHVTlYQ0owYjI5c2RHbHdYQ0krSnlBcklDYzhaR2wySUdOc1lYTnpQVndpZEc5dmJIUnBjQzFoY25KdmQxd2lQand2WkdsMlBpY2dLeUFuUEdScGRpQmpiR0Z6Y3oxY0luUnZiMngwYVhBdGFXNXVaWEpjSWo0OEwyUnBkajRuSUNzZ0p6d3ZaR2wyUGljc1hHNGdJQ0FnZEdsMGJHVTZJQ2NuTEZ4dUlDQWdJSFJ5YVdkblpYSTZJQ2RvYjNabGNpQm1iMk4xY3lkY2JpQWdmVHRjYmlBZ1kyOXVjM1FnUkdWbVlYVnNkRlI1Y0dVZ1BTQjdYRzRnSUNBZ1lXeHNiM2RNYVhOME9pQW5iMkpxWldOMEp5eGNiaUFnSUNCaGJtbHRZWFJwYjI0NklDZGliMjlzWldGdUp5eGNiaUFnSUNCaWIzVnVaR0Z5ZVRvZ0p5aHpkSEpwYm1kOFpXeGxiV1Z1ZENrbkxGeHVJQ0FnSUdOdmJuUmhhVzVsY2pvZ0p5aHpkSEpwYm1kOFpXeGxiV1Z1ZEh4aWIyOXNaV0Z1S1Njc1hHNGdJQ0FnWTNWemRHOXRRMnhoYzNNNklDY29jM1J5YVc1bmZHWjFibU4wYVc5dUtTY3NYRzRnSUNBZ1pHVnNZWGs2SUNjb2JuVnRZbVZ5Zkc5aWFtVmpkQ2tuTEZ4dUlDQWdJR1poYkd4aVlXTnJVR3hoWTJWdFpXNTBjem9nSjJGeWNtRjVKeXhjYmlBZ0lDQm9kRzFzT2lBblltOXZiR1ZoYmljc1hHNGdJQ0FnYjJabWMyVjBPaUFuS0dGeWNtRjVmSE4wY21sdVozeG1kVzVqZEdsdmJpa25MRnh1SUNBZ0lIQnNZV05sYldWdWREb2dKeWh6ZEhKcGJtZDhablZ1WTNScGIyNHBKeXhjYmlBZ0lDQndiM0J3WlhKRGIyNW1hV2M2SUNjb2JuVnNiSHh2WW1wbFkzUjhablZ1WTNScGIyNHBKeXhjYmlBZ0lDQnpZVzVwZEdsNlpUb2dKMkp2YjJ4bFlXNG5MRnh1SUNBZ0lITmhibWwwYVhwbFJtNDZJQ2NvYm5Wc2JIeG1kVzVqZEdsdmJpa25MRnh1SUNBZ0lITmxiR1ZqZEc5eU9pQW5LSE4wY21sdVozeGliMjlzWldGdUtTY3NYRzRnSUNBZ2RHVnRjR3hoZEdVNklDZHpkSEpwYm1jbkxGeHVJQ0FnSUhScGRHeGxPaUFuS0hOMGNtbHVaM3hsYkdWdFpXNTBmR1oxYm1OMGFXOXVLU2NzWEc0Z0lDQWdkSEpwWjJkbGNqb2dKM04wY21sdVp5ZGNiaUFnZlR0Y2JpQWdMeW9xWEc0Z0lDQXFJRU5zWVhOeklHUmxabWx1YVhScGIyNWNiaUFnSUNvdlhHNWNiaUFnWTJ4aGMzTWdWRzl2YkhScGNDQmxlSFJsYm1SeklFSmhjMlZEYjIxd2IyNWxiblJmWDJSbFptRjFiSFF1WkdWbVlYVnNkQ0I3WEc0Z0lDQWdZMjl1YzNSeWRXTjBiM0lvWld4bGJXVnVkQ3dnWTI5dVptbG5LU0I3WEc0Z0lDQWdJQ0JwWmlBb2RIbHdaVzltSUZCdmNIQmxjbDlmYm1GdFpYTndZV05sSUQwOVBTQW5kVzVrWldacGJtVmtKeWtnZTF4dUlDQWdJQ0FnSUNCMGFISnZkeUJ1WlhjZ1ZIbHdaVVZ5Y205eUtDZENiMjkwYzNSeVlYQmNYQ2R6SUhSdmIyeDBhWEJ6SUhKbGNYVnBjbVVnVUc5d2NHVnlJQ2hvZEhSd2N6b3ZMM0J2Y0hCbGNpNXFjeTV2Y21jcEp5azdYRzRnSUNBZ0lDQjlYRzVjYmlBZ0lDQWdJSE4xY0dWeUtHVnNaVzFsYm5Rc0lHTnZibVpwWnlrN0lDOHZJRkJ5YVhaaGRHVmNibHh1SUNBZ0lDQWdkR2hwY3k1ZmFYTkZibUZpYkdWa0lEMGdkSEoxWlR0Y2JpQWdJQ0FnSUhSb2FYTXVYM1JwYldWdmRYUWdQU0F3TzF4dUlDQWdJQ0FnZEdocGN5NWZhWE5JYjNabGNtVmtJRDBnYm5Wc2JEdGNiaUFnSUNBZ0lIUm9hWE11WDJGamRHbDJaVlJ5YVdkblpYSWdQU0I3ZlR0Y2JpQWdJQ0FnSUhSb2FYTXVYM0J2Y0hCbGNpQTlJRzUxYkd3N1hHNGdJQ0FnSUNCMGFHbHpMbDkwWlcxd2JHRjBaVVpoWTNSdmNua2dQU0J1ZFd4c08xeHVJQ0FnSUNBZ2RHaHBjeTVmYm1WM1EyOXVkR1Z1ZENBOUlHNTFiR3c3SUM4dklGQnliM1JsWTNSbFpGeHVYRzRnSUNBZ0lDQjBhR2x6TG5ScGNDQTlJRzUxYkd3N1hHNWNiaUFnSUNBZ0lIUm9hWE11WDNObGRFeHBjM1JsYm1WeWN5Z3BPMXh1WEc0Z0lDQWdJQ0JwWmlBb0lYUm9hWE11WDJOdmJtWnBaeTV6Wld4bFkzUnZjaWtnZTF4dUlDQWdJQ0FnSUNCMGFHbHpMbDltYVhoVWFYUnNaU2dwTzF4dUlDQWdJQ0FnZlZ4dUlDQWdJSDBnTHk4Z1IyVjBkR1Z5YzF4dVhHNWNiaUFnSUNCemRHRjBhV01nWjJWMElFUmxabUYxYkhRb0tTQjdYRzRnSUNBZ0lDQnlaWFIxY200Z1JHVm1ZWFZzZER0Y2JpQWdJQ0I5WEc1Y2JpQWdJQ0J6ZEdGMGFXTWdaMlYwSUVSbFptRjFiSFJVZVhCbEtDa2dlMXh1SUNBZ0lDQWdjbVYwZFhKdUlFUmxabUYxYkhSVWVYQmxPMXh1SUNBZ0lIMWNibHh1SUNBZ0lITjBZWFJwWXlCblpYUWdUa0ZOUlNncElIdGNiaUFnSUNBZ0lISmxkSFZ5YmlCT1FVMUZPMXh1SUNBZ0lIMGdMeThnVUhWaWJHbGpYRzVjYmx4dUlDQWdJR1Z1WVdKc1pTZ3BJSHRjYmlBZ0lDQWdJSFJvYVhNdVgybHpSVzVoWW14bFpDQTlJSFJ5ZFdVN1hHNGdJQ0FnZlZ4dVhHNGdJQ0FnWkdsellXSnNaU2dwSUh0Y2JpQWdJQ0FnSUhSb2FYTXVYMmx6Ulc1aFlteGxaQ0E5SUdaaGJITmxPMXh1SUNBZ0lIMWNibHh1SUNBZ0lIUnZaMmRzWlVWdVlXSnNaV1FvS1NCN1hHNGdJQ0FnSUNCMGFHbHpMbDlwYzBWdVlXSnNaV1FnUFNBaGRHaHBjeTVmYVhORmJtRmliR1ZrTzF4dUlDQWdJSDFjYmx4dUlDQWdJSFJ2WjJkc1pTZ3BJSHRjYmlBZ0lDQWdJR2xtSUNnaGRHaHBjeTVmYVhORmJtRmliR1ZrS1NCN1hHNGdJQ0FnSUNBZ0lISmxkSFZ5Ymp0Y2JpQWdJQ0FnSUgxY2JseHVJQ0FnSUNBZ2RHaHBjeTVmWVdOMGFYWmxWSEpwWjJkbGNpNWpiR2xqYXlBOUlDRjBhR2x6TGw5aFkzUnBkbVZVY21sbloyVnlMbU5zYVdOck8xeHVYRzRnSUNBZ0lDQnBaaUFvZEdocGN5NWZhWE5UYUc5M2JpZ3BLU0I3WEc0Z0lDQWdJQ0FnSUhSb2FYTXVYMnhsWVhabEtDazdYRzVjYmlBZ0lDQWdJQ0FnY21WMGRYSnVPMXh1SUNBZ0lDQWdmVnh1WEc0Z0lDQWdJQ0IwYUdsekxsOWxiblJsY2lncE8xeHVJQ0FnSUgxY2JseHVJQ0FnSUdScGMzQnZjMlVvS1NCN1hHNGdJQ0FnSUNCamJHVmhjbFJwYldWdmRYUW9kR2hwY3k1ZmRHbHRaVzkxZENrN1hHNGdJQ0FnSUNCRmRtVnVkRWhoYm1Sc1pYSmZYMlJsWm1GMWJIUXVaR1ZtWVhWc2RDNXZabVlvZEdocGN5NWZaV3hsYldWdWRDNWpiRzl6WlhOMEtGTkZURVZEVkU5U1gwMVBSRUZNS1N3Z1JWWkZUbFJmVFU5RVFVeGZTRWxFUlN3Z2RHaHBjeTVmYUdsa1pVMXZaR0ZzU0dGdVpHeGxjaWs3WEc1Y2JpQWdJQ0FnSUdsbUlDaDBhR2x6TGw5bGJHVnRaVzUwTG1kbGRFRjBkSEpwWW5WMFpTZ25aR0YwWVMxaWN5MXZjbWxuYVc1aGJDMTBhWFJzWlNjcEtTQjdYRzRnSUNBZ0lDQWdJSFJvYVhNdVgyVnNaVzFsYm5RdWMyVjBRWFIwY21saWRYUmxLQ2QwYVhSc1pTY3NJSFJvYVhNdVgyVnNaVzFsYm5RdVoyVjBRWFIwY21saWRYUmxLQ2RrWVhSaExXSnpMVzl5YVdkcGJtRnNMWFJwZEd4bEp5a3BPMXh1SUNBZ0lDQWdmVnh1WEc0Z0lDQWdJQ0IwYUdsekxsOWthWE53YjNObFVHOXdjR1Z5S0NrN1hHNWNiaUFnSUNBZ0lITjFjR1Z5TG1ScGMzQnZjMlVvS1R0Y2JpQWdJQ0I5WEc1Y2JpQWdJQ0J6YUc5M0tDa2dlMXh1SUNBZ0lDQWdhV1lnS0hSb2FYTXVYMlZzWlcxbGJuUXVjM1I1YkdVdVpHbHpjR3hoZVNBOVBUMGdKMjV2Ym1VbktTQjdYRzRnSUNBZ0lDQWdJSFJvY205M0lHNWxkeUJGY25KdmNpZ25VR3hsWVhObElIVnpaU0J6YUc5M0lHOXVJSFpwYzJsaWJHVWdaV3hsYldWdWRITW5LVHRjYmlBZ0lDQWdJSDFjYmx4dUlDQWdJQ0FnYVdZZ0tDRW9kR2hwY3k1ZmFYTlhhWFJvUTI5dWRHVnVkQ2dwSUNZbUlIUm9hWE11WDJselJXNWhZbXhsWkNrcElIdGNiaUFnSUNBZ0lDQWdjbVYwZFhKdU8xeHVJQ0FnSUNBZ2ZWeHVYRzRnSUNBZ0lDQmpiMjV6ZENCemFHOTNSWFpsYm5RZ1BTQkZkbVZ1ZEVoaGJtUnNaWEpmWDJSbFptRjFiSFF1WkdWbVlYVnNkQzUwY21sbloyVnlLSFJvYVhNdVgyVnNaVzFsYm5Rc0lIUm9hWE11WTI5dWMzUnlkV04wYjNJdVpYWmxiblJPWVcxbEtFVldSVTVVWDFOSVQxY3BLVHRjYmlBZ0lDQWdJR052Ym5OMElITm9ZV1J2ZDFKdmIzUWdQU0JwYm1SbGVDNW1hVzVrVTJoaFpHOTNVbTl2ZENoMGFHbHpMbDlsYkdWdFpXNTBLVHRjYmx4dUlDQWdJQ0FnWTI5dWMzUWdhWE5KYmxSb1pVUnZiU0E5SUNoemFHRmtiM2RTYjI5MElIeDhJSFJvYVhNdVgyVnNaVzFsYm5RdWIzZHVaWEpFYjJOMWJXVnVkQzVrYjJOMWJXVnVkRVZzWlcxbGJuUXBMbU52Ym5SaGFXNXpLSFJvYVhNdVgyVnNaVzFsYm5RcE8xeHVYRzRnSUNBZ0lDQnBaaUFvYzJodmQwVjJaVzUwTG1SbFptRjFiSFJRY21WMlpXNTBaV1FnZkh3Z0lXbHpTVzVVYUdWRWIyMHBJSHRjYmlBZ0lDQWdJQ0FnY21WMGRYSnVPMXh1SUNBZ0lDQWdmU0F2THlCMGIyUnZJSFkySUhKbGJXOTJaU0IwYUdseklFOVNJRzFoYTJVZ2FYUWdiM0IwYVc5dVlXeGNibHh1WEc0Z0lDQWdJQ0IwYUdsekxsOWthWE53YjNObFVHOXdjR1Z5S0NrN1hHNWNiaUFnSUNBZ0lHTnZibk4wSUhScGNDQTlJSFJvYVhNdVgyZGxkRlJwY0VWc1pXMWxiblFvS1R0Y2JseHVJQ0FnSUNBZ2RHaHBjeTVmWld4bGJXVnVkQzV6WlhSQmRIUnlhV0oxZEdVb0oyRnlhV0V0WkdWelkzSnBZbVZrWW5rbkxDQjBhWEF1WjJWMFFYUjBjbWxpZFhSbEtDZHBaQ2NwS1R0Y2JseHVJQ0FnSUNBZ1kyOXVjM1FnZTF4dUlDQWdJQ0FnSUNCamIyNTBZV2x1WlhKY2JpQWdJQ0FnSUgwZ1BTQjBhR2x6TGw5amIyNW1hV2M3WEc1Y2JpQWdJQ0FnSUdsbUlDZ2hkR2hwY3k1ZlpXeGxiV1Z1ZEM1dmQyNWxja1J2WTNWdFpXNTBMbVJ2WTNWdFpXNTBSV3hsYldWdWRDNWpiMjUwWVdsdWN5aDBhR2x6TG5ScGNDa3BJSHRjYmlBZ0lDQWdJQ0FnWTI5dWRHRnBibVZ5TG1Gd2NHVnVaQ2gwYVhBcE8xeHVJQ0FnSUNBZ0lDQkZkbVZ1ZEVoaGJtUnNaWEpmWDJSbFptRjFiSFF1WkdWbVlYVnNkQzUwY21sbloyVnlLSFJvYVhNdVgyVnNaVzFsYm5Rc0lIUm9hWE11WTI5dWMzUnlkV04wYjNJdVpYWmxiblJPWVcxbEtFVldSVTVVWDBsT1UwVlNWRVZFS1NrN1hHNGdJQ0FnSUNCOVhHNWNiaUFnSUNBZ0lIUm9hWE11WDNCdmNIQmxjaUE5SUhSb2FYTXVYMk55WldGMFpWQnZjSEJsY2loMGFYQXBPMXh1SUNBZ0lDQWdkR2x3TG1Oc1lYTnpUR2x6ZEM1aFpHUW9RMHhCVTFOZlRrRk5SVjlUU0U5WEtUc2dMeThnU1dZZ2RHaHBjeUJwY3lCaElIUnZkV05vTFdWdVlXSnNaV1FnWkdWMmFXTmxJSGRsSUdGa1pDQmxlSFJ5WVZ4dUlDQWdJQ0FnTHk4Z1pXMXdkSGtnYlc5MWMyVnZkbVZ5SUd4cGMzUmxibVZ5Y3lCMGJ5QjBhR1VnWW05a2VTZHpJR2x0YldWa2FXRjBaU0JqYUdsc1pISmxianRjYmlBZ0lDQWdJQzh2SUc5dWJIa2dibVZsWkdWa0lHSmxZMkYxYzJVZ2IyWWdZbkp2YTJWdUlHVjJaVzUwSUdSbGJHVm5ZWFJwYjI0Z2IyNGdhVTlUWEc0Z0lDQWdJQ0F2THlCb2RIUndjem92TDNkM2R5NXhkV2x5YTNOdGIyUmxMbTl5Wnk5aWJHOW5MMkZ5WTJocGRtVnpMekl3TVRRdk1ESXZiVzkxYzJWZlpYWmxiblJmWW5WaUxtaDBiV3hjYmx4dUlDQWdJQ0FnYVdZZ0tDZHZiblJ2ZFdOb2MzUmhjblFuSUdsdUlHUnZZM1Z0Wlc1MExtUnZZM1Z0Wlc1MFJXeGxiV1Z1ZENrZ2UxeHVJQ0FnSUNBZ0lDQm1iM0lnS0dOdmJuTjBJR1ZzWlcxbGJuUWdiMllnVzEwdVkyOXVZMkYwS0M0dUxtUnZZM1Z0Wlc1MExtSnZaSGt1WTJocGJHUnlaVzRwS1NCN1hHNGdJQ0FnSUNBZ0lDQWdSWFpsYm5SSVlXNWtiR1Z5WDE5a1pXWmhkV3gwTG1SbFptRjFiSFF1YjI0b1pXeGxiV1Z1ZEN3Z0oyMXZkWE5sYjNabGNpY3NJR2x1WkdWNExtNXZiM0FwTzF4dUlDQWdJQ0FnSUNCOVhHNGdJQ0FnSUNCOVhHNWNiaUFnSUNBZ0lHTnZibk4wSUdOdmJYQnNaWFJsSUQwZ0tDa2dQVDRnZTF4dUlDQWdJQ0FnSUNCRmRtVnVkRWhoYm1Sc1pYSmZYMlJsWm1GMWJIUXVaR1ZtWVhWc2RDNTBjbWxuWjJWeUtIUm9hWE11WDJWc1pXMWxiblFzSUhSb2FYTXVZMjl1YzNSeWRXTjBiM0l1WlhabGJuUk9ZVzFsS0VWV1JVNVVYMU5JVDFkT0tTazdYRzVjYmlBZ0lDQWdJQ0FnYVdZZ0tIUm9hWE11WDJselNHOTJaWEpsWkNBOVBUMGdabUZzYzJVcElIdGNiaUFnSUNBZ0lDQWdJQ0IwYUdsekxsOXNaV0YyWlNncE8xeHVJQ0FnSUNBZ0lDQjlYRzVjYmlBZ0lDQWdJQ0FnZEdocGN5NWZhWE5JYjNabGNtVmtJRDBnWm1Gc2MyVTdYRzRnSUNBZ0lDQjlPMXh1WEc0Z0lDQWdJQ0IwYUdsekxsOXhkV1YxWlVOaGJHeGlZV05yS0dOdmJYQnNaWFJsTENCMGFHbHpMblJwY0N3Z2RHaHBjeTVmYVhOQmJtbHRZWFJsWkNncEtUdGNiaUFnSUNCOVhHNWNiaUFnSUNCb2FXUmxLQ2tnZTF4dUlDQWdJQ0FnYVdZZ0tDRjBhR2x6TGw5cGMxTm9iM2R1S0NrcElIdGNiaUFnSUNBZ0lDQWdjbVYwZFhKdU8xeHVJQ0FnSUNBZ2ZWeHVYRzRnSUNBZ0lDQmpiMjV6ZENCb2FXUmxSWFpsYm5RZ1BTQkZkbVZ1ZEVoaGJtUnNaWEpmWDJSbFptRjFiSFF1WkdWbVlYVnNkQzUwY21sbloyVnlLSFJvYVhNdVgyVnNaVzFsYm5Rc0lIUm9hWE11WTI5dWMzUnlkV04wYjNJdVpYWmxiblJPWVcxbEtFVldSVTVVWDBoSlJFVXBLVHRjYmx4dUlDQWdJQ0FnYVdZZ0tHaHBaR1ZGZG1WdWRDNWtaV1poZFd4MFVISmxkbVZ1ZEdWa0tTQjdYRzRnSUNBZ0lDQWdJSEpsZEhWeWJqdGNiaUFnSUNBZ0lIMWNibHh1SUNBZ0lDQWdZMjl1YzNRZ2RHbHdJRDBnZEdocGN5NWZaMlYwVkdsd1JXeGxiV1Z1ZENncE8xeHVYRzRnSUNBZ0lDQjBhWEF1WTJ4aGMzTk1hWE4wTG5KbGJXOTJaU2hEVEVGVFUxOU9RVTFGWDFOSVQxY3BPeUF2THlCSlppQjBhR2x6SUdseklHRWdkRzkxWTJndFpXNWhZbXhsWkNCa1pYWnBZMlVnZDJVZ2NtVnRiM1psSUhSb1pTQmxlSFJ5WVZ4dUlDQWdJQ0FnTHk4Z1pXMXdkSGtnYlc5MWMyVnZkbVZ5SUd4cGMzUmxibVZ5Y3lCM1pTQmhaR1JsWkNCbWIzSWdhVTlUSUhOMWNIQnZjblJjYmx4dUlDQWdJQ0FnYVdZZ0tDZHZiblJ2ZFdOb2MzUmhjblFuSUdsdUlHUnZZM1Z0Wlc1MExtUnZZM1Z0Wlc1MFJXeGxiV1Z1ZENrZ2UxeHVJQ0FnSUNBZ0lDQm1iM0lnS0dOdmJuTjBJR1ZzWlcxbGJuUWdiMllnVzEwdVkyOXVZMkYwS0M0dUxtUnZZM1Z0Wlc1MExtSnZaSGt1WTJocGJHUnlaVzRwS1NCN1hHNGdJQ0FnSUNBZ0lDQWdSWFpsYm5SSVlXNWtiR1Z5WDE5a1pXWmhkV3gwTG1SbFptRjFiSFF1YjJabUtHVnNaVzFsYm5Rc0lDZHRiM1Z6Wlc5MlpYSW5MQ0JwYm1SbGVDNXViMjl3S1R0Y2JpQWdJQ0FnSUNBZ2ZWeHVJQ0FnSUNBZ2ZWeHVYRzRnSUNBZ0lDQjBhR2x6TGw5aFkzUnBkbVZVY21sbloyVnlXMVJTU1VkSFJWSmZRMHhKUTB0ZElEMGdabUZzYzJVN1hHNGdJQ0FnSUNCMGFHbHpMbDloWTNScGRtVlVjbWxuWjJWeVcxUlNTVWRIUlZKZlJrOURWVk5kSUQwZ1ptRnNjMlU3WEc0Z0lDQWdJQ0IwYUdsekxsOWhZM1JwZG1WVWNtbG5aMlZ5VzFSU1NVZEhSVkpmU0U5V1JWSmRJRDBnWm1Gc2MyVTdYRzRnSUNBZ0lDQjBhR2x6TGw5cGMwaHZkbVZ5WldRZ1BTQnVkV3hzT3lBdkx5QnBkQ0JwY3lCaElIUnlhV05ySUhSdklITjFjSEJ2Y25RZ2JXRnVkV0ZzSUhSeWFXZG5aWEpwYm1kY2JseHVJQ0FnSUNBZ1kyOXVjM1FnWTI5dGNHeGxkR1VnUFNBb0tTQTlQaUI3WEc0Z0lDQWdJQ0FnSUdsbUlDaDBhR2x6TGw5cGMxZHBkR2hCWTNScGRtVlVjbWxuWjJWeUtDa3BJSHRjYmlBZ0lDQWdJQ0FnSUNCeVpYUjFjbTQ3WEc0Z0lDQWdJQ0FnSUgxY2JseHVJQ0FnSUNBZ0lDQnBaaUFvSVhSb2FYTXVYMmx6U0c5MlpYSmxaQ2tnZTF4dUlDQWdJQ0FnSUNBZ0lIUm9hWE11WDJScGMzQnZjMlZRYjNCd1pYSW9LVHRjYmlBZ0lDQWdJQ0FnZlZ4dVhHNGdJQ0FnSUNBZ0lIUm9hWE11WDJWc1pXMWxiblF1Y21WdGIzWmxRWFIwY21saWRYUmxLQ2RoY21saExXUmxjMk55YVdKbFpHSjVKeWs3WEc1Y2JpQWdJQ0FnSUNBZ1JYWmxiblJJWVc1a2JHVnlYMTlrWldaaGRXeDBMbVJsWm1GMWJIUXVkSEpwWjJkbGNpaDBhR2x6TGw5bGJHVnRaVzUwTENCMGFHbHpMbU52Ym5OMGNuVmpkRzl5TG1WMlpXNTBUbUZ0WlNoRlZrVk9WRjlJU1VSRVJVNHBLVHRjYmlBZ0lDQWdJSDA3WEc1Y2JpQWdJQ0FnSUhSb2FYTXVYM0YxWlhWbFEyRnNiR0poWTJzb1kyOXRjR3hsZEdVc0lIUm9hWE11ZEdsd0xDQjBhR2x6TGw5cGMwRnVhVzFoZEdWa0tDa3BPMXh1SUNBZ0lIMWNibHh1SUNBZ0lIVndaR0YwWlNncElIdGNiaUFnSUNBZ0lHbG1JQ2gwYUdsekxsOXdiM0J3WlhJcElIdGNiaUFnSUNBZ0lDQWdkR2hwY3k1ZmNHOXdjR1Z5TG5Wd1pHRjBaU2dwTzF4dUlDQWdJQ0FnZlZ4dUlDQWdJSDBnTHk4Z1VISnZkR1ZqZEdWa1hHNWNibHh1SUNBZ0lGOXBjMWRwZEdoRGIyNTBaVzUwS0NrZ2UxeHVJQ0FnSUNBZ2NtVjBkWEp1SUVKdmIyeGxZVzRvZEdocGN5NWZaMlYwVkdsMGJHVW9LU2s3WEc0Z0lDQWdmVnh1WEc0Z0lDQWdYMmRsZEZScGNFVnNaVzFsYm5Rb0tTQjdYRzRnSUNBZ0lDQnBaaUFvSVhSb2FYTXVkR2x3S1NCN1hHNGdJQ0FnSUNBZ0lIUm9hWE11ZEdsd0lEMGdkR2hwY3k1ZlkzSmxZWFJsVkdsd1JXeGxiV1Z1ZENoMGFHbHpMbDl1WlhkRGIyNTBaVzUwSUh4OElIUm9hWE11WDJkbGRFTnZiblJsYm5SR2IzSlVaVzF3YkdGMFpTZ3BLVHRjYmlBZ0lDQWdJSDFjYmx4dUlDQWdJQ0FnY21WMGRYSnVJSFJvYVhNdWRHbHdPMXh1SUNBZ0lIMWNibHh1SUNBZ0lGOWpjbVZoZEdWVWFYQkZiR1Z0Wlc1MEtHTnZiblJsYm5RcElIdGNiaUFnSUNBZ0lHTnZibk4wSUhScGNDQTlJSFJvYVhNdVgyZGxkRlJsYlhCc1lYUmxSbUZqZEc5eWVTaGpiMjUwWlc1MEtTNTBiMGgwYld3b0tUc2dMeThnZEc5a2J6b2djbVZ0YjNabElIUm9hWE1nWTJobFkyc2diMjRnZGpaY2JseHVYRzRnSUNBZ0lDQnBaaUFvSVhScGNDa2dlMXh1SUNBZ0lDQWdJQ0J5WlhSMWNtNGdiblZzYkR0Y2JpQWdJQ0FnSUgxY2JseHVJQ0FnSUNBZ2RHbHdMbU5zWVhOelRHbHpkQzV5WlcxdmRtVW9RMHhCVTFOZlRrRk5SVjlHUVVSRkxDQkRURUZUVTE5T1FVMUZYMU5JVDFjcE95QXZMeUIwYjJSdk9pQnZiaUIyTmlCMGFHVWdabTlzYkc5M2FXNW5JR05oYmlCaVpTQmhZMmhwWlhabFpDQjNhWFJvSUVOVFV5QnZibXg1WEc1Y2JpQWdJQ0FnSUhScGNDNWpiR0Z6YzB4cGMzUXVZV1JrS0dCaWN5MGtlM1JvYVhNdVkyOXVjM1J5ZFdOMGIzSXVUa0ZOUlgwdFlYVjBiMkFwTzF4dUlDQWdJQ0FnWTI5dWMzUWdkR2x3U1dRZ1BTQnBibVJsZUM1blpYUlZTVVFvZEdocGN5NWpiMjV6ZEhKMVkzUnZjaTVPUVUxRktTNTBiMU4wY21sdVp5Z3BPMXh1SUNBZ0lDQWdkR2x3TG5ObGRFRjBkSEpwWW5WMFpTZ25hV1FuTENCMGFYQkpaQ2s3WEc1Y2JpQWdJQ0FnSUdsbUlDaDBhR2x6TGw5cGMwRnVhVzFoZEdWa0tDa3BJSHRjYmlBZ0lDQWdJQ0FnZEdsd0xtTnNZWE56VEdsemRDNWhaR1FvUTB4QlUxTmZUa0ZOUlY5R1FVUkZLVHRjYmlBZ0lDQWdJSDFjYmx4dUlDQWdJQ0FnY21WMGRYSnVJSFJwY0R0Y2JpQWdJQ0I5WEc1Y2JpQWdJQ0J6WlhSRGIyNTBaVzUwS0dOdmJuUmxiblFwSUh0Y2JpQWdJQ0FnSUhSb2FYTXVYMjVsZDBOdmJuUmxiblFnUFNCamIyNTBaVzUwTzF4dVhHNGdJQ0FnSUNCcFppQW9kR2hwY3k1ZmFYTlRhRzkzYmlncEtTQjdYRzRnSUNBZ0lDQWdJSFJvYVhNdVgyUnBjM0J2YzJWUWIzQndaWElvS1R0Y2JseHVJQ0FnSUNBZ0lDQjBhR2x6TG5Ob2IzY29LVHRjYmlBZ0lDQWdJSDFjYmlBZ0lDQjlYRzVjYmlBZ0lDQmZaMlYwVkdWdGNHeGhkR1ZHWVdOMGIzSjVLR052Ym5SbGJuUXBJSHRjYmlBZ0lDQWdJR2xtSUNoMGFHbHpMbDkwWlcxd2JHRjBaVVpoWTNSdmNua3BJSHRjYmlBZ0lDQWdJQ0FnZEdocGN5NWZkR1Z0Y0d4aGRHVkdZV04wYjNKNUxtTm9ZVzVuWlVOdmJuUmxiblFvWTI5dWRHVnVkQ2s3WEc0Z0lDQWdJQ0I5SUdWc2MyVWdlMXh1SUNBZ0lDQWdJQ0IwYUdsekxsOTBaVzF3YkdGMFpVWmhZM1J2Y25rZ1BTQnVaWGNnVkdWdGNHeGhkR1ZHWVdOMGIzSjVYMTlrWldaaGRXeDBMbVJsWm1GMWJIUW9leUF1TGk1MGFHbHpMbDlqYjI1bWFXY3NYRzRnSUNBZ0lDQWdJQ0FnTHk4Z2RHaGxJR0JqYjI1MFpXNTBZQ0IyWVhJZ2FHRnpJSFJ2SUdKbElHRm1kR1Z5SUdCMGFHbHpMbDlqYjI1bWFXZGdYRzRnSUNBZ0lDQWdJQ0FnTHk4Z2RHOGdiM1psY25KcFpHVWdZMjl1Wm1sbkxtTnZiblJsYm5RZ2FXNGdZMkZ6WlNCdlppQndiM0J2ZG1WeVhHNGdJQ0FnSUNBZ0lDQWdZMjl1ZEdWdWRDeGNiaUFnSUNBZ0lDQWdJQ0JsZUhSeVlVTnNZWE56T2lCMGFHbHpMbDl5WlhOdmJIWmxVRzl6YzJsaWJHVkdkVzVqZEdsdmJpaDBhR2x6TGw5amIyNW1hV2N1WTNWemRHOXRRMnhoYzNNcFhHNGdJQ0FnSUNBZ0lIMHBPMXh1SUNBZ0lDQWdmVnh1WEc0Z0lDQWdJQ0J5WlhSMWNtNGdkR2hwY3k1ZmRHVnRjR3hoZEdWR1lXTjBiM0o1TzF4dUlDQWdJSDFjYmx4dUlDQWdJRjluWlhSRGIyNTBaVzUwUm05eVZHVnRjR3hoZEdVb0tTQjdYRzRnSUNBZ0lDQnlaWFIxY200Z2UxeHVJQ0FnSUNBZ0lDQmJVMFZNUlVOVVQxSmZWRTlQVEZSSlVGOUpUazVGVWwwNklIUm9hWE11WDJkbGRGUnBkR3hsS0NsY2JpQWdJQ0FnSUgwN1hHNGdJQ0FnZlZ4dVhHNGdJQ0FnWDJkbGRGUnBkR3hsS0NrZ2UxeHVJQ0FnSUNBZ2NtVjBkWEp1SUhSb2FYTXVYM0psYzI5c2RtVlFiM056YVdKc1pVWjFibU4wYVc5dUtIUm9hWE11WDJOdmJtWnBaeTUwYVhSc1pTa2dmSHdnZEdocGN5NWZaV3hsYldWdWRDNW5aWFJCZEhSeWFXSjFkR1VvSjJSaGRHRXRZbk10YjNKcFoybHVZV3d0ZEdsMGJHVW5LVHRjYmlBZ0lDQjlJQzh2SUZCeWFYWmhkR1ZjYmx4dVhHNGdJQ0FnWDJsdWFYUnBZV3hwZW1WUGJrUmxiR1ZuWVhSbFpGUmhjbWRsZENobGRtVnVkQ2tnZTF4dUlDQWdJQ0FnY21WMGRYSnVJSFJvYVhNdVkyOXVjM1J5ZFdOMGIzSXVaMlYwVDNKRGNtVmhkR1ZKYm5OMFlXNWpaU2hsZG1WdWRDNWtaV3hsWjJGMFpWUmhjbWRsZEN3Z2RHaHBjeTVmWjJWMFJHVnNaV2RoZEdWRGIyNW1hV2NvS1NrN1hHNGdJQ0FnZlZ4dVhHNGdJQ0FnWDJselFXNXBiV0YwWldRb0tTQjdYRzRnSUNBZ0lDQnlaWFIxY200Z2RHaHBjeTVmWTI5dVptbG5MbUZ1YVcxaGRHbHZiaUI4ZkNCMGFHbHpMblJwY0NBbUppQjBhR2x6TG5ScGNDNWpiR0Z6YzB4cGMzUXVZMjl1ZEdGcGJuTW9RMHhCVTFOZlRrRk5SVjlHUVVSRktUdGNiaUFnSUNCOVhHNWNiaUFnSUNCZmFYTlRhRzkzYmlncElIdGNiaUFnSUNBZ0lISmxkSFZ5YmlCMGFHbHpMblJwY0NBbUppQjBhR2x6TG5ScGNDNWpiR0Z6YzB4cGMzUXVZMjl1ZEdGcGJuTW9RMHhCVTFOZlRrRk5SVjlUU0U5WEtUdGNiaUFnSUNCOVhHNWNiaUFnSUNCZlkzSmxZWFJsVUc5d2NHVnlLSFJwY0NrZ2UxeHVJQ0FnSUNBZ1kyOXVjM1FnY0d4aFkyVnRaVzUwSUQwZ2RIbHdaVzltSUhSb2FYTXVYMk52Ym1acFp5NXdiR0ZqWlcxbGJuUWdQVDA5SUNkbWRXNWpkR2x2YmljZ1B5QjBhR2x6TGw5amIyNW1hV2N1Y0d4aFkyVnRaVzUwTG1OaGJHd29kR2hwY3l3Z2RHbHdMQ0IwYUdsekxsOWxiR1Z0Wlc1MEtTQTZJSFJvYVhNdVgyTnZibVpwWnk1d2JHRmpaVzFsYm5RN1hHNGdJQ0FnSUNCamIyNXpkQ0JoZEhSaFkyaHRaVzUwSUQwZ1FYUjBZV05vYldWdWRFMWhjRnR3YkdGalpXMWxiblF1ZEc5VmNIQmxja05oYzJVb0tWMDdYRzRnSUNBZ0lDQnlaWFIxY200Z1VHOXdjR1Z5WDE5dVlXMWxjM0JoWTJVdVkzSmxZWFJsVUc5d2NHVnlLSFJvYVhNdVgyVnNaVzFsYm5Rc0lIUnBjQ3dnZEdocGN5NWZaMlYwVUc5d2NHVnlRMjl1Wm1sbktHRjBkR0ZqYUcxbGJuUXBLVHRjYmlBZ0lDQjlYRzVjYmlBZ0lDQmZaMlYwVDJabWMyVjBLQ2tnZTF4dUlDQWdJQ0FnWTI5dWMzUWdlMXh1SUNBZ0lDQWdJQ0J2Wm1aelpYUmNiaUFnSUNBZ0lIMGdQU0IwYUdsekxsOWpiMjVtYVdjN1hHNWNiaUFnSUNBZ0lHbG1JQ2gwZVhCbGIyWWdiMlptYzJWMElEMDlQU0FuYzNSeWFXNW5KeWtnZTF4dUlDQWdJQ0FnSUNCeVpYUjFjbTRnYjJabWMyVjBMbk53YkdsMEtDY3NKeWt1YldGd0tIWmhiSFZsSUQwK0lFNTFiV0psY2k1d1lYSnpaVWx1ZENoMllXeDFaU3dnTVRBcEtUdGNiaUFnSUNBZ0lIMWNibHh1SUNBZ0lDQWdhV1lnS0hSNWNHVnZaaUJ2Wm1aelpYUWdQVDA5SUNkbWRXNWpkR2x2YmljcElIdGNiaUFnSUNBZ0lDQWdjbVYwZFhKdUlIQnZjSEJsY2tSaGRHRWdQVDRnYjJabWMyVjBLSEJ2Y0hCbGNrUmhkR0VzSUhSb2FYTXVYMlZzWlcxbGJuUXBPMXh1SUNBZ0lDQWdmVnh1WEc0Z0lDQWdJQ0J5WlhSMWNtNGdiMlptYzJWME8xeHVJQ0FnSUgxY2JseHVJQ0FnSUY5eVpYTnZiSFpsVUc5emMybGliR1ZHZFc1amRHbHZiaWhoY21jcElIdGNiaUFnSUNBZ0lISmxkSFZ5YmlCMGVYQmxiMllnWVhKbklEMDlQU0FuWm5WdVkzUnBiMjRuSUQ4Z1lYSm5MbU5oYkd3b2RHaHBjeTVmWld4bGJXVnVkQ2tnT2lCaGNtYzdYRzRnSUNBZ2ZWeHVYRzRnSUNBZ1gyZGxkRkJ2Y0hCbGNrTnZibVpwWnloaGRIUmhZMmh0Wlc1MEtTQjdYRzRnSUNBZ0lDQmpiMjV6ZENCa1pXWmhkV3gwUW5OUWIzQndaWEpEYjI1bWFXY2dQU0I3WEc0Z0lDQWdJQ0FnSUhCc1lXTmxiV1Z1ZERvZ1lYUjBZV05vYldWdWRDeGNiaUFnSUNBZ0lDQWdiVzlrYVdacFpYSnpPaUJiZTF4dUlDQWdJQ0FnSUNBZ0lHNWhiV1U2SUNkbWJHbHdKeXhjYmlBZ0lDQWdJQ0FnSUNCdmNIUnBiMjV6T2lCN1hHNGdJQ0FnSUNBZ0lDQWdJQ0JtWVd4c1ltRmphMUJzWVdObGJXVnVkSE02SUhSb2FYTXVYMk52Ym1acFp5NW1ZV3hzWW1GamExQnNZV05sYldWdWRITmNiaUFnSUNBZ0lDQWdJQ0I5WEc0Z0lDQWdJQ0FnSUgwc0lIdGNiaUFnSUNBZ0lDQWdJQ0J1WVcxbE9pQW5iMlptYzJWMEp5eGNiaUFnSUNBZ0lDQWdJQ0J2Y0hScGIyNXpPaUI3WEc0Z0lDQWdJQ0FnSUNBZ0lDQnZabVp6WlhRNklIUm9hWE11WDJkbGRFOW1abk5sZENncFhHNGdJQ0FnSUNBZ0lDQWdmVnh1SUNBZ0lDQWdJQ0I5TENCN1hHNGdJQ0FnSUNBZ0lDQWdibUZ0WlRvZ0ozQnlaWFpsYm5SUGRtVnlabXh2ZHljc1hHNGdJQ0FnSUNBZ0lDQWdiM0IwYVc5dWN6b2dlMXh1SUNBZ0lDQWdJQ0FnSUNBZ1ltOTFibVJoY25rNklIUm9hWE11WDJOdmJtWnBaeTVpYjNWdVpHRnllVnh1SUNBZ0lDQWdJQ0FnSUgxY2JpQWdJQ0FnSUNBZ2ZTd2dlMXh1SUNBZ0lDQWdJQ0FnSUc1aGJXVTZJQ2RoY25KdmR5Y3NYRzRnSUNBZ0lDQWdJQ0FnYjNCMGFXOXVjem9nZTF4dUlDQWdJQ0FnSUNBZ0lDQWdaV3hsYldWdWREb2dZQzRrZTNSb2FYTXVZMjl1YzNSeWRXTjBiM0l1VGtGTlJYMHRZWEp5YjNkZ1hHNGdJQ0FnSUNBZ0lDQWdmVnh1SUNBZ0lDQWdJQ0I5TENCN1hHNGdJQ0FnSUNBZ0lDQWdibUZ0WlRvZ0ozQnlaVk5sZEZCc1lXTmxiV1Z1ZENjc1hHNGdJQ0FnSUNBZ0lDQWdaVzVoWW14bFpEb2dkSEoxWlN4Y2JpQWdJQ0FnSUNBZ0lDQndhR0Z6WlRvZ0oySmxabTl5WlUxaGFXNG5MRnh1SUNBZ0lDQWdJQ0FnSUdadU9pQmtZWFJoSUQwK0lIdGNiaUFnSUNBZ0lDQWdJQ0FnSUM4dklGQnlaUzF6WlhRZ1VHOXdjR1Z5SjNNZ2NHeGhZMlZ0Wlc1MElHRjBkSEpwWW5WMFpTQnBiaUJ2Y21SbGNpQjBieUJ5WldGa0lIUm9aU0JoY25KdmR5QnphWHBsY3lCd2NtOXdaWEpzZVM1Y2JpQWdJQ0FnSUNBZ0lDQWdJQzh2SUU5MGFHVnlkMmx6WlN3Z1VHOXdjR1Z5SUcxcGVHVnpJSFZ3SUhSb1pTQjNhV1IwYUNCaGJtUWdhR1ZwWjJoMElHUnBiV1Z1YzJsdmJuTWdjMmx1WTJVZ2RHaGxJR2x1YVhScFlXd2dZWEp5YjNjZ2MzUjViR1VnYVhNZ1ptOXlJSFJ2Y0NCd2JHRmpaVzFsYm5SY2JpQWdJQ0FnSUNBZ0lDQWdJSFJvYVhNdVgyZGxkRlJwY0VWc1pXMWxiblFvS1M1elpYUkJkSFJ5YVdKMWRHVW9KMlJoZEdFdGNHOXdjR1Z5TFhCc1lXTmxiV1Z1ZENjc0lHUmhkR0V1YzNSaGRHVXVjR3hoWTJWdFpXNTBLVHRjYmlBZ0lDQWdJQ0FnSUNCOVhHNGdJQ0FnSUNBZ0lIMWRYRzRnSUNBZ0lDQjlPMXh1SUNBZ0lDQWdjbVYwZFhKdUlIc2dMaTR1WkdWbVlYVnNkRUp6VUc5d2NHVnlRMjl1Wm1sbkxGeHVJQ0FnSUNBZ0lDQXVMaTRvZEhsd1pXOW1JSFJvYVhNdVgyTnZibVpwWnk1d2IzQndaWEpEYjI1bWFXY2dQVDA5SUNkbWRXNWpkR2x2YmljZ1B5QjBhR2x6TGw5amIyNW1hV2N1Y0c5d2NHVnlRMjl1Wm1sbktHUmxabUYxYkhSQ2MxQnZjSEJsY2tOdmJtWnBaeWtnT2lCMGFHbHpMbDlqYjI1bWFXY3VjRzl3Y0dWeVEyOXVabWxuS1Z4dUlDQWdJQ0FnZlR0Y2JpQWdJQ0I5WEc1Y2JpQWdJQ0JmYzJWMFRHbHpkR1Z1WlhKektDa2dlMXh1SUNBZ0lDQWdZMjl1YzNRZ2RISnBaMmRsY25NZ1BTQjBhR2x6TGw5amIyNW1hV2N1ZEhKcFoyZGxjaTV6Y0d4cGRDZ25JQ2NwTzF4dVhHNGdJQ0FnSUNCbWIzSWdLR052Ym5OMElIUnlhV2RuWlhJZ2IyWWdkSEpwWjJkbGNuTXBJSHRjYmlBZ0lDQWdJQ0FnYVdZZ0tIUnlhV2RuWlhJZ1BUMDlJQ2RqYkdsamF5Y3BJSHRjYmlBZ0lDQWdJQ0FnSUNCRmRtVnVkRWhoYm1Sc1pYSmZYMlJsWm1GMWJIUXVaR1ZtWVhWc2RDNXZiaWgwYUdsekxsOWxiR1Z0Wlc1MExDQjBhR2x6TG1OdmJuTjBjblZqZEc5eUxtVjJaVzUwVG1GdFpTaEZWa1ZPVkY5RFRFbERTeWtzSUhSb2FYTXVYMk52Ym1acFp5NXpaV3hsWTNSdmNpd2daWFpsYm5RZ1BUNGdlMXh1SUNBZ0lDQWdJQ0FnSUNBZ1kyOXVjM1FnWTI5dWRHVjRkQ0E5SUhSb2FYTXVYMmx1YVhScFlXeHBlbVZQYmtSbGJHVm5ZWFJsWkZSaGNtZGxkQ2hsZG1WdWRDazdYRzVjYmlBZ0lDQWdJQ0FnSUNBZ0lHTnZiblJsZUhRdWRHOW5aMnhsS0NrN1hHNGdJQ0FnSUNBZ0lDQWdmU2s3WEc0Z0lDQWdJQ0FnSUgwZ1pXeHpaU0JwWmlBb2RISnBaMmRsY2lBaFBUMGdWRkpKUjBkRlVsOU5RVTVWUVV3cElIdGNiaUFnSUNBZ0lDQWdJQ0JqYjI1emRDQmxkbVZ1ZEVsdUlEMGdkSEpwWjJkbGNpQTlQVDBnVkZKSlIwZEZVbDlJVDFaRlVpQS9JSFJvYVhNdVkyOXVjM1J5ZFdOMGIzSXVaWFpsYm5ST1lXMWxLRVZXUlU1VVgwMVBWVk5GUlU1VVJWSXBJRG9nZEdocGN5NWpiMjV6ZEhKMVkzUnZjaTVsZG1WdWRFNWhiV1VvUlZaRlRsUmZSazlEVlZOSlRpazdYRzRnSUNBZ0lDQWdJQ0FnWTI5dWMzUWdaWFpsYm5SUGRYUWdQU0IwY21sbloyVnlJRDA5UFNCVVVrbEhSMFZTWDBoUFZrVlNJRDhnZEdocGN5NWpiMjV6ZEhKMVkzUnZjaTVsZG1WdWRFNWhiV1VvUlZaRlRsUmZUVTlWVTBWTVJVRldSU2tnT2lCMGFHbHpMbU52Ym5OMGNuVmpkRzl5TG1WMlpXNTBUbUZ0WlNoRlZrVk9WRjlHVDBOVlUwOVZWQ2s3WEc0Z0lDQWdJQ0FnSUNBZ1JYWmxiblJJWVc1a2JHVnlYMTlrWldaaGRXeDBMbVJsWm1GMWJIUXViMjRvZEdocGN5NWZaV3hsYldWdWRDd2daWFpsYm5SSmJpd2dkR2hwY3k1ZlkyOXVabWxuTG5ObGJHVmpkRzl5TENCbGRtVnVkQ0E5UGlCN1hHNGdJQ0FnSUNBZ0lDQWdJQ0JqYjI1emRDQmpiMjUwWlhoMElEMGdkR2hwY3k1ZmFXNXBkR2xoYkdsNlpVOXVSR1ZzWldkaGRHVmtWR0Z5WjJWMEtHVjJaVzUwS1R0Y2JseHVJQ0FnSUNBZ0lDQWdJQ0FnWTI5dWRHVjRkQzVmWVdOMGFYWmxWSEpwWjJkbGNsdGxkbVZ1ZEM1MGVYQmxJRDA5UFNBblptOWpkWE5wYmljZ1B5QlVVa2xIUjBWU1gwWlBRMVZUSURvZ1ZGSkpSMGRGVWw5SVQxWkZVbDBnUFNCMGNuVmxPMXh1WEc0Z0lDQWdJQ0FnSUNBZ0lDQmpiMjUwWlhoMExsOWxiblJsY2lncE8xeHVJQ0FnSUNBZ0lDQWdJSDBwTzF4dUlDQWdJQ0FnSUNBZ0lFVjJaVzUwU0dGdVpHeGxjbDlmWkdWbVlYVnNkQzVrWldaaGRXeDBMbTl1S0hSb2FYTXVYMlZzWlcxbGJuUXNJR1YyWlc1MFQzVjBMQ0IwYUdsekxsOWpiMjVtYVdjdWMyVnNaV04wYjNJc0lHVjJaVzUwSUQwK0lIdGNiaUFnSUNBZ0lDQWdJQ0FnSUdOdmJuTjBJR052Ym5SbGVIUWdQU0IwYUdsekxsOXBibWwwYVdGc2FYcGxUMjVFWld4bFoyRjBaV1JVWVhKblpYUW9aWFpsYm5RcE8xeHVYRzRnSUNBZ0lDQWdJQ0FnSUNCamIyNTBaWGgwTGw5aFkzUnBkbVZVY21sbloyVnlXMlYyWlc1MExuUjVjR1VnUFQwOUlDZG1iMk4xYzI5MWRDY2dQeUJVVWtsSFIwVlNYMFpQUTFWVElEb2dWRkpKUjBkRlVsOUlUMVpGVWwwZ1BTQmpiMjUwWlhoMExsOWxiR1Z0Wlc1MExtTnZiblJoYVc1ektHVjJaVzUwTG5KbGJHRjBaV1JVWVhKblpYUXBPMXh1WEc0Z0lDQWdJQ0FnSUNBZ0lDQmpiMjUwWlhoMExsOXNaV0YyWlNncE8xeHVJQ0FnSUNBZ0lDQWdJSDBwTzF4dUlDQWdJQ0FnSUNCOVhHNGdJQ0FnSUNCOVhHNWNiaUFnSUNBZ0lIUm9hWE11WDJocFpHVk5iMlJoYkVoaGJtUnNaWElnUFNBb0tTQTlQaUI3WEc0Z0lDQWdJQ0FnSUdsbUlDaDBhR2x6TGw5bGJHVnRaVzUwS1NCN1hHNGdJQ0FnSUNBZ0lDQWdkR2hwY3k1b2FXUmxLQ2s3WEc0Z0lDQWdJQ0FnSUgxY2JpQWdJQ0FnSUgwN1hHNWNiaUFnSUNBZ0lFVjJaVzUwU0dGdVpHeGxjbDlmWkdWbVlYVnNkQzVrWldaaGRXeDBMbTl1S0hSb2FYTXVYMlZzWlcxbGJuUXVZMnh2YzJWemRDaFRSVXhGUTFSUFVsOU5UMFJCVENrc0lFVldSVTVVWDAxUFJFRk1YMGhKUkVVc0lIUm9hWE11WDJocFpHVk5iMlJoYkVoaGJtUnNaWElwTzF4dUlDQWdJSDFjYmx4dUlDQWdJRjltYVhoVWFYUnNaU2dwSUh0Y2JpQWdJQ0FnSUdOdmJuTjBJSFJwZEd4bElEMGdkR2hwY3k1ZlpXeGxiV1Z1ZEM1blpYUkJkSFJ5YVdKMWRHVW9KM1JwZEd4bEp5azdYRzVjYmlBZ0lDQWdJR2xtSUNnaGRHbDBiR1VwSUh0Y2JpQWdJQ0FnSUNBZ2NtVjBkWEp1TzF4dUlDQWdJQ0FnZlZ4dVhHNGdJQ0FnSUNCcFppQW9JWFJvYVhNdVgyVnNaVzFsYm5RdVoyVjBRWFIwY21saWRYUmxLQ2RoY21saExXeGhZbVZzSnlrZ0ppWWdJWFJvYVhNdVgyVnNaVzFsYm5RdWRHVjRkRU52Ym5SbGJuUXVkSEpwYlNncEtTQjdYRzRnSUNBZ0lDQWdJSFJvYVhNdVgyVnNaVzFsYm5RdWMyVjBRWFIwY21saWRYUmxLQ2RoY21saExXeGhZbVZzSnl3Z2RHbDBiR1VwTzF4dUlDQWdJQ0FnZlZ4dVhHNGdJQ0FnSUNCMGFHbHpMbDlsYkdWdFpXNTBMbk5sZEVGMGRISnBZblYwWlNnblpHRjBZUzFpY3kxdmNtbG5hVzVoYkMxMGFYUnNaU2NzSUhScGRHeGxLVHNnTHk4Z1JFOGdUazlVSUZWVFJTQkpWQzRnU1hNZ2IyNXNlU0JtYjNJZ1ltRmphM2RoY21SeklHTnZiWEJoZEdsaWFXeHBkSGxjYmx4dVhHNGdJQ0FnSUNCMGFHbHpMbDlsYkdWdFpXNTBMbkpsYlc5MlpVRjBkSEpwWW5WMFpTZ25kR2wwYkdVbktUdGNiaUFnSUNCOVhHNWNiaUFnSUNCZlpXNTBaWElvS1NCN1hHNGdJQ0FnSUNCcFppQW9kR2hwY3k1ZmFYTlRhRzkzYmlncElIeDhJSFJvYVhNdVgybHpTRzkyWlhKbFpDa2dlMXh1SUNBZ0lDQWdJQ0IwYUdsekxsOXBjMGh2ZG1WeVpXUWdQU0IwY25WbE8xeHVJQ0FnSUNBZ0lDQnlaWFIxY200N1hHNGdJQ0FnSUNCOVhHNWNiaUFnSUNBZ0lIUm9hWE11WDJselNHOTJaWEpsWkNBOUlIUnlkV1U3WEc1Y2JpQWdJQ0FnSUhSb2FYTXVYM05sZEZScGJXVnZkWFFvS0NrZ1BUNGdlMXh1SUNBZ0lDQWdJQ0JwWmlBb2RHaHBjeTVmYVhOSWIzWmxjbVZrS1NCN1hHNGdJQ0FnSUNBZ0lDQWdkR2hwY3k1emFHOTNLQ2s3WEc0Z0lDQWdJQ0FnSUgxY2JpQWdJQ0FnSUgwc0lIUm9hWE11WDJOdmJtWnBaeTVrWld4aGVTNXphRzkzS1R0Y2JpQWdJQ0I5WEc1Y2JpQWdJQ0JmYkdWaGRtVW9LU0I3WEc0Z0lDQWdJQ0JwWmlBb2RHaHBjeTVmYVhOWGFYUm9RV04wYVhabFZISnBaMmRsY2lncEtTQjdYRzRnSUNBZ0lDQWdJSEpsZEhWeWJqdGNiaUFnSUNBZ0lIMWNibHh1SUNBZ0lDQWdkR2hwY3k1ZmFYTkliM1psY21Wa0lEMGdabUZzYzJVN1hHNWNiaUFnSUNBZ0lIUm9hWE11WDNObGRGUnBiV1Z2ZFhRb0tDa2dQVDRnZTF4dUlDQWdJQ0FnSUNCcFppQW9JWFJvYVhNdVgybHpTRzkyWlhKbFpDa2dlMXh1SUNBZ0lDQWdJQ0FnSUhSb2FYTXVhR2xrWlNncE8xeHVJQ0FnSUNBZ0lDQjlYRzRnSUNBZ0lDQjlMQ0IwYUdsekxsOWpiMjVtYVdjdVpHVnNZWGt1YUdsa1pTazdYRzRnSUNBZ2ZWeHVYRzRnSUNBZ1gzTmxkRlJwYldWdmRYUW9hR0Z1Wkd4bGNpd2dkR2x0Wlc5MWRDa2dlMXh1SUNBZ0lDQWdZMnhsWVhKVWFXMWxiM1YwS0hSb2FYTXVYM1JwYldWdmRYUXBPMXh1SUNBZ0lDQWdkR2hwY3k1ZmRHbHRaVzkxZENBOUlITmxkRlJwYldWdmRYUW9hR0Z1Wkd4bGNpd2dkR2x0Wlc5MWRDazdYRzRnSUNBZ2ZWeHVYRzRnSUNBZ1gybHpWMmwwYUVGamRHbDJaVlJ5YVdkblpYSW9LU0I3WEc0Z0lDQWdJQ0J5WlhSMWNtNGdUMkpxWldOMExuWmhiSFZsY3loMGFHbHpMbDloWTNScGRtVlVjbWxuWjJWeUtTNXBibU5zZFdSbGN5aDBjblZsS1R0Y2JpQWdJQ0I5WEc1Y2JpQWdJQ0JmWjJWMFEyOXVabWxuS0dOdmJtWnBaeWtnZTF4dUlDQWdJQ0FnWTI5dWMzUWdaR0YwWVVGMGRISnBZblYwWlhNZ1BTQk5ZVzVwY0hWc1lYUnZjbDlmWkdWbVlYVnNkQzVrWldaaGRXeDBMbWRsZEVSaGRHRkJkSFJ5YVdKMWRHVnpLSFJvYVhNdVgyVnNaVzFsYm5RcE8xeHVYRzRnSUNBZ0lDQm1iM0lnS0dOdmJuTjBJR1JoZEdGQmRIUnlhV0oxZEdVZ2IyWWdUMkpxWldOMExtdGxlWE1vWkdGMFlVRjBkSEpwWW5WMFpYTXBLU0I3WEc0Z0lDQWdJQ0FnSUdsbUlDaEVTVk5CVEV4UFYwVkVYMEZVVkZKSlFsVlVSVk11YUdGektHUmhkR0ZCZEhSeWFXSjFkR1VwS1NCN1hHNGdJQ0FnSUNBZ0lDQWdaR1ZzWlhSbElHUmhkR0ZCZEhSeWFXSjFkR1Z6VzJSaGRHRkJkSFJ5YVdKMWRHVmRPMXh1SUNBZ0lDQWdJQ0I5WEc0Z0lDQWdJQ0I5WEc1Y2JpQWdJQ0FnSUdOdmJtWnBaeUE5SUhzZ0xpNHVaR0YwWVVGMGRISnBZblYwWlhNc1hHNGdJQ0FnSUNBZ0lDNHVMaWgwZVhCbGIyWWdZMjl1Wm1sbklEMDlQU0FuYjJKcVpXTjBKeUFtSmlCamIyNW1hV2NnUHlCamIyNW1hV2NnT2lCN2ZTbGNiaUFnSUNBZ0lIMDdYRzRnSUNBZ0lDQmpiMjVtYVdjZ1BTQjBhR2x6TGw5dFpYSm5aVU52Ym1acFowOWlhaWhqYjI1bWFXY3BPMXh1SUNBZ0lDQWdZMjl1Wm1sbklEMGdkR2hwY3k1ZlkyOXVabWxuUVdaMFpYSk5aWEpuWlNoamIyNW1hV2NwTzF4dVhHNGdJQ0FnSUNCMGFHbHpMbDkwZVhCbFEyaGxZMnREYjI1bWFXY29ZMjl1Wm1sbktUdGNibHh1SUNBZ0lDQWdjbVYwZFhKdUlHTnZibVpwWnp0Y2JpQWdJQ0I5WEc1Y2JpQWdJQ0JmWTI5dVptbG5RV1owWlhKTlpYSm5aU2hqYjI1bWFXY3BJSHRjYmlBZ0lDQWdJR052Ym1acFp5NWpiMjUwWVdsdVpYSWdQU0JqYjI1bWFXY3VZMjl1ZEdGcGJtVnlJRDA5UFNCbVlXeHpaU0EvSUdSdlkzVnRaVzUwTG1KdlpIa2dPaUJwYm1SbGVDNW5aWFJGYkdWdFpXNTBLR052Ym1acFp5NWpiMjUwWVdsdVpYSXBPMXh1WEc0Z0lDQWdJQ0JwWmlBb2RIbHdaVzltSUdOdmJtWnBaeTVrWld4aGVTQTlQVDBnSjI1MWJXSmxjaWNwSUh0Y2JpQWdJQ0FnSUNBZ1kyOXVabWxuTG1SbGJHRjVJRDBnZTF4dUlDQWdJQ0FnSUNBZ0lITm9iM2M2SUdOdmJtWnBaeTVrWld4aGVTeGNiaUFnSUNBZ0lDQWdJQ0JvYVdSbE9pQmpiMjVtYVdjdVpHVnNZWGxjYmlBZ0lDQWdJQ0FnZlR0Y2JpQWdJQ0FnSUgxY2JseHVJQ0FnSUNBZ2FXWWdLSFI1Y0dWdlppQmpiMjVtYVdjdWRHbDBiR1VnUFQwOUlDZHVkVzFpWlhJbktTQjdYRzRnSUNBZ0lDQWdJR052Ym1acFp5NTBhWFJzWlNBOUlHTnZibVpwWnk1MGFYUnNaUzUwYjFOMGNtbHVaeWdwTzF4dUlDQWdJQ0FnZlZ4dVhHNGdJQ0FnSUNCcFppQW9kSGx3Wlc5bUlHTnZibVpwWnk1amIyNTBaVzUwSUQwOVBTQW5iblZ0WW1WeUp5a2dlMXh1SUNBZ0lDQWdJQ0JqYjI1bWFXY3VZMjl1ZEdWdWRDQTlJR052Ym1acFp5NWpiMjUwWlc1MExuUnZVM1J5YVc1bktDazdYRzRnSUNBZ0lDQjlYRzVjYmlBZ0lDQWdJSEpsZEhWeWJpQmpiMjVtYVdjN1hHNGdJQ0FnZlZ4dVhHNGdJQ0FnWDJkbGRFUmxiR1ZuWVhSbFEyOXVabWxuS0NrZ2UxeHVJQ0FnSUNBZ1kyOXVjM1FnWTI5dVptbG5JRDBnZTMwN1hHNWNiaUFnSUNBZ0lHWnZjaUFvWTI5dWMzUWdhMlY1SUdsdUlIUm9hWE11WDJOdmJtWnBaeWtnZTF4dUlDQWdJQ0FnSUNCcFppQW9kR2hwY3k1amIyNXpkSEoxWTNSdmNpNUVaV1poZFd4MFcydGxlVjBnSVQwOUlIUm9hWE11WDJOdmJtWnBaMXRyWlhsZEtTQjdYRzRnSUNBZ0lDQWdJQ0FnWTI5dVptbG5XMnRsZVYwZ1BTQjBhR2x6TGw5amIyNW1hV2RiYTJWNVhUdGNiaUFnSUNBZ0lDQWdmVnh1SUNBZ0lDQWdmVnh1WEc0Z0lDQWdJQ0JqYjI1bWFXY3VjMlZzWldOMGIzSWdQU0JtWVd4elpUdGNiaUFnSUNBZ0lHTnZibVpwWnk1MGNtbG5aMlZ5SUQwZ0oyMWhiblZoYkNjN0lDOHZJRWx1SUhSb1pTQm1kWFIxY21VZ1kyRnVJR0psSUhKbGNHeGhZMlZrSUhkcGRHZzZYRzRnSUNBZ0lDQXZMeUJqYjI1emRDQnJaWGx6VjJsMGFFUnBabVpsY21WdWRGWmhiSFZsY3lBOUlFOWlhbVZqZEM1bGJuUnlhV1Z6S0hSb2FYTXVYMk52Ym1acFp5a3VabWxzZEdWeUtHVnVkSEo1SUQwK0lIUm9hWE11WTI5dWMzUnlkV04wYjNJdVJHVm1ZWFZzZEZ0bGJuUnllVnN3WFYwZ0lUMDlJSFJvYVhNdVgyTnZibVpwWjF0bGJuUnllVnN3WFYwcFhHNGdJQ0FnSUNBdkx5QmdUMkpxWldOMExtWnliMjFGYm5SeWFXVnpLR3RsZVhOWGFYUm9SR2xtWm1WeVpXNTBWbUZzZFdWektXQmNibHh1SUNBZ0lDQWdjbVYwZFhKdUlHTnZibVpwWnp0Y2JpQWdJQ0I5WEc1Y2JpQWdJQ0JmWkdsemNHOXpaVkJ2Y0hCbGNpZ3BJSHRjYmlBZ0lDQWdJR2xtSUNoMGFHbHpMbDl3YjNCd1pYSXBJSHRjYmlBZ0lDQWdJQ0FnZEdocGN5NWZjRzl3Y0dWeUxtUmxjM1J5YjNrb0tUdGNibHh1SUNBZ0lDQWdJQ0IwYUdsekxsOXdiM0J3WlhJZ1BTQnVkV3hzTzF4dUlDQWdJQ0FnZlZ4dVhHNGdJQ0FnSUNCcFppQW9kR2hwY3k1MGFYQXBJSHRjYmlBZ0lDQWdJQ0FnZEdocGN5NTBhWEF1Y21WdGIzWmxLQ2s3WEc0Z0lDQWdJQ0FnSUhSb2FYTXVkR2x3SUQwZ2JuVnNiRHRjYmlBZ0lDQWdJSDFjYmlBZ0lDQjlJQzh2SUZOMFlYUnBZMXh1WEc1Y2JpQWdJQ0J6ZEdGMGFXTWdhbEYxWlhKNVNXNTBaWEptWVdObEtHTnZibVpwWnlrZ2UxeHVJQ0FnSUNBZ2NtVjBkWEp1SUhSb2FYTXVaV0ZqYUNobWRXNWpkR2x2YmlBb0tTQjdYRzRnSUNBZ0lDQWdJR052Ym5OMElHUmhkR0VnUFNCVWIyOXNkR2x3TG1kbGRFOXlRM0psWVhSbFNXNXpkR0Z1WTJVb2RHaHBjeXdnWTI5dVptbG5LVHRjYmx4dUlDQWdJQ0FnSUNCcFppQW9kSGx3Wlc5bUlHTnZibVpwWnlBaFBUMGdKM04wY21sdVp5Y3BJSHRjYmlBZ0lDQWdJQ0FnSUNCeVpYUjFjbTQ3WEc0Z0lDQWdJQ0FnSUgxY2JseHVJQ0FnSUNBZ0lDQnBaaUFvZEhsd1pXOW1JR1JoZEdGYlkyOXVabWxuWFNBOVBUMGdKM1Z1WkdWbWFXNWxaQ2NwSUh0Y2JpQWdJQ0FnSUNBZ0lDQjBhSEp2ZHlCdVpYY2dWSGx3WlVWeWNtOXlLR0JPYnlCdFpYUm9iMlFnYm1GdFpXUWdYQ0lrZTJOdmJtWnBaMzFjSW1BcE8xeHVJQ0FnSUNBZ0lDQjlYRzVjYmlBZ0lDQWdJQ0FnWkdGMFlWdGpiMjVtYVdkZEtDazdYRzRnSUNBZ0lDQjlLVHRjYmlBZ0lDQjlYRzVjYmlBZ2ZWeHVJQ0F2S2lwY2JpQWdJQ29nYWxGMVpYSjVYRzRnSUNBcUwxeHVYRzVjYmlBZ2FXNWtaWGd1WkdWbWFXNWxTbEYxWlhKNVVHeDFaMmx1S0ZSdmIyeDBhWEFwTzF4dVhHNGdJSEpsZEhWeWJpQlViMjlzZEdsd08xeHVYRzU5S1NrN1hHNHZMeU1nYzI5MWNtTmxUV0Z3Y0dsdVoxVlNURDEwYjI5c2RHbHdMbXB6TG0xaGNGeHVJaXdpTHlvaFhHNGdJQ29nUW05dmRITjBjbUZ3SUdKaFkydGtjbTl3TG1weklIWTFMakl1TXlBb2FIUjBjSE02THk5blpYUmliMjkwYzNSeVlYQXVZMjl0THlsY2JpQWdLaUJEYjNCNWNtbG5hSFFnTWpBeE1TMHlNREl5SUZSb1pTQkNiMjkwYzNSeVlYQWdRWFYwYUc5eWN5QW9hSFIwY0hNNkx5OW5hWFJvZFdJdVkyOXRMM1IzWW5NdlltOXZkSE4wY21Gd0wyZHlZWEJvY3k5amIyNTBjbWxpZFhSdmNuTXBYRzRnSUNvZ1RHbGpaVzV6WldRZ2RXNWtaWElnVFVsVUlDaG9kSFJ3Y3pvdkwyZHBkR2gxWWk1amIyMHZkSGRpY3k5aWIyOTBjM1J5WVhBdllteHZZaTl0WVdsdUwweEpRMFZPVTBVcFhHNGdJQ292WEc0b1puVnVZM1JwYjI0Z0tHZHNiMkpoYkN3Z1ptRmpkRzl5ZVNrZ2UxeHVJQ0IwZVhCbGIyWWdaWGh3YjNKMGN5QTlQVDBnSjI5aWFtVmpkQ2NnSmlZZ2RIbHdaVzltSUcxdlpIVnNaU0FoUFQwZ0ozVnVaR1ZtYVc1bFpDY2dQeUJ0YjJSMWJHVXVaWGh3YjNKMGN5QTlJR1poWTNSdmNua29jbVZ4ZFdseVpTZ25MaTR2Wkc5dEwyVjJaVzUwTFdoaGJtUnNaWEluS1N3Z2NtVnhkV2x5WlNnbkxpOXBibVJsZUNjcExDQnlaWEYxYVhKbEtDY3VMMk52Ym1acFp5Y3BLU0E2WEc0Z0lIUjVjR1Z2WmlCa1pXWnBibVVnUFQwOUlDZG1kVzVqZEdsdmJpY2dKaVlnWkdWbWFXNWxMbUZ0WkNBL0lHUmxabWx1WlNoYkp5NHVMMlJ2YlM5bGRtVnVkQzFvWVc1a2JHVnlKeXdnSnk0dmFXNWtaWGduTENBbkxpOWpiMjVtYVdjblhTd2dabUZqZEc5eWVTa2dPbHh1SUNBb1oyeHZZbUZzSUQwZ2RIbHdaVzltSUdkc2IySmhiRlJvYVhNZ0lUMDlJQ2QxYm1SbFptbHVaV1FuSUQ4Z1oyeHZZbUZzVkdocGN5QTZJR2RzYjJKaGJDQjhmQ0J6Wld4bUxDQm5iRzlpWVd3dVFtRmphMlJ5YjNBZ1BTQm1ZV04wYjNKNUtHZHNiMkpoYkM1RmRtVnVkRWhoYm1Sc1pYSXNJR2RzYjJKaGJDNUpibVJsZUN3Z1oyeHZZbUZzTGtOdmJtWnBaeWtwTzF4dWZTa29kR2hwY3l3Z0tHWjFibU4wYVc5dUlDaEZkbVZ1ZEVoaGJtUnNaWElzSUdsdVpHVjRMQ0JEYjI1bWFXY3BJSHNnSjNWelpTQnpkSEpwWTNRbk8xeHVYRzRnSUdOdmJuTjBJRjlwYm5SbGNtOXdSR1ZtWVhWc2RFeGxaMkZqZVNBOUlHVWdQVDRnWlNBbUppQjBlWEJsYjJZZ1pTQTlQVDBnSjI5aWFtVmpkQ2NnSmlZZ0oyUmxabUYxYkhRbklHbHVJR1VnUHlCbElEb2dleUJrWldaaGRXeDBPaUJsSUgwN1hHNWNiaUFnWTI5dWMzUWdSWFpsYm5SSVlXNWtiR1Z5WDE5a1pXWmhkV3gwSUQwZ0x5b2pYMTlRVlZKRlgxOHFMMTlwYm5SbGNtOXdSR1ZtWVhWc2RFeGxaMkZqZVNoRmRtVnVkRWhoYm1Sc1pYSXBPMXh1SUNCamIyNXpkQ0JEYjI1bWFXZGZYMlJsWm1GMWJIUWdQU0F2S2lOZlgxQlZVa1ZmWHlvdlgybHVkR1Z5YjNCRVpXWmhkV3gwVEdWbllXTjVLRU52Ym1acFp5azdYRzVjYmlBZ0x5b3FYRzRnSUNBcUlDMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRYRzRnSUNBcUlFSnZiM1J6ZEhKaGNDQW9kalV1TWk0ektUb2dkWFJwYkM5aVlXTnJaSEp2Y0M1cWMxeHVJQ0FnS2lCTWFXTmxibk5sWkNCMWJtUmxjaUJOU1ZRZ0tHaDBkSEJ6T2k4dloybDBhSFZpTG1OdmJTOTBkMkp6TDJKdmIzUnpkSEpoY0M5aWJHOWlMMjFoYVc0dlRFbERSVTVUUlNsY2JpQWdJQ29nTFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMxY2JpQWdJQ292WEc0Z0lDOHFLbHh1SUNBZ0tpQkRiMjV6ZEdGdWRITmNiaUFnSUNvdlhHNWNiaUFnWTI5dWMzUWdUa0ZOUlNBOUlDZGlZV05yWkhKdmNDYzdYRzRnSUdOdmJuTjBJRU5NUVZOVFgwNUJUVVZmUmtGRVJTQTlJQ2RtWVdSbEp6dGNiaUFnWTI5dWMzUWdRMHhCVTFOZlRrRk5SVjlUU0U5WElEMGdKM05vYjNjbk8xeHVJQ0JqYjI1emRDQkZWa1ZPVkY5TlQxVlRSVVJQVjA0Z1BTQmdiVzkxYzJWa2IzZHVMbUp6TGlSN1RrRk5SWDFnTzF4dUlDQmpiMjV6ZENCRVpXWmhkV3gwSUQwZ2UxeHVJQ0FnSUdOc1lYTnpUbUZ0WlRvZ0oyMXZaR0ZzTFdKaFkydGtjbTl3Snl4Y2JpQWdJQ0JqYkdsamEwTmhiR3hpWVdOck9pQnVkV3hzTEZ4dUlDQWdJR2x6UVc1cGJXRjBaV1E2SUdaaGJITmxMRnh1SUNBZ0lHbHpWbWx6YVdKc1pUb2dkSEoxWlN4Y2JpQWdJQ0F2THlCcFppQm1ZV3h6WlN3Z2QyVWdkWE5sSUhSb1pTQmlZV05yWkhKdmNDQm9aV3h3WlhJZ2QybDBhRzkxZENCaFpHUnBibWNnWVc1NUlHVnNaVzFsYm5RZ2RHOGdkR2hsSUdSdmJWeHVJQ0FnSUhKdmIzUkZiR1Z0Wlc1ME9pQW5ZbTlrZVNjZ0x5OGdaMmwyWlNCMGFHVWdZMmh2YVdObElIUnZJSEJzWVdObElHSmhZMnRrY205d0lIVnVaR1Z5SUdScFptWmxjbVZ1ZENCbGJHVnRaVzUwYzF4dVhHNGdJSDA3WEc0Z0lHTnZibk4wSUVSbFptRjFiSFJVZVhCbElEMGdlMXh1SUNBZ0lHTnNZWE56VG1GdFpUb2dKM04wY21sdVp5Y3NYRzRnSUNBZ1kyeHBZMnREWVd4c1ltRmphem9nSnlobWRXNWpkR2x2Ym54dWRXeHNLU2NzWEc0Z0lDQWdhWE5CYm1sdFlYUmxaRG9nSjJKdmIyeGxZVzRuTEZ4dUlDQWdJR2x6Vm1semFXSnNaVG9nSjJKdmIyeGxZVzRuTEZ4dUlDQWdJSEp2YjNSRmJHVnRaVzUwT2lBbktHVnNaVzFsYm5SOGMzUnlhVzVuS1NkY2JpQWdmVHRjYmlBZ0x5b3FYRzRnSUNBcUlFTnNZWE56SUdSbFptbHVhWFJwYjI1Y2JpQWdJQ292WEc1Y2JpQWdZMnhoYzNNZ1FtRmphMlJ5YjNBZ1pYaDBaVzVrY3lCRGIyNW1hV2RmWDJSbFptRjFiSFF1WkdWbVlYVnNkQ0I3WEc0Z0lDQWdZMjl1YzNSeWRXTjBiM0lvWTI5dVptbG5LU0I3WEc0Z0lDQWdJQ0J6ZFhCbGNpZ3BPMXh1SUNBZ0lDQWdkR2hwY3k1ZlkyOXVabWxuSUQwZ2RHaHBjeTVmWjJWMFEyOXVabWxuS0dOdmJtWnBaeWs3WEc0Z0lDQWdJQ0IwYUdsekxsOXBjMEZ3Y0dWdVpHVmtJRDBnWm1Gc2MyVTdYRzRnSUNBZ0lDQjBhR2x6TGw5bGJHVnRaVzUwSUQwZ2JuVnNiRHRjYmlBZ0lDQjlJQzh2SUVkbGRIUmxjbk5jYmx4dVhHNGdJQ0FnYzNSaGRHbGpJR2RsZENCRVpXWmhkV3gwS0NrZ2UxeHVJQ0FnSUNBZ2NtVjBkWEp1SUVSbFptRjFiSFE3WEc0Z0lDQWdmVnh1WEc0Z0lDQWdjM1JoZEdsaklHZGxkQ0JFWldaaGRXeDBWSGx3WlNncElIdGNiaUFnSUNBZ0lISmxkSFZ5YmlCRVpXWmhkV3gwVkhsd1pUdGNiaUFnSUNCOVhHNWNiaUFnSUNCemRHRjBhV01nWjJWMElFNUJUVVVvS1NCN1hHNGdJQ0FnSUNCeVpYUjFjbTRnVGtGTlJUdGNiaUFnSUNCOUlDOHZJRkIxWW14cFkxeHVYRzVjYmlBZ0lDQnphRzkzS0dOaGJHeGlZV05yS1NCN1hHNGdJQ0FnSUNCcFppQW9JWFJvYVhNdVgyTnZibVpwWnk1cGMxWnBjMmxpYkdVcElIdGNiaUFnSUNBZ0lDQWdhVzVrWlhndVpYaGxZM1YwWlNoallXeHNZbUZqYXlrN1hHNGdJQ0FnSUNBZ0lISmxkSFZ5Ymp0Y2JpQWdJQ0FnSUgxY2JseHVJQ0FnSUNBZ2RHaHBjeTVmWVhCd1pXNWtLQ2s3WEc1Y2JpQWdJQ0FnSUdOdmJuTjBJR1ZzWlcxbGJuUWdQU0IwYUdsekxsOW5aWFJGYkdWdFpXNTBLQ2s3WEc1Y2JpQWdJQ0FnSUdsbUlDaDBhR2x6TGw5amIyNW1hV2N1YVhOQmJtbHRZWFJsWkNrZ2UxeHVJQ0FnSUNBZ0lDQnBibVJsZUM1eVpXWnNiM2NvWld4bGJXVnVkQ2s3WEc0Z0lDQWdJQ0I5WEc1Y2JpQWdJQ0FnSUdWc1pXMWxiblF1WTJ4aGMzTk1hWE4wTG1Ga1pDaERURUZUVTE5T1FVMUZYMU5JVDFjcE8xeHVYRzRnSUNBZ0lDQjBhR2x6TGw5bGJYVnNZWFJsUVc1cGJXRjBhVzl1S0NncElEMCtJSHRjYmlBZ0lDQWdJQ0FnYVc1a1pYZ3VaWGhsWTNWMFpTaGpZV3hzWW1GamF5azdYRzRnSUNBZ0lDQjlLVHRjYmlBZ0lDQjlYRzVjYmlBZ0lDQm9hV1JsS0dOaGJHeGlZV05yS1NCN1hHNGdJQ0FnSUNCcFppQW9JWFJvYVhNdVgyTnZibVpwWnk1cGMxWnBjMmxpYkdVcElIdGNiaUFnSUNBZ0lDQWdhVzVrWlhndVpYaGxZM1YwWlNoallXeHNZbUZqYXlrN1hHNGdJQ0FnSUNBZ0lISmxkSFZ5Ymp0Y2JpQWdJQ0FnSUgxY2JseHVJQ0FnSUNBZ2RHaHBjeTVmWjJWMFJXeGxiV1Z1ZENncExtTnNZWE56VEdsemRDNXlaVzF2ZG1Vb1EweEJVMU5mVGtGTlJWOVRTRTlYS1R0Y2JseHVJQ0FnSUNBZ2RHaHBjeTVmWlcxMWJHRjBaVUZ1YVcxaGRHbHZiaWdvS1NBOVBpQjdYRzRnSUNBZ0lDQWdJSFJvYVhNdVpHbHpjRzl6WlNncE8xeHVJQ0FnSUNBZ0lDQnBibVJsZUM1bGVHVmpkWFJsS0dOaGJHeGlZV05yS1R0Y2JpQWdJQ0FnSUgwcE8xeHVJQ0FnSUgxY2JseHVJQ0FnSUdScGMzQnZjMlVvS1NCN1hHNGdJQ0FnSUNCcFppQW9JWFJvYVhNdVgybHpRWEJ3Wlc1a1pXUXBJSHRjYmlBZ0lDQWdJQ0FnY21WMGRYSnVPMXh1SUNBZ0lDQWdmVnh1WEc0Z0lDQWdJQ0JGZG1WdWRFaGhibVJzWlhKZlgyUmxabUYxYkhRdVpHVm1ZWFZzZEM1dlptWW9kR2hwY3k1ZlpXeGxiV1Z1ZEN3Z1JWWkZUbFJmVFU5VlUwVkVUMWRPS1R0Y2JseHVJQ0FnSUNBZ2RHaHBjeTVmWld4bGJXVnVkQzV5WlcxdmRtVW9LVHRjYmx4dUlDQWdJQ0FnZEdocGN5NWZhWE5CY0hCbGJtUmxaQ0E5SUdaaGJITmxPMXh1SUNBZ0lIMGdMeThnVUhKcGRtRjBaVnh1WEc1Y2JpQWdJQ0JmWjJWMFJXeGxiV1Z1ZENncElIdGNiaUFnSUNBZ0lHbG1JQ2doZEdocGN5NWZaV3hsYldWdWRDa2dlMXh1SUNBZ0lDQWdJQ0JqYjI1emRDQmlZV05yWkhKdmNDQTlJR1J2WTNWdFpXNTBMbU55WldGMFpVVnNaVzFsYm5Rb0oyUnBkaWNwTzF4dUlDQWdJQ0FnSUNCaVlXTnJaSEp2Y0M1amJHRnpjMDVoYldVZ1BTQjBhR2x6TGw5amIyNW1hV2N1WTJ4aGMzTk9ZVzFsTzF4dVhHNGdJQ0FnSUNBZ0lHbG1JQ2gwYUdsekxsOWpiMjVtYVdjdWFYTkJibWx0WVhSbFpDa2dlMXh1SUNBZ0lDQWdJQ0FnSUdKaFkydGtjbTl3TG1Oc1lYTnpUR2x6ZEM1aFpHUW9RMHhCVTFOZlRrRk5SVjlHUVVSRktUdGNiaUFnSUNBZ0lDQWdmVnh1WEc0Z0lDQWdJQ0FnSUhSb2FYTXVYMlZzWlcxbGJuUWdQU0JpWVdOclpISnZjRHRjYmlBZ0lDQWdJSDFjYmx4dUlDQWdJQ0FnY21WMGRYSnVJSFJvYVhNdVgyVnNaVzFsYm5RN1hHNGdJQ0FnZlZ4dVhHNGdJQ0FnWDJOdmJtWnBaMEZtZEdWeVRXVnlaMlVvWTI5dVptbG5LU0I3WEc0Z0lDQWdJQ0F2THlCMWMyVWdaMlYwUld4bGJXVnVkQ2dwSUhkcGRHZ2dkR2hsSUdSbFptRjFiSFFnWENKaWIyUjVYQ0lnZEc4Z1oyVjBJR0VnWm5KbGMyZ2dSV3hsYldWdWRDQnZiaUJsWVdOb0lHbHVjM1JoYm5ScFlYUnBiMjVjYmlBZ0lDQWdJR052Ym1acFp5NXliMjkwUld4bGJXVnVkQ0E5SUdsdVpHVjRMbWRsZEVWc1pXMWxiblFvWTI5dVptbG5Mbkp2YjNSRmJHVnRaVzUwS1R0Y2JpQWdJQ0FnSUhKbGRIVnliaUJqYjI1bWFXYzdYRzRnSUNBZ2ZWeHVYRzRnSUNBZ1gyRndjR1Z1WkNncElIdGNiaUFnSUNBZ0lHbG1JQ2gwYUdsekxsOXBjMEZ3Y0dWdVpHVmtLU0I3WEc0Z0lDQWdJQ0FnSUhKbGRIVnlianRjYmlBZ0lDQWdJSDFjYmx4dUlDQWdJQ0FnWTI5dWMzUWdaV3hsYldWdWRDQTlJSFJvYVhNdVgyZGxkRVZzWlcxbGJuUW9LVHRjYmx4dUlDQWdJQ0FnZEdocGN5NWZZMjl1Wm1sbkxuSnZiM1JGYkdWdFpXNTBMbUZ3Y0dWdVpDaGxiR1Z0Wlc1MEtUdGNibHh1SUNBZ0lDQWdSWFpsYm5SSVlXNWtiR1Z5WDE5a1pXWmhkV3gwTG1SbFptRjFiSFF1YjI0b1pXeGxiV1Z1ZEN3Z1JWWkZUbFJmVFU5VlUwVkVUMWRPTENBb0tTQTlQaUI3WEc0Z0lDQWdJQ0FnSUdsdVpHVjRMbVY0WldOMWRHVW9kR2hwY3k1ZlkyOXVabWxuTG1Oc2FXTnJRMkZzYkdKaFkyc3BPMXh1SUNBZ0lDQWdmU2s3WEc0Z0lDQWdJQ0IwYUdsekxsOXBjMEZ3Y0dWdVpHVmtJRDBnZEhKMVpUdGNiaUFnSUNCOVhHNWNiaUFnSUNCZlpXMTFiR0YwWlVGdWFXMWhkR2x2YmloallXeHNZbUZqYXlrZ2UxeHVJQ0FnSUNBZ2FXNWtaWGd1WlhobFkzVjBaVUZtZEdWeVZISmhibk5wZEdsdmJpaGpZV3hzWW1GamF5d2dkR2hwY3k1ZloyVjBSV3hsYldWdWRDZ3BMQ0IwYUdsekxsOWpiMjVtYVdjdWFYTkJibWx0WVhSbFpDazdYRzRnSUNBZ2ZWeHVYRzRnSUgxY2JseHVJQ0J5WlhSMWNtNGdRbUZqYTJSeWIzQTdYRzVjYm4wcEtUdGNiaTh2SXlCemIzVnlZMlZOWVhCd2FXNW5WVkpNUFdKaFkydGtjbTl3TG1wekxtMWhjRnh1SWl3aUx5b2hYRzRnSUNvZ1FtOXZkSE4wY21Gd0lHTnZiWEJ2Ym1WdWRDMW1kVzVqZEdsdmJuTXVhbk1nZGpVdU1pNHpJQ2hvZEhSd2N6b3ZMMmRsZEdKdmIzUnpkSEpoY0M1amIyMHZLVnh1SUNBcUlFTnZjSGx5YVdkb2RDQXlNREV4TFRJd01qSWdWR2hsSUVKdmIzUnpkSEpoY0NCQmRYUm9iM0p6SUNob2RIUndjem92TDJkcGRHaDFZaTVqYjIwdmRIZGljeTlpYjI5MGMzUnlZWEF2WjNKaGNHaHpMMk52Ym5SeWFXSjFkRzl5Y3lsY2JpQWdLaUJNYVdObGJuTmxaQ0IxYm1SbGNpQk5TVlFnS0doMGRIQnpPaTh2WjJsMGFIVmlMbU52YlM5MGQySnpMMkp2YjNSemRISmhjQzlpYkc5aUwyMWhhVzR2VEVsRFJVNVRSU2xjYmlBZ0tpOWNiaWhtZFc1amRHbHZiaUFvWjJ4dlltRnNMQ0JtWVdOMGIzSjVLU0I3WEc0Z0lIUjVjR1Z2WmlCbGVIQnZjblJ6SUQwOVBTQW5iMkpxWldOMEp5QW1KaUIwZVhCbGIyWWdiVzlrZFd4bElDRTlQU0FuZFc1a1pXWnBibVZrSnlBL0lHWmhZM1J2Y25rb1pYaHdiM0owY3l3Z2NtVnhkV2x5WlNnbkxpNHZaRzl0TDJWMlpXNTBMV2hoYm1Sc1pYSW5LU3dnY21WeGRXbHlaU2duTGk5cGJtUmxlQ2NwS1NBNlhHNGdJSFI1Y0dWdlppQmtaV1pwYm1VZ1BUMDlJQ2RtZFc1amRHbHZiaWNnSmlZZ1pHVm1hVzVsTG1GdFpDQS9JR1JsWm1sdVpTaGJKMlY0Y0c5eWRITW5MQ0FuTGk0dlpHOXRMMlYyWlc1MExXaGhibVJzWlhJbkxDQW5MaTlwYm1SbGVDZGRMQ0JtWVdOMGIzSjVLU0E2WEc0Z0lDaG5iRzlpWVd3Z1BTQjBlWEJsYjJZZ1oyeHZZbUZzVkdocGN5QWhQVDBnSjNWdVpHVm1hVzVsWkNjZ1B5Qm5iRzlpWVd4VWFHbHpJRG9nWjJ4dlltRnNJSHg4SUhObGJHWXNJR1poWTNSdmNua29aMnh2WW1Gc0xrTnZiWEJ2Ym1WdWRFWjFibU4wYVc5dWN5QTlJSHQ5TENCbmJHOWlZV3d1UlhabGJuUklZVzVrYkdWeUxDQm5iRzlpWVd3dVNXNWtaWGdwS1R0Y2JuMHBLSFJvYVhNc0lDaG1kVzVqZEdsdmJpQW9aWGh3YjNKMGN5d2dSWFpsYm5SSVlXNWtiR1Z5TENCcGJtUmxlQ2tnZXlBbmRYTmxJSE4wY21samRDYzdYRzVjYmlBZ1kyOXVjM1FnWDJsdWRHVnliM0JFWldaaGRXeDBUR1ZuWVdONUlEMGdaU0E5UGlCbElDWW1JSFI1Y0dWdlppQmxJRDA5UFNBbmIySnFaV04wSnlBbUppQW5aR1ZtWVhWc2RDY2dhVzRnWlNBL0lHVWdPaUI3SUdSbFptRjFiSFE2SUdVZ2ZUdGNibHh1SUNCamIyNXpkQ0JGZG1WdWRFaGhibVJzWlhKZlgyUmxabUYxYkhRZ1BTQXZLaU5mWDFCVlVrVmZYeW92WDJsdWRHVnliM0JFWldaaGRXeDBUR1ZuWVdONUtFVjJaVzUwU0dGdVpHeGxjaWs3WEc1Y2JpQWdMeW9xWEc0Z0lDQXFJQzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0WEc0Z0lDQXFJRUp2YjNSemRISmhjQ0FvZGpVdU1pNHpLVG9nZFhScGJDOWpiMjF3YjI1bGJuUXRablZ1WTNScGIyNXpMbXB6WEc0Z0lDQXFJRXhwWTJWdWMyVmtJSFZ1WkdWeUlFMUpWQ0FvYUhSMGNITTZMeTluYVhSb2RXSXVZMjl0TDNSM1luTXZZbTl2ZEhOMGNtRndMMkpzYjJJdmJXRnBiaTlNU1VORlRsTkZLVnh1SUNBZ0tpQXRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMVnh1SUNBZ0tpOWNibHh1SUNCamIyNXpkQ0JsYm1GaWJHVkVhWE50YVhOelZISnBaMmRsY2lBOUlDaGpiMjF3YjI1bGJuUXNJRzFsZEdodlpDQTlJQ2RvYVdSbEp5a2dQVDRnZTF4dUlDQWdJR052Ym5OMElHTnNhV05yUlhabGJuUWdQU0JnWTJ4cFkyc3VaR2x6YldsemN5UjdZMjl0Y0c5dVpXNTBMa1ZXUlU1VVgwdEZXWDFnTzF4dUlDQWdJR052Ym5OMElHNWhiV1VnUFNCamIyMXdiMjVsYm5RdVRrRk5SVHRjYmlBZ0lDQkZkbVZ1ZEVoaGJtUnNaWEpmWDJSbFptRjFiSFF1WkdWbVlYVnNkQzV2Ymloa2IyTjFiV1Z1ZEN3Z1kyeHBZMnRGZG1WdWRDd2dZRnRrWVhSaExXSnpMV1JwYzIxcGMzTTlYQ0lrZTI1aGJXVjlYQ0pkWUN3Z1puVnVZM1JwYjI0Z0tHVjJaVzUwS1NCN1hHNGdJQ0FnSUNCcFppQW9XeWRCSnl3Z0owRlNSVUVuWFM1cGJtTnNkV1JsY3loMGFHbHpMblJoWjA1aGJXVXBLU0I3WEc0Z0lDQWdJQ0FnSUdWMlpXNTBMbkJ5WlhabGJuUkVaV1poZFd4MEtDazdYRzRnSUNBZ0lDQjlYRzVjYmlBZ0lDQWdJR2xtSUNocGJtUmxlQzVwYzBScGMyRmliR1ZrS0hSb2FYTXBLU0I3WEc0Z0lDQWdJQ0FnSUhKbGRIVnlianRjYmlBZ0lDQWdJSDFjYmx4dUlDQWdJQ0FnWTI5dWMzUWdkR0Z5WjJWMElEMGdhVzVrWlhndVoyVjBSV3hsYldWdWRFWnliMjFUWld4bFkzUnZjaWgwYUdsektTQjhmQ0IwYUdsekxtTnNiM05sYzNRb1lDNGtlMjVoYldWOVlDazdYRzRnSUNBZ0lDQmpiMjV6ZENCcGJuTjBZVzVqWlNBOUlHTnZiWEJ2Ym1WdWRDNW5aWFJQY2tOeVpXRjBaVWx1YzNSaGJtTmxLSFJoY21kbGRDazdJQzh2SUUxbGRHaHZaQ0JoY21kMWJXVnVkQ0JwY3lCc1pXWjBMQ0JtYjNJZ1FXeGxjblFnWVc1a0lHOXViSGtzSUdGeklHbDBJR1J2WlhOdUozUWdhVzF3YkdWdFpXNTBJSFJvWlNBbmFHbGtaU2NnYldWMGFHOWtYRzVjYmlBZ0lDQWdJR2x1YzNSaGJtTmxXMjFsZEdodlpGMG9LVHRjYmlBZ0lDQjlLVHRjYmlBZ2ZUdGNibHh1SUNCbGVIQnZjblJ6TG1WdVlXSnNaVVJwYzIxcGMzTlVjbWxuWjJWeUlEMGdaVzVoWW14bFJHbHpiV2x6YzFSeWFXZG5aWEk3WEc1Y2JpQWdUMkpxWldOMExtUmxabWx1WlZCeWIzQmxjblJwWlhNb1pYaHdiM0owY3l3Z2V5QmZYMlZ6VFc5a2RXeGxPaUI3SUhaaGJIVmxPaUIwY25WbElIMHNJRnRUZVcxaWIyd3VkRzlUZEhKcGJtZFVZV2RkT2lCN0lIWmhiSFZsT2lBblRXOWtkV3hsSnlCOUlIMHBPMXh1WEc1OUtTazdYRzR2THlNZ2MyOTFjbU5sVFdGd2NHbHVaMVZTVEQxamIyMXdiMjVsYm5RdFpuVnVZM1JwYjI1ekxtcHpMbTFoY0Z4dUlpd2lMeW9oWEc0Z0lDb2dRbTl2ZEhOMGNtRndJR052Ym1acFp5NXFjeUIyTlM0eUxqTWdLR2gwZEhCek9pOHZaMlYwWW05dmRITjBjbUZ3TG1OdmJTOHBYRzRnSUNvZ1EyOXdlWEpwWjJoMElESXdNVEV0TWpBeU1pQlVhR1VnUW05dmRITjBjbUZ3SUVGMWRHaHZjbk1nS0doMGRIQnpPaTh2WjJsMGFIVmlMbU52YlM5MGQySnpMMkp2YjNSemRISmhjQzluY21Gd2FITXZZMjl1ZEhKcFluVjBiM0p6S1Z4dUlDQXFJRXhwWTJWdWMyVmtJSFZ1WkdWeUlFMUpWQ0FvYUhSMGNITTZMeTluYVhSb2RXSXVZMjl0TDNSM1luTXZZbTl2ZEhOMGNtRndMMkpzYjJJdmJXRnBiaTlNU1VORlRsTkZLVnh1SUNBcUwxeHVLR1oxYm1OMGFXOXVJQ2huYkc5aVlXd3NJR1poWTNSdmNua3BJSHRjYmlBZ2RIbHdaVzltSUdWNGNHOXlkSE1nUFQwOUlDZHZZbXBsWTNRbklDWW1JSFI1Y0dWdlppQnRiMlIxYkdVZ0lUMDlJQ2QxYm1SbFptbHVaV1FuSUQ4Z2JXOWtkV3hsTG1WNGNHOXlkSE1nUFNCbVlXTjBiM0o1S0hKbGNYVnBjbVVvSnk0dmFXNWtaWGduS1N3Z2NtVnhkV2x5WlNnbkxpNHZaRzl0TDIxaGJtbHdkV3hoZEc5eUp5a3BJRHBjYmlBZ2RIbHdaVzltSUdSbFptbHVaU0E5UFQwZ0oyWjFibU4wYVc5dUp5QW1KaUJrWldacGJtVXVZVzFrSUQ4Z1pHVm1hVzVsS0ZzbkxpOXBibVJsZUNjc0lDY3VMaTlrYjIwdmJXRnVhWEIxYkdGMGIzSW5YU3dnWm1GamRHOXllU2tnT2x4dUlDQW9aMnh2WW1Gc0lEMGdkSGx3Wlc5bUlHZHNiMkpoYkZSb2FYTWdJVDA5SUNkMWJtUmxabWx1WldRbklEOGdaMnh2WW1Gc1ZHaHBjeUE2SUdkc2IySmhiQ0I4ZkNCelpXeG1MQ0JuYkc5aVlXd3VRMjl1Wm1sbklEMGdabUZqZEc5eWVTaG5iRzlpWVd3dVNXNWtaWGdzSUdkc2IySmhiQzVOWVc1cGNIVnNZWFJ2Y2lrcE8xeHVmU2tvZEdocGN5d2dLR1oxYm1OMGFXOXVJQ2hwYm1SbGVDd2dUV0Z1YVhCMWJHRjBiM0lwSUhzZ0ozVnpaU0J6ZEhKcFkzUW5PMXh1WEc0Z0lHTnZibk4wSUY5cGJuUmxjbTl3UkdWbVlYVnNkRXhsWjJGamVTQTlJR1VnUFQ0Z1pTQW1KaUIwZVhCbGIyWWdaU0E5UFQwZ0oyOWlhbVZqZENjZ0ppWWdKMlJsWm1GMWJIUW5JR2x1SUdVZ1B5QmxJRG9nZXlCa1pXWmhkV3gwT2lCbElIMDdYRzVjYmlBZ1kyOXVjM1FnVFdGdWFYQjFiR0YwYjNKZlgyUmxabUYxYkhRZ1BTQXZLaU5mWDFCVlVrVmZYeW92WDJsdWRHVnliM0JFWldaaGRXeDBUR1ZuWVdONUtFMWhibWx3ZFd4aGRHOXlLVHRjYmx4dUlDQXZLaXBjYmlBZ0lDb2dMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzFjYmlBZ0lDb2dRbTl2ZEhOMGNtRndJQ2gyTlM0eUxqTXBPaUIxZEdsc0wyTnZibVpwWnk1cWMxeHVJQ0FnS2lCTWFXTmxibk5sWkNCMWJtUmxjaUJOU1ZRZ0tHaDBkSEJ6T2k4dloybDBhSFZpTG1OdmJTOTBkMkp6TDJKdmIzUnpkSEpoY0M5aWJHOWlMMjFoYVc0dlRFbERSVTVUUlNsY2JpQWdJQ29nTFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMxY2JpQWdJQ292WEc0Z0lDOHFLbHh1SUNBZ0tpQkRiR0Z6Y3lCa1pXWnBibWwwYVc5dVhHNGdJQ0FxTDF4dVhHNGdJR05zWVhOeklFTnZibVpwWnlCN1hHNGdJQ0FnTHk4Z1IyVjBkR1Z5YzF4dUlDQWdJSE4wWVhScFl5Qm5aWFFnUkdWbVlYVnNkQ2dwSUh0Y2JpQWdJQ0FnSUhKbGRIVnliaUI3ZlR0Y2JpQWdJQ0I5WEc1Y2JpQWdJQ0J6ZEdGMGFXTWdaMlYwSUVSbFptRjFiSFJVZVhCbEtDa2dlMXh1SUNBZ0lDQWdjbVYwZFhKdUlIdDlPMXh1SUNBZ0lIMWNibHh1SUNBZ0lITjBZWFJwWXlCblpYUWdUa0ZOUlNncElIdGNiaUFnSUNBZ0lIUm9jbTkzSUc1bGR5QkZjbkp2Y2lnbldXOTFJR2hoZG1VZ2RHOGdhVzF3YkdWdFpXNTBJSFJvWlNCemRHRjBhV01nYldWMGFHOWtJRndpVGtGTlJWd2lMQ0JtYjNJZ1pXRmphQ0JqYjIxd2IyNWxiblFoSnlrN1hHNGdJQ0FnZlZ4dVhHNGdJQ0FnWDJkbGRFTnZibVpwWnloamIyNW1hV2NwSUh0Y2JpQWdJQ0FnSUdOdmJtWnBaeUE5SUhSb2FYTXVYMjFsY21kbFEyOXVabWxuVDJKcUtHTnZibVpwWnlrN1hHNGdJQ0FnSUNCamIyNW1hV2NnUFNCMGFHbHpMbDlqYjI1bWFXZEJablJsY2sxbGNtZGxLR052Ym1acFp5azdYRzVjYmlBZ0lDQWdJSFJvYVhNdVgzUjVjR1ZEYUdWamEwTnZibVpwWnloamIyNW1hV2NwTzF4dVhHNGdJQ0FnSUNCeVpYUjFjbTRnWTI5dVptbG5PMXh1SUNBZ0lIMWNibHh1SUNBZ0lGOWpiMjVtYVdkQlpuUmxjazFsY21kbEtHTnZibVpwWnlrZ2UxeHVJQ0FnSUNBZ2NtVjBkWEp1SUdOdmJtWnBaenRjYmlBZ0lDQjlYRzVjYmlBZ0lDQmZiV1Z5WjJWRGIyNW1hV2RQWW1vb1kyOXVabWxuTENCbGJHVnRaVzUwS1NCN1hHNGdJQ0FnSUNCamIyNXpkQ0JxYzI5dVEyOXVabWxuSUQwZ2FXNWtaWGd1YVhORmJHVnRaVzUwS0dWc1pXMWxiblFwSUQ4Z1RXRnVhWEIxYkdGMGIzSmZYMlJsWm1GMWJIUXVaR1ZtWVhWc2RDNW5aWFJFWVhSaFFYUjBjbWxpZFhSbEtHVnNaVzFsYm5Rc0lDZGpiMjVtYVdjbktTQTZJSHQ5T3lBdkx5QjBjbmtnZEc4Z2NHRnljMlZjYmx4dUlDQWdJQ0FnY21WMGRYSnVJSHNnTGk0dWRHaHBjeTVqYjI1emRISjFZM1J2Y2k1RVpXWmhkV3gwTEZ4dUlDQWdJQ0FnSUNBdUxpNG9kSGx3Wlc5bUlHcHpiMjVEYjI1bWFXY2dQVDA5SUNkdlltcGxZM1FuSUQ4Z2FuTnZia052Ym1acFp5QTZJSHQ5S1N4Y2JpQWdJQ0FnSUNBZ0xpNHVLR2x1WkdWNExtbHpSV3hsYldWdWRDaGxiR1Z0Wlc1MEtTQS9JRTFoYm1sd2RXeGhkRzl5WDE5a1pXWmhkV3gwTG1SbFptRjFiSFF1WjJWMFJHRjBZVUYwZEhKcFluVjBaWE1vWld4bGJXVnVkQ2tnT2lCN2ZTa3NYRzRnSUNBZ0lDQWdJQzR1TGloMGVYQmxiMllnWTI5dVptbG5JRDA5UFNBbmIySnFaV04wSnlBL0lHTnZibVpwWnlBNklIdDlLVnh1SUNBZ0lDQWdmVHRjYmlBZ0lDQjlYRzVjYmlBZ0lDQmZkSGx3WlVOb1pXTnJRMjl1Wm1sbktHTnZibVpwWnl3Z1kyOXVabWxuVkhsd1pYTWdQU0IwYUdsekxtTnZibk4wY25WamRHOXlMa1JsWm1GMWJIUlVlWEJsS1NCN1hHNGdJQ0FnSUNCbWIzSWdLR052Ym5OMElIQnliM0JsY25SNUlHOW1JRTlpYW1WamRDNXJaWGx6S0dOdmJtWnBaMVI1Y0dWektTa2dlMXh1SUNBZ0lDQWdJQ0JqYjI1emRDQmxlSEJsWTNSbFpGUjVjR1Z6SUQwZ1kyOXVabWxuVkhsd1pYTmJjSEp2Y0dWeWRIbGRPMXh1SUNBZ0lDQWdJQ0JqYjI1emRDQjJZV3gxWlNBOUlHTnZibVpwWjF0d2NtOXdaWEowZVYwN1hHNGdJQ0FnSUNBZ0lHTnZibk4wSUhaaGJIVmxWSGx3WlNBOUlHbHVaR1Y0TG1selJXeGxiV1Z1ZENoMllXeDFaU2tnUHlBblpXeGxiV1Z1ZENjZ09pQnBibVJsZUM1MGIxUjVjR1VvZG1Gc2RXVXBPMXh1WEc0Z0lDQWdJQ0FnSUdsbUlDZ2hibVYzSUZKbFowVjRjQ2hsZUhCbFkzUmxaRlI1Y0dWektTNTBaWE4wS0haaGJIVmxWSGx3WlNrcElIdGNiaUFnSUNBZ0lDQWdJQ0IwYUhKdmR5QnVaWGNnVkhsd1pVVnljbTl5S0dBa2UzUm9hWE11WTI5dWMzUnlkV04wYjNJdVRrRk5SUzUwYjFWd2NHVnlRMkZ6WlNncGZUb2dUM0IwYVc5dUlGd2lKSHR3Y205d1pYSjBlWDFjSWlCd2NtOTJhV1JsWkNCMGVYQmxJRndpSkh0MllXeDFaVlI1Y0dWOVhDSWdZblYwSUdWNGNHVmpkR1ZrSUhSNWNHVWdYQ0lrZTJWNGNHVmpkR1ZrVkhsd1pYTjlYQ0l1WUNrN1hHNGdJQ0FnSUNBZ0lIMWNiaUFnSUNBZ0lIMWNiaUFnSUNCOVhHNWNiaUFnZlZ4dVhHNGdJSEpsZEhWeWJpQkRiMjVtYVdjN1hHNWNibjBwS1R0Y2JpOHZJeUJ6YjNWeVkyVk5ZWEJ3YVc1blZWSk1QV052Ym1acFp5NXFjeTV0WVhCY2JpSXNJaThxSVZ4dUlDQXFJRUp2YjNSemRISmhjQ0JtYjJOMWMzUnlZWEF1YW5NZ2RqVXVNaTR6SUNob2RIUndjem92TDJkbGRHSnZiM1J6ZEhKaGNDNWpiMjB2S1Z4dUlDQXFJRU52Y0hseWFXZG9kQ0F5TURFeExUSXdNaklnVkdobElFSnZiM1J6ZEhKaGNDQkJkWFJvYjNKeklDaG9kSFJ3Y3pvdkwyZHBkR2gxWWk1amIyMHZkSGRpY3k5aWIyOTBjM1J5WVhBdlozSmhjR2h6TDJOdmJuUnlhV0oxZEc5eWN5bGNiaUFnS2lCTWFXTmxibk5sWkNCMWJtUmxjaUJOU1ZRZ0tHaDBkSEJ6T2k4dloybDBhSFZpTG1OdmJTOTBkMkp6TDJKdmIzUnpkSEpoY0M5aWJHOWlMMjFoYVc0dlRFbERSVTVUUlNsY2JpQWdLaTljYmlobWRXNWpkR2x2YmlBb1oyeHZZbUZzTENCbVlXTjBiM0o1S1NCN1hHNGdJSFI1Y0dWdlppQmxlSEJ2Y25SeklEMDlQU0FuYjJKcVpXTjBKeUFtSmlCMGVYQmxiMllnYlc5a2RXeGxJQ0U5UFNBbmRXNWtaV1pwYm1Wa0p5QS9JRzF2WkhWc1pTNWxlSEJ2Y25SeklEMGdabUZqZEc5eWVTaHlaWEYxYVhKbEtDY3VMaTlrYjIwdlpYWmxiblF0YUdGdVpHeGxjaWNwTENCeVpYRjFhWEpsS0NjdUxpOWtiMjB2YzJWc1pXTjBiM0l0Wlc1bmFXNWxKeWtzSUhKbGNYVnBjbVVvSnk0dlkyOXVabWxuSnlrcElEcGNiaUFnZEhsd1pXOW1JR1JsWm1sdVpTQTlQVDBnSjJaMWJtTjBhVzl1SnlBbUppQmtaV1pwYm1VdVlXMWtJRDhnWkdWbWFXNWxLRnNuTGk0dlpHOXRMMlYyWlc1MExXaGhibVJzWlhJbkxDQW5MaTR2Wkc5dEwzTmxiR1ZqZEc5eUxXVnVaMmx1WlNjc0lDY3VMMk52Ym1acFp5ZGRMQ0JtWVdOMGIzSjVLU0E2WEc0Z0lDaG5iRzlpWVd3Z1BTQjBlWEJsYjJZZ1oyeHZZbUZzVkdocGN5QWhQVDBnSjNWdVpHVm1hVzVsWkNjZ1B5Qm5iRzlpWVd4VWFHbHpJRG9nWjJ4dlltRnNJSHg4SUhObGJHWXNJR2RzYjJKaGJDNUdiMk4xYzNSeVlYQWdQU0JtWVdOMGIzSjVLR2RzYjJKaGJDNUZkbVZ1ZEVoaGJtUnNaWElzSUdkc2IySmhiQzVUWld4bFkzUnZja1Z1WjJsdVpTd2daMnh2WW1Gc0xrTnZibVpwWnlrcE8xeHVmU2tvZEdocGN5d2dLR1oxYm1OMGFXOXVJQ2hGZG1WdWRFaGhibVJzWlhJc0lGTmxiR1ZqZEc5eVJXNW5hVzVsTENCRGIyNW1hV2NwSUhzZ0ozVnpaU0J6ZEhKcFkzUW5PMXh1WEc0Z0lHTnZibk4wSUY5cGJuUmxjbTl3UkdWbVlYVnNkRXhsWjJGamVTQTlJR1VnUFQ0Z1pTQW1KaUIwZVhCbGIyWWdaU0E5UFQwZ0oyOWlhbVZqZENjZ0ppWWdKMlJsWm1GMWJIUW5JR2x1SUdVZ1B5QmxJRG9nZXlCa1pXWmhkV3gwT2lCbElIMDdYRzVjYmlBZ1kyOXVjM1FnUlhabGJuUklZVzVrYkdWeVgxOWtaV1poZFd4MElEMGdMeW9qWDE5UVZWSkZYMThxTDE5cGJuUmxjbTl3UkdWbVlYVnNkRXhsWjJGamVTaEZkbVZ1ZEVoaGJtUnNaWElwTzF4dUlDQmpiMjV6ZENCVFpXeGxZM1J2Y2tWdVoybHVaVjlmWkdWbVlYVnNkQ0E5SUM4cUkxOWZVRlZTUlY5ZktpOWZhVzUwWlhKdmNFUmxabUYxYkhSTVpXZGhZM2tvVTJWc1pXTjBiM0pGYm1kcGJtVXBPMXh1SUNCamIyNXpkQ0JEYjI1bWFXZGZYMlJsWm1GMWJIUWdQU0F2S2lOZlgxQlZVa1ZmWHlvdlgybHVkR1Z5YjNCRVpXWmhkV3gwVEdWbllXTjVLRU52Ym1acFp5azdYRzVjYmlBZ0x5b3FYRzRnSUNBcUlDMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRYRzRnSUNBcUlFSnZiM1J6ZEhKaGNDQW9kalV1TWk0ektUb2dkWFJwYkM5bWIyTjFjM1J5WVhBdWFuTmNiaUFnSUNvZ1RHbGpaVzV6WldRZ2RXNWtaWElnVFVsVUlDaG9kSFJ3Y3pvdkwyZHBkR2gxWWk1amIyMHZkSGRpY3k5aWIyOTBjM1J5WVhBdllteHZZaTl0WVdsdUwweEpRMFZPVTBVcFhHNGdJQ0FxSUMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdFhHNGdJQ0FxTDF4dUlDQXZLaXBjYmlBZ0lDb2dRMjl1YzNSaGJuUnpYRzRnSUNBcUwxeHVYRzRnSUdOdmJuTjBJRTVCVFVVZ1BTQW5abTlqZFhOMGNtRndKenRjYmlBZ1kyOXVjM1FnUkVGVVFWOUxSVmtnUFNBblluTXVabTlqZFhOMGNtRndKenRjYmlBZ1kyOXVjM1FnUlZaRlRsUmZTMFZaSUQwZ1lDNGtlMFJCVkVGZlMwVlpmV0E3WEc0Z0lHTnZibk4wSUVWV1JVNVVYMFpQUTFWVFNVNGdQU0JnWm05amRYTnBiaVI3UlZaRlRsUmZTMFZaZldBN1hHNGdJR052Ym5OMElFVldSVTVVWDB0RldVUlBWMDVmVkVGQ0lEMGdZR3RsZVdSdmQyNHVkR0ZpSkh0RlZrVk9WRjlMUlZsOVlEdGNiaUFnWTI5dWMzUWdWRUZDWDB0RldTQTlJQ2RVWVdJbk8xeHVJQ0JqYjI1emRDQlVRVUpmVGtGV1gwWlBVbGRCVWtRZ1BTQW5abTl5ZDJGeVpDYzdYRzRnSUdOdmJuTjBJRlJCUWw5T1FWWmZRa0ZEUzFkQlVrUWdQU0FuWW1GamEzZGhjbVFuTzF4dUlDQmpiMjV6ZENCRVpXWmhkV3gwSUQwZ2UxeHVJQ0FnSUdGMWRHOW1iMk4xY3pvZ2RISjFaU3hjYmlBZ0lDQjBjbUZ3Uld4bGJXVnVkRG9nYm5Wc2JDQXZMeUJVYUdVZ1pXeGxiV1Z1ZENCMGJ5QjBjbUZ3SUdadlkzVnpJR2x1YzJsa1pTQnZabHh1WEc0Z0lIMDdYRzRnSUdOdmJuTjBJRVJsWm1GMWJIUlVlWEJsSUQwZ2UxeHVJQ0FnSUdGMWRHOW1iMk4xY3pvZ0oySnZiMnhsWVc0bkxGeHVJQ0FnSUhSeVlYQkZiR1Z0Wlc1ME9pQW5aV3hsYldWdWRDZGNiaUFnZlR0Y2JpQWdMeW9xWEc0Z0lDQXFJRU5zWVhOeklHUmxabWx1YVhScGIyNWNiaUFnSUNvdlhHNWNiaUFnWTJ4aGMzTWdSbTlqZFhOVWNtRndJR1Y0ZEdWdVpITWdRMjl1Wm1sblgxOWtaV1poZFd4MExtUmxabUYxYkhRZ2UxeHVJQ0FnSUdOdmJuTjBjblZqZEc5eUtHTnZibVpwWnlrZ2UxeHVJQ0FnSUNBZ2MzVndaWElvS1R0Y2JpQWdJQ0FnSUhSb2FYTXVYMk52Ym1acFp5QTlJSFJvYVhNdVgyZGxkRU52Ym1acFp5aGpiMjVtYVdjcE8xeHVJQ0FnSUNBZ2RHaHBjeTVmYVhOQlkzUnBkbVVnUFNCbVlXeHpaVHRjYmlBZ0lDQWdJSFJvYVhNdVgyeGhjM1JVWVdKT1lYWkVhWEpsWTNScGIyNGdQU0J1ZFd4c08xeHVJQ0FnSUgwZ0x5OGdSMlYwZEdWeWMxeHVYRzVjYmlBZ0lDQnpkR0YwYVdNZ1oyVjBJRVJsWm1GMWJIUW9LU0I3WEc0Z0lDQWdJQ0J5WlhSMWNtNGdSR1ZtWVhWc2REdGNiaUFnSUNCOVhHNWNiaUFnSUNCemRHRjBhV01nWjJWMElFUmxabUYxYkhSVWVYQmxLQ2tnZTF4dUlDQWdJQ0FnY21WMGRYSnVJRVJsWm1GMWJIUlVlWEJsTzF4dUlDQWdJSDFjYmx4dUlDQWdJSE4wWVhScFl5Qm5aWFFnVGtGTlJTZ3BJSHRjYmlBZ0lDQWdJSEpsZEhWeWJpQk9RVTFGTzF4dUlDQWdJSDBnTHk4Z1VIVmliR2xqWEc1Y2JseHVJQ0FnSUdGamRHbDJZWFJsS0NrZ2UxeHVJQ0FnSUNBZ2FXWWdLSFJvYVhNdVgybHpRV04wYVhabEtTQjdYRzRnSUNBZ0lDQWdJSEpsZEhWeWJqdGNiaUFnSUNBZ0lIMWNibHh1SUNBZ0lDQWdhV1lnS0hSb2FYTXVYMk52Ym1acFp5NWhkWFJ2Wm05amRYTXBJSHRjYmlBZ0lDQWdJQ0FnZEdocGN5NWZZMjl1Wm1sbkxuUnlZWEJGYkdWdFpXNTBMbVp2WTNWektDazdYRzRnSUNBZ0lDQjlYRzVjYmlBZ0lDQWdJRVYyWlc1MFNHRnVaR3hsY2w5ZlpHVm1ZWFZzZEM1a1pXWmhkV3gwTG05bVppaGtiMk4xYldWdWRDd2dSVlpGVGxSZlMwVlpLVHNnTHk4Z1ozVmhjbVFnWVdkaGFXNXpkQ0JwYm1acGJtbDBaU0JtYjJOMWN5QnNiMjl3WEc1Y2JpQWdJQ0FnSUVWMlpXNTBTR0Z1Wkd4bGNsOWZaR1ZtWVhWc2RDNWtaV1poZFd4MExtOXVLR1J2WTNWdFpXNTBMQ0JGVmtWT1ZGOUdUME5WVTBsT0xDQmxkbVZ1ZENBOVBpQjBhR2x6TGw5b1lXNWtiR1ZHYjJOMWMybHVLR1YyWlc1MEtTazdYRzRnSUNBZ0lDQkZkbVZ1ZEVoaGJtUnNaWEpmWDJSbFptRjFiSFF1WkdWbVlYVnNkQzV2Ymloa2IyTjFiV1Z1ZEN3Z1JWWkZUbFJmUzBWWlJFOVhUbDlVUVVJc0lHVjJaVzUwSUQwK0lIUm9hWE11WDJoaGJtUnNaVXRsZVdSdmQyNG9aWFpsYm5RcEtUdGNiaUFnSUNBZ0lIUm9hWE11WDJselFXTjBhWFpsSUQwZ2RISjFaVHRjYmlBZ0lDQjlYRzVjYmlBZ0lDQmtaV0ZqZEdsMllYUmxLQ2tnZTF4dUlDQWdJQ0FnYVdZZ0tDRjBhR2x6TGw5cGMwRmpkR2wyWlNrZ2UxeHVJQ0FnSUNBZ0lDQnlaWFIxY200N1hHNGdJQ0FnSUNCOVhHNWNiaUFnSUNBZ0lIUm9hWE11WDJselFXTjBhWFpsSUQwZ1ptRnNjMlU3WEc0Z0lDQWdJQ0JGZG1WdWRFaGhibVJzWlhKZlgyUmxabUYxYkhRdVpHVm1ZWFZzZEM1dlptWW9aRzlqZFcxbGJuUXNJRVZXUlU1VVgwdEZXU2s3WEc0Z0lDQWdmU0F2THlCUWNtbDJZWFJsWEc1Y2JseHVJQ0FnSUY5b1lXNWtiR1ZHYjJOMWMybHVLR1YyWlc1MEtTQjdYRzRnSUNBZ0lDQmpiMjV6ZENCN1hHNGdJQ0FnSUNBZ0lIUnlZWEJGYkdWdFpXNTBYRzRnSUNBZ0lDQjlJRDBnZEdocGN5NWZZMjl1Wm1sbk8xeHVYRzRnSUNBZ0lDQnBaaUFvWlhabGJuUXVkR0Z5WjJWMElEMDlQU0JrYjJOMWJXVnVkQ0I4ZkNCbGRtVnVkQzUwWVhKblpYUWdQVDA5SUhSeVlYQkZiR1Z0Wlc1MElIeDhJSFJ5WVhCRmJHVnRaVzUwTG1OdmJuUmhhVzV6S0dWMlpXNTBMblJoY21kbGRDa3BJSHRjYmlBZ0lDQWdJQ0FnY21WMGRYSnVPMXh1SUNBZ0lDQWdmVnh1WEc0Z0lDQWdJQ0JqYjI1emRDQmxiR1Z0Wlc1MGN5QTlJRk5sYkdWamRHOXlSVzVuYVc1bFgxOWtaV1poZFd4MExtUmxabUYxYkhRdVptOWpkWE5oWW14bFEyaHBiR1J5Wlc0b2RISmhjRVZzWlcxbGJuUXBPMXh1WEc0Z0lDQWdJQ0JwWmlBb1pXeGxiV1Z1ZEhNdWJHVnVaM1JvSUQwOVBTQXdLU0I3WEc0Z0lDQWdJQ0FnSUhSeVlYQkZiR1Z0Wlc1MExtWnZZM1Z6S0NrN1hHNGdJQ0FnSUNCOUlHVnNjMlVnYVdZZ0tIUm9hWE11WDJ4aGMzUlVZV0pPWVhaRWFYSmxZM1JwYjI0Z1BUMDlJRlJCUWw5T1FWWmZRa0ZEUzFkQlVrUXBJSHRjYmlBZ0lDQWdJQ0FnWld4bGJXVnVkSE5iWld4bGJXVnVkSE11YkdWdVozUm9JQzBnTVYwdVptOWpkWE1vS1R0Y2JpQWdJQ0FnSUgwZ1pXeHpaU0I3WEc0Z0lDQWdJQ0FnSUdWc1pXMWxiblJ6V3pCZExtWnZZM1Z6S0NrN1hHNGdJQ0FnSUNCOVhHNGdJQ0FnZlZ4dVhHNGdJQ0FnWDJoaGJtUnNaVXRsZVdSdmQyNG9aWFpsYm5RcElIdGNiaUFnSUNBZ0lHbG1JQ2hsZG1WdWRDNXJaWGtnSVQwOUlGUkJRbDlMUlZrcElIdGNiaUFnSUNBZ0lDQWdjbVYwZFhKdU8xeHVJQ0FnSUNBZ2ZWeHVYRzRnSUNBZ0lDQjBhR2x6TGw5c1lYTjBWR0ZpVG1GMlJHbHlaV04wYVc5dUlEMGdaWFpsYm5RdWMyaHBablJMWlhrZ1B5QlVRVUpmVGtGV1gwSkJRMHRYUVZKRUlEb2dWRUZDWDA1QlZsOUdUMUpYUVZKRU8xeHVJQ0FnSUgxY2JseHVJQ0I5WEc1Y2JpQWdjbVYwZFhKdUlFWnZZM1Z6VkhKaGNEdGNibHh1ZlNrcE8xeHVMeThqSUhOdmRYSmpaVTFoY0hCcGJtZFZVa3c5Wm05amRYTjBjbUZ3TG1wekxtMWhjRnh1SWl3aUx5b2hYRzRnSUNvZ1FtOXZkSE4wY21Gd0lHbHVaR1Y0TG1weklIWTFMakl1TXlBb2FIUjBjSE02THk5blpYUmliMjkwYzNSeVlYQXVZMjl0THlsY2JpQWdLaUJEYjNCNWNtbG5hSFFnTWpBeE1TMHlNREl5SUZSb1pTQkNiMjkwYzNSeVlYQWdRWFYwYUc5eWN5QW9hSFIwY0hNNkx5OW5hWFJvZFdJdVkyOXRMM1IzWW5NdlltOXZkSE4wY21Gd0wyZHlZWEJvY3k5amIyNTBjbWxpZFhSdmNuTXBYRzRnSUNvZ1RHbGpaVzV6WldRZ2RXNWtaWElnVFVsVUlDaG9kSFJ3Y3pvdkwyZHBkR2gxWWk1amIyMHZkSGRpY3k5aWIyOTBjM1J5WVhBdllteHZZaTl0WVdsdUwweEpRMFZPVTBVcFhHNGdJQ292WEc0b1puVnVZM1JwYjI0Z0tHZHNiMkpoYkN3Z1ptRmpkRzl5ZVNrZ2UxeHVJQ0IwZVhCbGIyWWdaWGh3YjNKMGN5QTlQVDBnSjI5aWFtVmpkQ2NnSmlZZ2RIbHdaVzltSUcxdlpIVnNaU0FoUFQwZ0ozVnVaR1ZtYVc1bFpDY2dQeUJtWVdOMGIzSjVLR1Y0Y0c5eWRITXBJRHBjYmlBZ2RIbHdaVzltSUdSbFptbHVaU0E5UFQwZ0oyWjFibU4wYVc5dUp5QW1KaUJrWldacGJtVXVZVzFrSUQ4Z1pHVm1hVzVsS0ZzblpYaHdiM0owY3lkZExDQm1ZV04wYjNKNUtTQTZYRzRnSUNobmJHOWlZV3dnUFNCMGVYQmxiMllnWjJ4dlltRnNWR2hwY3lBaFBUMGdKM1Z1WkdWbWFXNWxaQ2NnUHlCbmJHOWlZV3hVYUdseklEb2daMnh2WW1Gc0lIeDhJSE5sYkdZc0lHWmhZM1J2Y25rb1oyeHZZbUZzTGtsdVpHVjRJRDBnZTMwcEtUdGNibjBwS0hSb2FYTXNJQ2htZFc1amRHbHZiaUFvWlhod2IzSjBjeWtnZXlBbmRYTmxJSE4wY21samRDYzdYRzVjYmlBZ0x5b3FYRzRnSUNBcUlDMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRYRzRnSUNBcUlFSnZiM1J6ZEhKaGNDQW9kalV1TWk0ektUb2dkWFJwYkM5cGJtUmxlQzVxYzF4dUlDQWdLaUJNYVdObGJuTmxaQ0IxYm1SbGNpQk5TVlFnS0doMGRIQnpPaTh2WjJsMGFIVmlMbU52YlM5MGQySnpMMkp2YjNSemRISmhjQzlpYkc5aUwyMWhhVzR2VEVsRFJVNVRSU2xjYmlBZ0lDb2dMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzFjYmlBZ0lDb3ZYRzRnSUdOdmJuTjBJRTFCV0Y5VlNVUWdQU0F4TURBd01EQXdPMXh1SUNCamIyNXpkQ0JOU1V4TVNWTkZRMDlPUkZOZlRWVk1WRWxRVEVsRlVpQTlJREV3TURBN1hHNGdJR052Ym5OMElGUlNRVTVUU1ZSSlQwNWZSVTVFSUQwZ0ozUnlZVzV6YVhScGIyNWxibVFuT3lBdkx5QlRhRzkxZEMxdmRYUWdRVzVuZFhNZ1EzSnZiR3dnS0doMGRIQnpPaTh2WjI5dkxtZHNMM0I0ZDFGSGNDbGNibHh1SUNCamIyNXpkQ0IwYjFSNWNHVWdQU0J2WW1wbFkzUWdQVDRnZTF4dUlDQWdJR2xtSUNodlltcGxZM1FnUFQwOUlHNTFiR3dnZkh3Z2IySnFaV04wSUQwOVBTQjFibVJsWm1sdVpXUXBJSHRjYmlBZ0lDQWdJSEpsZEhWeWJpQmdKSHR2WW1wbFkzUjlZRHRjYmlBZ0lDQjlYRzVjYmlBZ0lDQnlaWFIxY200Z1QySnFaV04wTG5CeWIzUnZkSGx3WlM1MGIxTjBjbWx1Wnk1allXeHNLRzlpYW1WamRDa3ViV0YwWTJnb0wxeGNjeWhiWVMxNlhTc3BMMmtwV3pGZExuUnZURzkzWlhKRFlYTmxLQ2s3WEc0Z0lIMDdYRzRnSUM4cUtseHVJQ0FnS2lCUWRXSnNhV01nVlhScGJDQkJVRWxjYmlBZ0lDb3ZYRzVjYmx4dUlDQmpiMjV6ZENCblpYUlZTVVFnUFNCd2NtVm1hWGdnUFQ0Z2UxeHVJQ0FnSUdSdklIdGNiaUFnSUNBZ0lIQnlaV1pwZUNBclBTQk5ZWFJvTG1ac2IyOXlLRTFoZEdndWNtRnVaRzl0S0NrZ0tpQk5RVmhmVlVsRUtUdGNiaUFnSUNCOUlIZG9hV3hsSUNoa2IyTjFiV1Z1ZEM1blpYUkZiR1Z0Wlc1MFFubEpaQ2h3Y21WbWFYZ3BLVHRjYmx4dUlDQWdJSEpsZEhWeWJpQndjbVZtYVhnN1hHNGdJSDA3WEc1Y2JpQWdZMjl1YzNRZ1oyVjBVMlZzWldOMGIzSWdQU0JsYkdWdFpXNTBJRDArSUh0Y2JpQWdJQ0JzWlhRZ2MyVnNaV04wYjNJZ1BTQmxiR1Z0Wlc1MExtZGxkRUYwZEhKcFluVjBaU2duWkdGMFlTMWljeTEwWVhKblpYUW5LVHRjYmx4dUlDQWdJR2xtSUNnaGMyVnNaV04wYjNJZ2ZId2djMlZzWldOMGIzSWdQVDA5SUNjakp5a2dlMXh1SUNBZ0lDQWdiR1YwSUdoeVpXWkJkSFJ5YVdKMWRHVWdQU0JsYkdWdFpXNTBMbWRsZEVGMGRISnBZblYwWlNnbmFISmxaaWNwT3lBdkx5QlVhR1VnYjI1c2VTQjJZV3hwWkNCamIyNTBaVzUwSUhSb1lYUWdZMjkxYkdRZ1pHOTFZbXhsSUdGeklHRWdjMlZzWldOMGIzSWdZWEpsSUVsRWN5QnZjaUJqYkdGemMyVnpMRnh1SUNBZ0lDQWdMeThnYzI4Z1pYWmxjbmwwYUdsdVp5QnpkR0Z5ZEdsdVp5QjNhWFJvSUdBallDQnZjaUJnTG1BdUlFbG1JR0VnWENKeVpXRnNYQ0lnVlZKTUlHbHpJSFZ6WldRZ1lYTWdkR2hsSUhObGJHVmpkRzl5TEZ4dUlDQWdJQ0FnTHk4Z1lHUnZZM1Z0Wlc1MExuRjFaWEo1VTJWc1pXTjBiM0pnSUhkcGJHd2djbWxuYUhSbWRXeHNlU0JqYjIxd2JHRnBiaUJwZENCcGN5QnBiblpoYkdsa0xseHVJQ0FnSUNBZ0x5OGdVMlZsSUdoMGRIQnpPaTh2WjJsMGFIVmlMbU52YlM5MGQySnpMMkp2YjNSemRISmhjQzlwYzNOMVpYTXZNekl5TnpOY2JseHVJQ0FnSUNBZ2FXWWdLQ0ZvY21WbVFYUjBjbWxpZFhSbElIeDhJQ0ZvY21WbVFYUjBjbWxpZFhSbExtbHVZMngxWkdWektDY2pKeWtnSmlZZ0lXaHlaV1pCZEhSeWFXSjFkR1V1YzNSaGNuUnpWMmwwYUNnbkxpY3BLU0I3WEc0Z0lDQWdJQ0FnSUhKbGRIVnliaUJ1ZFd4c08xeHVJQ0FnSUNBZ2ZTQXZMeUJLZFhOMElHbHVJR05oYzJVZ2MyOXRaU0JEVFZNZ2NIVjBjeUJ2ZFhRZ1lTQm1kV3hzSUZWU1RDQjNhWFJvSUhSb1pTQmhibU5vYjNJZ1lYQndaVzVrWldSY2JseHVYRzRnSUNBZ0lDQnBaaUFvYUhKbFprRjBkSEpwWW5WMFpTNXBibU5zZFdSbGN5Z25JeWNwSUNZbUlDRm9jbVZtUVhSMGNtbGlkWFJsTG5OMFlYSjBjMWRwZEdnb0p5TW5LU2tnZTF4dUlDQWdJQ0FnSUNCb2NtVm1RWFIwY21saWRYUmxJRDBnWUNNa2UyaHlaV1pCZEhSeWFXSjFkR1V1YzNCc2FYUW9KeU1uS1ZzeFhYMWdPMXh1SUNBZ0lDQWdmVnh1WEc0Z0lDQWdJQ0J6Wld4bFkzUnZjaUE5SUdoeVpXWkJkSFJ5YVdKMWRHVWdKaVlnYUhKbFprRjBkSEpwWW5WMFpTQWhQVDBnSnlNbklEOGdhSEpsWmtGMGRISnBZblYwWlM1MGNtbHRLQ2tnT2lCdWRXeHNPMXh1SUNBZ0lIMWNibHh1SUNBZ0lISmxkSFZ5YmlCelpXeGxZM1J2Y2p0Y2JpQWdmVHRjYmx4dUlDQmpiMjV6ZENCblpYUlRaV3hsWTNSdmNrWnliMjFGYkdWdFpXNTBJRDBnWld4bGJXVnVkQ0E5UGlCN1hHNGdJQ0FnWTI5dWMzUWdjMlZzWldOMGIzSWdQU0JuWlhSVFpXeGxZM1J2Y2lobGJHVnRaVzUwS1R0Y2JseHVJQ0FnSUdsbUlDaHpaV3hsWTNSdmNpa2dlMXh1SUNBZ0lDQWdjbVYwZFhKdUlHUnZZM1Z0Wlc1MExuRjFaWEo1VTJWc1pXTjBiM0lvYzJWc1pXTjBiM0lwSUQ4Z2MyVnNaV04wYjNJZ09pQnVkV3hzTzF4dUlDQWdJSDFjYmx4dUlDQWdJSEpsZEhWeWJpQnVkV3hzTzF4dUlDQjlPMXh1WEc0Z0lHTnZibk4wSUdkbGRFVnNaVzFsYm5SR2NtOXRVMlZzWldOMGIzSWdQU0JsYkdWdFpXNTBJRDArSUh0Y2JpQWdJQ0JqYjI1emRDQnpaV3hsWTNSdmNpQTlJR2RsZEZObGJHVmpkRzl5S0dWc1pXMWxiblFwTzF4dUlDQWdJSEpsZEhWeWJpQnpaV3hsWTNSdmNpQS9JR1J2WTNWdFpXNTBMbkYxWlhKNVUyVnNaV04wYjNJb2MyVnNaV04wYjNJcElEb2diblZzYkR0Y2JpQWdmVHRjYmx4dUlDQmpiMjV6ZENCblpYUlVjbUZ1YzJsMGFXOXVSSFZ5WVhScGIyNUdjbTl0Uld4bGJXVnVkQ0E5SUdWc1pXMWxiblFnUFQ0Z2UxeHVJQ0FnSUdsbUlDZ2haV3hsYldWdWRDa2dlMXh1SUNBZ0lDQWdjbVYwZFhKdUlEQTdYRzRnSUNBZ2ZTQXZMeUJIWlhRZ2RISmhibk5wZEdsdmJpMWtkWEpoZEdsdmJpQnZaaUIwYUdVZ1pXeGxiV1Z1ZEZ4dVhHNWNiaUFnSUNCc1pYUWdlMXh1SUNBZ0lDQWdkSEpoYm5OcGRHbHZia1IxY21GMGFXOXVMRnh1SUNBZ0lDQWdkSEpoYm5OcGRHbHZia1JsYkdGNVhHNGdJQ0FnZlNBOUlIZHBibVJ2ZHk1blpYUkRiMjF3ZFhSbFpGTjBlV3hsS0dWc1pXMWxiblFwTzF4dUlDQWdJR052Ym5OMElHWnNiMkYwVkhKaGJuTnBkR2x2YmtSMWNtRjBhVzl1SUQwZ1RuVnRZbVZ5TG5CaGNuTmxSbXh2WVhRb2RISmhibk5wZEdsdmJrUjFjbUYwYVc5dUtUdGNiaUFnSUNCamIyNXpkQ0JtYkc5aGRGUnlZVzV6YVhScGIyNUVaV3hoZVNBOUlFNTFiV0psY2k1d1lYSnpaVVpzYjJGMEtIUnlZVzV6YVhScGIyNUVaV3hoZVNrN0lDOHZJRkpsZEhWeWJpQXdJR2xtSUdWc1pXMWxiblFnYjNJZ2RISmhibk5wZEdsdmJpQmtkWEpoZEdsdmJpQnBjeUJ1YjNRZ1ptOTFibVJjYmx4dUlDQWdJR2xtSUNnaFpteHZZWFJVY21GdWMybDBhVzl1UkhWeVlYUnBiMjRnSmlZZ0lXWnNiMkYwVkhKaGJuTnBkR2x2YmtSbGJHRjVLU0I3WEc0Z0lDQWdJQ0J5WlhSMWNtNGdNRHRjYmlBZ0lDQjlJQzh2SUVsbUlHMTFiSFJwY0d4bElHUjFjbUYwYVc5dWN5QmhjbVVnWkdWbWFXNWxaQ3dnZEdGclpTQjBhR1VnWm1seWMzUmNibHh1WEc0Z0lDQWdkSEpoYm5OcGRHbHZia1IxY21GMGFXOXVJRDBnZEhKaGJuTnBkR2x2YmtSMWNtRjBhVzl1TG5Od2JHbDBLQ2NzSnlsYk1GMDdYRzRnSUNBZ2RISmhibk5wZEdsdmJrUmxiR0Y1SUQwZ2RISmhibk5wZEdsdmJrUmxiR0Y1TG5Od2JHbDBLQ2NzSnlsYk1GMDdYRzRnSUNBZ2NtVjBkWEp1SUNoT2RXMWlaWEl1Y0dGeWMyVkdiRzloZENoMGNtRnVjMmwwYVc5dVJIVnlZWFJwYjI0cElDc2dUblZ0WW1WeUxuQmhjbk5sUm14dllYUW9kSEpoYm5OcGRHbHZia1JsYkdGNUtTa2dLaUJOU1V4TVNWTkZRMDlPUkZOZlRWVk1WRWxRVEVsRlVqdGNiaUFnZlR0Y2JseHVJQ0JqYjI1emRDQjBjbWxuWjJWeVZISmhibk5wZEdsdmJrVnVaQ0E5SUdWc1pXMWxiblFnUFQ0Z2UxeHVJQ0FnSUdWc1pXMWxiblF1WkdsemNHRjBZMmhGZG1WdWRDaHVaWGNnUlhabGJuUW9WRkpCVGxOSlZFbFBUbDlGVGtRcEtUdGNiaUFnZlR0Y2JseHVJQ0JqYjI1emRDQnBjMFZzWlcxbGJuUWdQU0J2WW1wbFkzUWdQVDRnZTF4dUlDQWdJR2xtSUNnaGIySnFaV04wSUh4OElIUjVjR1Z2WmlCdlltcGxZM1FnSVQwOUlDZHZZbXBsWTNRbktTQjdYRzRnSUNBZ0lDQnlaWFIxY200Z1ptRnNjMlU3WEc0Z0lDQWdmVnh1WEc0Z0lDQWdhV1lnS0hSNWNHVnZaaUJ2WW1wbFkzUXVhbkYxWlhKNUlDRTlQU0FuZFc1a1pXWnBibVZrSnlrZ2UxeHVJQ0FnSUNBZ2IySnFaV04wSUQwZ2IySnFaV04wV3pCZE8xeHVJQ0FnSUgxY2JseHVJQ0FnSUhKbGRIVnliaUIwZVhCbGIyWWdiMkpxWldOMExtNXZaR1ZVZVhCbElDRTlQU0FuZFc1a1pXWnBibVZrSnp0Y2JpQWdmVHRjYmx4dUlDQmpiMjV6ZENCblpYUkZiR1Z0Wlc1MElEMGdiMkpxWldOMElEMCtJSHRjYmlBZ0lDQXZMeUJwZENkeklHRWdhbEYxWlhKNUlHOWlhbVZqZENCdmNpQmhJRzV2WkdVZ1pXeGxiV1Z1ZEZ4dUlDQWdJR2xtSUNocGMwVnNaVzFsYm5Rb2IySnFaV04wS1NrZ2UxeHVJQ0FnSUNBZ2NtVjBkWEp1SUc5aWFtVmpkQzVxY1hWbGNua2dQeUJ2WW1wbFkzUmJNRjBnT2lCdlltcGxZM1E3WEc0Z0lDQWdmVnh1WEc0Z0lDQWdhV1lnS0hSNWNHVnZaaUJ2WW1wbFkzUWdQVDA5SUNkemRISnBibWNuSUNZbUlHOWlhbVZqZEM1c1pXNW5kR2dnUGlBd0tTQjdYRzRnSUNBZ0lDQnlaWFIxY200Z1pHOWpkVzFsYm5RdWNYVmxjbmxUWld4bFkzUnZjaWh2WW1wbFkzUXBPMXh1SUNBZ0lIMWNibHh1SUNBZ0lISmxkSFZ5YmlCdWRXeHNPMXh1SUNCOU8xeHVYRzRnSUdOdmJuTjBJR2x6Vm1semFXSnNaU0E5SUdWc1pXMWxiblFnUFQ0Z2UxeHVJQ0FnSUdsbUlDZ2hhWE5GYkdWdFpXNTBLR1ZzWlcxbGJuUXBJSHg4SUdWc1pXMWxiblF1WjJWMFEyeHBaVzUwVW1WamRITW9LUzVzWlc1bmRHZ2dQVDA5SURBcElIdGNiaUFnSUNBZ0lISmxkSFZ5YmlCbVlXeHpaVHRjYmlBZ0lDQjlYRzVjYmlBZ0lDQmpiMjV6ZENCbGJHVnRaVzUwU1hOV2FYTnBZbXhsSUQwZ1oyVjBRMjl0Y0hWMFpXUlRkSGxzWlNobGJHVnRaVzUwS1M1blpYUlFjbTl3WlhKMGVWWmhiSFZsS0NkMmFYTnBZbWxzYVhSNUp5a2dQVDA5SUNkMmFYTnBZbXhsSnpzZ0x5OGdTR0Z1Wkd4bElHQmtaWFJoYVd4ellDQmxiR1Z0Wlc1MElHRnpJR2wwY3lCamIyNTBaVzUwSUcxaGVTQm1ZV3h6YVdVZ1lYQndaV0Z5SUhacGMybGliR1VnZDJobGJpQnBkQ0JwY3lCamJHOXpaV1JjYmx4dUlDQWdJR052Ym5OMElHTnNiM05sWkVSbGRHRnBiSE1nUFNCbGJHVnRaVzUwTG1Oc2IzTmxjM1FvSjJSbGRHRnBiSE02Ym05MEtGdHZjR1Z1WFNrbktUdGNibHh1SUNBZ0lHbG1JQ2doWTJ4dmMyVmtSR1YwWVdsc2N5a2dlMXh1SUNBZ0lDQWdjbVYwZFhKdUlHVnNaVzFsYm5SSmMxWnBjMmxpYkdVN1hHNGdJQ0FnZlZ4dVhHNGdJQ0FnYVdZZ0tHTnNiM05sWkVSbGRHRnBiSE1nSVQwOUlHVnNaVzFsYm5RcElIdGNiaUFnSUNBZ0lHTnZibk4wSUhOMWJXMWhjbmtnUFNCbGJHVnRaVzUwTG1Oc2IzTmxjM1FvSjNOMWJXMWhjbmtuS1R0Y2JseHVJQ0FnSUNBZ2FXWWdLSE4xYlcxaGNua2dKaVlnYzNWdGJXRnllUzV3WVhKbGJuUk9iMlJsSUNFOVBTQmpiRzl6WldSRVpYUmhhV3h6S1NCN1hHNGdJQ0FnSUNBZ0lISmxkSFZ5YmlCbVlXeHpaVHRjYmlBZ0lDQWdJSDFjYmx4dUlDQWdJQ0FnYVdZZ0tITjFiVzFoY25rZ1BUMDlJRzUxYkd3cElIdGNiaUFnSUNBZ0lDQWdjbVYwZFhKdUlHWmhiSE5sTzF4dUlDQWdJQ0FnZlZ4dUlDQWdJSDFjYmx4dUlDQWdJSEpsZEhWeWJpQmxiR1Z0Wlc1MFNYTldhWE5wWW14bE8xeHVJQ0I5TzF4dVhHNGdJR052Ym5OMElHbHpSR2x6WVdKc1pXUWdQU0JsYkdWdFpXNTBJRDArSUh0Y2JpQWdJQ0JwWmlBb0lXVnNaVzFsYm5RZ2ZId2daV3hsYldWdWRDNXViMlJsVkhsd1pTQWhQVDBnVG05a1pTNUZURVZOUlU1VVgwNVBSRVVwSUh0Y2JpQWdJQ0FnSUhKbGRIVnliaUIwY25WbE8xeHVJQ0FnSUgxY2JseHVJQ0FnSUdsbUlDaGxiR1Z0Wlc1MExtTnNZWE56VEdsemRDNWpiMjUwWVdsdWN5Z25aR2x6WVdKc1pXUW5LU2tnZTF4dUlDQWdJQ0FnY21WMGRYSnVJSFJ5ZFdVN1hHNGdJQ0FnZlZ4dVhHNGdJQ0FnYVdZZ0tIUjVjR1Z2WmlCbGJHVnRaVzUwTG1ScGMyRmliR1ZrSUNFOVBTQW5kVzVrWldacGJtVmtKeWtnZTF4dUlDQWdJQ0FnY21WMGRYSnVJR1ZzWlcxbGJuUXVaR2x6WVdKc1pXUTdYRzRnSUNBZ2ZWeHVYRzRnSUNBZ2NtVjBkWEp1SUdWc1pXMWxiblF1YUdGelFYUjBjbWxpZFhSbEtDZGthWE5oWW14bFpDY3BJQ1ltSUdWc1pXMWxiblF1WjJWMFFYUjBjbWxpZFhSbEtDZGthWE5oWW14bFpDY3BJQ0U5UFNBblptRnNjMlVuTzF4dUlDQjlPMXh1WEc0Z0lHTnZibk4wSUdacGJtUlRhR0ZrYjNkU2IyOTBJRDBnWld4bGJXVnVkQ0E5UGlCN1hHNGdJQ0FnYVdZZ0tDRmtiMk4xYldWdWRDNWtiMk4xYldWdWRFVnNaVzFsYm5RdVlYUjBZV05vVTJoaFpHOTNLU0I3WEc0Z0lDQWdJQ0J5WlhSMWNtNGdiblZzYkR0Y2JpQWdJQ0I5SUM4dklFTmhiaUJtYVc1a0lIUm9aU0J6YUdGa2IzY2djbTl2ZENCdmRHaGxjbmRwYzJVZ2FYUW5iR3dnY21WMGRYSnVJSFJvWlNCa2IyTjFiV1Z1ZEZ4dVhHNWNiaUFnSUNCcFppQW9kSGx3Wlc5bUlHVnNaVzFsYm5RdVoyVjBVbTl2ZEU1dlpHVWdQVDA5SUNkbWRXNWpkR2x2YmljcElIdGNiaUFnSUNBZ0lHTnZibk4wSUhKdmIzUWdQU0JsYkdWdFpXNTBMbWRsZEZKdmIzUk9iMlJsS0NrN1hHNGdJQ0FnSUNCeVpYUjFjbTRnY205dmRDQnBibk4wWVc1alpXOW1JRk5vWVdSdmQxSnZiM1FnUHlCeWIyOTBJRG9nYm5Wc2JEdGNiaUFnSUNCOVhHNWNiaUFnSUNCcFppQW9aV3hsYldWdWRDQnBibk4wWVc1alpXOW1JRk5vWVdSdmQxSnZiM1FwSUh0Y2JpQWdJQ0FnSUhKbGRIVnliaUJsYkdWdFpXNTBPMXh1SUNBZ0lIMGdMeThnZDJobGJpQjNaU0JrYjI0bmRDQm1hVzVrSUdFZ2MyaGhaRzkzSUhKdmIzUmNibHh1WEc0Z0lDQWdhV1lnS0NGbGJHVnRaVzUwTG5CaGNtVnVkRTV2WkdVcElIdGNiaUFnSUNBZ0lISmxkSFZ5YmlCdWRXeHNPMXh1SUNBZ0lIMWNibHh1SUNBZ0lISmxkSFZ5YmlCbWFXNWtVMmhoWkc5M1VtOXZkQ2hsYkdWdFpXNTBMbkJoY21WdWRFNXZaR1VwTzF4dUlDQjlPMXh1WEc0Z0lHTnZibk4wSUc1dmIzQWdQU0FvS1NBOVBpQjdmVHRjYmlBZ0x5b3FYRzRnSUNBcUlGUnlhV05ySUhSdklISmxjM1JoY25RZ1lXNGdaV3hsYldWdWRDZHpJR0Z1YVcxaGRHbHZibHh1SUNBZ0tseHVJQ0FnS2lCQWNHRnlZVzBnZTBoVVRVeEZiR1Z0Wlc1MGZTQmxiR1Z0Wlc1MFhHNGdJQ0FxSUVCeVpYUjFjbTRnZG05cFpGeHVJQ0FnS2x4dUlDQWdLaUJBYzJWbElHaDBkSEJ6T2k4dmQzZDNMbU5vWVhKcGMzUm9aVzh1YVc4dllteHZaeTh5TURJeEx6QXlMM0psYzNSaGNuUXRZUzFqYzNNdFlXNXBiV0YwYVc5dUxYZHBkR2d0YW1GMllYTmpjbWx3ZEM4amNtVnpkR0Z5ZEdsdVp5MWhMV056Y3kxaGJtbHRZWFJwYjI1Y2JpQWdJQ292WEc1Y2JseHVJQ0JqYjI1emRDQnlaV1pzYjNjZ1BTQmxiR1Z0Wlc1MElEMCtJSHRjYmlBZ0lDQmxiR1Z0Wlc1MExtOW1abk5sZEVobGFXZG9kRHNnTHk4Z1pYTnNhVzUwTFdScGMyRmliR1V0YkdsdVpTQnVieTExYm5WelpXUXRaWGh3Y21WemMybHZibk5jYmlBZ2ZUdGNibHh1SUNCamIyNXpkQ0JuWlhScVVYVmxjbmtnUFNBb0tTQTlQaUI3WEc0Z0lDQWdhV1lnS0hkcGJtUnZkeTVxVVhWbGNua2dKaVlnSVdSdlkzVnRaVzUwTG1KdlpIa3VhR0Z6UVhSMGNtbGlkWFJsS0Nka1lYUmhMV0p6TFc1dkxXcHhkV1Z5ZVNjcEtTQjdYRzRnSUNBZ0lDQnlaWFIxY200Z2QybHVaRzkzTG1wUmRXVnllVHRjYmlBZ0lDQjlYRzVjYmlBZ0lDQnlaWFIxY200Z2JuVnNiRHRjYmlBZ2ZUdGNibHh1SUNCamIyNXpkQ0JFVDAxRGIyNTBaVzUwVEc5aFpHVmtRMkZzYkdKaFkydHpJRDBnVzEwN1hHNWNiaUFnWTI5dWMzUWdiMjVFVDAxRGIyNTBaVzUwVEc5aFpHVmtJRDBnWTJGc2JHSmhZMnNnUFQ0Z2UxeHVJQ0FnSUdsbUlDaGtiMk4xYldWdWRDNXlaV0ZrZVZOMFlYUmxJRDA5UFNBbmJHOWhaR2x1WnljcElIdGNiaUFnSUNBZ0lDOHZJR0ZrWkNCc2FYTjBaVzVsY2lCdmJpQjBhR1VnWm1seWMzUWdZMkZzYkNCM2FHVnVJSFJvWlNCa2IyTjFiV1Z1ZENCcGN5QnBiaUJzYjJGa2FXNW5JSE4wWVhSbFhHNGdJQ0FnSUNCcFppQW9JVVJQVFVOdmJuUmxiblJNYjJGa1pXUkRZV3hzWW1GamEzTXViR1Z1WjNSb0tTQjdYRzRnSUNBZ0lDQWdJR1J2WTNWdFpXNTBMbUZrWkVWMlpXNTBUR2x6ZEdWdVpYSW9KMFJQVFVOdmJuUmxiblJNYjJGa1pXUW5MQ0FvS1NBOVBpQjdYRzRnSUNBZ0lDQWdJQ0FnWm05eUlDaGpiMjV6ZENCallXeHNZbUZqYXlCdlppQkVUMDFEYjI1MFpXNTBURzloWkdWa1EyRnNiR0poWTJ0ektTQjdYRzRnSUNBZ0lDQWdJQ0FnSUNCallXeHNZbUZqYXlncE8xeHVJQ0FnSUNBZ0lDQWdJSDFjYmlBZ0lDQWdJQ0FnZlNrN1hHNGdJQ0FnSUNCOVhHNWNiaUFnSUNBZ0lFUlBUVU52Ym5SbGJuUk1iMkZrWldSRFlXeHNZbUZqYTNNdWNIVnphQ2hqWVd4c1ltRmpheWs3WEc0Z0lDQWdmU0JsYkhObElIdGNiaUFnSUNBZ0lHTmhiR3hpWVdOcktDazdYRzRnSUNBZ2ZWeHVJQ0I5TzF4dVhHNGdJR052Ym5OMElHbHpVbFJNSUQwZ0tDa2dQVDRnWkc5amRXMWxiblF1Wkc5amRXMWxiblJGYkdWdFpXNTBMbVJwY2lBOVBUMGdKM0owYkNjN1hHNWNiaUFnWTI5dWMzUWdaR1ZtYVc1bFNsRjFaWEo1VUd4MVoybHVJRDBnY0d4MVoybHVJRDArSUh0Y2JpQWdJQ0J2YmtSUFRVTnZiblJsYm5STWIyRmtaV1FvS0NrZ1BUNGdlMXh1SUNBZ0lDQWdZMjl1YzNRZ0pDQTlJR2RsZEdwUmRXVnllU2dwTzF4dUlDQWdJQ0FnTHlvZ2FYTjBZVzVpZFd3Z2FXZHViM0psSUdsbUlDb3ZYRzVjYmlBZ0lDQWdJR2xtSUNna0tTQjdYRzRnSUNBZ0lDQWdJR052Ym5OMElHNWhiV1VnUFNCd2JIVm5hVzR1VGtGTlJUdGNiaUFnSUNBZ0lDQWdZMjl1YzNRZ1NsRlZSVkpaWDA1UFgwTlBUa1pNU1VOVUlEMGdKQzVtYmx0dVlXMWxYVHRjYmlBZ0lDQWdJQ0FnSkM1bWJsdHVZVzFsWFNBOUlIQnNkV2RwYmk1cVVYVmxjbmxKYm5SbGNtWmhZMlU3WEc0Z0lDQWdJQ0FnSUNRdVptNWJibUZ0WlYwdVEyOXVjM1J5ZFdOMGIzSWdQU0J3YkhWbmFXNDdYRzVjYmlBZ0lDQWdJQ0FnSkM1bWJsdHVZVzFsWFM1dWIwTnZibVpzYVdOMElEMGdLQ2tnUFQ0Z2UxeHVJQ0FnSUNBZ0lDQWdJQ1F1Wm01YmJtRnRaVjBnUFNCS1VWVkZVbGxmVGs5ZlEwOU9Sa3hKUTFRN1hHNGdJQ0FnSUNBZ0lDQWdjbVYwZFhKdUlIQnNkV2RwYmk1cVVYVmxjbmxKYm5SbGNtWmhZMlU3WEc0Z0lDQWdJQ0FnSUgwN1hHNGdJQ0FnSUNCOVhHNGdJQ0FnZlNrN1hHNGdJSDA3WEc1Y2JpQWdZMjl1YzNRZ1pYaGxZM1YwWlNBOUlHTmhiR3hpWVdOcklEMCtJSHRjYmlBZ0lDQnBaaUFvZEhsd1pXOW1JR05oYkd4aVlXTnJJRDA5UFNBblpuVnVZM1JwYjI0bktTQjdYRzRnSUNBZ0lDQmpZV3hzWW1GamF5Z3BPMXh1SUNBZ0lIMWNiaUFnZlR0Y2JseHVJQ0JqYjI1emRDQmxlR1ZqZFhSbFFXWjBaWEpVY21GdWMybDBhVzl1SUQwZ0tHTmhiR3hpWVdOckxDQjBjbUZ1YzJsMGFXOXVSV3hsYldWdWRDd2dkMkZwZEVadmNsUnlZVzV6YVhScGIyNGdQU0IwY25WbEtTQTlQaUI3WEc0Z0lDQWdhV1lnS0NGM1lXbDBSbTl5VkhKaGJuTnBkR2x2YmlrZ2UxeHVJQ0FnSUNBZ1pYaGxZM1YwWlNoallXeHNZbUZqYXlrN1hHNGdJQ0FnSUNCeVpYUjFjbTQ3WEc0Z0lDQWdmVnh1WEc0Z0lDQWdZMjl1YzNRZ1pIVnlZWFJwYjI1UVlXUmthVzVuSUQwZ05UdGNiaUFnSUNCamIyNXpkQ0JsYlhWc1lYUmxaRVIxY21GMGFXOXVJRDBnWjJWMFZISmhibk5wZEdsdmJrUjFjbUYwYVc5dVJuSnZiVVZzWlcxbGJuUW9kSEpoYm5OcGRHbHZia1ZzWlcxbGJuUXBJQ3NnWkhWeVlYUnBiMjVRWVdSa2FXNW5PMXh1SUNBZ0lHeGxkQ0JqWVd4c1pXUWdQU0JtWVd4elpUdGNibHh1SUNBZ0lHTnZibk4wSUdoaGJtUnNaWElnUFNBb2UxeHVJQ0FnSUNBZ2RHRnlaMlYwWEc0Z0lDQWdmU2tnUFQ0Z2UxeHVJQ0FnSUNBZ2FXWWdLSFJoY21kbGRDQWhQVDBnZEhKaGJuTnBkR2x2YmtWc1pXMWxiblFwSUh0Y2JpQWdJQ0FnSUNBZ2NtVjBkWEp1TzF4dUlDQWdJQ0FnZlZ4dVhHNGdJQ0FnSUNCallXeHNaV1FnUFNCMGNuVmxPMXh1SUNBZ0lDQWdkSEpoYm5OcGRHbHZia1ZzWlcxbGJuUXVjbVZ0YjNabFJYWmxiblJNYVhOMFpXNWxjaWhVVWtGT1UwbFVTVTlPWDBWT1JDd2dhR0Z1Wkd4bGNpazdYRzRnSUNBZ0lDQmxlR1ZqZFhSbEtHTmhiR3hpWVdOcktUdGNiaUFnSUNCOU8xeHVYRzRnSUNBZ2RISmhibk5wZEdsdmJrVnNaVzFsYm5RdVlXUmtSWFpsYm5STWFYTjBaVzVsY2loVVVrRk9VMGxVU1U5T1gwVk9SQ3dnYUdGdVpHeGxjaWs3WEc0Z0lDQWdjMlYwVkdsdFpXOTFkQ2dvS1NBOVBpQjdYRzRnSUNBZ0lDQnBaaUFvSVdOaGJHeGxaQ2tnZTF4dUlDQWdJQ0FnSUNCMGNtbG5aMlZ5VkhKaGJuTnBkR2x2YmtWdVpDaDBjbUZ1YzJsMGFXOXVSV3hsYldWdWRDazdYRzRnSUNBZ0lDQjlYRzRnSUNBZ2ZTd2daVzExYkdGMFpXUkVkWEpoZEdsdmJpazdYRzRnSUgwN1hHNGdJQzhxS2x4dUlDQWdLaUJTWlhSMWNtNGdkR2hsSUhCeVpYWnBiM1Z6TDI1bGVIUWdaV3hsYldWdWRDQnZaaUJoSUd4cGMzUXVYRzRnSUNBcVhHNGdJQ0FxSUVCd1lYSmhiU0I3WVhKeVlYbDlJR3hwYzNRZ0lDQWdWR2hsSUd4cGMzUWdiMllnWld4bGJXVnVkSE5jYmlBZ0lDb2dRSEJoY21GdElHRmpkR2wyWlVWc1pXMWxiblFnSUNCVWFHVWdZV04wYVhabElHVnNaVzFsYm5SY2JpQWdJQ29nUUhCaGNtRnRJSE5vYjNWc1pFZGxkRTVsZUhRZ0lDQkRhRzl2YzJVZ2RHOGdaMlYwSUc1bGVIUWdiM0lnY0hKbGRtbHZkWE1nWld4bGJXVnVkRnh1SUNBZ0tpQkFjR0Z5WVcwZ2FYTkRlV05zWlVGc2JHOTNaV1JjYmlBZ0lDb2dRSEpsZEhWeWJpQjdSV3hsYldWdWRIeGxiR1Z0ZlNCVWFHVWdjSEp2Y0dWeUlHVnNaVzFsYm5SY2JpQWdJQ292WEc1Y2JseHVJQ0JqYjI1emRDQm5aWFJPWlhoMFFXTjBhWFpsUld4bGJXVnVkQ0E5SUNoc2FYTjBMQ0JoWTNScGRtVkZiR1Z0Wlc1MExDQnphRzkxYkdSSFpYUk9aWGgwTENCcGMwTjVZMnhsUVd4c2IzZGxaQ2tnUFQ0Z2UxeHVJQ0FnSUdOdmJuTjBJR3hwYzNSTVpXNW5kR2dnUFNCc2FYTjBMbXhsYm1kMGFEdGNiaUFnSUNCc1pYUWdhVzVrWlhnZ1BTQnNhWE4wTG1sdVpHVjRUMllvWVdOMGFYWmxSV3hsYldWdWRDazdJQzh2SUdsbUlIUm9aU0JsYkdWdFpXNTBJR1J2WlhNZ2JtOTBJR1Y0YVhOMElHbHVJSFJvWlNCc2FYTjBJSEpsZEhWeWJpQmhiaUJsYkdWdFpXNTBYRzRnSUNBZ0x5OGdaR1Z3Wlc1a2FXNW5JRzl1SUhSb1pTQmthWEpsWTNScGIyNGdZVzVrSUdsbUlHTjVZMnhsSUdseklHRnNiRzkzWldSY2JseHVJQ0FnSUdsbUlDaHBibVJsZUNBOVBUMGdMVEVwSUh0Y2JpQWdJQ0FnSUhKbGRIVnliaUFoYzJodmRXeGtSMlYwVG1WNGRDQW1KaUJwYzBONVkyeGxRV3hzYjNkbFpDQS9JR3hwYzNSYmJHbHpkRXhsYm1kMGFDQXRJREZkSURvZ2JHbHpkRnN3WFR0Y2JpQWdJQ0I5WEc1Y2JpQWdJQ0JwYm1SbGVDQXJQU0J6YUc5MWJHUkhaWFJPWlhoMElEOGdNU0E2SUMweE8xeHVYRzRnSUNBZ2FXWWdLR2x6UTNsamJHVkJiR3h2ZDJWa0tTQjdYRzRnSUNBZ0lDQnBibVJsZUNBOUlDaHBibVJsZUNBcklHeHBjM1JNWlc1bmRHZ3BJQ1VnYkdsemRFeGxibWQwYUR0Y2JpQWdJQ0I5WEc1Y2JpQWdJQ0J5WlhSMWNtNGdiR2x6ZEZ0TllYUm9MbTFoZUNnd0xDQk5ZWFJvTG0xcGJpaHBibVJsZUN3Z2JHbHpkRXhsYm1kMGFDQXRJREVwS1YwN1hHNGdJSDA3WEc1Y2JpQWdaWGh3YjNKMGN5NWtaV1pwYm1WS1VYVmxjbmxRYkhWbmFXNGdQU0JrWldacGJtVktVWFZsY25sUWJIVm5hVzQ3WEc0Z0lHVjRjRzl5ZEhNdVpYaGxZM1YwWlNBOUlHVjRaV04xZEdVN1hHNGdJR1Y0Y0c5eWRITXVaWGhsWTNWMFpVRm1kR1Z5VkhKaGJuTnBkR2x2YmlBOUlHVjRaV04xZEdWQlpuUmxjbFJ5WVc1emFYUnBiMjQ3WEc0Z0lHVjRjRzl5ZEhNdVptbHVaRk5vWVdSdmQxSnZiM1FnUFNCbWFXNWtVMmhoWkc5M1VtOXZkRHRjYmlBZ1pYaHdiM0owY3k1blpYUkZiR1Z0Wlc1MElEMGdaMlYwUld4bGJXVnVkRHRjYmlBZ1pYaHdiM0owY3k1blpYUkZiR1Z0Wlc1MFJuSnZiVk5sYkdWamRHOXlJRDBnWjJWMFJXeGxiV1Z1ZEVaeWIyMVRaV3hsWTNSdmNqdGNiaUFnWlhod2IzSjBjeTVuWlhST1pYaDBRV04wYVhabFJXeGxiV1Z1ZENBOUlHZGxkRTVsZUhSQlkzUnBkbVZGYkdWdFpXNTBPMXh1SUNCbGVIQnZjblJ6TG1kbGRGTmxiR1ZqZEc5eVJuSnZiVVZzWlcxbGJuUWdQU0JuWlhSVFpXeGxZM1J2Y2taeWIyMUZiR1Z0Wlc1ME8xeHVJQ0JsZUhCdmNuUnpMbWRsZEZSeVlXNXphWFJwYjI1RWRYSmhkR2x2YmtaeWIyMUZiR1Z0Wlc1MElEMGdaMlYwVkhKaGJuTnBkR2x2YmtSMWNtRjBhVzl1Um5KdmJVVnNaVzFsYm5RN1hHNGdJR1Y0Y0c5eWRITXVaMlYwVlVsRUlEMGdaMlYwVlVsRU8xeHVJQ0JsZUhCdmNuUnpMbWRsZEdwUmRXVnllU0E5SUdkbGRHcFJkV1Z5ZVR0Y2JpQWdaWGh3YjNKMGN5NXBjMFJwYzJGaWJHVmtJRDBnYVhORWFYTmhZbXhsWkR0Y2JpQWdaWGh3YjNKMGN5NXBjMFZzWlcxbGJuUWdQU0JwYzBWc1pXMWxiblE3WEc0Z0lHVjRjRzl5ZEhNdWFYTlNWRXdnUFNCcGMxSlVURHRjYmlBZ1pYaHdiM0owY3k1cGMxWnBjMmxpYkdVZ1BTQnBjMVpwYzJsaWJHVTdYRzRnSUdWNGNHOXlkSE11Ym05dmNDQTlJRzV2YjNBN1hHNGdJR1Y0Y0c5eWRITXViMjVFVDAxRGIyNTBaVzUwVEc5aFpHVmtJRDBnYjI1RVQwMURiMjUwWlc1MFRHOWhaR1ZrTzF4dUlDQmxlSEJ2Y25SekxuSmxabXh2ZHlBOUlISmxabXh2ZHp0Y2JpQWdaWGh3YjNKMGN5NTBiMVI1Y0dVZ1BTQjBiMVI1Y0dVN1hHNGdJR1Y0Y0c5eWRITXVkSEpwWjJkbGNsUnlZVzV6YVhScGIyNUZibVFnUFNCMGNtbG5aMlZ5VkhKaGJuTnBkR2x2YmtWdVpEdGNibHh1SUNCUFltcGxZM1F1WkdWbWFXNWxVSEp2Y0dWeWRHbGxjeWhsZUhCdmNuUnpMQ0I3SUY5ZlpYTk5iMlIxYkdVNklIc2dkbUZzZFdVNklIUnlkV1VnZlN3Z1cxTjViV0p2YkM1MGIxTjBjbWx1WjFSaFoxMDZJSHNnZG1Gc2RXVTZJQ2ROYjJSMWJHVW5JSDBnZlNrN1hHNWNibjBwS1R0Y2JpOHZJeUJ6YjNWeVkyVk5ZWEJ3YVc1blZWSk1QV2x1WkdWNExtcHpMbTFoY0Z4dUlpd2lMeW9oWEc0Z0lDb2dRbTl2ZEhOMGNtRndJSE5oYm1sMGFYcGxjaTVxY3lCMk5TNHlMak1nS0doMGRIQnpPaTh2WjJWMFltOXZkSE4wY21Gd0xtTnZiUzhwWEc0Z0lDb2dRMjl3ZVhKcFoyaDBJREl3TVRFdE1qQXlNaUJVYUdVZ1FtOXZkSE4wY21Gd0lFRjFkR2h2Y25NZ0tHaDBkSEJ6T2k4dloybDBhSFZpTG1OdmJTOTBkMkp6TDJKdmIzUnpkSEpoY0M5bmNtRndhSE12WTI5dWRISnBZblYwYjNKektWeHVJQ0FxSUV4cFkyVnVjMlZrSUhWdVpHVnlJRTFKVkNBb2FIUjBjSE02THk5bmFYUm9kV0l1WTI5dEwzUjNZbk12WW05dmRITjBjbUZ3TDJKc2IySXZiV0ZwYmk5TVNVTkZUbE5GS1Z4dUlDQXFMMXh1S0daMWJtTjBhVzl1SUNobmJHOWlZV3dzSUdaaFkzUnZjbmtwSUh0Y2JpQWdkSGx3Wlc5bUlHVjRjRzl5ZEhNZ1BUMDlJQ2R2WW1wbFkzUW5JQ1ltSUhSNWNHVnZaaUJ0YjJSMWJHVWdJVDA5SUNkMWJtUmxabWx1WldRbklEOGdabUZqZEc5eWVTaGxlSEJ2Y25SektTQTZYRzRnSUhSNWNHVnZaaUJrWldacGJtVWdQVDA5SUNkbWRXNWpkR2x2YmljZ0ppWWdaR1ZtYVc1bExtRnRaQ0EvSUdSbFptbHVaU2hiSjJWNGNHOXlkSE1uWFN3Z1ptRmpkRzl5ZVNrZ09seHVJQ0FvWjJ4dlltRnNJRDBnZEhsd1pXOW1JR2RzYjJKaGJGUm9hWE1nSVQwOUlDZDFibVJsWm1sdVpXUW5JRDhnWjJ4dlltRnNWR2hwY3lBNklHZHNiMkpoYkNCOGZDQnpaV3htTENCbVlXTjBiM0o1S0dkc2IySmhiQzVUWVc1cGRHbDZaWElnUFNCN2ZTa3BPMXh1ZlNrb2RHaHBjeXdnS0daMWJtTjBhVzl1SUNobGVIQnZjblJ6S1NCN0lDZDFjMlVnYzNSeWFXTjBKenRjYmx4dUlDQXZLaXBjYmlBZ0lDb2dMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzFjYmlBZ0lDb2dRbTl2ZEhOMGNtRndJQ2gyTlM0eUxqTXBPaUIxZEdsc0wzTmhibWwwYVhwbGNpNXFjMXh1SUNBZ0tpQk1hV05sYm5ObFpDQjFibVJsY2lCTlNWUWdLR2gwZEhCek9pOHZaMmwwYUhWaUxtTnZiUzkwZDJKekwySnZiM1J6ZEhKaGNDOWliRzlpTDIxaGFXNHZURWxEUlU1VFJTbGNiaUFnSUNvZ0xTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMWNiaUFnSUNvdlhHNGdJR052Ym5OMElIVnlhVUYwZEhKcFluVjBaWE1nUFNCdVpYY2dVMlYwS0ZzblltRmphMmR5YjNWdVpDY3NJQ2RqYVhSbEp5d2dKMmh5WldZbkxDQW5hWFJsYlhSNWNHVW5MQ0FuYkc5dVoyUmxjMk1uTENBbmNHOXpkR1Z5Snl3Z0ozTnlZeWNzSUNkNGJHbHVhenBvY21WbUoxMHBPMXh1SUNCamIyNXpkQ0JCVWtsQlgwRlVWRkpKUWxWVVJWOVFRVlJVUlZKT0lEMGdMMTVoY21saExWdGNYSGN0WFNva0wyazdYRzRnSUM4cUtseHVJQ0FnS2lCQklIQmhkSFJsY200Z2RHaGhkQ0J5WldOdloyNXBlbVZ6SUdFZ1kyOXRiVzl1YkhrZ2RYTmxablZzSUhOMVluTmxkQ0J2WmlCVlVreHpJSFJvWVhRZ1lYSmxJSE5oWm1VdVhHNGdJQ0FxWEc0Z0lDQXFJRk5vYjNWMExXOTFkQ0IwYnlCQmJtZDFiR0Z5SUdoMGRIQnpPaTh2WjJsMGFIVmlMbU52YlM5aGJtZDFiR0Z5TDJGdVozVnNZWEl2WW14dllpOHhNaTR5TG5ndmNHRmphMkZuWlhNdlkyOXlaUzl6Y21NdmMyRnVhWFJwZW1GMGFXOXVMM1Z5YkY5ellXNXBkR2w2WlhJdWRITmNiaUFnSUNvdlhHNWNiaUFnWTI5dWMzUWdVMEZHUlY5VlVreGZVRUZVVkVWU1RpQTlJQzllS0Q4NktEODZhSFIwY0hNL2ZHMWhhV3gwYjN4bWRIQjhkR1ZzZkdacGJHVjhjMjF6S1RwOFcxNGpKaTg2UDEwcUtEODZXeU12UDExOEpDa3BMMms3WEc0Z0lDOHFLbHh1SUNBZ0tpQkJJSEJoZEhSbGNtNGdkR2hoZENCdFlYUmphR1Z6SUhOaFptVWdaR0YwWVNCVlVreHpMaUJQYm14NUlHMWhkR05vWlhNZ2FXMWhaMlVzSUhacFpHVnZJR0Z1WkNCaGRXUnBieUIwZVhCbGN5NWNiaUFnSUNwY2JpQWdJQ29nVTJodmRYUXRiM1YwSUhSdklFRnVaM1ZzWVhJZ2FIUjBjSE02THk5bmFYUm9kV0l1WTI5dEwyRnVaM1ZzWVhJdllXNW5kV3hoY2k5aWJHOWlMekV5TGpJdWVDOXdZV05yWVdkbGN5OWpiM0psTDNOeVl5OXpZVzVwZEdsNllYUnBiMjR2ZFhKc1gzTmhibWwwYVhwbGNpNTBjMXh1SUNBZ0tpOWNibHh1SUNCamIyNXpkQ0JFUVZSQlgxVlNURjlRUVZSVVJWSk9JRDBnTDE1a1lYUmhPaWcvT21sdFlXZGxYRnd2S0Q4NlltMXdmR2RwWm54cWNHVm5mR3B3WjN4d2JtZDhkR2xtWm54M1pXSndLWHgyYVdSbGIxeGNMeWcvT20xd1pXZDhiWEEwZkc5blozeDNaV0p0S1h4aGRXUnBiMXhjTHlnL09tMXdNM3h2WjJGOGIyZG5mRzl3ZFhNcEtUdGlZWE5sTmpRc1cxeGNaQ3N2WVMxNlhTczlLaVF2YVR0Y2JseHVJQ0JqYjI1emRDQmhiR3h2ZDJWa1FYUjBjbWxpZFhSbElEMGdLR0YwZEhKcFluVjBaU3dnWVd4c2IzZGxaRUYwZEhKcFluVjBaVXhwYzNRcElEMCtJSHRjYmlBZ0lDQmpiMjV6ZENCaGRIUnlhV0oxZEdWT1lXMWxJRDBnWVhSMGNtbGlkWFJsTG01dlpHVk9ZVzFsTG5SdlRHOTNaWEpEWVhObEtDazdYRzVjYmlBZ0lDQnBaaUFvWVd4c2IzZGxaRUYwZEhKcFluVjBaVXhwYzNRdWFXNWpiSFZrWlhNb1lYUjBjbWxpZFhSbFRtRnRaU2twSUh0Y2JpQWdJQ0FnSUdsbUlDaDFjbWxCZEhSeWFXSjFkR1Z6TG1oaGN5aGhkSFJ5YVdKMWRHVk9ZVzFsS1NrZ2UxeHVJQ0FnSUNBZ0lDQnlaWFIxY200Z1FtOXZiR1ZoYmloVFFVWkZYMVZTVEY5UVFWUlVSVkpPTG5SbGMzUW9ZWFIwY21saWRYUmxMbTV2WkdWV1lXeDFaU2tnZkh3Z1JFRlVRVjlWVWt4ZlVFRlVWRVZTVGk1MFpYTjBLR0YwZEhKcFluVjBaUzV1YjJSbFZtRnNkV1VwS1R0Y2JpQWdJQ0FnSUgxY2JseHVJQ0FnSUNBZ2NtVjBkWEp1SUhSeWRXVTdYRzRnSUNBZ2ZTQXZMeUJEYUdWamF5QnBaaUJoSUhKbFozVnNZWElnWlhod2NtVnpjMmx2YmlCMllXeHBaR0YwWlhNZ2RHaGxJR0YwZEhKcFluVjBaUzVjYmx4dVhHNGdJQ0FnY21WMGRYSnVJR0ZzYkc5M1pXUkJkSFJ5YVdKMWRHVk1hWE4wTG1acGJIUmxjaWhoZEhSeWFXSjFkR1ZTWldkbGVDQTlQaUJoZEhSeWFXSjFkR1ZTWldkbGVDQnBibk4wWVc1alpXOW1JRkpsWjBWNGNDa3VjMjl0WlNoeVpXZGxlQ0E5UGlCeVpXZGxlQzUwWlhOMEtHRjBkSEpwWW5WMFpVNWhiV1VwS1R0Y2JpQWdmVHRjYmx4dUlDQmpiMjV6ZENCRVpXWmhkV3gwUVd4c2IzZHNhWE4wSUQwZ2UxeHVJQ0FnSUM4dklFZHNiMkpoYkNCaGRIUnlhV0oxZEdWeklHRnNiRzkzWldRZ2IyNGdZVzU1SUhOMWNIQnNhV1ZrSUdWc1pXMWxiblFnWW1Wc2IzY3VYRzRnSUNBZ0p5b25PaUJiSjJOc1lYTnpKeXdnSjJScGNpY3NJQ2RwWkNjc0lDZHNZVzVuSnl3Z0ozSnZiR1VuTENCQlVrbEJYMEZVVkZKSlFsVlVSVjlRUVZSVVJWSk9YU3hjYmlBZ0lDQmhPaUJiSjNSaGNtZGxkQ2NzSUNkb2NtVm1KeXdnSjNScGRHeGxKeXdnSjNKbGJDZGRMRnh1SUNBZ0lHRnlaV0U2SUZ0ZExGeHVJQ0FnSUdJNklGdGRMRnh1SUNBZ0lHSnlPaUJiWFN4Y2JpQWdJQ0JqYjJ3NklGdGRMRnh1SUNBZ0lHTnZaR1U2SUZ0ZExGeHVJQ0FnSUdScGRqb2dXMTBzWEc0Z0lDQWdaVzA2SUZ0ZExGeHVJQ0FnSUdoeU9pQmJYU3hjYmlBZ0lDQm9NVG9nVzEwc1hHNGdJQ0FnYURJNklGdGRMRnh1SUNBZ0lHZ3pPaUJiWFN4Y2JpQWdJQ0JvTkRvZ1cxMHNYRzRnSUNBZ2FEVTZJRnRkTEZ4dUlDQWdJR2cyT2lCYlhTeGNiaUFnSUNCcE9pQmJYU3hjYmlBZ0lDQnBiV2M2SUZzbmMzSmpKeXdnSjNOeVkzTmxkQ2NzSUNkaGJIUW5MQ0FuZEdsMGJHVW5MQ0FuZDJsa2RHZ25MQ0FuYUdWcFoyaDBKMTBzWEc0Z0lDQWdiR2s2SUZ0ZExGeHVJQ0FnSUc5c09pQmJYU3hjYmlBZ0lDQndPaUJiWFN4Y2JpQWdJQ0J3Y21VNklGdGRMRnh1SUNBZ0lITTZJRnRkTEZ4dUlDQWdJSE50WVd4c09pQmJYU3hjYmlBZ0lDQnpjR0Z1T2lCYlhTeGNiaUFnSUNCemRXSTZJRnRkTEZ4dUlDQWdJSE4xY0RvZ1cxMHNYRzRnSUNBZ2MzUnliMjVuT2lCYlhTeGNiaUFnSUNCMU9pQmJYU3hjYmlBZ0lDQjFiRG9nVzExY2JpQWdmVHRjYmlBZ1puVnVZM1JwYjI0Z2MyRnVhWFJwZW1WSWRHMXNLSFZ1YzJGbVpVaDBiV3dzSUdGc2JHOTNUR2x6ZEN3Z2MyRnVhWFJwZW1WR2RXNWpkR2x2YmlrZ2UxeHVJQ0FnSUdsbUlDZ2hkVzV6WVdabFNIUnRiQzVzWlc1bmRHZ3BJSHRjYmlBZ0lDQWdJSEpsZEhWeWJpQjFibk5oWm1WSWRHMXNPMXh1SUNBZ0lIMWNibHh1SUNBZ0lHbG1JQ2h6WVc1cGRHbDZaVVoxYm1OMGFXOXVJQ1ltSUhSNWNHVnZaaUJ6WVc1cGRHbDZaVVoxYm1OMGFXOXVJRDA5UFNBblpuVnVZM1JwYjI0bktTQjdYRzRnSUNBZ0lDQnlaWFIxY200Z2MyRnVhWFJwZW1WR2RXNWpkR2x2YmloMWJuTmhabVZJZEcxc0tUdGNiaUFnSUNCOVhHNWNiaUFnSUNCamIyNXpkQ0JrYjIxUVlYSnpaWElnUFNCdVpYY2dkMmx1Wkc5M0xrUlBUVkJoY25ObGNpZ3BPMXh1SUNBZ0lHTnZibk4wSUdOeVpXRjBaV1JFYjJOMWJXVnVkQ0E5SUdSdmJWQmhjbk5sY2k1d1lYSnpaVVp5YjIxVGRISnBibWNvZFc1ellXWmxTSFJ0YkN3Z0ozUmxlSFF2YUhSdGJDY3BPMXh1SUNBZ0lHTnZibk4wSUdWc1pXMWxiblJ6SUQwZ1cxMHVZMjl1WTJGMEtDNHVMbU55WldGMFpXUkViMk4xYldWdWRDNWliMlI1TG5GMVpYSjVVMlZzWldOMGIzSkJiR3dvSnlvbktTazdYRzVjYmlBZ0lDQm1iM0lnS0dOdmJuTjBJR1ZzWlcxbGJuUWdiMllnWld4bGJXVnVkSE1wSUh0Y2JpQWdJQ0FnSUdOdmJuTjBJR1ZzWlcxbGJuUk9ZVzFsSUQwZ1pXeGxiV1Z1ZEM1dWIyUmxUbUZ0WlM1MGIweHZkMlZ5UTJGelpTZ3BPMXh1WEc0Z0lDQWdJQ0JwWmlBb0lVOWlhbVZqZEM1clpYbHpLR0ZzYkc5M1RHbHpkQ2t1YVc1amJIVmtaWE1vWld4bGJXVnVkRTVoYldVcEtTQjdYRzRnSUNBZ0lDQWdJR1ZzWlcxbGJuUXVjbVZ0YjNabEtDazdYRzRnSUNBZ0lDQWdJR052Ym5ScGJuVmxPMXh1SUNBZ0lDQWdmVnh1WEc0Z0lDQWdJQ0JqYjI1emRDQmhkSFJ5YVdKMWRHVk1hWE4wSUQwZ1cxMHVZMjl1WTJGMEtDNHVMbVZzWlcxbGJuUXVZWFIwY21saWRYUmxjeWs3WEc0Z0lDQWdJQ0JqYjI1emRDQmhiR3h2ZDJWa1FYUjBjbWxpZFhSbGN5QTlJRnRkTG1OdmJtTmhkQ2hoYkd4dmQweHBjM1JiSnlvblhTQjhmQ0JiWFN3Z1lXeHNiM2RNYVhOMFcyVnNaVzFsYm5ST1lXMWxYU0I4ZkNCYlhTazdYRzVjYmlBZ0lDQWdJR1p2Y2lBb1kyOXVjM1FnWVhSMGNtbGlkWFJsSUc5bUlHRjBkSEpwWW5WMFpVeHBjM1FwSUh0Y2JpQWdJQ0FnSUNBZ2FXWWdLQ0ZoYkd4dmQyVmtRWFIwY21saWRYUmxLR0YwZEhKcFluVjBaU3dnWVd4c2IzZGxaRUYwZEhKcFluVjBaWE1wS1NCN1hHNGdJQ0FnSUNBZ0lDQWdaV3hsYldWdWRDNXlaVzF2ZG1WQmRIUnlhV0oxZEdVb1lYUjBjbWxpZFhSbExtNXZaR1ZPWVcxbEtUdGNiaUFnSUNBZ0lDQWdmVnh1SUNBZ0lDQWdmVnh1SUNBZ0lIMWNibHh1SUNBZ0lISmxkSFZ5YmlCamNtVmhkR1ZrUkc5amRXMWxiblF1WW05a2VTNXBibTVsY2toVVRVdzdYRzRnSUgxY2JseHVJQ0JsZUhCdmNuUnpMa1JsWm1GMWJIUkJiR3h2ZDJ4cGMzUWdQU0JFWldaaGRXeDBRV3hzYjNkc2FYTjBPMXh1SUNCbGVIQnZjblJ6TG5OaGJtbDBhWHBsU0hSdGJDQTlJSE5oYm1sMGFYcGxTSFJ0YkR0Y2JseHVJQ0JQWW1wbFkzUXVaR1ZtYVc1bFVISnZjR1Z5ZEdsbGN5aGxlSEJ2Y25SekxDQjdJRjlmWlhOTmIyUjFiR1U2SUhzZ2RtRnNkV1U2SUhSeWRXVWdmU3dnVzFONWJXSnZiQzUwYjFOMGNtbHVaMVJoWjEwNklIc2dkbUZzZFdVNklDZE5iMlIxYkdVbklIMGdmU2s3WEc1Y2JuMHBLVHRjYmk4dkl5QnpiM1Z5WTJWTllYQndhVzVuVlZKTVBYTmhibWwwYVhwbGNpNXFjeTV0WVhCY2JpSXNJaThxSVZ4dUlDQXFJRUp2YjNSemRISmhjQ0J6WTNKdmJHeGlZWEl1YW5NZ2RqVXVNaTR6SUNob2RIUndjem92TDJkbGRHSnZiM1J6ZEhKaGNDNWpiMjB2S1Z4dUlDQXFJRU52Y0hseWFXZG9kQ0F5TURFeExUSXdNaklnVkdobElFSnZiM1J6ZEhKaGNDQkJkWFJvYjNKeklDaG9kSFJ3Y3pvdkwyZHBkR2gxWWk1amIyMHZkSGRpY3k5aWIyOTBjM1J5WVhBdlozSmhjR2h6TDJOdmJuUnlhV0oxZEc5eWN5bGNiaUFnS2lCTWFXTmxibk5sWkNCMWJtUmxjaUJOU1ZRZ0tHaDBkSEJ6T2k4dloybDBhSFZpTG1OdmJTOTBkMkp6TDJKdmIzUnpkSEpoY0M5aWJHOWlMMjFoYVc0dlRFbERSVTVUUlNsY2JpQWdLaTljYmlobWRXNWpkR2x2YmlBb1oyeHZZbUZzTENCbVlXTjBiM0o1S1NCN1hHNGdJSFI1Y0dWdlppQmxlSEJ2Y25SeklEMDlQU0FuYjJKcVpXTjBKeUFtSmlCMGVYQmxiMllnYlc5a2RXeGxJQ0U5UFNBbmRXNWtaV1pwYm1Wa0p5QS9JRzF2WkhWc1pTNWxlSEJ2Y25SeklEMGdabUZqZEc5eWVTaHlaWEYxYVhKbEtDY3VMaTlrYjIwdmMyVnNaV04wYjNJdFpXNW5hVzVsSnlrc0lISmxjWFZwY21Vb0p5NHVMMlJ2YlM5dFlXNXBjSFZzWVhSdmNpY3BMQ0J5WlhGMWFYSmxLQ2N1TDJsdVpHVjRKeWtwSURwY2JpQWdkSGx3Wlc5bUlHUmxabWx1WlNBOVBUMGdKMloxYm1OMGFXOXVKeUFtSmlCa1pXWnBibVV1WVcxa0lEOGdaR1ZtYVc1bEtGc25MaTR2Wkc5dEwzTmxiR1ZqZEc5eUxXVnVaMmx1WlNjc0lDY3VMaTlrYjIwdmJXRnVhWEIxYkdGMGIzSW5MQ0FuTGk5cGJtUmxlQ2RkTENCbVlXTjBiM0o1S1NBNlhHNGdJQ2huYkc5aVlXd2dQU0IwZVhCbGIyWWdaMnh2WW1Gc1ZHaHBjeUFoUFQwZ0ozVnVaR1ZtYVc1bFpDY2dQeUJuYkc5aVlXeFVhR2x6SURvZ1oyeHZZbUZzSUh4OElITmxiR1lzSUdkc2IySmhiQzVUWTNKdmJHeGlZWElnUFNCbVlXTjBiM0o1S0dkc2IySmhiQzVUWld4bFkzUnZja1Z1WjJsdVpTd2daMnh2WW1Gc0xrMWhibWx3ZFd4aGRHOXlMQ0JuYkc5aVlXd3VTVzVrWlhncEtUdGNibjBwS0hSb2FYTXNJQ2htZFc1amRHbHZiaUFvVTJWc1pXTjBiM0pGYm1kcGJtVXNJRTFoYm1sd2RXeGhkRzl5TENCcGJtUmxlQ2tnZXlBbmRYTmxJSE4wY21samRDYzdYRzVjYmlBZ1kyOXVjM1FnWDJsdWRHVnliM0JFWldaaGRXeDBUR1ZuWVdONUlEMGdaU0E5UGlCbElDWW1JSFI1Y0dWdlppQmxJRDA5UFNBbmIySnFaV04wSnlBbUppQW5aR1ZtWVhWc2RDY2dhVzRnWlNBL0lHVWdPaUI3SUdSbFptRjFiSFE2SUdVZ2ZUdGNibHh1SUNCamIyNXpkQ0JUWld4bFkzUnZja1Z1WjJsdVpWOWZaR1ZtWVhWc2RDQTlJQzhxSTE5ZlVGVlNSVjlmS2k5ZmFXNTBaWEp2Y0VSbFptRjFiSFJNWldkaFkza29VMlZzWldOMGIzSkZibWRwYm1VcE8xeHVJQ0JqYjI1emRDQk5ZVzVwY0hWc1lYUnZjbDlmWkdWbVlYVnNkQ0E5SUM4cUkxOWZVRlZTUlY5ZktpOWZhVzUwWlhKdmNFUmxabUYxYkhSTVpXZGhZM2tvVFdGdWFYQjFiR0YwYjNJcE8xeHVYRzRnSUM4cUtseHVJQ0FnS2lBdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExWeHVJQ0FnS2lCQ2IyOTBjM1J5WVhBZ0tIWTFMakl1TXlrNklIVjBhV3d2YzJOeWIyeHNRbUZ5TG1welhHNGdJQ0FxSUV4cFkyVnVjMlZrSUhWdVpHVnlJRTFKVkNBb2FIUjBjSE02THk5bmFYUm9kV0l1WTI5dEwzUjNZbk12WW05dmRITjBjbUZ3TDJKc2IySXZiV0ZwYmk5TVNVTkZUbE5GS1Z4dUlDQWdLaUF0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFZ4dUlDQWdLaTljYmlBZ0x5b3FYRzRnSUNBcUlFTnZibk4wWVc1MGMxeHVJQ0FnS2k5Y2JseHVJQ0JqYjI1emRDQlRSVXhGUTFSUFVsOUdTVmhGUkY5RFQwNVVSVTVVSUQwZ0p5NW1hWGhsWkMxMGIzQXNJQzVtYVhobFpDMWliM1IwYjIwc0lDNXBjeTFtYVhobFpDd2dMbk4wYVdOcmVTMTBiM0FuTzF4dUlDQmpiMjV6ZENCVFJVeEZRMVJQVWw5VFZFbERTMWxmUTA5T1ZFVk9WQ0E5SUNjdWMzUnBZMnQ1TFhSdmNDYzdYRzRnSUdOdmJuTjBJRkJTVDFCRlVsUlpYMUJCUkVSSlRrY2dQU0FuY0dGa1pHbHVaeTF5YVdkb2RDYzdYRzRnSUdOdmJuTjBJRkJTVDFCRlVsUlpYMDFCVWtkSlRpQTlJQ2R0WVhKbmFXNHRjbWxuYUhRbk8xeHVJQ0F2S2lwY2JpQWdJQ29nUTJ4aGMzTWdaR1ZtYVc1cGRHbHZibHh1SUNBZ0tpOWNibHh1SUNCamJHRnpjeUJUWTNKdmJHeENZWEpJWld4d1pYSWdlMXh1SUNBZ0lHTnZibk4wY25WamRHOXlLQ2tnZTF4dUlDQWdJQ0FnZEdocGN5NWZaV3hsYldWdWRDQTlJR1J2WTNWdFpXNTBMbUp2WkhrN1hHNGdJQ0FnZlNBdkx5QlFkV0pzYVdOY2JseHVYRzRnSUNBZ1oyVjBWMmxrZEdnb0tTQjdYRzRnSUNBZ0lDQXZMeUJvZEhSd2N6b3ZMMlJsZG1Wc2IzQmxjaTV0YjNwcGJHeGhMbTl5Wnk5bGJpMVZVeTlrYjJOekwxZGxZaTlCVUVrdlYybHVaRzkzTDJsdWJtVnlWMmxrZEdnamRYTmhaMlZmYm05MFpYTmNiaUFnSUNBZ0lHTnZibk4wSUdSdlkzVnRaVzUwVjJsa2RHZ2dQU0JrYjJOMWJXVnVkQzVrYjJOMWJXVnVkRVZzWlcxbGJuUXVZMnhwWlc1MFYybGtkR2c3WEc0Z0lDQWdJQ0J5WlhSMWNtNGdUV0YwYUM1aFluTW9kMmx1Wkc5M0xtbHVibVZ5VjJsa2RHZ2dMU0JrYjJOMWJXVnVkRmRwWkhSb0tUdGNiaUFnSUNCOVhHNWNiaUFnSUNCb2FXUmxLQ2tnZTF4dUlDQWdJQ0FnWTI5dWMzUWdkMmxrZEdnZ1BTQjBhR2x6TG1kbGRGZHBaSFJvS0NrN1hHNWNiaUFnSUNBZ0lIUm9hWE11WDJScGMyRmliR1ZQZG1WeVJteHZkeWdwT3lBdkx5Qm5hWFpsSUhCaFpHUnBibWNnZEc4Z1pXeGxiV1Z1ZENCMGJ5QmlZV3hoYm1ObElIUm9aU0JvYVdSa1pXNGdjMk55YjJ4c1ltRnlJSGRwWkhSb1hHNWNibHh1SUNBZ0lDQWdkR2hwY3k1ZmMyVjBSV3hsYldWdWRFRjBkSEpwWW5WMFpYTW9kR2hwY3k1ZlpXeGxiV1Z1ZEN3Z1VGSlBVRVZTVkZsZlVFRkVSRWxPUnl3Z1kyRnNZM1ZzWVhSbFpGWmhiSFZsSUQwK0lHTmhiR04xYkdGMFpXUldZV3gxWlNBcklIZHBaSFJvS1RzZ0x5OGdkSEpwWTJzNklGZGxJR0ZrYW5WemRDQndiM05wZEdsMlpTQndZV1JrYVc1blVtbG5hSFFnWVc1a0lHNWxaMkYwYVhabElHMWhjbWRwYmxKcFoyaDBJSFJ2SUhOMGFXTnJlUzEwYjNBZ1pXeGxiV1Z1ZEhNZ2RHOGdhMlZsY0NCemFHOTNhVzVuSUdaMWJHeDNhV1IwYUZ4dVhHNWNiaUFnSUNBZ0lIUm9hWE11WDNObGRFVnNaVzFsYm5SQmRIUnlhV0oxZEdWektGTkZURVZEVkU5U1gwWkpXRVZFWDBOUFRsUkZUbFFzSUZCU1QxQkZVbFJaWDFCQlJFUkpUa2NzSUdOaGJHTjFiR0YwWldSV1lXeDFaU0E5UGlCallXeGpkV3hoZEdWa1ZtRnNkV1VnS3lCM2FXUjBhQ2s3WEc1Y2JpQWdJQ0FnSUhSb2FYTXVYM05sZEVWc1pXMWxiblJCZEhSeWFXSjFkR1Z6S0ZORlRFVkRWRTlTWDFOVVNVTkxXVjlEVDA1VVJVNVVMQ0JRVWs5UVJWSlVXVjlOUVZKSFNVNHNJR05oYkdOMWJHRjBaV1JXWVd4MVpTQTlQaUJqWVd4amRXeGhkR1ZrVm1Gc2RXVWdMU0IzYVdSMGFDazdYRzRnSUNBZ2ZWeHVYRzRnSUNBZ2NtVnpaWFFvS1NCN1hHNGdJQ0FnSUNCMGFHbHpMbDl5WlhObGRFVnNaVzFsYm5SQmRIUnlhV0oxZEdWektIUm9hWE11WDJWc1pXMWxiblFzSUNkdmRtVnlabXh2ZHljcE8xeHVYRzRnSUNBZ0lDQjBhR2x6TGw5eVpYTmxkRVZzWlcxbGJuUkJkSFJ5YVdKMWRHVnpLSFJvYVhNdVgyVnNaVzFsYm5Rc0lGQlNUMUJGVWxSWlgxQkJSRVJKVGtjcE8xeHVYRzRnSUNBZ0lDQjBhR2x6TGw5eVpYTmxkRVZzWlcxbGJuUkJkSFJ5YVdKMWRHVnpLRk5GVEVWRFZFOVNYMFpKV0VWRVgwTlBUbFJGVGxRc0lGQlNUMUJGVWxSWlgxQkJSRVJKVGtjcE8xeHVYRzRnSUNBZ0lDQjBhR2x6TGw5eVpYTmxkRVZzWlcxbGJuUkJkSFJ5YVdKMWRHVnpLRk5GVEVWRFZFOVNYMU5VU1VOTFdWOURUMDVVUlU1VUxDQlFVazlRUlZKVVdWOU5RVkpIU1U0cE8xeHVJQ0FnSUgxY2JseHVJQ0FnSUdselQzWmxjbVpzYjNkcGJtY29LU0I3WEc0Z0lDQWdJQ0J5WlhSMWNtNGdkR2hwY3k1blpYUlhhV1IwYUNncElENGdNRHRjYmlBZ0lDQjlJQzh2SUZCeWFYWmhkR1ZjYmx4dVhHNGdJQ0FnWDJScGMyRmliR1ZQZG1WeVJteHZkeWdwSUh0Y2JpQWdJQ0FnSUhSb2FYTXVYM05oZG1WSmJtbDBhV0ZzUVhSMGNtbGlkWFJsS0hSb2FYTXVYMlZzWlcxbGJuUXNJQ2R2ZG1WeVpteHZkeWNwTzF4dVhHNGdJQ0FnSUNCMGFHbHpMbDlsYkdWdFpXNTBMbk4wZVd4bExtOTJaWEptYkc5M0lEMGdKMmhwWkdSbGJpYzdYRzRnSUNBZ2ZWeHVYRzRnSUNBZ1gzTmxkRVZzWlcxbGJuUkJkSFJ5YVdKMWRHVnpLSE5sYkdWamRHOXlMQ0J6ZEhsc1pWQnliM0JsY25SNUxDQmpZV3hzWW1GamF5a2dlMXh1SUNBZ0lDQWdZMjl1YzNRZ2MyTnliMnhzWW1GeVYybGtkR2dnUFNCMGFHbHpMbWRsZEZkcFpIUm9LQ2s3WEc1Y2JpQWdJQ0FnSUdOdmJuTjBJRzFoYm1sd2RXeGhkR2x2YmtOaGJHeENZV05ySUQwZ1pXeGxiV1Z1ZENBOVBpQjdYRzRnSUNBZ0lDQWdJR2xtSUNobGJHVnRaVzUwSUNFOVBTQjBhR2x6TGw5bGJHVnRaVzUwSUNZbUlIZHBibVJ2ZHk1cGJtNWxjbGRwWkhSb0lENGdaV3hsYldWdWRDNWpiR2xsYm5SWGFXUjBhQ0FySUhOamNtOXNiR0poY2xkcFpIUm9LU0I3WEc0Z0lDQWdJQ0FnSUNBZ2NtVjBkWEp1TzF4dUlDQWdJQ0FnSUNCOVhHNWNiaUFnSUNBZ0lDQWdkR2hwY3k1ZmMyRjJaVWx1YVhScFlXeEJkSFJ5YVdKMWRHVW9aV3hsYldWdWRDd2djM1I1YkdWUWNtOXdaWEowZVNrN1hHNWNiaUFnSUNBZ0lDQWdZMjl1YzNRZ1kyRnNZM1ZzWVhSbFpGWmhiSFZsSUQwZ2QybHVaRzkzTG1kbGRFTnZiWEIxZEdWa1UzUjViR1VvWld4bGJXVnVkQ2t1WjJWMFVISnZjR1Z5ZEhsV1lXeDFaU2h6ZEhsc1pWQnliM0JsY25SNUtUdGNiaUFnSUNBZ0lDQWdaV3hsYldWdWRDNXpkSGxzWlM1elpYUlFjbTl3WlhKMGVTaHpkSGxzWlZCeWIzQmxjblI1TENCZ0pIdGpZV3hzWW1GamF5aE9kVzFpWlhJdWNHRnljMlZHYkc5aGRDaGpZV3hqZFd4aGRHVmtWbUZzZFdVcEtYMXdlR0FwTzF4dUlDQWdJQ0FnZlR0Y2JseHVJQ0FnSUNBZ2RHaHBjeTVmWVhCd2JIbE5ZVzVwY0hWc1lYUnBiMjVEWVd4c1ltRmpheWh6Wld4bFkzUnZjaXdnYldGdWFYQjFiR0YwYVc5dVEyRnNiRUpoWTJzcE8xeHVJQ0FnSUgxY2JseHVJQ0FnSUY5ellYWmxTVzVwZEdsaGJFRjBkSEpwWW5WMFpTaGxiR1Z0Wlc1MExDQnpkSGxzWlZCeWIzQmxjblI1S1NCN1hHNGdJQ0FnSUNCamIyNXpkQ0JoWTNSMVlXeFdZV3gxWlNBOUlHVnNaVzFsYm5RdWMzUjViR1V1WjJWMFVISnZjR1Z5ZEhsV1lXeDFaU2h6ZEhsc1pWQnliM0JsY25SNUtUdGNibHh1SUNBZ0lDQWdhV1lnS0dGamRIVmhiRlpoYkhWbEtTQjdYRzRnSUNBZ0lDQWdJRTFoYm1sd2RXeGhkRzl5WDE5a1pXWmhkV3gwTG1SbFptRjFiSFF1YzJWMFJHRjBZVUYwZEhKcFluVjBaU2hsYkdWdFpXNTBMQ0J6ZEhsc1pWQnliM0JsY25SNUxDQmhZM1IxWVd4V1lXeDFaU2s3WEc0Z0lDQWdJQ0I5WEc0Z0lDQWdmVnh1WEc0Z0lDQWdYM0psYzJWMFJXeGxiV1Z1ZEVGMGRISnBZblYwWlhNb2MyVnNaV04wYjNJc0lITjBlV3hsVUhKdmNHVnlkSGtwSUh0Y2JpQWdJQ0FnSUdOdmJuTjBJRzFoYm1sd2RXeGhkR2x2YmtOaGJHeENZV05ySUQwZ1pXeGxiV1Z1ZENBOVBpQjdYRzRnSUNBZ0lDQWdJR052Ym5OMElIWmhiSFZsSUQwZ1RXRnVhWEIxYkdGMGIzSmZYMlJsWm1GMWJIUXVaR1ZtWVhWc2RDNW5aWFJFWVhSaFFYUjBjbWxpZFhSbEtHVnNaVzFsYm5Rc0lITjBlV3hsVUhKdmNHVnlkSGtwT3lBdkx5QlhaU0J2Ym14NUlIZGhiblFnZEc4Z2NtVnRiM1psSUhSb1pTQndjbTl3WlhKMGVTQnBaaUIwYUdVZ2RtRnNkV1VnYVhNZ1lHNTFiR3hnT3lCMGFHVWdkbUZzZFdVZ1kyRnVJR0ZzYzI4Z1ltVWdlbVZ5YjF4dVhHNGdJQ0FnSUNBZ0lHbG1JQ2gyWVd4MVpTQTlQVDBnYm5Wc2JDa2dlMXh1SUNBZ0lDQWdJQ0FnSUdWc1pXMWxiblF1YzNSNWJHVXVjbVZ0YjNabFVISnZjR1Z5ZEhrb2MzUjViR1ZRY205d1pYSjBlU2s3WEc0Z0lDQWdJQ0FnSUNBZ2NtVjBkWEp1TzF4dUlDQWdJQ0FnSUNCOVhHNWNiaUFnSUNBZ0lDQWdUV0Z1YVhCMWJHRjBiM0pmWDJSbFptRjFiSFF1WkdWbVlYVnNkQzV5WlcxdmRtVkVZWFJoUVhSMGNtbGlkWFJsS0dWc1pXMWxiblFzSUhOMGVXeGxVSEp2Y0dWeWRIa3BPMXh1SUNBZ0lDQWdJQ0JsYkdWdFpXNTBMbk4wZVd4bExuTmxkRkJ5YjNCbGNuUjVLSE4wZVd4bFVISnZjR1Z5ZEhrc0lIWmhiSFZsS1R0Y2JpQWdJQ0FnSUgwN1hHNWNiaUFnSUNBZ0lIUm9hWE11WDJGd2NHeDVUV0Z1YVhCMWJHRjBhVzl1UTJGc2JHSmhZMnNvYzJWc1pXTjBiM0lzSUcxaGJtbHdkV3hoZEdsdmJrTmhiR3hDWVdOcktUdGNiaUFnSUNCOVhHNWNiaUFnSUNCZllYQndiSGxOWVc1cGNIVnNZWFJwYjI1RFlXeHNZbUZqYXloelpXeGxZM1J2Y2l3Z1kyRnNiRUpoWTJzcElIdGNiaUFnSUNBZ0lHbG1JQ2hwYm1SbGVDNXBjMFZzWlcxbGJuUW9jMlZzWldOMGIzSXBLU0I3WEc0Z0lDQWdJQ0FnSUdOaGJHeENZV05yS0hObGJHVmpkRzl5S1R0Y2JpQWdJQ0FnSUNBZ2NtVjBkWEp1TzF4dUlDQWdJQ0FnZlZ4dVhHNGdJQ0FnSUNCbWIzSWdLR052Ym5OMElITmxiQ0J2WmlCVFpXeGxZM1J2Y2tWdVoybHVaVjlmWkdWbVlYVnNkQzVrWldaaGRXeDBMbVpwYm1Rb2MyVnNaV04wYjNJc0lIUm9hWE11WDJWc1pXMWxiblFwS1NCN1hHNGdJQ0FnSUNBZ0lHTmhiR3hDWVdOcktITmxiQ2s3WEc0Z0lDQWdJQ0I5WEc0Z0lDQWdmVnh1WEc0Z0lIMWNibHh1SUNCeVpYUjFjbTRnVTJOeWIyeHNRbUZ5U0dWc2NHVnlPMXh1WEc1OUtTazdYRzR2THlNZ2MyOTFjbU5sVFdGd2NHbHVaMVZTVEQxelkzSnZiR3hpWVhJdWFuTXViV0Z3WEc0aUxDSXZLaUZjYmlBZ0tpQkNiMjkwYzNSeVlYQWdkR1Z0Y0d4aGRHVXRabUZqZEc5eWVTNXFjeUIyTlM0eUxqTWdLR2gwZEhCek9pOHZaMlYwWW05dmRITjBjbUZ3TG1OdmJTOHBYRzRnSUNvZ1EyOXdlWEpwWjJoMElESXdNVEV0TWpBeU1pQlVhR1VnUW05dmRITjBjbUZ3SUVGMWRHaHZjbk1nS0doMGRIQnpPaTh2WjJsMGFIVmlMbU52YlM5MGQySnpMMkp2YjNSemRISmhjQzluY21Gd2FITXZZMjl1ZEhKcFluVjBiM0p6S1Z4dUlDQXFJRXhwWTJWdWMyVmtJSFZ1WkdWeUlFMUpWQ0FvYUhSMGNITTZMeTluYVhSb2RXSXVZMjl0TDNSM1luTXZZbTl2ZEhOMGNtRndMMkpzYjJJdmJXRnBiaTlNU1VORlRsTkZLVnh1SUNBcUwxeHVLR1oxYm1OMGFXOXVJQ2huYkc5aVlXd3NJR1poWTNSdmNua3BJSHRjYmlBZ2RIbHdaVzltSUdWNGNHOXlkSE1nUFQwOUlDZHZZbXBsWTNRbklDWW1JSFI1Y0dWdlppQnRiMlIxYkdVZ0lUMDlJQ2QxYm1SbFptbHVaV1FuSUQ4Z2JXOWtkV3hsTG1WNGNHOXlkSE1nUFNCbVlXTjBiM0o1S0hKbGNYVnBjbVVvSnk0dmMyRnVhWFJwZW1WeUp5a3NJSEpsY1hWcGNtVW9KeTR2YVc1a1pYZ25LU3dnY21WeGRXbHlaU2duTGk0dlpHOXRMM05sYkdWamRHOXlMV1Z1WjJsdVpTY3BMQ0J5WlhGMWFYSmxLQ2N1TDJOdmJtWnBaeWNwS1NBNlhHNGdJSFI1Y0dWdlppQmtaV1pwYm1VZ1BUMDlJQ2RtZFc1amRHbHZiaWNnSmlZZ1pHVm1hVzVsTG1GdFpDQS9JR1JsWm1sdVpTaGJKeTR2YzJGdWFYUnBlbVZ5Snl3Z0p5NHZhVzVrWlhnbkxDQW5MaTR2Wkc5dEwzTmxiR1ZqZEc5eUxXVnVaMmx1WlNjc0lDY3VMMk52Ym1acFp5ZGRMQ0JtWVdOMGIzSjVLU0E2WEc0Z0lDaG5iRzlpWVd3Z1BTQjBlWEJsYjJZZ1oyeHZZbUZzVkdocGN5QWhQVDBnSjNWdVpHVm1hVzVsWkNjZ1B5Qm5iRzlpWVd4VWFHbHpJRG9nWjJ4dlltRnNJSHg4SUhObGJHWXNJR2RzYjJKaGJDNVVaVzF3YkdGMFpVWmhZM1J2Y25rZ1BTQm1ZV04wYjNKNUtHZHNiMkpoYkM1VFlXNXBkR2w2WlhJc0lHZHNiMkpoYkM1SmJtUmxlQ3dnWjJ4dlltRnNMbE5sYkdWamRHOXlSVzVuYVc1bExDQm5iRzlpWVd3dVEyOXVabWxuS1NrN1hHNTlLU2gwYUdsekxDQW9ablZ1WTNScGIyNGdLSE5oYm1sMGFYcGxjaXdnYVc1a1pYZ3NJRk5sYkdWamRHOXlSVzVuYVc1bExDQkRiMjVtYVdjcElIc2dKM1Z6WlNCemRISnBZM1FuTzF4dVhHNGdJR052Ym5OMElGOXBiblJsY205d1JHVm1ZWFZzZEV4bFoyRmplU0E5SUdVZ1BUNGdaU0FtSmlCMGVYQmxiMllnWlNBOVBUMGdKMjlpYW1WamRDY2dKaVlnSjJSbFptRjFiSFFuSUdsdUlHVWdQeUJsSURvZ2V5QmtaV1poZFd4ME9pQmxJSDA3WEc1Y2JpQWdZMjl1YzNRZ1UyVnNaV04wYjNKRmJtZHBibVZmWDJSbFptRjFiSFFnUFNBdktpTmZYMUJWVWtWZlh5b3ZYMmx1ZEdWeWIzQkVaV1poZFd4MFRHVm5ZV041S0ZObGJHVmpkRzl5Ulc1bmFXNWxLVHRjYmlBZ1kyOXVjM1FnUTI5dVptbG5YMTlrWldaaGRXeDBJRDBnTHlvalgxOVFWVkpGWDE4cUwxOXBiblJsY205d1JHVm1ZWFZzZEV4bFoyRmplU2hEYjI1bWFXY3BPMXh1WEc0Z0lDOHFLbHh1SUNBZ0tpQXRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMVnh1SUNBZ0tpQkNiMjkwYzNSeVlYQWdLSFkxTGpJdU15azZJSFYwYVd3dmRHVnRjR3hoZEdVdFptRmpkRzl5ZVM1cWMxeHVJQ0FnS2lCTWFXTmxibk5sWkNCMWJtUmxjaUJOU1ZRZ0tHaDBkSEJ6T2k4dloybDBhSFZpTG1OdmJTOTBkMkp6TDJKdmIzUnpkSEpoY0M5aWJHOWlMMjFoYVc0dlRFbERSVTVUUlNsY2JpQWdJQ29nTFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMxY2JpQWdJQ292WEc0Z0lDOHFLbHh1SUNBZ0tpQkRiMjV6ZEdGdWRITmNiaUFnSUNvdlhHNWNiaUFnWTI5dWMzUWdUa0ZOUlNBOUlDZFVaVzF3YkdGMFpVWmhZM1J2Y25rbk8xeHVJQ0JqYjI1emRDQkVaV1poZFd4MElEMGdlMXh1SUNBZ0lHRnNiRzkzVEdsemREb2djMkZ1YVhScGVtVnlMa1JsWm1GMWJIUkJiR3h2ZDJ4cGMzUXNYRzRnSUNBZ1kyOXVkR1Z1ZERvZ2UzMHNYRzRnSUNBZ0x5OGdleUJ6Wld4bFkzUnZjaUE2SUhSbGVIUWdMQ0FnYzJWc1pXTjBiM0l5SURvZ2RHVjRkRElnTENCOVhHNGdJQ0FnWlhoMGNtRkRiR0Z6Y3pvZ0p5Y3NYRzRnSUNBZ2FIUnRiRG9nWm1Gc2MyVXNYRzRnSUNBZ2MyRnVhWFJwZW1VNklIUnlkV1VzWEc0Z0lDQWdjMkZ1YVhScGVtVkdiam9nYm5Wc2JDeGNiaUFnSUNCMFpXMXdiR0YwWlRvZ0p6eGthWFkrUEM5a2FYWStKMXh1SUNCOU8xeHVJQ0JqYjI1emRDQkVaV1poZFd4MFZIbHdaU0E5SUh0Y2JpQWdJQ0JoYkd4dmQweHBjM1E2SUNkdlltcGxZM1FuTEZ4dUlDQWdJR052Ym5SbGJuUTZJQ2R2WW1wbFkzUW5MRnh1SUNBZ0lHVjRkSEpoUTJ4aGMzTTZJQ2NvYzNSeWFXNW5mR1oxYm1OMGFXOXVLU2NzWEc0Z0lDQWdhSFJ0YkRvZ0oySnZiMnhsWVc0bkxGeHVJQ0FnSUhOaGJtbDBhWHBsT2lBblltOXZiR1ZoYmljc1hHNGdJQ0FnYzJGdWFYUnBlbVZHYmpvZ0p5aHVkV3hzZkdaMWJtTjBhVzl1S1Njc1hHNGdJQ0FnZEdWdGNHeGhkR1U2SUNkemRISnBibWNuWEc0Z0lIMDdYRzRnSUdOdmJuTjBJRVJsWm1GMWJIUkRiMjUwWlc1MFZIbHdaU0E5SUh0Y2JpQWdJQ0JsYm5SeWVUb2dKeWh6ZEhKcGJtZDhaV3hsYldWdWRIeG1kVzVqZEdsdmJueHVkV3hzS1Njc1hHNGdJQ0FnYzJWc1pXTjBiM0k2SUNjb2MzUnlhVzVuZkdWc1pXMWxiblFwSjF4dUlDQjlPMXh1SUNBdktpcGNiaUFnSUNvZ1EyeGhjM01nWkdWbWFXNXBkR2x2Ymx4dUlDQWdLaTljYmx4dUlDQmpiR0Z6Y3lCVVpXMXdiR0YwWlVaaFkzUnZjbmtnWlhoMFpXNWtjeUJEYjI1bWFXZGZYMlJsWm1GMWJIUXVaR1ZtWVhWc2RDQjdYRzRnSUNBZ1kyOXVjM1J5ZFdOMGIzSW9ZMjl1Wm1sbktTQjdYRzRnSUNBZ0lDQnpkWEJsY2lncE8xeHVJQ0FnSUNBZ2RHaHBjeTVmWTI5dVptbG5JRDBnZEdocGN5NWZaMlYwUTI5dVptbG5LR052Ym1acFp5azdYRzRnSUNBZ2ZTQXZMeUJIWlhSMFpYSnpYRzVjYmx4dUlDQWdJSE4wWVhScFl5Qm5aWFFnUkdWbVlYVnNkQ2dwSUh0Y2JpQWdJQ0FnSUhKbGRIVnliaUJFWldaaGRXeDBPMXh1SUNBZ0lIMWNibHh1SUNBZ0lITjBZWFJwWXlCblpYUWdSR1ZtWVhWc2RGUjVjR1VvS1NCN1hHNGdJQ0FnSUNCeVpYUjFjbTRnUkdWbVlYVnNkRlI1Y0dVN1hHNGdJQ0FnZlZ4dVhHNGdJQ0FnYzNSaGRHbGpJR2RsZENCT1FVMUZLQ2tnZTF4dUlDQWdJQ0FnY21WMGRYSnVJRTVCVFVVN1hHNGdJQ0FnZlNBdkx5QlFkV0pzYVdOY2JseHVYRzRnSUNBZ1oyVjBRMjl1ZEdWdWRDZ3BJSHRjYmlBZ0lDQWdJSEpsZEhWeWJpQlBZbXBsWTNRdWRtRnNkV1Z6S0hSb2FYTXVYMk52Ym1acFp5NWpiMjUwWlc1MEtTNXRZWEFvWTI5dVptbG5JRDArSUhSb2FYTXVYM0psYzI5c2RtVlFiM056YVdKc1pVWjFibU4wYVc5dUtHTnZibVpwWnlrcExtWnBiSFJsY2loQ2IyOXNaV0Z1S1R0Y2JpQWdJQ0I5WEc1Y2JpQWdJQ0JvWVhORGIyNTBaVzUwS0NrZ2UxeHVJQ0FnSUNBZ2NtVjBkWEp1SUhSb2FYTXVaMlYwUTI5dWRHVnVkQ2dwTG14bGJtZDBhQ0ErSURBN1hHNGdJQ0FnZlZ4dVhHNGdJQ0FnWTJoaGJtZGxRMjl1ZEdWdWRDaGpiMjUwWlc1MEtTQjdYRzRnSUNBZ0lDQjBhR2x6TGw5amFHVmphME52Ym5SbGJuUW9ZMjl1ZEdWdWRDazdYRzVjYmlBZ0lDQWdJSFJvYVhNdVgyTnZibVpwWnk1amIyNTBaVzUwSUQwZ2V5QXVMaTUwYUdsekxsOWpiMjVtYVdjdVkyOXVkR1Z1ZEN4Y2JpQWdJQ0FnSUNBZ0xpNHVZMjl1ZEdWdWRGeHVJQ0FnSUNBZ2ZUdGNiaUFnSUNBZ0lISmxkSFZ5YmlCMGFHbHpPMXh1SUNBZ0lIMWNibHh1SUNBZ0lIUnZTSFJ0YkNncElIdGNiaUFnSUNBZ0lHTnZibk4wSUhSbGJYQnNZWFJsVjNKaGNIQmxjaUE5SUdSdlkzVnRaVzUwTG1OeVpXRjBaVVZzWlcxbGJuUW9KMlJwZGljcE8xeHVJQ0FnSUNBZ2RHVnRjR3hoZEdWWGNtRndjR1Z5TG1sdWJtVnlTRlJOVENBOUlIUm9hWE11WDIxaGVXSmxVMkZ1YVhScGVtVW9kR2hwY3k1ZlkyOXVabWxuTG5SbGJYQnNZWFJsS1R0Y2JseHVJQ0FnSUNBZ1ptOXlJQ2hqYjI1emRDQmJjMlZzWldOMGIzSXNJSFJsZUhSZElHOW1JRTlpYW1WamRDNWxiblJ5YVdWektIUm9hWE11WDJOdmJtWnBaeTVqYjI1MFpXNTBLU2tnZTF4dUlDQWdJQ0FnSUNCMGFHbHpMbDl6WlhSRGIyNTBaVzUwS0hSbGJYQnNZWFJsVjNKaGNIQmxjaXdnZEdWNGRDd2djMlZzWldOMGIzSXBPMXh1SUNBZ0lDQWdmVnh1WEc0Z0lDQWdJQ0JqYjI1emRDQjBaVzF3YkdGMFpTQTlJSFJsYlhCc1lYUmxWM0poY0hCbGNpNWphR2xzWkhKbGJsc3dYVHRjYmx4dUlDQWdJQ0FnWTI5dWMzUWdaWGgwY21GRGJHRnpjeUE5SUhSb2FYTXVYM0psYzI5c2RtVlFiM056YVdKc1pVWjFibU4wYVc5dUtIUm9hWE11WDJOdmJtWnBaeTVsZUhSeVlVTnNZWE56S1R0Y2JseHVJQ0FnSUNBZ2FXWWdLR1Y0ZEhKaFEyeGhjM01wSUh0Y2JpQWdJQ0FnSUNBZ2RHVnRjR3hoZEdVdVkyeGhjM05NYVhOMExtRmtaQ2d1TGk1bGVIUnlZVU5zWVhOekxuTndiR2wwS0NjZ0p5a3BPMXh1SUNBZ0lDQWdmVnh1WEc0Z0lDQWdJQ0J5WlhSMWNtNGdkR1Z0Y0d4aGRHVTdYRzRnSUNBZ2ZTQXZMeUJRY21sMllYUmxYRzVjYmx4dUlDQWdJRjkwZVhCbFEyaGxZMnREYjI1bWFXY29ZMjl1Wm1sbktTQjdYRzRnSUNBZ0lDQnpkWEJsY2k1ZmRIbHdaVU5vWldOclEyOXVabWxuS0dOdmJtWnBaeWs3WEc1Y2JpQWdJQ0FnSUhSb2FYTXVYMk5vWldOclEyOXVkR1Z1ZENoamIyNW1hV2N1WTI5dWRHVnVkQ2s3WEc0Z0lDQWdmVnh1WEc0Z0lDQWdYMk5vWldOclEyOXVkR1Z1ZENoaGNtY3BJSHRjYmlBZ0lDQWdJR1p2Y2lBb1kyOXVjM1FnVzNObGJHVmpkRzl5TENCamIyNTBaVzUwWFNCdlppQlBZbXBsWTNRdVpXNTBjbWxsY3loaGNtY3BLU0I3WEc0Z0lDQWdJQ0FnSUhOMWNHVnlMbDkwZVhCbFEyaGxZMnREYjI1bWFXY29lMXh1SUNBZ0lDQWdJQ0FnSUhObGJHVmpkRzl5TEZ4dUlDQWdJQ0FnSUNBZ0lHVnVkSEo1T2lCamIyNTBaVzUwWEc0Z0lDQWdJQ0FnSUgwc0lFUmxabUYxYkhSRGIyNTBaVzUwVkhsd1pTazdYRzRnSUNBZ0lDQjlYRzRnSUNBZ2ZWeHVYRzRnSUNBZ1gzTmxkRU52Ym5SbGJuUW9kR1Z0Y0d4aGRHVXNJR052Ym5SbGJuUXNJSE5sYkdWamRHOXlLU0I3WEc0Z0lDQWdJQ0JqYjI1emRDQjBaVzF3YkdGMFpVVnNaVzFsYm5RZ1BTQlRaV3hsWTNSdmNrVnVaMmx1WlY5ZlpHVm1ZWFZzZEM1a1pXWmhkV3gwTG1acGJtUlBibVVvYzJWc1pXTjBiM0lzSUhSbGJYQnNZWFJsS1R0Y2JseHVJQ0FnSUNBZ2FXWWdLQ0YwWlcxd2JHRjBaVVZzWlcxbGJuUXBJSHRjYmlBZ0lDQWdJQ0FnY21WMGRYSnVPMXh1SUNBZ0lDQWdmVnh1WEc0Z0lDQWdJQ0JqYjI1MFpXNTBJRDBnZEdocGN5NWZjbVZ6YjJ4MlpWQnZjM05wWW14bFJuVnVZM1JwYjI0b1kyOXVkR1Z1ZENrN1hHNWNiaUFnSUNBZ0lHbG1JQ2doWTI5dWRHVnVkQ2tnZTF4dUlDQWdJQ0FnSUNCMFpXMXdiR0YwWlVWc1pXMWxiblF1Y21WdGIzWmxLQ2s3WEc0Z0lDQWdJQ0FnSUhKbGRIVnlianRjYmlBZ0lDQWdJSDFjYmx4dUlDQWdJQ0FnYVdZZ0tHbHVaR1Y0TG1selJXeGxiV1Z1ZENoamIyNTBaVzUwS1NrZ2UxeHVJQ0FnSUNBZ0lDQjBhR2x6TGw5d2RYUkZiR1Z0Wlc1MFNXNVVaVzF3YkdGMFpTaHBibVJsZUM1blpYUkZiR1Z0Wlc1MEtHTnZiblJsYm5RcExDQjBaVzF3YkdGMFpVVnNaVzFsYm5RcE8xeHVYRzRnSUNBZ0lDQWdJSEpsZEhWeWJqdGNiaUFnSUNBZ0lIMWNibHh1SUNBZ0lDQWdhV1lnS0hSb2FYTXVYMk52Ym1acFp5NW9kRzFzS1NCN1hHNGdJQ0FnSUNBZ0lIUmxiWEJzWVhSbFJXeGxiV1Z1ZEM1cGJtNWxja2hVVFV3Z1BTQjBhR2x6TGw5dFlYbGlaVk5oYm1sMGFYcGxLR052Ym5SbGJuUXBPMXh1SUNBZ0lDQWdJQ0J5WlhSMWNtNDdYRzRnSUNBZ0lDQjlYRzVjYmlBZ0lDQWdJSFJsYlhCc1lYUmxSV3hsYldWdWRDNTBaWGgwUTI5dWRHVnVkQ0E5SUdOdmJuUmxiblE3WEc0Z0lDQWdmVnh1WEc0Z0lDQWdYMjFoZVdKbFUyRnVhWFJwZW1Vb1lYSm5LU0I3WEc0Z0lDQWdJQ0J5WlhSMWNtNGdkR2hwY3k1ZlkyOXVabWxuTG5OaGJtbDBhWHBsSUQ4Z2MyRnVhWFJwZW1WeUxuTmhibWwwYVhwbFNIUnRiQ2hoY21jc0lIUm9hWE11WDJOdmJtWnBaeTVoYkd4dmQweHBjM1FzSUhSb2FYTXVYMk52Ym1acFp5NXpZVzVwZEdsNlpVWnVLU0E2SUdGeVp6dGNiaUFnSUNCOVhHNWNiaUFnSUNCZmNtVnpiMngyWlZCdmMzTnBZbXhsUm5WdVkzUnBiMjRvWVhKbktTQjdYRzRnSUNBZ0lDQnlaWFIxY200Z2RIbHdaVzltSUdGeVp5QTlQVDBnSjJaMWJtTjBhVzl1SnlBL0lHRnlaeWgwYUdsektTQTZJR0Z5Wnp0Y2JpQWdJQ0I5WEc1Y2JpQWdJQ0JmY0hWMFJXeGxiV1Z1ZEVsdVZHVnRjR3hoZEdVb1pXeGxiV1Z1ZEN3Z2RHVnRjR3hoZEdWRmJHVnRaVzUwS1NCN1hHNGdJQ0FnSUNCcFppQW9kR2hwY3k1ZlkyOXVabWxuTG1oMGJXd3BJSHRjYmlBZ0lDQWdJQ0FnZEdWdGNHeGhkR1ZGYkdWdFpXNTBMbWx1Ym1WeVNGUk5UQ0E5SUNjbk8xeHVJQ0FnSUNBZ0lDQjBaVzF3YkdGMFpVVnNaVzFsYm5RdVlYQndaVzVrS0dWc1pXMWxiblFwTzF4dUlDQWdJQ0FnSUNCeVpYUjFjbTQ3WEc0Z0lDQWdJQ0I5WEc1Y2JpQWdJQ0FnSUhSbGJYQnNZWFJsUld4bGJXVnVkQzUwWlhoMFEyOXVkR1Z1ZENBOUlHVnNaVzFsYm5RdWRHVjRkRU52Ym5SbGJuUTdYRzRnSUNBZ2ZWeHVYRzRnSUgxY2JseHVJQ0J5WlhSMWNtNGdWR1Z0Y0d4aGRHVkdZV04wYjNKNU8xeHVYRzU5S1NrN1hHNHZMeU1nYzI5MWNtTmxUV0Z3Y0dsdVoxVlNURDEwWlcxd2JHRjBaUzFtWVdOMGIzSjVMbXB6TG0xaGNGeHVJaXdpTHlvaFhHNGdLaUJxVVhWbGNua2dTbUYyWVZOamNtbHdkQ0JNYVdKeVlYSjVJSFl6TGpZdU1seHVJQ29nYUhSMGNITTZMeTlxY1hWbGNua3VZMjl0TDF4dUlDcGNiaUFxSUVsdVkyeDFaR1Z6SUZOcGVucHNaUzVxYzF4dUlDb2dhSFIwY0hNNkx5OXphWHA2YkdWcWN5NWpiMjB2WEc0Z0tseHVJQ29nUTI5d2VYSnBaMmgwSUU5d1pXNUtVeUJHYjNWdVpHRjBhVzl1SUdGdVpDQnZkR2hsY2lCamIyNTBjbWxpZFhSdmNuTmNiaUFxSUZKbGJHVmhjMlZrSUhWdVpHVnlJSFJvWlNCTlNWUWdiR2xqWlc1elpWeHVJQ29nYUhSMGNITTZMeTlxY1hWbGNua3ViM0puTDJ4cFkyVnVjMlZjYmlBcVhHNGdLaUJFWVhSbE9pQXlNREl5TFRFeUxURXpWREUwT2pVMldseHVJQ292WEc0b0lHWjFibU4wYVc5dUtDQm5iRzlpWVd3c0lHWmhZM1J2Y25rZ0tTQjdYRzVjYmx4MFhDSjFjMlVnYzNSeWFXTjBYQ0k3WEc1Y2JseDBhV1lnS0NCMGVYQmxiMllnYlc5a2RXeGxJRDA5UFNCY0ltOWlhbVZqZEZ3aUlDWW1JSFI1Y0dWdlppQnRiMlIxYkdVdVpYaHdiM0owY3lBOVBUMGdYQ0p2WW1wbFkzUmNJaUFwSUh0Y2JseHVYSFJjZEM4dklFWnZjaUJEYjIxdGIyNUtVeUJoYm1RZ1EyOXRiVzl1U2xNdGJHbHJaU0JsYm5acGNtOXViV1Z1ZEhNZ2QyaGxjbVVnWVNCd2NtOXdaWElnWUhkcGJtUnZkMkJjYmx4MFhIUXZMeUJwY3lCd2NtVnpaVzUwTENCbGVHVmpkWFJsSUhSb1pTQm1ZV04wYjNKNUlHRnVaQ0JuWlhRZ2FsRjFaWEo1TGx4dVhIUmNkQzh2SUVadmNpQmxiblpwY205dWJXVnVkSE1nZEdoaGRDQmtieUJ1YjNRZ2FHRjJaU0JoSUdCM2FXNWtiM2RnSUhkcGRHZ2dZU0JnWkc5amRXMWxiblJnWEc1Y2RGeDBMeThnS0hOMVkyZ2dZWE1nVG05a1pTNXFjeWtzSUdWNGNHOXpaU0JoSUdaaFkzUnZjbmtnWVhNZ2JXOWtkV3hsTG1WNGNHOXlkSE11WEc1Y2RGeDBMeThnVkdocGN5QmhZMk5sYm5SMVlYUmxjeUIwYUdVZ2JtVmxaQ0JtYjNJZ2RHaGxJR055WldGMGFXOXVJRzltSUdFZ2NtVmhiQ0JnZDJsdVpHOTNZQzVjYmx4MFhIUXZMeUJsTG1jdUlIWmhjaUJxVVhWbGNua2dQU0J5WlhGMWFYSmxLRndpYW5GMVpYSjVYQ0lwS0hkcGJtUnZkeWs3WEc1Y2RGeDBMeThnVTJWbElIUnBZMnRsZENCMGNtRmpMVEUwTlRRNUlHWnZjaUJ0YjNKbElHbHVabTh1WEc1Y2RGeDBiVzlrZFd4bExtVjRjRzl5ZEhNZ1BTQm5iRzlpWVd3dVpHOWpkVzFsYm5RZ1AxeHVYSFJjZEZ4MFptRmpkRzl5ZVNnZ1oyeHZZbUZzTENCMGNuVmxJQ2tnT2x4dVhIUmNkRngwWm5WdVkzUnBiMjRvSUhjZ0tTQjdYRzVjZEZ4MFhIUmNkR2xtSUNnZ0lYY3VaRzlqZFcxbGJuUWdLU0I3WEc1Y2RGeDBYSFJjZEZ4MGRHaHliM2NnYm1WM0lFVnljbTl5S0NCY0ltcFJkV1Z5ZVNCeVpYRjFhWEpsY3lCaElIZHBibVJ2ZHlCM2FYUm9JR0VnWkc5amRXMWxiblJjSWlBcE8xeHVYSFJjZEZ4MFhIUjlYRzVjZEZ4MFhIUmNkSEpsZEhWeWJpQm1ZV04wYjNKNUtDQjNJQ2s3WEc1Y2RGeDBYSFI5TzF4dVhIUjlJR1ZzYzJVZ2UxeHVYSFJjZEdaaFkzUnZjbmtvSUdkc2IySmhiQ0FwTzF4dVhIUjlYRzVjYmk4dklGQmhjM01nZEdocGN5QnBaaUIzYVc1a2IzY2dhWE1nYm05MElHUmxabWx1WldRZ2VXVjBYRzU5SUNrb0lIUjVjR1Z2WmlCM2FXNWtiM2NnSVQwOUlGd2lkVzVrWldacGJtVmtYQ0lnUHlCM2FXNWtiM2NnT2lCMGFHbHpMQ0JtZFc1amRHbHZiaWdnZDJsdVpHOTNMQ0J1YjBkc2IySmhiQ0FwSUh0Y2JseHVMeThnUldSblpTQThQU0F4TWlBdElERXpLeXdnUm1seVpXWnZlQ0E4UFRFNElDMGdORFVyTENCSlJTQXhNQ0F0SURFeExDQlRZV1poY21rZ05TNHhJQzBnT1Nzc0lHbFBVeUEySUMwZ09TNHhYRzR2THlCMGFISnZkeUJsZUdObGNIUnBiMjV6SUhkb1pXNGdibTl1TFhOMGNtbGpkQ0JqYjJSbElDaGxMbWN1TENCQlUxQXVUa1ZVSURRdU5Ta2dZV05qWlhOelpYTWdjM1J5YVdOMElHMXZaR1ZjYmk4dklHRnlaM1Z0Wlc1MGN5NWpZV3hzWldVdVkyRnNiR1Z5SUNoMGNtRmpMVEV6TXpNMUtTNGdRblYwSUdGeklHOW1JR3BSZFdWeWVTQXpMakFnS0RJd01UWXBMQ0J6ZEhKcFkzUWdiVzlrWlNCemFHOTFiR1FnWW1VZ1kyOXRiVzl1WEc0dkx5QmxibTkxWjJnZ2RHaGhkQ0JoYkd3Z2MzVmphQ0JoZEhSbGJYQjBjeUJoY21VZ1ozVmhjbVJsWkNCcGJpQmhJSFJ5ZVNCaWJHOWpheTVjYmx3aWRYTmxJSE4wY21samRGd2lPMXh1WEc1MllYSWdZWEp5SUQwZ1cxMDdYRzVjYm5aaGNpQm5aWFJRY205MGJ5QTlJRTlpYW1WamRDNW5aWFJRY205MGIzUjVjR1ZQWmp0Y2JseHVkbUZ5SUhOc2FXTmxJRDBnWVhKeUxuTnNhV05sTzF4dVhHNTJZWElnWm14aGRDQTlJR0Z5Y2k1bWJHRjBJRDhnWm5WdVkzUnBiMjRvSUdGeWNtRjVJQ2tnZTF4dVhIUnlaWFIxY200Z1lYSnlMbVpzWVhRdVkyRnNiQ2dnWVhKeVlYa2dLVHRjYm4wZ09pQm1kVzVqZEdsdmJpZ2dZWEp5WVhrZ0tTQjdYRzVjZEhKbGRIVnliaUJoY25JdVkyOXVZMkYwTG1Gd2NHeDVLQ0JiWFN3Z1lYSnlZWGtnS1R0Y2JuMDdYRzVjYmx4dWRtRnlJSEIxYzJnZ1BTQmhjbkl1Y0hWemFEdGNibHh1ZG1GeUlHbHVaR1Y0VDJZZ1BTQmhjbkl1YVc1a1pYaFBaanRjYmx4dWRtRnlJR05zWVhOek1uUjVjR1VnUFNCN2ZUdGNibHh1ZG1GeUlIUnZVM1J5YVc1bklEMGdZMnhoYzNNeWRIbHdaUzUwYjFOMGNtbHVaenRjYmx4dWRtRnlJR2hoYzA5M2JpQTlJR05zWVhOek1uUjVjR1V1YUdGelQzZHVVSEp2Y0dWeWRIazdYRzVjYm5aaGNpQm1ibFJ2VTNSeWFXNW5JRDBnYUdGelQzZHVMblJ2VTNSeWFXNW5PMXh1WEc1MllYSWdUMkpxWldOMFJuVnVZM1JwYjI1VGRISnBibWNnUFNCbWJsUnZVM1J5YVc1bkxtTmhiR3dvSUU5aWFtVmpkQ0FwTzF4dVhHNTJZWElnYzNWd2NHOXlkQ0E5SUh0OU8xeHVYRzUyWVhJZ2FYTkdkVzVqZEdsdmJpQTlJR1oxYm1OMGFXOXVJR2x6Um5WdVkzUnBiMjRvSUc5aWFpQXBJSHRjYmx4dVhIUmNkQzh2SUZOMWNIQnZjblE2SUVOb2NtOXRaU0E4UFRVM0xDQkdhWEpsWm05NElEdzlOVEpjYmx4MFhIUXZMeUJKYmlCemIyMWxJR0p5YjNkelpYSnpMQ0IwZVhCbGIyWWdjbVYwZFhKdWN5QmNJbVoxYm1OMGFXOXVYQ0lnWm05eUlFaFVUVXdnUEc5aWFtVmpkRDRnWld4bGJXVnVkSE5jYmx4MFhIUXZMeUFvYVM1bExpd2dZSFI1Y0dWdlppQmtiMk4xYldWdWRDNWpjbVZoZEdWRmJHVnRaVzUwS0NCY0ltOWlhbVZqZEZ3aUlDa2dQVDA5SUZ3aVpuVnVZM1JwYjI1Y0ltQXBMbHh1WEhSY2RDOHZJRmRsSUdSdmJpZDBJSGRoYm5RZ2RHOGdZMnhoYzNOcFpua2dLbUZ1ZVNvZ1JFOU5JRzV2WkdVZ1lYTWdZU0JtZFc1amRHbHZiaTVjYmx4MFhIUXZMeUJUZFhCd2IzSjBPaUJSZEZkbFlpQThQVE11T0M0MUxDQlhaV0pMYVhRZ1BEMDFNelF1TXpRc0lIZHJhSFJ0YkhSdmNHUm1JSFJ2YjJ3Z1BEMHdMakV5TGpWY2JseDBYSFF2THlCUWJIVnpJR1p2Y2lCdmJHUWdWMlZpUzJsMExDQjBlWEJsYjJZZ2NtVjBkWEp1Y3lCY0ltWjFibU4wYVc5dVhDSWdabTl5SUVoVVRVd2dZMjlzYkdWamRHbHZibk5jYmx4MFhIUXZMeUFvWlM1bkxpd2dZSFI1Y0dWdlppQmtiMk4xYldWdWRDNW5aWFJGYkdWdFpXNTBjMEo1VkdGblRtRnRaU2hjSW1ScGRsd2lLU0E5UFQwZ1hDSm1kVzVqZEdsdmJsd2lZQ2t1SUNobmFDMDBOelUyS1Z4dVhIUmNkSEpsZEhWeWJpQjBlWEJsYjJZZ2IySnFJRDA5UFNCY0ltWjFibU4wYVc5dVhDSWdKaVlnZEhsd1pXOW1JRzlpYWk1dWIyUmxWSGx3WlNBaFBUMGdYQ0p1ZFcxaVpYSmNJaUFtSmx4dVhIUmNkRngwZEhsd1pXOW1JRzlpYWk1cGRHVnRJQ0U5UFNCY0ltWjFibU4wYVc5dVhDSTdYRzVjZEgwN1hHNWNibHh1ZG1GeUlHbHpWMmx1Wkc5M0lEMGdablZ1WTNScGIyNGdhWE5YYVc1a2IzY29JRzlpYWlBcElIdGNibHgwWEhSeVpYUjFjbTRnYjJKcUlDRTlJRzUxYkd3Z0ppWWdiMkpxSUQwOVBTQnZZbW91ZDJsdVpHOTNPMXh1WEhSOU8xeHVYRzVjYm5aaGNpQmtiMk4xYldWdWRDQTlJSGRwYm1SdmR5NWtiMk4xYldWdWREdGNibHh1WEc1Y2JseDBkbUZ5SUhCeVpYTmxjblpsWkZOamNtbHdkRUYwZEhKcFluVjBaWE1nUFNCN1hHNWNkRngwZEhsd1pUb2dkSEoxWlN4Y2JseDBYSFJ6Y21NNklIUnlkV1VzWEc1Y2RGeDBibTl1WTJVNklIUnlkV1VzWEc1Y2RGeDBibTlOYjJSMWJHVTZJSFJ5ZFdWY2JseDBmVHRjYmx4dVhIUm1kVzVqZEdsdmJpQkVUMDFGZG1Gc0tDQmpiMlJsTENCdWIyUmxMQ0JrYjJNZ0tTQjdYRzVjZEZ4MFpHOWpJRDBnWkc5aklIeDhJR1J2WTNWdFpXNTBPMXh1WEc1Y2RGeDBkbUZ5SUdrc0lIWmhiQ3hjYmx4MFhIUmNkSE5qY21sd2RDQTlJR1J2WXk1amNtVmhkR1ZGYkdWdFpXNTBLQ0JjSW5OamNtbHdkRndpSUNrN1hHNWNibHgwWEhSelkzSnBjSFF1ZEdWNGRDQTlJR052WkdVN1hHNWNkRngwYVdZZ0tDQnViMlJsSUNrZ2UxeHVYSFJjZEZ4MFptOXlJQ2dnYVNCcGJpQndjbVZ6WlhKMlpXUlRZM0pwY0hSQmRIUnlhV0oxZEdWeklDa2dlMXh1WEc1Y2RGeDBYSFJjZEM4dklGTjFjSEJ2Y25RNklFWnBjbVZtYjNnZ05qUXJMQ0JGWkdkbElERTRLMXh1WEhSY2RGeDBYSFF2THlCVGIyMWxJR0p5YjNkelpYSnpJR1J2YmlkMElITjFjSEJ2Y25RZ2RHaGxJRndpYm05dVkyVmNJaUJ3Y205d1pYSjBlU0J2YmlCelkzSnBjSFJ6TGx4dVhIUmNkRngwWEhRdkx5QlBiaUIwYUdVZ2IzUm9aWElnYUdGdVpDd2dhblZ6ZENCMWMybHVaeUJnWjJWMFFYUjBjbWxpZFhSbFlDQnBjeUJ1YjNRZ1pXNXZkV2RvSUdGelhHNWNkRngwWEhSY2RDOHZJSFJvWlNCZ2JtOXVZMlZnSUdGMGRISnBZblYwWlNCcGN5QnlaWE5sZENCMGJ5QmhiaUJsYlhCMGVTQnpkSEpwYm1jZ2QyaGxibVYyWlhJZ2FYUmNibHgwWEhSY2RGeDBMeThnWW1WamIyMWxjeUJpY205M2MybHVaeTFqYjI1MFpYaDBJR052Ym01bFkzUmxaQzVjYmx4MFhIUmNkRngwTHk4Z1UyVmxJR2gwZEhCek9pOHZaMmwwYUhWaUxtTnZiUzkzYUdGMGQyY3ZhSFJ0YkM5cGMzTjFaWE12TWpNMk9WeHVYSFJjZEZ4MFhIUXZMeUJUWldVZ2FIUjBjSE02THk5b2RHMXNMbk53WldNdWQyaGhkSGRuTG05eVp5OGpibTl1WTJVdFlYUjBjbWxpZFhSbGMxeHVYSFJjZEZ4MFhIUXZMeUJVYUdVZ1lHNXZaR1V1WjJWMFFYUjBjbWxpZFhSbFlDQmphR1ZqYXlCM1lYTWdZV1JrWldRZ1ptOXlJSFJvWlNCellXdGxJRzltWEc1Y2RGeDBYSFJjZEM4dklHQnFVWFZsY25rdVoyeHZZbUZzUlhaaGJHQWdjMjhnZEdoaGRDQnBkQ0JqWVc0Z1ptRnJaU0JoSUc1dmJtTmxMV052Ym5SaGFXNXBibWNnYm05a1pWeHVYSFJjZEZ4MFhIUXZMeUIyYVdFZ1lXNGdiMkpxWldOMExseHVYSFJjZEZ4MFhIUjJZV3dnUFNCdWIyUmxXeUJwSUYwZ2ZId2dibTlrWlM1blpYUkJkSFJ5YVdKMWRHVWdKaVlnYm05a1pTNW5aWFJCZEhSeWFXSjFkR1VvSUdrZ0tUdGNibHgwWEhSY2RGeDBhV1lnS0NCMllXd2dLU0I3WEc1Y2RGeDBYSFJjZEZ4MGMyTnlhWEIwTG5ObGRFRjBkSEpwWW5WMFpTZ2dhU3dnZG1Gc0lDazdYRzVjZEZ4MFhIUmNkSDFjYmx4MFhIUmNkSDFjYmx4MFhIUjlYRzVjZEZ4MFpHOWpMbWhsWVdRdVlYQndaVzVrUTJocGJHUW9JSE5qY21sd2RDQXBMbkJoY21WdWRFNXZaR1V1Y21WdGIzWmxRMmhwYkdRb0lITmpjbWx3ZENBcE8xeHVYSFI5WEc1Y2JseHVablZ1WTNScGIyNGdkRzlVZVhCbEtDQnZZbW9nS1NCN1hHNWNkR2xtSUNnZ2IySnFJRDA5SUc1MWJHd2dLU0I3WEc1Y2RGeDBjbVYwZFhKdUlHOWlhaUFySUZ3aVhDSTdYRzVjZEgxY2JseHVYSFF2THlCVGRYQndiM0owT2lCQmJtUnliMmxrSUR3OU1pNHpJRzl1YkhrZ0tHWjFibU4wYVc5dWFYTm9JRkpsWjBWNGNDbGNibHgwY21WMGRYSnVJSFI1Y0dWdlppQnZZbW9nUFQwOUlGd2liMkpxWldOMFhDSWdmSHdnZEhsd1pXOW1JRzlpYWlBOVBUMGdYQ0ptZFc1amRHbHZibHdpSUQ5Y2JseDBYSFJqYkdGemN6SjBlWEJsV3lCMGIxTjBjbWx1Wnk1allXeHNLQ0J2WW1vZ0tTQmRJSHg4SUZ3aWIySnFaV04wWENJZ09seHVYSFJjZEhSNWNHVnZaaUJ2WW1vN1hHNTlYRzR2S2lCbmJHOWlZV3dnVTNsdFltOXNJQ292WEc0dkx5QkVaV1pwYm1sdVp5QjBhR2x6SUdkc2IySmhiQ0JwYmlBdVpYTnNhVzUwY21NdWFuTnZiaUIzYjNWc1pDQmpjbVZoZEdVZ1lTQmtZVzVuWlhJZ2IyWWdkWE5wYm1jZ2RHaGxJR2RzYjJKaGJGeHVMeThnZFc1bmRXRnlaR1ZrSUdsdUlHRnViM1JvWlhJZ2NHeGhZMlVzSUdsMElITmxaVzF6SUhOaFptVnlJSFJ2SUdSbFptbHVaU0JuYkc5aVlXd2diMjVzZVNCbWIzSWdkR2hwY3lCdGIyUjFiR1ZjYmx4dVhHNWNiblpoY2x4dVhIUjJaWEp6YVc5dUlEMGdYQ0l6TGpZdU1sd2lMRnh1WEc1Y2RDOHZJRVJsWm1sdVpTQmhJR3h2WTJGc0lHTnZjSGtnYjJZZ2FsRjFaWEo1WEc1Y2RHcFJkV1Z5ZVNBOUlHWjFibU4wYVc5dUtDQnpaV3hsWTNSdmNpd2dZMjl1ZEdWNGRDQXBJSHRjYmx4dVhIUmNkQzh2SUZSb1pTQnFVWFZsY25rZ2IySnFaV04wSUdseklHRmpkSFZoYkd4NUlHcDFjM1FnZEdobElHbHVhWFFnWTI5dWMzUnlkV04wYjNJZ0oyVnVhR0Z1WTJWa0oxeHVYSFJjZEM4dklFNWxaV1FnYVc1cGRDQnBaaUJxVVhWbGNua2dhWE1nWTJGc2JHVmtJQ2hxZFhOMElHRnNiRzkzSUdWeWNtOXlJSFJ2SUdKbElIUm9jbTkzYmlCcFppQnViM1FnYVc1amJIVmtaV1FwWEc1Y2RGeDBjbVYwZFhKdUlHNWxkeUJxVVhWbGNua3VabTR1YVc1cGRDZ2djMlZzWldOMGIzSXNJR052Ym5SbGVIUWdLVHRjYmx4MGZUdGNibHh1YWxGMVpYSjVMbVp1SUQwZ2FsRjFaWEo1TG5CeWIzUnZkSGx3WlNBOUlIdGNibHh1WEhRdkx5QlVhR1VnWTNWeWNtVnVkQ0IyWlhKemFXOXVJRzltSUdwUmRXVnllU0JpWldsdVp5QjFjMlZrWEc1Y2RHcHhkV1Z5ZVRvZ2RtVnljMmx2Yml4Y2JseHVYSFJqYjI1emRISjFZM1J2Y2pvZ2FsRjFaWEo1TEZ4dVhHNWNkQzh2SUZSb1pTQmtaV1poZFd4MElHeGxibWQwYUNCdlppQmhJR3BSZFdWeWVTQnZZbXBsWTNRZ2FYTWdNRnh1WEhSc1pXNW5kR2c2SURBc1hHNWNibHgwZEc5QmNuSmhlVG9nWm5WdVkzUnBiMjRvS1NCN1hHNWNkRngwY21WMGRYSnVJSE5zYVdObExtTmhiR3dvSUhSb2FYTWdLVHRjYmx4MGZTeGNibHh1WEhRdkx5QkhaWFFnZEdobElFNTBhQ0JsYkdWdFpXNTBJR2x1SUhSb1pTQnRZWFJqYUdWa0lHVnNaVzFsYm5RZ2MyVjBJRTlTWEc1Y2RDOHZJRWRsZENCMGFHVWdkMmh2YkdVZ2JXRjBZMmhsWkNCbGJHVnRaVzUwSUhObGRDQmhjeUJoSUdOc1pXRnVJR0Z5Y21GNVhHNWNkR2RsZERvZ1puVnVZM1JwYjI0b0lHNTFiU0FwSUh0Y2JseHVYSFJjZEM4dklGSmxkSFZ5YmlCaGJHd2dkR2hsSUdWc1pXMWxiblJ6SUdsdUlHRWdZMnhsWVc0Z1lYSnlZWGxjYmx4MFhIUnBaaUFvSUc1MWJTQTlQU0J1ZFd4c0lDa2dlMXh1WEhSY2RGeDBjbVYwZFhKdUlITnNhV05sTG1OaGJHd29JSFJvYVhNZ0tUdGNibHgwWEhSOVhHNWNibHgwWEhRdkx5QlNaWFIxY200Z2FuVnpkQ0IwYUdVZ2IyNWxJR1ZzWlcxbGJuUWdabkp2YlNCMGFHVWdjMlYwWEc1Y2RGeDBjbVYwZFhKdUlHNTFiU0E4SURBZ1B5QjBhR2x6V3lCdWRXMGdLeUIwYUdsekxteGxibWQwYUNCZElEb2dkR2hwYzFzZ2JuVnRJRjA3WEc1Y2RIMHNYRzVjYmx4MEx5OGdWR0ZyWlNCaGJpQmhjbkpoZVNCdlppQmxiR1Z0Wlc1MGN5QmhibVFnY0hWemFDQnBkQ0J2Ym5SdklIUm9aU0J6ZEdGamExeHVYSFF2THlBb2NtVjBkWEp1YVc1bklIUm9aU0J1WlhjZ2JXRjBZMmhsWkNCbGJHVnRaVzUwSUhObGRDbGNibHgwY0hWemFGTjBZV05yT2lCbWRXNWpkR2x2YmlnZ1pXeGxiWE1nS1NCN1hHNWNibHgwWEhRdkx5QkNkV2xzWkNCaElHNWxkeUJxVVhWbGNua2diV0YwWTJobFpDQmxiR1Z0Wlc1MElITmxkRnh1WEhSY2RIWmhjaUJ5WlhRZ1BTQnFVWFZsY25rdWJXVnlaMlVvSUhSb2FYTXVZMjl1YzNSeWRXTjBiM0lvS1N3Z1pXeGxiWE1nS1R0Y2JseHVYSFJjZEM4dklFRmtaQ0IwYUdVZ2IyeGtJRzlpYW1WamRDQnZiblJ2SUhSb1pTQnpkR0ZqYXlBb1lYTWdZU0J5WldabGNtVnVZMlVwWEc1Y2RGeDBjbVYwTG5CeVpYWlBZbXBsWTNRZ1BTQjBhR2x6TzF4dVhHNWNkRngwTHk4Z1VtVjBkWEp1SUhSb1pTQnVaWGRzZVMxbWIzSnRaV1FnWld4bGJXVnVkQ0J6WlhSY2JseDBYSFJ5WlhSMWNtNGdjbVYwTzF4dVhIUjlMRnh1WEc1Y2RDOHZJRVY0WldOMWRHVWdZU0JqWVd4c1ltRmpheUJtYjNJZ1pYWmxjbmtnWld4bGJXVnVkQ0JwYmlCMGFHVWdiV0YwWTJobFpDQnpaWFF1WEc1Y2RHVmhZMmc2SUdaMWJtTjBhVzl1S0NCallXeHNZbUZqYXlBcElIdGNibHgwWEhSeVpYUjFjbTRnYWxGMVpYSjVMbVZoWTJnb0lIUm9hWE1zSUdOaGJHeGlZV05ySUNrN1hHNWNkSDBzWEc1Y2JseDBiV0Z3T2lCbWRXNWpkR2x2YmlnZ1kyRnNiR0poWTJzZ0tTQjdYRzVjZEZ4MGNtVjBkWEp1SUhSb2FYTXVjSFZ6YUZOMFlXTnJLQ0JxVVhWbGNua3ViV0Z3S0NCMGFHbHpMQ0JtZFc1amRHbHZiaWdnWld4bGJTd2dhU0FwSUh0Y2JseDBYSFJjZEhKbGRIVnliaUJqWVd4c1ltRmpheTVqWVd4c0tDQmxiR1Z0TENCcExDQmxiR1Z0SUNrN1hHNWNkRngwZlNBcElDazdYRzVjZEgwc1hHNWNibHgwYzJ4cFkyVTZJR1oxYm1OMGFXOXVLQ2tnZTF4dVhIUmNkSEpsZEhWeWJpQjBhR2x6TG5CMWMyaFRkR0ZqYXlnZ2MyeHBZMlV1WVhCd2JIa29JSFJvYVhNc0lHRnlaM1Z0Wlc1MGN5QXBJQ2s3WEc1Y2RIMHNYRzVjYmx4MFptbHljM1E2SUdaMWJtTjBhVzl1S0NrZ2UxeHVYSFJjZEhKbGRIVnliaUIwYUdsekxtVnhLQ0F3SUNrN1hHNWNkSDBzWEc1Y2JseDBiR0Z6ZERvZ1puVnVZM1JwYjI0b0tTQjdYRzVjZEZ4MGNtVjBkWEp1SUhSb2FYTXVaWEVvSUMweElDazdYRzVjZEgwc1hHNWNibHgwWlhabGJqb2dablZ1WTNScGIyNG9LU0I3WEc1Y2RGeDBjbVYwZFhKdUlIUm9hWE11Y0hWemFGTjBZV05yS0NCcVVYVmxjbmt1WjNKbGNDZ2dkR2hwY3l3Z1puVnVZM1JwYjI0b0lGOWxiR1Z0TENCcElDa2dlMXh1WEhSY2RGeDBjbVYwZFhKdUlDZ2dhU0FySURFZ0tTQWxJREk3WEc1Y2RGeDBmU0FwSUNrN1hHNWNkSDBzWEc1Y2JseDBiMlJrT2lCbWRXNWpkR2x2YmlncElIdGNibHgwWEhSeVpYUjFjbTRnZEdocGN5NXdkWE5vVTNSaFkyc29JR3BSZFdWeWVTNW5jbVZ3S0NCMGFHbHpMQ0JtZFc1amRHbHZiaWdnWDJWc1pXMHNJR2tnS1NCN1hHNWNkRngwWEhSeVpYUjFjbTRnYVNBbElESTdYRzVjZEZ4MGZTQXBJQ2s3WEc1Y2RIMHNYRzVjYmx4MFpYRTZJR1oxYm1OMGFXOXVLQ0JwSUNrZ2UxeHVYSFJjZEhaaGNpQnNaVzRnUFNCMGFHbHpMbXhsYm1kMGFDeGNibHgwWEhSY2RHb2dQU0FyYVNBcklDZ2dhU0E4SURBZ1B5QnNaVzRnT2lBd0lDazdYRzVjZEZ4MGNtVjBkWEp1SUhSb2FYTXVjSFZ6YUZOMFlXTnJLQ0JxSUQ0OUlEQWdKaVlnYWlBOElHeGxiaUEvSUZzZ2RHaHBjMXNnYWlCZElGMGdPaUJiWFNBcE8xeHVYSFI5TEZ4dVhHNWNkR1Z1WkRvZ1puVnVZM1JwYjI0b0tTQjdYRzVjZEZ4MGNtVjBkWEp1SUhSb2FYTXVjSEpsZGs5aWFtVmpkQ0I4ZkNCMGFHbHpMbU52Ym5OMGNuVmpkRzl5S0NrN1hHNWNkSDBzWEc1Y2JseDBMeThnUm05eUlHbHVkR1Z5Ym1Gc0lIVnpaU0J2Ym14NUxseHVYSFF2THlCQ1pXaGhkbVZ6SUd4cGEyVWdZVzRnUVhKeVlYa25jeUJ0WlhSb2IyUXNJRzV2ZENCc2FXdGxJR0VnYWxGMVpYSjVJRzFsZEdodlpDNWNibHgwY0hWemFEb2djSFZ6YUN4Y2JseDBjMjl5ZERvZ1lYSnlMbk52Y25Rc1hHNWNkSE53YkdsalpUb2dZWEp5TG5Od2JHbGpaVnh1ZlR0Y2JseHVhbEYxWlhKNUxtVjRkR1Z1WkNBOUlHcFJkV1Z5ZVM1bWJpNWxlSFJsYm1RZ1BTQm1kVzVqZEdsdmJpZ3BJSHRjYmx4MGRtRnlJRzl3ZEdsdmJuTXNJRzVoYldVc0lITnlZeXdnWTI5d2VTd2dZMjl3ZVVselFYSnlZWGtzSUdOc2IyNWxMRnh1WEhSY2RIUmhjbWRsZENBOUlHRnlaM1Z0Wlc1MGMxc2dNQ0JkSUh4OElIdDlMRnh1WEhSY2RHa2dQU0F4TEZ4dVhIUmNkR3hsYm1kMGFDQTlJR0Z5WjNWdFpXNTBjeTVzWlc1bmRHZ3NYRzVjZEZ4MFpHVmxjQ0E5SUdaaGJITmxPMXh1WEc1Y2RDOHZJRWhoYm1Sc1pTQmhJR1JsWlhBZ1kyOXdlU0J6YVhSMVlYUnBiMjVjYmx4MGFXWWdLQ0IwZVhCbGIyWWdkR0Z5WjJWMElEMDlQU0JjSW1KdmIyeGxZVzVjSWlBcElIdGNibHgwWEhSa1pXVndJRDBnZEdGeVoyVjBPMXh1WEc1Y2RGeDBMeThnVTJ0cGNDQjBhR1VnWW05dmJHVmhiaUJoYm1RZ2RHaGxJSFJoY21kbGRGeHVYSFJjZEhSaGNtZGxkQ0E5SUdGeVozVnRaVzUwYzFzZ2FTQmRJSHg4SUh0OU8xeHVYSFJjZEdrckt6dGNibHgwZlZ4dVhHNWNkQzh2SUVoaGJtUnNaU0JqWVhObElIZG9aVzRnZEdGeVoyVjBJR2x6SUdFZ2MzUnlhVzVuSUc5eUlITnZiV1YwYUdsdVp5QW9jRzl6YzJsaWJHVWdhVzRnWkdWbGNDQmpiM0I1S1Z4dVhIUnBaaUFvSUhSNWNHVnZaaUIwWVhKblpYUWdJVDA5SUZ3aWIySnFaV04wWENJZ0ppWWdJV2x6Um5WdVkzUnBiMjRvSUhSaGNtZGxkQ0FwSUNrZ2UxeHVYSFJjZEhSaGNtZGxkQ0E5SUh0OU8xeHVYSFI5WEc1Y2JseDBMeThnUlhoMFpXNWtJR3BSZFdWeWVTQnBkSE5sYkdZZ2FXWWdiMjVzZVNCdmJtVWdZWEpuZFcxbGJuUWdhWE1nY0dGemMyVmtYRzVjZEdsbUlDZ2dhU0E5UFQwZ2JHVnVaM1JvSUNrZ2UxeHVYSFJjZEhSaGNtZGxkQ0E5SUhSb2FYTTdYRzVjZEZ4MGFTMHRPMXh1WEhSOVhHNWNibHgwWm05eUlDZ2dPeUJwSUR3Z2JHVnVaM1JvT3lCcEt5c2dLU0I3WEc1Y2JseDBYSFF2THlCUGJteDVJR1JsWVd3Z2QybDBhQ0J1YjI0dGJuVnNiQzkxYm1SbFptbHVaV1FnZG1Gc2RXVnpYRzVjZEZ4MGFXWWdLQ0FvSUc5d2RHbHZibk1nUFNCaGNtZDFiV1Z1ZEhOYklHa2dYU0FwSUNFOUlHNTFiR3dnS1NCN1hHNWNibHgwWEhSY2RDOHZJRVY0ZEdWdVpDQjBhR1VnWW1GelpTQnZZbXBsWTNSY2JseDBYSFJjZEdadmNpQW9JRzVoYldVZ2FXNGdiM0IwYVc5dWN5QXBJSHRjYmx4MFhIUmNkRngwWTI5d2VTQTlJRzl3ZEdsdmJuTmJJRzVoYldVZ1hUdGNibHh1WEhSY2RGeDBYSFF2THlCUWNtVjJaVzUwSUU5aWFtVmpkQzV3Y205MGIzUjVjR1VnY0c5c2JIVjBhVzl1WEc1Y2RGeDBYSFJjZEM4dklGQnlaWFpsYm5RZ2JtVjJaWEl0Wlc1a2FXNW5JR3h2YjNCY2JseDBYSFJjZEZ4MGFXWWdLQ0J1WVcxbElEMDlQU0JjSWw5ZmNISnZkRzlmWDF3aUlIeDhJSFJoY21kbGRDQTlQVDBnWTI5d2VTQXBJSHRjYmx4MFhIUmNkRngwWEhSamIyNTBhVzUxWlR0Y2JseDBYSFJjZEZ4MGZWeHVYRzVjZEZ4MFhIUmNkQzh2SUZKbFkzVnljMlVnYVdZZ2QyVW5jbVVnYldWeVoybHVaeUJ3YkdGcGJpQnZZbXBsWTNSeklHOXlJR0Z5Y21GNWMxeHVYSFJjZEZ4MFhIUnBaaUFvSUdSbFpYQWdKaVlnWTI5d2VTQW1KaUFvSUdwUmRXVnllUzVwYzFCc1lXbHVUMkpxWldOMEtDQmpiM0I1SUNrZ2ZIeGNibHgwWEhSY2RGeDBYSFFvSUdOdmNIbEpjMEZ5Y21GNUlEMGdRWEp5WVhrdWFYTkJjbkpoZVNnZ1kyOXdlU0FwSUNrZ0tTQXBJSHRjYmx4MFhIUmNkRngwWEhSemNtTWdQU0IwWVhKblpYUmJJRzVoYldVZ1hUdGNibHh1WEhSY2RGeDBYSFJjZEM4dklFVnVjM1Z5WlNCd2NtOXdaWElnZEhsd1pTQm1iM0lnZEdobElITnZkWEpqWlNCMllXeDFaVnh1WEhSY2RGeDBYSFJjZEdsbUlDZ2dZMjl3ZVVselFYSnlZWGtnSmlZZ0lVRnljbUY1TG1selFYSnlZWGtvSUhOeVl5QXBJQ2tnZTF4dVhIUmNkRngwWEhSY2RGeDBZMnh2Ym1VZ1BTQmJYVHRjYmx4MFhIUmNkRngwWEhSOUlHVnNjMlVnYVdZZ0tDQWhZMjl3ZVVselFYSnlZWGtnSmlZZ0lXcFJkV1Z5ZVM1cGMxQnNZV2x1VDJKcVpXTjBLQ0J6Y21NZ0tTQXBJSHRjYmx4MFhIUmNkRngwWEhSY2RHTnNiMjVsSUQwZ2UzMDdYRzVjZEZ4MFhIUmNkRngwZlNCbGJITmxJSHRjYmx4MFhIUmNkRngwWEhSY2RHTnNiMjVsSUQwZ2MzSmpPMXh1WEhSY2RGeDBYSFJjZEgxY2JseDBYSFJjZEZ4MFhIUmpiM0I1U1hOQmNuSmhlU0E5SUdaaGJITmxPMXh1WEc1Y2RGeDBYSFJjZEZ4MEx5OGdUbVYyWlhJZ2JXOTJaU0J2Y21sbmFXNWhiQ0J2WW1wbFkzUnpMQ0JqYkc5dVpTQjBhR1Z0WEc1Y2RGeDBYSFJjZEZ4MGRHRnlaMlYwV3lCdVlXMWxJRjBnUFNCcVVYVmxjbmt1WlhoMFpXNWtLQ0JrWldWd0xDQmpiRzl1WlN3Z1kyOXdlU0FwTzF4dVhHNWNkRngwWEhSY2RDOHZJRVJ2YmlkMElHSnlhVzVuSUdsdUlIVnVaR1ZtYVc1bFpDQjJZV3gxWlhOY2JseDBYSFJjZEZ4MGZTQmxiSE5sSUdsbUlDZ2dZMjl3ZVNBaFBUMGdkVzVrWldacGJtVmtJQ2tnZTF4dVhIUmNkRngwWEhSY2RIUmhjbWRsZEZzZ2JtRnRaU0JkSUQwZ1kyOXdlVHRjYmx4MFhIUmNkRngwZlZ4dVhIUmNkRngwZlZ4dVhIUmNkSDFjYmx4MGZWeHVYRzVjZEM4dklGSmxkSFZ5YmlCMGFHVWdiVzlrYVdacFpXUWdiMkpxWldOMFhHNWNkSEpsZEhWeWJpQjBZWEpuWlhRN1hHNTlPMXh1WEc1cVVYVmxjbmt1WlhoMFpXNWtLQ0I3WEc1Y2JseDBMeThnVlc1cGNYVmxJR1p2Y2lCbFlXTm9JR052Y0hrZ2IyWWdhbEYxWlhKNUlHOXVJSFJvWlNCd1lXZGxYRzVjZEdWNGNHRnVaRzg2SUZ3aWFsRjFaWEo1WENJZ0t5QW9JSFpsY25OcGIyNGdLeUJOWVhSb0xuSmhibVJ2YlNncElDa3VjbVZ3YkdGalpTZ2dMMXhjUkM5bkxDQmNJbHdpSUNrc1hHNWNibHgwTHk4Z1FYTnpkVzFsSUdwUmRXVnllU0JwY3lCeVpXRmtlU0IzYVhSb2IzVjBJSFJvWlNCeVpXRmtlU0J0YjJSMWJHVmNibHgwYVhOU1pXRmtlVG9nZEhKMVpTeGNibHh1WEhSbGNuSnZjam9nWm5WdVkzUnBiMjRvSUcxelp5QXBJSHRjYmx4MFhIUjBhSEp2ZHlCdVpYY2dSWEp5YjNJb0lHMXpaeUFwTzF4dVhIUjlMRnh1WEc1Y2RHNXZiM0E2SUdaMWJtTjBhVzl1S0NrZ2UzMHNYRzVjYmx4MGFYTlFiR0ZwYms5aWFtVmpkRG9nWm5WdVkzUnBiMjRvSUc5aWFpQXBJSHRjYmx4MFhIUjJZWElnY0hKdmRHOHNJRU4wYjNJN1hHNWNibHgwWEhRdkx5QkVaWFJsWTNRZ2IySjJhVzkxY3lCdVpXZGhkR2wyWlhOY2JseDBYSFF2THlCVmMyVWdkRzlUZEhKcGJtY2dhVzV6ZEdWaFpDQnZaaUJxVVhWbGNua3VkSGx3WlNCMGJ5QmpZWFJqYUNCb2IzTjBJRzlpYW1WamRITmNibHgwWEhScFppQW9JQ0Z2WW1vZ2ZId2dkRzlUZEhKcGJtY3VZMkZzYkNnZ2IySnFJQ2tnSVQwOUlGd2lXMjlpYW1WamRDQlBZbXBsWTNSZFhDSWdLU0I3WEc1Y2RGeDBYSFJ5WlhSMWNtNGdabUZzYzJVN1hHNWNkRngwZlZ4dVhHNWNkRngwY0hKdmRHOGdQU0JuWlhSUWNtOTBieWdnYjJKcUlDazdYRzVjYmx4MFhIUXZMeUJQWW1wbFkzUnpJSGRwZEdnZ2JtOGdjSEp2ZEc5MGVYQmxJQ2hsTG1jdUxDQmdUMkpxWldOMExtTnlaV0YwWlNnZ2JuVnNiQ0FwWUNrZ1lYSmxJSEJzWVdsdVhHNWNkRngwYVdZZ0tDQWhjSEp2ZEc4Z0tTQjdYRzVjZEZ4MFhIUnlaWFIxY200Z2RISjFaVHRjYmx4MFhIUjlYRzVjYmx4MFhIUXZMeUJQWW1wbFkzUnpJSGRwZEdnZ2NISnZkRzkwZVhCbElHRnlaU0J3YkdGcGJpQnBabVlnZEdobGVTQjNaWEpsSUdOdmJuTjBjblZqZEdWa0lHSjVJR0VnWjJ4dlltRnNJRTlpYW1WamRDQm1kVzVqZEdsdmJseHVYSFJjZEVOMGIzSWdQU0JvWVhOUGQyNHVZMkZzYkNnZ2NISnZkRzhzSUZ3aVkyOXVjM1J5ZFdOMGIzSmNJaUFwSUNZbUlIQnliM1J2TG1OdmJuTjBjblZqZEc5eU8xeHVYSFJjZEhKbGRIVnliaUIwZVhCbGIyWWdRM1J2Y2lBOVBUMGdYQ0ptZFc1amRHbHZibHdpSUNZbUlHWnVWRzlUZEhKcGJtY3VZMkZzYkNnZ1EzUnZjaUFwSUQwOVBTQlBZbXBsWTNSR2RXNWpkR2x2YmxOMGNtbHVaenRjYmx4MGZTeGNibHh1WEhScGMwVnRjSFI1VDJKcVpXTjBPaUJtZFc1amRHbHZiaWdnYjJKcUlDa2dlMXh1WEhSY2RIWmhjaUJ1WVcxbE8xeHVYRzVjZEZ4MFptOXlJQ2dnYm1GdFpTQnBiaUJ2WW1vZ0tTQjdYRzVjZEZ4MFhIUnlaWFIxY200Z1ptRnNjMlU3WEc1Y2RGeDBmVnh1WEhSY2RISmxkSFZ5YmlCMGNuVmxPMXh1WEhSOUxGeHVYRzVjZEM4dklFVjJZV3gxWVhSbGN5QmhJSE5qY21sd2RDQnBiaUJoSUhCeWIzWnBaR1ZrSUdOdmJuUmxlSFE3SUdaaGJHeHpJR0poWTJzZ2RHOGdkR2hsSUdkc2IySmhiQ0J2Ym1WY2JseDBMeThnYVdZZ2JtOTBJSE53WldOcFptbGxaQzVjYmx4MFoyeHZZbUZzUlhaaGJEb2dablZ1WTNScGIyNG9JR052WkdVc0lHOXdkR2x2Ym5Nc0lHUnZZeUFwSUh0Y2JseDBYSFJFVDAxRmRtRnNLQ0JqYjJSbExDQjdJRzV2Ym1ObE9pQnZjSFJwYjI1eklDWW1JRzl3ZEdsdmJuTXVibTl1WTJVZ2ZTd2daRzlqSUNrN1hHNWNkSDBzWEc1Y2JseDBaV0ZqYURvZ1puVnVZM1JwYjI0b0lHOWlhaXdnWTJGc2JHSmhZMnNnS1NCN1hHNWNkRngwZG1GeUlHeGxibWQwYUN3Z2FTQTlJREE3WEc1Y2JseDBYSFJwWmlBb0lHbHpRWEp5WVhsTWFXdGxLQ0J2WW1vZ0tTQXBJSHRjYmx4MFhIUmNkR3hsYm1kMGFDQTlJRzlpYWk1c1pXNW5kR2c3WEc1Y2RGeDBYSFJtYjNJZ0tDQTdJR2tnUENCc1pXNW5kR2c3SUdrckt5QXBJSHRjYmx4MFhIUmNkRngwYVdZZ0tDQmpZV3hzWW1GamF5NWpZV3hzS0NCdlltcGJJR2tnWFN3Z2FTd2diMkpxV3lCcElGMGdLU0E5UFQwZ1ptRnNjMlVnS1NCN1hHNWNkRngwWEhSY2RGeDBZbkpsWVdzN1hHNWNkRngwWEhSY2RIMWNibHgwWEhSY2RIMWNibHgwWEhSOUlHVnNjMlVnZTF4dVhIUmNkRngwWm05eUlDZ2dhU0JwYmlCdlltb2dLU0I3WEc1Y2RGeDBYSFJjZEdsbUlDZ2dZMkZzYkdKaFkyc3VZMkZzYkNnZ2IySnFXeUJwSUYwc0lHa3NJRzlpYWxzZ2FTQmRJQ2tnUFQwOUlHWmhiSE5sSUNrZ2UxeHVYSFJjZEZ4MFhIUmNkR0p5WldGck8xeHVYSFJjZEZ4MFhIUjlYRzVjZEZ4MFhIUjlYRzVjZEZ4MGZWeHVYRzVjZEZ4MGNtVjBkWEp1SUc5aWFqdGNibHgwZlN4Y2JseHVYSFF2THlCeVpYTjFiSFJ6SUdseklHWnZjaUJwYm5SbGNtNWhiQ0IxYzJGblpTQnZibXg1WEc1Y2RHMWhhMlZCY25KaGVUb2dablZ1WTNScGIyNG9JR0Z5Y2l3Z2NtVnpkV3gwY3lBcElIdGNibHgwWEhSMllYSWdjbVYwSUQwZ2NtVnpkV3gwY3lCOGZDQmJYVHRjYmx4dVhIUmNkR2xtSUNnZ1lYSnlJQ0U5SUc1MWJHd2dLU0I3WEc1Y2RGeDBYSFJwWmlBb0lHbHpRWEp5WVhsTWFXdGxLQ0JQWW1wbFkzUW9JR0Z5Y2lBcElDa2dLU0I3WEc1Y2RGeDBYSFJjZEdwUmRXVnllUzV0WlhKblpTZ2djbVYwTEZ4dVhIUmNkRngwWEhSY2RIUjVjR1Z2WmlCaGNuSWdQVDA5SUZ3aWMzUnlhVzVuWENJZ1AxeHVYSFJjZEZ4MFhIUmNkRngwV3lCaGNuSWdYU0E2SUdGeWNseHVYSFJjZEZ4MFhIUXBPMXh1WEhSY2RGeDBmU0JsYkhObElIdGNibHgwWEhSY2RGeDBjSFZ6YUM1allXeHNLQ0J5WlhRc0lHRnljaUFwTzF4dVhIUmNkRngwZlZ4dVhIUmNkSDFjYmx4dVhIUmNkSEpsZEhWeWJpQnlaWFE3WEc1Y2RIMHNYRzVjYmx4MGFXNUJjbkpoZVRvZ1puVnVZM1JwYjI0b0lHVnNaVzBzSUdGeWNpd2dhU0FwSUh0Y2JseDBYSFJ5WlhSMWNtNGdZWEp5SUQwOUlHNTFiR3dnUHlBdE1TQTZJR2x1WkdWNFQyWXVZMkZzYkNnZ1lYSnlMQ0JsYkdWdExDQnBJQ2s3WEc1Y2RIMHNYRzVjYmx4MEx5OGdVM1Z3Y0c5eWREb2dRVzVrY205cFpDQThQVFF1TUNCdmJteDVMQ0JRYUdGdWRHOXRTbE1nTVNCdmJteDVYRzVjZEM4dklIQjFjMmd1WVhCd2JIa29YeXdnWVhKeVlYbHNhV3RsS1NCMGFISnZkM01nYjI0Z1lXNWphV1Z1ZENCWFpXSkxhWFJjYmx4MGJXVnlaMlU2SUdaMWJtTjBhVzl1S0NCbWFYSnpkQ3dnYzJWamIyNWtJQ2tnZTF4dVhIUmNkSFpoY2lCc1pXNGdQU0FyYzJWamIyNWtMbXhsYm1kMGFDeGNibHgwWEhSY2RHb2dQU0F3TEZ4dVhIUmNkRngwYVNBOUlHWnBjbk4wTG14bGJtZDBhRHRjYmx4dVhIUmNkR1p2Y2lBb0lEc2dhaUE4SUd4bGJqc2dhaXNySUNrZ2UxeHVYSFJjZEZ4MFptbHljM1JiSUdrckt5QmRJRDBnYzJWamIyNWtXeUJxSUYwN1hHNWNkRngwZlZ4dVhHNWNkRngwWm1seWMzUXViR1Z1WjNSb0lEMGdhVHRjYmx4dVhIUmNkSEpsZEhWeWJpQm1hWEp6ZER0Y2JseDBmU3hjYmx4dVhIUm5jbVZ3T2lCbWRXNWpkR2x2YmlnZ1pXeGxiWE1zSUdOaGJHeGlZV05yTENCcGJuWmxjblFnS1NCN1hHNWNkRngwZG1GeUlHTmhiR3hpWVdOclNXNTJaWEp6WlN4Y2JseDBYSFJjZEcxaGRHTm9aWE1nUFNCYlhTeGNibHgwWEhSY2RHa2dQU0F3TEZ4dVhIUmNkRngwYkdWdVozUm9JRDBnWld4bGJYTXViR1Z1WjNSb0xGeHVYSFJjZEZ4MFkyRnNiR0poWTJ0RmVIQmxZM1FnUFNBaGFXNTJaWEowTzF4dVhHNWNkRngwTHk4Z1IyOGdkR2h5YjNWbmFDQjBhR1VnWVhKeVlYa3NJRzl1YkhrZ2MyRjJhVzVuSUhSb1pTQnBkR1Z0YzF4dVhIUmNkQzh2SUhSb1lYUWdjR0Z6Y3lCMGFHVWdkbUZzYVdSaGRHOXlJR1oxYm1OMGFXOXVYRzVjZEZ4MFptOXlJQ2dnT3lCcElEd2diR1Z1WjNSb095QnBLeXNnS1NCN1hHNWNkRngwWEhSallXeHNZbUZqYTBsdWRtVnljMlVnUFNBaFkyRnNiR0poWTJzb0lHVnNaVzF6V3lCcElGMHNJR2tnS1R0Y2JseDBYSFJjZEdsbUlDZ2dZMkZzYkdKaFkydEpiblpsY25ObElDRTlQU0JqWVd4c1ltRmphMFY0Y0dWamRDQXBJSHRjYmx4MFhIUmNkRngwYldGMFkyaGxjeTV3ZFhOb0tDQmxiR1Z0YzFzZ2FTQmRJQ2s3WEc1Y2RGeDBYSFI5WEc1Y2RGeDBmVnh1WEc1Y2RGeDBjbVYwZFhKdUlHMWhkR05vWlhNN1hHNWNkSDBzWEc1Y2JseDBMeThnWVhKbklHbHpJR1p2Y2lCcGJuUmxjbTVoYkNCMWMyRm5aU0J2Ym14NVhHNWNkRzFoY0RvZ1puVnVZM1JwYjI0b0lHVnNaVzF6TENCallXeHNZbUZqYXl3Z1lYSm5JQ2tnZTF4dVhIUmNkSFpoY2lCc1pXNW5kR2dzSUhaaGJIVmxMRnh1WEhSY2RGeDBhU0E5SURBc1hHNWNkRngwWEhSeVpYUWdQU0JiWFR0Y2JseHVYSFJjZEM4dklFZHZJSFJvY205MVoyZ2dkR2hsSUdGeWNtRjVMQ0IwY21GdWMyeGhkR2x1WnlCbFlXTm9JRzltSUhSb1pTQnBkR1Z0Y3lCMGJ5QjBhR1ZwY2lCdVpYY2dkbUZzZFdWelhHNWNkRngwYVdZZ0tDQnBjMEZ5Y21GNVRHbHJaU2dnWld4bGJYTWdLU0FwSUh0Y2JseDBYSFJjZEd4bGJtZDBhQ0E5SUdWc1pXMXpMbXhsYm1kMGFEdGNibHgwWEhSY2RHWnZjaUFvSURzZ2FTQThJR3hsYm1kMGFEc2dhU3NySUNrZ2UxeHVYSFJjZEZ4MFhIUjJZV3gxWlNBOUlHTmhiR3hpWVdOcktDQmxiR1Z0YzFzZ2FTQmRMQ0JwTENCaGNtY2dLVHRjYmx4dVhIUmNkRngwWEhScFppQW9JSFpoYkhWbElDRTlJRzUxYkd3Z0tTQjdYRzVjZEZ4MFhIUmNkRngwY21WMExuQjFjMmdvSUhaaGJIVmxJQ2s3WEc1Y2RGeDBYSFJjZEgxY2JseDBYSFJjZEgxY2JseHVYSFJjZEM4dklFZHZJSFJvY205MVoyZ2daWFpsY25rZ2EyVjVJRzl1SUhSb1pTQnZZbXBsWTNRc1hHNWNkRngwZlNCbGJITmxJSHRjYmx4MFhIUmNkR1p2Y2lBb0lHa2dhVzRnWld4bGJYTWdLU0I3WEc1Y2RGeDBYSFJjZEhaaGJIVmxJRDBnWTJGc2JHSmhZMnNvSUdWc1pXMXpXeUJwSUYwc0lHa3NJR0Z5WnlBcE8xeHVYRzVjZEZ4MFhIUmNkR2xtSUNnZ2RtRnNkV1VnSVQwZ2JuVnNiQ0FwSUh0Y2JseDBYSFJjZEZ4MFhIUnlaWFF1Y0hWemFDZ2dkbUZzZFdVZ0tUdGNibHgwWEhSY2RGeDBmVnh1WEhSY2RGeDBmVnh1WEhSY2RIMWNibHh1WEhSY2RDOHZJRVpzWVhSMFpXNGdZVzU1SUc1bGMzUmxaQ0JoY25KaGVYTmNibHgwWEhSeVpYUjFjbTRnWm14aGRDZ2djbVYwSUNrN1hHNWNkSDBzWEc1Y2JseDBMeThnUVNCbmJHOWlZV3dnUjFWSlJDQmpiM1Z1ZEdWeUlHWnZjaUJ2WW1wbFkzUnpYRzVjZEdkMWFXUTZJREVzWEc1Y2JseDBMeThnYWxGMVpYSjVMbk4xY0hCdmNuUWdhWE1nYm05MElIVnpaV1FnYVc0Z1EyOXlaU0JpZFhRZ2IzUm9aWElnY0hKdmFtVmpkSE1nWVhSMFlXTm9JSFJvWldseVhHNWNkQzh2SUhCeWIzQmxjblJwWlhNZ2RHOGdhWFFnYzI4Z2FYUWdibVZsWkhNZ2RHOGdaWGhwYzNRdVhHNWNkSE4xY0hCdmNuUTZJSE4xY0hCdmNuUmNibjBnS1R0Y2JseHVhV1lnS0NCMGVYQmxiMllnVTNsdFltOXNJRDA5UFNCY0ltWjFibU4wYVc5dVhDSWdLU0I3WEc1Y2RHcFJkV1Z5ZVM1bWJsc2dVM2x0WW05c0xtbDBaWEpoZEc5eUlGMGdQU0JoY25KYklGTjViV0p2YkM1cGRHVnlZWFJ2Y2lCZE8xeHVmVnh1WEc0dkx5QlFiM0IxYkdGMFpTQjBhR1VnWTJ4aGMzTXlkSGx3WlNCdFlYQmNibXBSZFdWeWVTNWxZV05vS0NCY0lrSnZiMnhsWVc0Z1RuVnRZbVZ5SUZOMGNtbHVaeUJHZFc1amRHbHZiaUJCY25KaGVTQkVZWFJsSUZKbFowVjRjQ0JQWW1wbFkzUWdSWEp5YjNJZ1UzbHRZbTlzWENJdWMzQnNhWFFvSUZ3aUlGd2lJQ2tzWEc1Y2RHWjFibU4wYVc5dUtDQmZhU3dnYm1GdFpTQXBJSHRjYmx4MFhIUmpiR0Z6Y3pKMGVYQmxXeUJjSWx0dlltcGxZM1FnWENJZ0t5QnVZVzFsSUNzZ1hDSmRYQ0lnWFNBOUlHNWhiV1V1ZEc5TWIzZGxja05oYzJVb0tUdGNibHgwZlNBcE8xeHVYRzVtZFc1amRHbHZiaUJwYzBGeWNtRjVUR2xyWlNnZ2IySnFJQ2tnZTF4dVhHNWNkQzh2SUZOMWNIQnZjblE2SUhKbFlXd2dhVTlUSURndU1pQnZibXg1SUNodWIzUWdjbVZ3Y205a2RXTnBZbXhsSUdsdUlITnBiWFZzWVhSdmNpbGNibHgwTHk4Z1lHbHVZQ0JqYUdWamF5QjFjMlZrSUhSdklIQnlaWFpsYm5RZ1NrbFVJR1Z5Y205eUlDaG5hQzB5TVRRMUtWeHVYSFF2THlCb1lYTlBkMjRnYVhOdUozUWdkWE5sWkNCb1pYSmxJR1IxWlNCMGJ5Qm1ZV3h6WlNCdVpXZGhkR2wyWlhOY2JseDBMeThnY21WbllYSmthVzVuSUU1dlpHVnNhWE4wSUd4bGJtZDBhQ0JwYmlCSlJWeHVYSFIyWVhJZ2JHVnVaM1JvSUQwZ0lTRnZZbW9nSmlZZ1hDSnNaVzVuZEdoY0lpQnBiaUJ2WW1vZ0ppWWdiMkpxTG14bGJtZDBhQ3hjYmx4MFhIUjBlWEJsSUQwZ2RHOVVlWEJsS0NCdlltb2dLVHRjYmx4dVhIUnBaaUFvSUdselJuVnVZM1JwYjI0b0lHOWlhaUFwSUh4OElHbHpWMmx1Wkc5M0tDQnZZbW9nS1NBcElIdGNibHgwWEhSeVpYUjFjbTRnWm1Gc2MyVTdYRzVjZEgxY2JseHVYSFJ5WlhSMWNtNGdkSGx3WlNBOVBUMGdYQ0poY25KaGVWd2lJSHg4SUd4bGJtZDBhQ0E5UFQwZ01DQjhmRnh1WEhSY2RIUjVjR1Z2WmlCc1pXNW5kR2dnUFQwOUlGd2liblZ0WW1WeVhDSWdKaVlnYkdWdVozUm9JRDRnTUNBbUppQW9JR3hsYm1kMGFDQXRJREVnS1NCcGJpQnZZbW83WEc1OVhHNTJZWElnVTJsNmVteGxJRDFjYmk4cUlWeHVJQ29nVTJsNmVteGxJRU5UVXlCVFpXeGxZM1J2Y2lCRmJtZHBibVVnZGpJdU15NDRYRzRnS2lCb2RIUndjem92TDNOcGVucHNaV3B6TG1OdmJTOWNiaUFxWEc0Z0tpQkRiM0I1Y21sbmFIUWdTbE1nUm05MWJtUmhkR2x2YmlCaGJtUWdiM1JvWlhJZ1kyOXVkSEpwWW5WMGIzSnpYRzRnS2lCU1pXeGxZWE5sWkNCMWJtUmxjaUIwYUdVZ1RVbFVJR3hwWTJWdWMyVmNiaUFxSUdoMGRIQnpPaTh2YW5NdVptOTFibVJoZEdsdmJpOWNiaUFxWEc0Z0tpQkVZWFJsT2lBeU1ESXlMVEV4TFRFMlhHNGdLaTljYmlnZ1puVnVZM1JwYjI0b0lIZHBibVJ2ZHlBcElIdGNiblpoY2lCcExGeHVYSFJ6ZFhCd2IzSjBMRnh1WEhSRmVIQnlMRnh1WEhSblpYUlVaWGgwTEZ4dVhIUnBjMWhOVEN4Y2JseDBkRzlyWlc1cGVtVXNYRzVjZEdOdmJYQnBiR1VzWEc1Y2RITmxiR1ZqZEN4Y2JseDBiM1YwWlhKdGIzTjBRMjl1ZEdWNGRDeGNibHgwYzI5eWRFbHVjSFYwTEZ4dVhIUm9ZWE5FZFhCc2FXTmhkR1VzWEc1Y2JseDBMeThnVEc5allXd2daRzlqZFcxbGJuUWdkbUZ5YzF4dVhIUnpaWFJFYjJOMWJXVnVkQ3hjYmx4MFpHOWpkVzFsYm5Rc1hHNWNkR1J2WTBWc1pXMHNYRzVjZEdSdlkzVnRaVzUwU1hOSVZFMU1MRnh1WEhSeVluVm5aM2xSVTBFc1hHNWNkSEppZFdkbmVVMWhkR05vWlhNc1hHNWNkRzFoZEdOb1pYTXNYRzVjZEdOdmJuUmhhVzV6TEZ4dVhHNWNkQzh2SUVsdWMzUmhibU5sTFhOd1pXTnBabWxqSUdSaGRHRmNibHgwWlhod1lXNWtieUE5SUZ3aWMybDZlbXhsWENJZ0t5QXhJQ29nYm1WM0lFUmhkR1VvS1N4Y2JseDBjSEpsWm1WeWNtVmtSRzlqSUQwZ2QybHVaRzkzTG1SdlkzVnRaVzUwTEZ4dVhIUmthWEp5ZFc1eklEMGdNQ3hjYmx4MFpHOXVaU0E5SURBc1hHNWNkR05zWVhOelEyRmphR1VnUFNCamNtVmhkR1ZEWVdOb1pTZ3BMRnh1WEhSMGIydGxia05oWTJobElEMGdZM0psWVhSbFEyRmphR1VvS1N4Y2JseDBZMjl0Y0dsc1pYSkRZV05vWlNBOUlHTnlaV0YwWlVOaFkyaGxLQ2tzWEc1Y2RHNXZibTVoZEdsMlpWTmxiR1ZqZEc5eVEyRmphR1VnUFNCamNtVmhkR1ZEWVdOb1pTZ3BMRnh1WEhSemIzSjBUM0prWlhJZ1BTQm1kVzVqZEdsdmJpZ2dZU3dnWWlBcElIdGNibHgwWEhScFppQW9JR0VnUFQwOUlHSWdLU0I3WEc1Y2RGeDBYSFJvWVhORWRYQnNhV05oZEdVZ1BTQjBjblZsTzF4dVhIUmNkSDFjYmx4MFhIUnlaWFIxY200Z01EdGNibHgwZlN4Y2JseHVYSFF2THlCSmJuTjBZVzVqWlNCdFpYUm9iMlJ6WEc1Y2RHaGhjMDkzYmlBOUlDZ2dlMzBnS1M1b1lYTlBkMjVRY205d1pYSjBlU3hjYmx4MFlYSnlJRDBnVzEwc1hHNWNkSEJ2Y0NBOUlHRnljaTV3YjNBc1hHNWNkSEIxYzJoT1lYUnBkbVVnUFNCaGNuSXVjSFZ6YUN4Y2JseDBjSFZ6YUNBOUlHRnljaTV3ZFhOb0xGeHVYSFJ6YkdsalpTQTlJR0Z5Y2k1emJHbGpaU3hjYmx4dVhIUXZMeUJWYzJVZ1lTQnpkSEpwY0hCbFpDMWtiM2R1SUdsdVpHVjRUMllnWVhNZ2FYUW5jeUJtWVhOMFpYSWdkR2hoYmlCdVlYUnBkbVZjYmx4MEx5OGdhSFIwY0hNNkx5OXFjM0JsY21ZdVkyOXRMM1JvYjNJdGFXNWtaWGh2WmkxMmN5MW1iM0l2TlZ4dVhIUnBibVJsZUU5bUlEMGdablZ1WTNScGIyNG9JR3hwYzNRc0lHVnNaVzBnS1NCN1hHNWNkRngwZG1GeUlHa2dQU0F3TEZ4dVhIUmNkRngwYkdWdUlEMGdiR2x6ZEM1c1pXNW5kR2c3WEc1Y2RGeDBabTl5SUNnZ095QnBJRHdnYkdWdU95QnBLeXNnS1NCN1hHNWNkRngwWEhScFppQW9JR3hwYzNSYklHa2dYU0E5UFQwZ1pXeGxiU0FwSUh0Y2JseDBYSFJjZEZ4MGNtVjBkWEp1SUdrN1hHNWNkRngwWEhSOVhHNWNkRngwZlZ4dVhIUmNkSEpsZEhWeWJpQXRNVHRjYmx4MGZTeGNibHh1WEhSaWIyOXNaV0Z1Y3lBOUlGd2lZMmhsWTJ0bFpIeHpaV3hsWTNSbFpIeGhjM2x1WTN4aGRYUnZabTlqZFhOOFlYVjBiM0JzWVhsOFkyOXVkSEp2YkhOOFpHVm1aWEo4WkdsellXSnNaV1I4YUdsa1pHVnVmRndpSUN0Y2JseDBYSFJjSW1semJXRndmR3h2YjNCOGJYVnNkR2x3YkdWOGIzQmxibnh5WldGa2IyNXNlWHh5WlhGMWFYSmxaSHh6WTI5d1pXUmNJaXhjYmx4dVhIUXZMeUJTWldkMWJHRnlJR1Y0Y0hKbGMzTnBiMjV6WEc1Y2JseDBMeThnYUhSMGNEb3ZMM2QzZHk1M015NXZjbWN2VkZJdlkzTnpNeTF6Wld4bFkzUnZjbk12STNkb2FYUmxjM0JoWTJWY2JseDBkMmhwZEdWemNHRmpaU0E5SUZ3aVcxeGNYRng0TWpCY1hGeGNkRnhjWEZ4eVhGeGNYRzVjWEZ4Y1psMWNJaXhjYmx4dVhIUXZMeUJvZEhSd2N6b3ZMM2QzZHk1M015NXZjbWN2VkZJdlkzTnpMWE41Ym5SaGVDMHpMeU5wWkdWdWRDMTBiMnRsYmkxa2FXRm5jbUZ0WEc1Y2RHbGtaVzUwYVdacFpYSWdQU0JjSWlnL09seGNYRnhjWEZ4Y1cxeGNYRnhrWVMxbVFTMUdYWHN4TERaOVhDSWdLeUIzYUdsMFpYTndZV05sSUN0Y2JseDBYSFJjSWo5OFhGeGNYRnhjWEZ4YlhseGNYRnh5WEZ4Y1hHNWNYRnhjWmwxOFcxeGNYRngzTFYxOFcxNWNYREF0WEZ4Y1hIZzNabDBwSzF3aUxGeHVYRzVjZEM4dklFRjBkSEpwWW5WMFpTQnpaV3hsWTNSdmNuTTZJR2gwZEhBNkx5OTNkM2N1ZHpNdWIzSm5MMVJTTDNObGJHVmpkRzl5Y3k4allYUjBjbWxpZFhSbExYTmxiR1ZqZEc5eWMxeHVYSFJoZEhSeWFXSjFkR1Z6SUQwZ1hDSmNYRnhjVzF3aUlDc2dkMmhwZEdWemNHRmpaU0FySUZ3aUtpaGNJaUFySUdsa1pXNTBhV1pwWlhJZ0t5QmNJaWtvUHpwY0lpQXJJSGRvYVhSbGMzQmhZMlVnSzF4dVhHNWNkRngwTHk4Z1QzQmxjbUYwYjNJZ0tHTmhjSFIxY21VZ01pbGNibHgwWEhSY0lpb29XeXBlSkh3aGZsMC9QU2xjSWlBcklIZG9hWFJsYzNCaFkyVWdLMXh1WEc1Y2RGeDBMeThnWENKQmRIUnlhV0oxZEdVZ2RtRnNkV1Z6SUcxMWMzUWdZbVVnUTFOVElHbGtaVzUwYVdacFpYSnpJRnRqWVhCMGRYSmxJRFZkWEc1Y2RGeDBMeThnYjNJZ2MzUnlhVzVuY3lCYlkyRndkSFZ5WlNBeklHOXlJR05oY0hSMWNtVWdORjFjSWx4dVhIUmNkRndpS2lnL09pY29LRDg2WEZ4Y1hGeGNYRnd1ZkZ0ZVhGeGNYRnhjWEZ3blhTa3FLU2Q4WEZ4Y0lpZ29QenBjWEZ4Y1hGeGNYQzU4VzE1Y1hGeGNYRnhjWEZ4Y1hDSmRLU29wWEZ4Y0lud29YQ0lnS3lCcFpHVnVkR2xtYVdWeUlDc2dYQ0lwS1h3cFhDSWdLMXh1WEhSY2RIZG9hWFJsYzNCaFkyVWdLeUJjSWlwY1hGeGNYVndpTEZ4dVhHNWNkSEJ6WlhWa2IzTWdQU0JjSWpvb1hDSWdLeUJwWkdWdWRHbG1hV1Z5SUNzZ1hDSXBLRDg2WEZ4Y1hDZ29YQ0lnSzF4dVhHNWNkRngwTHk4Z1ZHOGdjbVZrZFdObElIUm9aU0J1ZFcxaVpYSWdiMllnYzJWc1pXTjBiM0p6SUc1bFpXUnBibWNnZEc5clpXNXBlbVVnYVc0Z2RHaGxJSEJ5WlVacGJIUmxjaXdnY0hKbFptVnlJR0Z5WjNWdFpXNTBjenBjYmx4MFhIUXZMeUF4TGlCeGRXOTBaV1FnS0dOaGNIUjFjbVVnTXpzZ1kyRndkSFZ5WlNBMElHOXlJR05oY0hSMWNtVWdOU2xjYmx4MFhIUmNJaWduS0NnL09seGNYRnhjWEZ4Y0xueGJYbHhjWEZ4Y1hGeGNKMTBwS2lrbmZGeGNYQ0lvS0Q4NlhGeGNYRnhjWEZ3dWZGdGVYRnhjWEZ4Y1hGeGNYRndpWFNrcUtWeGNYQ0lwZkZ3aUlDdGNibHh1WEhSY2RDOHZJREl1SUhOcGJYQnNaU0FvWTJGd2RIVnlaU0EyS1Z4dVhIUmNkRndpS0NnL09seGNYRnhjWEZ4Y0xueGJYbHhjWEZ4Y1hGeGNLQ2xiWEZ4Y1hGMWRmRndpSUNzZ1lYUjBjbWxpZFhSbGN5QXJJRndpS1NvcGZGd2lJQ3RjYmx4dVhIUmNkQzh2SURNdUlHRnVlWFJvYVc1bklHVnNjMlVnS0dOaGNIUjFjbVVnTWlsY2JseDBYSFJjSWk0cVhDSWdLMXh1WEhSY2RGd2lLVnhjWEZ3cGZDbGNJaXhjYmx4dVhIUXZMeUJNWldGa2FXNW5JR0Z1WkNCdWIyNHRaWE5qWVhCbFpDQjBjbUZwYkdsdVp5QjNhR2wwWlhOd1lXTmxMQ0JqWVhCMGRYSnBibWNnYzI5dFpTQnViMjR0ZDJocGRHVnpjR0ZqWlNCamFHRnlZV04wWlhKeklIQnlaV05sWkdsdVp5QjBhR1VnYkdGMGRHVnlYRzVjZEhKM2FHbDBaWE53WVdObElEMGdibVYzSUZKbFowVjRjQ2dnZDJocGRHVnpjR0ZqWlNBcklGd2lLMXdpTENCY0ltZGNJaUFwTEZ4dVhIUnlkSEpwYlNBOUlHNWxkeUJTWldkRmVIQW9JRndpWGx3aUlDc2dkMmhwZEdWemNHRmpaU0FySUZ3aUszd29LRDg2WG54YlhseGNYRnhjWEZ4Y1hTa29QenBjWEZ4Y1hGeGNYQzRwS2lsY0lpQXJYRzVjZEZ4MGQyaHBkR1Z6Y0dGalpTQXJJRndpS3lSY0lpd2dYQ0puWENJZ0tTeGNibHh1WEhSeVkyOXRiV0VnUFNCdVpYY2dVbVZuUlhod0tDQmNJbDVjSWlBcklIZG9hWFJsYzNCaFkyVWdLeUJjSWlvc1hDSWdLeUIzYUdsMFpYTndZV05sSUNzZ1hDSXFYQ0lnS1N4Y2JseDBjbU52YldKcGJtRjBiM0p6SUQwZ2JtVjNJRkpsWjBWNGNDZ2dYQ0plWENJZ0t5QjNhR2wwWlhOd1lXTmxJQ3NnWENJcUtGcytLMzVkZkZ3aUlDc2dkMmhwZEdWemNHRmpaU0FySUZ3aUtWd2lJQ3NnZDJocGRHVnpjR0ZqWlNBclhHNWNkRngwWENJcVhDSWdLU3hjYmx4MGNtUmxjMk5sYm1RZ1BTQnVaWGNnVW1WblJYaHdLQ0IzYUdsMFpYTndZV05sSUNzZ1hDSjhQbHdpSUNrc1hHNWNibHgwY25CelpYVmtieUE5SUc1bGR5QlNaV2RGZUhBb0lIQnpaWFZrYjNNZ0tTeGNibHgwY21sa1pXNTBhV1pwWlhJZ1BTQnVaWGNnVW1WblJYaHdLQ0JjSWw1Y0lpQXJJR2xrWlc1MGFXWnBaWElnS3lCY0lpUmNJaUFwTEZ4dVhHNWNkRzFoZEdOb1JYaHdjaUE5SUh0Y2JseDBYSFJjSWtsRVhDSTZJRzVsZHlCU1pXZEZlSEFvSUZ3aVhpTW9YQ0lnS3lCcFpHVnVkR2xtYVdWeUlDc2dYQ0lwWENJZ0tTeGNibHgwWEhSY0lrTk1RVk5UWENJNklHNWxkeUJTWldkRmVIQW9JRndpWGx4Y1hGd3VLRndpSUNzZ2FXUmxiblJwWm1sbGNpQXJJRndpS1Z3aUlDa3NYRzVjZEZ4MFhDSlVRVWRjSWpvZ2JtVjNJRkpsWjBWNGNDZ2dYQ0plS0Z3aUlDc2dhV1JsYm5ScFptbGxjaUFySUZ3aWZGc3FYU2xjSWlBcExGeHVYSFJjZEZ3aVFWUlVVbHdpT2lCdVpYY2dVbVZuUlhod0tDQmNJbDVjSWlBcklHRjBkSEpwWW5WMFpYTWdLU3hjYmx4MFhIUmNJbEJUUlZWRVQxd2lPaUJ1WlhjZ1VtVm5SWGh3S0NCY0lsNWNJaUFySUhCelpYVmtiM01nS1N4Y2JseDBYSFJjSWtOSVNVeEVYQ0k2SUc1bGR5QlNaV2RGZUhBb0lGd2lYam9vYjI1c2VYeG1hWEp6ZEh4c1lYTjBmRzUwYUh4dWRHZ3RiR0Z6ZENrdEtHTm9hV3hrZkc5bUxYUjVjR1VwS0Q4NlhGeGNYQ2hjSWlBclhHNWNkRngwWEhSM2FHbDBaWE53WVdObElDc2dYQ0lxS0dWMlpXNThiMlJrZkNnb1d5c3RYWHdwS0Z4Y1hGeGtLaWx1ZkNsY0lpQXJJSGRvYVhSbGMzQmhZMlVnS3lCY0lpb29Qem9vV3lzdFhYd3BYQ0lnSzF4dVhIUmNkRngwZDJocGRHVnpjR0ZqWlNBcklGd2lLaWhjWEZ4Y1pDc3BmQ2twWENJZ0t5QjNhR2wwWlhOd1lXTmxJQ3NnWENJcVhGeGNYQ2w4S1Z3aUxDQmNJbWxjSWlBcExGeHVYSFJjZEZ3aVltOXZiRndpT2lCdVpYY2dVbVZuUlhod0tDQmNJbDRvUHpwY0lpQXJJR0p2YjJ4bFlXNXpJQ3NnWENJcEpGd2lMQ0JjSW1sY0lpQXBMRnh1WEc1Y2RGeDBMeThnUm05eUlIVnpaU0JwYmlCc2FXSnlZWEpwWlhNZ2FXMXdiR1Z0Wlc1MGFXNW5JQzVwY3lncFhHNWNkRngwTHk4Z1YyVWdkWE5sSUhSb2FYTWdabTl5SUZCUFV5QnRZWFJqYUdsdVp5QnBiaUJnYzJWc1pXTjBZRnh1WEhSY2RGd2libVZsWkhORGIyNTBaWGgwWENJNklHNWxkeUJTWldkRmVIQW9JRndpWGx3aUlDc2dkMmhwZEdWemNHRmpaU0FyWEc1Y2RGeDBYSFJjSWlwYlBpdCtYWHc2S0dWMlpXNThiMlJrZkdWeGZHZDBmR3gwZkc1MGFIeG1hWEp6ZEh4c1lYTjBLU2cvT2x4Y1hGd29YQ0lnS3lCM2FHbDBaWE53WVdObElDdGNibHgwWEhSY2RGd2lLaWdvUHpvdFhGeGNYR1FwUDF4Y1hGeGtLaWxjSWlBcklIZG9hWFJsYzNCaFkyVWdLeUJjSWlwY1hGeGNLWHdwS0Q4OVcxNHRYWHdrS1Z3aUxDQmNJbWxjSWlBcFhHNWNkSDBzWEc1Y2JseDBjbWgwYld3Z1BTQXZTRlJOVENRdmFTeGNibHgwY21sdWNIVjBjeUE5SUM5ZUtEODZhVzV3ZFhSOGMyVnNaV04wZkhSbGVIUmhjbVZoZkdKMWRIUnZiaWtrTDJrc1hHNWNkSEpvWldGa1pYSWdQU0F2WG1oY1hHUWtMMmtzWEc1Y2JseDBjbTVoZEdsMlpTQTlJQzllVzE1N1hTdGNYSHRjWEhNcVhGeGJibUYwYVhabElGeGNkeThzWEc1Y2JseDBMeThnUldGemFXeDVMWEJoY25ObFlXSnNaUzl5WlhSeWFXVjJZV0pzWlNCSlJDQnZjaUJVUVVjZ2IzSWdRMHhCVTFNZ2MyVnNaV04wYjNKelhHNWNkSEp4ZFdsamEwVjRjSElnUFNBdlhpZy9PaU1vVzF4Y2R5MWRLeWw4S0Z4Y2R5c3BmRnhjTGloYlhGeDNMVjByS1Nra0x5eGNibHh1WEhSeWMybGliR2x1WnlBOUlDOWJLMzVkTHl4Y2JseHVYSFF2THlCRFUxTWdaWE5qWVhCbGMxeHVYSFF2THlCb2RIUndPaTh2ZDNkM0xuY3pMbTl5Wnk5VVVpOURVMU15TVM5emVXNWtZWFJoTG1oMGJXd2paWE5qWVhCbFpDMWphR0Z5WVdOMFpYSnpYRzVjZEhKMWJtVnpZMkZ3WlNBOUlHNWxkeUJTWldkRmVIQW9JRndpWEZ4Y1hGeGNYRnhiWEZ4Y1hHUmhMV1pCTFVaZGV6RXNObjFjSWlBcklIZG9hWFJsYzNCaFkyVWdLeUJjSWo5OFhGeGNYRnhjWEZ3b1cxNWNYRnhjY2x4Y1hGeHVYRnhjWEdaZEtWd2lMQ0JjSW1kY0lpQXBMRnh1WEhSbWRXNWxjMk5oY0dVZ1BTQm1kVzVqZEdsdmJpZ2daWE5qWVhCbExDQnViMjVJWlhnZ0tTQjdYRzVjZEZ4MGRtRnlJR2hwWjJnZ1BTQmNJakI0WENJZ0t5QmxjMk5oY0dVdWMyeHBZMlVvSURFZ0tTQXRJREI0TVRBd01EQTdYRzVjYmx4MFhIUnlaWFIxY200Z2JtOXVTR1Y0SUQ5Y2JseHVYSFJjZEZ4MEx5OGdVM1J5YVhBZ2RHaGxJR0poWTJ0emJHRnphQ0J3Y21WbWFYZ2dabkp2YlNCaElHNXZiaTFvWlhnZ1pYTmpZWEJsSUhObGNYVmxibU5sWEc1Y2RGeDBYSFJ1YjI1SVpYZ2dPbHh1WEc1Y2RGeDBYSFF2THlCU1pYQnNZV05sSUdFZ2FHVjRZV1JsWTJsdFlXd2daWE5qWVhCbElITmxjWFZsYm1ObElIZHBkR2dnZEdobElHVnVZMjlrWldRZ1ZXNXBZMjlrWlNCamIyUmxJSEJ2YVc1MFhHNWNkRngwWEhRdkx5QlRkWEJ3YjNKME9pQkpSU0E4UFRFeEsxeHVYSFJjZEZ4MEx5OGdSbTl5SUhaaGJIVmxjeUJ2ZFhSemFXUmxJSFJvWlNCQ1lYTnBZeUJOZFd4MGFXeHBibWQxWVd3Z1VHeGhibVVnS0VKTlVDa3NJRzFoYm5WaGJHeDVJR052Ym5OMGNuVmpkQ0JoWEc1Y2RGeDBYSFF2THlCemRYSnliMmRoZEdVZ2NHRnBjbHh1WEhSY2RGeDBhR2xuYUNBOElEQWdQMXh1WEhSY2RGeDBYSFJUZEhKcGJtY3Vabkp2YlVOb1lYSkRiMlJsS0NCb2FXZG9JQ3NnTUhneE1EQXdNQ0FwSURwY2JseDBYSFJjZEZ4MFUzUnlhVzVuTG1aeWIyMURhR0Z5UTI5a1pTZ2dhR2xuYUNBK1BpQXhNQ0I4SURCNFJEZ3dNQ3dnYUdsbmFDQW1JREI0TTBaR0lId2dNSGhFUXpBd0lDazdYRzVjZEgwc1hHNWNibHgwTHk4Z1ExTlRJSE4wY21sdVp5OXBaR1Z1ZEdsbWFXVnlJSE5sY21saGJHbDZZWFJwYjI1Y2JseDBMeThnYUhSMGNITTZMeTlrY21GbWRITXVZM056ZDJjdWIzSm5MMk56YzI5dEx5TmpiMjF0YjI0dGMyVnlhV0ZzYVhwcGJtY3RhV1JwYjIxelhHNWNkSEpqYzNObGMyTmhjR1VnUFNBdktGdGNYREF0WEZ4NE1XWmNYSGczWmwxOFhpMC9YRnhrS1h4ZUxTUjhXMTVjWERBdFhGeDRNV1pjWEhnM1ppMWNYSFZHUmtaR1hGeDNMVjB2Wnl4Y2JseDBabU56YzJWelkyRndaU0E5SUdaMWJtTjBhVzl1S0NCamFDd2dZWE5EYjJSbFVHOXBiblFnS1NCN1hHNWNkRngwYVdZZ0tDQmhjME52WkdWUWIybHVkQ0FwSUh0Y2JseHVYSFJjZEZ4MEx5OGdWU3N3TURBd0lFNVZURXdnWW1WamIyMWxjeUJWSzBaR1JrUWdVa1ZRVEVGRFJVMUZUbFFnUTBoQlVrRkRWRVZTWEc1Y2RGeDBYSFJwWmlBb0lHTm9JRDA5UFNCY0lseGNNRndpSUNrZ2UxeHVYSFJjZEZ4MFhIUnlaWFIxY200Z1hDSmNYSFZHUmtaRVhDSTdYRzVjZEZ4MFhIUjlYRzVjYmx4MFhIUmNkQzh2SUVOdmJuUnliMndnWTJoaGNtRmpkR1Z5Y3lCaGJtUWdLR1JsY0dWdVpHVnVkQ0IxY0c5dUlIQnZjMmwwYVc5dUtTQnVkVzFpWlhKeklHZGxkQ0JsYzJOaGNHVmtJR0Z6SUdOdlpHVWdjRzlwYm5SelhHNWNkRngwWEhSeVpYUjFjbTRnWTJndWMyeHBZMlVvSURBc0lDMHhJQ2tnS3lCY0lseGNYRnhjSWlBclhHNWNkRngwWEhSY2RHTm9MbU5vWVhKRGIyUmxRWFFvSUdOb0xteGxibWQwYUNBdElERWdLUzUwYjFOMGNtbHVaeWdnTVRZZ0tTQXJJRndpSUZ3aU8xeHVYSFJjZEgxY2JseHVYSFJjZEM4dklFOTBhR1Z5SUhCdmRHVnVkR2xoYkd4NUxYTndaV05wWVd3Z1FWTkRTVWtnWTJoaGNtRmpkR1Z5Y3lCblpYUWdZbUZqYTNOc1lYTm9MV1Z6WTJGd1pXUmNibHgwWEhSeVpYUjFjbTRnWENKY1hGeGNYQ0lnS3lCamFEdGNibHgwZlN4Y2JseHVYSFF2THlCVmMyVmtJR1p2Y2lCcFpuSmhiV1Z6WEc1Y2RDOHZJRk5sWlNCelpYUkViMk4xYldWdWRDZ3BYRzVjZEM4dklGSmxiVzkyYVc1bklIUm9aU0JtZFc1amRHbHZiaUIzY21Gd2NHVnlJR05oZFhObGN5QmhJRndpVUdWeWJXbHpjMmx2YmlCRVpXNXBaV1JjSWx4dVhIUXZMeUJsY25KdmNpQnBiaUJKUlZ4dVhIUjFibXh2WVdSSVlXNWtiR1Z5SUQwZ1puVnVZM1JwYjI0b0tTQjdYRzVjZEZ4MGMyVjBSRzlqZFcxbGJuUW9LVHRjYmx4MGZTeGNibHh1WEhScGJrUnBjMkZpYkdWa1JtbGxiR1J6WlhRZ1BTQmhaR1JEYjIxaWFXNWhkRzl5S0Z4dVhIUmNkR1oxYm1OMGFXOXVLQ0JsYkdWdElDa2dlMXh1WEhSY2RGeDBjbVYwZFhKdUlHVnNaVzB1WkdsellXSnNaV1FnUFQwOUlIUnlkV1VnSmlZZ1pXeGxiUzV1YjJSbFRtRnRaUzUwYjB4dmQyVnlRMkZ6WlNncElEMDlQU0JjSW1acFpXeGtjMlYwWENJN1hHNWNkRngwZlN4Y2JseDBYSFI3SUdScGNqb2dYQ0p3WVhKbGJuUk9iMlJsWENJc0lHNWxlSFE2SUZ3aWJHVm5aVzVrWENJZ2ZWeHVYSFFwTzF4dVhHNHZMeUJQY0hScGJXbDZaU0JtYjNJZ2NIVnphQzVoY0hCc2VTZ2dYeXdnVG05a1pVeHBjM1FnS1Z4dWRISjVJSHRjYmx4MGNIVnphQzVoY0hCc2VTaGNibHgwWEhRb0lHRnljaUE5SUhOc2FXTmxMbU5oYkd3b0lIQnlaV1psY25KbFpFUnZZeTVqYUdsc1pFNXZaR1Z6SUNrZ0tTeGNibHgwWEhSd2NtVm1aWEp5WldSRWIyTXVZMmhwYkdST2IyUmxjMXh1WEhRcE8xeHVYRzVjZEM4dklGTjFjSEJ2Y25RNklFRnVaSEp2YVdROE5DNHdYRzVjZEM4dklFUmxkR1ZqZENCemFXeGxiblJzZVNCbVlXbHNhVzVuSUhCMWMyZ3VZWEJ3YkhsY2JseDBMeThnWlhOc2FXNTBMV1JwYzJGaWJHVXRibVY0ZEMxc2FXNWxJRzV2TFhWdWRYTmxaQzFsZUhCeVpYTnphVzl1YzF4dVhIUmhjbkpiSUhCeVpXWmxjbkpsWkVSdll5NWphR2xzWkU1dlpHVnpMbXhsYm1kMGFDQmRMbTV2WkdWVWVYQmxPMXh1ZlNCallYUmphQ0FvSUdVZ0tTQjdYRzVjZEhCMWMyZ2dQU0I3SUdGd2NHeDVPaUJoY25JdWJHVnVaM1JvSUQ5Y2JseHVYSFJjZEM4dklFeGxkbVZ5WVdkbElITnNhV05sSUdsbUlIQnZjM05wWW14bFhHNWNkRngwWm5WdVkzUnBiMjRvSUhSaGNtZGxkQ3dnWld4eklDa2dlMXh1WEhSY2RGeDBjSFZ6YUU1aGRHbDJaUzVoY0hCc2VTZ2dkR0Z5WjJWMExDQnpiR2xqWlM1allXeHNLQ0JsYkhNZ0tTQXBPMXh1WEhSY2RIMGdPbHh1WEc1Y2RGeDBMeThnVTNWd2NHOXlkRG9nU1VVOE9WeHVYSFJjZEM4dklFOTBhR1Z5ZDJselpTQmhjSEJsYm1RZ1pHbHlaV04wYkhsY2JseDBYSFJtZFc1amRHbHZiaWdnZEdGeVoyVjBMQ0JsYkhNZ0tTQjdYRzVjZEZ4MFhIUjJZWElnYWlBOUlIUmhjbWRsZEM1c1pXNW5kR2dzWEc1Y2RGeDBYSFJjZEdrZ1BTQXdPMXh1WEc1Y2RGeDBYSFF2THlCRFlXNG5kQ0IwY25WemRDQk9iMlJsVEdsemRDNXNaVzVuZEdoY2JseDBYSFJjZEhkb2FXeGxJQ2dnS0NCMFlYSm5aWFJiSUdvckt5QmRJRDBnWld4eld5QnBLeXNnWFNBcElDa2dlMzFjYmx4MFhIUmNkSFJoY21kbGRDNXNaVzVuZEdnZ1BTQnFJQzBnTVR0Y2JseDBYSFI5WEc1Y2RIMDdYRzU5WEc1Y2JtWjFibU4wYVc5dUlGTnBlbnBzWlNnZ2MyVnNaV04wYjNJc0lHTnZiblJsZUhRc0lISmxjM1ZzZEhNc0lITmxaV1FnS1NCN1hHNWNkSFpoY2lCdExDQnBMQ0JsYkdWdExDQnVhV1FzSUcxaGRHTm9MQ0JuY205MWNITXNJRzVsZDFObGJHVmpkRzl5TEZ4dVhIUmNkRzVsZDBOdmJuUmxlSFFnUFNCamIyNTBaWGgwSUNZbUlHTnZiblJsZUhRdWIzZHVaWEpFYjJOMWJXVnVkQ3hjYmx4dVhIUmNkQzh2SUc1dlpHVlVlWEJsSUdSbFptRjFiSFJ6SUhSdklEa3NJSE5wYm1ObElHTnZiblJsZUhRZ1pHVm1ZWFZzZEhNZ2RHOGdaRzlqZFcxbGJuUmNibHgwWEhSdWIyUmxWSGx3WlNBOUlHTnZiblJsZUhRZ1B5QmpiMjUwWlhoMExtNXZaR1ZVZVhCbElEb2dPVHRjYmx4dVhIUnlaWE4xYkhSeklEMGdjbVZ6ZFd4MGN5QjhmQ0JiWFR0Y2JseHVYSFF2THlCU1pYUjFjbTRnWldGeWJIa2dabkp2YlNCallXeHNjeUIzYVhSb0lHbHVkbUZzYVdRZ2MyVnNaV04wYjNJZ2IzSWdZMjl1ZEdWNGRGeHVYSFJwWmlBb0lIUjVjR1Z2WmlCelpXeGxZM1J2Y2lBaFBUMGdYQ0p6ZEhKcGJtZGNJaUI4ZkNBaGMyVnNaV04wYjNJZ2ZIeGNibHgwWEhSdWIyUmxWSGx3WlNBaFBUMGdNU0FtSmlCdWIyUmxWSGx3WlNBaFBUMGdPU0FtSmlCdWIyUmxWSGx3WlNBaFBUMGdNVEVnS1NCN1hHNWNibHgwWEhSeVpYUjFjbTRnY21WemRXeDBjenRjYmx4MGZWeHVYRzVjZEM4dklGUnllU0IwYnlCemFHOXlkR04xZENCbWFXNWtJRzl3WlhKaGRHbHZibk1nS0dGeklHOXdjRzl6WldRZ2RHOGdabWxzZEdWeWN5a2dhVzRnU0ZSTlRDQmtiMk4xYldWdWRITmNibHgwYVdZZ0tDQWhjMlZsWkNBcElIdGNibHgwWEhSelpYUkViMk4xYldWdWRDZ2dZMjl1ZEdWNGRDQXBPMXh1WEhSY2RHTnZiblJsZUhRZ1BTQmpiMjUwWlhoMElIeDhJR1J2WTNWdFpXNTBPMXh1WEc1Y2RGeDBhV1lnS0NCa2IyTjFiV1Z1ZEVselNGUk5UQ0FwSUh0Y2JseHVYSFJjZEZ4MEx5OGdTV1lnZEdobElITmxiR1ZqZEc5eUlHbHpJSE4xWm1acFkybGxiblJzZVNCemFXMXdiR1VzSUhSeWVTQjFjMmx1WnlCaElGd2laMlYwS2tKNUtsd2lJRVJQVFNCdFpYUm9iMlJjYmx4MFhIUmNkQzh2SUNobGVHTmxjSFJwYm1jZ1JHOWpkVzFsYm5SR2NtRm5iV1Z1ZENCamIyNTBaWGgwTENCM2FHVnlaU0IwYUdVZ2JXVjBhRzlrY3lCa2IyNG5kQ0JsZUdsemRDbGNibHgwWEhSY2RHbG1JQ2dnYm05a1pWUjVjR1VnSVQwOUlERXhJQ1ltSUNnZ2JXRjBZMmdnUFNCeWNYVnBZMnRGZUhCeUxtVjRaV01vSUhObGJHVmpkRzl5SUNrZ0tTQXBJSHRjYmx4dVhIUmNkRngwWEhRdkx5QkpSQ0J6Wld4bFkzUnZjbHh1WEhSY2RGeDBYSFJwWmlBb0lDZ2diU0E5SUcxaGRHTm9XeUF4SUYwZ0tTQXBJSHRjYmx4dVhIUmNkRngwWEhSY2RDOHZJRVJ2WTNWdFpXNTBJR052Ym5SbGVIUmNibHgwWEhSY2RGeDBYSFJwWmlBb0lHNXZaR1ZVZVhCbElEMDlQU0E1SUNrZ2UxeHVYSFJjZEZ4MFhIUmNkRngwYVdZZ0tDQW9JR1ZzWlcwZ1BTQmpiMjUwWlhoMExtZGxkRVZzWlcxbGJuUkNlVWxrS0NCdElDa2dLU0FwSUh0Y2JseHVYSFJjZEZ4MFhIUmNkRngwWEhRdkx5QlRkWEJ3YjNKME9pQkpSU3dnVDNCbGNtRXNJRmRsWW10cGRGeHVYSFJjZEZ4MFhIUmNkRngwWEhRdkx5QlVUMFJQT2lCcFpHVnVkR2xtZVNCMlpYSnphVzl1YzF4dVhIUmNkRngwWEhSY2RGeDBYSFF2THlCblpYUkZiR1Z0Wlc1MFFubEpaQ0JqWVc0Z2JXRjBZMmdnWld4bGJXVnVkSE1nWW5rZ2JtRnRaU0JwYm5OMFpXRmtJRzltSUVsRVhHNWNkRngwWEhSY2RGeDBYSFJjZEdsbUlDZ2daV3hsYlM1cFpDQTlQVDBnYlNBcElIdGNibHgwWEhSY2RGeDBYSFJjZEZ4MFhIUnlaWE4xYkhSekxuQjFjMmdvSUdWc1pXMGdLVHRjYmx4MFhIUmNkRngwWEhSY2RGeDBYSFJ5WlhSMWNtNGdjbVZ6ZFd4MGN6dGNibHgwWEhSY2RGeDBYSFJjZEZ4MGZWeHVYSFJjZEZ4MFhIUmNkRngwZlNCbGJITmxJSHRjYmx4MFhIUmNkRngwWEhSY2RGeDBjbVYwZFhKdUlISmxjM1ZzZEhNN1hHNWNkRngwWEhSY2RGeDBYSFI5WEc1Y2JseDBYSFJjZEZ4MFhIUXZMeUJGYkdWdFpXNTBJR052Ym5SbGVIUmNibHgwWEhSY2RGeDBYSFI5SUdWc2MyVWdlMXh1WEc1Y2RGeDBYSFJjZEZ4MFhIUXZMeUJUZFhCd2IzSjBPaUJKUlN3Z1QzQmxjbUVzSUZkbFltdHBkRnh1WEhSY2RGeDBYSFJjZEZ4MEx5OGdWRTlFVHpvZ2FXUmxiblJwWm5rZ2RtVnljMmx2Ym5OY2JseDBYSFJjZEZ4MFhIUmNkQzh2SUdkbGRFVnNaVzFsYm5SQ2VVbGtJR05oYmlCdFlYUmphQ0JsYkdWdFpXNTBjeUJpZVNCdVlXMWxJR2x1YzNSbFlXUWdiMllnU1VSY2JseDBYSFJjZEZ4MFhIUmNkR2xtSUNnZ2JtVjNRMjl1ZEdWNGRDQW1KaUFvSUdWc1pXMGdQU0J1WlhkRGIyNTBaWGgwTG1kbGRFVnNaVzFsYm5SQ2VVbGtLQ0J0SUNrZ0tTQW1KbHh1WEhSY2RGeDBYSFJjZEZ4MFhIUmpiMjUwWVdsdWN5Z2dZMjl1ZEdWNGRDd2daV3hsYlNBcElDWW1YRzVjZEZ4MFhIUmNkRngwWEhSY2RHVnNaVzB1YVdRZ1BUMDlJRzBnS1NCN1hHNWNibHgwWEhSY2RGeDBYSFJjZEZ4MGNtVnpkV3gwY3k1d2RYTm9LQ0JsYkdWdElDazdYRzVjZEZ4MFhIUmNkRngwWEhSY2RISmxkSFZ5YmlCeVpYTjFiSFJ6TzF4dVhIUmNkRngwWEhSY2RGeDBmVnh1WEhSY2RGeDBYSFJjZEgxY2JseHVYSFJjZEZ4MFhIUXZMeUJVZVhCbElITmxiR1ZqZEc5eVhHNWNkRngwWEhSY2RIMGdaV3h6WlNCcFppQW9JRzFoZEdOb1d5QXlJRjBnS1NCN1hHNWNkRngwWEhSY2RGeDBjSFZ6YUM1aGNIQnNlU2dnY21WemRXeDBjeXdnWTI5dWRHVjRkQzVuWlhSRmJHVnRaVzUwYzBKNVZHRm5UbUZ0WlNnZ2MyVnNaV04wYjNJZ0tTQXBPMXh1WEhSY2RGeDBYSFJjZEhKbGRIVnliaUJ5WlhOMWJIUnpPMXh1WEc1Y2RGeDBYSFJjZEM4dklFTnNZWE56SUhObGJHVmpkRzl5WEc1Y2RGeDBYSFJjZEgwZ1pXeHpaU0JwWmlBb0lDZ2diU0E5SUcxaGRHTm9XeUF6SUYwZ0tTQW1KaUJ6ZFhCd2IzSjBMbWRsZEVWc1pXMWxiblJ6UW5sRGJHRnpjMDVoYldVZ0ppWmNibHgwWEhSY2RGeDBYSFJqYjI1MFpYaDBMbWRsZEVWc1pXMWxiblJ6UW5sRGJHRnpjMDVoYldVZ0tTQjdYRzVjYmx4MFhIUmNkRngwWEhSd2RYTm9MbUZ3Y0d4NUtDQnlaWE4xYkhSekxDQmpiMjUwWlhoMExtZGxkRVZzWlcxbGJuUnpRbmxEYkdGemMwNWhiV1VvSUcwZ0tTQXBPMXh1WEhSY2RGeDBYSFJjZEhKbGRIVnliaUJ5WlhOMWJIUnpPMXh1WEhSY2RGeDBYSFI5WEc1Y2RGeDBYSFI5WEc1Y2JseDBYSFJjZEM4dklGUmhhMlVnWVdSMllXNTBZV2RsSUc5bUlIRjFaWEo1VTJWc1pXTjBiM0pCYkd4Y2JseDBYSFJjZEdsbUlDZ2djM1Z3Y0c5eWRDNXhjMkVnSmlaY2JseDBYSFJjZEZ4MElXNXZibTVoZEdsMlpWTmxiR1ZqZEc5eVEyRmphR1ZiSUhObGJHVmpkRzl5SUNzZ1hDSWdYQ0lnWFNBbUpseHVYSFJjZEZ4MFhIUW9JQ0Z5WW5WblozbFJVMEVnZkh3Z0lYSmlkV2RuZVZGVFFTNTBaWE4wS0NCelpXeGxZM1J2Y2lBcElDa2dKaVpjYmx4dVhIUmNkRngwWEhRdkx5QlRkWEJ3YjNKME9pQkpSU0E0SUc5dWJIbGNibHgwWEhSY2RGeDBMeThnUlhoamJIVmtaU0J2WW1wbFkzUWdaV3hsYldWdWRITmNibHgwWEhSY2RGeDBLQ0J1YjJSbFZIbHdaU0FoUFQwZ01TQjhmQ0JqYjI1MFpYaDBMbTV2WkdWT1lXMWxMblJ2VEc5M1pYSkRZWE5sS0NrZ0lUMDlJRndpYjJKcVpXTjBYQ0lnS1NBcElIdGNibHh1WEhSY2RGeDBYSFJ1WlhkVFpXeGxZM1J2Y2lBOUlITmxiR1ZqZEc5eU8xeHVYSFJjZEZ4MFhIUnVaWGREYjI1MFpYaDBJRDBnWTI5dWRHVjRkRHRjYmx4dVhIUmNkRngwWEhRdkx5QnhVMEVnWTI5dWMybGtaWEp6SUdWc1pXMWxiblJ6SUc5MWRITnBaR1VnWVNCelkyOXdhVzVuSUhKdmIzUWdkMmhsYmlCbGRtRnNkV0YwYVc1bklHTm9hV3hrSUc5eVhHNWNkRngwWEhSY2RDOHZJR1JsYzJObGJtUmhiblFnWTI5dFltbHVZWFJ2Y25Nc0lIZG9hV05vSUdseklHNXZkQ0IzYUdGMElIZGxJSGRoYm5RdVhHNWNkRngwWEhSY2RDOHZJRWx1SUhOMVkyZ2dZMkZ6WlhNc0lIZGxJSGR2Y21zZ1lYSnZkVzVrSUhSb1pTQmlaV2hoZG1sdmNpQmllU0J3Y21WbWFYaHBibWNnWlhabGNua2djMlZzWldOMGIzSWdhVzRnZEdobFhHNWNkRngwWEhSY2RDOHZJR3hwYzNRZ2QybDBhQ0JoYmlCSlJDQnpaV3hsWTNSdmNpQnlaV1psY21WdVkybHVaeUIwYUdVZ2MyTnZjR1VnWTI5dWRHVjRkQzVjYmx4MFhIUmNkRngwTHk4Z1ZHaGxJSFJsWTJodWFYRjFaU0JvWVhNZ2RHOGdZbVVnZFhObFpDQmhjeUIzWld4c0lIZG9aVzRnWVNCc1pXRmthVzVuSUdOdmJXSnBibUYwYjNJZ2FYTWdkWE5sWkZ4dVhIUmNkRngwWEhRdkx5QmhjeUJ6ZFdOb0lITmxiR1ZqZEc5eWN5QmhjbVVnYm05MElISmxZMjluYm1sNlpXUWdZbmtnY1hWbGNubFRaV3hsWTNSdmNrRnNiQzVjYmx4MFhIUmNkRngwTHk4Z1ZHaGhibXR6SUhSdklFRnVaSEpsZHlCRWRYQnZiblFnWm05eUlIUm9hWE1nZEdWamFHNXBjWFZsTGx4dVhIUmNkRngwWEhScFppQW9JRzV2WkdWVWVYQmxJRDA5UFNBeElDWW1YRzVjZEZ4MFhIUmNkRngwS0NCeVpHVnpZMlZ1WkM1MFpYTjBLQ0J6Wld4bFkzUnZjaUFwSUh4OElISmpiMjFpYVc1aGRHOXljeTUwWlhOMEtDQnpaV3hsWTNSdmNpQXBJQ2tnS1NCN1hHNWNibHgwWEhSY2RGeDBYSFF2THlCRmVIQmhibVFnWTI5dWRHVjRkQ0JtYjNJZ2MybGliR2x1WnlCelpXeGxZM1J2Y25OY2JseDBYSFJjZEZ4MFhIUnVaWGREYjI1MFpYaDBJRDBnY25OcFlteHBibWN1ZEdWemRDZ2djMlZzWldOMGIzSWdLU0FtSmlCMFpYTjBRMjl1ZEdWNGRDZ2dZMjl1ZEdWNGRDNXdZWEpsYm5ST2IyUmxJQ2tnZkh4Y2JseDBYSFJjZEZ4MFhIUmNkR052Ym5SbGVIUTdYRzVjYmx4MFhIUmNkRngwWEhRdkx5QlhaU0JqWVc0Z2RYTmxJRHB6WTI5d1pTQnBibk4wWldGa0lHOW1JSFJvWlNCSlJDQm9ZV05ySUdsbUlIUm9aU0JpY205M2MyVnlYRzVjZEZ4MFhIUmNkRngwTHk4Z2MzVndjRzl5ZEhNZ2FYUWdKaUJwWmlCM1pTZHlaU0J1YjNRZ1kyaGhibWRwYm1jZ2RHaGxJR052Ym5SbGVIUXVYRzVjZEZ4MFhIUmNkRngwYVdZZ0tDQnVaWGREYjI1MFpYaDBJQ0U5UFNCamIyNTBaWGgwSUh4OElDRnpkWEJ3YjNKMExuTmpiM0JsSUNrZ2UxeHVYRzVjZEZ4MFhIUmNkRngwWEhRdkx5QkRZWEIwZFhKbElIUm9aU0JqYjI1MFpYaDBJRWxFTENCelpYUjBhVzVuSUdsMElHWnBjbk4wSUdsbUlHNWxZMlZ6YzJGeWVWeHVYSFJjZEZ4MFhIUmNkRngwYVdZZ0tDQW9JRzVwWkNBOUlHTnZiblJsZUhRdVoyVjBRWFIwY21saWRYUmxLQ0JjSW1sa1hDSWdLU0FwSUNrZ2UxeHVYSFJjZEZ4MFhIUmNkRngwWEhSdWFXUWdQU0J1YVdRdWNtVndiR0ZqWlNnZ2NtTnpjMlZ6WTJGd1pTd2dabU56YzJWelkyRndaU0FwTzF4dVhIUmNkRngwWEhSY2RGeDBmU0JsYkhObElIdGNibHgwWEhSY2RGeDBYSFJjZEZ4MFkyOXVkR1Y0ZEM1elpYUkJkSFJ5YVdKMWRHVW9JRndpYVdSY0lpd2dLQ0J1YVdRZ1BTQmxlSEJoYm1SdklDa2dLVHRjYmx4MFhIUmNkRngwWEhSY2RIMWNibHgwWEhSY2RGeDBYSFI5WEc1Y2JseDBYSFJjZEZ4MFhIUXZMeUJRY21WbWFYZ2daWFpsY25rZ2MyVnNaV04wYjNJZ2FXNGdkR2hsSUd4cGMzUmNibHgwWEhSY2RGeDBYSFJuY205MWNITWdQU0IwYjJ0bGJtbDZaU2dnYzJWc1pXTjBiM0lnS1R0Y2JseDBYSFJjZEZ4MFhIUnBJRDBnWjNKdmRYQnpMbXhsYm1kMGFEdGNibHgwWEhSY2RGeDBYSFIzYUdsc1pTQW9JR2t0TFNBcElIdGNibHgwWEhSY2RGeDBYSFJjZEdkeWIzVndjMXNnYVNCZElEMGdLQ0J1YVdRZ1B5QmNJaU5jSWlBcklHNXBaQ0E2SUZ3aU9uTmpiM0JsWENJZ0tTQXJJRndpSUZ3aUlDdGNibHgwWEhSY2RGeDBYSFJjZEZ4MGRHOVRaV3hsWTNSdmNpZ2daM0p2ZFhCeld5QnBJRjBnS1R0Y2JseDBYSFJjZEZ4MFhIUjlYRzVjZEZ4MFhIUmNkRngwYm1WM1UyVnNaV04wYjNJZ1BTQm5jbTkxY0hNdWFtOXBiaWdnWENJc1hDSWdLVHRjYmx4MFhIUmNkRngwZlZ4dVhHNWNkRngwWEhSY2RIUnllU0I3WEc1Y2JseDBYSFJjZEZ4MFhIUXZMeUJnY1ZOQllDQnRZWGtnYm05MElIUm9jbTkzSUdadmNpQjFibkpsWTI5bmJtbDZaV1FnY0dGeWRITWdkWE5wYm1jZ1ptOXlaMmwyYVc1bklIQmhjbk5wYm1jNlhHNWNkRngwWEhSY2RGeDBMeThnYUhSMGNITTZMeTlrY21GbWRITXVZM056ZDJjdWIzSm5MM05sYkdWamRHOXljeThqWm05eVoybDJhVzVuTFhObGJHVmpkRzl5WEc1Y2RGeDBYSFJjZEZ4MEx5OGdiR2xyWlNCMGFHVWdZRHBvWVhNb0tXQWdjSE5sZFdSdkxXTnNZWE56T2x4dVhIUmNkRngwWEhSY2RDOHZJR2gwZEhCek9pOHZaSEpoWm5SekxtTnpjM2RuTG05eVp5OXpaV3hsWTNSdmNuTXZJM0psYkdGMGFXOXVZV3hjYmx4MFhIUmNkRngwWEhRdkx5QmdRMU5UTG5OMWNIQnZjblJ6WUNCcGN5QnpkR2xzYkNCbGVIQmxZM1JsWkNCMGJ5QnlaWFIxY200Z1lHWmhiSE5sWUNCMGFHVnVPbHh1WEhSY2RGeDBYSFJjZEM4dklHaDBkSEJ6T2k4dlpISmhablJ6TG1OemMzZG5MbTl5Wnk5amMzTXRZMjl1WkdsMGFXOXVZV3d0TkM4amRIbHdaV1JsWmkxemRYQndiM0owY3kxelpXeGxZM1J2Y2kxbWJseHVYSFJjZEZ4MFhIUmNkQzh2SUdoMGRIQnpPaTh2WkhKaFpuUnpMbU56YzNkbkxtOXlaeTlqYzNNdFkyOXVaR2wwYVc5dVlXd3ROQzhqWkdadUxYTjFjSEJ2Y25RdGMyVnNaV04wYjNKY2JseDBYSFJjZEZ4MFhIUnBaaUFvSUhOMWNIQnZjblF1WTNOelUzVndjRzl5ZEhOVFpXeGxZM1J2Y2lBbUpseHVYRzVjZEZ4MFhIUmNkRngwWEhRdkx5QmxjMnhwYm5RdFpHbHpZV0pzWlMxdVpYaDBMV3hwYm1VZ2JtOHRkVzVrWldaY2JseDBYSFJjZEZ4MFhIUmNkQ0ZEVTFNdWMzVndjRzl5ZEhNb0lGd2ljMlZzWldOMGIzSW9YQ0lnS3lCdVpYZFRaV3hsWTNSdmNpQXJJRndpS1Z3aUlDa2dLU0I3WEc1Y2JseDBYSFJjZEZ4MFhIUmNkQzh2SUZOMWNIQnZjblE2SUVsRklERXhLMXh1WEhSY2RGeDBYSFJjZEZ4MEx5OGdWR2h5YjNjZ2RHOGdaMlYwSUhSdklIUm9aU0J6WVcxbElHTnZaR1VnY0dGMGFDQmhjeUJoYmlCbGNuSnZjaUJrYVhKbFkzUnNlU0JwYmlCeFUwRXVYRzVjZEZ4MFhIUmNkRngwWEhRdkx5Qk9iM1JsT2lCdmJtTmxJSGRsSUc5dWJIa2djM1Z3Y0c5eWRDQmljbTkzYzJWeUlITjFjSEJ2Y25ScGJtZGNibHgwWEhSY2RGeDBYSFJjZEM4dklHQkRVMU11YzNWd2NHOXlkSE1vSjNObGJHVmpkRzl5S0M0dUxpa25LV0FzSUhkbElHTmhiaUJ0YjNOMElHeHBhMlZzZVNCa2NtOXdYRzVjZEZ4MFhIUmNkRngwWEhRdkx5QjBhR1VnWUhSeWVTMWpZWFJqYUdBdUlFbEZJR1J2WlhOdUozUWdhVzF3YkdWdFpXNTBJSFJvWlNCQlVFa3VYRzVjZEZ4MFhIUmNkRngwWEhSMGFISnZkeUJ1WlhjZ1JYSnliM0lvS1R0Y2JseDBYSFJjZEZ4MFhIUjlYRzVjYmx4MFhIUmNkRngwWEhSd2RYTm9MbUZ3Y0d4NUtDQnlaWE4xYkhSekxGeHVYSFJjZEZ4MFhIUmNkRngwYm1WM1EyOXVkR1Y0ZEM1eGRXVnllVk5sYkdWamRHOXlRV3hzS0NCdVpYZFRaV3hsWTNSdmNpQXBYRzVjZEZ4MFhIUmNkRngwS1R0Y2JseDBYSFJjZEZ4MFhIUnlaWFIxY200Z2NtVnpkV3gwY3p0Y2JseDBYSFJjZEZ4MGZTQmpZWFJqYUNBb0lIRnpZVVZ5Y205eUlDa2dlMXh1WEhSY2RGeDBYSFJjZEc1dmJtNWhkR2wyWlZObGJHVmpkRzl5UTJGamFHVW9JSE5sYkdWamRHOXlMQ0IwY25WbElDazdYRzVjZEZ4MFhIUmNkSDBnWm1sdVlXeHNlU0I3WEc1Y2RGeDBYSFJjZEZ4MGFXWWdLQ0J1YVdRZ1BUMDlJR1Y0Y0dGdVpHOGdLU0I3WEc1Y2RGeDBYSFJjZEZ4MFhIUmpiMjUwWlhoMExuSmxiVzkyWlVGMGRISnBZblYwWlNnZ1hDSnBaRndpSUNrN1hHNWNkRngwWEhSY2RGeDBmVnh1WEhSY2RGeDBYSFI5WEc1Y2RGeDBYSFI5WEc1Y2RGeDBmVnh1WEhSOVhHNWNibHgwTHk4Z1FXeHNJRzkwYUdWeWMxeHVYSFJ5WlhSMWNtNGdjMlZzWldOMEtDQnpaV3hsWTNSdmNpNXlaWEJzWVdObEtDQnlkSEpwYlN3Z1hDSWtNVndpSUNrc0lHTnZiblJsZUhRc0lISmxjM1ZzZEhNc0lITmxaV1FnS1R0Y2JuMWNibHh1THlvcVhHNGdLaUJEY21WaGRHVWdhMlY1TFhaaGJIVmxJR05oWTJobGN5QnZaaUJzYVcxcGRHVmtJSE5wZW1WY2JpQXFJRUJ5WlhSMWNtNXpJSHRtZFc1amRHbHZiaWh6ZEhKcGJtY3NJRzlpYW1WamRDbDlJRkpsZEhWeWJuTWdkR2hsSUU5aWFtVmpkQ0JrWVhSaElHRm1kR1Z5SUhOMGIzSnBibWNnYVhRZ2IyNGdhWFJ6Wld4bUlIZHBkR2hjYmlBcVhIUndjbTl3WlhKMGVTQnVZVzFsSUhSb1pTQW9jM0JoWTJVdGMzVm1abWw0WldRcElITjBjbWx1WnlCaGJtUWdLR2xtSUhSb1pTQmpZV05vWlNCcGN5QnNZWEpuWlhJZ2RHaGhiaUJGZUhCeUxtTmhZMmhsVEdWdVozUm9LVnh1SUNwY2RHUmxiR1YwYVc1bklIUm9aU0J2YkdSbGMzUWdaVzUwY25sY2JpQXFMMXh1Wm5WdVkzUnBiMjRnWTNKbFlYUmxRMkZqYUdVb0tTQjdYRzVjZEhaaGNpQnJaWGx6SUQwZ1cxMDdYRzVjYmx4MFpuVnVZM1JwYjI0Z1kyRmphR1VvSUd0bGVTd2dkbUZzZFdVZ0tTQjdYRzVjYmx4MFhIUXZMeUJWYzJVZ0tHdGxlU0FySUZ3aUlGd2lLU0IwYnlCaGRtOXBaQ0JqYjJ4c2FYTnBiMjRnZDJsMGFDQnVZWFJwZG1VZ2NISnZkRzkwZVhCbElIQnliM0JsY25ScFpYTWdLSE5sWlNCSmMzTjFaU0FqTVRVM0tWeHVYSFJjZEdsbUlDZ2dhMlY1Y3k1d2RYTm9LQ0JyWlhrZ0t5QmNJaUJjSWlBcElENGdSWGh3Y2k1allXTm9aVXhsYm1kMGFDQXBJSHRjYmx4dVhIUmNkRngwTHk4Z1QyNXNlU0JyWldWd0lIUm9aU0J0YjNOMElISmxZMlZ1ZENCbGJuUnlhV1Z6WEc1Y2RGeDBYSFJrWld4bGRHVWdZMkZqYUdWYklHdGxlWE11YzJocFpuUW9LU0JkTzF4dVhIUmNkSDFjYmx4MFhIUnlaWFIxY200Z0tDQmpZV05vWlZzZ2EyVjVJQ3NnWENJZ1hDSWdYU0E5SUhaaGJIVmxJQ2s3WEc1Y2RIMWNibHgwY21WMGRYSnVJR05oWTJobE8xeHVmVnh1WEc0dktpcGNiaUFxSUUxaGNtc2dZU0JtZFc1amRHbHZiaUJtYjNJZ2MzQmxZMmxoYkNCMWMyVWdZbmtnVTJsNmVteGxYRzRnS2lCQWNHRnlZVzBnZTBaMWJtTjBhVzl1ZlNCbWJpQlVhR1VnWm5WdVkzUnBiMjRnZEc4Z2JXRnlhMXh1SUNvdlhHNW1kVzVqZEdsdmJpQnRZWEpyUm5WdVkzUnBiMjRvSUdadUlDa2dlMXh1WEhSbWJsc2daWGh3WVc1a2J5QmRJRDBnZEhKMVpUdGNibHgwY21WMGRYSnVJR1p1TzF4dWZWeHVYRzR2S2lwY2JpQXFJRk4xY0hCdmNuUWdkR1Z6ZEdsdVp5QjFjMmx1WnlCaGJpQmxiR1Z0Wlc1MFhHNGdLaUJBY0dGeVlXMGdlMFoxYm1OMGFXOXVmU0JtYmlCUVlYTnpaV1FnZEdobElHTnlaV0YwWldRZ1pXeGxiV1Z1ZENCaGJtUWdjbVYwZFhKdWN5QmhJR0p2YjJ4bFlXNGdjbVZ6ZFd4MFhHNGdLaTljYm1aMWJtTjBhVzl1SUdGemMyVnlkQ2dnWm00Z0tTQjdYRzVjZEhaaGNpQmxiQ0E5SUdSdlkzVnRaVzUwTG1OeVpXRjBaVVZzWlcxbGJuUW9JRndpWm1sbGJHUnpaWFJjSWlBcE8xeHVYRzVjZEhSeWVTQjdYRzVjZEZ4MGNtVjBkWEp1SUNFaFptNG9JR1ZzSUNrN1hHNWNkSDBnWTJGMFkyZ2dLQ0JsSUNrZ2UxeHVYSFJjZEhKbGRIVnliaUJtWVd4elpUdGNibHgwZlNCbWFXNWhiR3g1SUh0Y2JseHVYSFJjZEM4dklGSmxiVzkyWlNCbWNtOXRJR2wwY3lCd1lYSmxiblFnWW5rZ1pHVm1ZWFZzZEZ4dVhIUmNkR2xtSUNnZ1pXd3VjR0Z5Wlc1MFRtOWtaU0FwSUh0Y2JseDBYSFJjZEdWc0xuQmhjbVZ1ZEU1dlpHVXVjbVZ0YjNabFEyaHBiR1FvSUdWc0lDazdYRzVjZEZ4MGZWeHVYRzVjZEZ4MEx5OGdjbVZzWldGelpTQnRaVzF2Y25rZ2FXNGdTVVZjYmx4MFhIUmxiQ0E5SUc1MWJHdzdYRzVjZEgxY2JuMWNibHh1THlvcVhHNGdLaUJCWkdSeklIUm9aU0J6WVcxbElHaGhibVJzWlhJZ1ptOXlJR0ZzYkNCdlppQjBhR1VnYzNCbFkybG1hV1ZrSUdGMGRISnpYRzRnS2lCQWNHRnlZVzBnZTFOMGNtbHVaMzBnWVhSMGNuTWdVR2x3WlMxelpYQmhjbUYwWldRZ2JHbHpkQ0J2WmlCaGRIUnlhV0oxZEdWelhHNGdLaUJBY0dGeVlXMGdlMFoxYm1OMGFXOXVmU0JvWVc1a2JHVnlJRlJvWlNCdFpYUm9iMlFnZEdoaGRDQjNhV3hzSUdKbElHRndjR3hwWldSY2JpQXFMMXh1Wm5WdVkzUnBiMjRnWVdSa1NHRnVaR3hsS0NCaGRIUnljeXdnYUdGdVpHeGxjaUFwSUh0Y2JseDBkbUZ5SUdGeWNpQTlJR0YwZEhKekxuTndiR2wwS0NCY0lueGNJaUFwTEZ4dVhIUmNkR2tnUFNCaGNuSXViR1Z1WjNSb08xeHVYRzVjZEhkb2FXeGxJQ2dnYVMwdElDa2dlMXh1WEhSY2RFVjRjSEl1WVhSMGNraGhibVJzWlZzZ1lYSnlXeUJwSUYwZ1hTQTlJR2hoYm1Sc1pYSTdYRzVjZEgxY2JuMWNibHh1THlvcVhHNGdLaUJEYUdWamEzTWdaRzlqZFcxbGJuUWdiM0prWlhJZ2IyWWdkSGR2SUhOcFlteHBibWR6WEc0Z0tpQkFjR0Z5WVcwZ2UwVnNaVzFsYm5SOUlHRmNiaUFxSUVCd1lYSmhiU0I3Uld4bGJXVnVkSDBnWWx4dUlDb2dRSEpsZEhWeWJuTWdlMDUxYldKbGNuMGdVbVYwZFhKdWN5QnNaWE56SUhSb1lXNGdNQ0JwWmlCaElIQnlaV05sWkdWeklHSXNJR2R5WldGMFpYSWdkR2hoYmlBd0lHbG1JR0VnWm05c2JHOTNjeUJpWEc0Z0tpOWNibVoxYm1OMGFXOXVJSE5wWW14cGJtZERhR1ZqYXlnZ1lTd2dZaUFwSUh0Y2JseDBkbUZ5SUdOMWNpQTlJR0lnSmlZZ1lTeGNibHgwWEhSa2FXWm1JRDBnWTNWeUlDWW1JR0V1Ym05a1pWUjVjR1VnUFQwOUlERWdKaVlnWWk1dWIyUmxWSGx3WlNBOVBUMGdNU0FtSmx4dVhIUmNkRngwWVM1emIzVnlZMlZKYm1SbGVDQXRJR0l1YzI5MWNtTmxTVzVrWlhnN1hHNWNibHgwTHk4Z1ZYTmxJRWxGSUhOdmRYSmpaVWx1WkdWNElHbG1JR0YyWVdsc1lXSnNaU0J2YmlCaWIzUm9JRzV2WkdWelhHNWNkR2xtSUNnZ1pHbG1aaUFwSUh0Y2JseDBYSFJ5WlhSMWNtNGdaR2xtWmp0Y2JseDBmVnh1WEc1Y2RDOHZJRU5vWldOcklHbG1JR0lnWm05c2JHOTNjeUJoWEc1Y2RHbG1JQ2dnWTNWeUlDa2dlMXh1WEhSY2RIZG9hV3hsSUNnZ0tDQmpkWElnUFNCamRYSXVibVY0ZEZOcFlteHBibWNnS1NBcElIdGNibHgwWEhSY2RHbG1JQ2dnWTNWeUlEMDlQU0JpSUNrZ2UxeHVYSFJjZEZ4MFhIUnlaWFIxY200Z0xURTdYRzVjZEZ4MFhIUjlYRzVjZEZ4MGZWeHVYSFI5WEc1Y2JseDBjbVYwZFhKdUlHRWdQeUF4SURvZ0xURTdYRzU5WEc1Y2JpOHFLbHh1SUNvZ1VtVjBkWEp1Y3lCaElHWjFibU4wYVc5dUlIUnZJSFZ6WlNCcGJpQndjMlYxWkc5eklHWnZjaUJwYm5CMWRDQjBlWEJsYzF4dUlDb2dRSEJoY21GdElIdFRkSEpwYm1kOUlIUjVjR1ZjYmlBcUwxeHVablZ1WTNScGIyNGdZM0psWVhSbFNXNXdkWFJRYzJWMVpHOG9JSFI1Y0dVZ0tTQjdYRzVjZEhKbGRIVnliaUJtZFc1amRHbHZiaWdnWld4bGJTQXBJSHRjYmx4MFhIUjJZWElnYm1GdFpTQTlJR1ZzWlcwdWJtOWtaVTVoYldVdWRHOU1iM2RsY2tOaGMyVW9LVHRjYmx4MFhIUnlaWFIxY200Z2JtRnRaU0E5UFQwZ1hDSnBibkIxZEZ3aUlDWW1JR1ZzWlcwdWRIbHdaU0E5UFQwZ2RIbHdaVHRjYmx4MGZUdGNibjFjYmx4dUx5b3FYRzRnS2lCU1pYUjFjbTV6SUdFZ1puVnVZM1JwYjI0Z2RHOGdkWE5sSUdsdUlIQnpaWFZrYjNNZ1ptOXlJR0oxZEhSdmJuTmNiaUFxSUVCd1lYSmhiU0I3VTNSeWFXNW5mU0IwZVhCbFhHNGdLaTljYm1aMWJtTjBhVzl1SUdOeVpXRjBaVUoxZEhSdmJsQnpaWFZrYnlnZ2RIbHdaU0FwSUh0Y2JseDBjbVYwZFhKdUlHWjFibU4wYVc5dUtDQmxiR1Z0SUNrZ2UxeHVYSFJjZEhaaGNpQnVZVzFsSUQwZ1pXeGxiUzV1YjJSbFRtRnRaUzUwYjB4dmQyVnlRMkZ6WlNncE8xeHVYSFJjZEhKbGRIVnliaUFvSUc1aGJXVWdQVDA5SUZ3aWFXNXdkWFJjSWlCOGZDQnVZVzFsSUQwOVBTQmNJbUoxZEhSdmJsd2lJQ2tnSmlZZ1pXeGxiUzUwZVhCbElEMDlQU0IwZVhCbE8xeHVYSFI5TzF4dWZWeHVYRzR2S2lwY2JpQXFJRkpsZEhWeWJuTWdZU0JtZFc1amRHbHZiaUIwYnlCMWMyVWdhVzRnY0hObGRXUnZjeUJtYjNJZ09tVnVZV0pzWldRdk9tUnBjMkZpYkdWa1hHNGdLaUJBY0dGeVlXMGdlMEp2YjJ4bFlXNTlJR1JwYzJGaWJHVmtJSFJ5ZFdVZ1ptOXlJRHBrYVhOaFlteGxaRHNnWm1Gc2MyVWdabTl5SURwbGJtRmliR1ZrWEc0Z0tpOWNibVoxYm1OMGFXOXVJR055WldGMFpVUnBjMkZpYkdWa1VITmxkV1J2S0NCa2FYTmhZbXhsWkNBcElIdGNibHh1WEhRdkx5QkxibTkzYmlBNlpHbHpZV0pzWldRZ1ptRnNjMlVnY0c5emFYUnBkbVZ6T2lCbWFXVnNaSE5sZEZ0a2FYTmhZbXhsWkYwZ1BpQnNaV2RsYm1RNmJuUm9MVzltTFhSNWNHVW9iaXN5S1NBNlkyRnVMV1JwYzJGaWJHVmNibHgwY21WMGRYSnVJR1oxYm1OMGFXOXVLQ0JsYkdWdElDa2dlMXh1WEc1Y2RGeDBMeThnVDI1c2VTQmpaWEowWVdsdUlHVnNaVzFsYm5SeklHTmhiaUJ0WVhSamFDQTZaVzVoWW14bFpDQnZjaUE2WkdsellXSnNaV1JjYmx4MFhIUXZMeUJvZEhSd2N6b3ZMMmgwYld3dWMzQmxZeTUzYUdGMGQyY3ViM0puTDIxMWJIUnBjR0ZuWlM5elkzSnBjSFJwYm1jdWFIUnRiQ056Wld4bFkzUnZjaTFsYm1GaWJHVmtYRzVjZEZ4MEx5OGdhSFIwY0hNNkx5OW9kRzFzTG5Od1pXTXVkMmhoZEhkbkxtOXlaeTl0ZFd4MGFYQmhaMlV2YzJOeWFYQjBhVzVuTG1oMGJXd2pjMlZzWldOMGIzSXRaR2x6WVdKc1pXUmNibHgwWEhScFppQW9JRndpWm05eWJWd2lJR2x1SUdWc1pXMGdLU0I3WEc1Y2JseDBYSFJjZEM4dklFTm9aV05ySUdadmNpQnBibWhsY21sMFpXUWdaR2x6WVdKc1pXUnVaWE56SUc5dUlISmxiR1YyWVc1MElHNXZiaTFrYVhOaFlteGxaQ0JsYkdWdFpXNTBjenBjYmx4MFhIUmNkQzh2SUNvZ2JHbHpkR1ZrSUdadmNtMHRZWE56YjJOcFlYUmxaQ0JsYkdWdFpXNTBjeUJwYmlCaElHUnBjMkZpYkdWa0lHWnBaV3hrYzJWMFhHNWNkRngwWEhRdkx5QWdJR2gwZEhCek9pOHZhSFJ0YkM1emNHVmpMbmRvWVhSM1p5NXZjbWN2YlhWc2RHbHdZV2RsTDJadmNtMXpMbWgwYld3alkyRjBaV2R2Y25rdGJHbHpkR1ZrWEc1Y2RGeDBYSFF2THlBZ0lHaDBkSEJ6T2k4dmFIUnRiQzV6Y0dWakxuZG9ZWFIzWnk1dmNtY3ZiWFZzZEdsd1lXZGxMMlp2Y20xekxtaDBiV3dqWTI5dVkyVndkQzFtWlMxa2FYTmhZbXhsWkZ4dVhIUmNkRngwTHk4Z0tpQnZjSFJwYjI0Z1pXeGxiV1Z1ZEhNZ2FXNGdZU0JrYVhOaFlteGxaQ0J2Y0hSbmNtOTFjRnh1WEhSY2RGeDBMeThnSUNCb2RIUndjem92TDJoMGJXd3VjM0JsWXk1M2FHRjBkMmN1YjNKbkwyMTFiSFJwY0dGblpTOW1iM0p0Y3k1b2RHMXNJMk52Ym1ObGNIUXRiM0IwYVc5dUxXUnBjMkZpYkdWa1hHNWNkRngwWEhRdkx5QkJiR3dnYzNWamFDQmxiR1Z0Wlc1MGN5Qm9ZWFpsSUdFZ1hDSm1iM0p0WENJZ2NISnZjR1Z5ZEhrdVhHNWNkRngwWEhScFppQW9JR1ZzWlcwdWNHRnlaVzUwVG05a1pTQW1KaUJsYkdWdExtUnBjMkZpYkdWa0lEMDlQU0JtWVd4elpTQXBJSHRjYmx4dVhIUmNkRngwWEhRdkx5QlBjSFJwYjI0Z1pXeGxiV1Z1ZEhNZ1pHVm1aWElnZEc4Z1lTQndZWEpsYm5RZ2IzQjBaM0p2ZFhBZ2FXWWdjSEpsYzJWdWRGeHVYSFJjZEZ4MFhIUnBaaUFvSUZ3aWJHRmlaV3hjSWlCcGJpQmxiR1Z0SUNrZ2UxeHVYSFJjZEZ4MFhIUmNkR2xtSUNnZ1hDSnNZV0psYkZ3aUlHbHVJR1ZzWlcwdWNHRnlaVzUwVG05a1pTQXBJSHRjYmx4MFhIUmNkRngwWEhSY2RISmxkSFZ5YmlCbGJHVnRMbkJoY21WdWRFNXZaR1V1WkdsellXSnNaV1FnUFQwOUlHUnBjMkZpYkdWa08xeHVYSFJjZEZ4MFhIUmNkSDBnWld4elpTQjdYRzVjZEZ4MFhIUmNkRngwWEhSeVpYUjFjbTRnWld4bGJTNWthWE5oWW14bFpDQTlQVDBnWkdsellXSnNaV1E3WEc1Y2RGeDBYSFJjZEZ4MGZWeHVYSFJjZEZ4MFhIUjlYRzVjYmx4MFhIUmNkRngwTHk4Z1UzVndjRzl5ZERvZ1NVVWdOaUF0SURFeFhHNWNkRngwWEhSY2RDOHZJRlZ6WlNCMGFHVWdhWE5FYVhOaFlteGxaQ0J6YUc5eWRHTjFkQ0J3Y205d1pYSjBlU0IwYnlCamFHVmpheUJtYjNJZ1pHbHpZV0pzWldRZ1ptbGxiR1J6WlhRZ1lXNWpaWE4wYjNKelhHNWNkRngwWEhSY2RISmxkSFZ5YmlCbGJHVnRMbWx6UkdsellXSnNaV1FnUFQwOUlHUnBjMkZpYkdWa0lIeDhYRzVjYmx4MFhIUmNkRngwWEhRdkx5QlhhR1Z5WlNCMGFHVnlaU0JwY3lCdWJ5QnBjMFJwYzJGaWJHVmtMQ0JqYUdWamF5QnRZVzUxWVd4c2VWeHVYSFJjZEZ4MFhIUmNkQzhxSUdwemFHbHVkQ0F0VnpBeE9DQXFMMXh1WEhSY2RGeDBYSFJjZEdWc1pXMHVhWE5FYVhOaFlteGxaQ0FoUFQwZ0lXUnBjMkZpYkdWa0lDWW1YRzVjZEZ4MFhIUmNkRngwYVc1RWFYTmhZbXhsWkVacFpXeGtjMlYwS0NCbGJHVnRJQ2tnUFQwOUlHUnBjMkZpYkdWa08xeHVYSFJjZEZ4MGZWeHVYRzVjZEZ4MFhIUnlaWFIxY200Z1pXeGxiUzVrYVhOaFlteGxaQ0E5UFQwZ1pHbHpZV0pzWldRN1hHNWNibHgwWEhRdkx5QlVjbmtnZEc4Z2QybHVibTkzSUc5MWRDQmxiR1Z0Wlc1MGN5QjBhR0YwSUdOaGJpZDBJR0psSUdScGMyRmliR1ZrSUdKbFptOXlaU0IwY25WemRHbHVaeUIwYUdVZ1pHbHpZV0pzWldRZ2NISnZjR1Z5ZEhrdVhHNWNkRngwTHk4Z1UyOXRaU0IyYVdOMGFXMXpJR2RsZENCallYVm5hSFFnYVc0Z2IzVnlJRzVsZENBb2JHRmlaV3dzSUd4bFoyVnVaQ3dnYldWdWRTd2dkSEpoWTJzcExDQmlkWFFnYVhRZ2MyaHZkV3hrYmlkMFhHNWNkRngwTHk4Z1pYWmxiaUJsZUdsemRDQnZiaUIwYUdWdExDQnNaWFFnWVd4dmJtVWdhR0YyWlNCaElHSnZiMnhsWVc0Z2RtRnNkV1V1WEc1Y2RGeDBmU0JsYkhObElHbG1JQ2dnWENKc1lXSmxiRndpSUdsdUlHVnNaVzBnS1NCN1hHNWNkRngwWEhSeVpYUjFjbTRnWld4bGJTNWthWE5oWW14bFpDQTlQVDBnWkdsellXSnNaV1E3WEc1Y2RGeDBmVnh1WEc1Y2RGeDBMeThnVW1WdFlXbHVhVzVuSUdWc1pXMWxiblJ6SUdGeVpTQnVaV2wwYUdWeUlEcGxibUZpYkdWa0lHNXZjaUE2WkdsellXSnNaV1JjYmx4MFhIUnlaWFIxY200Z1ptRnNjMlU3WEc1Y2RIMDdYRzU5WEc1Y2JpOHFLbHh1SUNvZ1VtVjBkWEp1Y3lCaElHWjFibU4wYVc5dUlIUnZJSFZ6WlNCcGJpQndjMlYxWkc5eklHWnZjaUJ3YjNOcGRHbHZibUZzYzF4dUlDb2dRSEJoY21GdElIdEdkVzVqZEdsdmJuMGdabTVjYmlBcUwxeHVablZ1WTNScGIyNGdZM0psWVhSbFVHOXphWFJwYjI1aGJGQnpaWFZrYnlnZ1ptNGdLU0I3WEc1Y2RISmxkSFZ5YmlCdFlYSnJSblZ1WTNScGIyNG9JR1oxYm1OMGFXOXVLQ0JoY21kMWJXVnVkQ0FwSUh0Y2JseDBYSFJoY21kMWJXVnVkQ0E5SUN0aGNtZDFiV1Z1ZER0Y2JseDBYSFJ5WlhSMWNtNGdiV0Z5YTBaMWJtTjBhVzl1S0NCbWRXNWpkR2x2YmlnZ2MyVmxaQ3dnYldGMFkyaGxjeUFwSUh0Y2JseDBYSFJjZEhaaGNpQnFMRnh1WEhSY2RGeDBYSFJ0WVhSamFFbHVaR1Y0WlhNZ1BTQm1iaWdnVzEwc0lITmxaV1F1YkdWdVozUm9MQ0JoY21kMWJXVnVkQ0FwTEZ4dVhIUmNkRngwWEhScElEMGdiV0YwWTJoSmJtUmxlR1Z6TG14bGJtZDBhRHRjYmx4dVhIUmNkRngwTHk4Z1RXRjBZMmdnWld4bGJXVnVkSE1nWm05MWJtUWdZWFFnZEdobElITndaV05wWm1sbFpDQnBibVJsZUdWelhHNWNkRngwWEhSM2FHbHNaU0FvSUdrdExTQXBJSHRjYmx4MFhIUmNkRngwYVdZZ0tDQnpaV1ZrV3lBb0lHb2dQU0J0WVhSamFFbHVaR1Y0WlhOYklHa2dYU0FwSUYwZ0tTQjdYRzVjZEZ4MFhIUmNkRngwYzJWbFpGc2dhaUJkSUQwZ0lTZ2diV0YwWTJobGMxc2dhaUJkSUQwZ2MyVmxaRnNnYWlCZElDazdYRzVjZEZ4MFhIUmNkSDFjYmx4MFhIUmNkSDFjYmx4MFhIUjlJQ2s3WEc1Y2RIMGdLVHRjYm4xY2JseHVMeW9xWEc0Z0tpQkRhR1ZqYTNNZ1lTQnViMlJsSUdadmNpQjJZV3hwWkdsMGVTQmhjeUJoSUZOcGVucHNaU0JqYjI1MFpYaDBYRzRnS2lCQWNHRnlZVzBnZTBWc1pXMWxiblI4VDJKcVpXTjBQWDBnWTI5dWRHVjRkRnh1SUNvZ1FISmxkSFZ5Ym5NZ2UwVnNaVzFsYm5SOFQySnFaV04wZkVKdmIyeGxZVzU5SUZSb1pTQnBibkIxZENCdWIyUmxJR2xtSUdGalkyVndkR0ZpYkdVc0lHOTBhR1Z5ZDJselpTQmhJR1poYkhONUlIWmhiSFZsWEc0Z0tpOWNibVoxYm1OMGFXOXVJSFJsYzNSRGIyNTBaWGgwS0NCamIyNTBaWGgwSUNrZ2UxeHVYSFJ5WlhSMWNtNGdZMjl1ZEdWNGRDQW1KaUIwZVhCbGIyWWdZMjl1ZEdWNGRDNW5aWFJGYkdWdFpXNTBjMEo1VkdGblRtRnRaU0FoUFQwZ1hDSjFibVJsWm1sdVpXUmNJaUFtSmlCamIyNTBaWGgwTzF4dWZWeHVYRzR2THlCRmVIQnZjMlVnYzNWd2NHOXlkQ0IyWVhKeklHWnZjaUJqYjI1MlpXNXBaVzVqWlZ4dWMzVndjRzl5ZENBOUlGTnBlbnBzWlM1emRYQndiM0owSUQwZ2UzMDdYRzVjYmk4cUtseHVJQ29nUkdWMFpXTjBjeUJZVFV3Z2JtOWtaWE5jYmlBcUlFQndZWEpoYlNCN1JXeGxiV1Z1ZEh4UFltcGxZM1I5SUdWc1pXMGdRVzRnWld4bGJXVnVkQ0J2Y2lCaElHUnZZM1Z0Wlc1MFhHNGdLaUJBY21WMGRYSnVjeUI3UW05dmJHVmhibjBnVkhKMVpTQnBabVlnWld4bGJTQnBjeUJoSUc1dmJpMUlWRTFNSUZoTlRDQnViMlJsWEc0Z0tpOWNibWx6V0UxTUlEMGdVMmw2ZW14bExtbHpXRTFNSUQwZ1puVnVZM1JwYjI0b0lHVnNaVzBnS1NCN1hHNWNkSFpoY2lCdVlXMWxjM0JoWTJVZ1BTQmxiR1Z0SUNZbUlHVnNaVzB1Ym1GdFpYTndZV05sVlZKSkxGeHVYSFJjZEdSdlkwVnNaVzBnUFNCbGJHVnRJQ1ltSUNnZ1pXeGxiUzV2ZDI1bGNrUnZZM1Z0Wlc1MElIeDhJR1ZzWlcwZ0tTNWtiMk4xYldWdWRFVnNaVzFsYm5RN1hHNWNibHgwTHk4Z1UzVndjRzl5ZERvZ1NVVWdQRDA0WEc1Y2RDOHZJRUZ6YzNWdFpTQklWRTFNSUhkb1pXNGdaRzlqZFcxbGJuUkZiR1Z0Wlc1MElHUnZaWE51SjNRZ2VXVjBJR1Y0YVhOMExDQnpkV05vSUdGeklHbHVjMmxrWlNCc2IyRmthVzVuSUdsbWNtRnRaWE5jYmx4MEx5OGdhSFIwY0hNNkx5OWlkV2R6TG1weGRXVnllUzVqYjIwdmRHbGphMlYwTHpRNE16TmNibHgwY21WMGRYSnVJQ0Z5YUhSdGJDNTBaWE4wS0NCdVlXMWxjM0JoWTJVZ2ZId2daRzlqUld4bGJTQW1KaUJrYjJORmJHVnRMbTV2WkdWT1lXMWxJSHg4SUZ3aVNGUk5URndpSUNrN1hHNTlPMXh1WEc0dktpcGNiaUFxSUZObGRITWdaRzlqZFcxbGJuUXRjbVZzWVhSbFpDQjJZWEpwWVdKc1pYTWdiMjVqWlNCaVlYTmxaQ0J2YmlCMGFHVWdZM1Z5Y21WdWRDQmtiMk4xYldWdWRGeHVJQ29nUUhCaGNtRnRJSHRGYkdWdFpXNTBmRTlpYW1WamRIMGdXMlJ2WTEwZ1FXNGdaV3hsYldWdWRDQnZjaUJrYjJOMWJXVnVkQ0J2WW1wbFkzUWdkRzhnZFhObElIUnZJSE5sZENCMGFHVWdaRzlqZFcxbGJuUmNiaUFxSUVCeVpYUjFjbTV6SUh0UFltcGxZM1I5SUZKbGRIVnlibk1nZEdobElHTjFjbkpsYm5RZ1pHOWpkVzFsYm5SY2JpQXFMMXh1YzJWMFJHOWpkVzFsYm5RZ1BTQlRhWHA2YkdVdWMyVjBSRzlqZFcxbGJuUWdQU0JtZFc1amRHbHZiaWdnYm05a1pTQXBJSHRjYmx4MGRtRnlJR2hoYzBOdmJYQmhjbVVzSUhOMVlsZHBibVJ2ZHl4Y2JseDBYSFJrYjJNZ1BTQnViMlJsSUQ4Z2JtOWtaUzV2ZDI1bGNrUnZZM1Z0Wlc1MElIeDhJRzV2WkdVZ09pQndjbVZtWlhKeVpXUkViMk03WEc1Y2JseDBMeThnVW1WMGRYSnVJR1ZoY214NUlHbG1JR1J2WXlCcGN5QnBiblpoYkdsa0lHOXlJR0ZzY21WaFpIa2djMlZzWldOMFpXUmNibHgwTHk4Z1UzVndjRzl5ZERvZ1NVVWdNVEVyTENCRlpHZGxJREUzSUMwZ01UZ3JYRzVjZEM4dklFbEZMMFZrWjJVZ2MyOXRaWFJwYldWeklIUm9jbTkzSUdFZ1hDSlFaWEp0YVhOemFXOXVJR1JsYm1sbFpGd2lJR1Z5Y205eUlIZG9aVzRnYzNSeWFXTjBMV052YlhCaGNtbHVaMXh1WEhRdkx5QjBkMjhnWkc5amRXMWxiblJ6T3lCemFHRnNiRzkzSUdOdmJYQmhjbWx6YjI1eklIZHZjbXN1WEc1Y2RDOHZJR1Z6YkdsdWRDMWthWE5oWW14bExXNWxlSFF0YkdsdVpTQmxjV1Z4WlhGY2JseDBhV1lnS0NCa2IyTWdQVDBnWkc5amRXMWxiblFnZkh3Z1pHOWpMbTV2WkdWVWVYQmxJQ0U5UFNBNUlIeDhJQ0ZrYjJNdVpHOWpkVzFsYm5SRmJHVnRaVzUwSUNrZ2UxeHVYSFJjZEhKbGRIVnliaUJrYjJOMWJXVnVkRHRjYmx4MGZWeHVYRzVjZEM4dklGVndaR0YwWlNCbmJHOWlZV3dnZG1GeWFXRmliR1Z6WEc1Y2RHUnZZM1Z0Wlc1MElEMGdaRzlqTzF4dVhIUmtiMk5GYkdWdElEMGdaRzlqZFcxbGJuUXVaRzlqZFcxbGJuUkZiR1Z0Wlc1ME8xeHVYSFJrYjJOMWJXVnVkRWx6U0ZSTlRDQTlJQ0ZwYzFoTlRDZ2daRzlqZFcxbGJuUWdLVHRjYmx4dVhIUXZMeUJUZFhCd2IzSjBPaUJKUlNBNUlDMGdNVEVyTENCRlpHZGxJREV5SUMwZ01UZ3JYRzVjZEM4dklFRmpZMlZ6YzJsdVp5QnBabkpoYldVZ1pHOWpkVzFsYm5SeklHRm1kR1Z5SUhWdWJHOWhaQ0IwYUhKdmQzTWdYQ0p3WlhKdGFYTnphVzl1SUdSbGJtbGxaRndpSUdWeWNtOXljeUFvYWxGMVpYSjVJQ014TXprek5pbGNibHgwTHk4Z1UzVndjRzl5ZERvZ1NVVWdNVEVyTENCRlpHZGxJREUzSUMwZ01UZ3JYRzVjZEM4dklFbEZMMFZrWjJVZ2MyOXRaWFJwYldWeklIUm9jbTkzSUdFZ1hDSlFaWEp0YVhOemFXOXVJR1JsYm1sbFpGd2lJR1Z5Y205eUlIZG9aVzRnYzNSeWFXTjBMV052YlhCaGNtbHVaMXh1WEhRdkx5QjBkMjhnWkc5amRXMWxiblJ6T3lCemFHRnNiRzkzSUdOdmJYQmhjbWx6YjI1eklIZHZjbXN1WEc1Y2RDOHZJR1Z6YkdsdWRDMWthWE5oWW14bExXNWxlSFF0YkdsdVpTQmxjV1Z4WlhGY2JseDBhV1lnS0NCd2NtVm1aWEp5WldSRWIyTWdJVDBnWkc5amRXMWxiblFnSmlaY2JseDBYSFFvSUhOMVlsZHBibVJ2ZHlBOUlHUnZZM1Z0Wlc1MExtUmxabUYxYkhSV2FXVjNJQ2tnSmlZZ2MzVmlWMmx1Wkc5M0xuUnZjQ0FoUFQwZ2MzVmlWMmx1Wkc5M0lDa2dlMXh1WEc1Y2RGeDBMeThnVTNWd2NHOXlkRG9nU1VVZ01URXNJRVZrWjJWY2JseDBYSFJwWmlBb0lITjFZbGRwYm1SdmR5NWhaR1JGZG1WdWRFeHBjM1JsYm1WeUlDa2dlMXh1WEhSY2RGeDBjM1ZpVjJsdVpHOTNMbUZrWkVWMlpXNTBUR2x6ZEdWdVpYSW9JRndpZFc1c2IyRmtYQ0lzSUhWdWJHOWhaRWhoYm1Sc1pYSXNJR1poYkhObElDazdYRzVjYmx4MFhIUXZMeUJUZFhCd2IzSjBPaUJKUlNBNUlDMGdNVEFnYjI1c2VWeHVYSFJjZEgwZ1pXeHpaU0JwWmlBb0lITjFZbGRwYm1SdmR5NWhkSFJoWTJoRmRtVnVkQ0FwSUh0Y2JseDBYSFJjZEhOMVlsZHBibVJ2ZHk1aGRIUmhZMmhGZG1WdWRDZ2dYQ0p2Ym5WdWJHOWhaRndpTENCMWJteHZZV1JJWVc1a2JHVnlJQ2s3WEc1Y2RGeDBmVnh1WEhSOVhHNWNibHgwTHk4Z1UzVndjRzl5ZERvZ1NVVWdPQ0F0SURFeEt5d2dSV1JuWlNBeE1pQXRJREU0S3l3Z1EyaHliMjFsSUR3OU1UWWdMU0F5TlNCdmJteDVMQ0JHYVhKbFptOTRJRHc5TXk0MklDMGdNekVnYjI1c2VTeGNibHgwTHk4Z1UyRm1ZWEpwSURRZ0xTQTFJRzl1Ykhrc0lFOXdaWEpoSUR3OU1URXVOaUF0SURFeUxuZ2diMjVzZVZ4dVhIUXZMeUJKUlM5RlpHZGxJQ1lnYjJ4a1pYSWdZbkp2ZDNObGNuTWdaRzl1SjNRZ2MzVndjRzl5ZENCMGFHVWdPbk5qYjNCbElIQnpaWFZrYnkxamJHRnpjeTVjYmx4MEx5OGdVM1Z3Y0c5eWREb2dVMkZtWVhKcElEWXVNQ0J2Ym14NVhHNWNkQzh2SUZOaFptRnlhU0EyTGpBZ2MzVndjRzl5ZEhNZ09uTmpiM0JsSUdKMWRDQnBkQ2R6SUdGdUlHRnNhV0Z6SUc5bUlEcHliMjkwSUhSb1pYSmxMbHh1WEhSemRYQndiM0owTG5OamIzQmxJRDBnWVhOelpYSjBLQ0JtZFc1amRHbHZiaWdnWld3Z0tTQjdYRzVjZEZ4MFpHOWpSV3hsYlM1aGNIQmxibVJEYUdsc1pDZ2daV3dnS1M1aGNIQmxibVJEYUdsc1pDZ2daRzlqZFcxbGJuUXVZM0psWVhSbFJXeGxiV1Z1ZENnZ1hDSmthWFpjSWlBcElDazdYRzVjZEZ4MGNtVjBkWEp1SUhSNWNHVnZaaUJsYkM1eGRXVnllVk5sYkdWamRHOXlRV3hzSUNFOVBTQmNJblZ1WkdWbWFXNWxaRndpSUNZbVhHNWNkRngwWEhRaFpXd3VjWFZsY25sVFpXeGxZM1J2Y2tGc2JDZ2dYQ0k2YzJOdmNHVWdabWxsYkdSelpYUWdaR2wyWENJZ0tTNXNaVzVuZEdnN1hHNWNkSDBnS1R0Y2JseHVYSFF2THlCVGRYQndiM0owT2lCRGFISnZiV1VnTVRBMUt5d2dSbWx5WldadmVDQXhNRFFyTENCVFlXWmhjbWtnTVRVdU5DdGNibHgwTHk4Z1RXRnJaU0J6ZFhKbElHWnZjbWRwZG1sdVp5QnRiMlJsSUdseklHNXZkQ0IxYzJWa0lHbHVJR0JEVTFNdWMzVndjRzl5ZEhNb0lGd2ljMlZzWldOMGIzSW9MaTR1S1Z3aUlDbGdMbHh1WEhRdkwxeHVYSFF2THlCZ09tbHpLQ2xnSUhWelpYTWdZU0JtYjNKbmFYWnBibWNnYzJWc1pXTjBiM0lnYkdsemRDQmhjeUJoYmlCaGNtZDFiV1Z1ZENCaGJtUWdhWE1nZDJsa1pXeDVYRzVjZEM4dklHbHRjR3hsYldWdWRHVmtMQ0J6YnlCcGRDZHpJR0VnWjI5dlpDQnZibVVnZEc4Z2RHVnpkQ0JoWjJGcGJuTjBMbHh1WEhSemRYQndiM0owTG1OemMxTjFjSEJ2Y25SelUyVnNaV04wYjNJZ1BTQmhjM05sY25Rb0lHWjFibU4wYVc5dUtDa2dlMXh1WEhSY2RDOHFJR1Z6YkdsdWRDMWthWE5oWW14bElHNXZMWFZ1WkdWbUlDb3ZYRzVjYmx4MFhIUnlaWFIxY200Z1ExTlRMbk4xY0hCdmNuUnpLQ0JjSW5ObGJHVmpkRzl5S0NvcFhDSWdLU0FtSmx4dVhHNWNkRngwWEhRdkx5QlRkWEJ3YjNKME9pQkdhWEpsWm05NElEYzRMVGd4SUc5dWJIbGNibHgwWEhSY2RDOHZJRWx1SUc5c1pDQkdhWEpsWm05NExDQmdPbWx6S0NsZ0lHUnBaRzRuZENCMWMyVWdabTl5WjJsMmFXNW5JSEJoY25OcGJtY3VJRWx1SUhSb1lYUWdZMkZ6WlN4Y2JseDBYSFJjZEM4dklHWmhhV3dnZEdocGN5QjBaWE4wSUdGeklIUm9aWEpsSjNNZ2JtOGdjMlZzWldOMGIzSWdkRzhnZEdWemRDQmhaMkZwYm5OMElIUm9ZWFF1WEc1Y2RGeDBYSFF2THlCZ1ExTlRMbk4xY0hCdmNuUnpZQ0IxYzJWeklIVnVabTl5WjJsMmFXNW5JSEJoY25OcGJtZGNibHgwWEhSY2RHUnZZM1Z0Wlc1MExuRjFaWEo1VTJWc1pXTjBiM0pCYkd3b0lGd2lPbWx6S0RwcWNXWmhhMlVwWENJZ0tTQW1KbHh1WEc1Y2RGeDBYSFF2THlCZ0ttQWdhWE1nYm1WbFpHVmtJR0Z6SUZOaFptRnlhU0FtSUc1bGQyVnlJRU5vY205dFpTQnBiWEJzWlcxbGJuUmxaQ0J6YjIxbGRHaHBibWNnYVc0Z1ltVjBkMlZsYmx4dVhIUmNkRngwTHk4Z1ptOXlJR0E2YUdGektDbGdJQzBnYVhRZ2RHaHliM2R6SUdsdUlHQnhVMEZnSUdsbUlHbDBJRzl1YkhrZ1kyOXVkR0ZwYm5NZ1lXNGdkVzV6ZFhCd2IzSjBaV1JjYmx4MFhIUmNkQzh2SUdGeVozVnRaVzUwSUdKMWRDQnRkV3gwYVhCc1pTQnZibVZ6TENCdmJtVWdiMllnZDJocFkyZ2dhWE1nYzNWd2NHOXlkR1ZrTENCaGNtVWdabWx1WlM1Y2JseDBYSFJjZEM4dklGZGxJSGRoYm5RZ2RHOGdjR3hoZVNCellXWmxJR2x1SUdOaGMyVWdZRHBwY3lncFlDQm5aWFJ6SUhSb1pTQnpZVzFsSUhSeVpXRjBiV1Z1ZEM1Y2JseDBYSFJjZENGRFUxTXVjM1Z3Y0c5eWRITW9JRndpYzJWc1pXTjBiM0lvT21sektDb3NPbXB4Wm1GclpTa3BYQ0lnS1R0Y2JseHVYSFJjZEM4cUlHVnpiR2x1ZEMxbGJtRmliR1VnS2k5Y2JseDBmU0FwTzF4dVhHNWNkQzhxSUVGMGRISnBZblYwWlhOY2JseDBMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTQXFMMXh1WEc1Y2RDOHZJRk4xY0hCdmNuUTZJRWxGUERoY2JseDBMeThnVm1WeWFXWjVJSFJvWVhRZ1oyVjBRWFIwY21saWRYUmxJSEpsWVd4c2VTQnlaWFIxY201eklHRjBkSEpwWW5WMFpYTWdZVzVrSUc1dmRDQndjbTl3WlhKMGFXVnpYRzVjZEM4dklDaGxlR05sY0hScGJtY2dTVVU0SUdKdmIyeGxZVzV6S1Z4dVhIUnpkWEJ3YjNKMExtRjBkSEpwWW5WMFpYTWdQU0JoYzNObGNuUW9JR1oxYm1OMGFXOXVLQ0JsYkNBcElIdGNibHgwWEhSbGJDNWpiR0Z6YzA1aGJXVWdQU0JjSW1sY0lqdGNibHgwWEhSeVpYUjFjbTRnSVdWc0xtZGxkRUYwZEhKcFluVjBaU2dnWENKamJHRnpjMDVoYldWY0lpQXBPMXh1WEhSOUlDazdYRzVjYmx4MEx5b2daMlYwUld4bGJXVnVkQ2h6S1VKNUtseHVYSFF0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRJQ292WEc1Y2JseDBMeThnUTJobFkyc2dhV1lnWjJWMFJXeGxiV1Z1ZEhOQ2VWUmhaMDVoYldVb1hDSXFYQ0lwSUhKbGRIVnlibk1nYjI1c2VTQmxiR1Z0Wlc1MGMxeHVYSFJ6ZFhCd2IzSjBMbWRsZEVWc1pXMWxiblJ6UW5sVVlXZE9ZVzFsSUQwZ1lYTnpaWEowS0NCbWRXNWpkR2x2YmlnZ1pXd2dLU0I3WEc1Y2RGeDBaV3d1WVhCd1pXNWtRMmhwYkdRb0lHUnZZM1Z0Wlc1MExtTnlaV0YwWlVOdmJXMWxiblFvSUZ3aVhDSWdLU0FwTzF4dVhIUmNkSEpsZEhWeWJpQWhaV3d1WjJWMFJXeGxiV1Z1ZEhOQ2VWUmhaMDVoYldVb0lGd2lLbHdpSUNrdWJHVnVaM1JvTzF4dVhIUjlJQ2s3WEc1Y2JseDBMeThnVTNWd2NHOXlkRG9nU1VVOE9WeHVYSFJ6ZFhCd2IzSjBMbWRsZEVWc1pXMWxiblJ6UW5sRGJHRnpjMDVoYldVZ1BTQnlibUYwYVhabExuUmxjM1FvSUdSdlkzVnRaVzUwTG1kbGRFVnNaVzFsYm5SelFubERiR0Z6YzA1aGJXVWdLVHRjYmx4dVhIUXZMeUJUZFhCd2IzSjBPaUJKUlR3eE1GeHVYSFF2THlCRGFHVmpheUJwWmlCblpYUkZiR1Z0Wlc1MFFubEpaQ0J5WlhSMWNtNXpJR1ZzWlcxbGJuUnpJR0o1SUc1aGJXVmNibHgwTHk4Z1ZHaGxJR0p5YjJ0bGJpQm5aWFJGYkdWdFpXNTBRbmxKWkNCdFpYUm9iMlJ6SUdSdmJpZDBJSEJwWTJzZ2RYQWdjSEp2WjNKaGJXMWhkR2xqWVd4c2VTMXpaWFFnYm1GdFpYTXNYRzVjZEM4dklITnZJSFZ6WlNCaElISnZkVzVrWVdKdmRYUWdaMlYwUld4bGJXVnVkSE5DZVU1aGJXVWdkR1Z6ZEZ4dVhIUnpkWEJ3YjNKMExtZGxkRUo1U1dRZ1BTQmhjM05sY25Rb0lHWjFibU4wYVc5dUtDQmxiQ0FwSUh0Y2JseDBYSFJrYjJORmJHVnRMbUZ3Y0dWdVpFTm9hV3hrS0NCbGJDQXBMbWxrSUQwZ1pYaHdZVzVrYnp0Y2JseDBYSFJ5WlhSMWNtNGdJV1J2WTNWdFpXNTBMbWRsZEVWc1pXMWxiblJ6UW5sT1lXMWxJSHg4SUNGa2IyTjFiV1Z1ZEM1blpYUkZiR1Z0Wlc1MGMwSjVUbUZ0WlNnZ1pYaHdZVzVrYnlBcExteGxibWQwYUR0Y2JseDBmU0FwTzF4dVhHNWNkQzh2SUVsRUlHWnBiSFJsY2lCaGJtUWdabWx1WkZ4dVhIUnBaaUFvSUhOMWNIQnZjblF1WjJWMFFubEpaQ0FwSUh0Y2JseDBYSFJGZUhCeUxtWnBiSFJsY2xzZ1hDSkpSRndpSUYwZ1BTQm1kVzVqZEdsdmJpZ2dhV1FnS1NCN1hHNWNkRngwWEhSMllYSWdZWFIwY2tsa0lEMGdhV1F1Y21Wd2JHRmpaU2dnY25WdVpYTmpZWEJsTENCbWRXNWxjMk5oY0dVZ0tUdGNibHgwWEhSY2RISmxkSFZ5YmlCbWRXNWpkR2x2YmlnZ1pXeGxiU0FwSUh0Y2JseDBYSFJjZEZ4MGNtVjBkWEp1SUdWc1pXMHVaMlYwUVhSMGNtbGlkWFJsS0NCY0ltbGtYQ0lnS1NBOVBUMGdZWFIwY2tsa08xeHVYSFJjZEZ4MGZUdGNibHgwWEhSOU8xeHVYSFJjZEVWNGNISXVabWx1WkZzZ1hDSkpSRndpSUYwZ1BTQm1kVzVqZEdsdmJpZ2dhV1FzSUdOdmJuUmxlSFFnS1NCN1hHNWNkRngwWEhScFppQW9JSFI1Y0dWdlppQmpiMjUwWlhoMExtZGxkRVZzWlcxbGJuUkNlVWxrSUNFOVBTQmNJblZ1WkdWbWFXNWxaRndpSUNZbUlHUnZZM1Z0Wlc1MFNYTklWRTFNSUNrZ2UxeHVYSFJjZEZ4MFhIUjJZWElnWld4bGJTQTlJR052Ym5SbGVIUXVaMlYwUld4bGJXVnVkRUo1U1dRb0lHbGtJQ2s3WEc1Y2RGeDBYSFJjZEhKbGRIVnliaUJsYkdWdElEOGdXeUJsYkdWdElGMGdPaUJiWFR0Y2JseDBYSFJjZEgxY2JseDBYSFI5TzF4dVhIUjlJR1ZzYzJVZ2UxeHVYSFJjZEVWNGNISXVabWxzZEdWeVd5QmNJa2xFWENJZ1hTQTlJQ0JtZFc1amRHbHZiaWdnYVdRZ0tTQjdYRzVjZEZ4MFhIUjJZWElnWVhSMGNrbGtJRDBnYVdRdWNtVndiR0ZqWlNnZ2NuVnVaWE5qWVhCbExDQm1kVzVsYzJOaGNHVWdLVHRjYmx4MFhIUmNkSEpsZEhWeWJpQm1kVzVqZEdsdmJpZ2daV3hsYlNBcElIdGNibHgwWEhSY2RGeDBkbUZ5SUc1dlpHVWdQU0IwZVhCbGIyWWdaV3hsYlM1blpYUkJkSFJ5YVdKMWRHVk9iMlJsSUNFOVBTQmNJblZ1WkdWbWFXNWxaRndpSUNZbVhHNWNkRngwWEhSY2RGeDBaV3hsYlM1blpYUkJkSFJ5YVdKMWRHVk9iMlJsS0NCY0ltbGtYQ0lnS1R0Y2JseDBYSFJjZEZ4MGNtVjBkWEp1SUc1dlpHVWdKaVlnYm05a1pTNTJZV3gxWlNBOVBUMGdZWFIwY2tsa08xeHVYSFJjZEZ4MGZUdGNibHgwWEhSOU8xeHVYRzVjZEZ4MEx5OGdVM1Z3Y0c5eWREb2dTVVVnTmlBdElEY2diMjVzZVZ4dVhIUmNkQzh2SUdkbGRFVnNaVzFsYm5SQ2VVbGtJR2x6SUc1dmRDQnlaV3hwWVdKc1pTQmhjeUJoSUdacGJtUWdjMmh2Y25SamRYUmNibHgwWEhSRmVIQnlMbVpwYm1SYklGd2lTVVJjSWlCZElEMGdablZ1WTNScGIyNG9JR2xrTENCamIyNTBaWGgwSUNrZ2UxeHVYSFJjZEZ4MGFXWWdLQ0IwZVhCbGIyWWdZMjl1ZEdWNGRDNW5aWFJGYkdWdFpXNTBRbmxKWkNBaFBUMGdYQ0oxYm1SbFptbHVaV1JjSWlBbUppQmtiMk4xYldWdWRFbHpTRlJOVENBcElIdGNibHgwWEhSY2RGeDBkbUZ5SUc1dlpHVXNJR2tzSUdWc1pXMXpMRnh1WEhSY2RGeDBYSFJjZEdWc1pXMGdQU0JqYjI1MFpYaDBMbWRsZEVWc1pXMWxiblJDZVVsa0tDQnBaQ0FwTzF4dVhHNWNkRngwWEhSY2RHbG1JQ2dnWld4bGJTQXBJSHRjYmx4dVhIUmNkRngwWEhSY2RDOHZJRlpsY21sbWVTQjBhR1VnYVdRZ1lYUjBjbWxpZFhSbFhHNWNkRngwWEhSY2RGeDBibTlrWlNBOUlHVnNaVzB1WjJWMFFYUjBjbWxpZFhSbFRtOWtaU2dnWENKcFpGd2lJQ2s3WEc1Y2RGeDBYSFJjZEZ4MGFXWWdLQ0J1YjJSbElDWW1JRzV2WkdVdWRtRnNkV1VnUFQwOUlHbGtJQ2tnZTF4dVhIUmNkRngwWEhSY2RGeDBjbVYwZFhKdUlGc2daV3hsYlNCZE8xeHVYSFJjZEZ4MFhIUmNkSDFjYmx4dVhIUmNkRngwWEhSY2RDOHZJRVpoYkd3Z1ltRmpheUJ2YmlCblpYUkZiR1Z0Wlc1MGMwSjVUbUZ0WlZ4dVhIUmNkRngwWEhSY2RHVnNaVzF6SUQwZ1kyOXVkR1Y0ZEM1blpYUkZiR1Z0Wlc1MGMwSjVUbUZ0WlNnZ2FXUWdLVHRjYmx4MFhIUmNkRngwWEhScElEMGdNRHRjYmx4MFhIUmNkRngwWEhSM2FHbHNaU0FvSUNnZ1pXeGxiU0E5SUdWc1pXMXpXeUJwS3lzZ1hTQXBJQ2tnZTF4dVhIUmNkRngwWEhSY2RGeDBibTlrWlNBOUlHVnNaVzB1WjJWMFFYUjBjbWxpZFhSbFRtOWtaU2dnWENKcFpGd2lJQ2s3WEc1Y2RGeDBYSFJjZEZ4MFhIUnBaaUFvSUc1dlpHVWdKaVlnYm05a1pTNTJZV3gxWlNBOVBUMGdhV1FnS1NCN1hHNWNkRngwWEhSY2RGeDBYSFJjZEhKbGRIVnliaUJiSUdWc1pXMGdYVHRjYmx4MFhIUmNkRngwWEhSY2RIMWNibHgwWEhSY2RGeDBYSFI5WEc1Y2RGeDBYSFJjZEgxY2JseHVYSFJjZEZ4MFhIUnlaWFIxY200Z1cxMDdYRzVjZEZ4MFhIUjlYRzVjZEZ4MGZUdGNibHgwZlZ4dVhHNWNkQzh2SUZSaFoxeHVYSFJGZUhCeUxtWnBibVJiSUZ3aVZFRkhYQ0lnWFNBOUlITjFjSEJ2Y25RdVoyVjBSV3hsYldWdWRITkNlVlJoWjA1aGJXVWdQMXh1WEhSY2RHWjFibU4wYVc5dUtDQjBZV2NzSUdOdmJuUmxlSFFnS1NCN1hHNWNkRngwWEhScFppQW9JSFI1Y0dWdlppQmpiMjUwWlhoMExtZGxkRVZzWlcxbGJuUnpRbmxVWVdkT1lXMWxJQ0U5UFNCY0luVnVaR1ZtYVc1bFpGd2lJQ2tnZTF4dVhIUmNkRngwWEhSeVpYUjFjbTRnWTI5dWRHVjRkQzVuWlhSRmJHVnRaVzUwYzBKNVZHRm5UbUZ0WlNnZ2RHRm5JQ2s3WEc1Y2JseDBYSFJjZEM4dklFUnZZM1Z0Wlc1MFJuSmhaMjFsYm5RZ2JtOWtaWE1nWkc5dUozUWdhR0YyWlNCblJVSlVUbHh1WEhSY2RGeDBmU0JsYkhObElHbG1JQ2dnYzNWd2NHOXlkQzV4YzJFZ0tTQjdYRzVjZEZ4MFhIUmNkSEpsZEhWeWJpQmpiMjUwWlhoMExuRjFaWEo1VTJWc1pXTjBiM0pCYkd3b0lIUmhaeUFwTzF4dVhIUmNkRngwZlZ4dVhIUmNkSDBnT2x4dVhHNWNkRngwWm5WdVkzUnBiMjRvSUhSaFp5d2dZMjl1ZEdWNGRDQXBJSHRjYmx4MFhIUmNkSFpoY2lCbGJHVnRMRnh1WEhSY2RGeDBYSFIwYlhBZ1BTQmJYU3hjYmx4MFhIUmNkRngwYVNBOUlEQXNYRzVjYmx4MFhIUmNkRngwTHk4Z1Fua2dhR0Z3Y0hrZ1kyOXBibU5wWkdWdVkyVXNJR0VnS0dKeWIydGxiaWtnWjBWQ1ZFNGdZWEJ3WldGeWN5QnZiaUJFYjJOMWJXVnVkRVp5WVdkdFpXNTBJRzV2WkdWeklIUnZiMXh1WEhSY2RGeDBYSFJ5WlhOMWJIUnpJRDBnWTI5dWRHVjRkQzVuWlhSRmJHVnRaVzUwYzBKNVZHRm5UbUZ0WlNnZ2RHRm5JQ2s3WEc1Y2JseDBYSFJjZEM4dklFWnBiSFJsY2lCdmRYUWdjRzl6YzJsaWJHVWdZMjl0YldWdWRITmNibHgwWEhSY2RHbG1JQ2dnZEdGbklEMDlQU0JjSWlwY0lpQXBJSHRjYmx4MFhIUmNkRngwZDJocGJHVWdLQ0FvSUdWc1pXMGdQU0J5WlhOMWJIUnpXeUJwS3lzZ1hTQXBJQ2tnZTF4dVhIUmNkRngwWEhSY2RHbG1JQ2dnWld4bGJTNXViMlJsVkhsd1pTQTlQVDBnTVNBcElIdGNibHgwWEhSY2RGeDBYSFJjZEhSdGNDNXdkWE5vS0NCbGJHVnRJQ2s3WEc1Y2RGeDBYSFJjZEZ4MGZWeHVYSFJjZEZ4MFhIUjlYRzVjYmx4MFhIUmNkRngwY21WMGRYSnVJSFJ0Y0R0Y2JseDBYSFJjZEgxY2JseDBYSFJjZEhKbGRIVnliaUJ5WlhOMWJIUnpPMXh1WEhSY2RIMDdYRzVjYmx4MEx5OGdRMnhoYzNOY2JseDBSWGh3Y2k1bWFXNWtXeUJjSWtOTVFWTlRYQ0lnWFNBOUlITjFjSEJ2Y25RdVoyVjBSV3hsYldWdWRITkNlVU5zWVhOelRtRnRaU0FtSmlCbWRXNWpkR2x2YmlnZ1kyeGhjM05PWVcxbExDQmpiMjUwWlhoMElDa2dlMXh1WEhSY2RHbG1JQ2dnZEhsd1pXOW1JR052Ym5SbGVIUXVaMlYwUld4bGJXVnVkSE5DZVVOc1lYTnpUbUZ0WlNBaFBUMGdYQ0oxYm1SbFptbHVaV1JjSWlBbUppQmtiMk4xYldWdWRFbHpTRlJOVENBcElIdGNibHgwWEhSY2RISmxkSFZ5YmlCamIyNTBaWGgwTG1kbGRFVnNaVzFsYm5SelFubERiR0Z6YzA1aGJXVW9JR05zWVhOelRtRnRaU0FwTzF4dVhIUmNkSDFjYmx4MGZUdGNibHh1WEhRdktpQlJVMEV2YldGMFkyaGxjMU5sYkdWamRHOXlYRzVjZEMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzBnS2k5Y2JseHVYSFF2THlCUlUwRWdZVzVrSUcxaGRHTm9aWE5UWld4bFkzUnZjaUJ6ZFhCd2IzSjBYRzVjYmx4MEx5OGdiV0YwWTJobGMxTmxiR1ZqZEc5eUtEcGhZM1JwZG1VcElISmxjRzl5ZEhNZ1ptRnNjMlVnZDJobGJpQjBjblZsSUNoSlJUa3ZUM0JsY21FZ01URXVOU2xjYmx4MGNtSjFaMmQ1VFdGMFkyaGxjeUE5SUZ0ZE8xeHVYRzVjZEM4dklIRlRZU2c2Wm05amRYTXBJSEpsY0c5eWRITWdabUZzYzJVZ2QyaGxiaUIwY25WbElDaERhSEp2YldVZ01qRXBYRzVjZEM4dklGZGxJR0ZzYkc5M0lIUm9hWE1nWW1WallYVnpaU0J2WmlCaElHSjFaeUJwYmlCSlJUZ3ZPU0IwYUdGMElIUm9jbTkzY3lCaGJpQmxjbkp2Y2x4dVhIUXZMeUIzYUdWdVpYWmxjaUJnWkc5amRXMWxiblF1WVdOMGFYWmxSV3hsYldWdWRHQWdhWE1nWVdOalpYTnpaV1FnYjI0Z1lXNGdhV1p5WVcxbFhHNWNkQzh2SUZOdkxDQjNaU0JoYkd4dmR5QTZabTlqZFhNZ2RHOGdjR0Z6Y3lCMGFISnZkV2RvSUZGVFFTQmhiR3dnZEdobElIUnBiV1VnZEc4Z1lYWnZhV1FnZEdobElFbEZJR1Z5Y205eVhHNWNkQzh2SUZObFpTQm9kSFJ3Y3pvdkwySjFaM011YW5GMVpYSjVMbU52YlM5MGFXTnJaWFF2TVRNek56aGNibHgwY21KMVoyZDVVVk5CSUQwZ1cxMDdYRzVjYmx4MGFXWWdLQ0FvSUhOMWNIQnZjblF1Y1hOaElEMGdjbTVoZEdsMlpTNTBaWE4wS0NCa2IyTjFiV1Z1ZEM1eGRXVnllVk5sYkdWamRHOXlRV3hzSUNrZ0tTQXBJSHRjYmx4dVhIUmNkQzh2SUVKMWFXeGtJRkZUUVNCeVpXZGxlRnh1WEhSY2RDOHZJRkpsWjJWNElITjBjbUYwWldkNUlHRmtiM0IwWldRZ1puSnZiU0JFYVdWbmJ5QlFaWEpwYm1sY2JseDBYSFJoYzNObGNuUW9JR1oxYm1OMGFXOXVLQ0JsYkNBcElIdGNibHh1WEhSY2RGeDBkbUZ5SUdsdWNIVjBPMXh1WEc1Y2RGeDBYSFF2THlCVFpXeGxZM1FnYVhNZ2MyVjBJSFJ2SUdWdGNIUjVJSE4wY21sdVp5QnZiaUJ3ZFhKd2IzTmxYRzVjZEZ4MFhIUXZMeUJVYUdseklHbHpJSFJ2SUhSbGMzUWdTVVVuY3lCMGNtVmhkRzFsYm5RZ2IyWWdibTkwSUdWNGNHeHBZMmwwYkhsY2JseDBYSFJjZEM4dklITmxkSFJwYm1jZ1lTQmliMjlzWldGdUlHTnZiblJsYm5RZ1lYUjBjbWxpZFhSbExGeHVYSFJjZEZ4MEx5OGdjMmx1WTJVZ2FYUnpJSEJ5WlhObGJtTmxJSE5vYjNWc1pDQmlaU0JsYm05MVoyaGNibHgwWEhSY2RDOHZJR2gwZEhCek9pOHZZblZuY3k1cWNYVmxjbmt1WTI5dEwzUnBZMnRsZEM4eE1qTTFPVnh1WEhSY2RGeDBaRzlqUld4bGJTNWhjSEJsYm1SRGFHbHNaQ2dnWld3Z0tTNXBibTVsY2toVVRVd2dQU0JjSWp4aElHbGtQU2RjSWlBcklHVjRjR0Z1Wkc4Z0t5QmNJaWMrUEM5aFBsd2lJQ3RjYmx4MFhIUmNkRngwWENJOGMyVnNaV04wSUdsa1BTZGNJaUFySUdWNGNHRnVaRzhnS3lCY0lpMWNYSEpjWEZ4Y0p5QnRjMkZzYkc5M1kyRndkSFZ5WlQwbkp6NWNJaUFyWEc1Y2RGeDBYSFJjZEZ3aVBHOXdkR2x2YmlCelpXeGxZM1JsWkQwbkp6NDhMMjl3ZEdsdmJqNDhMM05sYkdWamRENWNJanRjYmx4dVhIUmNkRngwTHk4Z1UzVndjRzl5ZERvZ1NVVTRMQ0JQY0dWeVlTQXhNUzB4TWk0eE5seHVYSFJjZEZ4MEx5OGdUbTkwYUdsdVp5QnphRzkxYkdRZ1ltVWdjMlZzWldOMFpXUWdkMmhsYmlCbGJYQjBlU0J6ZEhKcGJtZHpJR1p2Ykd4dmR5QmVQU0J2Y2lBa1BTQnZjaUFxUFZ4dVhIUmNkRngwTHk4Z1ZHaGxJSFJsYzNRZ1lYUjBjbWxpZFhSbElHMTFjM1FnWW1VZ2RXNXJibTkzYmlCcGJpQlBjR1Z5WVNCaWRYUWdYQ0p6WVdabFhDSWdabTl5SUZkcGJsSlVYRzVjZEZ4MFhIUXZMeUJvZEhSd2N6b3ZMMjF6Wkc0dWJXbGpjbTl6YjJaMExtTnZiUzlsYmkxMWN5OXNhV0p5WVhKNUwybGxMMmhvTkRZMU16ZzRMbUZ6Y0hnallYUjBjbWxpZFhSbFgzTmxZM1JwYjI1Y2JseDBYSFJjZEdsbUlDZ2daV3d1Y1hWbGNubFRaV3hsWTNSdmNrRnNiQ2dnWENKYmJYTmhiR3h2ZDJOaGNIUjFjbVZlUFNjblhWd2lJQ2t1YkdWdVozUm9JQ2tnZTF4dVhIUmNkRngwWEhSeVluVm5aM2xSVTBFdWNIVnphQ2dnWENKYktsNGtYVDFjSWlBcklIZG9hWFJsYzNCaFkyVWdLeUJjSWlvb1B6b25KM3hjWEZ3aVhGeGNJaWxjSWlBcE8xeHVYSFJjZEZ4MGZWeHVYRzVjZEZ4MFhIUXZMeUJUZFhCd2IzSjBPaUJKUlRoY2JseDBYSFJjZEM4dklFSnZiMnhsWVc0Z1lYUjBjbWxpZFhSbGN5QmhibVFnWENKMllXeDFaVndpSUdGeVpTQnViM1FnZEhKbFlYUmxaQ0JqYjNKeVpXTjBiSGxjYmx4MFhIUmNkR2xtSUNnZ0lXVnNMbkYxWlhKNVUyVnNaV04wYjNKQmJHd29JRndpVzNObGJHVmpkR1ZrWFZ3aUlDa3ViR1Z1WjNSb0lDa2dlMXh1WEhSY2RGeDBYSFJ5WW5WblozbFJVMEV1Y0hWemFDZ2dYQ0pjWEZ4Y1cxd2lJQ3NnZDJocGRHVnpjR0ZqWlNBcklGd2lLaWcvT25aaGJIVmxmRndpSUNzZ1ltOXZiR1ZoYm5NZ0t5QmNJaWxjSWlBcE8xeHVYSFJjZEZ4MGZWeHVYRzVjZEZ4MFhIUXZMeUJUZFhCd2IzSjBPaUJEYUhKdmJXVThNamtzSUVGdVpISnZhV1E4TkM0MExDQlRZV1poY21rOE55NHdLeXdnYVU5VFBEY3VNQ3NzSUZCb1lXNTBiMjFLVXp3eExqa3VPQ3RjYmx4MFhIUmNkR2xtSUNnZ0lXVnNMbkYxWlhKNVUyVnNaV04wYjNKQmJHd29JRndpVzJsa2ZqMWNJaUFySUdWNGNHRnVaRzhnS3lCY0lpMWRYQ0lnS1M1c1pXNW5kR2dnS1NCN1hHNWNkRngwWEhSY2RISmlkV2RuZVZGVFFTNXdkWE5vS0NCY0luNDlYQ0lnS1R0Y2JseDBYSFJjZEgxY2JseHVYSFJjZEZ4MEx5OGdVM1Z3Y0c5eWREb2dTVVVnTVRFckxDQkZaR2RsSURFMUlDMGdNVGdyWEc1Y2RGeDBYSFF2THlCSlJTQXhNUzlGWkdkbElHUnZiaWQwSUdacGJtUWdaV3hsYldWdWRITWdiMjRnWVNCZ1cyNWhiV1U5SnlkZFlDQnhkV1Z5ZVNCcGJpQnpiMjFsSUdOaGMyVnpMbHh1WEhSY2RGeDBMeThnUVdSa2FXNW5JR0VnZEdWdGNHOXlZWEo1SUdGMGRISnBZblYwWlNCMGJ5QjBhR1VnWkc5amRXMWxiblFnWW1WbWIzSmxJSFJvWlNCelpXeGxZM1JwYjI0Z2QyOXlhM05jYmx4MFhIUmNkQzh2SUdGeWIzVnVaQ0IwYUdVZ2FYTnpkV1V1WEc1Y2RGeDBYSFF2THlCSmJuUmxjbVZ6ZEdsdVoyeDVMQ0JKUlNBeE1DQW1JRzlzWkdWeUlHUnZiaWQwSUhObFpXMGdkRzhnYUdGMlpTQjBhR1VnYVhOemRXVXVYRzVjZEZ4MFhIUnBibkIxZENBOUlHUnZZM1Z0Wlc1MExtTnlaV0YwWlVWc1pXMWxiblFvSUZ3aWFXNXdkWFJjSWlBcE8xeHVYSFJjZEZ4MGFXNXdkWFF1YzJWMFFYUjBjbWxpZFhSbEtDQmNJbTVoYldWY0lpd2dYQ0pjSWlBcE8xeHVYSFJjZEZ4MFpXd3VZWEJ3Wlc1a1EyaHBiR1FvSUdsdWNIVjBJQ2s3WEc1Y2RGeDBYSFJwWmlBb0lDRmxiQzV4ZFdWeWVWTmxiR1ZqZEc5eVFXeHNLQ0JjSWx0dVlXMWxQU2NuWFZ3aUlDa3ViR1Z1WjNSb0lDa2dlMXh1WEhSY2RGeDBYSFJ5WW5WblozbFJVMEV1Y0hWemFDZ2dYQ0pjWEZ4Y1cxd2lJQ3NnZDJocGRHVnpjR0ZqWlNBcklGd2lLbTVoYldWY0lpQXJJSGRvYVhSbGMzQmhZMlVnS3lCY0lpbzlYQ0lnSzF4dVhIUmNkRngwWEhSY2RIZG9hWFJsYzNCaFkyVWdLeUJjSWlvb1B6b25KM3hjWEZ3aVhGeGNJaWxjSWlBcE8xeHVYSFJjZEZ4MGZWeHVYRzVjZEZ4MFhIUXZMeUJYWldKcmFYUXZUM0JsY21FZ0xTQTZZMmhsWTJ0bFpDQnphRzkxYkdRZ2NtVjBkWEp1SUhObGJHVmpkR1ZrSUc5d2RHbHZiaUJsYkdWdFpXNTBjMXh1WEhSY2RGeDBMeThnYUhSMGNEb3ZMM2QzZHk1M015NXZjbWN2VkZJdk1qQXhNUzlTUlVNdFkzTnpNeTF6Wld4bFkzUnZjbk10TWpBeE1UQTVNamt2STJOb1pXTnJaV1JjYmx4MFhIUmNkQzh2SUVsRk9DQjBhSEp2ZDNNZ1pYSnliM0lnYUdWeVpTQmhibVFnZDJsc2JDQnViM1FnYzJWbElHeGhkR1Z5SUhSbGMzUnpYRzVjZEZ4MFhIUnBaaUFvSUNGbGJDNXhkV1Z5ZVZObGJHVmpkRzl5UVd4c0tDQmNJanBqYUdWamEyVmtYQ0lnS1M1c1pXNW5kR2dnS1NCN1hHNWNkRngwWEhSY2RISmlkV2RuZVZGVFFTNXdkWE5vS0NCY0lqcGphR1ZqYTJWa1hDSWdLVHRjYmx4MFhIUmNkSDFjYmx4dVhIUmNkRngwTHk4Z1UzVndjRzl5ZERvZ1UyRm1ZWEpwSURnckxDQnBUMU1nT0N0Y2JseDBYSFJjZEM4dklHaDBkSEJ6T2k4dlluVm5jeTUzWldKcmFYUXViM0puTDNOb2IzZGZZblZuTG1ObmFUOXBaRDB4TXpZNE5URmNibHgwWEhSY2RDOHZJRWx1TFhCaFoyVWdZSE5sYkdWamRHOXlJMmxrSUhOcFlteHBibWN0WTI5dFltbHVZWFJ2Y2lCelpXeGxZM1J2Y21BZ1ptRnBiSE5jYmx4MFhIUmNkR2xtSUNnZ0lXVnNMbkYxWlhKNVUyVnNaV04wYjNKQmJHd29JRndpWVNOY0lpQXJJR1Y0Y0dGdVpHOGdLeUJjSWlzcVhDSWdLUzVzWlc1bmRHZ2dLU0I3WEc1Y2RGeDBYSFJjZEhKaWRXZG5lVkZUUVM1d2RYTm9LQ0JjSWk0akxpdGJLMzVkWENJZ0tUdGNibHgwWEhSY2RIMWNibHh1WEhSY2RGeDBMeThnVTNWd2NHOXlkRG9nUm1seVpXWnZlQ0E4UFRNdU5pQXRJRFVnYjI1c2VWeHVYSFJjZEZ4MEx5OGdUMnhrSUVacGNtVm1iM2dnWkc5bGMyNG5kQ0IwYUhKdmR5QnZiaUJoSUdKaFpHeDVMV1Z6WTJGd1pXUWdhV1JsYm5ScFptbGxjaTVjYmx4MFhIUmNkR1ZzTG5GMVpYSjVVMlZzWldOMGIzSkJiR3dvSUZ3aVhGeGNYRnhjWmx3aUlDazdYRzVjZEZ4MFhIUnlZblZuWjNsUlUwRXVjSFZ6YUNnZ1hDSmJYRnhjWEhKY1hGeGNibHhjWEZ4bVhWd2lJQ2s3WEc1Y2RGeDBmU0FwTzF4dVhHNWNkRngwWVhOelpYSjBLQ0JtZFc1amRHbHZiaWdnWld3Z0tTQjdYRzVjZEZ4MFhIUmxiQzVwYm01bGNraFVUVXdnUFNCY0lqeGhJR2h5WldZOUp5Y2daR2x6WVdKc1pXUTlKMlJwYzJGaWJHVmtKejQ4TDJFK1hDSWdLMXh1WEhSY2RGeDBYSFJjSWp4elpXeGxZM1FnWkdsellXSnNaV1E5SjJScGMyRmliR1ZrSno0OGIzQjBhVzl1THo0OEwzTmxiR1ZqZEQ1Y0lqdGNibHh1WEhSY2RGeDBMeThnVTNWd2NHOXlkRG9nVjJsdVpHOTNjeUE0SUU1aGRHbDJaU0JCY0hCelhHNWNkRngwWEhRdkx5QlVhR1VnZEhsd1pTQmhibVFnYm1GdFpTQmhkSFJ5YVdKMWRHVnpJR0Z5WlNCeVpYTjBjbWxqZEdWa0lHUjFjbWx1WnlBdWFXNXVaWEpJVkUxTUlHRnpjMmxuYm0xbGJuUmNibHgwWEhSY2RIWmhjaUJwYm5CMWRDQTlJR1J2WTNWdFpXNTBMbU55WldGMFpVVnNaVzFsYm5Rb0lGd2lhVzV3ZFhSY0lpQXBPMXh1WEhSY2RGeDBhVzV3ZFhRdWMyVjBRWFIwY21saWRYUmxLQ0JjSW5SNWNHVmNJaXdnWENKb2FXUmtaVzVjSWlBcE8xeHVYSFJjZEZ4MFpXd3VZWEJ3Wlc1a1EyaHBiR1FvSUdsdWNIVjBJQ2t1YzJWMFFYUjBjbWxpZFhSbEtDQmNJbTVoYldWY0lpd2dYQ0pFWENJZ0tUdGNibHh1WEhSY2RGeDBMeThnVTNWd2NHOXlkRG9nU1VVNFhHNWNkRngwWEhRdkx5QkZibVp2Y21ObElHTmhjMlV0YzJWdWMybDBhWFpwZEhrZ2IyWWdibUZ0WlNCaGRIUnlhV0oxZEdWY2JseDBYSFJjZEdsbUlDZ2daV3d1Y1hWbGNubFRaV3hsWTNSdmNrRnNiQ2dnWENKYmJtRnRaVDFrWFZ3aUlDa3ViR1Z1WjNSb0lDa2dlMXh1WEhSY2RGeDBYSFJ5WW5WblozbFJVMEV1Y0hWemFDZ2dYQ0p1WVcxbFhDSWdLeUIzYUdsMFpYTndZV05sSUNzZ1hDSXFXeXBlSkh3aGZsMC9QVndpSUNrN1hHNWNkRngwWEhSOVhHNWNibHgwWEhSY2RDOHZJRVpHSURNdU5TQXRJRHBsYm1GaWJHVmtMenBrYVhOaFlteGxaQ0JoYm1RZ2FHbGtaR1Z1SUdWc1pXMWxiblJ6SUNob2FXUmtaVzRnWld4bGJXVnVkSE1nWVhKbElITjBhV3hzSUdWdVlXSnNaV1FwWEc1Y2RGeDBYSFF2THlCSlJUZ2dkR2h5YjNkeklHVnljbTl5SUdobGNtVWdZVzVrSUhkcGJHd2dibTkwSUhObFpTQnNZWFJsY2lCMFpYTjBjMXh1WEhSY2RGeDBhV1lnS0NCbGJDNXhkV1Z5ZVZObGJHVmpkRzl5UVd4c0tDQmNJanBsYm1GaWJHVmtYQ0lnS1M1c1pXNW5kR2dnSVQwOUlESWdLU0I3WEc1Y2RGeDBYSFJjZEhKaWRXZG5lVkZUUVM1d2RYTm9LQ0JjSWpwbGJtRmliR1ZrWENJc0lGd2lPbVJwYzJGaWJHVmtYQ0lnS1R0Y2JseDBYSFJjZEgxY2JseHVYSFJjZEZ4MEx5OGdVM1Z3Y0c5eWREb2dTVVU1TFRFeEsxeHVYSFJjZEZ4MEx5OGdTVVVuY3lBNlpHbHpZV0pzWldRZ2MyVnNaV04wYjNJZ1pHOWxjeUJ1YjNRZ2NHbGpheUIxY0NCMGFHVWdZMmhwYkdSeVpXNGdiMllnWkdsellXSnNaV1FnWm1sbGJHUnpaWFJ6WEc1Y2RGeDBYSFJrYjJORmJHVnRMbUZ3Y0dWdVpFTm9hV3hrS0NCbGJDQXBMbVJwYzJGaWJHVmtJRDBnZEhKMVpUdGNibHgwWEhSY2RHbG1JQ2dnWld3dWNYVmxjbmxUWld4bFkzUnZja0ZzYkNnZ1hDSTZaR2x6WVdKc1pXUmNJaUFwTG14bGJtZDBhQ0FoUFQwZ01pQXBJSHRjYmx4MFhIUmNkRngwY21KMVoyZDVVVk5CTG5CMWMyZ29JRndpT21WdVlXSnNaV1JjSWl3Z1hDSTZaR2x6WVdKc1pXUmNJaUFwTzF4dVhIUmNkRngwZlZ4dVhHNWNkRngwWEhRdkx5QlRkWEJ3YjNKME9pQlBjR1Z5WVNBeE1DQXRJREV4SUc5dWJIbGNibHgwWEhSY2RDOHZJRTl3WlhKaElERXdMVEV4SUdSdlpYTWdibTkwSUhSb2NtOTNJRzl1SUhCdmMzUXRZMjl0YldFZ2FXNTJZV3hwWkNCd2MyVjFaRzl6WEc1Y2RGeDBYSFJsYkM1eGRXVnllVk5sYkdWamRHOXlRV3hzS0NCY0lpb3NPbmhjSWlBcE8xeHVYSFJjZEZ4MGNtSjFaMmQ1VVZOQkxuQjFjMmdvSUZ3aUxDNHFPbHdpSUNrN1hHNWNkRngwZlNBcE8xeHVYSFI5WEc1Y2JseDBhV1lnS0NBb0lITjFjSEJ2Y25RdWJXRjBZMmhsYzFObGJHVmpkRzl5SUQwZ2NtNWhkR2wyWlM1MFpYTjBLQ0FvSUcxaGRHTm9aWE1nUFNCa2IyTkZiR1Z0TG0xaGRHTm9aWE1nZkh4Y2JseDBYSFJrYjJORmJHVnRMbmRsWW10cGRFMWhkR05vWlhOVFpXeGxZM1J2Y2lCOGZGeHVYSFJjZEdSdlkwVnNaVzB1Ylc5NlRXRjBZMmhsYzFObGJHVmpkRzl5SUh4OFhHNWNkRngwWkc5alJXeGxiUzV2VFdGMFkyaGxjMU5sYkdWamRHOXlJSHg4WEc1Y2RGeDBaRzlqUld4bGJTNXRjMDFoZEdOb1pYTlRaV3hsWTNSdmNpQXBJQ2tnS1NBcElIdGNibHh1WEhSY2RHRnpjMlZ5ZENnZ1puVnVZM1JwYjI0b0lHVnNJQ2tnZTF4dVhHNWNkRngwWEhRdkx5QkRhR1ZqYXlCMGJ5QnpaV1VnYVdZZ2FYUW5jeUJ3YjNOemFXSnNaU0IwYnlCa2J5QnRZWFJqYUdWelUyVnNaV04wYjNKY2JseDBYSFJjZEM4dklHOXVJR0VnWkdselkyOXVibVZqZEdWa0lHNXZaR1VnS0VsRklEa3BYRzVjZEZ4MFhIUnpkWEJ3YjNKMExtUnBjMk52Ym01bFkzUmxaRTFoZEdOb0lEMGdiV0YwWTJobGN5NWpZV3hzS0NCbGJDd2dYQ0lxWENJZ0tUdGNibHh1WEhSY2RGeDBMeThnVkdocGN5QnphRzkxYkdRZ1ptRnBiQ0IzYVhSb0lHRnVJR1Y0WTJWd2RHbHZibHh1WEhSY2RGeDBMeThnUjJWamEyOGdaRzlsY3lCdWIzUWdaWEp5YjNJc0lISmxkSFZ5Ym5NZ1ptRnNjMlVnYVc1emRHVmhaRnh1WEhSY2RGeDBiV0YwWTJobGN5NWpZV3hzS0NCbGJDd2dYQ0piY3lFOUp5ZGRPbmhjSWlBcE8xeHVYSFJjZEZ4MGNtSjFaMmQ1VFdGMFkyaGxjeTV3ZFhOb0tDQmNJaUU5WENJc0lIQnpaWFZrYjNNZ0tUdGNibHgwWEhSOUlDazdYRzVjZEgxY2JseHVYSFJwWmlBb0lDRnpkWEJ3YjNKMExtTnpjMU4xY0hCdmNuUnpVMlZzWldOMGIzSWdLU0I3WEc1Y2JseDBYSFF2THlCVGRYQndiM0owT2lCRGFISnZiV1VnTVRBMUt5d2dVMkZtWVhKcElERTFMalFyWEc1Y2RGeDBMeThnWURwb1lYTW9LV0FnZFhObGN5QmhJR1p2Y21kcGRtbHVaeUJ6Wld4bFkzUnZjaUJzYVhOMElHRnpJR0Z1SUdGeVozVnRaVzUwSUhOdklHOTFjaUJ5WldkMWJHRnlYRzVjZEZ4MEx5OGdZSFJ5ZVMxallYUmphR0FnYldWamFHRnVhWE50SUdaaGFXeHpJSFJ2SUdOaGRHTm9JR0E2YUdGektDbGdJSGRwZEdnZ1lYSm5kVzFsYm5SeklHNXZkQ0J6ZFhCd2IzSjBaV1JjYmx4MFhIUXZMeUJ1WVhScGRtVnNlU0JzYVd0bElHQTZhR0Z6S0RwamIyNTBZV2x1Y3loY0lrWnZiMXdpS1NsZ0xpQlhhR1Z5WlNCemRYQndiM0owWldRZ0ppQnpjR1ZqTFdOdmJYQnNhV0Z1ZEN4Y2JseDBYSFF2THlCM1pTQnViM2NnZFhObElHQkRVMU11YzNWd2NHOXlkSE1vWENKelpXeGxZM1J2Y2loVFJVeEZRMVJQVWw5VVQxOUNSVjlVUlZOVVJVUXBYQ0lwWUNCaWRYUWdiM1YwYzJsa1pWeHVYSFJjZEM4dklIUm9ZWFFzSUd4bGRDZHpJRzFoY21zZ1lEcG9ZWE5nSUdGeklHSjFaMmQ1SUhSdklHRnNkMkY1Y3lCMWMyVWdhbEYxWlhKNUlIUnlZWFpsY25OaGJDQm1iM0pjYmx4MFhIUXZMeUJnT21oaGN5Z3BZQzVjYmx4MFhIUnlZblZuWjNsUlUwRXVjSFZ6YUNnZ1hDSTZhR0Z6WENJZ0tUdGNibHgwZlZ4dVhHNWNkSEppZFdkbmVWRlRRU0E5SUhKaWRXZG5lVkZUUVM1c1pXNW5kR2dnSmlZZ2JtVjNJRkpsWjBWNGNDZ2djbUoxWjJkNVVWTkJMbXB2YVc0b0lGd2lmRndpSUNrZ0tUdGNibHgwY21KMVoyZDVUV0YwWTJobGN5QTlJSEppZFdkbmVVMWhkR05vWlhNdWJHVnVaM1JvSUNZbUlHNWxkeUJTWldkRmVIQW9JSEppZFdkbmVVMWhkR05vWlhNdWFtOXBiaWdnWENKOFhDSWdLU0FwTzF4dVhHNWNkQzhxSUVOdmJuUmhhVzV6WEc1Y2RDMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwZ0tpOWNibHgwYUdGelEyOXRjR0Z5WlNBOUlISnVZWFJwZG1VdWRHVnpkQ2dnWkc5alJXeGxiUzVqYjIxd1lYSmxSRzlqZFcxbGJuUlFiM05wZEdsdmJpQXBPMXh1WEc1Y2RDOHZJRVZzWlcxbGJuUWdZMjl1ZEdGcGJuTWdZVzV2ZEdobGNseHVYSFF2THlCUWRYSndiM05sWm5Wc2JIa2djMlZzWmkxbGVHTnNkWE5wZG1WY2JseDBMeThnUVhNZ2FXNHNJR0Z1SUdWc1pXMWxiblFnWkc5bGN5QnViM1FnWTI5dWRHRnBiaUJwZEhObGJHWmNibHgwWTI5dWRHRnBibk1nUFNCb1lYTkRiMjF3WVhKbElIeDhJSEp1WVhScGRtVXVkR1Z6ZENnZ1pHOWpSV3hsYlM1amIyNTBZV2x1Y3lBcElEOWNibHgwWEhSbWRXNWpkR2x2YmlnZ1lTd2dZaUFwSUh0Y2JseHVYSFJjZEZ4MEx5OGdVM1Z3Y0c5eWREb2dTVVVnUERrZ2IyNXNlVnh1WEhSY2RGeDBMeThnU1VVZ1pHOWxjMjRuZENCb1lYWmxJR0JqYjI1MFlXbHVjMkFnYjI0Z1lHUnZZM1Z0Wlc1MFlDQnpieUIzWlNCdVpXVmtJSFJ2SUdOb1pXTnJJR1p2Y2x4dVhIUmNkRngwTHk4Z1lHUnZZM1Z0Wlc1MFJXeGxiV1Z1ZEdBZ2NISmxjMlZ1WTJVdVhHNWNkRngwWEhRdkx5QlhaU0J1WldWa0lIUnZJR1poYkd3Z1ltRmpheUIwYnlCZ1lXQWdkMmhsYmlCZ1pHOWpkVzFsYm5SRmJHVnRaVzUwWUNCcGN5QnRhWE56YVc1blhHNWNkRngwWEhRdkx5QmhjeUJnYjNkdVpYSkViMk4xYldWdWRHQWdiMllnWld4bGJXVnVkSE1nZDJsMGFHbHVJR0E4ZEdWdGNHeGhkR1V2UG1BZ2JXRjVJR2hoZG1WY2JseDBYSFJjZEM4dklHRWdiblZzYkNCdmJtVWdMU0JoSUdSbFptRjFiSFFnWW1Wb1lYWnBiM0lnYjJZZ1lXeHNJRzF2WkdWeWJpQmljbTkzYzJWeWN5NWNibHgwWEhSY2RIWmhjaUJoWkc5M2JpQTlJR0V1Ym05a1pWUjVjR1VnUFQwOUlEa2dKaVlnWVM1a2IyTjFiV1Z1ZEVWc1pXMWxiblFnZkh3Z1lTeGNibHgwWEhSY2RGeDBZblZ3SUQwZ1lpQW1KaUJpTG5CaGNtVnVkRTV2WkdVN1hHNWNkRngwWEhSeVpYUjFjbTRnWVNBOVBUMGdZblZ3SUh4OElDRWhLQ0JpZFhBZ0ppWWdZblZ3TG01dlpHVlVlWEJsSUQwOVBTQXhJQ1ltSUNoY2JseDBYSFJjZEZ4MFlXUnZkMjR1WTI5dWRHRnBibk1nUDF4dVhIUmNkRngwWEhSY2RHRmtiM2R1TG1OdmJuUmhhVzV6S0NCaWRYQWdLU0E2WEc1Y2RGeDBYSFJjZEZ4MFlTNWpiMjF3WVhKbFJHOWpkVzFsYm5SUWIzTnBkR2x2YmlBbUppQmhMbU52YlhCaGNtVkViMk4xYldWdWRGQnZjMmwwYVc5dUtDQmlkWEFnS1NBbUlERTJYRzVjZEZ4MFhIUXBJQ2s3WEc1Y2RGeDBmU0E2WEc1Y2RGeDBablZ1WTNScGIyNG9JR0VzSUdJZ0tTQjdYRzVjZEZ4MFhIUnBaaUFvSUdJZ0tTQjdYRzVjZEZ4MFhIUmNkSGRvYVd4bElDZ2dLQ0JpSUQwZ1lpNXdZWEpsYm5ST2IyUmxJQ2tnS1NCN1hHNWNkRngwWEhSY2RGeDBhV1lnS0NCaUlEMDlQU0JoSUNrZ2UxeHVYSFJjZEZ4MFhIUmNkRngwY21WMGRYSnVJSFJ5ZFdVN1hHNWNkRngwWEhSY2RGeDBmVnh1WEhSY2RGeDBYSFI5WEc1Y2RGeDBYSFI5WEc1Y2RGeDBYSFJ5WlhSMWNtNGdabUZzYzJVN1hHNWNkRngwZlR0Y2JseHVYSFF2S2lCVGIzSjBhVzVuWEc1Y2RDMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwZ0tpOWNibHh1WEhRdkx5QkViMk4xYldWdWRDQnZjbVJsY2lCemIzSjBhVzVuWEc1Y2RITnZjblJQY21SbGNpQTlJR2hoYzBOdmJYQmhjbVVnUDF4dVhIUm1kVzVqZEdsdmJpZ2dZU3dnWWlBcElIdGNibHh1WEhSY2RDOHZJRVpzWVdjZ1ptOXlJR1IxY0d4cFkyRjBaU0J5WlcxdmRtRnNYRzVjZEZ4MGFXWWdLQ0JoSUQwOVBTQmlJQ2tnZTF4dVhIUmNkRngwYUdGelJIVndiR2xqWVhSbElEMGdkSEoxWlR0Y2JseDBYSFJjZEhKbGRIVnliaUF3TzF4dVhIUmNkSDFjYmx4dVhIUmNkQzh2SUZOdmNuUWdiMjRnYldWMGFHOWtJR1Y0YVhOMFpXNWpaU0JwWmlCdmJteDVJRzl1WlNCcGJuQjFkQ0JvWVhNZ1kyOXRjR0Z5WlVSdlkzVnRaVzUwVUc5emFYUnBiMjVjYmx4MFhIUjJZWElnWTI5dGNHRnlaU0E5SUNGaExtTnZiWEJoY21WRWIyTjFiV1Z1ZEZCdmMybDBhVzl1SUMwZ0lXSXVZMjl0Y0dGeVpVUnZZM1Z0Wlc1MFVHOXphWFJwYjI0N1hHNWNkRngwYVdZZ0tDQmpiMjF3WVhKbElDa2dlMXh1WEhSY2RGeDBjbVYwZFhKdUlHTnZiWEJoY21VN1hHNWNkRngwZlZ4dVhHNWNkRngwTHk4Z1EyRnNZM1ZzWVhSbElIQnZjMmwwYVc5dUlHbG1JR0p2ZEdnZ2FXNXdkWFJ6SUdKbGJHOXVaeUIwYnlCMGFHVWdjMkZ0WlNCa2IyTjFiV1Z1ZEZ4dVhIUmNkQzh2SUZOMWNIQnZjblE2SUVsRklERXhLeXdnUldSblpTQXhOeUF0SURFNEsxeHVYSFJjZEM4dklFbEZMMFZrWjJVZ2MyOXRaWFJwYldWeklIUm9jbTkzSUdFZ1hDSlFaWEp0YVhOemFXOXVJR1JsYm1sbFpGd2lJR1Z5Y205eUlIZG9aVzRnYzNSeWFXTjBMV052YlhCaGNtbHVaMXh1WEhSY2RDOHZJSFIzYnlCa2IyTjFiV1Z1ZEhNN0lITm9ZV3hzYjNjZ1kyOXRjR0Z5YVhOdmJuTWdkMjl5YXk1Y2JseDBYSFF2THlCbGMyeHBiblF0WkdsellXSnNaUzF1WlhoMExXeHBibVVnWlhGbGNXVnhYRzVjZEZ4MFkyOXRjR0Z5WlNBOUlDZ2dZUzV2ZDI1bGNrUnZZM1Z0Wlc1MElIeDhJR0VnS1NBOVBTQW9JR0l1YjNkdVpYSkViMk4xYldWdWRDQjhmQ0JpSUNrZ1AxeHVYSFJjZEZ4MFlTNWpiMjF3WVhKbFJHOWpkVzFsYm5SUWIzTnBkR2x2YmlnZ1lpQXBJRHBjYmx4dVhIUmNkRngwTHk4Z1QzUm9aWEozYVhObElIZGxJR3R1YjNjZ2RHaGxlU0JoY21VZ1pHbHpZMjl1Ym1WamRHVmtYRzVjZEZ4MFhIUXhPMXh1WEc1Y2RGeDBMeThnUkdselkyOXVibVZqZEdWa0lHNXZaR1Z6WEc1Y2RGeDBhV1lnS0NCamIyMXdZWEpsSUNZZ01TQjhmRnh1WEhSY2RGeDBLQ0FoYzNWd2NHOXlkQzV6YjNKMFJHVjBZV05vWldRZ0ppWWdZaTVqYjIxd1lYSmxSRzlqZFcxbGJuUlFiM05wZEdsdmJpZ2dZU0FwSUQwOVBTQmpiMjF3WVhKbElDa2dLU0I3WEc1Y2JseDBYSFJjZEM4dklFTm9iMjl6WlNCMGFHVWdabWx5YzNRZ1pXeGxiV1Z1ZENCMGFHRjBJR2x6SUhKbGJHRjBaV1FnZEc4Z2IzVnlJSEJ5WldabGNuSmxaQ0JrYjJOMWJXVnVkRnh1WEhSY2RGeDBMeThnVTNWd2NHOXlkRG9nU1VVZ01URXJMQ0JGWkdkbElERTNJQzBnTVRnclhHNWNkRngwWEhRdkx5QkpSUzlGWkdkbElITnZiV1YwYVcxbGN5QjBhSEp2ZHlCaElGd2lVR1Z5YldsemMybHZiaUJrWlc1cFpXUmNJaUJsY25KdmNpQjNhR1Z1SUhOMGNtbGpkQzFqYjIxd1lYSnBibWRjYmx4MFhIUmNkQzh2SUhSM2J5QmtiMk4xYldWdWRITTdJSE5vWVd4c2IzY2dZMjl0Y0dGeWFYTnZibk1nZDI5eWF5NWNibHgwWEhSY2RDOHZJR1Z6YkdsdWRDMWthWE5oWW14bExXNWxlSFF0YkdsdVpTQmxjV1Z4WlhGY2JseDBYSFJjZEdsbUlDZ2dZU0E5UFNCa2IyTjFiV1Z1ZENCOGZDQmhMbTkzYm1WeVJHOWpkVzFsYm5RZ1BUMGdjSEpsWm1WeWNtVmtSRzlqSUNZbVhHNWNkRngwWEhSY2RHTnZiblJoYVc1ektDQndjbVZtWlhKeVpXUkViMk1zSUdFZ0tTQXBJSHRjYmx4MFhIUmNkRngwY21WMGRYSnVJQzB4TzF4dVhIUmNkRngwZlZ4dVhHNWNkRngwWEhRdkx5QlRkWEJ3YjNKME9pQkpSU0F4TVNzc0lFVmtaMlVnTVRjZ0xTQXhPQ3RjYmx4MFhIUmNkQzh2SUVsRkwwVmtaMlVnYzI5dFpYUnBiV1Z6SUhSb2NtOTNJR0VnWENKUVpYSnRhWE56YVc5dUlHUmxibWxsWkZ3aUlHVnljbTl5SUhkb1pXNGdjM1J5YVdOMExXTnZiWEJoY21sdVoxeHVYSFJjZEZ4MEx5OGdkSGR2SUdSdlkzVnRaVzUwY3pzZ2MyaGhiR3h2ZHlCamIyMXdZWEpwYzI5dWN5QjNiM0pyTGx4dVhIUmNkRngwTHk4Z1pYTnNhVzUwTFdScGMyRmliR1V0Ym1WNGRDMXNhVzVsSUdWeFpYRmxjVnh1WEhSY2RGeDBhV1lnS0NCaUlEMDlJR1J2WTNWdFpXNTBJSHg4SUdJdWIzZHVaWEpFYjJOMWJXVnVkQ0E5UFNCd2NtVm1aWEp5WldSRWIyTWdKaVpjYmx4MFhIUmNkRngwWTI5dWRHRnBibk1vSUhCeVpXWmxjbkpsWkVSdll5d2dZaUFwSUNrZ2UxeHVYSFJjZEZ4MFhIUnlaWFIxY200Z01UdGNibHgwWEhSY2RIMWNibHh1WEhSY2RGeDBMeThnVFdGcGJuUmhhVzRnYjNKcFoybHVZV3dnYjNKa1pYSmNibHgwWEhSY2RISmxkSFZ5YmlCemIzSjBTVzV3ZFhRZ1AxeHVYSFJjZEZ4MFhIUW9JR2x1WkdWNFQyWW9JSE52Y25SSmJuQjFkQ3dnWVNBcElDMGdhVzVrWlhoUFppZ2djMjl5ZEVsdWNIVjBMQ0JpSUNrZ0tTQTZYRzVjZEZ4MFhIUmNkREE3WEc1Y2RGeDBmVnh1WEc1Y2RGeDBjbVYwZFhKdUlHTnZiWEJoY21VZ0ppQTBJRDhnTFRFZ09pQXhPMXh1WEhSOUlEcGNibHgwWm5WdVkzUnBiMjRvSUdFc0lHSWdLU0I3WEc1Y2JseDBYSFF2THlCRmVHbDBJR1ZoY214NUlHbG1JSFJvWlNCdWIyUmxjeUJoY21VZ2FXUmxiblJwWTJGc1hHNWNkRngwYVdZZ0tDQmhJRDA5UFNCaUlDa2dlMXh1WEhSY2RGeDBhR0Z6UkhWd2JHbGpZWFJsSUQwZ2RISjFaVHRjYmx4MFhIUmNkSEpsZEhWeWJpQXdPMXh1WEhSY2RIMWNibHh1WEhSY2RIWmhjaUJqZFhJc1hHNWNkRngwWEhScElEMGdNQ3hjYmx4MFhIUmNkR0YxY0NBOUlHRXVjR0Z5Wlc1MFRtOWtaU3hjYmx4MFhIUmNkR0oxY0NBOUlHSXVjR0Z5Wlc1MFRtOWtaU3hjYmx4MFhIUmNkR0Z3SUQwZ1d5QmhJRjBzWEc1Y2RGeDBYSFJpY0NBOUlGc2dZaUJkTzF4dVhHNWNkRngwTHk4Z1VHRnlaVzUwYkdWemN5QnViMlJsY3lCaGNtVWdaV2wwYUdWeUlHUnZZM1Z0Wlc1MGN5QnZjaUJrYVhOamIyNXVaV04wWldSY2JseDBYSFJwWmlBb0lDRmhkWEFnZkh3Z0lXSjFjQ0FwSUh0Y2JseHVYSFJjZEZ4MEx5OGdVM1Z3Y0c5eWREb2dTVVVnTVRFckxDQkZaR2RsSURFM0lDMGdNVGdyWEc1Y2RGeDBYSFF2THlCSlJTOUZaR2RsSUhOdmJXVjBhVzFsY3lCMGFISnZkeUJoSUZ3aVVHVnliV2x6YzJsdmJpQmtaVzVwWldSY0lpQmxjbkp2Y2lCM2FHVnVJSE4wY21samRDMWpiMjF3WVhKcGJtZGNibHgwWEhSY2RDOHZJSFIzYnlCa2IyTjFiV1Z1ZEhNN0lITm9ZV3hzYjNjZ1kyOXRjR0Z5YVhOdmJuTWdkMjl5YXk1Y2JseDBYSFJjZEM4cUlHVnpiR2x1ZEMxa2FYTmhZbXhsSUdWeFpYRmxjU0FxTDF4dVhIUmNkRngwY21WMGRYSnVJR0VnUFQwZ1pHOWpkVzFsYm5RZ1B5QXRNU0E2WEc1Y2RGeDBYSFJjZEdJZ1BUMGdaRzlqZFcxbGJuUWdQeUF4SURwY2JseDBYSFJjZEZ4MEx5b2daWE5zYVc1MExXVnVZV0pzWlNCbGNXVnhaWEVnS2k5Y2JseDBYSFJjZEZ4MFlYVndJRDhnTFRFZ09seHVYSFJjZEZ4MFhIUmlkWEFnUHlBeElEcGNibHgwWEhSY2RGeDBjMjl5ZEVsdWNIVjBJRDljYmx4MFhIUmNkRngwS0NCcGJtUmxlRTltS0NCemIzSjBTVzV3ZFhRc0lHRWdLU0F0SUdsdVpHVjRUMllvSUhOdmNuUkpibkIxZEN3Z1lpQXBJQ2tnT2x4dVhIUmNkRngwWEhRd08xeHVYRzVjZEZ4MEx5OGdTV1lnZEdobElHNXZaR1Z6SUdGeVpTQnphV0pzYVc1bmN5d2dkMlVnWTJGdUlHUnZJR0VnY1hWcFkyc2dZMmhsWTJ0Y2JseDBYSFI5SUdWc2MyVWdhV1lnS0NCaGRYQWdQVDA5SUdKMWNDQXBJSHRjYmx4MFhIUmNkSEpsZEhWeWJpQnphV0pzYVc1blEyaGxZMnNvSUdFc0lHSWdLVHRjYmx4MFhIUjlYRzVjYmx4MFhIUXZMeUJQZEdobGNuZHBjMlVnZDJVZ2JtVmxaQ0JtZFd4c0lHeHBjM1J6SUc5bUlIUm9aV2x5SUdGdVkyVnpkRzl5Y3lCbWIzSWdZMjl0Y0dGeWFYTnZibHh1WEhSY2RHTjFjaUE5SUdFN1hHNWNkRngwZDJocGJHVWdLQ0FvSUdOMWNpQTlJR04xY2k1d1lYSmxiblJPYjJSbElDa2dLU0I3WEc1Y2RGeDBYSFJoY0M1MWJuTm9hV1owS0NCamRYSWdLVHRjYmx4MFhIUjlYRzVjZEZ4MFkzVnlJRDBnWWp0Y2JseDBYSFIzYUdsc1pTQW9JQ2dnWTNWeUlEMGdZM1Z5TG5CaGNtVnVkRTV2WkdVZ0tTQXBJSHRjYmx4MFhIUmNkR0p3TG5WdWMyaHBablFvSUdOMWNpQXBPMXh1WEhSY2RIMWNibHh1WEhSY2RDOHZJRmRoYkdzZ1pHOTNiaUIwYUdVZ2RISmxaU0JzYjI5cmFXNW5JR1p2Y2lCaElHUnBjMk55WlhCaGJtTjVYRzVjZEZ4MGQyaHBiR1VnS0NCaGNGc2dhU0JkSUQwOVBTQmljRnNnYVNCZElDa2dlMXh1WEhSY2RGeDBhU3NyTzF4dVhIUmNkSDFjYmx4dVhIUmNkSEpsZEhWeWJpQnBJRDljYmx4dVhIUmNkRngwTHk4Z1JHOGdZU0J6YVdKc2FXNW5JR05vWldOcklHbG1JSFJvWlNCdWIyUmxjeUJvWVhabElHRWdZMjl0Ylc5dUlHRnVZMlZ6ZEc5eVhHNWNkRngwWEhSemFXSnNhVzVuUTJobFkyc29JR0Z3V3lCcElGMHNJR0p3V3lCcElGMGdLU0E2WEc1Y2JseDBYSFJjZEM4dklFOTBhR1Z5ZDJselpTQnViMlJsY3lCcGJpQnZkWElnWkc5amRXMWxiblFnYzI5eWRDQm1hWEp6ZEZ4dVhIUmNkRngwTHk4Z1UzVndjRzl5ZERvZ1NVVWdNVEVyTENCRlpHZGxJREUzSUMwZ01UZ3JYRzVjZEZ4MFhIUXZMeUJKUlM5RlpHZGxJSE52YldWMGFXMWxjeUIwYUhKdmR5QmhJRndpVUdWeWJXbHpjMmx2YmlCa1pXNXBaV1JjSWlCbGNuSnZjaUIzYUdWdUlITjBjbWxqZEMxamIyMXdZWEpwYm1kY2JseDBYSFJjZEM4dklIUjNieUJrYjJOMWJXVnVkSE03SUhOb1lXeHNiM2NnWTI5dGNHRnlhWE52Ym5NZ2QyOXlheTVjYmx4MFhIUmNkQzhxSUdWemJHbHVkQzFrYVhOaFlteGxJR1Z4WlhGbGNTQXFMMXh1WEhSY2RGeDBZWEJiSUdrZ1hTQTlQU0J3Y21WbVpYSnlaV1JFYjJNZ1B5QXRNU0E2WEc1Y2RGeDBYSFJpY0ZzZ2FTQmRJRDA5SUhCeVpXWmxjbkpsWkVSdll5QS9JREVnT2x4dVhIUmNkRngwTHlvZ1pYTnNhVzUwTFdWdVlXSnNaU0JsY1dWeFpYRWdLaTljYmx4MFhIUmNkREE3WEc1Y2RIMDdYRzVjYmx4MGNtVjBkWEp1SUdSdlkzVnRaVzUwTzF4dWZUdGNibHh1VTJsNmVteGxMbTFoZEdOb1pYTWdQU0JtZFc1amRHbHZiaWdnWlhod2Npd2daV3hsYldWdWRITWdLU0I3WEc1Y2RISmxkSFZ5YmlCVGFYcDZiR1VvSUdWNGNISXNJRzUxYkd3c0lHNTFiR3dzSUdWc1pXMWxiblJ6SUNrN1hHNTlPMXh1WEc1VGFYcDZiR1V1YldGMFkyaGxjMU5sYkdWamRHOXlJRDBnWm5WdVkzUnBiMjRvSUdWc1pXMHNJR1Y0Y0hJZ0tTQjdYRzVjZEhObGRFUnZZM1Z0Wlc1MEtDQmxiR1Z0SUNrN1hHNWNibHgwYVdZZ0tDQnpkWEJ3YjNKMExtMWhkR05vWlhOVFpXeGxZM1J2Y2lBbUppQmtiMk4xYldWdWRFbHpTRlJOVENBbUpseHVYSFJjZENGdWIyNXVZWFJwZG1WVFpXeGxZM1J2Y2tOaFkyaGxXeUJsZUhCeUlDc2dYQ0lnWENJZ1hTQW1KbHh1WEhSY2RDZ2dJWEppZFdkbmVVMWhkR05vWlhNZ2ZId2dJWEppZFdkbmVVMWhkR05vWlhNdWRHVnpkQ2dnWlhod2NpQXBJQ2tnSmlaY2JseDBYSFFvSUNGeVluVm5aM2xSVTBFZ0lDQWdJSHg4SUNGeVluVm5aM2xSVTBFdWRHVnpkQ2dnWlhod2NpQXBJQ2tnS1NCN1hHNWNibHgwWEhSMGNua2dlMXh1WEhSY2RGeDBkbUZ5SUhKbGRDQTlJRzFoZEdOb1pYTXVZMkZzYkNnZ1pXeGxiU3dnWlhod2NpQXBPMXh1WEc1Y2RGeDBYSFF2THlCSlJTQTVKM01nYldGMFkyaGxjMU5sYkdWamRHOXlJSEpsZEhWeWJuTWdabUZzYzJVZ2IyNGdaR2x6WTI5dWJtVmpkR1ZrSUc1dlpHVnpYRzVjZEZ4MFhIUnBaaUFvSUhKbGRDQjhmQ0J6ZFhCd2IzSjBMbVJwYzJOdmJtNWxZM1JsWkUxaGRHTm9JSHg4WEc1Y2JseDBYSFJjZEZ4MEx5OGdRWE1nZDJWc2JDd2daR2x6WTI5dWJtVmpkR1ZrSUc1dlpHVnpJR0Z5WlNCellXbGtJSFJ2SUdKbElHbHVJR0VnWkc5amRXMWxiblJjYmx4MFhIUmNkRngwTHk4Z1puSmhaMjFsYm5RZ2FXNGdTVVVnT1Z4dVhIUmNkRngwWEhSbGJHVnRMbVJ2WTNWdFpXNTBJQ1ltSUdWc1pXMHVaRzlqZFcxbGJuUXVibTlrWlZSNWNHVWdJVDA5SURFeElDa2dlMXh1WEhSY2RGeDBYSFJ5WlhSMWNtNGdjbVYwTzF4dVhIUmNkRngwZlZ4dVhIUmNkSDBnWTJGMFkyZ2dLQ0JsSUNrZ2UxeHVYSFJjZEZ4MGJtOXVibUYwYVhabFUyVnNaV04wYjNKRFlXTm9aU2dnWlhod2Npd2dkSEoxWlNBcE8xeHVYSFJjZEgxY2JseDBmVnh1WEc1Y2RISmxkSFZ5YmlCVGFYcDZiR1VvSUdWNGNISXNJR1J2WTNWdFpXNTBMQ0J1ZFd4c0xDQmJJR1ZzWlcwZ1hTQXBMbXhsYm1kMGFDQStJREE3WEc1OU8xeHVYRzVUYVhwNmJHVXVZMjl1ZEdGcGJuTWdQU0JtZFc1amRHbHZiaWdnWTI5dWRHVjRkQ3dnWld4bGJTQXBJSHRjYmx4dVhIUXZMeUJUWlhRZ1pHOWpkVzFsYm5RZ2RtRnljeUJwWmlCdVpXVmtaV1JjYmx4MEx5OGdVM1Z3Y0c5eWREb2dTVVVnTVRFckxDQkZaR2RsSURFM0lDMGdNVGdyWEc1Y2RDOHZJRWxGTDBWa1oyVWdjMjl0WlhScGJXVnpJSFJvY205M0lHRWdYQ0pRWlhKdGFYTnphVzl1SUdSbGJtbGxaRndpSUdWeWNtOXlJSGRvWlc0Z2MzUnlhV04wTFdOdmJYQmhjbWx1WjF4dVhIUXZMeUIwZDI4Z1pHOWpkVzFsYm5Sek95QnphR0ZzYkc5M0lHTnZiWEJoY21semIyNXpJSGR2Y21zdVhHNWNkQzh2SUdWemJHbHVkQzFrYVhOaFlteGxMVzVsZUhRdGJHbHVaU0JsY1dWeFpYRmNibHgwYVdZZ0tDQW9JR052Ym5SbGVIUXViM2R1WlhKRWIyTjFiV1Z1ZENCOGZDQmpiMjUwWlhoMElDa2dJVDBnWkc5amRXMWxiblFnS1NCN1hHNWNkRngwYzJWMFJHOWpkVzFsYm5Rb0lHTnZiblJsZUhRZ0tUdGNibHgwZlZ4dVhIUnlaWFIxY200Z1kyOXVkR0ZwYm5Nb0lHTnZiblJsZUhRc0lHVnNaVzBnS1R0Y2JuMDdYRzVjYmxOcGVucHNaUzVoZEhSeUlEMGdablZ1WTNScGIyNG9JR1ZzWlcwc0lHNWhiV1VnS1NCN1hHNWNibHgwTHk4Z1UyVjBJR1J2WTNWdFpXNTBJSFpoY25NZ2FXWWdibVZsWkdWa1hHNWNkQzh2SUZOMWNIQnZjblE2SUVsRklERXhLeXdnUldSblpTQXhOeUF0SURFNEsxeHVYSFF2THlCSlJTOUZaR2RsSUhOdmJXVjBhVzFsY3lCMGFISnZkeUJoSUZ3aVVHVnliV2x6YzJsdmJpQmtaVzVwWldSY0lpQmxjbkp2Y2lCM2FHVnVJSE4wY21samRDMWpiMjF3WVhKcGJtZGNibHgwTHk4Z2RIZHZJR1J2WTNWdFpXNTBjenNnYzJoaGJHeHZkeUJqYjIxd1lYSnBjMjl1Y3lCM2IzSnJMbHh1WEhRdkx5QmxjMnhwYm5RdFpHbHpZV0pzWlMxdVpYaDBMV3hwYm1VZ1pYRmxjV1Z4WEc1Y2RHbG1JQ2dnS0NCbGJHVnRMbTkzYm1WeVJHOWpkVzFsYm5RZ2ZId2daV3hsYlNBcElDRTlJR1J2WTNWdFpXNTBJQ2tnZTF4dVhIUmNkSE5sZEVSdlkzVnRaVzUwS0NCbGJHVnRJQ2s3WEc1Y2RIMWNibHh1WEhSMllYSWdabTRnUFNCRmVIQnlMbUYwZEhKSVlXNWtiR1ZiSUc1aGJXVXVkRzlNYjNkbGNrTmhjMlVvS1NCZExGeHVYRzVjZEZ4MEx5OGdSRzl1SjNRZ1oyVjBJR1p2YjJ4bFpDQmllU0JQWW1wbFkzUXVjSEp2ZEc5MGVYQmxJSEJ5YjNCbGNuUnBaWE1nS0dwUmRXVnllU0FqTVRNNE1EY3BYRzVjZEZ4MGRtRnNJRDBnWm00Z0ppWWdhR0Z6VDNkdUxtTmhiR3dvSUVWNGNISXVZWFIwY2toaGJtUnNaU3dnYm1GdFpTNTBiMHh2ZDJWeVEyRnpaU2dwSUNrZ1AxeHVYSFJjZEZ4MFptNG9JR1ZzWlcwc0lHNWhiV1VzSUNGa2IyTjFiV1Z1ZEVselNGUk5UQ0FwSURwY2JseDBYSFJjZEhWdVpHVm1hVzVsWkR0Y2JseHVYSFJ5WlhSMWNtNGdkbUZzSUNFOVBTQjFibVJsWm1sdVpXUWdQMXh1WEhSY2RIWmhiQ0E2WEc1Y2RGeDBjM1Z3Y0c5eWRDNWhkSFJ5YVdKMWRHVnpJSHg4SUNGa2IyTjFiV1Z1ZEVselNGUk5UQ0EvWEc1Y2RGeDBYSFJsYkdWdExtZGxkRUYwZEhKcFluVjBaU2dnYm1GdFpTQXBJRHBjYmx4MFhIUmNkQ2dnZG1Gc0lEMGdaV3hsYlM1blpYUkJkSFJ5YVdKMWRHVk9iMlJsS0NCdVlXMWxJQ2tnS1NBbUppQjJZV3d1YzNCbFkybG1hV1ZrSUQ5Y2JseDBYSFJjZEZ4MGRtRnNMblpoYkhWbElEcGNibHgwWEhSY2RGeDBiblZzYkR0Y2JuMDdYRzVjYmxOcGVucHNaUzVsYzJOaGNHVWdQU0JtZFc1amRHbHZiaWdnYzJWc0lDa2dlMXh1WEhSeVpYUjFjbTRnS0NCelpXd2dLeUJjSWx3aUlDa3VjbVZ3YkdGalpTZ2djbU56YzJWelkyRndaU3dnWm1OemMyVnpZMkZ3WlNBcE8xeHVmVHRjYmx4dVUybDZlbXhsTG1WeWNtOXlJRDBnWm5WdVkzUnBiMjRvSUcxelp5QXBJSHRjYmx4MGRHaHliM2NnYm1WM0lFVnljbTl5S0NCY0lsTjViblJoZUNCbGNuSnZjaXdnZFc1eVpXTnZaMjVwZW1Wa0lHVjRjSEpsYzNOcGIyNDZJRndpSUNzZ2JYTm5JQ2s3WEc1OU8xeHVYRzR2S2lwY2JpQXFJRVJ2WTNWdFpXNTBJSE52Y25ScGJtY2dZVzVrSUhKbGJXOTJhVzVuSUdSMWNHeHBZMkYwWlhOY2JpQXFJRUJ3WVhKaGJTQjdRWEp5WVhsTWFXdGxmU0J5WlhOMWJIUnpYRzRnS2k5Y2JsTnBlbnBzWlM1MWJtbHhkV1ZUYjNKMElEMGdablZ1WTNScGIyNG9JSEpsYzNWc2RITWdLU0I3WEc1Y2RIWmhjaUJsYkdWdExGeHVYSFJjZEdSMWNHeHBZMkYwWlhNZ1BTQmJYU3hjYmx4MFhIUnFJRDBnTUN4Y2JseDBYSFJwSUQwZ01EdGNibHh1WEhRdkx5QlZibXhsYzNNZ2QyVWdLbXR1YjNjcUlIZGxJR05oYmlCa1pYUmxZM1FnWkhWd2JHbGpZWFJsY3l3Z1lYTnpkVzFsSUhSb1pXbHlJSEJ5WlhObGJtTmxYRzVjZEdoaGMwUjFjR3hwWTJGMFpTQTlJQ0Z6ZFhCd2IzSjBMbVJsZEdWamRFUjFjR3hwWTJGMFpYTTdYRzVjZEhOdmNuUkpibkIxZENBOUlDRnpkWEJ3YjNKMExuTnZjblJUZEdGaWJHVWdKaVlnY21WemRXeDBjeTV6YkdsalpTZ2dNQ0FwTzF4dVhIUnlaWE4xYkhSekxuTnZjblFvSUhOdmNuUlBjbVJsY2lBcE8xeHVYRzVjZEdsbUlDZ2dhR0Z6UkhWd2JHbGpZWFJsSUNrZ2UxeHVYSFJjZEhkb2FXeGxJQ2dnS0NCbGJHVnRJRDBnY21WemRXeDBjMXNnYVNzcklGMGdLU0FwSUh0Y2JseDBYSFJjZEdsbUlDZ2daV3hsYlNBOVBUMGdjbVZ6ZFd4MGMxc2dhU0JkSUNrZ2UxeHVYSFJjZEZ4MFhIUnFJRDBnWkhWd2JHbGpZWFJsY3k1d2RYTm9LQ0JwSUNrN1hHNWNkRngwWEhSOVhHNWNkRngwZlZ4dVhIUmNkSGRvYVd4bElDZ2dhaTB0SUNrZ2UxeHVYSFJjZEZ4MGNtVnpkV3gwY3k1emNHeHBZMlVvSUdSMWNHeHBZMkYwWlhOYklHb2dYU3dnTVNBcE8xeHVYSFJjZEgxY2JseDBmVnh1WEc1Y2RDOHZJRU5zWldGeUlHbHVjSFYwSUdGbWRHVnlJSE52Y25ScGJtY2dkRzhnY21Wc1pXRnpaU0J2WW1wbFkzUnpYRzVjZEM4dklGTmxaU0JvZEhSd2N6b3ZMMmRwZEdoMVlpNWpiMjB2YW5GMVpYSjVMM05wZW5wc1pTOXdkV3hzTHpJeU5WeHVYSFJ6YjNKMFNXNXdkWFFnUFNCdWRXeHNPMXh1WEc1Y2RISmxkSFZ5YmlCeVpYTjFiSFJ6TzF4dWZUdGNibHh1THlvcVhHNGdLaUJWZEdsc2FYUjVJR1oxYm1OMGFXOXVJR1p2Y2lCeVpYUnlhV1YyYVc1bklIUm9aU0IwWlhoMElIWmhiSFZsSUc5bUlHRnVJR0Z5Y21GNUlHOW1JRVJQVFNCdWIyUmxjMXh1SUNvZ1FIQmhjbUZ0SUh0QmNuSmhlWHhGYkdWdFpXNTBmU0JsYkdWdFhHNGdLaTljYm1kbGRGUmxlSFFnUFNCVGFYcDZiR1V1WjJWMFZHVjRkQ0E5SUdaMWJtTjBhVzl1S0NCbGJHVnRJQ2tnZTF4dVhIUjJZWElnYm05a1pTeGNibHgwWEhSeVpYUWdQU0JjSWx3aUxGeHVYSFJjZEdrZ1BTQXdMRnh1WEhSY2RHNXZaR1ZVZVhCbElEMGdaV3hsYlM1dWIyUmxWSGx3WlR0Y2JseHVYSFJwWmlBb0lDRnViMlJsVkhsd1pTQXBJSHRjYmx4dVhIUmNkQzh2SUVsbUlHNXZJRzV2WkdWVWVYQmxMQ0IwYUdseklHbHpJR1Y0Y0dWamRHVmtJSFJ2SUdKbElHRnVJR0Z5Y21GNVhHNWNkRngwZDJocGJHVWdLQ0FvSUc1dlpHVWdQU0JsYkdWdFd5QnBLeXNnWFNBcElDa2dlMXh1WEc1Y2RGeDBYSFF2THlCRWJ5QnViM1FnZEhKaGRtVnljMlVnWTI5dGJXVnVkQ0J1YjJSbGMxeHVYSFJjZEZ4MGNtVjBJQ3M5SUdkbGRGUmxlSFFvSUc1dlpHVWdLVHRjYmx4MFhIUjlYRzVjZEgwZ1pXeHpaU0JwWmlBb0lHNXZaR1ZVZVhCbElEMDlQU0F4SUh4OElHNXZaR1ZVZVhCbElEMDlQU0E1SUh4OElHNXZaR1ZVZVhCbElEMDlQU0F4TVNBcElIdGNibHh1WEhSY2RDOHZJRlZ6WlNCMFpYaDBRMjl1ZEdWdWRDQm1iM0lnWld4bGJXVnVkSE5jYmx4MFhIUXZMeUJwYm01bGNsUmxlSFFnZFhOaFoyVWdjbVZ0YjNabFpDQm1iM0lnWTI5dWMybHpkR1Z1WTNrZ2IyWWdibVYzSUd4cGJtVnpJQ2hxVVhWbGNua2dJekV4TVRVektWeHVYSFJjZEdsbUlDZ2dkSGx3Wlc5bUlHVnNaVzB1ZEdWNGRFTnZiblJsYm5RZ1BUMDlJRndpYzNSeWFXNW5YQ0lnS1NCN1hHNWNkRngwWEhSeVpYUjFjbTRnWld4bGJTNTBaWGgwUTI5dWRHVnVkRHRjYmx4MFhIUjlJR1ZzYzJVZ2UxeHVYRzVjZEZ4MFhIUXZMeUJVY21GMlpYSnpaU0JwZEhNZ1kyaHBiR1J5Wlc1Y2JseDBYSFJjZEdadmNpQW9JR1ZzWlcwZ1BTQmxiR1Z0TG1acGNuTjBRMmhwYkdRN0lHVnNaVzA3SUdWc1pXMGdQU0JsYkdWdExtNWxlSFJUYVdKc2FXNW5JQ2tnZTF4dVhIUmNkRngwWEhSeVpYUWdLejBnWjJWMFZHVjRkQ2dnWld4bGJTQXBPMXh1WEhSY2RGeDBmVnh1WEhSY2RIMWNibHgwZlNCbGJITmxJR2xtSUNnZ2JtOWtaVlI1Y0dVZ1BUMDlJRE1nZkh3Z2JtOWtaVlI1Y0dVZ1BUMDlJRFFnS1NCN1hHNWNkRngwY21WMGRYSnVJR1ZzWlcwdWJtOWtaVlpoYkhWbE8xeHVYSFI5WEc1Y2JseDBMeThnUkc4Z2JtOTBJR2x1WTJ4MVpHVWdZMjl0YldWdWRDQnZjaUJ3Y205alpYTnphVzVuSUdsdWMzUnlkV04wYVc5dUlHNXZaR1Z6WEc1Y2JseDBjbVYwZFhKdUlISmxkRHRjYm4wN1hHNWNia1Y0Y0hJZ1BTQlRhWHA2YkdVdWMyVnNaV04wYjNKeklEMGdlMXh1WEc1Y2RDOHZJRU5oYmlCaVpTQmhaR3AxYzNSbFpDQmllU0IwYUdVZ2RYTmxjbHh1WEhSallXTm9aVXhsYm1kMGFEb2dOVEFzWEc1Y2JseDBZM0psWVhSbFVITmxkV1J2T2lCdFlYSnJSblZ1WTNScGIyNHNYRzVjYmx4MGJXRjBZMmc2SUcxaGRHTm9SWGh3Y2l4Y2JseHVYSFJoZEhSeVNHRnVaR3hsT2lCN2ZTeGNibHh1WEhSbWFXNWtPaUI3ZlN4Y2JseHVYSFJ5Wld4aGRHbDJaVG9nZTF4dVhIUmNkRndpUGx3aU9pQjdJR1JwY2pvZ1hDSndZWEpsYm5ST2IyUmxYQ0lzSUdacGNuTjBPaUIwY25WbElIMHNYRzVjZEZ4MFhDSWdYQ0k2SUhzZ1pHbHlPaUJjSW5CaGNtVnVkRTV2WkdWY0lpQjlMRnh1WEhSY2RGd2lLMXdpT2lCN0lHUnBjam9nWENKd2NtVjJhVzkxYzFOcFlteHBibWRjSWl3Z1ptbHljM1E2SUhSeWRXVWdmU3hjYmx4MFhIUmNJbjVjSWpvZ2V5QmthWEk2SUZ3aWNISmxkbWx2ZFhOVGFXSnNhVzVuWENJZ2ZWeHVYSFI5TEZ4dVhHNWNkSEJ5WlVacGJIUmxjam9nZTF4dVhIUmNkRndpUVZSVVVsd2lPaUJtZFc1amRHbHZiaWdnYldGMFkyZ2dLU0I3WEc1Y2RGeDBYSFJ0WVhSamFGc2dNU0JkSUQwZ2JXRjBZMmhiSURFZ1hTNXlaWEJzWVdObEtDQnlkVzVsYzJOaGNHVXNJR1oxYm1WelkyRndaU0FwTzF4dVhHNWNkRngwWEhRdkx5Qk5iM1psSUhSb1pTQm5hWFpsYmlCMllXeDFaU0IwYnlCdFlYUmphRnN6WFNCM2FHVjBhR1Z5SUhGMWIzUmxaQ0J2Y2lCMWJuRjFiM1JsWkZ4dVhIUmNkRngwYldGMFkyaGJJRE1nWFNBOUlDZ2diV0YwWTJoYklETWdYU0I4ZkNCdFlYUmphRnNnTkNCZElIeDhYRzVjZEZ4MFhIUmNkRzFoZEdOb1d5QTFJRjBnZkh3Z1hDSmNJaUFwTG5KbGNHeGhZMlVvSUhKMWJtVnpZMkZ3WlN3Z1puVnVaWE5qWVhCbElDazdYRzVjYmx4MFhIUmNkR2xtSUNnZ2JXRjBZMmhiSURJZ1hTQTlQVDBnWENKK1BWd2lJQ2tnZTF4dVhIUmNkRngwWEhSdFlYUmphRnNnTXlCZElEMGdYQ0lnWENJZ0t5QnRZWFJqYUZzZ015QmRJQ3NnWENJZ1hDSTdYRzVjZEZ4MFhIUjlYRzVjYmx4MFhIUmNkSEpsZEhWeWJpQnRZWFJqYUM1emJHbGpaU2dnTUN3Z05DQXBPMXh1WEhSY2RIMHNYRzVjYmx4MFhIUmNJa05JU1V4RVhDSTZJR1oxYm1OMGFXOXVLQ0J0WVhSamFDQXBJSHRjYmx4dVhIUmNkRngwTHlvZ2JXRjBZMmhsY3lCbWNtOXRJRzFoZEdOb1JYaHdjbHRjSWtOSVNVeEVYQ0pkWEc1Y2RGeDBYSFJjZERFZ2RIbHdaU0FvYjI1c2VYeHVkR2g4TGk0dUtWeHVYSFJjZEZ4MFhIUXlJSGRvWVhRZ0tHTm9hV3hrZkc5bUxYUjVjR1VwWEc1Y2RGeDBYSFJjZERNZ1lYSm5kVzFsYm5RZ0tHVjJaVzU4YjJSa2ZGeGNaQ3A4WEZ4a0ttNG9XeXN0WFZ4Y1pDc3BQM3d1TGk0cFhHNWNkRngwWEhSY2REUWdlRzR0WTI5dGNHOXVaVzUwSUc5bUlIaHVLM2tnWVhKbmRXMWxiblFnS0ZzckxWMC9YRnhrS201OEtWeHVYSFJjZEZ4MFhIUTFJSE5wWjI0Z2IyWWdlRzR0WTI5dGNHOXVaVzUwWEc1Y2RGeDBYSFJjZERZZ2VDQnZaaUI0YmkxamIyMXdiMjVsYm5SY2JseDBYSFJjZEZ4ME55QnphV2R1SUc5bUlIa3RZMjl0Y0c5dVpXNTBYRzVjZEZ4MFhIUmNkRGdnZVNCdlppQjVMV052YlhCdmJtVnVkRnh1WEhSY2RGeDBLaTljYmx4MFhIUmNkRzFoZEdOb1d5QXhJRjBnUFNCdFlYUmphRnNnTVNCZExuUnZURzkzWlhKRFlYTmxLQ2s3WEc1Y2JseDBYSFJjZEdsbUlDZ2diV0YwWTJoYklERWdYUzV6YkdsalpTZ2dNQ3dnTXlBcElEMDlQU0JjSW01MGFGd2lJQ2tnZTF4dVhHNWNkRngwWEhSY2RDOHZJRzUwYUMwcUlISmxjWFZwY21WeklHRnlaM1Z0Wlc1MFhHNWNkRngwWEhSY2RHbG1JQ2dnSVcxaGRHTm9XeUF6SUYwZ0tTQjdYRzVjZEZ4MFhIUmNkRngwVTJsNmVteGxMbVZ5Y205eUtDQnRZWFJqYUZzZ01DQmRJQ2s3WEc1Y2RGeDBYSFJjZEgxY2JseHVYSFJjZEZ4MFhIUXZMeUJ1ZFcxbGNtbGpJSGdnWVc1a0lIa2djR0Z5WVcxbGRHVnljeUJtYjNJZ1JYaHdjaTVtYVd4MFpYSXVRMGhKVEVSY2JseDBYSFJjZEZ4MEx5OGdjbVZ0WlcxaVpYSWdkR2hoZENCbVlXeHpaUzkwY25WbElHTmhjM1FnY21WemNHVmpkR2wyWld4NUlIUnZJREF2TVZ4dVhIUmNkRngwWEhSdFlYUmphRnNnTkNCZElEMGdLeWdnYldGMFkyaGJJRFFnWFNBL1hHNWNkRngwWEhSY2RGeDBiV0YwWTJoYklEVWdYU0FySUNnZ2JXRjBZMmhiSURZZ1hTQjhmQ0F4SUNrZ09seHVYSFJjZEZ4MFhIUmNkRElnS2lBb0lHMWhkR05vV3lBeklGMGdQVDA5SUZ3aVpYWmxibHdpSUh4OElHMWhkR05vV3lBeklGMGdQVDA5SUZ3aWIyUmtYQ0lnS1NBcE8xeHVYSFJjZEZ4MFhIUnRZWFJqYUZzZ05TQmRJRDBnS3lnZ0tDQnRZWFJqYUZzZ055QmRJQ3NnYldGMFkyaGJJRGdnWFNBcElIeDhJRzFoZEdOb1d5QXpJRjBnUFQwOUlGd2liMlJrWENJZ0tUdGNibHh1WEhSY2RGeDBYSFF2THlCdmRHaGxjaUIwZVhCbGN5QndjbTlvYVdKcGRDQmhjbWQxYldWdWRITmNibHgwWEhSY2RIMGdaV3h6WlNCcFppQW9JRzFoZEdOb1d5QXpJRjBnS1NCN1hHNWNkRngwWEhSY2RGTnBlbnBzWlM1bGNuSnZjaWdnYldGMFkyaGJJREFnWFNBcE8xeHVYSFJjZEZ4MGZWeHVYRzVjZEZ4MFhIUnlaWFIxY200Z2JXRjBZMmc3WEc1Y2RGeDBmU3hjYmx4dVhIUmNkRndpVUZORlZVUlBYQ0k2SUdaMWJtTjBhVzl1S0NCdFlYUmphQ0FwSUh0Y2JseDBYSFJjZEhaaGNpQmxlR05sYzNNc1hHNWNkRngwWEhSY2RIVnVjWFZ2ZEdWa0lEMGdJVzFoZEdOb1d5QTJJRjBnSmlZZ2JXRjBZMmhiSURJZ1hUdGNibHh1WEhSY2RGeDBhV1lnS0NCdFlYUmphRVY0Y0hKYklGd2lRMGhKVEVSY0lpQmRMblJsYzNRb0lHMWhkR05vV3lBd0lGMGdLU0FwSUh0Y2JseDBYSFJjZEZ4MGNtVjBkWEp1SUc1MWJHdzdYRzVjZEZ4MFhIUjlYRzVjYmx4MFhIUmNkQzh2SUVGalkyVndkQ0J4ZFc5MFpXUWdZWEpuZFcxbGJuUnpJR0Z6TFdselhHNWNkRngwWEhScFppQW9JRzFoZEdOb1d5QXpJRjBnS1NCN1hHNWNkRngwWEhSY2RHMWhkR05vV3lBeUlGMGdQU0J0WVhSamFGc2dOQ0JkSUh4OElHMWhkR05vV3lBMUlGMGdmSHdnWENKY0lqdGNibHh1WEhSY2RGeDBMeThnVTNSeWFYQWdaWGhqWlhOeklHTm9ZWEpoWTNSbGNuTWdabkp2YlNCMWJuRjFiM1JsWkNCaGNtZDFiV1Z1ZEhOY2JseDBYSFJjZEgwZ1pXeHpaU0JwWmlBb0lIVnVjWFZ2ZEdWa0lDWW1JSEp3YzJWMVpHOHVkR1Z6ZENnZ2RXNXhkVzkwWldRZ0tTQW1KbHh1WEc1Y2RGeDBYSFJjZEM4dklFZGxkQ0JsZUdObGMzTWdabkp2YlNCMGIydGxibWw2WlNBb2NtVmpkWEp6YVhabGJIa3BYRzVjZEZ4MFhIUmNkQ2dnWlhoalpYTnpJRDBnZEc5clpXNXBlbVVvSUhWdWNYVnZkR1ZrTENCMGNuVmxJQ2tnS1NBbUpseHVYRzVjZEZ4MFhIUmNkQzh2SUdGa2RtRnVZMlVnZEc4Z2RHaGxJRzVsZUhRZ1kyeHZjMmx1WnlCd1lYSmxiblJvWlhOcGMxeHVYSFJjZEZ4MFhIUW9JR1Y0WTJWemN5QTlJSFZ1Y1hWdmRHVmtMbWx1WkdWNFQyWW9JRndpS1Z3aUxDQjFibkYxYjNSbFpDNXNaVzVuZEdnZ0xTQmxlR05sYzNNZ0tTQXRJSFZ1Y1hWdmRHVmtMbXhsYm1kMGFDQXBJQ2tnZTF4dVhHNWNkRngwWEhSY2RDOHZJR1Y0WTJWemN5QnBjeUJoSUc1bFoyRjBhWFpsSUdsdVpHVjRYRzVjZEZ4MFhIUmNkRzFoZEdOb1d5QXdJRjBnUFNCdFlYUmphRnNnTUNCZExuTnNhV05sS0NBd0xDQmxlR05sYzNNZ0tUdGNibHgwWEhSY2RGeDBiV0YwWTJoYklESWdYU0E5SUhWdWNYVnZkR1ZrTG5Oc2FXTmxLQ0F3TENCbGVHTmxjM01nS1R0Y2JseDBYSFJjZEgxY2JseHVYSFJjZEZ4MEx5OGdVbVYwZFhKdUlHOXViSGtnWTJGd2RIVnlaWE1nYm1WbFpHVmtJR0o1SUhSb1pTQndjMlYxWkc4Z1ptbHNkR1Z5SUcxbGRHaHZaQ0FvZEhsd1pTQmhibVFnWVhKbmRXMWxiblFwWEc1Y2RGeDBYSFJ5WlhSMWNtNGdiV0YwWTJndWMyeHBZMlVvSURBc0lETWdLVHRjYmx4MFhIUjlYRzVjZEgwc1hHNWNibHgwWm1sc2RHVnlPaUI3WEc1Y2JseDBYSFJjSWxSQlIxd2lPaUJtZFc1amRHbHZiaWdnYm05a1pVNWhiV1ZUWld4bFkzUnZjaUFwSUh0Y2JseDBYSFJjZEhaaGNpQnViMlJsVG1GdFpTQTlJRzV2WkdWT1lXMWxVMlZzWldOMGIzSXVjbVZ3YkdGalpTZ2djblZ1WlhOallYQmxMQ0JtZFc1bGMyTmhjR1VnS1M1MGIweHZkMlZ5UTJGelpTZ3BPMXh1WEhSY2RGeDBjbVYwZFhKdUlHNXZaR1ZPWVcxbFUyVnNaV04wYjNJZ1BUMDlJRndpS2x3aUlEOWNibHgwWEhSY2RGeDBablZ1WTNScGIyNG9LU0I3WEc1Y2RGeDBYSFJjZEZ4MGNtVjBkWEp1SUhSeWRXVTdYRzVjZEZ4MFhIUmNkSDBnT2x4dVhIUmNkRngwWEhSbWRXNWpkR2x2YmlnZ1pXeGxiU0FwSUh0Y2JseDBYSFJjZEZ4MFhIUnlaWFIxY200Z1pXeGxiUzV1YjJSbFRtRnRaU0FtSmlCbGJHVnRMbTV2WkdWT1lXMWxMblJ2VEc5M1pYSkRZWE5sS0NrZ1BUMDlJRzV2WkdWT1lXMWxPMXh1WEhSY2RGeDBYSFI5TzF4dVhIUmNkSDBzWEc1Y2JseDBYSFJjSWtOTVFWTlRYQ0k2SUdaMWJtTjBhVzl1S0NCamJHRnpjMDVoYldVZ0tTQjdYRzVjZEZ4MFhIUjJZWElnY0dGMGRHVnliaUE5SUdOc1lYTnpRMkZqYUdWYklHTnNZWE56VG1GdFpTQXJJRndpSUZ3aUlGMDdYRzVjYmx4MFhIUmNkSEpsZEhWeWJpQndZWFIwWlhKdUlIeDhYRzVjZEZ4MFhIUmNkQ2dnY0dGMGRHVnliaUE5SUc1bGR5QlNaV2RGZUhBb0lGd2lLRjU4WENJZ0t5QjNhR2wwWlhOd1lXTmxJQ3RjYmx4MFhIUmNkRngwWEhSY0lpbGNJaUFySUdOc1lYTnpUbUZ0WlNBcklGd2lLRndpSUNzZ2QyaHBkR1Z6Y0dGalpTQXJJRndpZkNRcFhDSWdLU0FwSUNZbUlHTnNZWE56UTJGamFHVW9YRzVjZEZ4MFhIUmNkRngwWEhSamJHRnpjMDVoYldVc0lHWjFibU4wYVc5dUtDQmxiR1Z0SUNrZ2UxeHVYSFJjZEZ4MFhIUmNkRngwWEhSeVpYUjFjbTRnY0dGMGRHVnliaTUwWlhOMEtGeHVYSFJjZEZ4MFhIUmNkRngwWEhSY2RIUjVjR1Z2WmlCbGJHVnRMbU5zWVhOelRtRnRaU0E5UFQwZ1hDSnpkSEpwYm1kY0lpQW1KaUJsYkdWdExtTnNZWE56VG1GdFpTQjhmRnh1WEhSY2RGeDBYSFJjZEZ4MFhIUmNkSFI1Y0dWdlppQmxiR1Z0TG1kbGRFRjBkSEpwWW5WMFpTQWhQVDBnWENKMWJtUmxabWx1WldSY0lpQW1KbHh1WEhSY2RGeDBYSFJjZEZ4MFhIUmNkRngwWld4bGJTNW5aWFJCZEhSeWFXSjFkR1VvSUZ3aVkyeGhjM05jSWlBcElIeDhYRzVjZEZ4MFhIUmNkRngwWEhSY2RGeDBYQ0pjSWx4dVhIUmNkRngwWEhSY2RGeDBYSFFwTzF4dVhIUmNkRngwWEhSOUlDazdYRzVjZEZ4MGZTeGNibHh1WEhSY2RGd2lRVlJVVWx3aU9pQm1kVzVqZEdsdmJpZ2dibUZ0WlN3Z2IzQmxjbUYwYjNJc0lHTm9aV05ySUNrZ2UxeHVYSFJjZEZ4MGNtVjBkWEp1SUdaMWJtTjBhVzl1S0NCbGJHVnRJQ2tnZTF4dVhIUmNkRngwWEhSMllYSWdjbVZ6ZFd4MElEMGdVMmw2ZW14bExtRjBkSElvSUdWc1pXMHNJRzVoYldVZ0tUdGNibHh1WEhSY2RGeDBYSFJwWmlBb0lISmxjM1ZzZENBOVBTQnVkV3hzSUNrZ2UxeHVYSFJjZEZ4MFhIUmNkSEpsZEhWeWJpQnZjR1Z5WVhSdmNpQTlQVDBnWENJaFBWd2lPMXh1WEhSY2RGeDBYSFI5WEc1Y2RGeDBYSFJjZEdsbUlDZ2dJVzl3WlhKaGRHOXlJQ2tnZTF4dVhIUmNkRngwWEhSY2RISmxkSFZ5YmlCMGNuVmxPMXh1WEhSY2RGeDBYSFI5WEc1Y2JseDBYSFJjZEZ4MGNtVnpkV3gwSUNzOUlGd2lYQ0k3WEc1Y2JseDBYSFJjZEZ4MEx5b2daWE5zYVc1MExXUnBjMkZpYkdVZ2JXRjRMV3hsYmlBcUwxeHVYRzVjZEZ4MFhIUmNkSEpsZEhWeWJpQnZjR1Z5WVhSdmNpQTlQVDBnWENJOVhDSWdQeUJ5WlhOMWJIUWdQVDA5SUdOb1pXTnJJRHBjYmx4MFhIUmNkRngwWEhSdmNHVnlZWFJ2Y2lBOVBUMGdYQ0loUFZ3aUlEOGdjbVZ6ZFd4MElDRTlQU0JqYUdWamF5QTZYRzVjZEZ4MFhIUmNkRngwYjNCbGNtRjBiM0lnUFQwOUlGd2lYajFjSWlBL0lHTm9aV05ySUNZbUlISmxjM1ZzZEM1cGJtUmxlRTltS0NCamFHVmpheUFwSUQwOVBTQXdJRHBjYmx4MFhIUmNkRngwWEhSdmNHVnlZWFJ2Y2lBOVBUMGdYQ0lxUFZ3aUlEOGdZMmhsWTJzZ0ppWWdjbVZ6ZFd4MExtbHVaR1Y0VDJZb0lHTm9aV05ySUNrZ1BpQXRNU0E2WEc1Y2RGeDBYSFJjZEZ4MGIzQmxjbUYwYjNJZ1BUMDlJRndpSkQxY0lpQS9JR05vWldOcklDWW1JSEpsYzNWc2RDNXpiR2xqWlNnZ0xXTm9aV05yTG14bGJtZDBhQ0FwSUQwOVBTQmphR1ZqYXlBNlhHNWNkRngwWEhSY2RGeDBiM0JsY21GMGIzSWdQVDA5SUZ3aWZqMWNJaUEvSUNnZ1hDSWdYQ0lnS3lCeVpYTjFiSFF1Y21Wd2JHRmpaU2dnY25kb2FYUmxjM0JoWTJVc0lGd2lJRndpSUNrZ0t5QmNJaUJjSWlBcExtbHVaR1Y0VDJZb0lHTm9aV05ySUNrZ1BpQXRNU0E2WEc1Y2RGeDBYSFJjZEZ4MGIzQmxjbUYwYjNJZ1BUMDlJRndpZkQxY0lpQS9JSEpsYzNWc2RDQTlQVDBnWTJobFkyc2dmSHdnY21WemRXeDBMbk5zYVdObEtDQXdMQ0JqYUdWamF5NXNaVzVuZEdnZ0t5QXhJQ2tnUFQwOUlHTm9aV05ySUNzZ1hDSXRYQ0lnT2x4dVhIUmNkRngwWEhSY2RHWmhiSE5sTzF4dVhIUmNkRngwWEhRdktpQmxjMnhwYm5RdFpXNWhZbXhsSUcxaGVDMXNaVzRnS2k5Y2JseHVYSFJjZEZ4MGZUdGNibHgwWEhSOUxGeHVYRzVjZEZ4MFhDSkRTRWxNUkZ3aU9pQm1kVzVqZEdsdmJpZ2dkSGx3WlN3Z2QyaGhkQ3dnWDJGeVozVnRaVzUwTENCbWFYSnpkQ3dnYkdGemRDQXBJSHRjYmx4MFhIUmNkSFpoY2lCemFXMXdiR1VnUFNCMGVYQmxMbk5zYVdObEtDQXdMQ0F6SUNrZ0lUMDlJRndpYm5Sb1hDSXNYRzVjZEZ4MFhIUmNkR1p2Y25kaGNtUWdQU0IwZVhCbExuTnNhV05sS0NBdE5DQXBJQ0U5UFNCY0lteGhjM1JjSWl4Y2JseDBYSFJjZEZ4MGIyWlVlWEJsSUQwZ2QyaGhkQ0E5UFQwZ1hDSnZaaTEwZVhCbFhDSTdYRzVjYmx4MFhIUmNkSEpsZEhWeWJpQm1hWEp6ZENBOVBUMGdNU0FtSmlCc1lYTjBJRDA5UFNBd0lEOWNibHh1WEhSY2RGeDBYSFF2THlCVGFHOXlkR04xZENCbWIzSWdPbTUwYUMwcUtHNHBYRzVjZEZ4MFhIUmNkR1oxYm1OMGFXOXVLQ0JsYkdWdElDa2dlMXh1WEhSY2RGeDBYSFJjZEhKbGRIVnliaUFoSVdWc1pXMHVjR0Z5Wlc1MFRtOWtaVHRjYmx4MFhIUmNkRngwZlNBNlhHNWNibHgwWEhSY2RGeDBablZ1WTNScGIyNG9JR1ZzWlcwc0lGOWpiMjUwWlhoMExDQjRiV3dnS1NCN1hHNWNkRngwWEhSY2RGeDBkbUZ5SUdOaFkyaGxMQ0IxYm1seGRXVkRZV05vWlN3Z2IzVjBaWEpEWVdOb1pTd2dibTlrWlN3Z2JtOWtaVWx1WkdWNExDQnpkR0Z5ZEN4Y2JseDBYSFJjZEZ4MFhIUmNkR1JwY2lBOUlITnBiWEJzWlNBaFBUMGdabTl5ZDJGeVpDQS9JRndpYm1WNGRGTnBZbXhwYm1kY0lpQTZJRndpY0hKbGRtbHZkWE5UYVdKc2FXNW5YQ0lzWEc1Y2RGeDBYSFJjZEZ4MFhIUndZWEpsYm5RZ1BTQmxiR1Z0TG5CaGNtVnVkRTV2WkdVc1hHNWNkRngwWEhSY2RGeDBYSFJ1WVcxbElEMGdiMlpVZVhCbElDWW1JR1ZzWlcwdWJtOWtaVTVoYldVdWRHOU1iM2RsY2tOaGMyVW9LU3hjYmx4MFhIUmNkRngwWEhSY2RIVnpaVU5oWTJobElEMGdJWGh0YkNBbUppQWhiMlpVZVhCbExGeHVYSFJjZEZ4MFhIUmNkRngwWkdsbVppQTlJR1poYkhObE8xeHVYRzVjZEZ4MFhIUmNkRngwYVdZZ0tDQndZWEpsYm5RZ0tTQjdYRzVjYmx4MFhIUmNkRngwWEhSY2RDOHZJRG9vWm1seWMzUjhiR0Z6ZEh4dmJteDVLUzBvWTJocGJHUjhiMll0ZEhsd1pTbGNibHgwWEhSY2RGeDBYSFJjZEdsbUlDZ2djMmx0Y0d4bElDa2dlMXh1WEhSY2RGeDBYSFJjZEZ4MFhIUjNhR2xzWlNBb0lHUnBjaUFwSUh0Y2JseDBYSFJjZEZ4MFhIUmNkRngwWEhSdWIyUmxJRDBnWld4bGJUdGNibHgwWEhSY2RGeDBYSFJjZEZ4MFhIUjNhR2xzWlNBb0lDZ2dibTlrWlNBOUlHNXZaR1ZiSUdScGNpQmRJQ2tnS1NCN1hHNWNkRngwWEhSY2RGeDBYSFJjZEZ4MFhIUnBaaUFvSUc5bVZIbHdaU0EvWEc1Y2RGeDBYSFJjZEZ4MFhIUmNkRngwWEhSY2RHNXZaR1V1Ym05a1pVNWhiV1V1ZEc5TWIzZGxja05oYzJVb0tTQTlQVDBnYm1GdFpTQTZYRzVjZEZ4MFhIUmNkRngwWEhSY2RGeDBYSFJjZEc1dlpHVXVibTlrWlZSNWNHVWdQVDA5SURFZ0tTQjdYRzVjYmx4MFhIUmNkRngwWEhSY2RGeDBYSFJjZEZ4MGNtVjBkWEp1SUdaaGJITmxPMXh1WEhSY2RGeDBYSFJjZEZ4MFhIUmNkRngwZlZ4dVhIUmNkRngwWEhSY2RGeDBYSFJjZEgxY2JseHVYSFJjZEZ4MFhIUmNkRngwWEhSY2RDOHZJRkpsZG1WeWMyVWdaR2x5WldOMGFXOXVJR1p2Y2lBNmIyNXNlUzBxSUNocFppQjNaU0JvWVhabGJpZDBJSGxsZENCa2IyNWxJSE52S1Z4dVhIUmNkRngwWEhSY2RGeDBYSFJjZEhOMFlYSjBJRDBnWkdseUlEMGdkSGx3WlNBOVBUMGdYQ0p2Ym14NVhDSWdKaVlnSVhOMFlYSjBJQ1ltSUZ3aWJtVjRkRk5wWW14cGJtZGNJanRjYmx4MFhIUmNkRngwWEhSY2RGeDBmVnh1WEhSY2RGeDBYSFJjZEZ4MFhIUnlaWFIxY200Z2RISjFaVHRjYmx4MFhIUmNkRngwWEhSY2RIMWNibHh1WEhSY2RGeDBYSFJjZEZ4MGMzUmhjblFnUFNCYklHWnZjbmRoY21RZ1B5QndZWEpsYm5RdVptbHljM1JEYUdsc1pDQTZJSEJoY21WdWRDNXNZWE4wUTJocGJHUWdYVHRjYmx4dVhIUmNkRngwWEhSY2RGeDBMeThnYm05dUxYaHRiQ0E2Ym5Sb0xXTm9hV3hrS0M0dUxpa2djM1J2Y21WeklHTmhZMmhsSUdSaGRHRWdiMjRnWUhCaGNtVnVkR0JjYmx4MFhIUmNkRngwWEhSY2RHbG1JQ2dnWm05eWQyRnlaQ0FtSmlCMWMyVkRZV05vWlNBcElIdGNibHh1WEhSY2RGeDBYSFJjZEZ4MFhIUXZMeUJUWldWcklHQmxiR1Z0WUNCbWNtOXRJR0VnY0hKbGRtbHZkWE5zZVMxallXTm9aV1FnYVc1a1pYaGNibHh1WEhSY2RGeDBYSFJjZEZ4MFhIUXZMeUF1TGk1cGJpQmhJR2Q2YVhBdFpuSnBaVzVrYkhrZ2QyRjVYRzVjZEZ4MFhIUmNkRngwWEhSY2RHNXZaR1VnUFNCd1lYSmxiblE3WEc1Y2RGeDBYSFJjZEZ4MFhIUmNkRzkxZEdWeVEyRmphR1VnUFNCdWIyUmxXeUJsZUhCaGJtUnZJRjBnZkh3Z0tDQnViMlJsV3lCbGVIQmhibVJ2SUYwZ1BTQjdmU0FwTzF4dVhHNWNkRngwWEhSY2RGeDBYSFJjZEM4dklGTjFjSEJ2Y25RNklFbEZJRHc1SUc5dWJIbGNibHgwWEhSY2RGeDBYSFJjZEZ4MEx5OGdSR1ZtWlc1a0lHRm5ZV2x1YzNRZ1kyeHZibVZrSUdGMGRISnZjR1Z5ZEdsbGN5QW9hbEYxWlhKNUlHZG9MVEUzTURrcFhHNWNkRngwWEhSY2RGeDBYSFJjZEhWdWFYRjFaVU5oWTJobElEMGdiM1YwWlhKRFlXTm9aVnNnYm05a1pTNTFibWx4ZFdWSlJDQmRJSHg4WEc1Y2RGeDBYSFJjZEZ4MFhIUmNkRngwS0NCdmRYUmxja05oWTJobFd5QnViMlJsTG5WdWFYRjFaVWxFSUYwZ1BTQjdmU0FwTzF4dVhHNWNkRngwWEhSY2RGeDBYSFJjZEdOaFkyaGxJRDBnZFc1cGNYVmxRMkZqYUdWYklIUjVjR1VnWFNCOGZDQmJYVHRjYmx4MFhIUmNkRngwWEhSY2RGeDBibTlrWlVsdVpHVjRJRDBnWTJGamFHVmJJREFnWFNBOVBUMGdaR2x5Y25WdWN5QW1KaUJqWVdOb1pWc2dNU0JkTzF4dVhIUmNkRngwWEhSY2RGeDBYSFJrYVdabUlEMGdibTlrWlVsdVpHVjRJQ1ltSUdOaFkyaGxXeUF5SUYwN1hHNWNkRngwWEhSY2RGeDBYSFJjZEc1dlpHVWdQU0J1YjJSbFNXNWtaWGdnSmlZZ2NHRnlaVzUwTG1Ob2FXeGtUbTlrWlhOYklHNXZaR1ZKYm1SbGVDQmRPMXh1WEc1Y2RGeDBYSFJjZEZ4MFhIUmNkSGRvYVd4bElDZ2dLQ0J1YjJSbElEMGdLeXR1YjJSbFNXNWtaWGdnSmlZZ2JtOWtaU0FtSmlCdWIyUmxXeUJrYVhJZ1hTQjhmRnh1WEc1Y2RGeDBYSFJjZEZ4MFhIUmNkRngwTHk4Z1JtRnNiR0poWTJzZ2RHOGdjMlZsYTJsdVp5QmdaV3hsYldBZ1puSnZiU0IwYUdVZ2MzUmhjblJjYmx4MFhIUmNkRngwWEhSY2RGeDBYSFFvSUdScFptWWdQU0J1YjJSbFNXNWtaWGdnUFNBd0lDa2dmSHdnYzNSaGNuUXVjRzl3S0NrZ0tTQXBJSHRjYmx4dVhIUmNkRngwWEhSY2RGeDBYSFJjZEM4dklGZG9aVzRnWm05MWJtUXNJR05oWTJobElHbHVaR1Y0WlhNZ2IyNGdZSEJoY21WdWRHQWdZVzVrSUdKeVpXRnJYRzVjZEZ4MFhIUmNkRngwWEhSY2RGeDBhV1lnS0NCdWIyUmxMbTV2WkdWVWVYQmxJRDA5UFNBeElDWW1JQ3NyWkdsbVppQW1KaUJ1YjJSbElEMDlQU0JsYkdWdElDa2dlMXh1WEhSY2RGeDBYSFJjZEZ4MFhIUmNkRngwZFc1cGNYVmxRMkZqYUdWYklIUjVjR1VnWFNBOUlGc2daR2x5Y25WdWN5d2dibTlrWlVsdVpHVjRMQ0JrYVdabUlGMDdYRzVjZEZ4MFhIUmNkRngwWEhSY2RGeDBYSFJpY21WaGF6dGNibHgwWEhSY2RGeDBYSFJjZEZ4MFhIUjlYRzVjZEZ4MFhIUmNkRngwWEhSY2RIMWNibHh1WEhSY2RGeDBYSFJjZEZ4MGZTQmxiSE5sSUh0Y2JseHVYSFJjZEZ4MFhIUmNkRngwWEhRdkx5QlZjMlVnY0hKbGRtbHZkWE5zZVMxallXTm9aV1FnWld4bGJXVnVkQ0JwYm1SbGVDQnBaaUJoZG1GcGJHRmliR1ZjYmx4MFhIUmNkRngwWEhSY2RGeDBhV1lnS0NCMWMyVkRZV05vWlNBcElIdGNibHh1WEhSY2RGeDBYSFJjZEZ4MFhIUmNkQzh2SUM0dUxtbHVJR0VnWjNwcGNDMW1jbWxsYm1Sc2VTQjNZWGxjYmx4MFhIUmNkRngwWEhSY2RGeDBYSFJ1YjJSbElEMGdaV3hsYlR0Y2JseDBYSFJjZEZ4MFhIUmNkRngwWEhSdmRYUmxja05oWTJobElEMGdibTlrWlZzZ1pYaHdZVzVrYnlCZElIeDhJQ2dnYm05a1pWc2daWGh3WVc1a2J5QmRJRDBnZTMwZ0tUdGNibHh1WEhSY2RGeDBYSFJjZEZ4MFhIUmNkQzh2SUZOMWNIQnZjblE2SUVsRklEdzVJRzl1YkhsY2JseDBYSFJjZEZ4MFhIUmNkRngwWEhRdkx5QkVaV1psYm1RZ1lXZGhhVzV6ZENCamJHOXVaV1FnWVhSMGNtOXdaWEowYVdWeklDaHFVWFZsY25rZ1oyZ3RNVGN3T1NsY2JseDBYSFJjZEZ4MFhIUmNkRngwWEhSMWJtbHhkV1ZEWVdOb1pTQTlJRzkxZEdWeVEyRmphR1ZiSUc1dlpHVXVkVzVwY1hWbFNVUWdYU0I4ZkZ4dVhIUmNkRngwWEhSY2RGeDBYSFJjZEZ4MEtDQnZkWFJsY2tOaFkyaGxXeUJ1YjJSbExuVnVhWEYxWlVsRUlGMGdQU0I3ZlNBcE8xeHVYRzVjZEZ4MFhIUmNkRngwWEhSY2RGeDBZMkZqYUdVZ1BTQjFibWx4ZFdWRFlXTm9aVnNnZEhsd1pTQmRJSHg4SUZ0ZE8xeHVYSFJjZEZ4MFhIUmNkRngwWEhSY2RHNXZaR1ZKYm1SbGVDQTlJR05oWTJobFd5QXdJRjBnUFQwOUlHUnBjbkoxYm5NZ0ppWWdZMkZqYUdWYklERWdYVHRjYmx4MFhIUmNkRngwWEhSY2RGeDBYSFJrYVdabUlEMGdibTlrWlVsdVpHVjRPMXh1WEhSY2RGeDBYSFJjZEZ4MFhIUjlYRzVjYmx4MFhIUmNkRngwWEhSY2RGeDBMeThnZUcxc0lEcHVkR2d0WTJocGJHUW9MaTR1S1Z4dVhIUmNkRngwWEhSY2RGeDBYSFF2THlCdmNpQTZiblJvTFd4aGMzUXRZMmhwYkdRb0xpNHVLU0J2Y2lBNmJuUm9LQzFzWVhOMEtUOHRiMll0ZEhsd1pTZ3VMaTRwWEc1Y2RGeDBYSFJjZEZ4MFhIUmNkR2xtSUNnZ1pHbG1aaUE5UFQwZ1ptRnNjMlVnS1NCN1hHNWNibHgwWEhSY2RGeDBYSFJjZEZ4MFhIUXZMeUJWYzJVZ2RHaGxJSE5oYldVZ2JHOXZjQ0JoY3lCaFltOTJaU0IwYnlCelpXVnJJR0JsYkdWdFlDQm1jbTl0SUhSb1pTQnpkR0Z5ZEZ4dVhIUmNkRngwWEhSY2RGeDBYSFJjZEhkb2FXeGxJQ2dnS0NCdWIyUmxJRDBnS3l0dWIyUmxTVzVrWlhnZ0ppWWdibTlrWlNBbUppQnViMlJsV3lCa2FYSWdYU0I4ZkZ4dVhIUmNkRngwWEhSY2RGeDBYSFJjZEZ4MEtDQmthV1ptSUQwZ2JtOWtaVWx1WkdWNElEMGdNQ0FwSUh4OElITjBZWEowTG5CdmNDZ3BJQ2tnS1NCN1hHNWNibHgwWEhSY2RGeDBYSFJjZEZ4MFhIUmNkR2xtSUNnZ0tDQnZabFI1Y0dVZ1AxeHVYSFJjZEZ4MFhIUmNkRngwWEhSY2RGeDBYSFJ1YjJSbExtNXZaR1ZPWVcxbExuUnZURzkzWlhKRFlYTmxLQ2tnUFQwOUlHNWhiV1VnT2x4dVhIUmNkRngwWEhSY2RGeDBYSFJjZEZ4MFhIUnViMlJsTG01dlpHVlVlWEJsSUQwOVBTQXhJQ2tnSmlaY2JseDBYSFJjZEZ4MFhIUmNkRngwWEhSY2RGeDBLeXRrYVdabUlDa2dlMXh1WEc1Y2RGeDBYSFJjZEZ4MFhIUmNkRngwWEhSY2RDOHZJRU5oWTJobElIUm9aU0JwYm1SbGVDQnZaaUJsWVdOb0lHVnVZMjkxYm5SbGNtVmtJR1ZzWlcxbGJuUmNibHgwWEhSY2RGeDBYSFJjZEZ4MFhIUmNkRngwYVdZZ0tDQjFjMlZEWVdOb1pTQXBJSHRjYmx4MFhIUmNkRngwWEhSY2RGeDBYSFJjZEZ4MFhIUnZkWFJsY2tOaFkyaGxJRDBnYm05a1pWc2daWGh3WVc1a2J5QmRJSHg4WEc1Y2RGeDBYSFJjZEZ4MFhIUmNkRngwWEhSY2RGeDBYSFFvSUc1dlpHVmJJR1Y0Y0dGdVpHOGdYU0E5SUh0OUlDazdYRzVjYmx4MFhIUmNkRngwWEhSY2RGeDBYSFJjZEZ4MFhIUXZMeUJUZFhCd2IzSjBPaUJKUlNBOE9TQnZibXg1WEc1Y2RGeDBYSFJjZEZ4MFhIUmNkRngwWEhSY2RGeDBMeThnUkdWbVpXNWtJR0ZuWVdsdWMzUWdZMnh2Ym1Wa0lHRjBkSEp2Y0dWeWRHbGxjeUFvYWxGMVpYSjVJR2RvTFRFM01Ea3BYRzVjZEZ4MFhIUmNkRngwWEhSY2RGeDBYSFJjZEZ4MGRXNXBjWFZsUTJGamFHVWdQU0J2ZFhSbGNrTmhZMmhsV3lCdWIyUmxMblZ1YVhGMVpVbEVJRjBnZkh4Y2JseDBYSFJjZEZ4MFhIUmNkRngwWEhSY2RGeDBYSFJjZENnZ2IzVjBaWEpEWVdOb1pWc2dibTlrWlM1MWJtbHhkV1ZKUkNCZElEMGdlMzBnS1R0Y2JseHVYSFJjZEZ4MFhIUmNkRngwWEhSY2RGeDBYSFJjZEhWdWFYRjFaVU5oWTJobFd5QjBlWEJsSUYwZ1BTQmJJR1JwY25KMWJuTXNJR1JwWm1ZZ1hUdGNibHgwWEhSY2RGeDBYSFJjZEZ4MFhIUmNkRngwZlZ4dVhHNWNkRngwWEhSY2RGeDBYSFJjZEZ4MFhIUmNkR2xtSUNnZ2JtOWtaU0E5UFQwZ1pXeGxiU0FwSUh0Y2JseDBYSFJjZEZ4MFhIUmNkRngwWEhSY2RGeDBYSFJpY21WaGF6dGNibHgwWEhSY2RGeDBYSFJjZEZ4MFhIUmNkRngwZlZ4dVhIUmNkRngwWEhSY2RGeDBYSFJjZEZ4MGZWeHVYSFJjZEZ4MFhIUmNkRngwWEhSY2RIMWNibHgwWEhSY2RGeDBYSFJjZEZ4MGZWeHVYSFJjZEZ4MFhIUmNkRngwZlZ4dVhHNWNkRngwWEhSY2RGeDBYSFF2THlCSmJtTnZjbkJ2Y21GMFpTQjBhR1VnYjJabWMyVjBMQ0IwYUdWdUlHTm9aV05ySUdGbllXbHVjM1FnWTNsamJHVWdjMmw2WlZ4dVhIUmNkRngwWEhSY2RGeDBaR2xtWmlBdFBTQnNZWE4wTzF4dVhIUmNkRngwWEhSY2RGeDBjbVYwZFhKdUlHUnBabVlnUFQwOUlHWnBjbk4wSUh4OElDZ2daR2xtWmlBbElHWnBjbk4wSUQwOVBTQXdJQ1ltSUdScFptWWdMeUJtYVhKemRDQStQU0F3SUNrN1hHNWNkRngwWEhSY2RGeDBmVnh1WEhSY2RGeDBYSFI5TzF4dVhIUmNkSDBzWEc1Y2JseDBYSFJjSWxCVFJWVkVUMXdpT2lCbWRXNWpkR2x2YmlnZ2NITmxkV1J2TENCaGNtZDFiV1Z1ZENBcElIdGNibHh1WEhSY2RGeDBMeThnY0hObGRXUnZMV05zWVhOeklHNWhiV1Z6SUdGeVpTQmpZWE5sTFdsdWMyVnVjMmwwYVhabFhHNWNkRngwWEhRdkx5Qm9kSFJ3T2k4dmQzZDNMbmN6TG05eVp5OVVVaTl6Wld4bFkzUnZjbk12STNCelpYVmtieTFqYkdGemMyVnpYRzVjZEZ4MFhIUXZMeUJRY21sdmNtbDBhWHBsSUdKNUlHTmhjMlVnYzJWdWMybDBhWFpwZEhrZ2FXNGdZMkZ6WlNCamRYTjBiMjBnY0hObGRXUnZjeUJoY21VZ1lXUmtaV1FnZDJsMGFDQjFjSEJsY21OaGMyVWdiR1YwZEdWeWMxeHVYSFJjZEZ4MEx5OGdVbVZ0WlcxaVpYSWdkR2hoZENCelpYUkdhV3gwWlhKeklHbHVhR1Z5YVhSeklHWnliMjBnY0hObGRXUnZjMXh1WEhSY2RGeDBkbUZ5SUdGeVozTXNYRzVjZEZ4MFhIUmNkR1p1SUQwZ1JYaHdjaTV3YzJWMVpHOXpXeUJ3YzJWMVpHOGdYU0I4ZkNCRmVIQnlMbk5sZEVacGJIUmxjbk5iSUhCelpYVmtieTUwYjB4dmQyVnlRMkZ6WlNncElGMGdmSHhjYmx4MFhIUmNkRngwWEhSVGFYcDZiR1V1WlhKeWIzSW9JRndpZFc1emRYQndiM0owWldRZ2NITmxkV1J2T2lCY0lpQXJJSEJ6WlhWa2J5QXBPMXh1WEc1Y2RGeDBYSFF2THlCVWFHVWdkWE5sY2lCdFlYa2dkWE5sSUdOeVpXRjBaVkJ6WlhWa2J5QjBieUJwYm1ScFkyRjBaU0IwYUdGMFhHNWNkRngwWEhRdkx5QmhjbWQxYldWdWRITWdZWEpsSUc1bFpXUmxaQ0IwYnlCamNtVmhkR1VnZEdobElHWnBiSFJsY2lCbWRXNWpkR2x2Ymx4dVhIUmNkRngwTHk4Z2FuVnpkQ0JoY3lCVGFYcDZiR1VnWkc5bGMxeHVYSFJjZEZ4MGFXWWdLQ0JtYmxzZ1pYaHdZVzVrYnlCZElDa2dlMXh1WEhSY2RGeDBYSFJ5WlhSMWNtNGdabTRvSUdGeVozVnRaVzUwSUNrN1hHNWNkRngwWEhSOVhHNWNibHgwWEhSY2RDOHZJRUoxZENCdFlXbHVkR0ZwYmlCemRYQndiM0owSUdadmNpQnZiR1FnYzJsbmJtRjBkWEpsYzF4dVhIUmNkRngwYVdZZ0tDQm1iaTVzWlc1bmRHZ2dQaUF4SUNrZ2UxeHVYSFJjZEZ4MFhIUmhjbWR6SUQwZ1d5QndjMlYxWkc4c0lIQnpaWFZrYnl3Z1hDSmNJaXdnWVhKbmRXMWxiblFnWFR0Y2JseDBYSFJjZEZ4MGNtVjBkWEp1SUVWNGNISXVjMlYwUm1sc2RHVnljeTVvWVhOUGQyNVFjbTl3WlhKMGVTZ2djSE5sZFdSdkxuUnZURzkzWlhKRFlYTmxLQ2tnS1NBL1hHNWNkRngwWEhSY2RGeDBiV0Z5YTBaMWJtTjBhVzl1S0NCbWRXNWpkR2x2YmlnZ2MyVmxaQ3dnYldGMFkyaGxjeUFwSUh0Y2JseDBYSFJjZEZ4MFhIUmNkSFpoY2lCcFpIZ3NYRzVjZEZ4MFhIUmNkRngwWEhSY2RHMWhkR05vWldRZ1BTQm1iaWdnYzJWbFpDd2dZWEpuZFcxbGJuUWdLU3hjYmx4MFhIUmNkRngwWEhSY2RGeDBhU0E5SUcxaGRHTm9aV1F1YkdWdVozUm9PMXh1WEhSY2RGeDBYSFJjZEZ4MGQyaHBiR1VnS0NCcExTMGdLU0I3WEc1Y2RGeDBYSFJjZEZ4MFhIUmNkR2xrZUNBOUlHbHVaR1Y0VDJZb0lITmxaV1FzSUcxaGRHTm9aV1JiSUdrZ1hTQXBPMXh1WEhSY2RGeDBYSFJjZEZ4MFhIUnpaV1ZrV3lCcFpIZ2dYU0E5SUNFb0lHMWhkR05vWlhOYklHbGtlQ0JkSUQwZ2JXRjBZMmhsWkZzZ2FTQmRJQ2s3WEc1Y2RGeDBYSFJjZEZ4MFhIUjlYRzVjZEZ4MFhIUmNkRngwZlNBcElEcGNibHgwWEhSY2RGeDBYSFJtZFc1amRHbHZiaWdnWld4bGJTQXBJSHRjYmx4MFhIUmNkRngwWEhSY2RISmxkSFZ5YmlCbWJpZ2daV3hsYlN3Z01Dd2dZWEpuY3lBcE8xeHVYSFJjZEZ4MFhIUmNkSDA3WEc1Y2RGeDBYSFI5WEc1Y2JseDBYSFJjZEhKbGRIVnliaUJtYmp0Y2JseDBYSFI5WEc1Y2RIMHNYRzVjYmx4MGNITmxkV1J2Y3pvZ2UxeHVYRzVjZEZ4MEx5OGdVRzkwWlc1MGFXRnNiSGtnWTI5dGNHeGxlQ0J3YzJWMVpHOXpYRzVjZEZ4MFhDSnViM1JjSWpvZ2JXRnlhMFoxYm1OMGFXOXVLQ0JtZFc1amRHbHZiaWdnYzJWc1pXTjBiM0lnS1NCN1hHNWNibHgwWEhSY2RDOHZJRlJ5YVcwZ2RHaGxJSE5sYkdWamRHOXlJSEJoYzNObFpDQjBieUJqYjIxd2FXeGxYRzVjZEZ4MFhIUXZMeUIwYnlCaGRtOXBaQ0IwY21WaGRHbHVaeUJzWldGa2FXNW5JR0Z1WkNCMGNtRnBiR2x1WjF4dVhIUmNkRngwTHk4Z2MzQmhZMlZ6SUdGeklHTnZiV0pwYm1GMGIzSnpYRzVjZEZ4MFhIUjJZWElnYVc1d2RYUWdQU0JiWFN4Y2JseDBYSFJjZEZ4MGNtVnpkV3gwY3lBOUlGdGRMRnh1WEhSY2RGeDBYSFJ0WVhSamFHVnlJRDBnWTI5dGNHbHNaU2dnYzJWc1pXTjBiM0l1Y21Wd2JHRmpaU2dnY25SeWFXMHNJRndpSkRGY0lpQXBJQ2s3WEc1Y2JseDBYSFJjZEhKbGRIVnliaUJ0WVhSamFHVnlXeUJsZUhCaGJtUnZJRjBnUDF4dVhIUmNkRngwWEhSdFlYSnJSblZ1WTNScGIyNG9JR1oxYm1OMGFXOXVLQ0J6WldWa0xDQnRZWFJqYUdWekxDQmZZMjl1ZEdWNGRDd2dlRzFzSUNrZ2UxeHVYSFJjZEZ4MFhIUmNkSFpoY2lCbGJHVnRMRnh1WEhSY2RGeDBYSFJjZEZ4MGRXNXRZWFJqYUdWa0lEMGdiV0YwWTJobGNpZ2djMlZsWkN3Z2JuVnNiQ3dnZUcxc0xDQmJYU0FwTEZ4dVhIUmNkRngwWEhSY2RGeDBhU0E5SUhObFpXUXViR1Z1WjNSb08xeHVYRzVjZEZ4MFhIUmNkRngwTHk4Z1RXRjBZMmdnWld4bGJXVnVkSE1nZFc1dFlYUmphR1ZrSUdKNUlHQnRZWFJqYUdWeVlGeHVYSFJjZEZ4MFhIUmNkSGRvYVd4bElDZ2dhUzB0SUNrZ2UxeHVYSFJjZEZ4MFhIUmNkRngwYVdZZ0tDQW9JR1ZzWlcwZ1BTQjFibTFoZEdOb1pXUmJJR2tnWFNBcElDa2dlMXh1WEhSY2RGeDBYSFJjZEZ4MFhIUnpaV1ZrV3lCcElGMGdQU0FoS0NCdFlYUmphR1Z6V3lCcElGMGdQU0JsYkdWdElDazdYRzVjZEZ4MFhIUmNkRngwWEhSOVhHNWNkRngwWEhSY2RGeDBmVnh1WEhSY2RGeDBYSFI5SUNrZ09seHVYSFJjZEZ4MFhIUm1kVzVqZEdsdmJpZ2daV3hsYlN3Z1gyTnZiblJsZUhRc0lIaHRiQ0FwSUh0Y2JseDBYSFJjZEZ4MFhIUnBibkIxZEZzZ01DQmRJRDBnWld4bGJUdGNibHgwWEhSY2RGeDBYSFJ0WVhSamFHVnlLQ0JwYm5CMWRDd2diblZzYkN3Z2VHMXNMQ0J5WlhOMWJIUnpJQ2s3WEc1Y2JseDBYSFJjZEZ4MFhIUXZMeUJFYjI0bmRDQnJaV1Z3SUhSb1pTQmxiR1Z0Wlc1MElDaHBjM04xWlNBak1qazVLVnh1WEhSY2RGeDBYSFJjZEdsdWNIVjBXeUF3SUYwZ1BTQnVkV3hzTzF4dVhIUmNkRngwWEhSY2RISmxkSFZ5YmlBaGNtVnpkV3gwY3k1d2IzQW9LVHRjYmx4MFhIUmNkRngwZlR0Y2JseDBYSFI5SUNrc1hHNWNibHgwWEhSY0ltaGhjMXdpT2lCdFlYSnJSblZ1WTNScGIyNG9JR1oxYm1OMGFXOXVLQ0J6Wld4bFkzUnZjaUFwSUh0Y2JseDBYSFJjZEhKbGRIVnliaUJtZFc1amRHbHZiaWdnWld4bGJTQXBJSHRjYmx4MFhIUmNkRngwY21WMGRYSnVJRk5wZW5wc1pTZ2djMlZzWldOMGIzSXNJR1ZzWlcwZ0tTNXNaVzVuZEdnZ1BpQXdPMXh1WEhSY2RGeDBmVHRjYmx4MFhIUjlJQ2tzWEc1Y2JseDBYSFJjSW1OdmJuUmhhVzV6WENJNklHMWhjbXRHZFc1amRHbHZiaWdnWm5WdVkzUnBiMjRvSUhSbGVIUWdLU0I3WEc1Y2RGeDBYSFIwWlhoMElEMGdkR1Y0ZEM1eVpYQnNZV05sS0NCeWRXNWxjMk5oY0dVc0lHWjFibVZ6WTJGd1pTQXBPMXh1WEhSY2RGeDBjbVYwZFhKdUlHWjFibU4wYVc5dUtDQmxiR1Z0SUNrZ2UxeHVYSFJjZEZ4MFhIUnlaWFIxY200Z0tDQmxiR1Z0TG5SbGVIUkRiMjUwWlc1MElIeDhJR2RsZEZSbGVIUW9JR1ZzWlcwZ0tTQXBMbWx1WkdWNFQyWW9JSFJsZUhRZ0tTQStJQzB4TzF4dVhIUmNkRngwZlR0Y2JseDBYSFI5SUNrc1hHNWNibHgwWEhRdkx5QmNJbGRvWlhSb1pYSWdZVzRnWld4bGJXVnVkQ0JwY3lCeVpYQnlaWE5sYm5SbFpDQmllU0JoSURwc1lXNW5LQ2tnYzJWc1pXTjBiM0pjYmx4MFhIUXZMeUJwY3lCaVlYTmxaQ0J6YjJ4bGJIa2diMjRnZEdobElHVnNaVzFsYm5RbmN5QnNZVzVuZFdGblpTQjJZV3gxWlZ4dVhIUmNkQzh2SUdKbGFXNW5JR1Z4ZFdGc0lIUnZJSFJvWlNCcFpHVnVkR2xtYVdWeUlFTXNYRzVjZEZ4MEx5OGdiM0lnWW1WbmFXNXVhVzVuSUhkcGRHZ2dkR2hsSUdsa1pXNTBhV1pwWlhJZ1F5QnBiVzFsWkdsaGRHVnNlU0JtYjJ4c2IzZGxaQ0JpZVNCY0lpMWNJaTVjYmx4MFhIUXZMeUJVYUdVZ2JXRjBZMmhwYm1jZ2IyWWdReUJoWjJGcGJuTjBJSFJvWlNCbGJHVnRaVzUwSjNNZ2JHRnVaM1ZoWjJVZ2RtRnNkV1VnYVhNZ2NHVnlabTl5YldWa0lHTmhjMlV0YVc1elpXNXphWFJwZG1Wc2VTNWNibHgwWEhRdkx5QlVhR1VnYVdSbGJuUnBabWxsY2lCRElHUnZaWE1nYm05MElHaGhkbVVnZEc4Z1ltVWdZU0IyWVd4cFpDQnNZVzVuZFdGblpTQnVZVzFsTGx3aVhHNWNkRngwTHk4Z2FIUjBjRG92TDNkM2R5NTNNeTV2Y21jdlZGSXZjMlZzWldOMGIzSnpMeU5zWVc1bkxYQnpaWFZrYjF4dVhIUmNkRndpYkdGdVoxd2lPaUJ0WVhKclJuVnVZM1JwYjI0b0lHWjFibU4wYVc5dUtDQnNZVzVuSUNrZ2UxeHVYRzVjZEZ4MFhIUXZMeUJzWVc1bklIWmhiSFZsSUcxMWMzUWdZbVVnWVNCMllXeHBaQ0JwWkdWdWRHbG1hV1Z5WEc1Y2RGeDBYSFJwWmlBb0lDRnlhV1JsYm5ScFptbGxjaTUwWlhOMEtDQnNZVzVuSUh4OElGd2lYQ0lnS1NBcElIdGNibHgwWEhSY2RGeDBVMmw2ZW14bExtVnljbTl5S0NCY0luVnVjM1Z3Y0c5eWRHVmtJR3hoYm1jNklGd2lJQ3NnYkdGdVp5QXBPMXh1WEhSY2RGeDBmVnh1WEhSY2RGeDBiR0Z1WnlBOUlHeGhibWN1Y21Wd2JHRmpaU2dnY25WdVpYTmpZWEJsTENCbWRXNWxjMk5oY0dVZ0tTNTBiMHh2ZDJWeVEyRnpaU2dwTzF4dVhIUmNkRngwY21WMGRYSnVJR1oxYm1OMGFXOXVLQ0JsYkdWdElDa2dlMXh1WEhSY2RGeDBYSFIyWVhJZ1pXeGxiVXhoYm1jN1hHNWNkRngwWEhSY2RHUnZJSHRjYmx4MFhIUmNkRngwWEhScFppQW9JQ2dnWld4bGJVeGhibWNnUFNCa2IyTjFiV1Z1ZEVselNGUk5UQ0EvWEc1Y2RGeDBYSFJjZEZ4MFhIUmxiR1Z0TG14aGJtY2dPbHh1WEhSY2RGeDBYSFJjZEZ4MFpXeGxiUzVuWlhSQmRIUnlhV0oxZEdVb0lGd2llRzFzT214aGJtZGNJaUFwSUh4OElHVnNaVzB1WjJWMFFYUjBjbWxpZFhSbEtDQmNJbXhoYm1kY0lpQXBJQ2tnS1NCN1hHNWNibHgwWEhSY2RGeDBYSFJjZEdWc1pXMU1ZVzVuSUQwZ1pXeGxiVXhoYm1jdWRHOU1iM2RsY2tOaGMyVW9LVHRjYmx4MFhIUmNkRngwWEhSY2RISmxkSFZ5YmlCbGJHVnRUR0Z1WnlBOVBUMGdiR0Z1WnlCOGZDQmxiR1Z0VEdGdVp5NXBibVJsZUU5bUtDQnNZVzVuSUNzZ1hDSXRYQ0lnS1NBOVBUMGdNRHRjYmx4MFhIUmNkRngwWEhSOVhHNWNkRngwWEhSY2RIMGdkMmhwYkdVZ0tDQW9JR1ZzWlcwZ1BTQmxiR1Z0TG5CaGNtVnVkRTV2WkdVZ0tTQW1KaUJsYkdWdExtNXZaR1ZVZVhCbElEMDlQU0F4SUNrN1hHNWNkRngwWEhSY2RISmxkSFZ5YmlCbVlXeHpaVHRjYmx4MFhIUmNkSDA3WEc1Y2RGeDBmU0FwTEZ4dVhHNWNkRngwTHk4Z1RXbHpZMlZzYkdGdVpXOTFjMXh1WEhSY2RGd2lkR0Z5WjJWMFhDSTZJR1oxYm1OMGFXOXVLQ0JsYkdWdElDa2dlMXh1WEhSY2RGeDBkbUZ5SUdoaGMyZ2dQU0IzYVc1a2IzY3ViRzlqWVhScGIyNGdKaVlnZDJsdVpHOTNMbXh2WTJGMGFXOXVMbWhoYzJnN1hHNWNkRngwWEhSeVpYUjFjbTRnYUdGemFDQW1KaUJvWVhOb0xuTnNhV05sS0NBeElDa2dQVDA5SUdWc1pXMHVhV1E3WEc1Y2RGeDBmU3hjYmx4dVhIUmNkRndpY205dmRGd2lPaUJtZFc1amRHbHZiaWdnWld4bGJTQXBJSHRjYmx4MFhIUmNkSEpsZEhWeWJpQmxiR1Z0SUQwOVBTQmtiMk5GYkdWdE8xeHVYSFJjZEgwc1hHNWNibHgwWEhSY0ltWnZZM1Z6WENJNklHWjFibU4wYVc5dUtDQmxiR1Z0SUNrZ2UxeHVYSFJjZEZ4MGNtVjBkWEp1SUdWc1pXMGdQVDA5SUdSdlkzVnRaVzUwTG1GamRHbDJaVVZzWlcxbGJuUWdKaVpjYmx4MFhIUmNkRngwS0NBaFpHOWpkVzFsYm5RdWFHRnpSbTlqZFhNZ2ZId2daRzlqZFcxbGJuUXVhR0Z6Um05amRYTW9LU0FwSUNZbVhHNWNkRngwWEhSY2RDRWhLQ0JsYkdWdExuUjVjR1VnZkh3Z1pXeGxiUzVvY21WbUlIeDhJSDVsYkdWdExuUmhZa2x1WkdWNElDazdYRzVjZEZ4MGZTeGNibHh1WEhSY2RDOHZJRUp2YjJ4bFlXNGdjSEp2Y0dWeWRHbGxjMXh1WEhSY2RGd2laVzVoWW14bFpGd2lPaUJqY21WaGRHVkVhWE5oWW14bFpGQnpaWFZrYnlnZ1ptRnNjMlVnS1N4Y2JseDBYSFJjSW1ScGMyRmliR1ZrWENJNklHTnlaV0YwWlVScGMyRmliR1ZrVUhObGRXUnZLQ0IwY25WbElDa3NYRzVjYmx4MFhIUmNJbU5vWldOclpXUmNJam9nWm5WdVkzUnBiMjRvSUdWc1pXMGdLU0I3WEc1Y2JseDBYSFJjZEM4dklFbHVJRU5UVXpNc0lEcGphR1ZqYTJWa0lITm9iM1ZzWkNCeVpYUjFjbTRnWW05MGFDQmphR1ZqYTJWa0lHRnVaQ0J6Wld4bFkzUmxaQ0JsYkdWdFpXNTBjMXh1WEhSY2RGeDBMeThnYUhSMGNEb3ZMM2QzZHk1M015NXZjbWN2VkZJdk1qQXhNUzlTUlVNdFkzTnpNeTF6Wld4bFkzUnZjbk10TWpBeE1UQTVNamt2STJOb1pXTnJaV1JjYmx4MFhIUmNkSFpoY2lCdWIyUmxUbUZ0WlNBOUlHVnNaVzB1Ym05a1pVNWhiV1V1ZEc5TWIzZGxja05oYzJVb0tUdGNibHgwWEhSY2RISmxkSFZ5YmlBb0lHNXZaR1ZPWVcxbElEMDlQU0JjSW1sdWNIVjBYQ0lnSmlZZ0lTRmxiR1Z0TG1Ob1pXTnJaV1FnS1NCOGZGeHVYSFJjZEZ4MFhIUW9JRzV2WkdWT1lXMWxJRDA5UFNCY0ltOXdkR2x2Ymx3aUlDWW1JQ0VoWld4bGJTNXpaV3hsWTNSbFpDQXBPMXh1WEhSY2RIMHNYRzVjYmx4MFhIUmNJbk5sYkdWamRHVmtYQ0k2SUdaMWJtTjBhVzl1S0NCbGJHVnRJQ2tnZTF4dVhHNWNkRngwWEhRdkx5QkJZMk5sYzNOcGJtY2dkR2hwY3lCd2NtOXdaWEowZVNCdFlXdGxjeUJ6Wld4bFkzUmxaQzFpZVMxa1pXWmhkV3gwWEc1Y2RGeDBYSFF2THlCdmNIUnBiMjV6SUdsdUlGTmhabUZ5YVNCM2IzSnJJSEJ5YjNCbGNteDVYRzVjZEZ4MFhIUnBaaUFvSUdWc1pXMHVjR0Z5Wlc1MFRtOWtaU0FwSUh0Y2JseDBYSFJjZEZ4MEx5OGdaWE5zYVc1MExXUnBjMkZpYkdVdGJtVjRkQzFzYVc1bElHNXZMWFZ1ZFhObFpDMWxlSEJ5WlhOemFXOXVjMXh1WEhSY2RGeDBYSFJsYkdWdExuQmhjbVZ1ZEU1dlpHVXVjMlZzWldOMFpXUkpibVJsZUR0Y2JseDBYSFJjZEgxY2JseHVYSFJjZEZ4MGNtVjBkWEp1SUdWc1pXMHVjMlZzWldOMFpXUWdQVDA5SUhSeWRXVTdYRzVjZEZ4MGZTeGNibHh1WEhSY2RDOHZJRU52Ym5SbGJuUnpYRzVjZEZ4MFhDSmxiWEIwZVZ3aU9pQm1kVzVqZEdsdmJpZ2daV3hsYlNBcElIdGNibHh1WEhSY2RGeDBMeThnYUhSMGNEb3ZMM2QzZHk1M015NXZjbWN2VkZJdmMyVnNaV04wYjNKekx5TmxiWEIwZVMxd2MyVjFaRzljYmx4MFhIUmNkQzh2SURwbGJYQjBlU0JwY3lCdVpXZGhkR1ZrSUdKNUlHVnNaVzFsYm5RZ0tERXBJRzl5SUdOdmJuUmxiblFnYm05a1pYTWdLSFJsZUhRNklETTdJR05rWVhSaE9pQTBPeUJsYm5ScGRIa2djbVZtT2lBMUtTeGNibHgwWEhSY2RDOHZJQ0FnWW5WMElHNXZkQ0JpZVNCdmRHaGxjbk1nS0dOdmJXMWxiblE2SURnN0lIQnliMk5sYzNOcGJtY2dhVzV6ZEhKMVkzUnBiMjQ2SURjN0lHVjBZeTRwWEc1Y2RGeDBYSFF2THlCdWIyUmxWSGx3WlNBOElEWWdkMjl5YTNNZ1ltVmpZWFZ6WlNCaGRIUnlhV0oxZEdWeklDZ3lLU0JrYnlCdWIzUWdZWEJ3WldGeUlHRnpJR05vYVd4a2NtVnVYRzVjZEZ4MFhIUm1iM0lnS0NCbGJHVnRJRDBnWld4bGJTNW1hWEp6ZEVOb2FXeGtPeUJsYkdWdE95QmxiR1Z0SUQwZ1pXeGxiUzV1WlhoMFUybGliR2x1WnlBcElIdGNibHgwWEhSY2RGeDBhV1lnS0NCbGJHVnRMbTV2WkdWVWVYQmxJRHdnTmlBcElIdGNibHgwWEhSY2RGeDBYSFJ5WlhSMWNtNGdabUZzYzJVN1hHNWNkRngwWEhSY2RIMWNibHgwWEhSY2RIMWNibHgwWEhSY2RISmxkSFZ5YmlCMGNuVmxPMXh1WEhSY2RIMHNYRzVjYmx4MFhIUmNJbkJoY21WdWRGd2lPaUJtZFc1amRHbHZiaWdnWld4bGJTQXBJSHRjYmx4MFhIUmNkSEpsZEhWeWJpQWhSWGh3Y2k1d2MyVjFaRzl6V3lCY0ltVnRjSFI1WENJZ1hTZ2daV3hsYlNBcE8xeHVYSFJjZEgwc1hHNWNibHgwWEhRdkx5QkZiR1Z0Wlc1MEwybHVjSFYwSUhSNWNHVnpYRzVjZEZ4MFhDSm9aV0ZrWlhKY0lqb2dablZ1WTNScGIyNG9JR1ZzWlcwZ0tTQjdYRzVjZEZ4MFhIUnlaWFIxY200Z2NtaGxZV1JsY2k1MFpYTjBLQ0JsYkdWdExtNXZaR1ZPWVcxbElDazdYRzVjZEZ4MGZTeGNibHh1WEhSY2RGd2lhVzV3ZFhSY0lqb2dablZ1WTNScGIyNG9JR1ZzWlcwZ0tTQjdYRzVjZEZ4MFhIUnlaWFIxY200Z2NtbHVjSFYwY3k1MFpYTjBLQ0JsYkdWdExtNXZaR1ZPWVcxbElDazdYRzVjZEZ4MGZTeGNibHh1WEhSY2RGd2lZblYwZEc5dVhDSTZJR1oxYm1OMGFXOXVLQ0JsYkdWdElDa2dlMXh1WEhSY2RGeDBkbUZ5SUc1aGJXVWdQU0JsYkdWdExtNXZaR1ZPWVcxbExuUnZURzkzWlhKRFlYTmxLQ2s3WEc1Y2RGeDBYSFJ5WlhSMWNtNGdibUZ0WlNBOVBUMGdYQ0pwYm5CMWRGd2lJQ1ltSUdWc1pXMHVkSGx3WlNBOVBUMGdYQ0ppZFhSMGIyNWNJaUI4ZkNCdVlXMWxJRDA5UFNCY0ltSjFkSFJ2Ymx3aU8xeHVYSFJjZEgwc1hHNWNibHgwWEhSY0luUmxlSFJjSWpvZ1puVnVZM1JwYjI0b0lHVnNaVzBnS1NCN1hHNWNkRngwWEhSMllYSWdZWFIwY2p0Y2JseDBYSFJjZEhKbGRIVnliaUJsYkdWdExtNXZaR1ZPWVcxbExuUnZURzkzWlhKRFlYTmxLQ2tnUFQwOUlGd2lhVzV3ZFhSY0lpQW1KbHh1WEhSY2RGeDBYSFJsYkdWdExuUjVjR1VnUFQwOUlGd2lkR1Y0ZEZ3aUlDWW1YRzVjYmx4MFhIUmNkRngwTHk4Z1UzVndjRzl5ZERvZ1NVVWdQREV3SUc5dWJIbGNibHgwWEhSY2RGeDBMeThnVG1WM0lFaFVUVXcxSUdGMGRISnBZblYwWlNCMllXeDFaWE1nS0dVdVp5NHNJRndpYzJWaGNtTm9YQ0lwSUdGd2NHVmhjaUIzYVhSb0lHVnNaVzB1ZEhsd1pTQTlQVDBnWENKMFpYaDBYQ0pjYmx4MFhIUmNkRngwS0NBb0lHRjBkSElnUFNCbGJHVnRMbWRsZEVGMGRISnBZblYwWlNnZ1hDSjBlWEJsWENJZ0tTQXBJRDA5SUc1MWJHd2dmSHhjYmx4MFhIUmNkRngwWEhSaGRIUnlMblJ2VEc5M1pYSkRZWE5sS0NrZ1BUMDlJRndpZEdWNGRGd2lJQ2s3WEc1Y2RGeDBmU3hjYmx4dVhIUmNkQzh2SUZCdmMybDBhVzl1TFdsdUxXTnZiR3hsWTNScGIyNWNibHgwWEhSY0ltWnBjbk4wWENJNklHTnlaV0YwWlZCdmMybDBhVzl1WVd4UWMyVjFaRzhvSUdaMWJtTjBhVzl1S0NrZ2UxeHVYSFJjZEZ4MGNtVjBkWEp1SUZzZ01DQmRPMXh1WEhSY2RIMGdLU3hjYmx4dVhIUmNkRndpYkdGemRGd2lPaUJqY21WaGRHVlFiM05wZEdsdmJtRnNVSE5sZFdSdktDQm1kVzVqZEdsdmJpZ2dYMjFoZEdOb1NXNWtaWGhsY3l3Z2JHVnVaM1JvSUNrZ2UxeHVYSFJjZEZ4MGNtVjBkWEp1SUZzZ2JHVnVaM1JvSUMwZ01TQmRPMXh1WEhSY2RIMGdLU3hjYmx4dVhIUmNkRndpWlhGY0lqb2dZM0psWVhSbFVHOXphWFJwYjI1aGJGQnpaWFZrYnlnZ1puVnVZM1JwYjI0b0lGOXRZWFJqYUVsdVpHVjRaWE1zSUd4bGJtZDBhQ3dnWVhKbmRXMWxiblFnS1NCN1hHNWNkRngwWEhSeVpYUjFjbTRnV3lCaGNtZDFiV1Z1ZENBOElEQWdQeUJoY21kMWJXVnVkQ0FySUd4bGJtZDBhQ0E2SUdGeVozVnRaVzUwSUYwN1hHNWNkRngwZlNBcExGeHVYRzVjZEZ4MFhDSmxkbVZ1WENJNklHTnlaV0YwWlZCdmMybDBhVzl1WVd4UWMyVjFaRzhvSUdaMWJtTjBhVzl1S0NCdFlYUmphRWx1WkdWNFpYTXNJR3hsYm1kMGFDQXBJSHRjYmx4MFhIUmNkSFpoY2lCcElEMGdNRHRjYmx4MFhIUmNkR1p2Y2lBb0lEc2dhU0E4SUd4bGJtZDBhRHNnYVNBclBTQXlJQ2tnZTF4dVhIUmNkRngwWEhSdFlYUmphRWx1WkdWNFpYTXVjSFZ6YUNnZ2FTQXBPMXh1WEhSY2RGeDBmVnh1WEhSY2RGeDBjbVYwZFhKdUlHMWhkR05vU1c1a1pYaGxjenRjYmx4MFhIUjlJQ2tzWEc1Y2JseDBYSFJjSW05a1pGd2lPaUJqY21WaGRHVlFiM05wZEdsdmJtRnNVSE5sZFdSdktDQm1kVzVqZEdsdmJpZ2diV0YwWTJoSmJtUmxlR1Z6TENCc1pXNW5kR2dnS1NCN1hHNWNkRngwWEhSMllYSWdhU0E5SURFN1hHNWNkRngwWEhSbWIzSWdLQ0E3SUdrZ1BDQnNaVzVuZEdnN0lHa2dLejBnTWlBcElIdGNibHgwWEhSY2RGeDBiV0YwWTJoSmJtUmxlR1Z6TG5CMWMyZ29JR2tnS1R0Y2JseDBYSFJjZEgxY2JseDBYSFJjZEhKbGRIVnliaUJ0WVhSamFFbHVaR1Y0WlhNN1hHNWNkRngwZlNBcExGeHVYRzVjZEZ4MFhDSnNkRndpT2lCamNtVmhkR1ZRYjNOcGRHbHZibUZzVUhObGRXUnZLQ0JtZFc1amRHbHZiaWdnYldGMFkyaEpibVJsZUdWekxDQnNaVzVuZEdnc0lHRnlaM1Z0Wlc1MElDa2dlMXh1WEhSY2RGeDBkbUZ5SUdrZ1BTQmhjbWQxYldWdWRDQThJREFnUDF4dVhIUmNkRngwWEhSaGNtZDFiV1Z1ZENBcklHeGxibWQwYUNBNlhHNWNkRngwWEhSY2RHRnlaM1Z0Wlc1MElENGdiR1Z1WjNSb0lEOWNibHgwWEhSY2RGeDBYSFJzWlc1bmRHZ2dPbHh1WEhSY2RGeDBYSFJjZEdGeVozVnRaVzUwTzF4dVhIUmNkRngwWm05eUlDZ2dPeUF0TFdrZ1BqMGdNRHNnS1NCN1hHNWNkRngwWEhSY2RHMWhkR05vU1c1a1pYaGxjeTV3ZFhOb0tDQnBJQ2s3WEc1Y2RGeDBYSFI5WEc1Y2RGeDBYSFJ5WlhSMWNtNGdiV0YwWTJoSmJtUmxlR1Z6TzF4dVhIUmNkSDBnS1N4Y2JseHVYSFJjZEZ3aVozUmNJam9nWTNKbFlYUmxVRzl6YVhScGIyNWhiRkJ6WlhWa2J5Z2dablZ1WTNScGIyNG9JRzFoZEdOb1NXNWtaWGhsY3l3Z2JHVnVaM1JvTENCaGNtZDFiV1Z1ZENBcElIdGNibHgwWEhSY2RIWmhjaUJwSUQwZ1lYSm5kVzFsYm5RZ1BDQXdJRDhnWVhKbmRXMWxiblFnS3lCc1pXNW5kR2dnT2lCaGNtZDFiV1Z1ZER0Y2JseDBYSFJjZEdadmNpQW9JRHNnS3l0cElEd2diR1Z1WjNSb095QXBJSHRjYmx4MFhIUmNkRngwYldGMFkyaEpibVJsZUdWekxuQjFjMmdvSUdrZ0tUdGNibHgwWEhSY2RIMWNibHgwWEhSY2RISmxkSFZ5YmlCdFlYUmphRWx1WkdWNFpYTTdYRzVjZEZ4MGZTQXBYRzVjZEgxY2JuMDdYRzVjYmtWNGNISXVjSE5sZFdSdmMxc2dYQ0p1ZEdoY0lpQmRJRDBnUlhod2NpNXdjMlYxWkc5eld5QmNJbVZ4WENJZ1hUdGNibHh1THk4Z1FXUmtJR0oxZEhSdmJpOXBibkIxZENCMGVYQmxJSEJ6WlhWa2IzTmNibVp2Y2lBb0lHa2dhVzRnZXlCeVlXUnBiem9nZEhKMVpTd2dZMmhsWTJ0aWIzZzZJSFJ5ZFdVc0lHWnBiR1U2SUhSeWRXVXNJSEJoYzNOM2IzSmtPaUIwY25WbExDQnBiV0ZuWlRvZ2RISjFaU0I5SUNrZ2UxeHVYSFJGZUhCeUxuQnpaWFZrYjNOYklHa2dYU0E5SUdOeVpXRjBaVWx1Y0hWMFVITmxkV1J2S0NCcElDazdYRzU5WEc1bWIzSWdLQ0JwSUdsdUlIc2djM1ZpYldsME9pQjBjblZsTENCeVpYTmxkRG9nZEhKMVpTQjlJQ2tnZTF4dVhIUkZlSEJ5TG5CelpYVmtiM05iSUdrZ1hTQTlJR055WldGMFpVSjFkSFJ2YmxCelpYVmtieWdnYVNBcE8xeHVmVnh1WEc0dkx5QkZZWE41SUVGUVNTQm1iM0lnWTNKbFlYUnBibWNnYm1WM0lITmxkRVpwYkhSbGNuTmNibVoxYm1OMGFXOXVJSE5sZEVacGJIUmxjbk1vS1NCN2ZWeHVjMlYwUm1sc2RHVnljeTV3Y205MGIzUjVjR1VnUFNCRmVIQnlMbVpwYkhSbGNuTWdQU0JGZUhCeUxuQnpaWFZrYjNNN1hHNUZlSEJ5TG5ObGRFWnBiSFJsY25NZ1BTQnVaWGNnYzJWMFJtbHNkR1Z5Y3lncE8xeHVYRzUwYjJ0bGJtbDZaU0E5SUZOcGVucHNaUzUwYjJ0bGJtbDZaU0E5SUdaMWJtTjBhVzl1S0NCelpXeGxZM1J2Y2l3Z2NHRnljMlZQYm14NUlDa2dlMXh1WEhSMllYSWdiV0YwWTJobFpDd2diV0YwWTJnc0lIUnZhMlZ1Y3l3Z2RIbHdaU3hjYmx4MFhIUnpiMFpoY2l3Z1ozSnZkWEJ6TENCd2NtVkdhV3gwWlhKekxGeHVYSFJjZEdOaFkyaGxaQ0E5SUhSdmEyVnVRMkZqYUdWYklITmxiR1ZqZEc5eUlDc2dYQ0lnWENJZ1hUdGNibHh1WEhScFppQW9JR05oWTJobFpDQXBJSHRjYmx4MFhIUnlaWFIxY200Z2NHRnljMlZQYm14NUlEOGdNQ0E2SUdOaFkyaGxaQzV6YkdsalpTZ2dNQ0FwTzF4dVhIUjlYRzVjYmx4MGMyOUdZWElnUFNCelpXeGxZM1J2Y2p0Y2JseDBaM0p2ZFhCeklEMGdXMTA3WEc1Y2RIQnlaVVpwYkhSbGNuTWdQU0JGZUhCeUxuQnlaVVpwYkhSbGNqdGNibHh1WEhSM2FHbHNaU0FvSUhOdlJtRnlJQ2tnZTF4dVhHNWNkRngwTHk4Z1EyOXRiV0VnWVc1a0lHWnBjbk4wSUhKMWJseHVYSFJjZEdsbUlDZ2dJVzFoZEdOb1pXUWdmSHdnS0NCdFlYUmphQ0E5SUhKamIyMXRZUzVsZUdWaktDQnpiMFpoY2lBcElDa2dLU0I3WEc1Y2RGeDBYSFJwWmlBb0lHMWhkR05vSUNrZ2UxeHVYRzVjZEZ4MFhIUmNkQzh2SUVSdmJpZDBJR052Ym5OMWJXVWdkSEpoYVd4cGJtY2dZMjl0YldGeklHRnpJSFpoYkdsa1hHNWNkRngwWEhSY2RITnZSbUZ5SUQwZ2MyOUdZWEl1YzJ4cFkyVW9JRzFoZEdOb1d5QXdJRjB1YkdWdVozUm9JQ2tnZkh3Z2MyOUdZWEk3WEc1Y2RGeDBYSFI5WEc1Y2RGeDBYSFJuY205MWNITXVjSFZ6YUNnZ0tDQjBiMnRsYm5NZ1BTQmJYU0FwSUNrN1hHNWNkRngwZlZ4dVhHNWNkRngwYldGMFkyaGxaQ0E5SUdaaGJITmxPMXh1WEc1Y2RGeDBMeThnUTI5dFltbHVZWFJ2Y25OY2JseDBYSFJwWmlBb0lDZ2diV0YwWTJnZ1BTQnlZMjl0WW1sdVlYUnZjbk11WlhobFl5Z2djMjlHWVhJZ0tTQXBJQ2tnZTF4dVhIUmNkRngwYldGMFkyaGxaQ0E5SUcxaGRHTm9Mbk5vYVdaMEtDazdYRzVjZEZ4MFhIUjBiMnRsYm5NdWNIVnphQ2dnZTF4dVhIUmNkRngwWEhSMllXeDFaVG9nYldGMFkyaGxaQ3hjYmx4dVhIUmNkRngwWEhRdkx5QkRZWE4wSUdSbGMyTmxibVJoYm5RZ1kyOXRZbWx1WVhSdmNuTWdkRzhnYzNCaFkyVmNibHgwWEhSY2RGeDBkSGx3WlRvZ2JXRjBZMmhiSURBZ1hTNXlaWEJzWVdObEtDQnlkSEpwYlN3Z1hDSWdYQ0lnS1Z4dVhIUmNkRngwZlNBcE8xeHVYSFJjZEZ4MGMyOUdZWElnUFNCemIwWmhjaTV6YkdsalpTZ2diV0YwWTJobFpDNXNaVzVuZEdnZ0tUdGNibHgwWEhSOVhHNWNibHgwWEhRdkx5QkdhV3gwWlhKelhHNWNkRngwWm05eUlDZ2dkSGx3WlNCcGJpQkZlSEJ5TG1acGJIUmxjaUFwSUh0Y2JseDBYSFJjZEdsbUlDZ2dLQ0J0WVhSamFDQTlJRzFoZEdOb1JYaHdjbHNnZEhsd1pTQmRMbVY0WldNb0lITnZSbUZ5SUNrZ0tTQW1KaUFvSUNGd2NtVkdhV3gwWlhKeld5QjBlWEJsSUYwZ2ZIeGNibHgwWEhSY2RGeDBLQ0J0WVhSamFDQTlJSEJ5WlVacGJIUmxjbk5iSUhSNWNHVWdYU2dnYldGMFkyZ2dLU0FwSUNrZ0tTQjdYRzVjZEZ4MFhIUmNkRzFoZEdOb1pXUWdQU0J0WVhSamFDNXphR2xtZENncE8xeHVYSFJjZEZ4MFhIUjBiMnRsYm5NdWNIVnphQ2dnZTF4dVhIUmNkRngwWEhSY2RIWmhiSFZsT2lCdFlYUmphR1ZrTEZ4dVhIUmNkRngwWEhSY2RIUjVjR1U2SUhSNWNHVXNYRzVjZEZ4MFhIUmNkRngwYldGMFkyaGxjem9nYldGMFkyaGNibHgwWEhSY2RGeDBmU0FwTzF4dVhIUmNkRngwWEhSemIwWmhjaUE5SUhOdlJtRnlMbk5zYVdObEtDQnRZWFJqYUdWa0xteGxibWQwYUNBcE8xeHVYSFJjZEZ4MGZWeHVYSFJjZEgxY2JseHVYSFJjZEdsbUlDZ2dJVzFoZEdOb1pXUWdLU0I3WEc1Y2RGeDBYSFJpY21WaGF6dGNibHgwWEhSOVhHNWNkSDFjYmx4dVhIUXZMeUJTWlhSMWNtNGdkR2hsSUd4bGJtZDBhQ0J2WmlCMGFHVWdhVzUyWVd4cFpDQmxlR05sYzNOY2JseDBMeThnYVdZZ2QyVW5jbVVnYW5WemRDQndZWEp6YVc1blhHNWNkQzh2SUU5MGFHVnlkMmx6WlN3Z2RHaHliM2NnWVc0Z1pYSnliM0lnYjNJZ2NtVjBkWEp1SUhSdmEyVnVjMXh1WEhSeVpYUjFjbTRnY0dGeWMyVlBibXg1SUQ5Y2JseDBYSFJ6YjBaaGNpNXNaVzVuZEdnZ09seHVYSFJjZEhOdlJtRnlJRDljYmx4MFhIUmNkRk5wZW5wc1pTNWxjbkp2Y2lnZ2MyVnNaV04wYjNJZ0tTQTZYRzVjYmx4MFhIUmNkQzh2SUVOaFkyaGxJSFJvWlNCMGIydGxibk5jYmx4MFhIUmNkSFJ2YTJWdVEyRmphR1VvSUhObGJHVmpkRzl5TENCbmNtOTFjSE1nS1M1emJHbGpaU2dnTUNBcE8xeHVmVHRjYmx4dVpuVnVZM1JwYjI0Z2RHOVRaV3hsWTNSdmNpZ2dkRzlyWlc1eklDa2dlMXh1WEhSMllYSWdhU0E5SURBc1hHNWNkRngwYkdWdUlEMGdkRzlyWlc1ekxteGxibWQwYUN4Y2JseDBYSFJ6Wld4bFkzUnZjaUE5SUZ3aVhDSTdYRzVjZEdadmNpQW9JRHNnYVNBOElHeGxianNnYVNzcklDa2dlMXh1WEhSY2RITmxiR1ZqZEc5eUlDczlJSFJ2YTJWdWMxc2dhU0JkTG5aaGJIVmxPMXh1WEhSOVhHNWNkSEpsZEhWeWJpQnpaV3hsWTNSdmNqdGNibjFjYmx4dVpuVnVZM1JwYjI0Z1lXUmtRMjl0WW1sdVlYUnZjaWdnYldGMFkyaGxjaXdnWTI5dFltbHVZWFJ2Y2l3Z1ltRnpaU0FwSUh0Y2JseDBkbUZ5SUdScGNpQTlJR052YldKcGJtRjBiM0l1WkdseUxGeHVYSFJjZEhOcmFYQWdQU0JqYjIxaWFXNWhkRzl5TG01bGVIUXNYRzVjZEZ4MGEyVjVJRDBnYzJ0cGNDQjhmQ0JrYVhJc1hHNWNkRngwWTJobFkydE9iMjVGYkdWdFpXNTBjeUE5SUdKaGMyVWdKaVlnYTJWNUlEMDlQU0JjSW5CaGNtVnVkRTV2WkdWY0lpeGNibHgwWEhSa2IyNWxUbUZ0WlNBOUlHUnZibVVyS3p0Y2JseHVYSFJ5WlhSMWNtNGdZMjl0WW1sdVlYUnZjaTVtYVhKemRDQS9YRzVjYmx4MFhIUXZMeUJEYUdWamF5QmhaMkZwYm5OMElHTnNiM05sYzNRZ1lXNWpaWE4wYjNJdmNISmxZMlZrYVc1bklHVnNaVzFsYm5SY2JseDBYSFJtZFc1amRHbHZiaWdnWld4bGJTd2dZMjl1ZEdWNGRDd2dlRzFzSUNrZ2UxeHVYSFJjZEZ4MGQyaHBiR1VnS0NBb0lHVnNaVzBnUFNCbGJHVnRXeUJrYVhJZ1hTQXBJQ2tnZTF4dVhIUmNkRngwWEhScFppQW9JR1ZzWlcwdWJtOWtaVlI1Y0dVZ1BUMDlJREVnZkh3Z1kyaGxZMnRPYjI1RmJHVnRaVzUwY3lBcElIdGNibHgwWEhSY2RGeDBYSFJ5WlhSMWNtNGdiV0YwWTJobGNpZ2daV3hsYlN3Z1kyOXVkR1Y0ZEN3Z2VHMXNJQ2s3WEc1Y2RGeDBYSFJjZEgxY2JseDBYSFJjZEgxY2JseDBYSFJjZEhKbGRIVnliaUJtWVd4elpUdGNibHgwWEhSOUlEcGNibHh1WEhSY2RDOHZJRU5vWldOcklHRm5ZV2x1YzNRZ1lXeHNJR0Z1WTJWemRHOXlMM0J5WldObFpHbHVaeUJsYkdWdFpXNTBjMXh1WEhSY2RHWjFibU4wYVc5dUtDQmxiR1Z0TENCamIyNTBaWGgwTENCNGJXd2dLU0I3WEc1Y2RGeDBYSFIyWVhJZ2IyeGtRMkZqYUdVc0lIVnVhWEYxWlVOaFkyaGxMQ0J2ZFhSbGNrTmhZMmhsTEZ4dVhIUmNkRngwWEhSdVpYZERZV05vWlNBOUlGc2daR2x5Y25WdWN5d2daRzl1WlU1aGJXVWdYVHRjYmx4dVhIUmNkRngwTHk4Z1YyVWdZMkZ1SjNRZ2MyVjBJR0Z5WW1sMGNtRnllU0JrWVhSaElHOXVJRmhOVENCdWIyUmxjeXdnYzI4Z2RHaGxlU0JrYjI0bmRDQmlaVzVsWm1sMElHWnliMjBnWTI5dFltbHVZWFJ2Y2lCallXTm9hVzVuWEc1Y2RGeDBYSFJwWmlBb0lIaHRiQ0FwSUh0Y2JseDBYSFJjZEZ4MGQyaHBiR1VnS0NBb0lHVnNaVzBnUFNCbGJHVnRXeUJrYVhJZ1hTQXBJQ2tnZTF4dVhIUmNkRngwWEhSY2RHbG1JQ2dnWld4bGJTNXViMlJsVkhsd1pTQTlQVDBnTVNCOGZDQmphR1ZqYTA1dmJrVnNaVzFsYm5SeklDa2dlMXh1WEhSY2RGeDBYSFJjZEZ4MGFXWWdLQ0J0WVhSamFHVnlLQ0JsYkdWdExDQmpiMjUwWlhoMExDQjRiV3dnS1NBcElIdGNibHgwWEhSY2RGeDBYSFJjZEZ4MGNtVjBkWEp1SUhSeWRXVTdYRzVjZEZ4MFhIUmNkRngwWEhSOVhHNWNkRngwWEhSY2RGeDBmVnh1WEhSY2RGeDBYSFI5WEc1Y2RGeDBYSFI5SUdWc2MyVWdlMXh1WEhSY2RGeDBYSFIzYUdsc1pTQW9JQ2dnWld4bGJTQTlJR1ZzWlcxYklHUnBjaUJkSUNrZ0tTQjdYRzVjZEZ4MFhIUmNkRngwYVdZZ0tDQmxiR1Z0TG01dlpHVlVlWEJsSUQwOVBTQXhJSHg4SUdOb1pXTnJUbTl1Uld4bGJXVnVkSE1nS1NCN1hHNWNkRngwWEhSY2RGeDBYSFJ2ZFhSbGNrTmhZMmhsSUQwZ1pXeGxiVnNnWlhod1lXNWtieUJkSUh4OElDZ2daV3hsYlZzZ1pYaHdZVzVrYnlCZElEMGdlMzBnS1R0Y2JseHVYSFJjZEZ4MFhIUmNkRngwTHk4Z1UzVndjRzl5ZERvZ1NVVWdQRGtnYjI1c2VWeHVYSFJjZEZ4MFhIUmNkRngwTHk4Z1JHVm1aVzVrSUdGbllXbHVjM1FnWTJ4dmJtVmtJR0YwZEhKdmNHVnlkR2xsY3lBb2FsRjFaWEo1SUdkb0xURTNNRGtwWEc1Y2RGeDBYSFJjZEZ4MFhIUjFibWx4ZFdWRFlXTm9aU0E5SUc5MWRHVnlRMkZqYUdWYklHVnNaVzB1ZFc1cGNYVmxTVVFnWFNCOGZGeHVYSFJjZEZ4MFhIUmNkRngwWEhRb0lHOTFkR1Z5UTJGamFHVmJJR1ZzWlcwdWRXNXBjWFZsU1VRZ1hTQTlJSHQ5SUNrN1hHNWNibHgwWEhSY2RGeDBYSFJjZEdsbUlDZ2djMnRwY0NBbUppQnphMmx3SUQwOVBTQmxiR1Z0TG01dlpHVk9ZVzFsTG5SdlRHOTNaWEpEWVhObEtDa2dLU0I3WEc1Y2RGeDBYSFJjZEZ4MFhIUmNkR1ZzWlcwZ1BTQmxiR1Z0V3lCa2FYSWdYU0I4ZkNCbGJHVnRPMXh1WEhSY2RGeDBYSFJjZEZ4MGZTQmxiSE5sSUdsbUlDZ2dLQ0J2YkdSRFlXTm9aU0E5SUhWdWFYRjFaVU5oWTJobFd5QnJaWGtnWFNBcElDWW1YRzVjZEZ4MFhIUmNkRngwWEhSY2RHOXNaRU5oWTJobFd5QXdJRjBnUFQwOUlHUnBjbkoxYm5NZ0ppWWdiMnhrUTJGamFHVmJJREVnWFNBOVBUMGdaRzl1WlU1aGJXVWdLU0I3WEc1Y2JseDBYSFJjZEZ4MFhIUmNkRngwTHk4Z1FYTnphV2R1SUhSdklHNWxkME5oWTJobElITnZJSEpsYzNWc2RITWdZbUZqYXkxd2NtOXdZV2RoZEdVZ2RHOGdjSEpsZG1sdmRYTWdaV3hsYldWdWRITmNibHgwWEhSY2RGeDBYSFJjZEZ4MGNtVjBkWEp1SUNnZ2JtVjNRMkZqYUdWYklESWdYU0E5SUc5c1pFTmhZMmhsV3lBeUlGMGdLVHRjYmx4MFhIUmNkRngwWEhSY2RIMGdaV3h6WlNCN1hHNWNibHgwWEhSY2RGeDBYSFJjZEZ4MEx5OGdVbVYxYzJVZ2JtVjNZMkZqYUdVZ2MyOGdjbVZ6ZFd4MGN5QmlZV05yTFhCeWIzQmhaMkYwWlNCMGJ5QndjbVYyYVc5MWN5QmxiR1Z0Wlc1MGMxeHVYSFJjZEZ4MFhIUmNkRngwWEhSMWJtbHhkV1ZEWVdOb1pWc2dhMlY1SUYwZ1BTQnVaWGREWVdOb1pUdGNibHh1WEhSY2RGeDBYSFJjZEZ4MFhIUXZMeUJCSUcxaGRHTm9JRzFsWVc1eklIZGxKM0psSUdSdmJtVTdJR0VnWm1GcGJDQnRaV0Z1Y3lCM1pTQm9ZWFpsSUhSdklHdGxaWEFnWTJobFkydHBibWRjYmx4MFhIUmNkRngwWEhSY2RGeDBhV1lnS0NBb0lHNWxkME5oWTJobFd5QXlJRjBnUFNCdFlYUmphR1Z5S0NCbGJHVnRMQ0JqYjI1MFpYaDBMQ0I0Yld3Z0tTQXBJQ2tnZTF4dVhIUmNkRngwWEhSY2RGeDBYSFJjZEhKbGRIVnliaUIwY25WbE8xeHVYSFJjZEZ4MFhIUmNkRngwWEhSOVhHNWNkRngwWEhSY2RGeDBYSFI5WEc1Y2RGeDBYSFJjZEZ4MGZWeHVYSFJjZEZ4MFhIUjlYRzVjZEZ4MFhIUjlYRzVjZEZ4MFhIUnlaWFIxY200Z1ptRnNjMlU3WEc1Y2RGeDBmVHRjYm4xY2JseHVablZ1WTNScGIyNGdaV3hsYldWdWRFMWhkR05vWlhJb0lHMWhkR05vWlhKeklDa2dlMXh1WEhSeVpYUjFjbTRnYldGMFkyaGxjbk11YkdWdVozUm9JRDRnTVNBL1hHNWNkRngwWm5WdVkzUnBiMjRvSUdWc1pXMHNJR052Ym5SbGVIUXNJSGh0YkNBcElIdGNibHgwWEhSY2RIWmhjaUJwSUQwZ2JXRjBZMmhsY25NdWJHVnVaM1JvTzF4dVhIUmNkRngwZDJocGJHVWdLQ0JwTFMwZ0tTQjdYRzVjZEZ4MFhIUmNkR2xtSUNnZ0lXMWhkR05vWlhKeld5QnBJRjBvSUdWc1pXMHNJR052Ym5SbGVIUXNJSGh0YkNBcElDa2dlMXh1WEhSY2RGeDBYSFJjZEhKbGRIVnliaUJtWVd4elpUdGNibHgwWEhSY2RGeDBmVnh1WEhSY2RGeDBmVnh1WEhSY2RGeDBjbVYwZFhKdUlIUnlkV1U3WEc1Y2RGeDBmU0E2WEc1Y2RGeDBiV0YwWTJobGNuTmJJREFnWFR0Y2JuMWNibHh1Wm5WdVkzUnBiMjRnYlhWc2RHbHdiR1ZEYjI1MFpYaDBjeWdnYzJWc1pXTjBiM0lzSUdOdmJuUmxlSFJ6TENCeVpYTjFiSFJ6SUNrZ2UxeHVYSFIyWVhJZ2FTQTlJREFzWEc1Y2RGeDBiR1Z1SUQwZ1kyOXVkR1Y0ZEhNdWJHVnVaM1JvTzF4dVhIUm1iM0lnS0NBN0lHa2dQQ0JzWlc0N0lHa3JLeUFwSUh0Y2JseDBYSFJUYVhwNmJHVW9JSE5sYkdWamRHOXlMQ0JqYjI1MFpYaDBjMXNnYVNCZExDQnlaWE4xYkhSeklDazdYRzVjZEgxY2JseDBjbVYwZFhKdUlISmxjM1ZzZEhNN1hHNTlYRzVjYm1aMWJtTjBhVzl1SUdOdmJtUmxibk5sS0NCMWJtMWhkR05vWldRc0lHMWhjQ3dnWm1sc2RHVnlMQ0JqYjI1MFpYaDBMQ0I0Yld3Z0tTQjdYRzVjZEhaaGNpQmxiR1Z0TEZ4dVhIUmNkRzVsZDFWdWJXRjBZMmhsWkNBOUlGdGRMRnh1WEhSY2RHa2dQU0F3TEZ4dVhIUmNkR3hsYmlBOUlIVnViV0YwWTJobFpDNXNaVzVuZEdnc1hHNWNkRngwYldGd2NHVmtJRDBnYldGd0lDRTlJRzUxYkd3N1hHNWNibHgwWm05eUlDZ2dPeUJwSUR3Z2JHVnVPeUJwS3lzZ0tTQjdYRzVjZEZ4MGFXWWdLQ0FvSUdWc1pXMGdQU0IxYm0xaGRHTm9aV1JiSUdrZ1hTQXBJQ2tnZTF4dVhIUmNkRngwYVdZZ0tDQWhabWxzZEdWeUlIeDhJR1pwYkhSbGNpZ2daV3hsYlN3Z1kyOXVkR1Y0ZEN3Z2VHMXNJQ2tnS1NCN1hHNWNkRngwWEhSY2RHNWxkMVZ1YldGMFkyaGxaQzV3ZFhOb0tDQmxiR1Z0SUNrN1hHNWNkRngwWEhSY2RHbG1JQ2dnYldGd2NHVmtJQ2tnZTF4dVhIUmNkRngwWEhSY2RHMWhjQzV3ZFhOb0tDQnBJQ2s3WEc1Y2RGeDBYSFJjZEgxY2JseDBYSFJjZEgxY2JseDBYSFI5WEc1Y2RIMWNibHh1WEhSeVpYUjFjbTRnYm1WM1ZXNXRZWFJqYUdWa08xeHVmVnh1WEc1bWRXNWpkR2x2YmlCelpYUk5ZWFJqYUdWeUtDQndjbVZHYVd4MFpYSXNJSE5sYkdWamRHOXlMQ0J0WVhSamFHVnlMQ0J3YjNOMFJtbHNkR1Z5TENCd2IzTjBSbWx1WkdWeUxDQndiM04wVTJWc1pXTjBiM0lnS1NCN1hHNWNkR2xtSUNnZ2NHOXpkRVpwYkhSbGNpQW1KaUFoY0c5emRFWnBiSFJsY2xzZ1pYaHdZVzVrYnlCZElDa2dlMXh1WEhSY2RIQnZjM1JHYVd4MFpYSWdQU0J6WlhSTllYUmphR1Z5S0NCd2IzTjBSbWxzZEdWeUlDazdYRzVjZEgxY2JseDBhV1lnS0NCd2IzTjBSbWx1WkdWeUlDWW1JQ0Z3YjNOMFJtbHVaR1Z5V3lCbGVIQmhibVJ2SUYwZ0tTQjdYRzVjZEZ4MGNHOXpkRVpwYm1SbGNpQTlJSE5sZEUxaGRHTm9aWElvSUhCdmMzUkdhVzVrWlhJc0lIQnZjM1JUWld4bFkzUnZjaUFwTzF4dVhIUjlYRzVjZEhKbGRIVnliaUJ0WVhKclJuVnVZM1JwYjI0b0lHWjFibU4wYVc5dUtDQnpaV1ZrTENCeVpYTjFiSFJ6TENCamIyNTBaWGgwTENCNGJXd2dLU0I3WEc1Y2RGeDBkbUZ5SUhSbGJYQXNJR2tzSUdWc1pXMHNYRzVjZEZ4MFhIUndjbVZOWVhBZ1BTQmJYU3hjYmx4MFhIUmNkSEJ2YzNSTllYQWdQU0JiWFN4Y2JseDBYSFJjZEhCeVpXVjRhWE4wYVc1bklEMGdjbVZ6ZFd4MGN5NXNaVzVuZEdnc1hHNWNibHgwWEhSY2RDOHZJRWRsZENCcGJtbDBhV0ZzSUdWc1pXMWxiblJ6SUdaeWIyMGdjMlZsWkNCdmNpQmpiMjUwWlhoMFhHNWNkRngwWEhSbGJHVnRjeUE5SUhObFpXUWdmSHdnYlhWc2RHbHdiR1ZEYjI1MFpYaDBjeWhjYmx4MFhIUmNkRngwYzJWc1pXTjBiM0lnZkh3Z1hDSXFYQ0lzWEc1Y2RGeDBYSFJjZEdOdmJuUmxlSFF1Ym05a1pWUjVjR1VnUHlCYklHTnZiblJsZUhRZ1hTQTZJR052Ym5SbGVIUXNYRzVjZEZ4MFhIUmNkRnRkWEc1Y2RGeDBYSFFwTEZ4dVhHNWNkRngwWEhRdkx5QlFjbVZtYVd4MFpYSWdkRzhnWjJWMElHMWhkR05vWlhJZ2FXNXdkWFFzSUhCeVpYTmxjblpwYm1jZ1lTQnRZWEFnWm05eUlITmxaV1F0Y21WemRXeDBjeUJ6ZVc1amFISnZibWw2WVhScGIyNWNibHgwWEhSY2RHMWhkR05vWlhKSmJpQTlJSEJ5WlVacGJIUmxjaUFtSmlBb0lITmxaV1FnZkh3Z0lYTmxiR1ZqZEc5eUlDa2dQMXh1WEhSY2RGeDBYSFJqYjI1a1pXNXpaU2dnWld4bGJYTXNJSEJ5WlUxaGNDd2djSEpsUm1sc2RHVnlMQ0JqYjI1MFpYaDBMQ0I0Yld3Z0tTQTZYRzVjZEZ4MFhIUmNkR1ZzWlcxekxGeHVYRzVjZEZ4MFhIUnRZWFJqYUdWeVQzVjBJRDBnYldGMFkyaGxjaUEvWEc1Y2JseDBYSFJjZEZ4MEx5OGdTV1lnZDJVZ2FHRjJaU0JoSUhCdmMzUkdhVzVrWlhJc0lHOXlJR1pwYkhSbGNtVmtJSE5sWldRc0lHOXlJRzV2YmkxelpXVmtJSEJ2YzNSR2FXeDBaWElnYjNJZ2NISmxaWGhwYzNScGJtY2djbVZ6ZFd4MGN5eGNibHgwWEhSY2RGeDBjRzl6ZEVacGJtUmxjaUI4ZkNBb0lITmxaV1FnUHlCd2NtVkdhV3gwWlhJZ09pQndjbVZsZUdsemRHbHVaeUI4ZkNCd2IzTjBSbWxzZEdWeUlDa2dQMXh1WEc1Y2RGeDBYSFJjZEZ4MEx5OGdMaTR1YVc1MFpYSnRaV1JwWVhSbElIQnliMk5sYzNOcGJtY2dhWE1nYm1WalpYTnpZWEo1WEc1Y2RGeDBYSFJjZEZ4MFcxMGdPbHh1WEc1Y2RGeDBYSFJjZEZ4MEx5OGdMaTR1YjNSb1pYSjNhWE5sSUhWelpTQnlaWE4xYkhSeklHUnBjbVZqZEd4NVhHNWNkRngwWEhSY2RGeDBjbVZ6ZFd4MGN5QTZYRzVjZEZ4MFhIUmNkRzFoZEdOb1pYSkpianRjYmx4dVhIUmNkQzh2SUVacGJtUWdjSEpwYldGeWVTQnRZWFJqYUdWelhHNWNkRngwYVdZZ0tDQnRZWFJqYUdWeUlDa2dlMXh1WEhSY2RGeDBiV0YwWTJobGNpZ2diV0YwWTJobGNrbHVMQ0J0WVhSamFHVnlUM1YwTENCamIyNTBaWGgwTENCNGJXd2dLVHRjYmx4MFhIUjlYRzVjYmx4MFhIUXZMeUJCY0hCc2VTQndiM04wUm1sc2RHVnlYRzVjZEZ4MGFXWWdLQ0J3YjNOMFJtbHNkR1Z5SUNrZ2UxeHVYSFJjZEZ4MGRHVnRjQ0E5SUdOdmJtUmxibk5sS0NCdFlYUmphR1Z5VDNWMExDQndiM04wVFdGd0lDazdYRzVjZEZ4MFhIUndiM04wUm1sc2RHVnlLQ0IwWlcxd0xDQmJYU3dnWTI5dWRHVjRkQ3dnZUcxc0lDazdYRzVjYmx4MFhIUmNkQzh2SUZWdUxXMWhkR05vSUdaaGFXeHBibWNnWld4bGJXVnVkSE1nWW5rZ2JXOTJhVzVuSUhSb1pXMGdZbUZqYXlCMGJ5QnRZWFJqYUdWeVNXNWNibHgwWEhSY2RHa2dQU0IwWlcxd0xteGxibWQwYUR0Y2JseDBYSFJjZEhkb2FXeGxJQ2dnYVMwdElDa2dlMXh1WEhSY2RGeDBYSFJwWmlBb0lDZ2daV3hsYlNBOUlIUmxiWEJiSUdrZ1hTQXBJQ2tnZTF4dVhIUmNkRngwWEhSY2RHMWhkR05vWlhKUGRYUmJJSEJ2YzNSTllYQmJJR2tnWFNCZElEMGdJU2dnYldGMFkyaGxja2x1V3lCd2IzTjBUV0Z3V3lCcElGMGdYU0E5SUdWc1pXMGdLVHRjYmx4MFhIUmNkRngwZlZ4dVhIUmNkRngwZlZ4dVhIUmNkSDFjYmx4dVhIUmNkR2xtSUNnZ2MyVmxaQ0FwSUh0Y2JseDBYSFJjZEdsbUlDZ2djRzl6ZEVacGJtUmxjaUI4ZkNCd2NtVkdhV3gwWlhJZ0tTQjdYRzVjZEZ4MFhIUmNkR2xtSUNnZ2NHOXpkRVpwYm1SbGNpQXBJSHRjYmx4dVhIUmNkRngwWEhSY2RDOHZJRWRsZENCMGFHVWdabWx1WVd3Z2JXRjBZMmhsY2s5MWRDQmllU0JqYjI1a1pXNXphVzVuSUhSb2FYTWdhVzUwWlhKdFpXUnBZWFJsSUdsdWRHOGdjRzl6ZEVacGJtUmxjaUJqYjI1MFpYaDBjMXh1WEhSY2RGeDBYSFJjZEhSbGJYQWdQU0JiWFR0Y2JseDBYSFJjZEZ4MFhIUnBJRDBnYldGMFkyaGxjazkxZEM1c1pXNW5kR2c3WEc1Y2RGeDBYSFJjZEZ4MGQyaHBiR1VnS0NCcExTMGdLU0I3WEc1Y2RGeDBYSFJjZEZ4MFhIUnBaaUFvSUNnZ1pXeGxiU0E5SUcxaGRHTm9aWEpQZFhSYklHa2dYU0FwSUNrZ2UxeHVYRzVjZEZ4MFhIUmNkRngwWEhSY2RDOHZJRkpsYzNSdmNtVWdiV0YwWTJobGNrbHVJSE5wYm1ObElHVnNaVzBnYVhNZ2JtOTBJSGxsZENCaElHWnBibUZzSUcxaGRHTm9YRzVjZEZ4MFhIUmNkRngwWEhSY2RIUmxiWEF1Y0hWemFDZ2dLQ0J0WVhSamFHVnlTVzViSUdrZ1hTQTlJR1ZzWlcwZ0tTQXBPMXh1WEhSY2RGeDBYSFJjZEZ4MGZWeHVYSFJjZEZ4MFhIUmNkSDFjYmx4MFhIUmNkRngwWEhSd2IzTjBSbWx1WkdWeUtDQnVkV3hzTENBb0lHMWhkR05vWlhKUGRYUWdQU0JiWFNBcExDQjBaVzF3TENCNGJXd2dLVHRjYmx4MFhIUmNkRngwZlZ4dVhHNWNkRngwWEhSY2RDOHZJRTF2ZG1VZ2JXRjBZMmhsWkNCbGJHVnRaVzUwY3lCbWNtOXRJSE5sWldRZ2RHOGdjbVZ6ZFd4MGN5QjBieUJyWldWd0lIUm9aVzBnYzNsdVkyaHliMjVwZW1Wa1hHNWNkRngwWEhSY2RHa2dQU0J0WVhSamFHVnlUM1YwTG14bGJtZDBhRHRjYmx4MFhIUmNkRngwZDJocGJHVWdLQ0JwTFMwZ0tTQjdYRzVjZEZ4MFhIUmNkRngwYVdZZ0tDQW9JR1ZzWlcwZ1BTQnRZWFJqYUdWeVQzVjBXeUJwSUYwZ0tTQW1KbHh1WEhSY2RGeDBYSFJjZEZ4MEtDQjBaVzF3SUQwZ2NHOXpkRVpwYm1SbGNpQS9JR2x1WkdWNFQyWW9JSE5sWldRc0lHVnNaVzBnS1NBNklIQnlaVTFoY0ZzZ2FTQmRJQ2tnUGlBdE1TQXBJSHRjYmx4dVhIUmNkRngwWEhSY2RGeDBjMlZsWkZzZ2RHVnRjQ0JkSUQwZ0lTZ2djbVZ6ZFd4MGMxc2dkR1Z0Y0NCZElEMGdaV3hsYlNBcE8xeHVYSFJjZEZ4MFhIUmNkSDFjYmx4MFhIUmNkRngwZlZ4dVhIUmNkRngwZlZ4dVhHNWNkRngwTHk4Z1FXUmtJR1ZzWlcxbGJuUnpJSFJ2SUhKbGMzVnNkSE1zSUhSb2NtOTFaMmdnY0c5emRFWnBibVJsY2lCcFppQmtaV1pwYm1Wa1hHNWNkRngwZlNCbGJITmxJSHRjYmx4MFhIUmNkRzFoZEdOb1pYSlBkWFFnUFNCamIyNWtaVzV6WlNoY2JseDBYSFJjZEZ4MGJXRjBZMmhsY2s5MWRDQTlQVDBnY21WemRXeDBjeUEvWEc1Y2RGeDBYSFJjZEZ4MGJXRjBZMmhsY2s5MWRDNXpjR3hwWTJVb0lIQnlaV1Y0YVhOMGFXNW5MQ0J0WVhSamFHVnlUM1YwTG14bGJtZDBhQ0FwSURwY2JseDBYSFJjZEZ4MFhIUnRZWFJqYUdWeVQzVjBYRzVjZEZ4MFhIUXBPMXh1WEhSY2RGeDBhV1lnS0NCd2IzTjBSbWx1WkdWeUlDa2dlMXh1WEhSY2RGeDBYSFJ3YjNOMFJtbHVaR1Z5S0NCdWRXeHNMQ0J5WlhOMWJIUnpMQ0J0WVhSamFHVnlUM1YwTENCNGJXd2dLVHRjYmx4MFhIUmNkSDBnWld4elpTQjdYRzVjZEZ4MFhIUmNkSEIxYzJndVlYQndiSGtvSUhKbGMzVnNkSE1zSUcxaGRHTm9aWEpQZFhRZ0tUdGNibHgwWEhSY2RIMWNibHgwWEhSOVhHNWNkSDBnS1R0Y2JuMWNibHh1Wm5WdVkzUnBiMjRnYldGMFkyaGxja1p5YjIxVWIydGxibk1vSUhSdmEyVnVjeUFwSUh0Y2JseDBkbUZ5SUdOb1pXTnJRMjl1ZEdWNGRDd2diV0YwWTJobGNpd2dhaXhjYmx4MFhIUnNaVzRnUFNCMGIydGxibk11YkdWdVozUm9MRnh1WEhSY2RHeGxZV1JwYm1kU1pXeGhkR2wyWlNBOUlFVjRjSEl1Y21Wc1lYUnBkbVZiSUhSdmEyVnVjMXNnTUNCZExuUjVjR1VnWFN4Y2JseDBYSFJwYlhCc2FXTnBkRkpsYkdGMGFYWmxJRDBnYkdWaFpHbHVaMUpsYkdGMGFYWmxJSHg4SUVWNGNISXVjbVZzWVhScGRtVmJJRndpSUZ3aUlGMHNYRzVjZEZ4MGFTQTlJR3hsWVdScGJtZFNaV3hoZEdsMlpTQS9JREVnT2lBd0xGeHVYRzVjZEZ4MEx5OGdWR2hsSUdadmRXNWtZWFJwYjI1aGJDQnRZWFJqYUdWeUlHVnVjM1Z5WlhNZ2RHaGhkQ0JsYkdWdFpXNTBjeUJoY21VZ2NtVmhZMmhoWW14bElHWnliMjBnZEc5d0xXeGxkbVZzSUdOdmJuUmxlSFFvY3lsY2JseDBYSFJ0WVhSamFFTnZiblJsZUhRZ1BTQmhaR1JEYjIxaWFXNWhkRzl5S0NCbWRXNWpkR2x2YmlnZ1pXeGxiU0FwSUh0Y2JseDBYSFJjZEhKbGRIVnliaUJsYkdWdElEMDlQU0JqYUdWamEwTnZiblJsZUhRN1hHNWNkRngwZlN3Z2FXMXdiR2xqYVhSU1pXeGhkR2wyWlN3Z2RISjFaU0FwTEZ4dVhIUmNkRzFoZEdOb1FXNTVRMjl1ZEdWNGRDQTlJR0ZrWkVOdmJXSnBibUYwYjNJb0lHWjFibU4wYVc5dUtDQmxiR1Z0SUNrZ2UxeHVYSFJjZEZ4MGNtVjBkWEp1SUdsdVpHVjRUMllvSUdOb1pXTnJRMjl1ZEdWNGRDd2daV3hsYlNBcElENGdMVEU3WEc1Y2RGeDBmU3dnYVcxd2JHbGphWFJTWld4aGRHbDJaU3dnZEhKMVpTQXBMRnh1WEhSY2RHMWhkR05vWlhKeklEMGdXeUJtZFc1amRHbHZiaWdnWld4bGJTd2dZMjl1ZEdWNGRDd2dlRzFzSUNrZ2UxeHVYSFJjZEZ4MGRtRnlJSEpsZENBOUlDZ2dJV3hsWVdScGJtZFNaV3hoZEdsMlpTQW1KaUFvSUhodGJDQjhmQ0JqYjI1MFpYaDBJQ0U5UFNCdmRYUmxjbTF2YzNSRGIyNTBaWGgwSUNrZ0tTQjhmQ0FvWEc1Y2RGeDBYSFJjZENnZ1kyaGxZMnREYjI1MFpYaDBJRDBnWTI5dWRHVjRkQ0FwTG01dlpHVlVlWEJsSUQ5Y2JseDBYSFJjZEZ4MFhIUnRZWFJqYUVOdmJuUmxlSFFvSUdWc1pXMHNJR052Ym5SbGVIUXNJSGh0YkNBcElEcGNibHgwWEhSY2RGeDBYSFJ0WVhSamFFRnVlVU52Ym5SbGVIUW9JR1ZzWlcwc0lHTnZiblJsZUhRc0lIaHRiQ0FwSUNrN1hHNWNibHgwWEhSY2RDOHZJRUYyYjJsa0lHaGhibWRwYm1jZ2IyNTBieUJsYkdWdFpXNTBJQ2hwYzNOMVpTQWpNams1S1Z4dVhIUmNkRngwWTJobFkydERiMjUwWlhoMElEMGdiblZzYkR0Y2JseDBYSFJjZEhKbGRIVnliaUJ5WlhRN1hHNWNkRngwZlNCZE8xeHVYRzVjZEdadmNpQW9JRHNnYVNBOElHeGxianNnYVNzcklDa2dlMXh1WEhSY2RHbG1JQ2dnS0NCdFlYUmphR1Z5SUQwZ1JYaHdjaTV5Wld4aGRHbDJaVnNnZEc5clpXNXpXeUJwSUYwdWRIbHdaU0JkSUNrZ0tTQjdYRzVjZEZ4MFhIUnRZWFJqYUdWeWN5QTlJRnNnWVdSa1EyOXRZbWx1WVhSdmNpZ2daV3hsYldWdWRFMWhkR05vWlhJb0lHMWhkR05vWlhKeklDa3NJRzFoZEdOb1pYSWdLU0JkTzF4dVhIUmNkSDBnWld4elpTQjdYRzVjZEZ4MFhIUnRZWFJqYUdWeUlEMGdSWGh3Y2k1bWFXeDBaWEpiSUhSdmEyVnVjMXNnYVNCZExuUjVjR1VnWFM1aGNIQnNlU2dnYm5Wc2JDd2dkRzlyWlc1eld5QnBJRjB1YldGMFkyaGxjeUFwTzF4dVhHNWNkRngwWEhRdkx5QlNaWFIxY200Z2MzQmxZMmxoYkNCMWNHOXVJSE5sWldsdVp5QmhJSEJ2YzJsMGFXOXVZV3dnYldGMFkyaGxjbHh1WEhSY2RGeDBhV1lnS0NCdFlYUmphR1Z5V3lCbGVIQmhibVJ2SUYwZ0tTQjdYRzVjYmx4MFhIUmNkRngwTHk4Z1JtbHVaQ0IwYUdVZ2JtVjRkQ0J5Wld4aGRHbDJaU0J2Y0dWeVlYUnZjaUFvYVdZZ1lXNTVLU0JtYjNJZ2NISnZjR1Z5SUdoaGJtUnNhVzVuWEc1Y2RGeDBYSFJjZEdvZ1BTQXJLMms3WEc1Y2RGeDBYSFJjZEdadmNpQW9JRHNnYWlBOElHeGxianNnYWlzcklDa2dlMXh1WEhSY2RGeDBYSFJjZEdsbUlDZ2dSWGh3Y2k1eVpXeGhkR2wyWlZzZ2RHOXJaVzV6V3lCcUlGMHVkSGx3WlNCZElDa2dlMXh1WEhSY2RGeDBYSFJjZEZ4MFluSmxZV3M3WEc1Y2RGeDBYSFJjZEZ4MGZWeHVYSFJjZEZ4MFhIUjlYRzVjZEZ4MFhIUmNkSEpsZEhWeWJpQnpaWFJOWVhSamFHVnlLRnh1WEhSY2RGeDBYSFJjZEdrZ1BpQXhJQ1ltSUdWc1pXMWxiblJOWVhSamFHVnlLQ0J0WVhSamFHVnljeUFwTEZ4dVhIUmNkRngwWEhSY2RHa2dQaUF4SUNZbUlIUnZVMlZzWldOMGIzSW9YRzVjYmx4MFhIUmNkRngwWEhRdkx5QkpaaUIwYUdVZ2NISmxZMlZrYVc1bklIUnZhMlZ1SUhkaGN5QmhJR1JsYzJObGJtUmhiblFnWTI5dFltbHVZWFJ2Y2l3Z2FXNXpaWEowSUdGdUlHbHRjR3hwWTJsMElHRnVlUzFsYkdWdFpXNTBJR0FxWUZ4dVhIUmNkRngwWEhSY2RIUnZhMlZ1YzF4dVhIUmNkRngwWEhSY2RGeDBMbk5zYVdObEtDQXdMQ0JwSUMwZ01TQXBYRzVjZEZ4MFhIUmNkRngwWEhRdVkyOXVZMkYwS0NCN0lIWmhiSFZsT2lCMGIydGxibk5iSUdrZ0xTQXlJRjB1ZEhsd1pTQTlQVDBnWENJZ1hDSWdQeUJjSWlwY0lpQTZJRndpWENJZ2ZTQXBYRzVjZEZ4MFhIUmNkRngwS1M1eVpYQnNZV05sS0NCeWRISnBiU3dnWENJa01Wd2lJQ2tzWEc1Y2RGeDBYSFJjZEZ4MGJXRjBZMmhsY2l4Y2JseDBYSFJjZEZ4MFhIUnBJRHdnYWlBbUppQnRZWFJqYUdWeVJuSnZiVlJ2YTJWdWN5Z2dkRzlyWlc1ekxuTnNhV05sS0NCcExDQnFJQ2tnS1N4Y2JseDBYSFJjZEZ4MFhIUnFJRHdnYkdWdUlDWW1JRzFoZEdOb1pYSkdjbTl0Vkc5clpXNXpLQ0FvSUhSdmEyVnVjeUE5SUhSdmEyVnVjeTV6YkdsalpTZ2dhaUFwSUNrZ0tTeGNibHgwWEhSY2RGeDBYSFJxSUR3Z2JHVnVJQ1ltSUhSdlUyVnNaV04wYjNJb0lIUnZhMlZ1Y3lBcFhHNWNkRngwWEhSY2RDazdYRzVjZEZ4MFhIUjlYRzVjZEZ4MFhIUnRZWFJqYUdWeWN5NXdkWE5vS0NCdFlYUmphR1Z5SUNrN1hHNWNkRngwZlZ4dVhIUjlYRzVjYmx4MGNtVjBkWEp1SUdWc1pXMWxiblJOWVhSamFHVnlLQ0J0WVhSamFHVnljeUFwTzF4dWZWeHVYRzVtZFc1amRHbHZiaUJ0WVhSamFHVnlSbkp2YlVkeWIzVndUV0YwWTJobGNuTW9JR1ZzWlcxbGJuUk5ZWFJqYUdWeWN5d2djMlYwVFdGMFkyaGxjbk1nS1NCN1hHNWNkSFpoY2lCaWVWTmxkQ0E5SUhObGRFMWhkR05vWlhKekxteGxibWQwYUNBK0lEQXNYRzVjZEZ4MFlubEZiR1Z0Wlc1MElEMGdaV3hsYldWdWRFMWhkR05vWlhKekxteGxibWQwYUNBK0lEQXNYRzVjZEZ4MGMzVndaWEpOWVhSamFHVnlJRDBnWm5WdVkzUnBiMjRvSUhObFpXUXNJR052Ym5SbGVIUXNJSGh0YkN3Z2NtVnpkV3gwY3l3Z2IzVjBaWEp0YjNOMElDa2dlMXh1WEhSY2RGeDBkbUZ5SUdWc1pXMHNJR29zSUcxaGRHTm9aWElzWEc1Y2RGeDBYSFJjZEcxaGRHTm9aV1JEYjNWdWRDQTlJREFzWEc1Y2RGeDBYSFJjZEdrZ1BTQmNJakJjSWl4Y2JseDBYSFJjZEZ4MGRXNXRZWFJqYUdWa0lEMGdjMlZsWkNBbUppQmJYU3hjYmx4MFhIUmNkRngwYzJWMFRXRjBZMmhsWkNBOUlGdGRMRnh1WEhSY2RGeDBYSFJqYjI1MFpYaDBRbUZqYTNWd0lEMGdiM1YwWlhKdGIzTjBRMjl1ZEdWNGRDeGNibHh1WEhSY2RGeDBYSFF2THlCWFpTQnRkWE4wSUdGc2QyRjVjeUJvWVhabElHVnBkR2hsY2lCelpXVmtJR1ZzWlcxbGJuUnpJRzl5SUc5MWRHVnliVzl6ZENCamIyNTBaWGgwWEc1Y2RGeDBYSFJjZEdWc1pXMXpJRDBnYzJWbFpDQjhmQ0JpZVVWc1pXMWxiblFnSmlZZ1JYaHdjaTVtYVc1a1d5QmNJbFJCUjF3aUlGMG9JRndpS2x3aUxDQnZkWFJsY20xdmMzUWdLU3hjYmx4dVhIUmNkRngwWEhRdkx5QlZjMlVnYVc1MFpXZGxjaUJrYVhKeWRXNXpJR2xtWmlCMGFHbHpJR2x6SUhSb1pTQnZkWFJsY20xdmMzUWdiV0YwWTJobGNseHVYSFJjZEZ4MFhIUmthWEp5ZFc1elZXNXBjWFZsSUQwZ0tDQmthWEp5ZFc1eklDczlJR052Ym5SbGVIUkNZV05yZFhBZ1BUMGdiblZzYkNBL0lERWdPaUJOWVhSb0xuSmhibVJ2YlNncElIeDhJREF1TVNBcExGeHVYSFJjZEZ4MFhIUnNaVzRnUFNCbGJHVnRjeTVzWlc1bmRHZzdYRzVjYmx4MFhIUmNkR2xtSUNnZ2IzVjBaWEp0YjNOMElDa2dlMXh1WEc1Y2RGeDBYSFJjZEM4dklGTjFjSEJ2Y25RNklFbEZJREV4S3l3Z1JXUm5aU0F4TnlBdElERTRLMXh1WEhSY2RGeDBYSFF2THlCSlJTOUZaR2RsSUhOdmJXVjBhVzFsY3lCMGFISnZkeUJoSUZ3aVVHVnliV2x6YzJsdmJpQmtaVzVwWldSY0lpQmxjbkp2Y2lCM2FHVnVJSE4wY21samRDMWpiMjF3WVhKcGJtZGNibHgwWEhSY2RGeDBMeThnZEhkdklHUnZZM1Z0Wlc1MGN6c2djMmhoYkd4dmR5QmpiMjF3WVhKcGMyOXVjeUIzYjNKckxseHVYSFJjZEZ4MFhIUXZMeUJsYzJ4cGJuUXRaR2x6WVdKc1pTMXVaWGgwTFd4cGJtVWdaWEZsY1dWeFhHNWNkRngwWEhSY2RHOTFkR1Z5Ylc5emRFTnZiblJsZUhRZ1BTQmpiMjUwWlhoMElEMDlJR1J2WTNWdFpXNTBJSHg4SUdOdmJuUmxlSFFnZkh3Z2IzVjBaWEp0YjNOME8xeHVYSFJjZEZ4MGZWeHVYRzVjZEZ4MFhIUXZMeUJCWkdRZ1pXeGxiV1Z1ZEhNZ2NHRnpjMmx1WnlCbGJHVnRaVzUwVFdGMFkyaGxjbk1nWkdseVpXTjBiSGtnZEc4Z2NtVnpkV3gwYzF4dVhIUmNkRngwTHk4Z1UzVndjRzl5ZERvZ1NVVThPU3dnVTJGbVlYSnBYRzVjZEZ4MFhIUXZMeUJVYjJ4bGNtRjBaU0JPYjJSbFRHbHpkQ0J3Y205d1pYSjBhV1Z6SUNoSlJUb2dYQ0pzWlc1bmRHaGNJanNnVTJGbVlYSnBPaUE4Ym5WdFltVnlQaWtnYldGMFkyaHBibWNnWld4bGJXVnVkSE1nWW5rZ2FXUmNibHgwWEhSY2RHWnZjaUFvSURzZ2FTQWhQVDBnYkdWdUlDWW1JQ2dnWld4bGJTQTlJR1ZzWlcxeld5QnBJRjBnS1NBaFBTQnVkV3hzT3lCcEt5c2dLU0I3WEc1Y2RGeDBYSFJjZEdsbUlDZ2dZbmxGYkdWdFpXNTBJQ1ltSUdWc1pXMGdLU0I3WEc1Y2RGeDBYSFJjZEZ4MGFpQTlJREE3WEc1Y2JseDBYSFJjZEZ4MFhIUXZMeUJUZFhCd2IzSjBPaUJKUlNBeE1Tc3NJRVZrWjJVZ01UY2dMU0F4T0N0Y2JseDBYSFJjZEZ4MFhIUXZMeUJKUlM5RlpHZGxJSE52YldWMGFXMWxjeUIwYUhKdmR5QmhJRndpVUdWeWJXbHpjMmx2YmlCa1pXNXBaV1JjSWlCbGNuSnZjaUIzYUdWdUlITjBjbWxqZEMxamIyMXdZWEpwYm1kY2JseDBYSFJjZEZ4MFhIUXZMeUIwZDI4Z1pHOWpkVzFsYm5Sek95QnphR0ZzYkc5M0lHTnZiWEJoY21semIyNXpJSGR2Y21zdVhHNWNkRngwWEhSY2RGeDBMeThnWlhOc2FXNTBMV1JwYzJGaWJHVXRibVY0ZEMxc2FXNWxJR1Z4WlhGbGNWeHVYSFJjZEZ4MFhIUmNkR2xtSUNnZ0lXTnZiblJsZUhRZ0ppWWdaV3hsYlM1dmQyNWxja1J2WTNWdFpXNTBJQ0U5SUdSdlkzVnRaVzUwSUNrZ2UxeHVYSFJjZEZ4MFhIUmNkRngwYzJWMFJHOWpkVzFsYm5Rb0lHVnNaVzBnS1R0Y2JseDBYSFJjZEZ4MFhIUmNkSGh0YkNBOUlDRmtiMk4xYldWdWRFbHpTRlJOVER0Y2JseDBYSFJjZEZ4MFhIUjlYRzVjZEZ4MFhIUmNkRngwZDJocGJHVWdLQ0FvSUcxaGRHTm9aWElnUFNCbGJHVnRaVzUwVFdGMFkyaGxjbk5iSUdvckt5QmRJQ2tnS1NCN1hHNWNkRngwWEhSY2RGeDBYSFJwWmlBb0lHMWhkR05vWlhJb0lHVnNaVzBzSUdOdmJuUmxlSFFnZkh3Z1pHOWpkVzFsYm5Rc0lIaHRiQ0FwSUNrZ2UxeHVYSFJjZEZ4MFhIUmNkRngwWEhSeVpYTjFiSFJ6TG5CMWMyZ29JR1ZzWlcwZ0tUdGNibHgwWEhSY2RGeDBYSFJjZEZ4MFluSmxZV3M3WEc1Y2RGeDBYSFJjZEZ4MFhIUjlYRzVjZEZ4MFhIUmNkRngwZlZ4dVhIUmNkRngwWEhSY2RHbG1JQ2dnYjNWMFpYSnRiM04wSUNrZ2UxeHVYSFJjZEZ4MFhIUmNkRngwWkdseWNuVnVjeUE5SUdScGNuSjFibk5WYm1seGRXVTdYRzVjZEZ4MFhIUmNkRngwZlZ4dVhIUmNkRngwWEhSOVhHNWNibHgwWEhSY2RGeDBMeThnVkhKaFkyc2dkVzV0WVhSamFHVmtJR1ZzWlcxbGJuUnpJR1p2Y2lCelpYUWdabWxzZEdWeWMxeHVYSFJjZEZ4MFhIUnBaaUFvSUdKNVUyVjBJQ2tnZTF4dVhHNWNkRngwWEhSY2RGeDBMeThnVkdobGVTQjNhV3hzSUdoaGRtVWdaMjl1WlNCMGFISnZkV2RvSUdGc2JDQndiM056YVdKc1pTQnRZWFJqYUdWeWMxeHVYSFJjZEZ4MFhIUmNkR2xtSUNnZ0tDQmxiR1Z0SUQwZ0lXMWhkR05vWlhJZ0ppWWdaV3hsYlNBcElDa2dlMXh1WEhSY2RGeDBYSFJjZEZ4MGJXRjBZMmhsWkVOdmRXNTBMUzA3WEc1Y2RGeDBYSFJjZEZ4MGZWeHVYRzVjZEZ4MFhIUmNkRngwTHk4Z1RHVnVaM1JvWlc0Z2RHaGxJR0Z5Y21GNUlHWnZjaUJsZG1WeWVTQmxiR1Z0Wlc1MExDQnRZWFJqYUdWa0lHOXlJRzV2ZEZ4dVhIUmNkRngwWEhSY2RHbG1JQ2dnYzJWbFpDQXBJSHRjYmx4MFhIUmNkRngwWEhSY2RIVnViV0YwWTJobFpDNXdkWE5vS0NCbGJHVnRJQ2s3WEc1Y2RGeDBYSFJjZEZ4MGZWeHVYSFJjZEZ4MFhIUjlYRzVjZEZ4MFhIUjlYRzVjYmx4MFhIUmNkQzh2SUdCcFlDQnBjeUJ1YjNjZ2RHaGxJR052ZFc1MElHOW1JR1ZzWlcxbGJuUnpJSFpwYzJsMFpXUWdZV0p2ZG1Vc0lHRnVaQ0JoWkdScGJtY2dhWFFnZEc4Z1lHMWhkR05vWldSRGIzVnVkR0JjYmx4MFhIUmNkQzh2SUcxaGEyVnpJSFJvWlNCc1lYUjBaWElnYm05dWJtVm5ZWFJwZG1VdVhHNWNkRngwWEhSdFlYUmphR1ZrUTI5MWJuUWdLejBnYVR0Y2JseHVYSFJjZEZ4MEx5OGdRWEJ3YkhrZ2MyVjBJR1pwYkhSbGNuTWdkRzhnZFc1dFlYUmphR1ZrSUdWc1pXMWxiblJ6WEc1Y2RGeDBYSFF2THlCT1QxUkZPaUJVYUdseklHTmhiaUJpWlNCemEybHdjR1ZrSUdsbUlIUm9aWEpsSUdGeVpTQnVieUIxYm0xaGRHTm9aV1FnWld4bGJXVnVkSE1nS0drdVpTNHNJR0J0WVhSamFHVmtRMjkxYm5SZ1hHNWNkRngwWEhRdkx5QmxjWFZoYkhNZ1lHbGdLU3dnZFc1c1pYTnpJSGRsSUdScFpHNG5kQ0IyYVhOcGRDQmZZVzU1WHlCbGJHVnRaVzUwY3lCcGJpQjBhR1VnWVdKdmRtVWdiRzl2Y0NCaVpXTmhkWE5sSUhkbElHaGhkbVZjYmx4MFhIUmNkQzh2SUc1dklHVnNaVzFsYm5RZ2JXRjBZMmhsY25NZ1lXNWtJRzV2SUhObFpXUXVYRzVjZEZ4MFhIUXZMeUJKYm1OeVpXMWxiblJwYm1jZ1lXNGdhVzVwZEdsaGJHeDVMWE4wY21sdVp5QmNJakJjSWlCZ2FXQWdZV3hzYjNkeklHQnBZQ0IwYnlCeVpXMWhhVzRnWVNCemRISnBibWNnYjI1c2VTQnBiaUIwYUdGMFhHNWNkRngwWEhRdkx5QmpZWE5sTENCM2FHbGphQ0IzYVd4c0lISmxjM1ZzZENCcGJpQmhJRndpTURCY0lpQmdiV0YwWTJobFpFTnZkVzUwWUNCMGFHRjBJR1JwWm1abGNuTWdabkp2YlNCZ2FXQWdZblYwSUdseklHRnNjMjljYmx4MFhIUmNkQzh2SUc1MWJXVnlhV05oYkd4NUlIcGxjbTh1WEc1Y2RGeDBYSFJwWmlBb0lHSjVVMlYwSUNZbUlHa2dJVDA5SUcxaGRHTm9aV1JEYjNWdWRDQXBJSHRjYmx4MFhIUmNkRngwYWlBOUlEQTdYRzVjZEZ4MFhIUmNkSGRvYVd4bElDZ2dLQ0J0WVhSamFHVnlJRDBnYzJWMFRXRjBZMmhsY25OYklHb3JLeUJkSUNrZ0tTQjdYRzVjZEZ4MFhIUmNkRngwYldGMFkyaGxjaWdnZFc1dFlYUmphR1ZrTENCelpYUk5ZWFJqYUdWa0xDQmpiMjUwWlhoMExDQjRiV3dnS1R0Y2JseDBYSFJjZEZ4MGZWeHVYRzVjZEZ4MFhIUmNkR2xtSUNnZ2MyVmxaQ0FwSUh0Y2JseHVYSFJjZEZ4MFhIUmNkQzh2SUZKbGFXNTBaV2R5WVhSbElHVnNaVzFsYm5RZ2JXRjBZMmhsY3lCMGJ5QmxiR2x0YVc1aGRHVWdkR2hsSUc1bFpXUWdabTl5SUhOdmNuUnBibWRjYmx4MFhIUmNkRngwWEhScFppQW9JRzFoZEdOb1pXUkRiM1Z1ZENBK0lEQWdLU0I3WEc1Y2RGeDBYSFJjZEZ4MFhIUjNhR2xzWlNBb0lHa3RMU0FwSUh0Y2JseDBYSFJjZEZ4MFhIUmNkRngwYVdZZ0tDQWhLQ0IxYm0xaGRHTm9aV1JiSUdrZ1hTQjhmQ0J6WlhSTllYUmphR1ZrV3lCcElGMGdLU0FwSUh0Y2JseDBYSFJjZEZ4MFhIUmNkRngwWEhSelpYUk5ZWFJqYUdWa1d5QnBJRjBnUFNCd2IzQXVZMkZzYkNnZ2NtVnpkV3gwY3lBcE8xeHVYSFJjZEZ4MFhIUmNkRngwWEhSOVhHNWNkRngwWEhSY2RGeDBYSFI5WEc1Y2RGeDBYSFJjZEZ4MGZWeHVYRzVjZEZ4MFhIUmNkRngwTHk4Z1JHbHpZMkZ5WkNCcGJtUmxlQ0J3YkdGalpXaHZiR1JsY2lCMllXeDFaWE1nZEc4Z1oyVjBJRzl1YkhrZ1lXTjBkV0ZzSUcxaGRHTm9aWE5jYmx4MFhIUmNkRngwWEhSelpYUk5ZWFJqYUdWa0lEMGdZMjl1WkdWdWMyVW9JSE5sZEUxaGRHTm9aV1FnS1R0Y2JseDBYSFJjZEZ4MGZWeHVYRzVjZEZ4MFhIUmNkQzh2SUVGa1pDQnRZWFJqYUdWeklIUnZJSEpsYzNWc2RITmNibHgwWEhSY2RGeDBjSFZ6YUM1aGNIQnNlU2dnY21WemRXeDBjeXdnYzJWMFRXRjBZMmhsWkNBcE8xeHVYRzVjZEZ4MFhIUmNkQzh2SUZObFpXUnNaWE56SUhObGRDQnRZWFJqYUdWeklITjFZMk5sWldScGJtY2diWFZzZEdsd2JHVWdjM1ZqWTJWemMyWjFiQ0J0WVhSamFHVnljeUJ6ZEdsd2RXeGhkR1VnYzI5eWRHbHVaMXh1WEhSY2RGeDBYSFJwWmlBb0lHOTFkR1Z5Ylc5emRDQW1KaUFoYzJWbFpDQW1KaUJ6WlhSTllYUmphR1ZrTG14bGJtZDBhQ0ErSURBZ0ppWmNibHgwWEhSY2RGeDBYSFFvSUcxaGRHTm9aV1JEYjNWdWRDQXJJSE5sZEUxaGRHTm9aWEp6TG14bGJtZDBhQ0FwSUQ0Z01TQXBJSHRjYmx4dVhIUmNkRngwWEhSY2RGTnBlbnBzWlM1MWJtbHhkV1ZUYjNKMEtDQnlaWE4xYkhSeklDazdYRzVjZEZ4MFhIUmNkSDFjYmx4MFhIUmNkSDFjYmx4dVhIUmNkRngwTHk4Z1QzWmxjbkpwWkdVZ2JXRnVhWEIxYkdGMGFXOXVJRzltSUdkc2IySmhiSE1nWW5rZ2JtVnpkR1ZrSUcxaGRHTm9aWEp6WEc1Y2RGeDBYSFJwWmlBb0lHOTFkR1Z5Ylc5emRDQXBJSHRjYmx4MFhIUmNkRngwWkdseWNuVnVjeUE5SUdScGNuSjFibk5WYm1seGRXVTdYRzVjZEZ4MFhIUmNkRzkxZEdWeWJXOXpkRU52Ym5SbGVIUWdQU0JqYjI1MFpYaDBRbUZqYTNWd08xeHVYSFJjZEZ4MGZWeHVYRzVjZEZ4MFhIUnlaWFIxY200Z2RXNXRZWFJqYUdWa08xeHVYSFJjZEgwN1hHNWNibHgwY21WMGRYSnVJR0o1VTJWMElEOWNibHgwWEhSdFlYSnJSblZ1WTNScGIyNG9JSE4xY0dWeVRXRjBZMmhsY2lBcElEcGNibHgwWEhSemRYQmxjazFoZEdOb1pYSTdYRzU5WEc1Y2JtTnZiWEJwYkdVZ1BTQlRhWHA2YkdVdVkyOXRjR2xzWlNBOUlHWjFibU4wYVc5dUtDQnpaV3hsWTNSdmNpd2diV0YwWTJnZ0x5b2dTVzUwWlhKdVlXd2dWWE5sSUU5dWJIa2dLaThnS1NCN1hHNWNkSFpoY2lCcExGeHVYSFJjZEhObGRFMWhkR05vWlhKeklEMGdXMTBzWEc1Y2RGeDBaV3hsYldWdWRFMWhkR05vWlhKeklEMGdXMTBzWEc1Y2RGeDBZMkZqYUdWa0lEMGdZMjl0Y0dsc1pYSkRZV05vWlZzZ2MyVnNaV04wYjNJZ0t5QmNJaUJjSWlCZE8xeHVYRzVjZEdsbUlDZ2dJV05oWTJobFpDQXBJSHRjYmx4dVhIUmNkQzh2SUVkbGJtVnlZWFJsSUdFZ1puVnVZM1JwYjI0Z2IyWWdjbVZqZFhKemFYWmxJR1oxYm1OMGFXOXVjeUIwYUdGMElHTmhiaUJpWlNCMWMyVmtJSFJ2SUdOb1pXTnJJR1ZoWTJnZ1pXeGxiV1Z1ZEZ4dVhIUmNkR2xtSUNnZ0lXMWhkR05vSUNrZ2UxeHVYSFJjZEZ4MGJXRjBZMmdnUFNCMGIydGxibWw2WlNnZ2MyVnNaV04wYjNJZ0tUdGNibHgwWEhSOVhHNWNkRngwYVNBOUlHMWhkR05vTG14bGJtZDBhRHRjYmx4MFhIUjNhR2xzWlNBb0lHa3RMU0FwSUh0Y2JseDBYSFJjZEdOaFkyaGxaQ0E5SUcxaGRHTm9aWEpHY205dFZHOXJaVzV6S0NCdFlYUmphRnNnYVNCZElDazdYRzVjZEZ4MFhIUnBaaUFvSUdOaFkyaGxaRnNnWlhod1lXNWtieUJkSUNrZ2UxeHVYSFJjZEZ4MFhIUnpaWFJOWVhSamFHVnljeTV3ZFhOb0tDQmpZV05vWldRZ0tUdGNibHgwWEhSY2RIMGdaV3h6WlNCN1hHNWNkRngwWEhSY2RHVnNaVzFsYm5STllYUmphR1Z5Y3k1d2RYTm9LQ0JqWVdOb1pXUWdLVHRjYmx4MFhIUmNkSDFjYmx4MFhIUjlYRzVjYmx4MFhIUXZMeUJEWVdOb1pTQjBhR1VnWTI5dGNHbHNaV1FnWm5WdVkzUnBiMjVjYmx4MFhIUmpZV05vWldRZ1BTQmpiMjF3YVd4bGNrTmhZMmhsS0Z4dVhIUmNkRngwYzJWc1pXTjBiM0lzWEc1Y2RGeDBYSFJ0WVhSamFHVnlSbkp2YlVkeWIzVndUV0YwWTJobGNuTW9JR1ZzWlcxbGJuUk5ZWFJqYUdWeWN5d2djMlYwVFdGMFkyaGxjbk1nS1Z4dVhIUmNkQ2s3WEc1Y2JseDBYSFF2THlCVFlYWmxJSE5sYkdWamRHOXlJR0Z1WkNCMGIydGxibWw2WVhScGIyNWNibHgwWEhSallXTm9aV1F1YzJWc1pXTjBiM0lnUFNCelpXeGxZM1J2Y2p0Y2JseDBmVnh1WEhSeVpYUjFjbTRnWTJGamFHVmtPMXh1ZlR0Y2JseHVMeW9xWEc0Z0tpQkJJR3h2ZHkxc1pYWmxiQ0J6Wld4bFkzUnBiMjRnWm5WdVkzUnBiMjRnZEdoaGRDQjNiM0pyY3lCM2FYUm9JRk5wZW5wc1pTZHpJR052YlhCcGJHVmtYRzRnS2lBZ2MyVnNaV04wYjNJZ1puVnVZM1JwYjI1elhHNGdLaUJBY0dGeVlXMGdlMU4wY21sdVozeEdkVzVqZEdsdmJuMGdjMlZzWldOMGIzSWdRU0J6Wld4bFkzUnZjaUJ2Y2lCaElIQnlaUzFqYjIxd2FXeGxaRnh1SUNvZ0lITmxiR1ZqZEc5eUlHWjFibU4wYVc5dUlHSjFhV3gwSUhkcGRHZ2dVMmw2ZW14bExtTnZiWEJwYkdWY2JpQXFJRUJ3WVhKaGJTQjdSV3hsYldWdWRIMGdZMjl1ZEdWNGRGeHVJQ29nUUhCaGNtRnRJSHRCY25KaGVYMGdXM0psYzNWc2RITmRYRzRnS2lCQWNHRnlZVzBnZTBGeWNtRjVmU0JiYzJWbFpGMGdRU0J6WlhRZ2IyWWdaV3hsYldWdWRITWdkRzhnYldGMFkyZ2dZV2RoYVc1emRGeHVJQ292WEc1elpXeGxZM1FnUFNCVGFYcDZiR1V1YzJWc1pXTjBJRDBnWm5WdVkzUnBiMjRvSUhObGJHVmpkRzl5TENCamIyNTBaWGgwTENCeVpYTjFiSFJ6TENCelpXVmtJQ2tnZTF4dVhIUjJZWElnYVN3Z2RHOXJaVzV6TENCMGIydGxiaXdnZEhsd1pTd2dabWx1WkN4Y2JseDBYSFJqYjIxd2FXeGxaQ0E5SUhSNWNHVnZaaUJ6Wld4bFkzUnZjaUE5UFQwZ1hDSm1kVzVqZEdsdmJsd2lJQ1ltSUhObGJHVmpkRzl5TEZ4dVhIUmNkRzFoZEdOb0lEMGdJWE5sWldRZ0ppWWdkRzlyWlc1cGVtVW9JQ2dnYzJWc1pXTjBiM0lnUFNCamIyMXdhV3hsWkM1elpXeGxZM1J2Y2lCOGZDQnpaV3hsWTNSdmNpQXBJQ2s3WEc1Y2JseDBjbVZ6ZFd4MGN5QTlJSEpsYzNWc2RITWdmSHdnVzEwN1hHNWNibHgwTHk4Z1ZISjVJSFJ2SUcxcGJtbHRhWHBsSUc5d1pYSmhkR2x2Ym5NZ2FXWWdkR2hsY21VZ2FYTWdiMjVzZVNCdmJtVWdjMlZzWldOMGIzSWdhVzRnZEdobElHeHBjM1FnWVc1a0lHNXZJSE5sWldSY2JseDBMeThnS0hSb1pTQnNZWFIwWlhJZ2IyWWdkMmhwWTJnZ1ozVmhjbUZ1ZEdWbGN5QjFjeUJqYjI1MFpYaDBLVnh1WEhScFppQW9JRzFoZEdOb0xteGxibWQwYUNBOVBUMGdNU0FwSUh0Y2JseHVYSFJjZEM4dklGSmxaSFZqWlNCamIyNTBaWGgwSUdsbUlIUm9aU0JzWldGa2FXNW5JR052YlhCdmRXNWtJSE5sYkdWamRHOXlJR2x6SUdGdUlFbEVYRzVjZEZ4MGRHOXJaVzV6SUQwZ2JXRjBZMmhiSURBZ1hTQTlJRzFoZEdOb1d5QXdJRjB1YzJ4cFkyVW9JREFnS1R0Y2JseDBYSFJwWmlBb0lIUnZhMlZ1Y3k1c1pXNW5kR2dnUGlBeUlDWW1JQ2dnZEc5clpXNGdQU0IwYjJ0bGJuTmJJREFnWFNBcExuUjVjR1VnUFQwOUlGd2lTVVJjSWlBbUpseHVYSFJjZEZ4MFkyOXVkR1Y0ZEM1dWIyUmxWSGx3WlNBOVBUMGdPU0FtSmlCa2IyTjFiV1Z1ZEVselNGUk5UQ0FtSmlCRmVIQnlMbkpsYkdGMGFYWmxXeUIwYjJ0bGJuTmJJREVnWFM1MGVYQmxJRjBnS1NCN1hHNWNibHgwWEhSY2RHTnZiblJsZUhRZ1BTQW9JRVY0Y0hJdVptbHVaRnNnWENKSlJGd2lJRjBvSUhSdmEyVnVMbTFoZEdOb1pYTmJJREFnWFZ4dVhIUmNkRngwWEhRdWNtVndiR0ZqWlNnZ2NuVnVaWE5qWVhCbExDQm1kVzVsYzJOaGNHVWdLU3dnWTI5dWRHVjRkQ0FwSUh4OElGdGRJQ2xiSURBZ1hUdGNibHgwWEhSY2RHbG1JQ2dnSVdOdmJuUmxlSFFnS1NCN1hHNWNkRngwWEhSY2RISmxkSFZ5YmlCeVpYTjFiSFJ6TzF4dVhHNWNkRngwWEhRdkx5QlFjbVZqYjIxd2FXeGxaQ0J0WVhSamFHVnljeUIzYVd4c0lITjBhV3hzSUhabGNtbG1lU0JoYm1ObGMzUnllU3dnYzI4Z2MzUmxjQ0IxY0NCaElHeGxkbVZzWEc1Y2RGeDBYSFI5SUdWc2MyVWdhV1lnS0NCamIyMXdhV3hsWkNBcElIdGNibHgwWEhSY2RGeDBZMjl1ZEdWNGRDQTlJR052Ym5SbGVIUXVjR0Z5Wlc1MFRtOWtaVHRjYmx4MFhIUmNkSDFjYmx4dVhIUmNkRngwYzJWc1pXTjBiM0lnUFNCelpXeGxZM1J2Y2k1emJHbGpaU2dnZEc5clpXNXpMbk5vYVdaMEtDa3VkbUZzZFdVdWJHVnVaM1JvSUNrN1hHNWNkRngwZlZ4dVhHNWNkRngwTHk4Z1JtVjBZMmdnWVNCelpXVmtJSE5sZENCbWIzSWdjbWxuYUhRdGRHOHRiR1ZtZENCdFlYUmphR2x1WjF4dVhIUmNkR2tnUFNCdFlYUmphRVY0Y0hKYklGd2libVZsWkhORGIyNTBaWGgwWENJZ1hTNTBaWE4wS0NCelpXeGxZM1J2Y2lBcElEOGdNQ0E2SUhSdmEyVnVjeTVzWlc1bmRHZzdYRzVjZEZ4MGQyaHBiR1VnS0NCcExTMGdLU0I3WEc1Y2RGeDBYSFIwYjJ0bGJpQTlJSFJ2YTJWdWMxc2dhU0JkTzF4dVhHNWNkRngwWEhRdkx5QkJZbTl5ZENCcFppQjNaU0JvYVhRZ1lTQmpiMjFpYVc1aGRHOXlYRzVjZEZ4MFhIUnBaaUFvSUVWNGNISXVjbVZzWVhScGRtVmJJQ2dnZEhsd1pTQTlJSFJ2YTJWdUxuUjVjR1VnS1NCZElDa2dlMXh1WEhSY2RGeDBYSFJpY21WaGF6dGNibHgwWEhSY2RIMWNibHgwWEhSY2RHbG1JQ2dnS0NCbWFXNWtJRDBnUlhod2NpNW1hVzVrV3lCMGVYQmxJRjBnS1NBcElIdGNibHh1WEhSY2RGeDBYSFF2THlCVFpXRnlZMmdzSUdWNGNHRnVaR2x1WnlCamIyNTBaWGgwSUdadmNpQnNaV0ZrYVc1bklITnBZbXhwYm1jZ1kyOXRZbWx1WVhSdmNuTmNibHgwWEhSY2RGeDBhV1lnS0NBb0lITmxaV1FnUFNCbWFXNWtLRnh1WEhSY2RGeDBYSFJjZEhSdmEyVnVMbTFoZEdOb1pYTmJJREFnWFM1eVpYQnNZV05sS0NCeWRXNWxjMk5oY0dVc0lHWjFibVZ6WTJGd1pTQXBMRnh1WEhSY2RGeDBYSFJjZEhKemFXSnNhVzVuTG5SbGMzUW9JSFJ2YTJWdWMxc2dNQ0JkTG5SNWNHVWdLU0FtSmlCMFpYTjBRMjl1ZEdWNGRDZ2dZMjl1ZEdWNGRDNXdZWEpsYm5ST2IyUmxJQ2tnZkh4Y2JseDBYSFJjZEZ4MFhIUmNkR052Ym5SbGVIUmNibHgwWEhSY2RGeDBLU0FwSUNrZ2UxeHVYRzVjZEZ4MFhIUmNkRngwTHk4Z1NXWWdjMlZsWkNCcGN5QmxiWEIwZVNCdmNpQnVieUIwYjJ0bGJuTWdjbVZ0WVdsdUxDQjNaU0JqWVc0Z2NtVjBkWEp1SUdWaGNteDVYRzVjZEZ4MFhIUmNkRngwZEc5clpXNXpMbk53YkdsalpTZ2dhU3dnTVNBcE8xeHVYSFJjZEZ4MFhIUmNkSE5sYkdWamRHOXlJRDBnYzJWbFpDNXNaVzVuZEdnZ0ppWWdkRzlUWld4bFkzUnZjaWdnZEc5clpXNXpJQ2s3WEc1Y2RGeDBYSFJjZEZ4MGFXWWdLQ0FoYzJWc1pXTjBiM0lnS1NCN1hHNWNkRngwWEhSY2RGeDBYSFJ3ZFhOb0xtRndjR3g1S0NCeVpYTjFiSFJ6TENCelpXVmtJQ2s3WEc1Y2RGeDBYSFJjZEZ4MFhIUnlaWFIxY200Z2NtVnpkV3gwY3p0Y2JseDBYSFJjZEZ4MFhIUjlYRzVjYmx4MFhIUmNkRngwWEhSaWNtVmhhenRjYmx4MFhIUmNkRngwZlZ4dVhIUmNkRngwZlZ4dVhIUmNkSDFjYmx4MGZWeHVYRzVjZEM4dklFTnZiWEJwYkdVZ1lXNWtJR1Y0WldOMWRHVWdZU0JtYVd4MFpYSnBibWNnWm5WdVkzUnBiMjRnYVdZZ2IyNWxJR2x6SUc1dmRDQndjbTkyYVdSbFpGeHVYSFF2THlCUWNtOTJhV1JsSUdCdFlYUmphR0FnZEc4Z1lYWnZhV1FnY21WMGIydGxibWw2WVhScGIyNGdhV1lnZDJVZ2JXOWthV1pwWldRZ2RHaGxJSE5sYkdWamRHOXlJR0ZpYjNabFhHNWNkQ2dnWTI5dGNHbHNaV1FnZkh3Z1kyOXRjR2xzWlNnZ2MyVnNaV04wYjNJc0lHMWhkR05vSUNrZ0tTaGNibHgwWEhSelpXVmtMRnh1WEhSY2RHTnZiblJsZUhRc1hHNWNkRngwSVdSdlkzVnRaVzUwU1hOSVZFMU1MRnh1WEhSY2RISmxjM1ZzZEhNc1hHNWNkRngwSVdOdmJuUmxlSFFnZkh3Z2NuTnBZbXhwYm1jdWRHVnpkQ2dnYzJWc1pXTjBiM0lnS1NBbUppQjBaWE4wUTI5dWRHVjRkQ2dnWTI5dWRHVjRkQzV3WVhKbGJuUk9iMlJsSUNrZ2ZId2dZMjl1ZEdWNGRGeHVYSFFwTzF4dVhIUnlaWFIxY200Z2NtVnpkV3gwY3p0Y2JuMDdYRzVjYmk4dklFOXVaUzEwYVcxbElHRnpjMmxuYm0xbGJuUnpYRzVjYmk4dklGTnZjblFnYzNSaFltbHNhWFI1WEc1emRYQndiM0owTG5OdmNuUlRkR0ZpYkdVZ1BTQmxlSEJoYm1SdkxuTndiR2wwS0NCY0lsd2lJQ2t1YzI5eWRDZ2djMjl5ZEU5eVpHVnlJQ2t1YW05cGJpZ2dYQ0pjSWlBcElEMDlQU0JsZUhCaGJtUnZPMXh1WEc0dkx5QlRkWEJ3YjNKME9pQkRhSEp2YldVZ01UUXRNelVyWEc0dkx5QkJiSGRoZVhNZ1lYTnpkVzFsSUdSMWNHeHBZMkYwWlhNZ2FXWWdkR2hsZVNCaGNtVnVKM1FnY0dGemMyVmtJSFJ2SUhSb1pTQmpiMjF3WVhKcGMyOXVJR1oxYm1OMGFXOXVYRzV6ZFhCd2IzSjBMbVJsZEdWamRFUjFjR3hwWTJGMFpYTWdQU0FoSVdoaGMwUjFjR3hwWTJGMFpUdGNibHh1THk4Z1NXNXBkR2xoYkdsNlpTQmhaMkZwYm5OMElIUm9aU0JrWldaaGRXeDBJR1J2WTNWdFpXNTBYRzV6WlhSRWIyTjFiV1Z1ZENncE8xeHVYRzR2THlCVGRYQndiM0owT2lCWFpXSnJhWFE4TlRNM0xqTXlJQzBnVTJGbVlYSnBJRFl1TUM0ekwwTm9jbTl0WlNBeU5TQW9abWw0WldRZ2FXNGdRMmh5YjIxbElESTNLVnh1THk4Z1JHVjBZV05vWldRZ2JtOWtaWE1nWTI5dVptOTFibVJwYm1kc2VTQm1iMnhzYjNjZ0ttVmhZMmdnYjNSb1pYSXFYRzV6ZFhCd2IzSjBMbk52Y25SRVpYUmhZMmhsWkNBOUlHRnpjMlZ5ZENnZ1puVnVZM1JwYjI0b0lHVnNJQ2tnZTF4dVhHNWNkQzh2SUZOb2IzVnNaQ0J5WlhSMWNtNGdNU3dnWW5WMElISmxkSFZ5Ym5NZ05DQW9abTlzYkc5M2FXNW5LVnh1WEhSeVpYUjFjbTRnWld3dVkyOXRjR0Z5WlVSdlkzVnRaVzUwVUc5emFYUnBiMjRvSUdSdlkzVnRaVzUwTG1OeVpXRjBaVVZzWlcxbGJuUW9JRndpWm1sbGJHUnpaWFJjSWlBcElDa2dKaUF4TzF4dWZTQXBPMXh1WEc0dkx5QlRkWEJ3YjNKME9pQkpSVHc0WEc0dkx5QlFjbVYyWlc1MElHRjBkSEpwWW5WMFpTOXdjbTl3WlhKMGVTQmNJbWx1ZEdWeWNHOXNZWFJwYjI1Y0lseHVMeThnYUhSMGNITTZMeTl0YzJSdUxtMXBZM0p2YzI5bWRDNWpiMjB2Wlc0dGRYTXZiR2xpY21GeWVTOXRjelV6TmpReU9TVXlPRlpUTGpnMUpUSTVMbUZ6Y0hoY2JtbG1JQ2dnSVdGemMyVnlkQ2dnWm5WdVkzUnBiMjRvSUdWc0lDa2dlMXh1WEhSbGJDNXBibTVsY2toVVRVd2dQU0JjSWp4aElHaHlaV1k5SnlNblBqd3ZZVDVjSWp0Y2JseDBjbVYwZFhKdUlHVnNMbVpwY25OMFEyaHBiR1F1WjJWMFFYUjBjbWxpZFhSbEtDQmNJbWh5WldaY0lpQXBJRDA5UFNCY0lpTmNJanRjYm4wZ0tTQXBJSHRjYmx4MFlXUmtTR0Z1Wkd4bEtDQmNJblI1Y0dWOGFISmxabnhvWldsbmFIUjhkMmxrZEdoY0lpd2dablZ1WTNScGIyNG9JR1ZzWlcwc0lHNWhiV1VzSUdseldFMU1JQ2tnZTF4dVhIUmNkR2xtSUNnZ0lXbHpXRTFNSUNrZ2UxeHVYSFJjZEZ4MGNtVjBkWEp1SUdWc1pXMHVaMlYwUVhSMGNtbGlkWFJsS0NCdVlXMWxMQ0J1WVcxbExuUnZURzkzWlhKRFlYTmxLQ2tnUFQwOUlGd2lkSGx3WlZ3aUlEOGdNU0E2SURJZ0tUdGNibHgwWEhSOVhHNWNkSDBnS1R0Y2JuMWNibHh1THk4Z1UzVndjRzl5ZERvZ1NVVThPVnh1THk4Z1ZYTmxJR1JsWm1GMWJIUldZV3gxWlNCcGJpQndiR0ZqWlNCdlppQm5aWFJCZEhSeWFXSjFkR1VvWENKMllXeDFaVndpS1Z4dWFXWWdLQ0FoYzNWd2NHOXlkQzVoZEhSeWFXSjFkR1Z6SUh4OElDRmhjM05sY25Rb0lHWjFibU4wYVc5dUtDQmxiQ0FwSUh0Y2JseDBaV3d1YVc1dVpYSklWRTFNSUQwZ1hDSThhVzV3ZFhRdlBsd2lPMXh1WEhSbGJDNW1hWEp6ZEVOb2FXeGtMbk5sZEVGMGRISnBZblYwWlNnZ1hDSjJZV3gxWlZ3aUxDQmNJbHdpSUNrN1hHNWNkSEpsZEhWeWJpQmxiQzVtYVhKemRFTm9hV3hrTG1kbGRFRjBkSEpwWW5WMFpTZ2dYQ0oyWVd4MVpWd2lJQ2tnUFQwOUlGd2lYQ0k3WEc1OUlDa2dLU0I3WEc1Y2RHRmtaRWhoYm1Sc1pTZ2dYQ0oyWVd4MVpWd2lMQ0JtZFc1amRHbHZiaWdnWld4bGJTd2dYMjVoYldVc0lHbHpXRTFNSUNrZ2UxeHVYSFJjZEdsbUlDZ2dJV2x6V0UxTUlDWW1JR1ZzWlcwdWJtOWtaVTVoYldVdWRHOU1iM2RsY2tOaGMyVW9LU0E5UFQwZ1hDSnBibkIxZEZ3aUlDa2dlMXh1WEhSY2RGeDBjbVYwZFhKdUlHVnNaVzB1WkdWbVlYVnNkRlpoYkhWbE8xeHVYSFJjZEgxY2JseDBmU0FwTzF4dWZWeHVYRzR2THlCVGRYQndiM0owT2lCSlJUdzVYRzR2THlCVmMyVWdaMlYwUVhSMGNtbGlkWFJsVG05a1pTQjBieUJtWlhSamFDQmliMjlzWldGdWN5QjNhR1Z1SUdkbGRFRjBkSEpwWW5WMFpTQnNhV1Z6WEc1cFppQW9JQ0ZoYzNObGNuUW9JR1oxYm1OMGFXOXVLQ0JsYkNBcElIdGNibHgwY21WMGRYSnVJR1ZzTG1kbGRFRjBkSEpwWW5WMFpTZ2dYQ0prYVhOaFlteGxaRndpSUNrZ1BUMGdiblZzYkR0Y2JuMGdLU0FwSUh0Y2JseDBZV1JrU0dGdVpHeGxLQ0JpYjI5c1pXRnVjeXdnWm5WdVkzUnBiMjRvSUdWc1pXMHNJRzVoYldVc0lHbHpXRTFNSUNrZ2UxeHVYSFJjZEhaaGNpQjJZV3c3WEc1Y2RGeDBhV1lnS0NBaGFYTllUVXdnS1NCN1hHNWNkRngwWEhSeVpYUjFjbTRnWld4bGJWc2dibUZ0WlNCZElEMDlQU0IwY25WbElEOGdibUZ0WlM1MGIweHZkMlZ5UTJGelpTZ3BJRHBjYmx4MFhIUmNkRngwS0NCMllXd2dQU0JsYkdWdExtZGxkRUYwZEhKcFluVjBaVTV2WkdVb0lHNWhiV1VnS1NBcElDWW1JSFpoYkM1emNHVmphV1pwWldRZ1AxeHVYSFJjZEZ4MFhIUmNkSFpoYkM1MllXeDFaU0E2WEc1Y2RGeDBYSFJjZEZ4MGJuVnNiRHRjYmx4MFhIUjlYRzVjZEgwZ0tUdGNibjFjYmx4dWNtVjBkWEp1SUZOcGVucHNaVHRjYmx4dWZTQXBLQ0IzYVc1a2IzY2dLVHRjYmx4dVhHNWNibXBSZFdWeWVTNW1hVzVrSUQwZ1UybDZlbXhsTzF4dWFsRjFaWEo1TG1WNGNISWdQU0JUYVhwNmJHVXVjMlZzWldOMGIzSnpPMXh1WEc0dkx5QkVaWEJ5WldOaGRHVmtYRzVxVVhWbGNua3VaWGh3Y2xzZ1hDSTZYQ0lnWFNBOUlHcFJkV1Z5ZVM1bGVIQnlMbkJ6WlhWa2IzTTdYRzVxVVhWbGNua3VkVzVwY1hWbFUyOXlkQ0E5SUdwUmRXVnllUzUxYm1seGRXVWdQU0JUYVhwNmJHVXVkVzVwY1hWbFUyOXlkRHRjYm1wUmRXVnllUzUwWlhoMElEMGdVMmw2ZW14bExtZGxkRlJsZUhRN1hHNXFVWFZsY25rdWFYTllUVXhFYjJNZ1BTQlRhWHA2YkdVdWFYTllUVXc3WEc1cVVYVmxjbmt1WTI5dWRHRnBibk1nUFNCVGFYcDZiR1V1WTI5dWRHRnBibk03WEc1cVVYVmxjbmt1WlhOallYQmxVMlZzWldOMGIzSWdQU0JUYVhwNmJHVXVaWE5qWVhCbE8xeHVYRzVjYmx4dVhHNTJZWElnWkdseUlEMGdablZ1WTNScGIyNG9JR1ZzWlcwc0lHUnBjaXdnZFc1MGFXd2dLU0I3WEc1Y2RIWmhjaUJ0WVhSamFHVmtJRDBnVzEwc1hHNWNkRngwZEhKMWJtTmhkR1VnUFNCMWJuUnBiQ0FoUFQwZ2RXNWtaV1pwYm1Wa08xeHVYRzVjZEhkb2FXeGxJQ2dnS0NCbGJHVnRJRDBnWld4bGJWc2daR2x5SUYwZ0tTQW1KaUJsYkdWdExtNXZaR1ZVZVhCbElDRTlQU0E1SUNrZ2UxeHVYSFJjZEdsbUlDZ2daV3hsYlM1dWIyUmxWSGx3WlNBOVBUMGdNU0FwSUh0Y2JseDBYSFJjZEdsbUlDZ2dkSEoxYm1OaGRHVWdKaVlnYWxGMVpYSjVLQ0JsYkdWdElDa3VhWE1vSUhWdWRHbHNJQ2tnS1NCN1hHNWNkRngwWEhSY2RHSnlaV0ZyTzF4dVhIUmNkRngwZlZ4dVhIUmNkRngwYldGMFkyaGxaQzV3ZFhOb0tDQmxiR1Z0SUNrN1hHNWNkRngwZlZ4dVhIUjlYRzVjZEhKbGRIVnliaUJ0WVhSamFHVmtPMXh1ZlR0Y2JseHVYRzUyWVhJZ2MybGliR2x1WjNNZ1BTQm1kVzVqZEdsdmJpZ2diaXdnWld4bGJTQXBJSHRjYmx4MGRtRnlJRzFoZEdOb1pXUWdQU0JiWFR0Y2JseHVYSFJtYjNJZ0tDQTdJRzQ3SUc0Z1BTQnVMbTVsZUhSVGFXSnNhVzVuSUNrZ2UxeHVYSFJjZEdsbUlDZ2diaTV1YjJSbFZIbHdaU0E5UFQwZ01TQW1KaUJ1SUNFOVBTQmxiR1Z0SUNrZ2UxeHVYSFJjZEZ4MGJXRjBZMmhsWkM1d2RYTm9LQ0J1SUNrN1hHNWNkRngwZlZ4dVhIUjlYRzVjYmx4MGNtVjBkWEp1SUcxaGRHTm9aV1E3WEc1OU8xeHVYRzVjYm5aaGNpQnlibVZsWkhORGIyNTBaWGgwSUQwZ2FsRjFaWEo1TG1WNGNISXViV0YwWTJndWJtVmxaSE5EYjI1MFpYaDBPMXh1WEc1Y2JseHVablZ1WTNScGIyNGdibTlrWlU1aGJXVW9JR1ZzWlcwc0lHNWhiV1VnS1NCN1hHNWNibHgwY21WMGRYSnVJR1ZzWlcwdWJtOWtaVTVoYldVZ0ppWWdaV3hsYlM1dWIyUmxUbUZ0WlM1MGIweHZkMlZ5UTJGelpTZ3BJRDA5UFNCdVlXMWxMblJ2VEc5M1pYSkRZWE5sS0NrN1hHNWNibjFjYm5aaGNpQnljMmx1WjJ4bFZHRm5JRDBnS0NBdlhqd29XMkV0ZWwxYlhseGNMMXhjTUQ0NlhGeDRNakJjWEhSY1hISmNYRzVjWEdaZEtpbGJYRng0TWpCY1hIUmNYSEpjWEc1Y1hHWmRLbHhjTHo4K0tEODZQRnhjTDF4Y01UNThLU1F2YVNBcE8xeHVYRzVjYmx4dUx5OGdTVzF3YkdWdFpXNTBJSFJvWlNCcFpHVnVkR2xqWVd3Z1puVnVZM1JwYjI1aGJHbDBlU0JtYjNJZ1ptbHNkR1Z5SUdGdVpDQnViM1JjYm1aMWJtTjBhVzl1SUhkcGJtNXZkeWdnWld4bGJXVnVkSE1zSUhGMVlXeHBabWxsY2l3Z2JtOTBJQ2tnZTF4dVhIUnBaaUFvSUdselJuVnVZM1JwYjI0b0lIRjFZV3hwWm1sbGNpQXBJQ2tnZTF4dVhIUmNkSEpsZEhWeWJpQnFVWFZsY25rdVozSmxjQ2dnWld4bGJXVnVkSE1zSUdaMWJtTjBhVzl1S0NCbGJHVnRMQ0JwSUNrZ2UxeHVYSFJjZEZ4MGNtVjBkWEp1SUNFaGNYVmhiR2xtYVdWeUxtTmhiR3dvSUdWc1pXMHNJR2tzSUdWc1pXMGdLU0FoUFQwZ2JtOTBPMXh1WEhSY2RIMGdLVHRjYmx4MGZWeHVYRzVjZEM4dklGTnBibWRzWlNCbGJHVnRaVzUwWEc1Y2RHbG1JQ2dnY1hWaGJHbG1hV1Z5TG01dlpHVlVlWEJsSUNrZ2UxeHVYSFJjZEhKbGRIVnliaUJxVVhWbGNua3VaM0psY0NnZ1pXeGxiV1Z1ZEhNc0lHWjFibU4wYVc5dUtDQmxiR1Z0SUNrZ2UxeHVYSFJjZEZ4MGNtVjBkWEp1SUNnZ1pXeGxiU0E5UFQwZ2NYVmhiR2xtYVdWeUlDa2dJVDA5SUc1dmREdGNibHgwWEhSOUlDazdYRzVjZEgxY2JseHVYSFF2THlCQmNuSmhlV3hwYTJVZ2IyWWdaV3hsYldWdWRITWdLR3BSZFdWeWVTd2dZWEpuZFcxbGJuUnpMQ0JCY25KaGVTbGNibHgwYVdZZ0tDQjBlWEJsYjJZZ2NYVmhiR2xtYVdWeUlDRTlQU0JjSW5OMGNtbHVaMXdpSUNrZ2UxeHVYSFJjZEhKbGRIVnliaUJxVVhWbGNua3VaM0psY0NnZ1pXeGxiV1Z1ZEhNc0lHWjFibU4wYVc5dUtDQmxiR1Z0SUNrZ2UxeHVYSFJjZEZ4MGNtVjBkWEp1SUNnZ2FXNWtaWGhQWmk1allXeHNLQ0J4ZFdGc2FXWnBaWElzSUdWc1pXMGdLU0ErSUMweElDa2dJVDA5SUc1dmREdGNibHgwWEhSOUlDazdYRzVjZEgxY2JseHVYSFF2THlCR2FXeDBaWEpsWkNCa2FYSmxZM1JzZVNCbWIzSWdZbTkwYUNCemFXMXdiR1VnWVc1a0lHTnZiWEJzWlhnZ2MyVnNaV04wYjNKelhHNWNkSEpsZEhWeWJpQnFVWFZsY25rdVptbHNkR1Z5S0NCeGRXRnNhV1pwWlhJc0lHVnNaVzFsYm5SekxDQnViM1FnS1R0Y2JuMWNibHh1YWxGMVpYSjVMbVpwYkhSbGNpQTlJR1oxYm1OMGFXOXVLQ0JsZUhCeUxDQmxiR1Z0Y3l3Z2JtOTBJQ2tnZTF4dVhIUjJZWElnWld4bGJTQTlJR1ZzWlcxeld5QXdJRjA3WEc1Y2JseDBhV1lnS0NCdWIzUWdLU0I3WEc1Y2RGeDBaWGh3Y2lBOUlGd2lPbTV2ZENoY0lpQXJJR1Y0Y0hJZ0t5QmNJaWxjSWp0Y2JseDBmVnh1WEc1Y2RHbG1JQ2dnWld4bGJYTXViR1Z1WjNSb0lEMDlQU0F4SUNZbUlHVnNaVzB1Ym05a1pWUjVjR1VnUFQwOUlERWdLU0I3WEc1Y2RGeDBjbVYwZFhKdUlHcFJkV1Z5ZVM1bWFXNWtMbTFoZEdOb1pYTlRaV3hsWTNSdmNpZ2daV3hsYlN3Z1pYaHdjaUFwSUQ4Z1d5QmxiR1Z0SUYwZ09pQmJYVHRjYmx4MGZWeHVYRzVjZEhKbGRIVnliaUJxVVhWbGNua3VabWx1WkM1dFlYUmphR1Z6S0NCbGVIQnlMQ0JxVVhWbGNua3VaM0psY0NnZ1pXeGxiWE1zSUdaMWJtTjBhVzl1S0NCbGJHVnRJQ2tnZTF4dVhIUmNkSEpsZEhWeWJpQmxiR1Z0TG01dlpHVlVlWEJsSUQwOVBTQXhPMXh1WEhSOUlDa2dLVHRjYm4wN1hHNWNibXBSZFdWeWVTNW1iaTVsZUhSbGJtUW9JSHRjYmx4MFptbHVaRG9nWm5WdVkzUnBiMjRvSUhObGJHVmpkRzl5SUNrZ2UxeHVYSFJjZEhaaGNpQnBMQ0J5WlhRc1hHNWNkRngwWEhSc1pXNGdQU0IwYUdsekxteGxibWQwYUN4Y2JseDBYSFJjZEhObGJHWWdQU0IwYUdsek8xeHVYRzVjZEZ4MGFXWWdLQ0IwZVhCbGIyWWdjMlZzWldOMGIzSWdJVDA5SUZ3aWMzUnlhVzVuWENJZ0tTQjdYRzVjZEZ4MFhIUnlaWFIxY200Z2RHaHBjeTV3ZFhOb1UzUmhZMnNvSUdwUmRXVnllU2dnYzJWc1pXTjBiM0lnS1M1bWFXeDBaWElvSUdaMWJtTjBhVzl1S0NrZ2UxeHVYSFJjZEZ4MFhIUm1iM0lnS0NCcElEMGdNRHNnYVNBOElHeGxianNnYVNzcklDa2dlMXh1WEhSY2RGeDBYSFJjZEdsbUlDZ2dhbEYxWlhKNUxtTnZiblJoYVc1ektDQnpaV3htV3lCcElGMHNJSFJvYVhNZ0tTQXBJSHRjYmx4MFhIUmNkRngwWEhSY2RISmxkSFZ5YmlCMGNuVmxPMXh1WEhSY2RGeDBYSFJjZEgxY2JseDBYSFJjZEZ4MGZWeHVYSFJjZEZ4MGZTQXBJQ2s3WEc1Y2RGeDBmVnh1WEc1Y2RGeDBjbVYwSUQwZ2RHaHBjeTV3ZFhOb1UzUmhZMnNvSUZ0ZElDazdYRzVjYmx4MFhIUm1iM0lnS0NCcElEMGdNRHNnYVNBOElHeGxianNnYVNzcklDa2dlMXh1WEhSY2RGeDBhbEYxWlhKNUxtWnBibVFvSUhObGJHVmpkRzl5TENCelpXeG1XeUJwSUYwc0lISmxkQ0FwTzF4dVhIUmNkSDFjYmx4dVhIUmNkSEpsZEhWeWJpQnNaVzRnUGlBeElEOGdhbEYxWlhKNUxuVnVhWEYxWlZOdmNuUW9JSEpsZENBcElEb2djbVYwTzF4dVhIUjlMRnh1WEhSbWFXeDBaWEk2SUdaMWJtTjBhVzl1S0NCelpXeGxZM1J2Y2lBcElIdGNibHgwWEhSeVpYUjFjbTRnZEdocGN5NXdkWE5vVTNSaFkyc29JSGRwYm01dmR5Z2dkR2hwY3l3Z2MyVnNaV04wYjNJZ2ZId2dXMTBzSUdaaGJITmxJQ2tnS1R0Y2JseDBmU3hjYmx4MGJtOTBPaUJtZFc1amRHbHZiaWdnYzJWc1pXTjBiM0lnS1NCN1hHNWNkRngwY21WMGRYSnVJSFJvYVhNdWNIVnphRk4wWVdOcktDQjNhVzV1YjNjb0lIUm9hWE1zSUhObGJHVmpkRzl5SUh4OElGdGRMQ0IwY25WbElDa2dLVHRjYmx4MGZTeGNibHgwYVhNNklHWjFibU4wYVc5dUtDQnpaV3hsWTNSdmNpQXBJSHRjYmx4MFhIUnlaWFIxY200Z0lTRjNhVzV1YjNjb1hHNWNkRngwWEhSMGFHbHpMRnh1WEc1Y2RGeDBYSFF2THlCSlppQjBhR2x6SUdseklHRWdjRzl6YVhScGIyNWhiQzl5Wld4aGRHbDJaU0J6Wld4bFkzUnZjaXdnWTJobFkyc2diV1Z0WW1WeWMyaHBjQ0JwYmlCMGFHVWdjbVYwZFhKdVpXUWdjMlYwWEc1Y2RGeDBYSFF2THlCemJ5QWtLRndpY0RwbWFYSnpkRndpS1M1cGN5aGNJbkE2YkdGemRGd2lLU0IzYjI0bmRDQnlaWFIxY200Z2RISjFaU0JtYjNJZ1lTQmtiMk1nZDJsMGFDQjBkMjhnWENKd1hDSXVYRzVjZEZ4MFhIUjBlWEJsYjJZZ2MyVnNaV04wYjNJZ1BUMDlJRndpYzNSeWFXNW5YQ0lnSmlZZ2NtNWxaV1J6UTI5dWRHVjRkQzUwWlhOMEtDQnpaV3hsWTNSdmNpQXBJRDljYmx4MFhIUmNkRngwYWxGMVpYSjVLQ0J6Wld4bFkzUnZjaUFwSURwY2JseDBYSFJjZEZ4MGMyVnNaV04wYjNJZ2ZId2dXMTBzWEc1Y2RGeDBYSFJtWVd4elpWeHVYSFJjZENrdWJHVnVaM1JvTzF4dVhIUjlYRzU5SUNrN1hHNWNibHh1THk4Z1NXNXBkR2xoYkdsNlpTQmhJR3BSZFdWeWVTQnZZbXBsWTNSY2JseHVYRzR2THlCQklHTmxiblJ5WVd3Z2NtVm1aWEpsYm1ObElIUnZJSFJvWlNCeWIyOTBJR3BSZFdWeWVTaGtiMk4xYldWdWRDbGNiblpoY2lCeWIyOTBhbEYxWlhKNUxGeHVYRzVjZEM4dklFRWdjMmx0Y0d4bElIZGhlU0IwYnlCamFHVmpheUJtYjNJZ1NGUk5UQ0J6ZEhKcGJtZHpYRzVjZEM4dklGQnlhVzl5YVhScGVtVWdJMmxrSUc5MlpYSWdQSFJoWno0Z2RHOGdZWFp2YVdRZ1dGTlRJSFpwWVNCc2IyTmhkR2x2Ymk1b1lYTm9JQ2gwY21GakxUazFNakVwWEc1Y2RDOHZJRk4wY21samRDQklWRTFNSUhKbFkyOW5ibWwwYVc5dUlDaDBjbUZqTFRFeE1qa3dPaUJ0ZFhOMElITjBZWEowSUhkcGRHZ2dQQ2xjYmx4MEx5OGdVMmh2Y25SamRYUWdjMmx0Y0d4bElDTnBaQ0JqWVhObElHWnZjaUJ6Y0dWbFpGeHVYSFJ5Y1hWcFkydEZlSEJ5SUQwZ0wxNG9QenBjWEhNcUtEeGJYRngzWEZ4WFhTcytLVnRlUGwwcWZDTW9XMXhjZHkxZEt5a3BKQzhzWEc1Y2JseDBhVzVwZENBOUlHcFJkV1Z5ZVM1bWJpNXBibWwwSUQwZ1puVnVZM1JwYjI0b0lITmxiR1ZqZEc5eUxDQmpiMjUwWlhoMExDQnliMjkwSUNrZ2UxeHVYSFJjZEhaaGNpQnRZWFJqYUN3Z1pXeGxiVHRjYmx4dVhIUmNkQzh2SUVoQlRrUk1SVG9nSkNoY0lsd2lLU3dnSkNodWRXeHNLU3dnSkNoMWJtUmxabWx1WldRcExDQWtLR1poYkhObEtWeHVYSFJjZEdsbUlDZ2dJWE5sYkdWamRHOXlJQ2tnZTF4dVhIUmNkRngwY21WMGRYSnVJSFJvYVhNN1hHNWNkRngwZlZ4dVhHNWNkRngwTHk4Z1RXVjBhRzlrSUdsdWFYUW9LU0JoWTJObGNIUnpJR0Z1SUdGc2RHVnlibUYwWlNCeWIyOTBhbEYxWlhKNVhHNWNkRngwTHk4Z2MyOGdiV2xuY21GMFpTQmpZVzRnYzNWd2NHOXlkQ0JxVVhWbGNua3VjM1ZpSUNobmFDMHlNVEF4S1Z4dVhIUmNkSEp2YjNRZ1BTQnliMjkwSUh4OElISnZiM1JxVVhWbGNuazdYRzVjYmx4MFhIUXZMeUJJWVc1a2JHVWdTRlJOVENCemRISnBibWR6WEc1Y2RGeDBhV1lnS0NCMGVYQmxiMllnYzJWc1pXTjBiM0lnUFQwOUlGd2ljM1J5YVc1blhDSWdLU0I3WEc1Y2RGeDBYSFJwWmlBb0lITmxiR1ZqZEc5eVd5QXdJRjBnUFQwOUlGd2lQRndpSUNZbVhHNWNkRngwWEhSY2RITmxiR1ZqZEc5eVd5QnpaV3hsWTNSdmNpNXNaVzVuZEdnZ0xTQXhJRjBnUFQwOUlGd2lQbHdpSUNZbVhHNWNkRngwWEhSY2RITmxiR1ZqZEc5eUxteGxibWQwYUNBK1BTQXpJQ2tnZTF4dVhHNWNkRngwWEhSY2RDOHZJRUZ6YzNWdFpTQjBhR0YwSUhOMGNtbHVaM01nZEdoaGRDQnpkR0Z5ZENCaGJtUWdaVzVrSUhkcGRHZ2dQRDRnWVhKbElFaFVUVXdnWVc1a0lITnJhWEFnZEdobElISmxaMlY0SUdOb1pXTnJYRzVjZEZ4MFhIUmNkRzFoZEdOb0lEMGdXeUJ1ZFd4c0xDQnpaV3hsWTNSdmNpd2diblZzYkNCZE8xeHVYRzVjZEZ4MFhIUjlJR1ZzYzJVZ2UxeHVYSFJjZEZ4MFhIUnRZWFJqYUNBOUlISnhkV2xqYTBWNGNISXVaWGhsWXlnZ2MyVnNaV04wYjNJZ0tUdGNibHgwWEhSY2RIMWNibHh1WEhSY2RGeDBMeThnVFdGMFkyZ2dhSFJ0YkNCdmNpQnRZV3RsSUhOMWNtVWdibThnWTI5dWRHVjRkQ0JwY3lCemNHVmphV1pwWldRZ1ptOXlJQ05wWkZ4dVhIUmNkRngwYVdZZ0tDQnRZWFJqYUNBbUppQW9JRzFoZEdOb1d5QXhJRjBnZkh3Z0lXTnZiblJsZUhRZ0tTQXBJSHRjYmx4dVhIUmNkRngwWEhRdkx5QklRVTVFVEVVNklDUW9hSFJ0YkNrZ0xUNGdKQ2hoY25KaGVTbGNibHgwWEhSY2RGeDBhV1lnS0NCdFlYUmphRnNnTVNCZElDa2dlMXh1WEhSY2RGeDBYSFJjZEdOdmJuUmxlSFFnUFNCamIyNTBaWGgwSUdsdWMzUmhibU5sYjJZZ2FsRjFaWEo1SUQ4Z1kyOXVkR1Y0ZEZzZ01DQmRJRG9nWTI5dWRHVjRkRHRjYmx4dVhIUmNkRngwWEhSY2RDOHZJRTl3ZEdsdmJpQjBieUJ5ZFc0Z2MyTnlhWEIwY3lCcGN5QjBjblZsSUdadmNpQmlZV05yTFdOdmJYQmhkRnh1WEhSY2RGeDBYSFJjZEM4dklFbHVkR1Z1ZEdsdmJtRnNiSGtnYkdWMElIUm9aU0JsY25KdmNpQmlaU0IwYUhKdmQyNGdhV1lnY0dGeWMyVklWRTFNSUdseklHNXZkQ0J3Y21WelpXNTBYRzVjZEZ4MFhIUmNkRngwYWxGMVpYSjVMbTFsY21kbEtDQjBhR2x6TENCcVVYVmxjbmt1Y0dGeWMyVklWRTFNS0Z4dVhIUmNkRngwWEhSY2RGeDBiV0YwWTJoYklERWdYU3hjYmx4MFhIUmNkRngwWEhSY2RHTnZiblJsZUhRZ0ppWWdZMjl1ZEdWNGRDNXViMlJsVkhsd1pTQS9JR052Ym5SbGVIUXViM2R1WlhKRWIyTjFiV1Z1ZENCOGZDQmpiMjUwWlhoMElEb2daRzlqZFcxbGJuUXNYRzVjZEZ4MFhIUmNkRngwWEhSMGNuVmxYRzVjZEZ4MFhIUmNkRngwS1NBcE8xeHVYRzVjZEZ4MFhIUmNkRngwTHk4Z1NFRk9SRXhGT2lBa0tHaDBiV3dzSUhCeWIzQnpLVnh1WEhSY2RGeDBYSFJjZEdsbUlDZ2djbk5wYm1kc1pWUmhaeTUwWlhOMEtDQnRZWFJqYUZzZ01TQmRJQ2tnSmlZZ2FsRjFaWEo1TG1selVHeGhhVzVQWW1wbFkzUW9JR052Ym5SbGVIUWdLU0FwSUh0Y2JseDBYSFJjZEZ4MFhIUmNkR1p2Y2lBb0lHMWhkR05vSUdsdUlHTnZiblJsZUhRZ0tTQjdYRzVjYmx4MFhIUmNkRngwWEhSY2RGeDBMeThnVUhKdmNHVnlkR2xsY3lCdlppQmpiMjUwWlhoMElHRnlaU0JqWVd4c1pXUWdZWE1nYldWMGFHOWtjeUJwWmlCd2IzTnphV0pzWlZ4dVhIUmNkRngwWEhSY2RGeDBYSFJwWmlBb0lHbHpSblZ1WTNScGIyNG9JSFJvYVhOYklHMWhkR05vSUYwZ0tTQXBJSHRjYmx4MFhIUmNkRngwWEhSY2RGeDBYSFIwYUdseld5QnRZWFJqYUNCZEtDQmpiMjUwWlhoMFd5QnRZWFJqYUNCZElDazdYRzVjYmx4MFhIUmNkRngwWEhSY2RGeDBMeThnTGk0dVlXNWtJRzkwYUdWeWQybHpaU0J6WlhRZ1lYTWdZWFIwY21saWRYUmxjMXh1WEhSY2RGeDBYSFJjZEZ4MFhIUjlJR1ZzYzJVZ2UxeHVYSFJjZEZ4MFhIUmNkRngwWEhSY2RIUm9hWE11WVhSMGNpZ2diV0YwWTJnc0lHTnZiblJsZUhSYklHMWhkR05vSUYwZ0tUdGNibHgwWEhSY2RGeDBYSFJjZEZ4MGZWeHVYSFJjZEZ4MFhIUmNkRngwZlZ4dVhIUmNkRngwWEhSY2RIMWNibHh1WEhSY2RGeDBYSFJjZEhKbGRIVnliaUIwYUdsek8xeHVYRzVjZEZ4MFhIUmNkQzh2SUVoQlRrUk1SVG9nSkNnamFXUXBYRzVjZEZ4MFhIUmNkSDBnWld4elpTQjdYRzVjZEZ4MFhIUmNkRngwWld4bGJTQTlJR1J2WTNWdFpXNTBMbWRsZEVWc1pXMWxiblJDZVVsa0tDQnRZWFJqYUZzZ01pQmRJQ2s3WEc1Y2JseDBYSFJjZEZ4MFhIUnBaaUFvSUdWc1pXMGdLU0I3WEc1Y2JseDBYSFJjZEZ4MFhIUmNkQzh2SUVsdWFtVmpkQ0IwYUdVZ1pXeGxiV1Z1ZENCa2FYSmxZM1JzZVNCcGJuUnZJSFJvWlNCcVVYVmxjbmtnYjJKcVpXTjBYRzVjZEZ4MFhIUmNkRngwWEhSMGFHbHpXeUF3SUYwZ1BTQmxiR1Z0TzF4dVhIUmNkRngwWEhSY2RGeDBkR2hwY3k1c1pXNW5kR2dnUFNBeE8xeHVYSFJjZEZ4MFhIUmNkSDFjYmx4MFhIUmNkRngwWEhSeVpYUjFjbTRnZEdocGN6dGNibHgwWEhSY2RGeDBmVnh1WEc1Y2RGeDBYSFF2THlCSVFVNUVURVU2SUNRb1pYaHdjaXdnSkNndUxpNHBLVnh1WEhSY2RGeDBmU0JsYkhObElHbG1JQ2dnSVdOdmJuUmxlSFFnZkh3Z1kyOXVkR1Y0ZEM1cWNYVmxjbmtnS1NCN1hHNWNkRngwWEhSY2RISmxkSFZ5YmlBb0lHTnZiblJsZUhRZ2ZId2djbTl2ZENBcExtWnBibVFvSUhObGJHVmpkRzl5SUNrN1hHNWNibHgwWEhSY2RDOHZJRWhCVGtSTVJUb2dKQ2hsZUhCeUxDQmpiMjUwWlhoMEtWeHVYSFJjZEZ4MEx5OGdLSGRvYVdOb0lHbHpJR3AxYzNRZ1pYRjFhWFpoYkdWdWRDQjBiem9nSkNoamIyNTBaWGgwS1M1bWFXNWtLR1Y0Y0hJcFhHNWNkRngwWEhSOUlHVnNjMlVnZTF4dVhIUmNkRngwWEhSeVpYUjFjbTRnZEdocGN5NWpiMjV6ZEhKMVkzUnZjaWdnWTI5dWRHVjRkQ0FwTG1acGJtUW9JSE5sYkdWamRHOXlJQ2s3WEc1Y2RGeDBYSFI5WEc1Y2JseDBYSFF2THlCSVFVNUVURVU2SUNRb1JFOU5SV3hsYldWdWRDbGNibHgwWEhSOUlHVnNjMlVnYVdZZ0tDQnpaV3hsWTNSdmNpNXViMlJsVkhsd1pTQXBJSHRjYmx4MFhIUmNkSFJvYVhOYklEQWdYU0E5SUhObGJHVmpkRzl5TzF4dVhIUmNkRngwZEdocGN5NXNaVzVuZEdnZ1BTQXhPMXh1WEhSY2RGeDBjbVYwZFhKdUlIUm9hWE03WEc1Y2JseDBYSFF2THlCSVFVNUVURVU2SUNRb1puVnVZM1JwYjI0cFhHNWNkRngwTHk4Z1UyaHZjblJqZFhRZ1ptOXlJR1J2WTNWdFpXNTBJSEpsWVdSNVhHNWNkRngwZlNCbGJITmxJR2xtSUNnZ2FYTkdkVzVqZEdsdmJpZ2djMlZzWldOMGIzSWdLU0FwSUh0Y2JseDBYSFJjZEhKbGRIVnliaUJ5YjI5MExuSmxZV1I1SUNFOVBTQjFibVJsWm1sdVpXUWdQMXh1WEhSY2RGeDBYSFJ5YjI5MExuSmxZV1I1S0NCelpXeGxZM1J2Y2lBcElEcGNibHh1WEhSY2RGeDBYSFF2THlCRmVHVmpkWFJsSUdsdGJXVmthV0YwWld4NUlHbG1JSEpsWVdSNUlHbHpJRzV2ZENCd2NtVnpaVzUwWEc1Y2RGeDBYSFJjZEhObGJHVmpkRzl5S0NCcVVYVmxjbmtnS1R0Y2JseDBYSFI5WEc1Y2JseDBYSFJ5WlhSMWNtNGdhbEYxWlhKNUxtMWhhMlZCY25KaGVTZ2djMlZzWldOMGIzSXNJSFJvYVhNZ0tUdGNibHgwZlR0Y2JseHVMeThnUjJsMlpTQjBhR1VnYVc1cGRDQm1kVzVqZEdsdmJpQjBhR1VnYWxGMVpYSjVJSEJ5YjNSdmRIbHdaU0JtYjNJZ2JHRjBaWElnYVc1emRHRnVkR2xoZEdsdmJseHVhVzVwZEM1d2NtOTBiM1I1Y0dVZ1BTQnFVWFZsY25rdVptNDdYRzVjYmk4dklFbHVhWFJwWVd4cGVtVWdZMlZ1ZEhKaGJDQnlaV1psY21WdVkyVmNibkp2YjNScVVYVmxjbmtnUFNCcVVYVmxjbmtvSUdSdlkzVnRaVzUwSUNrN1hHNWNibHh1ZG1GeUlISndZWEpsYm5SemNISmxkaUE5SUM5ZUtEODZjR0Z5Wlc1MGMzeHdjbVYyS0Q4NlZXNTBhV3g4UVd4c0tTa3ZMRnh1WEc1Y2RDOHZJRTFsZEdodlpITWdaM1ZoY21GdWRHVmxaQ0IwYnlCd2NtOWtkV05sSUdFZ2RXNXBjWFZsSUhObGRDQjNhR1Z1SUhOMFlYSjBhVzVuSUdaeWIyMGdZU0IxYm1seGRXVWdjMlYwWEc1Y2RHZDFZWEpoYm5SbFpXUlZibWx4ZFdVZ1BTQjdYRzVjZEZ4MFkyaHBiR1J5Wlc0NklIUnlkV1VzWEc1Y2RGeDBZMjl1ZEdWdWRITTZJSFJ5ZFdVc1hHNWNkRngwYm1WNGREb2dkSEoxWlN4Y2JseDBYSFJ3Y21WMk9pQjBjblZsWEc1Y2RIMDdYRzVjYm1wUmRXVnllUzVtYmk1bGVIUmxibVFvSUh0Y2JseDBhR0Z6T2lCbWRXNWpkR2x2YmlnZ2RHRnlaMlYwSUNrZ2UxeHVYSFJjZEhaaGNpQjBZWEpuWlhSeklEMGdhbEYxWlhKNUtDQjBZWEpuWlhRc0lIUm9hWE1nS1N4Y2JseDBYSFJjZEd3Z1BTQjBZWEpuWlhSekxteGxibWQwYUR0Y2JseHVYSFJjZEhKbGRIVnliaUIwYUdsekxtWnBiSFJsY2lnZ1puVnVZM1JwYjI0b0tTQjdYRzVjZEZ4MFhIUjJZWElnYVNBOUlEQTdYRzVjZEZ4MFhIUm1iM0lnS0NBN0lHa2dQQ0JzT3lCcEt5c2dLU0I3WEc1Y2RGeDBYSFJjZEdsbUlDZ2dhbEYxWlhKNUxtTnZiblJoYVc1ektDQjBhR2x6TENCMFlYSm5aWFJ6V3lCcElGMGdLU0FwSUh0Y2JseDBYSFJjZEZ4MFhIUnlaWFIxY200Z2RISjFaVHRjYmx4MFhIUmNkRngwZlZ4dVhIUmNkRngwZlZ4dVhIUmNkSDBnS1R0Y2JseDBmU3hjYmx4dVhIUmpiRzl6WlhOME9pQm1kVzVqZEdsdmJpZ2djMlZzWldOMGIzSnpMQ0JqYjI1MFpYaDBJQ2tnZTF4dVhIUmNkSFpoY2lCamRYSXNYRzVjZEZ4MFhIUnBJRDBnTUN4Y2JseDBYSFJjZEd3Z1BTQjBhR2x6TG14bGJtZDBhQ3hjYmx4MFhIUmNkRzFoZEdOb1pXUWdQU0JiWFN4Y2JseDBYSFJjZEhSaGNtZGxkSE1nUFNCMGVYQmxiMllnYzJWc1pXTjBiM0p6SUNFOVBTQmNJbk4wY21sdVoxd2lJQ1ltSUdwUmRXVnllU2dnYzJWc1pXTjBiM0p6SUNrN1hHNWNibHgwWEhRdkx5QlFiM05wZEdsdmJtRnNJSE5sYkdWamRHOXljeUJ1WlhabGNpQnRZWFJqYUN3Z2MybHVZMlVnZEdobGNtVW5jeUJ1YnlCZmMyVnNaV04wYVc5dVh5QmpiMjUwWlhoMFhHNWNkRngwYVdZZ0tDQWhjbTVsWldSelEyOXVkR1Y0ZEM1MFpYTjBLQ0J6Wld4bFkzUnZjbk1nS1NBcElIdGNibHgwWEhSY2RHWnZjaUFvSURzZ2FTQThJR3c3SUdrckt5QXBJSHRjYmx4MFhIUmNkRngwWm05eUlDZ2dZM1Z5SUQwZ2RHaHBjMXNnYVNCZE95QmpkWElnSmlZZ1kzVnlJQ0U5UFNCamIyNTBaWGgwT3lCamRYSWdQU0JqZFhJdWNHRnlaVzUwVG05a1pTQXBJSHRjYmx4dVhIUmNkRngwWEhSY2RDOHZJRUZzZDJGNWN5QnphMmx3SUdSdlkzVnRaVzUwSUdaeVlXZHRaVzUwYzF4dVhIUmNkRngwWEhSY2RHbG1JQ2dnWTNWeUxtNXZaR1ZVZVhCbElEd2dNVEVnSmlZZ0tDQjBZWEpuWlhSeklEOWNibHgwWEhSY2RGeDBYSFJjZEhSaGNtZGxkSE11YVc1a1pYZ29JR04xY2lBcElENGdMVEVnT2x4dVhHNWNkRngwWEhSY2RGeDBYSFF2THlCRWIyNG5kQ0J3WVhOeklHNXZiaTFsYkdWdFpXNTBjeUIwYnlCVGFYcDZiR1ZjYmx4MFhIUmNkRngwWEhSY2RHTjFjaTV1YjJSbFZIbHdaU0E5UFQwZ01TQW1KbHh1WEhSY2RGeDBYSFJjZEZ4MFhIUnFVWFZsY25rdVptbHVaQzV0WVhSamFHVnpVMlZzWldOMGIzSW9JR04xY2l3Z2MyVnNaV04wYjNKeklDa2dLU0FwSUh0Y2JseHVYSFJjZEZ4MFhIUmNkRngwYldGMFkyaGxaQzV3ZFhOb0tDQmpkWElnS1R0Y2JseDBYSFJjZEZ4MFhIUmNkR0p5WldGck8xeHVYSFJjZEZ4MFhIUmNkSDFjYmx4MFhIUmNkRngwZlZ4dVhIUmNkRngwZlZ4dVhIUmNkSDFjYmx4dVhIUmNkSEpsZEhWeWJpQjBhR2x6TG5CMWMyaFRkR0ZqYXlnZ2JXRjBZMmhsWkM1c1pXNW5kR2dnUGlBeElEOGdhbEYxWlhKNUxuVnVhWEYxWlZOdmNuUW9JRzFoZEdOb1pXUWdLU0E2SUcxaGRHTm9aV1FnS1R0Y2JseDBmU3hjYmx4dVhIUXZMeUJFWlhSbGNtMXBibVVnZEdobElIQnZjMmwwYVc5dUlHOW1JR0Z1SUdWc1pXMWxiblFnZDJsMGFHbHVJSFJvWlNCelpYUmNibHgwYVc1a1pYZzZJR1oxYm1OMGFXOXVLQ0JsYkdWdElDa2dlMXh1WEc1Y2RGeDBMeThnVG04Z1lYSm5kVzFsYm5Rc0lISmxkSFZ5YmlCcGJtUmxlQ0JwYmlCd1lYSmxiblJjYmx4MFhIUnBaaUFvSUNGbGJHVnRJQ2tnZTF4dVhIUmNkRngwY21WMGRYSnVJQ2dnZEdocGMxc2dNQ0JkSUNZbUlIUm9hWE5iSURBZ1hTNXdZWEpsYm5ST2IyUmxJQ2tnUHlCMGFHbHpMbVpwY25OMEtDa3VjSEpsZGtGc2JDZ3BMbXhsYm1kMGFDQTZJQzB4TzF4dVhIUmNkSDFjYmx4dVhIUmNkQzh2SUVsdVpHVjRJR2x1SUhObGJHVmpkRzl5WEc1Y2RGeDBhV1lnS0NCMGVYQmxiMllnWld4bGJTQTlQVDBnWENKemRISnBibWRjSWlBcElIdGNibHgwWEhSY2RISmxkSFZ5YmlCcGJtUmxlRTltTG1OaGJHd29JR3BSZFdWeWVTZ2daV3hsYlNBcExDQjBhR2x6V3lBd0lGMGdLVHRjYmx4MFhIUjlYRzVjYmx4MFhIUXZMeUJNYjJOaGRHVWdkR2hsSUhCdmMybDBhVzl1SUc5bUlIUm9aU0JrWlhOcGNtVmtJR1ZzWlcxbGJuUmNibHgwWEhSeVpYUjFjbTRnYVc1a1pYaFBaaTVqWVd4c0tDQjBhR2x6TEZ4dVhHNWNkRngwWEhRdkx5QkpaaUJwZENCeVpXTmxhWFpsY3lCaElHcFJkV1Z5ZVNCdlltcGxZM1FzSUhSb1pTQm1hWEp6ZENCbGJHVnRaVzUwSUdseklIVnpaV1JjYmx4MFhIUmNkR1ZzWlcwdWFuRjFaWEo1SUQ4Z1pXeGxiVnNnTUNCZElEb2daV3hsYlZ4dVhIUmNkQ2s3WEc1Y2RIMHNYRzVjYmx4MFlXUmtPaUJtZFc1amRHbHZiaWdnYzJWc1pXTjBiM0lzSUdOdmJuUmxlSFFnS1NCN1hHNWNkRngwY21WMGRYSnVJSFJvYVhNdWNIVnphRk4wWVdOcktGeHVYSFJjZEZ4MGFsRjFaWEo1TG5WdWFYRjFaVk52Y25Rb1hHNWNkRngwWEhSY2RHcFJkV1Z5ZVM1dFpYSm5aU2dnZEdocGN5NW5aWFFvS1N3Z2FsRjFaWEo1S0NCelpXeGxZM1J2Y2l3Z1kyOXVkR1Y0ZENBcElDbGNibHgwWEhSY2RDbGNibHgwWEhRcE8xeHVYSFI5TEZ4dVhHNWNkR0ZrWkVKaFkyczZJR1oxYm1OMGFXOXVLQ0J6Wld4bFkzUnZjaUFwSUh0Y2JseDBYSFJ5WlhSMWNtNGdkR2hwY3k1aFpHUW9JSE5sYkdWamRHOXlJRDA5SUc1MWJHd2dQMXh1WEhSY2RGeDBkR2hwY3k1d2NtVjJUMkpxWldOMElEb2dkR2hwY3k1d2NtVjJUMkpxWldOMExtWnBiSFJsY2lnZ2MyVnNaV04wYjNJZ0tWeHVYSFJjZENrN1hHNWNkSDFjYm4wZ0tUdGNibHh1Wm5WdVkzUnBiMjRnYzJsaWJHbHVaeWdnWTNWeUxDQmthWElnS1NCN1hHNWNkSGRvYVd4bElDZ2dLQ0JqZFhJZ1BTQmpkWEpiSUdScGNpQmRJQ2tnSmlZZ1kzVnlMbTV2WkdWVWVYQmxJQ0U5UFNBeElDa2dlMzFjYmx4MGNtVjBkWEp1SUdOMWNqdGNibjFjYmx4dWFsRjFaWEo1TG1WaFkyZ29JSHRjYmx4MGNHRnlaVzUwT2lCbWRXNWpkR2x2YmlnZ1pXeGxiU0FwSUh0Y2JseDBYSFIyWVhJZ2NHRnlaVzUwSUQwZ1pXeGxiUzV3WVhKbGJuUk9iMlJsTzF4dVhIUmNkSEpsZEhWeWJpQndZWEpsYm5RZ0ppWWdjR0Z5Wlc1MExtNXZaR1ZVZVhCbElDRTlQU0F4TVNBL0lIQmhjbVZ1ZENBNklHNTFiR3c3WEc1Y2RIMHNYRzVjZEhCaGNtVnVkSE02SUdaMWJtTjBhVzl1S0NCbGJHVnRJQ2tnZTF4dVhIUmNkSEpsZEhWeWJpQmthWElvSUdWc1pXMHNJRndpY0dGeVpXNTBUbTlrWlZ3aUlDazdYRzVjZEgwc1hHNWNkSEJoY21WdWRITlZiblJwYkRvZ1puVnVZM1JwYjI0b0lHVnNaVzBzSUY5cExDQjFiblJwYkNBcElIdGNibHgwWEhSeVpYUjFjbTRnWkdseUtDQmxiR1Z0TENCY0luQmhjbVZ1ZEU1dlpHVmNJaXdnZFc1MGFXd2dLVHRjYmx4MGZTeGNibHgwYm1WNGREb2dablZ1WTNScGIyNG9JR1ZzWlcwZ0tTQjdYRzVjZEZ4MGNtVjBkWEp1SUhOcFlteHBibWNvSUdWc1pXMHNJRndpYm1WNGRGTnBZbXhwYm1kY0lpQXBPMXh1WEhSOUxGeHVYSFJ3Y21WMk9pQm1kVzVqZEdsdmJpZ2daV3hsYlNBcElIdGNibHgwWEhSeVpYUjFjbTRnYzJsaWJHbHVaeWdnWld4bGJTd2dYQ0p3Y21WMmFXOTFjMU5wWW14cGJtZGNJaUFwTzF4dVhIUjlMRnh1WEhSdVpYaDBRV3hzT2lCbWRXNWpkR2x2YmlnZ1pXeGxiU0FwSUh0Y2JseDBYSFJ5WlhSMWNtNGdaR2x5S0NCbGJHVnRMQ0JjSW01bGVIUlRhV0pzYVc1blhDSWdLVHRjYmx4MGZTeGNibHgwY0hKbGRrRnNiRG9nWm5WdVkzUnBiMjRvSUdWc1pXMGdLU0I3WEc1Y2RGeDBjbVYwZFhKdUlHUnBjaWdnWld4bGJTd2dYQ0p3Y21WMmFXOTFjMU5wWW14cGJtZGNJaUFwTzF4dVhIUjlMRnh1WEhSdVpYaDBWVzUwYVd3NklHWjFibU4wYVc5dUtDQmxiR1Z0TENCZmFTd2dkVzUwYVd3Z0tTQjdYRzVjZEZ4MGNtVjBkWEp1SUdScGNpZ2daV3hsYlN3Z1hDSnVaWGgwVTJsaWJHbHVaMXdpTENCMWJuUnBiQ0FwTzF4dVhIUjlMRnh1WEhSd2NtVjJWVzUwYVd3NklHWjFibU4wYVc5dUtDQmxiR1Z0TENCZmFTd2dkVzUwYVd3Z0tTQjdYRzVjZEZ4MGNtVjBkWEp1SUdScGNpZ2daV3hsYlN3Z1hDSndjbVYyYVc5MWMxTnBZbXhwYm1kY0lpd2dkVzUwYVd3Z0tUdGNibHgwZlN4Y2JseDBjMmxpYkdsdVozTTZJR1oxYm1OMGFXOXVLQ0JsYkdWdElDa2dlMXh1WEhSY2RISmxkSFZ5YmlCemFXSnNhVzVuY3lnZ0tDQmxiR1Z0TG5CaGNtVnVkRTV2WkdVZ2ZId2dlMzBnS1M1bWFYSnpkRU5vYVd4a0xDQmxiR1Z0SUNrN1hHNWNkSDBzWEc1Y2RHTm9hV3hrY21WdU9pQm1kVzVqZEdsdmJpZ2daV3hsYlNBcElIdGNibHgwWEhSeVpYUjFjbTRnYzJsaWJHbHVaM01vSUdWc1pXMHVabWx5YzNSRGFHbHNaQ0FwTzF4dVhIUjlMRnh1WEhSamIyNTBaVzUwY3pvZ1puVnVZM1JwYjI0b0lHVnNaVzBnS1NCN1hHNWNkRngwYVdZZ0tDQmxiR1Z0TG1OdmJuUmxiblJFYjJOMWJXVnVkQ0FoUFNCdWRXeHNJQ1ltWEc1Y2JseDBYSFJjZEM4dklGTjFjSEJ2Y25RNklFbEZJREV4SzF4dVhIUmNkRngwTHk4Z1BHOWlhbVZqZEQ0Z1pXeGxiV1Z1ZEhNZ2QybDBhQ0J1YnlCZ1pHRjBZV0FnWVhSMGNtbGlkWFJsSUdoaGN5QmhiaUJ2WW1wbFkzUmNibHgwWEhSY2RDOHZJR0JqYjI1MFpXNTBSRzlqZFcxbGJuUmdJSGRwZEdnZ1lTQmdiblZzYkdBZ2NISnZkRzkwZVhCbExseHVYSFJjZEZ4MFoyVjBVSEp2ZEc4b0lHVnNaVzB1WTI5dWRHVnVkRVJ2WTNWdFpXNTBJQ2tnS1NCN1hHNWNibHgwWEhSY2RISmxkSFZ5YmlCbGJHVnRMbU52Ym5SbGJuUkViMk4xYldWdWREdGNibHgwWEhSOVhHNWNibHgwWEhRdkx5QlRkWEJ3YjNKME9pQkpSU0E1SUMwZ01URWdiMjVzZVN3Z2FVOVRJRGNnYjI1c2VTd2dRVzVrY205cFpDQkNjbTkzYzJWeUlEdzlOQzR6SUc5dWJIbGNibHgwWEhRdkx5QlVjbVZoZENCMGFHVWdkR1Z0Y0d4aGRHVWdaV3hsYldWdWRDQmhjeUJoSUhKbFozVnNZWElnYjI1bElHbHVJR0p5YjNkelpYSnpJSFJvWVhSY2JseDBYSFF2THlCa2IyNG5kQ0J6ZFhCd2IzSjBJR2wwTGx4dVhIUmNkR2xtSUNnZ2JtOWtaVTVoYldVb0lHVnNaVzBzSUZ3aWRHVnRjR3hoZEdWY0lpQXBJQ2tnZTF4dVhIUmNkRngwWld4bGJTQTlJR1ZzWlcwdVkyOXVkR1Z1ZENCOGZDQmxiR1Z0TzF4dVhIUmNkSDFjYmx4dVhIUmNkSEpsZEhWeWJpQnFVWFZsY25rdWJXVnlaMlVvSUZ0ZExDQmxiR1Z0TG1Ob2FXeGtUbTlrWlhNZ0tUdGNibHgwZlZ4dWZTd2dablZ1WTNScGIyNG9JRzVoYldVc0lHWnVJQ2tnZTF4dVhIUnFVWFZsY25rdVptNWJJRzVoYldVZ1hTQTlJR1oxYm1OMGFXOXVLQ0IxYm5ScGJDd2djMlZzWldOMGIzSWdLU0I3WEc1Y2RGeDBkbUZ5SUcxaGRHTm9aV1FnUFNCcVVYVmxjbmt1YldGd0tDQjBhR2x6TENCbWJpd2dkVzUwYVd3Z0tUdGNibHh1WEhSY2RHbG1JQ2dnYm1GdFpTNXpiR2xqWlNnZ0xUVWdLU0FoUFQwZ1hDSlZiblJwYkZ3aUlDa2dlMXh1WEhSY2RGeDBjMlZzWldOMGIzSWdQU0IxYm5ScGJEdGNibHgwWEhSOVhHNWNibHgwWEhScFppQW9JSE5sYkdWamRHOXlJQ1ltSUhSNWNHVnZaaUJ6Wld4bFkzUnZjaUE5UFQwZ1hDSnpkSEpwYm1kY0lpQXBJSHRjYmx4MFhIUmNkRzFoZEdOb1pXUWdQU0JxVVhWbGNua3VabWxzZEdWeUtDQnpaV3hsWTNSdmNpd2diV0YwWTJobFpDQXBPMXh1WEhSY2RIMWNibHh1WEhSY2RHbG1JQ2dnZEdocGN5NXNaVzVuZEdnZ1BpQXhJQ2tnZTF4dVhHNWNkRngwWEhRdkx5QlNaVzF2ZG1VZ1pIVndiR2xqWVhSbGMxeHVYSFJjZEZ4MGFXWWdLQ0FoWjNWaGNtRnVkR1ZsWkZWdWFYRjFaVnNnYm1GdFpTQmRJQ2tnZTF4dVhIUmNkRngwWEhScVVYVmxjbmt1ZFc1cGNYVmxVMjl5ZENnZ2JXRjBZMmhsWkNBcE8xeHVYSFJjZEZ4MGZWeHVYRzVjZEZ4MFhIUXZMeUJTWlhabGNuTmxJRzl5WkdWeUlHWnZjaUJ3WVhKbGJuUnpLaUJoYm1RZ2NISmxkaTFrWlhKcGRtRjBhWFpsYzF4dVhIUmNkRngwYVdZZ0tDQnljR0Z5Wlc1MGMzQnlaWFl1ZEdWemRDZ2dibUZ0WlNBcElDa2dlMXh1WEhSY2RGeDBYSFJ0WVhSamFHVmtMbkpsZG1WeWMyVW9LVHRjYmx4MFhIUmNkSDFjYmx4MFhIUjlYRzVjYmx4MFhIUnlaWFIxY200Z2RHaHBjeTV3ZFhOb1UzUmhZMnNvSUcxaGRHTm9aV1FnS1R0Y2JseDBmVHRjYm4wZ0tUdGNiblpoY2lCeWJtOTBhSFJ0Ykhkb2FYUmxJRDBnS0NBdlcxNWNYSGd5TUZ4Y2RGeGNjbHhjYmx4Y1psMHJMMmNnS1R0Y2JseHVYRzVjYmk4dklFTnZiblpsY25RZ1UzUnlhVzVuTFdadmNtMWhkSFJsWkNCdmNIUnBiMjV6SUdsdWRHOGdUMkpxWldOMExXWnZjbTFoZEhSbFpDQnZibVZ6WEc1bWRXNWpkR2x2YmlCamNtVmhkR1ZQY0hScGIyNXpLQ0J2Y0hScGIyNXpJQ2tnZTF4dVhIUjJZWElnYjJKcVpXTjBJRDBnZTMwN1hHNWNkR3BSZFdWeWVTNWxZV05vS0NCdmNIUnBiMjV6TG0xaGRHTm9LQ0J5Ym05MGFIUnRiSGRvYVhSbElDa2dmSHdnVzEwc0lHWjFibU4wYVc5dUtDQmZMQ0JtYkdGbklDa2dlMXh1WEhSY2RHOWlhbVZqZEZzZ1pteGhaeUJkSUQwZ2RISjFaVHRjYmx4MGZTQXBPMXh1WEhSeVpYUjFjbTRnYjJKcVpXTjBPMXh1ZlZ4dVhHNHZLbHh1SUNvZ1EzSmxZWFJsSUdFZ1kyRnNiR0poWTJzZ2JHbHpkQ0IxYzJsdVp5QjBhR1VnWm05c2JHOTNhVzVuSUhCaGNtRnRaWFJsY25NNlhHNGdLbHh1SUNwY2RHOXdkR2x2Ym5NNklHRnVJRzl3ZEdsdmJtRnNJR3hwYzNRZ2IyWWdjM0JoWTJVdGMyVndZWEpoZEdWa0lHOXdkR2x2Ym5NZ2RHaGhkQ0IzYVd4c0lHTm9ZVzVuWlNCb2IzZGNiaUFxWEhSY2RGeDBkR2hsSUdOaGJHeGlZV05ySUd4cGMzUWdZbVZvWVhabGN5QnZjaUJoSUcxdmNtVWdkSEpoWkdsMGFXOXVZV3dnYjNCMGFXOXVJRzlpYW1WamRGeHVJQ3BjYmlBcUlFSjVJR1JsWm1GMWJIUWdZU0JqWVd4c1ltRmpheUJzYVhOMElIZHBiR3dnWVdOMElHeHBhMlVnWVc0Z1pYWmxiblFnWTJGc2JHSmhZMnNnYkdsemRDQmhibVFnWTJGdUlHSmxYRzRnS2lCY0ltWnBjbVZrWENJZ2JYVnNkR2x3YkdVZ2RHbHRaWE11WEc0Z0tseHVJQ29nVUc5emMybGliR1VnYjNCMGFXOXVjenBjYmlBcVhHNGdLbHgwYjI1alpUcGNkRngwWEhSM2FXeHNJR1Z1YzNWeVpTQjBhR1VnWTJGc2JHSmhZMnNnYkdsemRDQmpZVzRnYjI1c2VTQmlaU0JtYVhKbFpDQnZibU5sSUNoc2FXdGxJR0VnUkdWbVpYSnlaV1FwWEc0Z0tseHVJQ3BjZEcxbGJXOXllVHBjZEZ4MFhIUjNhV3hzSUd0bFpYQWdkSEpoWTJzZ2IyWWdjSEpsZG1sdmRYTWdkbUZzZFdWeklHRnVaQ0IzYVd4c0lHTmhiR3dnWVc1NUlHTmhiR3hpWVdOcklHRmtaR1ZrWEc0Z0tseDBYSFJjZEZ4MFhIUmhablJsY2lCMGFHVWdiR2x6ZENCb1lYTWdZbVZsYmlCbWFYSmxaQ0J5YVdkb2RDQmhkMkY1SUhkcGRHZ2dkR2hsSUd4aGRHVnpkQ0JjSW0xbGJXOXlhWHBsWkZ3aVhHNGdLbHgwWEhSY2RGeDBYSFIyWVd4MVpYTWdLR3hwYTJVZ1lTQkVaV1psY25KbFpDbGNiaUFxWEc0Z0tseDBkVzVwY1hWbE9seDBYSFJjZEhkcGJHd2daVzV6ZFhKbElHRWdZMkZzYkdKaFkyc2dZMkZ1SUc5dWJIa2dZbVVnWVdSa1pXUWdiMjVqWlNBb2JtOGdaSFZ3YkdsallYUmxJR2x1SUhSb1pTQnNhWE4wS1Z4dUlDcGNiaUFxWEhSemRHOXdUMjVHWVd4elpUcGNkR2x1ZEdWeWNuVndkQ0JqWVd4c2FXNW5jeUIzYUdWdUlHRWdZMkZzYkdKaFkyc2djbVYwZFhKdWN5Qm1ZV3h6WlZ4dUlDcGNiaUFxTDF4dWFsRjFaWEo1TGtOaGJHeGlZV05yY3lBOUlHWjFibU4wYVc5dUtDQnZjSFJwYjI1eklDa2dlMXh1WEc1Y2RDOHZJRU52Ym5abGNuUWdiM0IwYVc5dWN5Qm1jbTl0SUZOMGNtbHVaeTFtYjNKdFlYUjBaV1FnZEc4Z1QySnFaV04wTFdadmNtMWhkSFJsWkNCcFppQnVaV1ZrWldSY2JseDBMeThnS0hkbElHTm9aV05ySUdsdUlHTmhZMmhsSUdacGNuTjBLVnh1WEhSdmNIUnBiMjV6SUQwZ2RIbHdaVzltSUc5d2RHbHZibk1nUFQwOUlGd2ljM1J5YVc1blhDSWdQMXh1WEhSY2RHTnlaV0YwWlU5d2RHbHZibk1vSUc5d2RHbHZibk1nS1NBNlhHNWNkRngwYWxGMVpYSjVMbVY0ZEdWdVpDZ2dlMzBzSUc5d2RHbHZibk1nS1R0Y2JseHVYSFIyWVhJZ0x5OGdSbXhoWnlCMGJ5QnJibTkzSUdsbUlHeHBjM1FnYVhNZ1kzVnljbVZ1ZEd4NUlHWnBjbWx1WjF4dVhIUmNkR1pwY21sdVp5eGNibHh1WEhSY2RDOHZJRXhoYzNRZ1ptbHlaU0IyWVd4MVpTQm1iM0lnYm05dUxXWnZjbWRsZEhSaFlteGxJR3hwYzNSelhHNWNkRngwYldWdGIzSjVMRnh1WEc1Y2RGeDBMeThnUm14aFp5QjBieUJyYm05M0lHbG1JR3hwYzNRZ2QyRnpJR0ZzY21WaFpIa2dabWx5WldSY2JseDBYSFJtYVhKbFpDeGNibHh1WEhSY2RDOHZJRVpzWVdjZ2RHOGdjSEpsZG1WdWRDQm1hWEpwYm1kY2JseDBYSFJzYjJOclpXUXNYRzVjYmx4MFhIUXZMeUJCWTNSMVlXd2dZMkZzYkdKaFkyc2diR2x6ZEZ4dVhIUmNkR3hwYzNRZ1BTQmJYU3hjYmx4dVhIUmNkQzh2SUZGMVpYVmxJRzltSUdWNFpXTjFkR2x2YmlCa1lYUmhJR1p2Y2lCeVpYQmxZWFJoWW14bElHeHBjM1J6WEc1Y2RGeDBjWFZsZFdVZ1BTQmJYU3hjYmx4dVhIUmNkQzh2SUVsdVpHVjRJRzltSUdOMWNuSmxiblJzZVNCbWFYSnBibWNnWTJGc2JHSmhZMnNnS0cxdlpHbG1hV1ZrSUdKNUlHRmtaQzl5WlcxdmRtVWdZWE1nYm1WbFpHVmtLVnh1WEhSY2RHWnBjbWx1WjBsdVpHVjRJRDBnTFRFc1hHNWNibHgwWEhRdkx5QkdhWEpsSUdOaGJHeGlZV05yYzF4dVhIUmNkR1pwY21VZ1BTQm1kVzVqZEdsdmJpZ3BJSHRjYmx4dVhIUmNkRngwTHk4Z1JXNW1iM0pqWlNCemFXNW5iR1V0Wm1seWFXNW5YRzVjZEZ4MFhIUnNiMk5yWldRZ1BTQnNiMk5yWldRZ2ZId2diM0IwYVc5dWN5NXZibU5sTzF4dVhHNWNkRngwWEhRdkx5QkZlR1ZqZFhSbElHTmhiR3hpWVdOcmN5Qm1iM0lnWVd4c0lIQmxibVJwYm1jZ1pYaGxZM1YwYVc5dWN5eGNibHgwWEhSY2RDOHZJSEpsYzNCbFkzUnBibWNnWm1seWFXNW5TVzVrWlhnZ2IzWmxjbkpwWkdWeklHRnVaQ0J5ZFc1MGFXMWxJR05vWVc1blpYTmNibHgwWEhSY2RHWnBjbVZrSUQwZ1ptbHlhVzVuSUQwZ2RISjFaVHRjYmx4MFhIUmNkR1p2Y2lBb0lEc2djWFZsZFdVdWJHVnVaM1JvT3lCbWFYSnBibWRKYm1SbGVDQTlJQzB4SUNrZ2UxeHVYSFJjZEZ4MFhIUnRaVzF2Y25rZ1BTQnhkV1YxWlM1emFHbG1kQ2dwTzF4dVhIUmNkRngwWEhSM2FHbHNaU0FvSUNzclptbHlhVzVuU1c1a1pYZ2dQQ0JzYVhOMExteGxibWQwYUNBcElIdGNibHh1WEhSY2RGeDBYSFJjZEM4dklGSjFiaUJqWVd4c1ltRmpheUJoYm1RZ1kyaGxZMnNnWm05eUlHVmhjbXg1SUhSbGNtMXBibUYwYVc5dVhHNWNkRngwWEhSY2RGeDBhV1lnS0NCc2FYTjBXeUJtYVhKcGJtZEpibVJsZUNCZExtRndjR3g1S0NCdFpXMXZjbmxiSURBZ1hTd2diV1Z0YjNKNVd5QXhJRjBnS1NBOVBUMGdabUZzYzJVZ0ppWmNibHgwWEhSY2RGeDBYSFJjZEc5d2RHbHZibk11YzNSdmNFOXVSbUZzYzJVZ0tTQjdYRzVjYmx4MFhIUmNkRngwWEhSY2RDOHZJRXAxYlhBZ2RHOGdaVzVrSUdGdVpDQm1iM0puWlhRZ2RHaGxJR1JoZEdFZ2MyOGdMbUZrWkNCa2IyVnpiaWQwSUhKbExXWnBjbVZjYmx4MFhIUmNkRngwWEhSY2RHWnBjbWx1WjBsdVpHVjRJRDBnYkdsemRDNXNaVzVuZEdnN1hHNWNkRngwWEhSY2RGeDBYSFJ0WlcxdmNua2dQU0JtWVd4elpUdGNibHgwWEhSY2RGeDBYSFI5WEc1Y2RGeDBYSFJjZEgxY2JseDBYSFJjZEgxY2JseHVYSFJjZEZ4MEx5OGdSbTl5WjJWMElIUm9aU0JrWVhSaElHbG1JSGRsSjNKbElHUnZibVVnZDJsMGFDQnBkRnh1WEhSY2RGeDBhV1lnS0NBaGIzQjBhVzl1Y3k1dFpXMXZjbmtnS1NCN1hHNWNkRngwWEhSY2RHMWxiVzl5ZVNBOUlHWmhiSE5sTzF4dVhIUmNkRngwZlZ4dVhHNWNkRngwWEhSbWFYSnBibWNnUFNCbVlXeHpaVHRjYmx4dVhIUmNkRngwTHk4Z1EyeGxZVzRnZFhBZ2FXWWdkMlVuY21VZ1pHOXVaU0JtYVhKcGJtY2dabTl5SUdkdmIyUmNibHgwWEhSY2RHbG1JQ2dnYkc5amEyVmtJQ2tnZTF4dVhHNWNkRngwWEhSY2RDOHZJRXRsWlhBZ1lXNGdaVzF3ZEhrZ2JHbHpkQ0JwWmlCM1pTQm9ZWFpsSUdSaGRHRWdabTl5SUdaMWRIVnlaU0JoWkdRZ1kyRnNiSE5jYmx4MFhIUmNkRngwYVdZZ0tDQnRaVzF2Y25rZ0tTQjdYRzVjZEZ4MFhIUmNkRngwYkdsemRDQTlJRnRkTzF4dVhHNWNkRngwWEhSY2RDOHZJRTkwYUdWeWQybHpaU3dnZEdocGN5QnZZbXBsWTNRZ2FYTWdjM0JsYm5SY2JseDBYSFJjZEZ4MGZTQmxiSE5sSUh0Y2JseDBYSFJjZEZ4MFhIUnNhWE4wSUQwZ1hDSmNJanRjYmx4MFhIUmNkRngwZlZ4dVhIUmNkRngwZlZ4dVhIUmNkSDBzWEc1Y2JseDBYSFF2THlCQlkzUjFZV3dnUTJGc2JHSmhZMnR6SUc5aWFtVmpkRnh1WEhSY2RITmxiR1lnUFNCN1hHNWNibHgwWEhSY2RDOHZJRUZrWkNCaElHTmhiR3hpWVdOcklHOXlJR0VnWTI5c2JHVmpkR2x2YmlCdlppQmpZV3hzWW1GamEzTWdkRzhnZEdobElHeHBjM1JjYmx4MFhIUmNkR0ZrWkRvZ1puVnVZM1JwYjI0b0tTQjdYRzVjZEZ4MFhIUmNkR2xtSUNnZ2JHbHpkQ0FwSUh0Y2JseHVYSFJjZEZ4MFhIUmNkQzh2SUVsbUlIZGxJR2hoZG1VZ2JXVnRiM0o1SUdaeWIyMGdZU0J3WVhOMElISjFiaXdnZDJVZ2MyaHZkV3hrSUdacGNtVWdZV1owWlhJZ1lXUmthVzVuWEc1Y2RGeDBYSFJjZEZ4MGFXWWdLQ0J0WlcxdmNua2dKaVlnSVdacGNtbHVaeUFwSUh0Y2JseDBYSFJjZEZ4MFhIUmNkR1pwY21sdVowbHVaR1Y0SUQwZ2JHbHpkQzVzWlc1bmRHZ2dMU0F4TzF4dVhIUmNkRngwWEhSY2RGeDBjWFZsZFdVdWNIVnphQ2dnYldWdGIzSjVJQ2s3WEc1Y2RGeDBYSFJjZEZ4MGZWeHVYRzVjZEZ4MFhIUmNkRngwS0NCbWRXNWpkR2x2YmlCaFpHUW9JR0Z5WjNNZ0tTQjdYRzVjZEZ4MFhIUmNkRngwWEhScVVYVmxjbmt1WldGamFDZ2dZWEpuY3l3Z1puVnVZM1JwYjI0b0lGOHNJR0Z5WnlBcElIdGNibHgwWEhSY2RGeDBYSFJjZEZ4MGFXWWdLQ0JwYzBaMWJtTjBhVzl1S0NCaGNtY2dLU0FwSUh0Y2JseDBYSFJjZEZ4MFhIUmNkRngwWEhScFppQW9JQ0Z2Y0hScGIyNXpMblZ1YVhGMVpTQjhmQ0FoYzJWc1ppNW9ZWE1vSUdGeVp5QXBJQ2tnZTF4dVhIUmNkRngwWEhSY2RGeDBYSFJjZEZ4MGJHbHpkQzV3ZFhOb0tDQmhjbWNnS1R0Y2JseDBYSFJjZEZ4MFhIUmNkRngwWEhSOVhHNWNkRngwWEhSY2RGeDBYSFJjZEgwZ1pXeHpaU0JwWmlBb0lHRnlaeUFtSmlCaGNtY3ViR1Z1WjNSb0lDWW1JSFJ2Vkhsd1pTZ2dZWEpuSUNrZ0lUMDlJRndpYzNSeWFXNW5YQ0lnS1NCN1hHNWNibHgwWEhSY2RGeDBYSFJjZEZ4MFhIUXZMeUJKYm5Od1pXTjBJSEpsWTNWeWMybDJaV3g1WEc1Y2RGeDBYSFJjZEZ4MFhIUmNkRngwWVdSa0tDQmhjbWNnS1R0Y2JseDBYSFJjZEZ4MFhIUmNkRngwZlZ4dVhIUmNkRngwWEhSY2RGeDBmU0FwTzF4dVhIUmNkRngwWEhSY2RIMGdLU2dnWVhKbmRXMWxiblJ6SUNrN1hHNWNibHgwWEhSY2RGeDBYSFJwWmlBb0lHMWxiVzl5ZVNBbUppQWhabWx5YVc1bklDa2dlMXh1WEhSY2RGeDBYSFJjZEZ4MFptbHlaU2dwTzF4dVhIUmNkRngwWEhSY2RIMWNibHgwWEhSY2RGeDBmVnh1WEhSY2RGeDBYSFJ5WlhSMWNtNGdkR2hwY3p0Y2JseDBYSFJjZEgwc1hHNWNibHgwWEhSY2RDOHZJRkpsYlc5MlpTQmhJR05oYkd4aVlXTnJJR1p5YjIwZ2RHaGxJR3hwYzNSY2JseDBYSFJjZEhKbGJXOTJaVG9nWm5WdVkzUnBiMjRvS1NCN1hHNWNkRngwWEhSY2RHcFJkV1Z5ZVM1bFlXTm9LQ0JoY21kMWJXVnVkSE1zSUdaMWJtTjBhVzl1S0NCZkxDQmhjbWNnS1NCN1hHNWNkRngwWEhSY2RGeDBkbUZ5SUdsdVpHVjRPMXh1WEhSY2RGeDBYSFJjZEhkb2FXeGxJQ2dnS0NCcGJtUmxlQ0E5SUdwUmRXVnllUzVwYmtGeWNtRjVLQ0JoY21jc0lHeHBjM1FzSUdsdVpHVjRJQ2tnS1NBK0lDMHhJQ2tnZTF4dVhIUmNkRngwWEhSY2RGeDBiR2x6ZEM1emNHeHBZMlVvSUdsdVpHVjRMQ0F4SUNrN1hHNWNibHgwWEhSY2RGeDBYSFJjZEM4dklFaGhibVJzWlNCbWFYSnBibWNnYVc1a1pYaGxjMXh1WEhSY2RGeDBYSFJjZEZ4MGFXWWdLQ0JwYm1SbGVDQThQU0JtYVhKcGJtZEpibVJsZUNBcElIdGNibHgwWEhSY2RGeDBYSFJjZEZ4MFptbHlhVzVuU1c1a1pYZ3RMVHRjYmx4MFhIUmNkRngwWEhSY2RIMWNibHgwWEhSY2RGeDBYSFI5WEc1Y2RGeDBYSFJjZEgwZ0tUdGNibHgwWEhSY2RGeDBjbVYwZFhKdUlIUm9hWE03WEc1Y2RGeDBYSFI5TEZ4dVhHNWNkRngwWEhRdkx5QkRhR1ZqYXlCcFppQmhJR2RwZG1WdUlHTmhiR3hpWVdOcklHbHpJR2x1SUhSb1pTQnNhWE4wTGx4dVhIUmNkRngwTHk4Z1NXWWdibThnWVhKbmRXMWxiblFnYVhNZ1oybDJaVzRzSUhKbGRIVnliaUIzYUdWMGFHVnlJRzl5SUc1dmRDQnNhWE4wSUdoaGN5QmpZV3hzWW1GamEzTWdZWFIwWVdOb1pXUXVYRzVjZEZ4MFhIUm9ZWE02SUdaMWJtTjBhVzl1S0NCbWJpQXBJSHRjYmx4MFhIUmNkRngwY21WMGRYSnVJR1p1SUQ5Y2JseDBYSFJjZEZ4MFhIUnFVWFZsY25rdWFXNUJjbkpoZVNnZ1ptNHNJR3hwYzNRZ0tTQStJQzB4SURwY2JseDBYSFJjZEZ4MFhIUnNhWE4wTG14bGJtZDBhQ0ErSURBN1hHNWNkRngwWEhSOUxGeHVYRzVjZEZ4MFhIUXZMeUJTWlcxdmRtVWdZV3hzSUdOaGJHeGlZV05yY3lCbWNtOXRJSFJvWlNCc2FYTjBYRzVjZEZ4MFhIUmxiWEIwZVRvZ1puVnVZM1JwYjI0b0tTQjdYRzVjZEZ4MFhIUmNkR2xtSUNnZ2JHbHpkQ0FwSUh0Y2JseDBYSFJjZEZ4MFhIUnNhWE4wSUQwZ1cxMDdYRzVjZEZ4MFhIUmNkSDFjYmx4MFhIUmNkRngwY21WMGRYSnVJSFJvYVhNN1hHNWNkRngwWEhSOUxGeHVYRzVjZEZ4MFhIUXZMeUJFYVhOaFlteGxJQzVtYVhKbElHRnVaQ0F1WVdSa1hHNWNkRngwWEhRdkx5QkJZbTl5ZENCaGJua2dZM1Z5Y21WdWRDOXdaVzVrYVc1bklHVjRaV04xZEdsdmJuTmNibHgwWEhSY2RDOHZJRU5zWldGeUlHRnNiQ0JqWVd4c1ltRmphM01nWVc1a0lIWmhiSFZsYzF4dVhIUmNkRngwWkdsellXSnNaVG9nWm5WdVkzUnBiMjRvS1NCN1hHNWNkRngwWEhSY2RHeHZZMnRsWkNBOUlIRjFaWFZsSUQwZ1cxMDdYRzVjZEZ4MFhIUmNkR3hwYzNRZ1BTQnRaVzF2Y25rZ1BTQmNJbHdpTzF4dVhIUmNkRngwWEhSeVpYUjFjbTRnZEdocGN6dGNibHgwWEhSY2RIMHNYRzVjZEZ4MFhIUmthWE5oWW14bFpEb2dablZ1WTNScGIyNG9LU0I3WEc1Y2RGeDBYSFJjZEhKbGRIVnliaUFoYkdsemREdGNibHgwWEhSY2RIMHNYRzVjYmx4MFhIUmNkQzh2SUVScGMyRmliR1VnTG1acGNtVmNibHgwWEhSY2RDOHZJRUZzYzI4Z1pHbHpZV0pzWlNBdVlXUmtJSFZ1YkdWemN5QjNaU0JvWVhabElHMWxiVzl5ZVNBb2MybHVZMlVnYVhRZ2QyOTFiR1FnYUdGMlpTQnVieUJsWm1abFkzUXBYRzVjZEZ4MFhIUXZMeUJCWW05eWRDQmhibmtnY0dWdVpHbHVaeUJsZUdWamRYUnBiMjV6WEc1Y2RGeDBYSFJzYjJOck9pQm1kVzVqZEdsdmJpZ3BJSHRjYmx4MFhIUmNkRngwYkc5amEyVmtJRDBnY1hWbGRXVWdQU0JiWFR0Y2JseDBYSFJjZEZ4MGFXWWdLQ0FoYldWdGIzSjVJQ1ltSUNGbWFYSnBibWNnS1NCN1hHNWNkRngwWEhSY2RGeDBiR2x6ZENBOUlHMWxiVzl5ZVNBOUlGd2lYQ0k3WEc1Y2RGeDBYSFJjZEgxY2JseDBYSFJjZEZ4MGNtVjBkWEp1SUhSb2FYTTdYRzVjZEZ4MFhIUjlMRnh1WEhSY2RGeDBiRzlqYTJWa09pQm1kVzVqZEdsdmJpZ3BJSHRjYmx4MFhIUmNkRngwY21WMGRYSnVJQ0VoYkc5amEyVmtPMXh1WEhSY2RGeDBmU3hjYmx4dVhIUmNkRngwTHk4Z1EyRnNiQ0JoYkd3Z1kyRnNiR0poWTJ0eklIZHBkR2dnZEdobElHZHBkbVZ1SUdOdmJuUmxlSFFnWVc1a0lHRnlaM1Z0Wlc1MGMxeHVYSFJjZEZ4MFptbHlaVmRwZEdnNklHWjFibU4wYVc5dUtDQmpiMjUwWlhoMExDQmhjbWR6SUNrZ2UxeHVYSFJjZEZ4MFhIUnBaaUFvSUNGc2IyTnJaV1FnS1NCN1hHNWNkRngwWEhSY2RGeDBZWEpuY3lBOUlHRnlaM01nZkh3Z1cxMDdYRzVjZEZ4MFhIUmNkRngwWVhKbmN5QTlJRnNnWTI5dWRHVjRkQ3dnWVhKbmN5NXpiR2xqWlNBL0lHRnlaM011YzJ4cFkyVW9LU0E2SUdGeVozTWdYVHRjYmx4MFhIUmNkRngwWEhSeGRXVjFaUzV3ZFhOb0tDQmhjbWR6SUNrN1hHNWNkRngwWEhSY2RGeDBhV1lnS0NBaFptbHlhVzVuSUNrZ2UxeHVYSFJjZEZ4MFhIUmNkRngwWm1seVpTZ3BPMXh1WEhSY2RGeDBYSFJjZEgxY2JseDBYSFJjZEZ4MGZWeHVYSFJjZEZ4MFhIUnlaWFIxY200Z2RHaHBjenRjYmx4MFhIUmNkSDBzWEc1Y2JseDBYSFJjZEM4dklFTmhiR3dnWVd4c0lIUm9aU0JqWVd4c1ltRmphM01nZDJsMGFDQjBhR1VnWjJsMlpXNGdZWEpuZFcxbGJuUnpYRzVjZEZ4MFhIUm1hWEpsT2lCbWRXNWpkR2x2YmlncElIdGNibHgwWEhSY2RGeDBjMlZzWmk1bWFYSmxWMmwwYUNnZ2RHaHBjeXdnWVhKbmRXMWxiblJ6SUNrN1hHNWNkRngwWEhSY2RISmxkSFZ5YmlCMGFHbHpPMXh1WEhSY2RGeDBmU3hjYmx4dVhIUmNkRngwTHk4Z1ZHOGdhMjV2ZHlCcFppQjBhR1VnWTJGc2JHSmhZMnR6SUdoaGRtVWdZV3h5WldGa2VTQmlaV1Z1SUdOaGJHeGxaQ0JoZENCc1pXRnpkQ0J2Ym1ObFhHNWNkRngwWEhSbWFYSmxaRG9nWm5WdVkzUnBiMjRvS1NCN1hHNWNkRngwWEhSY2RISmxkSFZ5YmlBaElXWnBjbVZrTzF4dVhIUmNkRngwZlZ4dVhIUmNkSDA3WEc1Y2JseDBjbVYwZFhKdUlITmxiR1k3WEc1OU8xeHVYRzVjYm1aMWJtTjBhVzl1SUVsa1pXNTBhWFI1S0NCMklDa2dlMXh1WEhSeVpYUjFjbTRnZGp0Y2JuMWNibVoxYm1OMGFXOXVJRlJvY205M1pYSW9JR1Y0SUNrZ2UxeHVYSFIwYUhKdmR5QmxlRHRjYm4xY2JseHVablZ1WTNScGIyNGdZV1J2Y0hSV1lXeDFaU2dnZG1Gc2RXVXNJSEpsYzI5c2RtVXNJSEpsYW1WamRDd2dibTlXWVd4MVpTQXBJSHRjYmx4MGRtRnlJRzFsZEdodlpEdGNibHh1WEhSMGNua2dlMXh1WEc1Y2RGeDBMeThnUTJobFkyc2dabTl5SUhCeWIyMXBjMlVnWVhOd1pXTjBJR1pwY25OMElIUnZJSEJ5YVhacGJHVm5aU0J6ZVc1amFISnZibTkxY3lCaVpXaGhkbWx2Y2x4dVhIUmNkR2xtSUNnZ2RtRnNkV1VnSmlZZ2FYTkdkVzVqZEdsdmJpZ2dLQ0J0WlhSb2IyUWdQU0IyWVd4MVpTNXdjbTl0YVhObElDa2dLU0FwSUh0Y2JseDBYSFJjZEcxbGRHaHZaQzVqWVd4c0tDQjJZV3gxWlNBcExtUnZibVVvSUhKbGMyOXNkbVVnS1M1bVlXbHNLQ0J5WldwbFkzUWdLVHRjYmx4dVhIUmNkQzh2SUU5MGFHVnlJSFJvWlc1aFlteGxjMXh1WEhSY2RIMGdaV3h6WlNCcFppQW9JSFpoYkhWbElDWW1JR2x6Um5WdVkzUnBiMjRvSUNnZ2JXVjBhRzlrSUQwZ2RtRnNkV1V1ZEdobGJpQXBJQ2tnS1NCN1hHNWNkRngwWEhSdFpYUm9iMlF1WTJGc2JDZ2dkbUZzZFdVc0lISmxjMjlzZG1Vc0lISmxhbVZqZENBcE8xeHVYRzVjZEZ4MEx5OGdUM1JvWlhJZ2JtOXVMWFJvWlc1aFlteGxjMXh1WEhSY2RIMGdaV3h6WlNCN1hHNWNibHgwWEhSY2RDOHZJRU52Ym5SeWIyd2dZSEpsYzI5c2RtVmdJR0Z5WjNWdFpXNTBjeUJpZVNCc1pYUjBhVzVuSUVGeWNtRjVJM05zYVdObElHTmhjM1FnWW05dmJHVmhiaUJnYm05V1lXeDFaV0FnZEc4Z2FXNTBaV2RsY2pwY2JseDBYSFJjZEM4dklDb2dabUZzYzJVNklGc2dkbUZzZFdVZ1hTNXpiR2xqWlNnZ01DQXBJRDArSUhKbGMyOXNkbVVvSUhaaGJIVmxJQ2xjYmx4MFhIUmNkQzh2SUNvZ2RISjFaVG9nV3lCMllXeDFaU0JkTG5Oc2FXTmxLQ0F4SUNrZ1BUNGdjbVZ6YjJ4MlpTZ3BYRzVjZEZ4MFhIUnlaWE52YkhabExtRndjR3g1S0NCMWJtUmxabWx1WldRc0lGc2dkbUZzZFdVZ1hTNXpiR2xqWlNnZ2JtOVdZV3gxWlNBcElDazdYRzVjZEZ4MGZWeHVYRzVjZEM4dklFWnZjaUJRY205dGFYTmxjeTlCS3l3Z1kyOXVkbVZ5ZENCbGVHTmxjSFJwYjI1eklHbHVkRzhnY21WcVpXTjBhVzl1YzF4dVhIUXZMeUJUYVc1alpTQnFVWFZsY25rdWQyaGxiaUJrYjJWemJpZDBJSFZ1ZDNKaGNDQjBhR1Z1WVdKc1pYTXNJSGRsSUdOaGJpQnphMmx3SUhSb1pTQmxlSFJ5WVNCamFHVmphM01nWVhCd1pXRnlhVzVuSUdsdVhHNWNkQzh2SUVSbFptVnljbVZrSTNSb1pXNGdkRzhnWTI5dVpHbDBhVzl1WVd4c2VTQnpkWEJ3Y21WemN5QnlaV3BsWTNScGIyNHVYRzVjZEgwZ1kyRjBZMmdnS0NCMllXeDFaU0FwSUh0Y2JseHVYSFJjZEM4dklGTjFjSEJ2Y25RNklFRnVaSEp2YVdRZ05DNHdJRzl1YkhsY2JseDBYSFF2THlCVGRISnBZM1FnYlc5a1pTQm1kVzVqZEdsdmJuTWdhVzUyYjJ0bFpDQjNhWFJvYjNWMElDNWpZV3hzTHk1aGNIQnNlU0JuWlhRZ1oyeHZZbUZzTFc5aWFtVmpkQ0JqYjI1MFpYaDBYRzVjZEZ4MGNtVnFaV04wTG1Gd2NHeDVLQ0IxYm1SbFptbHVaV1FzSUZzZ2RtRnNkV1VnWFNBcE8xeHVYSFI5WEc1OVhHNWNibXBSZFdWeWVTNWxlSFJsYm1Rb0lIdGNibHh1WEhSRVpXWmxjbkpsWkRvZ1puVnVZM1JwYjI0b0lHWjFibU1nS1NCN1hHNWNkRngwZG1GeUlIUjFjR3hsY3lBOUlGdGNibHh1WEhSY2RGeDBYSFF2THlCaFkzUnBiMjRzSUdGa1pDQnNhWE4wWlc1bGNpd2dZMkZzYkdKaFkydHpMRnh1WEhSY2RGeDBYSFF2THlBdUxpNGdMblJvWlc0Z2FHRnVaR3hsY25Nc0lHRnlaM1Z0Wlc1MElHbHVaR1Y0TENCYlptbHVZV3dnYzNSaGRHVmRYRzVjZEZ4MFhIUmNkRnNnWENKdWIzUnBabmxjSWl3Z1hDSndjbTluY21WemMxd2lMQ0JxVVhWbGNua3VRMkZzYkdKaFkydHpLQ0JjSW0xbGJXOXllVndpSUNrc1hHNWNkRngwWEhSY2RGeDBhbEYxWlhKNUxrTmhiR3hpWVdOcmN5Z2dYQ0p0WlcxdmNubGNJaUFwTENBeUlGMHNYRzVjZEZ4MFhIUmNkRnNnWENKeVpYTnZiSFpsWENJc0lGd2laRzl1WlZ3aUxDQnFVWFZsY25rdVEyRnNiR0poWTJ0ektDQmNJbTl1WTJVZ2JXVnRiM0o1WENJZ0tTeGNibHgwWEhSY2RGeDBYSFJxVVhWbGNua3VRMkZzYkdKaFkydHpLQ0JjSW05dVkyVWdiV1Z0YjNKNVhDSWdLU3dnTUN3Z1hDSnlaWE52YkhabFpGd2lJRjBzWEc1Y2RGeDBYSFJjZEZzZ1hDSnlaV3BsWTNSY0lpd2dYQ0ptWVdsc1hDSXNJR3BSZFdWeWVTNURZV3hzWW1GamEzTW9JRndpYjI1alpTQnRaVzF2Y25sY0lpQXBMRnh1WEhSY2RGeDBYSFJjZEdwUmRXVnllUzVEWVd4c1ltRmphM01vSUZ3aWIyNWpaU0J0WlcxdmNubGNJaUFwTENBeExDQmNJbkpsYW1WamRHVmtYQ0lnWFZ4dVhIUmNkRngwWFN4Y2JseDBYSFJjZEhOMFlYUmxJRDBnWENKd1pXNWthVzVuWENJc1hHNWNkRngwWEhSd2NtOXRhWE5sSUQwZ2UxeHVYSFJjZEZ4MFhIUnpkR0YwWlRvZ1puVnVZM1JwYjI0b0tTQjdYRzVjZEZ4MFhIUmNkRngwY21WMGRYSnVJSE4wWVhSbE8xeHVYSFJjZEZ4MFhIUjlMRnh1WEhSY2RGeDBYSFJoYkhkaGVYTTZJR1oxYm1OMGFXOXVLQ2tnZTF4dVhIUmNkRngwWEhSY2RHUmxabVZ5Y21Wa0xtUnZibVVvSUdGeVozVnRaVzUwY3lBcExtWmhhV3dvSUdGeVozVnRaVzUwY3lBcE8xeHVYSFJjZEZ4MFhIUmNkSEpsZEhWeWJpQjBhR2x6TzF4dVhIUmNkRngwWEhSOUxGeHVYSFJjZEZ4MFhIUmNJbU5oZEdOb1hDSTZJR1oxYm1OMGFXOXVLQ0JtYmlBcElIdGNibHgwWEhSY2RGeDBYSFJ5WlhSMWNtNGdjSEp2YldselpTNTBhR1Z1S0NCdWRXeHNMQ0JtYmlBcE8xeHVYSFJjZEZ4MFhIUjlMRnh1WEc1Y2RGeDBYSFJjZEM4dklFdGxaWEFnY0dsd1pTQm1iM0lnWW1GamF5MWpiMjF3WVhSY2JseDBYSFJjZEZ4MGNHbHdaVG9nWm5WdVkzUnBiMjRvSUM4cUlHWnVSRzl1WlN3Z1ptNUdZV2xzTENCbWJsQnliMmR5WlhOeklDb3ZJQ2tnZTF4dVhIUmNkRngwWEhSY2RIWmhjaUJtYm5NZ1BTQmhjbWQxYldWdWRITTdYRzVjYmx4MFhIUmNkRngwWEhSeVpYUjFjbTRnYWxGMVpYSjVMa1JsWm1WeWNtVmtLQ0JtZFc1amRHbHZiaWdnYm1WM1JHVm1aWElnS1NCN1hHNWNkRngwWEhSY2RGeDBYSFJxVVhWbGNua3VaV0ZqYUNnZ2RIVndiR1Z6TENCbWRXNWpkR2x2YmlnZ1gya3NJSFIxY0d4bElDa2dlMXh1WEc1Y2RGeDBYSFJjZEZ4MFhIUmNkQzh2SUUxaGNDQjBkWEJzWlhNZ0tIQnliMmR5WlhOekxDQmtiMjVsTENCbVlXbHNLU0IwYnlCaGNtZDFiV1Z1ZEhNZ0tHUnZibVVzSUdaaGFXd3NJSEJ5YjJkeVpYTnpLVnh1WEhSY2RGeDBYSFJjZEZ4MFhIUjJZWElnWm00Z1BTQnBjMFoxYm1OMGFXOXVLQ0JtYm5OYklIUjFjR3hsV3lBMElGMGdYU0FwSUNZbUlHWnVjMXNnZEhWd2JHVmJJRFFnWFNCZE8xeHVYRzVjZEZ4MFhIUmNkRngwWEhSY2RDOHZJR1JsWm1WeWNtVmtMbkJ5YjJkeVpYTnpLR1oxYm1OMGFXOXVLQ2tnZXlCaWFXNWtJSFJ2SUc1bGQwUmxabVZ5SUc5eUlHNWxkMFJsWm1WeUxtNXZkR2xtZVNCOUtWeHVYSFJjZEZ4MFhIUmNkRngwWEhRdkx5QmtaV1psY25KbFpDNWtiMjVsS0daMWJtTjBhVzl1S0NrZ2V5QmlhVzVrSUhSdklHNWxkMFJsWm1WeUlHOXlJRzVsZDBSbFptVnlMbkpsYzI5c2RtVWdmU2xjYmx4MFhIUmNkRngwWEhSY2RGeDBMeThnWkdWbVpYSnlaV1F1Wm1GcGJDaG1kVzVqZEdsdmJpZ3BJSHNnWW1sdVpDQjBieUJ1WlhkRVpXWmxjaUJ2Y2lCdVpYZEVaV1psY2k1eVpXcGxZM1FnZlNsY2JseDBYSFJjZEZ4MFhIUmNkRngwWkdWbVpYSnlaV1JiSUhSMWNHeGxXeUF4SUYwZ1hTZ2dablZ1WTNScGIyNG9LU0I3WEc1Y2RGeDBYSFJjZEZ4MFhIUmNkRngwZG1GeUlISmxkSFZ5Ym1Wa0lEMGdabTRnSmlZZ1ptNHVZWEJ3Ykhrb0lIUm9hWE1zSUdGeVozVnRaVzUwY3lBcE8xeHVYSFJjZEZ4MFhIUmNkRngwWEhSY2RHbG1JQ2dnY21WMGRYSnVaV1FnSmlZZ2FYTkdkVzVqZEdsdmJpZ2djbVYwZFhKdVpXUXVjSEp2YldselpTQXBJQ2tnZTF4dVhIUmNkRngwWEhSY2RGeDBYSFJjZEZ4MGNtVjBkWEp1WldRdWNISnZiV2x6WlNncFhHNWNkRngwWEhSY2RGeDBYSFJjZEZ4MFhIUmNkQzV3Y205bmNtVnpjeWdnYm1WM1JHVm1aWEl1Ym05MGFXWjVJQ2xjYmx4MFhIUmNkRngwWEhSY2RGeDBYSFJjZEZ4MExtUnZibVVvSUc1bGQwUmxabVZ5TG5KbGMyOXNkbVVnS1Z4dVhIUmNkRngwWEhSY2RGeDBYSFJjZEZ4MFhIUXVabUZwYkNnZ2JtVjNSR1ZtWlhJdWNtVnFaV04wSUNrN1hHNWNkRngwWEhSY2RGeDBYSFJjZEZ4MGZTQmxiSE5sSUh0Y2JseDBYSFJjZEZ4MFhIUmNkRngwWEhSY2RHNWxkMFJsWm1WeVd5QjBkWEJzWlZzZ01DQmRJQ3NnWENKWGFYUm9YQ0lnWFNoY2JseDBYSFJjZEZ4MFhIUmNkRngwWEhSY2RGeDBkR2hwY3l4Y2JseDBYSFJjZEZ4MFhIUmNkRngwWEhSY2RGeDBabTRnUHlCYklISmxkSFZ5Ym1Wa0lGMGdPaUJoY21kMWJXVnVkSE5jYmx4MFhIUmNkRngwWEhSY2RGeDBYSFJjZENrN1hHNWNkRngwWEhSY2RGeDBYSFJjZEZ4MGZWeHVYSFJjZEZ4MFhIUmNkRngwWEhSOUlDazdYRzVjZEZ4MFhIUmNkRngwWEhSOUlDazdYRzVjZEZ4MFhIUmNkRngwWEhSbWJuTWdQU0J1ZFd4c08xeHVYSFJjZEZ4MFhIUmNkSDBnS1M1d2NtOXRhWE5sS0NrN1hHNWNkRngwWEhSY2RIMHNYRzVjZEZ4MFhIUmNkSFJvWlc0NklHWjFibU4wYVc5dUtDQnZia1oxYkdacGJHeGxaQ3dnYjI1U1pXcGxZM1JsWkN3Z2IyNVFjbTluY21WemN5QXBJSHRjYmx4MFhIUmNkRngwWEhSMllYSWdiV0Y0UkdWd2RHZ2dQU0F3TzF4dVhIUmNkRngwWEhSY2RHWjFibU4wYVc5dUlISmxjMjlzZG1Vb0lHUmxjSFJvTENCa1pXWmxjbkpsWkN3Z2FHRnVaR3hsY2l3Z2MzQmxZMmxoYkNBcElIdGNibHgwWEhSY2RGeDBYSFJjZEhKbGRIVnliaUJtZFc1amRHbHZiaWdwSUh0Y2JseDBYSFJjZEZ4MFhIUmNkRngwZG1GeUlIUm9ZWFFnUFNCMGFHbHpMRnh1WEhSY2RGeDBYSFJjZEZ4MFhIUmNkR0Z5WjNNZ1BTQmhjbWQxYldWdWRITXNYRzVjZEZ4MFhIUmNkRngwWEhSY2RGeDBiV2xuYUhSVWFISnZkeUE5SUdaMWJtTjBhVzl1S0NrZ2UxeHVYSFJjZEZ4MFhIUmNkRngwWEhSY2RGeDBkbUZ5SUhKbGRIVnlibVZrTENCMGFHVnVPMXh1WEc1Y2RGeDBYSFJjZEZ4MFhIUmNkRngwWEhRdkx5QlRkWEJ3YjNKME9pQlFjbTl0YVhObGN5OUJLeUJ6WldOMGFXOXVJREl1TXk0ekxqTXVNMXh1WEhSY2RGeDBYSFJjZEZ4MFhIUmNkRngwTHk4Z2FIUjBjSE02THk5d2NtOXRhWE5sYzJGd2JIVnpMbU52YlM4amNHOXBiblF0TlRsY2JseDBYSFJjZEZ4MFhIUmNkRngwWEhSY2RDOHZJRWxuYm05eVpTQmtiM1ZpYkdVdGNtVnpiMngxZEdsdmJpQmhkSFJsYlhCMGMxeHVYSFJjZEZ4MFhIUmNkRngwWEhSY2RGeDBhV1lnS0NCa1pYQjBhQ0E4SUcxaGVFUmxjSFJvSUNrZ2UxeHVYSFJjZEZ4MFhIUmNkRngwWEhSY2RGeDBYSFJ5WlhSMWNtNDdYRzVjZEZ4MFhIUmNkRngwWEhSY2RGeDBYSFI5WEc1Y2JseDBYSFJjZEZ4MFhIUmNkRngwWEhSY2RISmxkSFZ5Ym1Wa0lEMGdhR0Z1Wkd4bGNpNWhjSEJzZVNnZ2RHaGhkQ3dnWVhKbmN5QXBPMXh1WEc1Y2RGeDBYSFJjZEZ4MFhIUmNkRngwWEhRdkx5QlRkWEJ3YjNKME9pQlFjbTl0YVhObGN5OUJLeUJ6WldOMGFXOXVJREl1TXk0eFhHNWNkRngwWEhSY2RGeDBYSFJjZEZ4MFhIUXZMeUJvZEhSd2N6b3ZMM0J5YjIxcGMyVnpZWEJzZFhNdVkyOXRMeU53YjJsdWRDMDBPRnh1WEhSY2RGeDBYSFJjZEZ4MFhIUmNkRngwYVdZZ0tDQnlaWFIxY201bFpDQTlQVDBnWkdWbVpYSnlaV1F1Y0hKdmJXbHpaU2dwSUNrZ2UxeHVYSFJjZEZ4MFhIUmNkRngwWEhSY2RGeDBYSFIwYUhKdmR5QnVaWGNnVkhsd1pVVnljbTl5S0NCY0lsUm9aVzVoWW14bElITmxiR1l0Y21WemIyeDFkR2x2Ymx3aUlDazdYRzVjZEZ4MFhIUmNkRngwWEhSY2RGeDBYSFI5WEc1Y2JseDBYSFJjZEZ4MFhIUmNkRngwWEhSY2RDOHZJRk4xY0hCdmNuUTZJRkJ5YjIxcGMyVnpMMEVySUhObFkzUnBiMjV6SURJdU15NHpMakVzSURNdU5WeHVYSFJjZEZ4MFhIUmNkRngwWEhSY2RGeDBMeThnYUhSMGNITTZMeTl3Y205dGFYTmxjMkZ3YkhWekxtTnZiUzhqY0c5cGJuUXROVFJjYmx4MFhIUmNkRngwWEhSY2RGeDBYSFJjZEM4dklHaDBkSEJ6T2k4dmNISnZiV2x6WlhOaGNHeDFjeTVqYjIwdkkzQnZhVzUwTFRjMVhHNWNkRngwWEhSY2RGeDBYSFJjZEZ4MFhIUXZMeUJTWlhSeWFXVjJaU0JnZEdobGJtQWdiMjVzZVNCdmJtTmxYRzVjZEZ4MFhIUmNkRngwWEhSY2RGeDBYSFIwYUdWdUlEMGdjbVYwZFhKdVpXUWdKaVpjYmx4dVhIUmNkRngwWEhSY2RGeDBYSFJjZEZ4MFhIUXZMeUJUZFhCd2IzSjBPaUJRY205dGFYTmxjeTlCS3lCelpXTjBhVzl1SURJdU15NDBYRzVjZEZ4MFhIUmNkRngwWEhSY2RGeDBYSFJjZEM4dklHaDBkSEJ6T2k4dmNISnZiV2x6WlhOaGNHeDFjeTVqYjIwdkkzQnZhVzUwTFRZMFhHNWNkRngwWEhSY2RGeDBYSFJjZEZ4MFhIUmNkQzh2SUU5dWJIa2dZMmhsWTJzZ2IySnFaV04wY3lCaGJtUWdablZ1WTNScGIyNXpJR1p2Y2lCMGFHVnVZV0pwYkdsMGVWeHVYSFJjZEZ4MFhIUmNkRngwWEhSY2RGeDBYSFFvSUhSNWNHVnZaaUJ5WlhSMWNtNWxaQ0E5UFQwZ1hDSnZZbXBsWTNSY0lpQjhmRnh1WEhSY2RGeDBYSFJjZEZ4MFhIUmNkRngwWEhSY2RIUjVjR1Z2WmlCeVpYUjFjbTVsWkNBOVBUMGdYQ0ptZFc1amRHbHZibHdpSUNrZ0ppWmNibHgwWEhSY2RGeDBYSFJjZEZ4MFhIUmNkRngwY21WMGRYSnVaV1F1ZEdobGJqdGNibHh1WEhSY2RGeDBYSFJjZEZ4MFhIUmNkRngwTHk4Z1NHRnVaR3hsSUdFZ2NtVjBkWEp1WldRZ2RHaGxibUZpYkdWY2JseDBYSFJjZEZ4MFhIUmNkRngwWEhSY2RHbG1JQ2dnYVhOR2RXNWpkR2x2YmlnZ2RHaGxiaUFwSUNrZ2UxeHVYRzVjZEZ4MFhIUmNkRngwWEhSY2RGeDBYSFJjZEM4dklGTndaV05wWVd3Z2NISnZZMlZ6YzI5eWN5QW9ibTkwYVdaNUtTQnFkWE4wSUhkaGFYUWdabTl5SUhKbGMyOXNkWFJwYjI1Y2JseDBYSFJjZEZ4MFhIUmNkRngwWEhSY2RGeDBhV1lnS0NCemNHVmphV0ZzSUNrZ2UxeHVYSFJjZEZ4MFhIUmNkRngwWEhSY2RGeDBYSFJjZEhSb1pXNHVZMkZzYkNoY2JseDBYSFJjZEZ4MFhIUmNkRngwWEhSY2RGeDBYSFJjZEhKbGRIVnlibVZrTEZ4dVhIUmNkRngwWEhSY2RGeDBYSFJjZEZ4MFhIUmNkRngwY21WemIyeDJaU2dnYldGNFJHVndkR2dzSUdSbFptVnljbVZrTENCSlpHVnVkR2wwZVN3Z2MzQmxZMmxoYkNBcExGeHVYSFJjZEZ4MFhIUmNkRngwWEhSY2RGeDBYSFJjZEZ4MGNtVnpiMngyWlNnZ2JXRjRSR1Z3ZEdnc0lHUmxabVZ5Y21Wa0xDQlVhSEp2ZDJWeUxDQnpjR1ZqYVdGc0lDbGNibHgwWEhSY2RGeDBYSFJjZEZ4MFhIUmNkRngwWEhRcE8xeHVYRzVjZEZ4MFhIUmNkRngwWEhSY2RGeDBYSFJjZEM4dklFNXZjbTFoYkNCd2NtOWpaWE56YjNKeklDaHlaWE52YkhabEtTQmhiSE52SUdodmIyc2dhVzUwYnlCd2NtOW5jbVZ6YzF4dVhIUmNkRngwWEhSY2RGeDBYSFJjZEZ4MFhIUjlJR1ZzYzJVZ2UxeHVYRzVjZEZ4MFhIUmNkRngwWEhSY2RGeDBYSFJjZEZ4MEx5OGdMaTR1WVc1a0lHUnBjM0psWjJGeVpDQnZiR1JsY2lCeVpYTnZiSFYwYVc5dUlIWmhiSFZsYzF4dVhIUmNkRngwWEhSY2RGeDBYSFJjZEZ4MFhIUmNkRzFoZUVSbGNIUm9LeXM3WEc1Y2JseDBYSFJjZEZ4MFhIUmNkRngwWEhSY2RGeDBYSFIwYUdWdUxtTmhiR3dvWEc1Y2RGeDBYSFJjZEZ4MFhIUmNkRngwWEhSY2RGeDBYSFJ5WlhSMWNtNWxaQ3hjYmx4MFhIUmNkRngwWEhSY2RGeDBYSFJjZEZ4MFhIUmNkSEpsYzI5c2RtVW9JRzFoZUVSbGNIUm9MQ0JrWldabGNuSmxaQ3dnU1dSbGJuUnBkSGtzSUhOd1pXTnBZV3dnS1N4Y2JseDBYSFJjZEZ4MFhIUmNkRngwWEhSY2RGeDBYSFJjZEhKbGMyOXNkbVVvSUcxaGVFUmxjSFJvTENCa1pXWmxjbkpsWkN3Z1ZHaHliM2RsY2l3Z2MzQmxZMmxoYkNBcExGeHVYSFJjZEZ4MFhIUmNkRngwWEhSY2RGeDBYSFJjZEZ4MGNtVnpiMngyWlNnZ2JXRjRSR1Z3ZEdnc0lHUmxabVZ5Y21Wa0xDQkpaR1Z1ZEdsMGVTeGNibHgwWEhSY2RGeDBYSFJjZEZ4MFhIUmNkRngwWEhSY2RGeDBaR1ZtWlhKeVpXUXVibTkwYVdaNVYybDBhQ0FwWEc1Y2RGeDBYSFJjZEZ4MFhIUmNkRngwWEhSY2RGeDBLVHRjYmx4MFhIUmNkRngwWEhSY2RGeDBYSFJjZEZ4MGZWeHVYRzVjZEZ4MFhIUmNkRngwWEhSY2RGeDBYSFF2THlCSVlXNWtiR1VnWVd4c0lHOTBhR1Z5SUhKbGRIVnlibVZrSUhaaGJIVmxjMXh1WEhSY2RGeDBYSFJjZEZ4MFhIUmNkRngwZlNCbGJITmxJSHRjYmx4dVhIUmNkRngwWEhSY2RGeDBYSFJjZEZ4MFhIUXZMeUJQYm14NUlITjFZbk4wYVhSMWRHVWdhR0Z1Wkd4bGNuTWdjR0Z6Y3lCdmJpQmpiMjUwWlhoMFhHNWNkRngwWEhSY2RGeDBYSFJjZEZ4MFhIUmNkQzh2SUdGdVpDQnRkV3gwYVhCc1pTQjJZV3gxWlhNZ0tHNXZiaTF6Y0dWaklHSmxhR0YyYVc5eUtWeHVYSFJjZEZ4MFhIUmNkRngwWEhSY2RGeDBYSFJwWmlBb0lHaGhibVJzWlhJZ0lUMDlJRWxrWlc1MGFYUjVJQ2tnZTF4dVhIUmNkRngwWEhSY2RGeDBYSFJjZEZ4MFhIUmNkSFJvWVhRZ1BTQjFibVJsWm1sdVpXUTdYRzVjZEZ4MFhIUmNkRngwWEhSY2RGeDBYSFJjZEZ4MFlYSm5jeUE5SUZzZ2NtVjBkWEp1WldRZ1hUdGNibHgwWEhSY2RGeDBYSFJjZEZ4MFhIUmNkRngwZlZ4dVhHNWNkRngwWEhSY2RGeDBYSFJjZEZ4MFhIUmNkQzh2SUZCeWIyTmxjM01nZEdobElIWmhiSFZsS0hNcFhHNWNkRngwWEhSY2RGeDBYSFJjZEZ4MFhIUmNkQzh2SUVSbFptRjFiSFFnY0hKdlkyVnpjeUJwY3lCeVpYTnZiSFpsWEc1Y2RGeDBYSFJjZEZ4MFhIUmNkRngwWEhSY2RDZ2djM0JsWTJsaGJDQjhmQ0JrWldabGNuSmxaQzV5WlhOdmJIWmxWMmwwYUNBcEtDQjBhR0YwTENCaGNtZHpJQ2s3WEc1Y2RGeDBYSFJjZEZ4MFhIUmNkRngwWEhSOVhHNWNkRngwWEhSY2RGeDBYSFJjZEZ4MGZTeGNibHh1WEhSY2RGeDBYSFJjZEZ4MFhIUmNkQzh2SUU5dWJIa2dibTl5YldGc0lIQnliMk5sYzNOdmNuTWdLSEpsYzI5c2RtVXBJR05oZEdOb0lHRnVaQ0J5WldwbFkzUWdaWGhqWlhCMGFXOXVjMXh1WEhSY2RGeDBYSFJjZEZ4MFhIUmNkSEJ5YjJObGMzTWdQU0J6Y0dWamFXRnNJRDljYmx4MFhIUmNkRngwWEhSY2RGeDBYSFJjZEcxcFoyaDBWR2h5YjNjZ09seHVYSFJjZEZ4MFhIUmNkRngwWEhSY2RGeDBablZ1WTNScGIyNG9LU0I3WEc1Y2RGeDBYSFJjZEZ4MFhIUmNkRngwWEhSY2RIUnllU0I3WEc1Y2RGeDBYSFJjZEZ4MFhIUmNkRngwWEhSY2RGeDBiV2xuYUhSVWFISnZkeWdwTzF4dVhIUmNkRngwWEhSY2RGeDBYSFJjZEZ4MFhIUjlJR05oZEdOb0lDZ2daU0FwSUh0Y2JseHVYSFJjZEZ4MFhIUmNkRngwWEhSY2RGeDBYSFJjZEdsbUlDZ2dhbEYxWlhKNUxrUmxabVZ5Y21Wa0xtVjRZMlZ3ZEdsdmJraHZiMnNnS1NCN1hHNWNkRngwWEhSY2RGeDBYSFJjZEZ4MFhIUmNkRngwWEhScVVYVmxjbmt1UkdWbVpYSnlaV1F1WlhoalpYQjBhVzl1U0c5dmF5Z2daU3hjYmx4MFhIUmNkRngwWEhSY2RGeDBYSFJjZEZ4MFhIUmNkRngwY0hKdlkyVnpjeTV6ZEdGamExUnlZV05sSUNrN1hHNWNkRngwWEhSY2RGeDBYSFJjZEZ4MFhIUmNkRngwZlZ4dVhHNWNkRngwWEhSY2RGeDBYSFJjZEZ4MFhIUmNkRngwTHk4Z1UzVndjRzl5ZERvZ1VISnZiV2x6WlhNdlFTc2djMlZqZEdsdmJpQXlMak11TXk0ekxqUXVNVnh1WEhSY2RGeDBYSFJjZEZ4MFhIUmNkRngwWEhSY2RDOHZJR2gwZEhCek9pOHZjSEp2YldselpYTmhjR3gxY3k1amIyMHZJM0J2YVc1MExUWXhYRzVjZEZ4MFhIUmNkRngwWEhSY2RGeDBYSFJjZEZ4MEx5OGdTV2R1YjNKbElIQnZjM1F0Y21WemIyeDFkR2x2YmlCbGVHTmxjSFJwYjI1elhHNWNkRngwWEhSY2RGeDBYSFJjZEZ4MFhIUmNkRngwYVdZZ0tDQmtaWEIwYUNBcklERWdQajBnYldGNFJHVndkR2dnS1NCN1hHNWNibHgwWEhSY2RGeDBYSFJjZEZ4MFhIUmNkRngwWEhSY2RDOHZJRTl1YkhrZ2MzVmljM1JwZEhWMFpTQm9ZVzVrYkdWeWN5QndZWE56SUc5dUlHTnZiblJsZUhSY2JseDBYSFJjZEZ4MFhIUmNkRngwWEhSY2RGeDBYSFJjZEM4dklHRnVaQ0J0ZFd4MGFYQnNaU0IyWVd4MVpYTWdLRzV2YmkxemNHVmpJR0psYUdGMmFXOXlLVnh1WEhSY2RGeDBYSFJjZEZ4MFhIUmNkRngwWEhSY2RGeDBhV1lnS0NCb1lXNWtiR1Z5SUNFOVBTQlVhSEp2ZDJWeUlDa2dlMXh1WEhSY2RGeDBYSFJjZEZ4MFhIUmNkRngwWEhSY2RGeDBYSFIwYUdGMElEMGdkVzVrWldacGJtVmtPMXh1WEhSY2RGeDBYSFJjZEZ4MFhIUmNkRngwWEhSY2RGeDBYSFJoY21keklEMGdXeUJsSUYwN1hHNWNkRngwWEhSY2RGeDBYSFJjZEZ4MFhIUmNkRngwWEhSOVhHNWNibHgwWEhSY2RGeDBYSFJjZEZ4MFhIUmNkRngwWEhSY2RHUmxabVZ5Y21Wa0xuSmxhbVZqZEZkcGRHZ29JSFJvWVhRc0lHRnlaM01nS1R0Y2JseDBYSFJjZEZ4MFhIUmNkRngwWEhSY2RGeDBYSFI5WEc1Y2RGeDBYSFJjZEZ4MFhIUmNkRngwWEhSY2RIMWNibHgwWEhSY2RGeDBYSFJjZEZ4MFhIUmNkSDA3WEc1Y2JseDBYSFJjZEZ4MFhIUmNkRngwTHk4Z1UzVndjRzl5ZERvZ1VISnZiV2x6WlhNdlFTc2djMlZqZEdsdmJpQXlMak11TXk0ekxqRmNibHgwWEhSY2RGeDBYSFJjZEZ4MEx5OGdhSFIwY0hNNkx5OXdjbTl0YVhObGMyRndiSFZ6TG1OdmJTOGpjRzlwYm5RdE5UZGNibHgwWEhSY2RGeDBYSFJjZEZ4MEx5OGdVbVV0Y21WemIyeDJaU0J3Y205dGFYTmxjeUJwYlcxbFpHbGhkR1ZzZVNCMGJ5QmtiMlJuWlNCbVlXeHpaU0J5WldwbFkzUnBiMjRnWm5KdmJWeHVYSFJjZEZ4MFhIUmNkRngwWEhRdkx5QnpkV0p6WlhGMVpXNTBJR1Z5Y205eWMxeHVYSFJjZEZ4MFhIUmNkRngwWEhScFppQW9JR1JsY0hSb0lDa2dlMXh1WEhSY2RGeDBYSFJjZEZ4MFhIUmNkSEJ5YjJObGMzTW9LVHRjYmx4MFhIUmNkRngwWEhSY2RGeDBmU0JsYkhObElIdGNibHh1WEhSY2RGeDBYSFJjZEZ4MFhIUmNkQzh2SUVOaGJHd2dZVzRnYjNCMGFXOXVZV3dnYUc5dmF5QjBieUJ5WldOdmNtUWdkR2hsSUhOMFlXTnJMQ0JwYmlCallYTmxJRzltSUdWNFkyVndkR2x2Ymx4dVhIUmNkRngwWEhSY2RGeDBYSFJjZEM4dklITnBibU5sSUdsMEozTWdiM1JvWlhKM2FYTmxJR3h2YzNRZ2QyaGxiaUJsZUdWamRYUnBiMjRnWjI5bGN5QmhjM2x1WTF4dVhIUmNkRngwWEhSY2RGeDBYSFJjZEdsbUlDZ2dhbEYxWlhKNUxrUmxabVZ5Y21Wa0xtZGxkRk4wWVdOclNHOXZheUFwSUh0Y2JseDBYSFJjZEZ4MFhIUmNkRngwWEhSY2RIQnliMk5sYzNNdWMzUmhZMnRVY21GalpTQTlJR3BSZFdWeWVTNUVaV1psY25KbFpDNW5aWFJUZEdGamEwaHZiMnNvS1R0Y2JseDBYSFJjZEZ4MFhIUmNkRngwWEhSOVhHNWNkRngwWEhSY2RGeDBYSFJjZEZ4MGQybHVaRzkzTG5ObGRGUnBiV1Z2ZFhRb0lIQnliMk5sYzNNZ0tUdGNibHgwWEhSY2RGeDBYSFJjZEZ4MGZWeHVYSFJjZEZ4MFhIUmNkRngwZlR0Y2JseDBYSFJjZEZ4MFhIUjlYRzVjYmx4MFhIUmNkRngwWEhSeVpYUjFjbTRnYWxGMVpYSjVMa1JsWm1WeWNtVmtLQ0JtZFc1amRHbHZiaWdnYm1WM1JHVm1aWElnS1NCN1hHNWNibHgwWEhSY2RGeDBYSFJjZEM4dklIQnliMmR5WlhOelgyaGhibVJzWlhKekxtRmtaQ2dnTGk0dUlDbGNibHgwWEhSY2RGeDBYSFJjZEhSMWNHeGxjMXNnTUNCZFd5QXpJRjB1WVdSa0tGeHVYSFJjZEZ4MFhIUmNkRngwWEhSeVpYTnZiSFpsS0Z4dVhIUmNkRngwWEhSY2RGeDBYSFJjZERBc1hHNWNkRngwWEhSY2RGeDBYSFJjZEZ4MGJtVjNSR1ZtWlhJc1hHNWNkRngwWEhSY2RGeDBYSFJjZEZ4MGFYTkdkVzVqZEdsdmJpZ2diMjVRY205bmNtVnpjeUFwSUQ5Y2JseDBYSFJjZEZ4MFhIUmNkRngwWEhSY2RHOXVVSEp2WjNKbGMzTWdPbHh1WEhSY2RGeDBYSFJjZEZ4MFhIUmNkRngwU1dSbGJuUnBkSGtzWEc1Y2RGeDBYSFJjZEZ4MFhIUmNkRngwYm1WM1JHVm1aWEl1Ym05MGFXWjVWMmwwYUZ4dVhIUmNkRngwWEhSY2RGeDBYSFFwWEc1Y2RGeDBYSFJjZEZ4MFhIUXBPMXh1WEc1Y2RGeDBYSFJjZEZ4MFhIUXZMeUJtZFd4bWFXeHNaV1JmYUdGdVpHeGxjbk11WVdSa0tDQXVMaTRnS1Z4dVhIUmNkRngwWEhSY2RGeDBkSFZ3YkdWeld5QXhJRjFiSURNZ1hTNWhaR1FvWEc1Y2RGeDBYSFJjZEZ4MFhIUmNkSEpsYzI5c2RtVW9YRzVjZEZ4MFhIUmNkRngwWEhSY2RGeDBNQ3hjYmx4MFhIUmNkRngwWEhSY2RGeDBYSFJ1WlhkRVpXWmxjaXhjYmx4MFhIUmNkRngwWEhSY2RGeDBYSFJwYzBaMWJtTjBhVzl1S0NCdmJrWjFiR1pwYkd4bFpDQXBJRDljYmx4MFhIUmNkRngwWEhSY2RGeDBYSFJjZEc5dVJuVnNabWxzYkdWa0lEcGNibHgwWEhSY2RGeDBYSFJjZEZ4MFhIUmNkRWxrWlc1MGFYUjVYRzVjZEZ4MFhIUmNkRngwWEhSY2RDbGNibHgwWEhSY2RGeDBYSFJjZENrN1hHNWNibHgwWEhSY2RGeDBYSFJjZEM4dklISmxhbVZqZEdWa1gyaGhibVJzWlhKekxtRmtaQ2dnTGk0dUlDbGNibHgwWEhSY2RGeDBYSFJjZEhSMWNHeGxjMXNnTWlCZFd5QXpJRjB1WVdSa0tGeHVYSFJjZEZ4MFhIUmNkRngwWEhSeVpYTnZiSFpsS0Z4dVhIUmNkRngwWEhSY2RGeDBYSFJjZERBc1hHNWNkRngwWEhSY2RGeDBYSFJjZEZ4MGJtVjNSR1ZtWlhJc1hHNWNkRngwWEhSY2RGeDBYSFJjZEZ4MGFYTkdkVzVqZEdsdmJpZ2diMjVTWldwbFkzUmxaQ0FwSUQ5Y2JseDBYSFJjZEZ4MFhIUmNkRngwWEhSY2RHOXVVbVZxWldOMFpXUWdPbHh1WEhSY2RGeDBYSFJjZEZ4MFhIUmNkRngwVkdoeWIzZGxjbHh1WEhSY2RGeDBYSFJjZEZ4MFhIUXBYRzVjZEZ4MFhIUmNkRngwWEhRcE8xeHVYSFJjZEZ4MFhIUmNkSDBnS1M1d2NtOXRhWE5sS0NrN1hHNWNkRngwWEhSY2RIMHNYRzVjYmx4MFhIUmNkRngwTHk4Z1IyVjBJR0VnY0hKdmJXbHpaU0JtYjNJZ2RHaHBjeUJrWldabGNuSmxaRnh1WEhSY2RGeDBYSFF2THlCSlppQnZZbW9nYVhNZ2NISnZkbWxrWldRc0lIUm9aU0J3Y205dGFYTmxJR0Z6Y0dWamRDQnBjeUJoWkdSbFpDQjBieUIwYUdVZ2IySnFaV04wWEc1Y2RGeDBYSFJjZEhCeWIyMXBjMlU2SUdaMWJtTjBhVzl1S0NCdlltb2dLU0I3WEc1Y2RGeDBYSFJjZEZ4MGNtVjBkWEp1SUc5aWFpQWhQU0J1ZFd4c0lEOGdhbEYxWlhKNUxtVjRkR1Z1WkNnZ2IySnFMQ0J3Y205dGFYTmxJQ2tnT2lCd2NtOXRhWE5sTzF4dVhIUmNkRngwWEhSOVhHNWNkRngwWEhSOUxGeHVYSFJjZEZ4MFpHVm1aWEp5WldRZ1BTQjdmVHRjYmx4dVhIUmNkQzh2SUVGa1pDQnNhWE4wTFhOd1pXTnBabWxqSUcxbGRHaHZaSE5jYmx4MFhIUnFVWFZsY25rdVpXRmphQ2dnZEhWd2JHVnpMQ0JtZFc1amRHbHZiaWdnYVN3Z2RIVndiR1VnS1NCN1hHNWNkRngwWEhSMllYSWdiR2x6ZENBOUlIUjFjR3hsV3lBeUlGMHNYRzVjZEZ4MFhIUmNkSE4wWVhSbFUzUnlhVzVuSUQwZ2RIVndiR1ZiSURVZ1hUdGNibHh1WEhSY2RGeDBMeThnY0hKdmJXbHpaUzV3Y205bmNtVnpjeUE5SUd4cGMzUXVZV1JrWEc1Y2RGeDBYSFF2THlCd2NtOXRhWE5sTG1SdmJtVWdQU0JzYVhOMExtRmtaRnh1WEhSY2RGeDBMeThnY0hKdmJXbHpaUzVtWVdsc0lEMGdiR2x6ZEM1aFpHUmNibHgwWEhSY2RIQnliMjFwYzJWYklIUjFjR3hsV3lBeElGMGdYU0E5SUd4cGMzUXVZV1JrTzF4dVhHNWNkRngwWEhRdkx5QklZVzVrYkdVZ2MzUmhkR1ZjYmx4MFhIUmNkR2xtSUNnZ2MzUmhkR1ZUZEhKcGJtY2dLU0I3WEc1Y2RGeDBYSFJjZEd4cGMzUXVZV1JrS0Z4dVhIUmNkRngwWEhSY2RHWjFibU4wYVc5dUtDa2dlMXh1WEc1Y2RGeDBYSFJjZEZ4MFhIUXZMeUJ6ZEdGMFpTQTlJRndpY21WemIyeDJaV1JjSWlBb2FTNWxMaXdnWm5Wc1ptbHNiR1ZrS1Z4dVhIUmNkRngwWEhSY2RGeDBMeThnYzNSaGRHVWdQU0JjSW5KbGFtVmpkR1ZrWENKY2JseDBYSFJjZEZ4MFhIUmNkSE4wWVhSbElEMGdjM1JoZEdWVGRISnBibWM3WEc1Y2RGeDBYSFJjZEZ4MGZTeGNibHh1WEhSY2RGeDBYSFJjZEM4dklISmxhbVZqZEdWa1gyTmhiR3hpWVdOcmN5NWthWE5oWW14bFhHNWNkRngwWEhSY2RGeDBMeThnWm5Wc1ptbHNiR1ZrWDJOaGJHeGlZV05yY3k1a2FYTmhZbXhsWEc1Y2RGeDBYSFJjZEZ4MGRIVndiR1Z6V3lBeklDMGdhU0JkV3lBeUlGMHVaR2x6WVdKc1pTeGNibHh1WEhSY2RGeDBYSFJjZEM4dklISmxhbVZqZEdWa1gyaGhibVJzWlhKekxtUnBjMkZpYkdWY2JseDBYSFJjZEZ4MFhIUXZMeUJtZFd4bWFXeHNaV1JmYUdGdVpHeGxjbk11WkdsellXSnNaVnh1WEhSY2RGeDBYSFJjZEhSMWNHeGxjMXNnTXlBdElHa2dYVnNnTXlCZExtUnBjMkZpYkdVc1hHNWNibHgwWEhSY2RGeDBYSFF2THlCd2NtOW5jbVZ6YzE5allXeHNZbUZqYTNNdWJHOWphMXh1WEhSY2RGeDBYSFJjZEhSMWNHeGxjMXNnTUNCZFd5QXlJRjB1Ykc5amF5eGNibHh1WEhSY2RGeDBYSFJjZEM4dklIQnliMmR5WlhOelgyaGhibVJzWlhKekxteHZZMnRjYmx4MFhIUmNkRngwWEhSMGRYQnNaWE5iSURBZ1hWc2dNeUJkTG14dlkydGNibHgwWEhSY2RGeDBLVHRjYmx4MFhIUmNkSDFjYmx4dVhIUmNkRngwTHk4Z2NISnZaM0psYzNOZmFHRnVaR3hsY25NdVptbHlaVnh1WEhSY2RGeDBMeThnWm5Wc1ptbHNiR1ZrWDJoaGJtUnNaWEp6TG1acGNtVmNibHgwWEhSY2RDOHZJSEpsYW1WamRHVmtYMmhoYm1Sc1pYSnpMbVpwY21WY2JseDBYSFJjZEd4cGMzUXVZV1JrS0NCMGRYQnNaVnNnTXlCZExtWnBjbVVnS1R0Y2JseHVYSFJjZEZ4MEx5OGdaR1ZtWlhKeVpXUXVibTkwYVdaNUlEMGdablZ1WTNScGIyNG9LU0I3SUdSbFptVnljbVZrTG01dmRHbG1lVmRwZEdnb0xpNHVLU0I5WEc1Y2RGeDBYSFF2THlCa1pXWmxjbkpsWkM1eVpYTnZiSFpsSUQwZ1puVnVZM1JwYjI0b0tTQjdJR1JsWm1WeWNtVmtMbkpsYzI5c2RtVlhhWFJvS0M0dUxpa2dmVnh1WEhSY2RGeDBMeThnWkdWbVpYSnlaV1F1Y21WcVpXTjBJRDBnWm5WdVkzUnBiMjRvS1NCN0lHUmxabVZ5Y21Wa0xuSmxhbVZqZEZkcGRHZ29MaTR1S1NCOVhHNWNkRngwWEhSa1pXWmxjbkpsWkZzZ2RIVndiR1ZiSURBZ1hTQmRJRDBnWm5WdVkzUnBiMjRvS1NCN1hHNWNkRngwWEhSY2RHUmxabVZ5Y21Wa1d5QjBkWEJzWlZzZ01DQmRJQ3NnWENKWGFYUm9YQ0lnWFNnZ2RHaHBjeUE5UFQwZ1pHVm1aWEp5WldRZ1B5QjFibVJsWm1sdVpXUWdPaUIwYUdsekxDQmhjbWQxYldWdWRITWdLVHRjYmx4MFhIUmNkRngwY21WMGRYSnVJSFJvYVhNN1hHNWNkRngwWEhSOU8xeHVYRzVjZEZ4MFhIUXZMeUJrWldabGNuSmxaQzV1YjNScFpubFhhWFJvSUQwZ2JHbHpkQzVtYVhKbFYybDBhRnh1WEhSY2RGeDBMeThnWkdWbVpYSnlaV1F1Y21WemIyeDJaVmRwZEdnZ1BTQnNhWE4wTG1acGNtVlhhWFJvWEc1Y2RGeDBYSFF2THlCa1pXWmxjbkpsWkM1eVpXcGxZM1JYYVhSb0lEMGdiR2x6ZEM1bWFYSmxWMmwwYUZ4dVhIUmNkRngwWkdWbVpYSnlaV1JiSUhSMWNHeGxXeUF3SUYwZ0t5QmNJbGRwZEdoY0lpQmRJRDBnYkdsemRDNW1hWEpsVjJsMGFEdGNibHgwWEhSOUlDazdYRzVjYmx4MFhIUXZMeUJOWVd0bElIUm9aU0JrWldabGNuSmxaQ0JoSUhCeWIyMXBjMlZjYmx4MFhIUndjbTl0YVhObExuQnliMjFwYzJVb0lHUmxabVZ5Y21Wa0lDazdYRzVjYmx4MFhIUXZMeUJEWVd4c0lHZHBkbVZ1SUdaMWJtTWdhV1lnWVc1NVhHNWNkRngwYVdZZ0tDQm1kVzVqSUNrZ2UxeHVYSFJjZEZ4MFpuVnVZeTVqWVd4c0tDQmtaV1psY25KbFpDd2daR1ZtWlhKeVpXUWdLVHRjYmx4MFhIUjlYRzVjYmx4MFhIUXZMeUJCYkd3Z1pHOXVaU0ZjYmx4MFhIUnlaWFIxY200Z1pHVm1aWEp5WldRN1hHNWNkSDBzWEc1Y2JseDBMeThnUkdWbVpYSnlaV1FnYUdWc2NHVnlYRzVjZEhkb1pXNDZJR1oxYm1OMGFXOXVLQ0J6YVc1bmJHVldZV3gxWlNBcElIdGNibHgwWEhSMllYSmNibHh1WEhSY2RGeDBMeThnWTI5MWJuUWdiMllnZFc1amIyMXdiR1YwWldRZ2MzVmliM0prYVc1aGRHVnpYRzVjZEZ4MFhIUnlaVzFoYVc1cGJtY2dQU0JoY21kMWJXVnVkSE11YkdWdVozUm9MRnh1WEc1Y2RGeDBYSFF2THlCamIzVnVkQ0J2WmlCMWJuQnliMk5sYzNObFpDQmhjbWQxYldWdWRITmNibHgwWEhSY2RHa2dQU0J5WlcxaGFXNXBibWNzWEc1Y2JseDBYSFJjZEM4dklITjFZbTl5WkdsdVlYUmxJR1oxYkdacGJHeHRaVzUwSUdSaGRHRmNibHgwWEhSY2RISmxjMjlzZG1WRGIyNTBaWGgwY3lBOUlFRnljbUY1S0NCcElDa3NYRzVjZEZ4MFhIUnlaWE52YkhabFZtRnNkV1Z6SUQwZ2MyeHBZMlV1WTJGc2JDZ2dZWEpuZFcxbGJuUnpJQ2tzWEc1Y2JseDBYSFJjZEM4dklIUm9aU0J3Y21sdFlYSjVJRVJsWm1WeWNtVmtYRzVjZEZ4MFhIUndjbWx0WVhKNUlEMGdhbEYxWlhKNUxrUmxabVZ5Y21Wa0tDa3NYRzVjYmx4MFhIUmNkQzh2SUhOMVltOXlaR2x1WVhSbElHTmhiR3hpWVdOcklHWmhZM1J2Y25sY2JseDBYSFJjZEhWd1pHRjBaVVoxYm1NZ1BTQm1kVzVqZEdsdmJpZ2dhU0FwSUh0Y2JseDBYSFJjZEZ4MGNtVjBkWEp1SUdaMWJtTjBhVzl1S0NCMllXeDFaU0FwSUh0Y2JseDBYSFJjZEZ4MFhIUnlaWE52YkhabFEyOXVkR1Y0ZEhOYklHa2dYU0E5SUhSb2FYTTdYRzVjZEZ4MFhIUmNkRngwY21WemIyeDJaVlpoYkhWbGMxc2dhU0JkSUQwZ1lYSm5kVzFsYm5SekxteGxibWQwYUNBK0lERWdQeUJ6YkdsalpTNWpZV3hzS0NCaGNtZDFiV1Z1ZEhNZ0tTQTZJSFpoYkhWbE8xeHVYSFJjZEZ4MFhIUmNkR2xtSUNnZ0lTZ2dMUzF5WlcxaGFXNXBibWNnS1NBcElIdGNibHgwWEhSY2RGeDBYSFJjZEhCeWFXMWhjbmt1Y21WemIyeDJaVmRwZEdnb0lISmxjMjlzZG1WRGIyNTBaWGgwY3l3Z2NtVnpiMngyWlZaaGJIVmxjeUFwTzF4dVhIUmNkRngwWEhSY2RIMWNibHgwWEhSY2RGeDBmVHRjYmx4MFhIUmNkSDA3WEc1Y2JseDBYSFF2THlCVGFXNW5iR1V0SUdGdVpDQmxiWEIwZVNCaGNtZDFiV1Z1ZEhNZ1lYSmxJR0ZrYjNCMFpXUWdiR2xyWlNCUWNtOXRhWE5sTG5KbGMyOXNkbVZjYmx4MFhIUnBaaUFvSUhKbGJXRnBibWx1WnlBOFBTQXhJQ2tnZTF4dVhIUmNkRngwWVdSdmNIUldZV3gxWlNnZ2MybHVaMnhsVm1Gc2RXVXNJSEJ5YVcxaGNua3VaRzl1WlNnZ2RYQmtZWFJsUm5WdVl5Z2dhU0FwSUNrdWNtVnpiMngyWlN3Z2NISnBiV0Z5ZVM1eVpXcGxZM1FzWEc1Y2RGeDBYSFJjZENGeVpXMWhhVzVwYm1jZ0tUdGNibHh1WEhSY2RGeDBMeThnVlhObElDNTBhR1Z1S0NrZ2RHOGdkVzUzY21Gd0lITmxZMjl1WkdGeWVTQjBhR1Z1WVdKc1pYTWdLR05tTGlCbmFDMHpNREF3S1Z4dVhIUmNkRngwYVdZZ0tDQndjbWx0WVhKNUxuTjBZWFJsS0NrZ1BUMDlJRndpY0dWdVpHbHVaMXdpSUh4OFhHNWNkRngwWEhSY2RHbHpSblZ1WTNScGIyNG9JSEpsYzI5c2RtVldZV3gxWlhOYklHa2dYU0FtSmlCeVpYTnZiSFpsVm1Gc2RXVnpXeUJwSUYwdWRHaGxiaUFwSUNrZ2UxeHVYRzVjZEZ4MFhIUmNkSEpsZEhWeWJpQndjbWx0WVhKNUxuUm9aVzRvS1R0Y2JseDBYSFJjZEgxY2JseDBYSFI5WEc1Y2JseDBYSFF2THlCTmRXeDBhWEJzWlNCaGNtZDFiV1Z1ZEhNZ1lYSmxJR0ZuWjNKbFoyRjBaV1FnYkdsclpTQlFjbTl0YVhObExtRnNiQ0JoY25KaGVTQmxiR1Z0Wlc1MGMxeHVYSFJjZEhkb2FXeGxJQ2dnYVMwdElDa2dlMXh1WEhSY2RGeDBZV1J2Y0hSV1lXeDFaU2dnY21WemIyeDJaVlpoYkhWbGMxc2dhU0JkTENCMWNHUmhkR1ZHZFc1aktDQnBJQ2tzSUhCeWFXMWhjbmt1Y21WcVpXTjBJQ2s3WEc1Y2RGeDBmVnh1WEc1Y2RGeDBjbVYwZFhKdUlIQnlhVzFoY25rdWNISnZiV2x6WlNncE8xeHVYSFI5WEc1OUlDazdYRzVjYmx4dUx5OGdWR2hsYzJVZ2RYTjFZV3hzZVNCcGJtUnBZMkYwWlNCaElIQnliMmR5WVcxdFpYSWdiV2x6ZEdGclpTQmtkWEpwYm1jZ1pHVjJaV3h2Y0cxbGJuUXNYRzR2THlCM1lYSnVJR0ZpYjNWMElIUm9aVzBnUVZOQlVDQnlZWFJvWlhJZ2RHaGhiaUJ6ZDJGc2JHOTNhVzVuSUhSb1pXMGdZbmtnWkdWbVlYVnNkQzVjYm5aaGNpQnlaWEp5YjNKT1lXMWxjeUE5SUM5ZUtFVjJZV3g4U1c1MFpYSnVZV3g4VW1GdVoyVjhVbVZtWlhKbGJtTmxmRk41Ym5SaGVIeFVlWEJsZkZWU1NTbEZjbkp2Y2lRdk8xeHVYRzVxVVhWbGNua3VSR1ZtWlhKeVpXUXVaWGhqWlhCMGFXOXVTRzl2YXlBOUlHWjFibU4wYVc5dUtDQmxjbkp2Y2l3Z2MzUmhZMnNnS1NCN1hHNWNibHgwTHk4Z1UzVndjRzl5ZERvZ1NVVWdPQ0F0SURrZ2IyNXNlVnh1WEhRdkx5QkRiMjV6YjJ4bElHVjRhWE4wY3lCM2FHVnVJR1JsZGlCMGIyOXNjeUJoY21VZ2IzQmxiaXdnZDJocFkyZ2dZMkZ1SUdoaGNIQmxiaUJoZENCaGJua2dkR2x0WlZ4dVhIUnBaaUFvSUhkcGJtUnZkeTVqYjI1emIyeGxJQ1ltSUhkcGJtUnZkeTVqYjI1emIyeGxMbmRoY200Z0ppWWdaWEp5YjNJZ0ppWWdjbVZ5Y205eVRtRnRaWE11ZEdWemRDZ2daWEp5YjNJdWJtRnRaU0FwSUNrZ2UxeHVYSFJjZEhkcGJtUnZkeTVqYjI1emIyeGxMbmRoY200b0lGd2lhbEYxWlhKNUxrUmxabVZ5Y21Wa0lHVjRZMlZ3ZEdsdmJqb2dYQ0lnS3lCbGNuSnZjaTV0WlhOellXZGxMQ0JsY25KdmNpNXpkR0ZqYXl3Z2MzUmhZMnNnS1R0Y2JseDBmVnh1ZlR0Y2JseHVYRzVjYmx4dWFsRjFaWEo1TG5KbFlXUjVSWGhqWlhCMGFXOXVJRDBnWm5WdVkzUnBiMjRvSUdWeWNtOXlJQ2tnZTF4dVhIUjNhVzVrYjNjdWMyVjBWR2x0Wlc5MWRDZ2dablZ1WTNScGIyNG9LU0I3WEc1Y2RGeDBkR2h5YjNjZ1pYSnliM0k3WEc1Y2RIMGdLVHRjYm4wN1hHNWNibHh1WEc1Y2JpOHZJRlJvWlNCa1pXWmxjbkpsWkNCMWMyVmtJRzl1SUVSUFRTQnlaV0ZrZVZ4dWRtRnlJSEpsWVdSNVRHbHpkQ0E5SUdwUmRXVnllUzVFWldabGNuSmxaQ2dwTzF4dVhHNXFVWFZsY25rdVptNHVjbVZoWkhrZ1BTQm1kVzVqZEdsdmJpZ2dabTRnS1NCN1hHNWNibHgwY21WaFpIbE1hWE4wWEc1Y2RGeDBMblJvWlc0b0lHWnVJQ2xjYmx4dVhIUmNkQzh2SUZkeVlYQWdhbEYxWlhKNUxuSmxZV1I1UlhoalpYQjBhVzl1SUdsdUlHRWdablZ1WTNScGIyNGdjMjhnZEdoaGRDQjBhR1VnYkc5dmEzVndYRzVjZEZ4MEx5OGdhR0Z3Y0dWdWN5QmhkQ0IwYUdVZ2RHbHRaU0J2WmlCbGNuSnZjaUJvWVc1a2JHbHVaeUJwYm5OMFpXRmtJRzltSUdOaGJHeGlZV05yWEc1Y2RGeDBMeThnY21WbmFYTjBjbUYwYVc5dUxseHVYSFJjZEM1allYUmphQ2dnWm5WdVkzUnBiMjRvSUdWeWNtOXlJQ2tnZTF4dVhIUmNkRngwYWxGMVpYSjVMbkpsWVdSNVJYaGpaWEIwYVc5dUtDQmxjbkp2Y2lBcE8xeHVYSFJjZEgwZ0tUdGNibHh1WEhSeVpYUjFjbTRnZEdocGN6dGNibjA3WEc1Y2JtcFJkV1Z5ZVM1bGVIUmxibVFvSUh0Y2JseHVYSFF2THlCSmN5QjBhR1VnUkU5TklISmxZV1I1SUhSdklHSmxJSFZ6WldRL0lGTmxkQ0IwYnlCMGNuVmxJRzl1WTJVZ2FYUWdiMk5qZFhKekxseHVYSFJwYzFKbFlXUjVPaUJtWVd4elpTeGNibHh1WEhRdkx5QkJJR052ZFc1MFpYSWdkRzhnZEhKaFkyc2dhRzkzSUcxaGJua2dhWFJsYlhNZ2RHOGdkMkZwZENCbWIzSWdZbVZtYjNKbFhHNWNkQzh2SUhSb1pTQnlaV0ZrZVNCbGRtVnVkQ0JtYVhKbGN5NGdVMlZsSUhSeVlXTXROamM0TVZ4dVhIUnlaV0ZrZVZkaGFYUTZJREVzWEc1Y2JseDBMeThnU0dGdVpHeGxJSGRvWlc0Z2RHaGxJRVJQVFNCcGN5QnlaV0ZrZVZ4dVhIUnlaV0ZrZVRvZ1puVnVZM1JwYjI0b0lIZGhhWFFnS1NCN1hHNWNibHgwWEhRdkx5QkJZbTl5ZENCcFppQjBhR1Z5WlNCaGNtVWdjR1Z1WkdsdVp5Qm9iMnhrY3lCdmNpQjNaU2R5WlNCaGJISmxZV1I1SUhKbFlXUjVYRzVjZEZ4MGFXWWdLQ0IzWVdsMElEMDlQU0IwY25WbElEOGdMUzFxVVhWbGNua3VjbVZoWkhsWFlXbDBJRG9nYWxGMVpYSjVMbWx6VW1WaFpIa2dLU0I3WEc1Y2RGeDBYSFJ5WlhSMWNtNDdYRzVjZEZ4MGZWeHVYRzVjZEZ4MEx5OGdVbVZ0WlcxaVpYSWdkR2hoZENCMGFHVWdSRTlOSUdseklISmxZV1I1WEc1Y2RGeDBhbEYxWlhKNUxtbHpVbVZoWkhrZ1BTQjBjblZsTzF4dVhHNWNkRngwTHk4Z1NXWWdZU0J1YjNKdFlXd2dSRTlOSUZKbFlXUjVJR1YyWlc1MElHWnBjbVZrTENCa1pXTnlaVzFsYm5Rc0lHRnVaQ0IzWVdsMElHbG1JRzVsWldRZ1ltVmNibHgwWEhScFppQW9JSGRoYVhRZ0lUMDlJSFJ5ZFdVZ0ppWWdMUzFxVVhWbGNua3VjbVZoWkhsWFlXbDBJRDRnTUNBcElIdGNibHgwWEhSY2RISmxkSFZ5Ymp0Y2JseDBYSFI5WEc1Y2JseDBYSFF2THlCSlppQjBhR1Z5WlNCaGNtVWdablZ1WTNScGIyNXpJR0p2ZFc1a0xDQjBieUJsZUdWamRYUmxYRzVjZEZ4MGNtVmhaSGxNYVhOMExuSmxjMjlzZG1WWGFYUm9LQ0JrYjJOMWJXVnVkQ3dnV3lCcVVYVmxjbmtnWFNBcE8xeHVYSFI5WEc1OUlDazdYRzVjYm1wUmRXVnllUzV5WldGa2VTNTBhR1Z1SUQwZ2NtVmhaSGxNYVhOMExuUm9aVzQ3WEc1Y2JpOHZJRlJvWlNCeVpXRmtlU0JsZG1WdWRDQm9ZVzVrYkdWeUlHRnVaQ0J6Wld4bUlHTnNaV0Z1ZFhBZ2JXVjBhRzlrWEc1bWRXNWpkR2x2YmlCamIyMXdiR1YwWldRb0tTQjdYRzVjZEdSdlkzVnRaVzUwTG5KbGJXOTJaVVYyWlc1MFRHbHpkR1Z1WlhJb0lGd2lSRTlOUTI5dWRHVnVkRXh2WVdSbFpGd2lMQ0JqYjIxd2JHVjBaV1FnS1R0Y2JseDBkMmx1Wkc5M0xuSmxiVzkyWlVWMlpXNTBUR2x6ZEdWdVpYSW9JRndpYkc5aFpGd2lMQ0JqYjIxd2JHVjBaV1FnS1R0Y2JseDBhbEYxWlhKNUxuSmxZV1I1S0NrN1hHNTlYRzVjYmk4dklFTmhkR05vSUdOaGMyVnpJSGRvWlhKbElDUW9aRzlqZFcxbGJuUXBMbkpsWVdSNUtDa2dhWE1nWTJGc2JHVmtYRzR2THlCaFpuUmxjaUIwYUdVZ1luSnZkM05sY2lCbGRtVnVkQ0JvWVhNZ1lXeHlaV0ZrZVNCdlkyTjFjbkpsWkM1Y2JpOHZJRk4xY0hCdmNuUTZJRWxGSUR3OU9TQXRJREV3SUc5dWJIbGNiaTh2SUU5c1pHVnlJRWxGSUhOdmJXVjBhVzFsY3lCemFXZHVZV3h6SUZ3aWFXNTBaWEpoWTNScGRtVmNJaUIwYjI4Z2MyOXZibHh1YVdZZ0tDQmtiMk4xYldWdWRDNXlaV0ZrZVZOMFlYUmxJRDA5UFNCY0ltTnZiWEJzWlhSbFhDSWdmSHhjYmx4MEtDQmtiMk4xYldWdWRDNXlaV0ZrZVZOMFlYUmxJQ0U5UFNCY0lteHZZV1JwYm1kY0lpQW1KaUFoWkc5amRXMWxiblF1Wkc5amRXMWxiblJGYkdWdFpXNTBMbVJ2VTJOeWIyeHNJQ2tnS1NCN1hHNWNibHgwTHk4Z1NHRnVaR3hsSUdsMElHRnplVzVqYUhKdmJtOTFjMng1SUhSdklHRnNiRzkzSUhOamNtbHdkSE1nZEdobElHOXdjRzl5ZEhWdWFYUjVJSFJ2SUdSbGJHRjVJSEpsWVdSNVhHNWNkSGRwYm1SdmR5NXpaWFJVYVcxbGIzVjBLQ0JxVVhWbGNua3VjbVZoWkhrZ0tUdGNibHh1ZlNCbGJITmxJSHRjYmx4dVhIUXZMeUJWYzJVZ2RHaGxJR2hoYm1SNUlHVjJaVzUwSUdOaGJHeGlZV05yWEc1Y2RHUnZZM1Z0Wlc1MExtRmtaRVYyWlc1MFRHbHpkR1Z1WlhJb0lGd2lSRTlOUTI5dWRHVnVkRXh2WVdSbFpGd2lMQ0JqYjIxd2JHVjBaV1FnS1R0Y2JseHVYSFF2THlCQklHWmhiR3hpWVdOcklIUnZJSGRwYm1SdmR5NXZibXh2WVdRc0lIUm9ZWFFnZDJsc2JDQmhiSGRoZVhNZ2QyOXlhMXh1WEhSM2FXNWtiM2N1WVdSa1JYWmxiblJNYVhOMFpXNWxjaWdnWENKc2IyRmtYQ0lzSUdOdmJYQnNaWFJsWkNBcE8xeHVmVnh1WEc1Y2JseHVYRzR2THlCTmRXeDBhV1oxYm1OMGFXOXVZV3dnYldWMGFHOWtJSFJ2SUdkbGRDQmhibVFnYzJWMElIWmhiSFZsY3lCdlppQmhJR052Ykd4bFkzUnBiMjVjYmk4dklGUm9aU0IyWVd4MVpTOXpJR05oYmlCdmNIUnBiMjVoYkd4NUlHSmxJR1Y0WldOMWRHVmtJR2xtSUdsMEozTWdZU0JtZFc1amRHbHZibHh1ZG1GeUlHRmpZMlZ6Y3lBOUlHWjFibU4wYVc5dUtDQmxiR1Z0Y3l3Z1ptNHNJR3RsZVN3Z2RtRnNkV1VzSUdOb1lXbHVZV0pzWlN3Z1pXMXdkSGxIWlhRc0lISmhkeUFwSUh0Y2JseDBkbUZ5SUdrZ1BTQXdMRnh1WEhSY2RHeGxiaUE5SUdWc1pXMXpMbXhsYm1kMGFDeGNibHgwWEhSaWRXeHJJRDBnYTJWNUlEMDlJRzUxYkd3N1hHNWNibHgwTHk4Z1UyVjBjeUJ0WVc1NUlIWmhiSFZsYzF4dVhIUnBaaUFvSUhSdlZIbHdaU2dnYTJWNUlDa2dQVDA5SUZ3aWIySnFaV04wWENJZ0tTQjdYRzVjZEZ4MFkyaGhhVzVoWW14bElEMGdkSEoxWlR0Y2JseDBYSFJtYjNJZ0tDQnBJR2x1SUd0bGVTQXBJSHRjYmx4MFhIUmNkR0ZqWTJWemN5Z2daV3hsYlhNc0lHWnVMQ0JwTENCclpYbGJJR2tnWFN3Z2RISjFaU3dnWlcxd2RIbEhaWFFzSUhKaGR5QXBPMXh1WEhSY2RIMWNibHh1WEhRdkx5QlRaWFJ6SUc5dVpTQjJZV3gxWlZ4dVhIUjlJR1ZzYzJVZ2FXWWdLQ0IyWVd4MVpTQWhQVDBnZFc1a1pXWnBibVZrSUNrZ2UxeHVYSFJjZEdOb1lXbHVZV0pzWlNBOUlIUnlkV1U3WEc1Y2JseDBYSFJwWmlBb0lDRnBjMFoxYm1OMGFXOXVLQ0IyWVd4MVpTQXBJQ2tnZTF4dVhIUmNkRngwY21GM0lEMGdkSEoxWlR0Y2JseDBYSFI5WEc1Y2JseDBYSFJwWmlBb0lHSjFiR3NnS1NCN1hHNWNibHgwWEhSY2RDOHZJRUoxYkdzZ2IzQmxjbUYwYVc5dWN5QnlkVzRnWVdkaGFXNXpkQ0IwYUdVZ1pXNTBhWEpsSUhObGRGeHVYSFJjZEZ4MGFXWWdLQ0J5WVhjZ0tTQjdYRzVjZEZ4MFhIUmNkR1p1TG1OaGJHd29JR1ZzWlcxekxDQjJZV3gxWlNBcE8xeHVYSFJjZEZ4MFhIUm1iaUE5SUc1MWJHdzdYRzVjYmx4MFhIUmNkQzh2SUM0dUxtVjRZMlZ3ZENCM2FHVnVJR1Y0WldOMWRHbHVaeUJtZFc1amRHbHZiaUIyWVd4MVpYTmNibHgwWEhSY2RIMGdaV3h6WlNCN1hHNWNkRngwWEhSY2RHSjFiR3NnUFNCbWJqdGNibHgwWEhSY2RGeDBabTRnUFNCbWRXNWpkR2x2YmlnZ1pXeGxiU3dnWDJ0bGVTd2dkbUZzZFdVZ0tTQjdYRzVjZEZ4MFhIUmNkRngwY21WMGRYSnVJR0oxYkdzdVkyRnNiQ2dnYWxGMVpYSjVLQ0JsYkdWdElDa3NJSFpoYkhWbElDazdYRzVjZEZ4MFhIUmNkSDA3WEc1Y2RGeDBYSFI5WEc1Y2RGeDBmVnh1WEc1Y2RGeDBhV1lnS0NCbWJpQXBJSHRjYmx4MFhIUmNkR1p2Y2lBb0lEc2dhU0E4SUd4bGJqc2dhU3NySUNrZ2UxeHVYSFJjZEZ4MFhIUm1iaWhjYmx4MFhIUmNkRngwWEhSbGJHVnRjMXNnYVNCZExDQnJaWGtzSUhKaGR5QS9YRzVjZEZ4MFhIUmNkRngwWEhSMllXeDFaU0E2WEc1Y2RGeDBYSFJjZEZ4MFhIUjJZV3gxWlM1allXeHNLQ0JsYkdWdGMxc2dhU0JkTENCcExDQm1iaWdnWld4bGJYTmJJR2tnWFN3Z2EyVjVJQ2tnS1Z4dVhIUmNkRngwWEhRcE8xeHVYSFJjZEZ4MGZWeHVYSFJjZEgxY2JseDBmVnh1WEc1Y2RHbG1JQ2dnWTJoaGFXNWhZbXhsSUNrZ2UxeHVYSFJjZEhKbGRIVnliaUJsYkdWdGN6dGNibHgwZlZ4dVhHNWNkQzh2SUVkbGRITmNibHgwYVdZZ0tDQmlkV3hySUNrZ2UxeHVYSFJjZEhKbGRIVnliaUJtYmk1allXeHNLQ0JsYkdWdGN5QXBPMXh1WEhSOVhHNWNibHgwY21WMGRYSnVJR3hsYmlBL0lHWnVLQ0JsYkdWdGMxc2dNQ0JkTENCclpYa2dLU0E2SUdWdGNIUjVSMlYwTzF4dWZUdGNibHh1WEc0dkx5Qk5ZWFJqYUdWeklHUmhjMmhsWkNCemRISnBibWNnWm05eUlHTmhiV1ZzYVhwcGJtZGNiblpoY2lCeWJYTlFjbVZtYVhnZ1BTQXZYaTF0Y3kwdkxGeHVYSFJ5WkdGemFFRnNjR2hoSUQwZ0x5MG9XMkV0ZWwwcEwyYzdYRzVjYmk4dklGVnpaV1FnWW5rZ1kyRnRaV3hEWVhObElHRnpJR05oYkd4aVlXTnJJSFJ2SUhKbGNHeGhZMlVvS1Z4dVpuVnVZM1JwYjI0Z1ptTmhiV1ZzUTJGelpTZ2dYMkZzYkN3Z2JHVjBkR1Z5SUNrZ2UxeHVYSFJ5WlhSMWNtNGdiR1YwZEdWeUxuUnZWWEJ3WlhKRFlYTmxLQ2s3WEc1OVhHNWNiaTh2SUVOdmJuWmxjblFnWkdGemFHVmtJSFJ2SUdOaGJXVnNRMkZ6WlRzZ2RYTmxaQ0JpZVNCMGFHVWdZM056SUdGdVpDQmtZWFJoSUcxdlpIVnNaWE5jYmk4dklGTjFjSEJ2Y25RNklFbEZJRHc5T1NBdElERXhMQ0JGWkdkbElERXlJQzBnTVRWY2JpOHZJRTFwWTNKdmMyOW1kQ0JtYjNKbmIzUWdkRzhnYUhWdGNDQjBhR1ZwY2lCMlpXNWtiM0lnY0hKbFptbDRJQ2gwY21GakxUazFOeklwWEc1bWRXNWpkR2x2YmlCallXMWxiRU5oYzJVb0lITjBjbWx1WnlBcElIdGNibHgwY21WMGRYSnVJSE4wY21sdVp5NXlaWEJzWVdObEtDQnliWE5RY21WbWFYZ3NJRndpYlhNdFhDSWdLUzV5WlhCc1lXTmxLQ0J5WkdGemFFRnNjR2hoTENCbVkyRnRaV3hEWVhObElDazdYRzU5WEc1MllYSWdZV05qWlhCMFJHRjBZU0E5SUdaMWJtTjBhVzl1S0NCdmQyNWxjaUFwSUh0Y2JseHVYSFF2THlCQlkyTmxjSFJ6SUc5dWJIazZYRzVjZEM4dklDQXRJRTV2WkdWY2JseDBMeThnSUNBZ0xTQk9iMlJsTGtWTVJVMUZUbFJmVGs5RVJWeHVYSFF2THlBZ0lDQXRJRTV2WkdVdVJFOURWVTFGVGxSZlRrOUVSVnh1WEhRdkx5QWdMU0JQWW1wbFkzUmNibHgwTHk4Z0lDQWdMU0JCYm5sY2JseDBjbVYwZFhKdUlHOTNibVZ5TG01dlpHVlVlWEJsSUQwOVBTQXhJSHg4SUc5M2JtVnlMbTV2WkdWVWVYQmxJRDA5UFNBNUlIeDhJQ0VvSUN0dmQyNWxjaTV1YjJSbFZIbHdaU0FwTzF4dWZUdGNibHh1WEc1Y2JseHVablZ1WTNScGIyNGdSR0YwWVNncElIdGNibHgwZEdocGN5NWxlSEJoYm1SdklEMGdhbEYxWlhKNUxtVjRjR0Z1Wkc4Z0t5QkVZWFJoTG5WcFpDc3JPMXh1ZlZ4dVhHNUVZWFJoTG5WcFpDQTlJREU3WEc1Y2JrUmhkR0V1Y0hKdmRHOTBlWEJsSUQwZ2UxeHVYRzVjZEdOaFkyaGxPaUJtZFc1amRHbHZiaWdnYjNkdVpYSWdLU0I3WEc1Y2JseDBYSFF2THlCRGFHVmpheUJwWmlCMGFHVWdiM2R1WlhJZ2IySnFaV04wSUdGc2NtVmhaSGtnYUdGeklHRWdZMkZqYUdWY2JseDBYSFIyWVhJZ2RtRnNkV1VnUFNCdmQyNWxjbHNnZEdocGN5NWxlSEJoYm1SdklGMDdYRzVjYmx4MFhIUXZMeUJKWmlCdWIzUXNJR055WldGMFpTQnZibVZjYmx4MFhIUnBaaUFvSUNGMllXeDFaU0FwSUh0Y2JseDBYSFJjZEhaaGJIVmxJRDBnZTMwN1hHNWNibHgwWEhSY2RDOHZJRmRsSUdOaGJpQmhZMk5sY0hRZ1pHRjBZU0JtYjNJZ2JtOXVMV1ZzWlcxbGJuUWdibTlrWlhNZ2FXNGdiVzlrWlhKdUlHSnliM2R6WlhKekxGeHVYSFJjZEZ4MEx5OGdZblYwSUhkbElITm9iM1ZzWkNCdWIzUXNJSE5sWlNCMGNtRmpMVGd6TXpVdVhHNWNkRngwWEhRdkx5QkJiSGRoZVhNZ2NtVjBkWEp1SUdGdUlHVnRjSFI1SUc5aWFtVmpkQzVjYmx4MFhIUmNkR2xtSUNnZ1lXTmpaWEIwUkdGMFlTZ2diM2R1WlhJZ0tTQXBJSHRjYmx4dVhIUmNkRngwWEhRdkx5QkpaaUJwZENCcGN5QmhJRzV2WkdVZ2RXNXNhV3RsYkhrZ2RHOGdZbVVnYzNSeWFXNW5hV1o1TFdWa0lHOXlJR3h2YjNCbFpDQnZkbVZ5WEc1Y2RGeDBYSFJjZEM4dklIVnpaU0J3YkdGcGJpQmhjM05wWjI1dFpXNTBYRzVjZEZ4MFhIUmNkR2xtSUNnZ2IzZHVaWEl1Ym05a1pWUjVjR1VnS1NCN1hHNWNkRngwWEhSY2RGeDBiM2R1WlhKYklIUm9hWE11Wlhod1lXNWtieUJkSUQwZ2RtRnNkV1U3WEc1Y2JseDBYSFJjZEZ4MEx5OGdUM1JvWlhKM2FYTmxJSE5sWTNWeVpTQnBkQ0JwYmlCaElHNXZiaTFsYm5WdFpYSmhZbXhsSUhCeWIzQmxjblI1WEc1Y2RGeDBYSFJjZEM4dklHTnZibVpwWjNWeVlXSnNaU0J0ZFhOMElHSmxJSFJ5ZFdVZ2RHOGdZV3hzYjNjZ2RHaGxJSEJ5YjNCbGNuUjVJSFJ2SUdKbFhHNWNkRngwWEhSY2RDOHZJR1JsYkdWMFpXUWdkMmhsYmlCa1lYUmhJR2x6SUhKbGJXOTJaV1JjYmx4MFhIUmNkRngwZlNCbGJITmxJSHRjYmx4MFhIUmNkRngwWEhSUFltcGxZM1F1WkdWbWFXNWxVSEp2Y0dWeWRIa29JRzkzYm1WeUxDQjBhR2x6TG1WNGNHRnVaRzhzSUh0Y2JseDBYSFJjZEZ4MFhIUmNkSFpoYkhWbE9pQjJZV3gxWlN4Y2JseDBYSFJjZEZ4MFhIUmNkR052Ym1acFozVnlZV0pzWlRvZ2RISjFaVnh1WEhSY2RGeDBYSFJjZEgwZ0tUdGNibHgwWEhSY2RGeDBmVnh1WEhSY2RGeDBmVnh1WEhSY2RIMWNibHh1WEhSY2RISmxkSFZ5YmlCMllXeDFaVHRjYmx4MGZTeGNibHgwYzJWME9pQm1kVzVqZEdsdmJpZ2diM2R1WlhJc0lHUmhkR0VzSUhaaGJIVmxJQ2tnZTF4dVhIUmNkSFpoY2lCd2NtOXdMRnh1WEhSY2RGeDBZMkZqYUdVZ1BTQjBhR2x6TG1OaFkyaGxLQ0J2ZDI1bGNpQXBPMXh1WEc1Y2RGeDBMeThnU0dGdVpHeGxPaUJiSUc5M2JtVnlMQ0JyWlhrc0lIWmhiSFZsSUYwZ1lYSm5jMXh1WEhSY2RDOHZJRUZzZDJGNWN5QjFjMlVnWTJGdFpXeERZWE5sSUd0bGVTQW9aMmd0TWpJMU55bGNibHgwWEhScFppQW9JSFI1Y0dWdlppQmtZWFJoSUQwOVBTQmNJbk4wY21sdVoxd2lJQ2tnZTF4dVhIUmNkRngwWTJGamFHVmJJR05oYldWc1EyRnpaU2dnWkdGMFlTQXBJRjBnUFNCMllXeDFaVHRjYmx4dVhIUmNkQzh2SUVoaGJtUnNaVG9nV3lCdmQyNWxjaXdnZXlCd2NtOXdaWEowYVdWeklIMGdYU0JoY21kelhHNWNkRngwZlNCbGJITmxJSHRjYmx4dVhIUmNkRngwTHk4Z1EyOXdlU0IwYUdVZ2NISnZjR1Z5ZEdsbGN5QnZibVV0WW5rdGIyNWxJSFJ2SUhSb1pTQmpZV05vWlNCdlltcGxZM1JjYmx4MFhIUmNkR1p2Y2lBb0lIQnliM0FnYVc0Z1pHRjBZU0FwSUh0Y2JseDBYSFJjZEZ4MFkyRmphR1ZiSUdOaGJXVnNRMkZ6WlNnZ2NISnZjQ0FwSUYwZ1BTQmtZWFJoV3lCd2NtOXdJRjA3WEc1Y2RGeDBYSFI5WEc1Y2RGeDBmVnh1WEhSY2RISmxkSFZ5YmlCallXTm9aVHRjYmx4MGZTeGNibHgwWjJWME9pQm1kVzVqZEdsdmJpZ2diM2R1WlhJc0lHdGxlU0FwSUh0Y2JseDBYSFJ5WlhSMWNtNGdhMlY1SUQwOVBTQjFibVJsWm1sdVpXUWdQMXh1WEhSY2RGeDBkR2hwY3k1allXTm9aU2dnYjNkdVpYSWdLU0E2WEc1Y2JseDBYSFJjZEM4dklFRnNkMkY1Y3lCMWMyVWdZMkZ0Wld4RFlYTmxJR3RsZVNBb1oyZ3RNakkxTnlsY2JseDBYSFJjZEc5M2JtVnlXeUIwYUdsekxtVjRjR0Z1Wkc4Z1hTQW1KaUJ2ZDI1bGNsc2dkR2hwY3k1bGVIQmhibVJ2SUYxYklHTmhiV1ZzUTJGelpTZ2dhMlY1SUNrZ1hUdGNibHgwZlN4Y2JseDBZV05qWlhOek9pQm1kVzVqZEdsdmJpZ2diM2R1WlhJc0lHdGxlU3dnZG1Gc2RXVWdLU0I3WEc1Y2JseDBYSFF2THlCSmJpQmpZWE5sY3lCM2FHVnlaU0JsYVhSb1pYSTZYRzVjZEZ4MEx5OWNibHgwWEhRdkx5QWdJREV1SUU1dklHdGxlU0IzWVhNZ2MzQmxZMmxtYVdWa1hHNWNkRngwTHk4Z0lDQXlMaUJCSUhOMGNtbHVaeUJyWlhrZ2QyRnpJSE53WldOcFptbGxaQ3dnWW5WMElHNXZJSFpoYkhWbElIQnliM1pwWkdWa1hHNWNkRngwTHk5Y2JseDBYSFF2THlCVVlXdGxJSFJvWlNCY0luSmxZV1JjSWlCd1lYUm9JR0Z1WkNCaGJHeHZkeUIwYUdVZ1oyVjBJRzFsZEdodlpDQjBieUJrWlhSbGNtMXBibVZjYmx4MFhIUXZMeUIzYUdsamFDQjJZV3gxWlNCMGJ5QnlaWFIxY200c0lISmxjM0JsWTNScGRtVnNlU0JsYVhSb1pYSTZYRzVjZEZ4MEx5OWNibHgwWEhRdkx5QWdJREV1SUZSb1pTQmxiblJwY21VZ1kyRmphR1VnYjJKcVpXTjBYRzVjZEZ4MEx5OGdJQ0F5TGlCVWFHVWdaR0YwWVNCemRHOXlaV1FnWVhRZ2RHaGxJR3RsZVZ4dVhIUmNkQzh2WEc1Y2RGeDBhV1lnS0NCclpYa2dQVDA5SUhWdVpHVm1hVzVsWkNCOGZGeHVYSFJjZEZ4MFhIUW9JQ2dnYTJWNUlDWW1JSFI1Y0dWdlppQnJaWGtnUFQwOUlGd2ljM1J5YVc1blhDSWdLU0FtSmlCMllXeDFaU0E5UFQwZ2RXNWtaV1pwYm1Wa0lDa2dLU0I3WEc1Y2JseDBYSFJjZEhKbGRIVnliaUIwYUdsekxtZGxkQ2dnYjNkdVpYSXNJR3RsZVNBcE8xeHVYSFJjZEgxY2JseHVYSFJjZEM4dklGZG9aVzRnZEdobElHdGxlU0JwY3lCdWIzUWdZU0J6ZEhKcGJtY3NJRzl5SUdKdmRHZ2dZU0JyWlhrZ1lXNWtJSFpoYkhWbFhHNWNkRngwTHk4Z1lYSmxJSE53WldOcFptbGxaQ3dnYzJWMElHOXlJR1Y0ZEdWdVpDQW9aWGhwYzNScGJtY2diMkpxWldOMGN5a2dkMmwwYUNCbGFYUm9aWEk2WEc1Y2RGeDBMeTljYmx4MFhIUXZMeUFnSURFdUlFRnVJRzlpYW1WamRDQnZaaUJ3Y205d1pYSjBhV1Z6WEc1Y2RGeDBMeThnSUNBeUxpQkJJR3RsZVNCaGJtUWdkbUZzZFdWY2JseDBYSFF2TDF4dVhIUmNkSFJvYVhNdWMyVjBLQ0J2ZDI1bGNpd2dhMlY1TENCMllXeDFaU0FwTzF4dVhHNWNkRngwTHk4Z1UybHVZMlVnZEdobElGd2ljMlYwWENJZ2NHRjBhQ0JqWVc0Z2FHRjJaU0IwZDI4Z2NHOXpjMmxpYkdVZ1pXNTBjbmtnY0c5cGJuUnpYRzVjZEZ4MEx5OGdjbVYwZFhKdUlIUm9aU0JsZUhCbFkzUmxaQ0JrWVhSaElHSmhjMlZrSUc5dUlIZG9hV05vSUhCaGRHZ2dkMkZ6SUhSaGEyVnVXeXBkWEc1Y2RGeDBjbVYwZFhKdUlIWmhiSFZsSUNFOVBTQjFibVJsWm1sdVpXUWdQeUIyWVd4MVpTQTZJR3RsZVR0Y2JseDBmU3hjYmx4MGNtVnRiM1psT2lCbWRXNWpkR2x2YmlnZ2IzZHVaWElzSUd0bGVTQXBJSHRjYmx4MFhIUjJZWElnYVN4Y2JseDBYSFJjZEdOaFkyaGxJRDBnYjNkdVpYSmJJSFJvYVhNdVpYaHdZVzVrYnlCZE8xeHVYRzVjZEZ4MGFXWWdLQ0JqWVdOb1pTQTlQVDBnZFc1a1pXWnBibVZrSUNrZ2UxeHVYSFJjZEZ4MGNtVjBkWEp1TzF4dVhIUmNkSDFjYmx4dVhIUmNkR2xtSUNnZ2EyVjVJQ0U5UFNCMWJtUmxabWx1WldRZ0tTQjdYRzVjYmx4MFhIUmNkQzh2SUZOMWNIQnZjblFnWVhKeVlYa2diM0lnYzNCaFkyVWdjMlZ3WVhKaGRHVmtJSE4wY21sdVp5QnZaaUJyWlhselhHNWNkRngwWEhScFppQW9JRUZ5Y21GNUxtbHpRWEp5WVhrb0lHdGxlU0FwSUNrZ2UxeHVYRzVjZEZ4MFhIUmNkQzh2SUVsbUlHdGxlU0JwY3lCaGJpQmhjbkpoZVNCdlppQnJaWGx6TGk0dVhHNWNkRngwWEhSY2RDOHZJRmRsSUdGc2QyRjVjeUJ6WlhRZ1kyRnRaV3hEWVhObElHdGxlWE1zSUhOdklISmxiVzkyWlNCMGFHRjBMbHh1WEhSY2RGeDBYSFJyWlhrZ1BTQnJaWGt1YldGd0tDQmpZVzFsYkVOaGMyVWdLVHRjYmx4MFhIUmNkSDBnWld4elpTQjdYRzVjZEZ4MFhIUmNkR3RsZVNBOUlHTmhiV1ZzUTJGelpTZ2dhMlY1SUNrN1hHNWNibHgwWEhSY2RGeDBMeThnU1dZZ1lTQnJaWGtnZDJsMGFDQjBhR1VnYzNCaFkyVnpJR1Y0YVhOMGN5d2dkWE5sSUdsMExseHVYSFJjZEZ4MFhIUXZMeUJQZEdobGNuZHBjMlVzSUdOeVpXRjBaU0JoYmlCaGNuSmhlU0JpZVNCdFlYUmphR2x1WnlCdWIyNHRkMmhwZEdWemNHRmpaVnh1WEhSY2RGeDBYSFJyWlhrZ1BTQnJaWGtnYVc0Z1kyRmphR1VnUDF4dVhIUmNkRngwWEhSY2RGc2dhMlY1SUYwZ09seHVYSFJjZEZ4MFhIUmNkQ2dnYTJWNUxtMWhkR05vS0NCeWJtOTBhSFJ0Ykhkb2FYUmxJQ2tnZkh3Z1cxMGdLVHRjYmx4MFhIUmNkSDFjYmx4dVhIUmNkRngwYVNBOUlHdGxlUzVzWlc1bmRHZzdYRzVjYmx4MFhIUmNkSGRvYVd4bElDZ2dhUzB0SUNrZ2UxeHVYSFJjZEZ4MFhIUmtaV3hsZEdVZ1kyRmphR1ZiSUd0bGVWc2dhU0JkSUYwN1hHNWNkRngwWEhSOVhHNWNkRngwZlZ4dVhHNWNkRngwTHk4Z1VtVnRiM1psSUhSb1pTQmxlSEJoYm1SdklHbG1JSFJvWlhKbEozTWdibThnYlc5eVpTQmtZWFJoWEc1Y2RGeDBhV1lnS0NCclpYa2dQVDA5SUhWdVpHVm1hVzVsWkNCOGZDQnFVWFZsY25rdWFYTkZiWEIwZVU5aWFtVmpkQ2dnWTJGamFHVWdLU0FwSUh0Y2JseHVYSFJjZEZ4MEx5OGdVM1Z3Y0c5eWREb2dRMmh5YjIxbElEdzlNelVnTFNBME5WeHVYSFJjZEZ4MEx5OGdWMlZpYTJsMElDWWdRbXhwYm1zZ2NHVnlabTl5YldGdVkyVWdjM1ZtWm1WeWN5QjNhR1Z1SUdSbGJHVjBhVzVuSUhCeWIzQmxjblJwWlhOY2JseDBYSFJjZEM4dklHWnliMjBnUkU5TklHNXZaR1Z6TENCemJ5QnpaWFFnZEc4Z2RXNWtaV1pwYm1Wa0lHbHVjM1JsWVdSY2JseDBYSFJjZEM4dklHaDBkSEJ6T2k4dlluVm5jeTVqYUhKdmJXbDFiUzV2Y21jdmNDOWphSEp2YldsMWJTOXBjM04xWlhNdlpHVjBZV2xzUDJsa1BUTTNPRFl3TnlBb1luVm5JSEpsYzNSeWFXTjBaV1FwWEc1Y2RGeDBYSFJwWmlBb0lHOTNibVZ5TG01dlpHVlVlWEJsSUNrZ2UxeHVYSFJjZEZ4MFhIUnZkMjVsY2xzZ2RHaHBjeTVsZUhCaGJtUnZJRjBnUFNCMWJtUmxabWx1WldRN1hHNWNkRngwWEhSOUlHVnNjMlVnZTF4dVhIUmNkRngwWEhSa1pXeGxkR1VnYjNkdVpYSmJJSFJvYVhNdVpYaHdZVzVrYnlCZE8xeHVYSFJjZEZ4MGZWeHVYSFJjZEgxY2JseDBmU3hjYmx4MGFHRnpSR0YwWVRvZ1puVnVZM1JwYjI0b0lHOTNibVZ5SUNrZ2UxeHVYSFJjZEhaaGNpQmpZV05vWlNBOUlHOTNibVZ5V3lCMGFHbHpMbVY0Y0dGdVpHOGdYVHRjYmx4MFhIUnlaWFIxY200Z1kyRmphR1VnSVQwOUlIVnVaR1ZtYVc1bFpDQW1KaUFoYWxGMVpYSjVMbWx6Ulcxd2RIbFBZbXBsWTNRb0lHTmhZMmhsSUNrN1hHNWNkSDFjYm4wN1hHNTJZWElnWkdGMFlWQnlhWFlnUFNCdVpYY2dSR0YwWVNncE8xeHVYRzUyWVhJZ1pHRjBZVlZ6WlhJZ1BTQnVaWGNnUkdGMFlTZ3BPMXh1WEc1Y2JseHVMeTljZEVsdGNHeGxiV1Z1ZEdGMGFXOXVJRk4xYlcxaGNubGNiaTh2WEc0dkwxeDBNUzRnUlc1bWIzSmpaU0JCVUVrZ2MzVnlabUZqWlNCaGJtUWdjMlZ0WVc1MGFXTWdZMjl0Y0dGMGFXSnBiR2wwZVNCM2FYUm9JREV1T1M1NElHSnlZVzVqYUZ4dUx5OWNkREl1SUVsdGNISnZkbVVnZEdobElHMXZaSFZzWlNkeklHMWhhVzUwWVdsdVlXSnBiR2wwZVNCaWVTQnlaV1IxWTJsdVp5QjBhR1VnYzNSdmNtRm5aVnh1THk5Y2RGeDBjR0YwYUhNZ2RHOGdZU0J6YVc1bmJHVWdiV1ZqYUdGdWFYTnRMbHh1THk5Y2RETXVJRlZ6WlNCMGFHVWdjMkZ0WlNCemFXNW5iR1VnYldWamFHRnVhWE50SUhSdklITjFjSEJ2Y25RZ1hDSndjbWwyWVhSbFhDSWdZVzVrSUZ3aWRYTmxjbHdpSUdSaGRHRXVYRzR2TDF4ME5DNGdYMDVsZG1WeVh5QmxlSEJ2YzJVZ1hDSndjbWwyWVhSbFhDSWdaR0YwWVNCMGJ5QjFjMlZ5SUdOdlpHVWdLRlJQUkU4NklFUnliM0FnWDJSaGRHRXNJRjl5WlcxdmRtVkVZWFJoS1Z4dUx5OWNkRFV1SUVGMmIybGtJR1Y0Y0c5emFXNW5JR2x0Y0d4bGJXVnVkR0YwYVc5dUlHUmxkR0ZwYkhNZ2IyNGdkWE5sY2lCdlltcGxZM1J6SUNobFp5NGdaWGh3WVc1a2J5QndjbTl3WlhKMGFXVnpLVnh1THk5Y2REWXVJRkJ5YjNacFpHVWdZU0JqYkdWaGNpQndZWFJvSUdadmNpQnBiWEJzWlcxbGJuUmhkR2x2YmlCMWNHZHlZV1JsSUhSdklGZGxZV3ROWVhBZ2FXNGdNakF4TkZ4dVhHNTJZWElnY21KeVlXTmxJRDBnTDE0b1B6cGNYSHRiWEZ4M1hGeFhYU3BjWEgxOFhGeGJXMXhjZDF4Y1YxMHFYRnhkS1NRdkxGeHVYSFJ5YlhWc2RHbEVZWE5vSUQwZ0wxdEJMVnBkTDJjN1hHNWNibVoxYm1OMGFXOXVJR2RsZEVSaGRHRW9JR1JoZEdFZ0tTQjdYRzVjZEdsbUlDZ2daR0YwWVNBOVBUMGdYQ0owY25WbFhDSWdLU0I3WEc1Y2RGeDBjbVYwZFhKdUlIUnlkV1U3WEc1Y2RIMWNibHh1WEhScFppQW9JR1JoZEdFZ1BUMDlJRndpWm1Gc2MyVmNJaUFwSUh0Y2JseDBYSFJ5WlhSMWNtNGdabUZzYzJVN1hHNWNkSDFjYmx4dVhIUnBaaUFvSUdSaGRHRWdQVDA5SUZ3aWJuVnNiRndpSUNrZ2UxeHVYSFJjZEhKbGRIVnliaUJ1ZFd4c08xeHVYSFI5WEc1Y2JseDBMeThnVDI1c2VTQmpiMjUyWlhKMElIUnZJR0VnYm5WdFltVnlJR2xtSUdsMElHUnZaWE51SjNRZ1kyaGhibWRsSUhSb1pTQnpkSEpwYm1kY2JseDBhV1lnS0NCa1lYUmhJRDA5UFNBclpHRjBZU0FySUZ3aVhDSWdLU0I3WEc1Y2RGeDBjbVYwZFhKdUlDdGtZWFJoTzF4dVhIUjlYRzVjYmx4MGFXWWdLQ0J5WW5KaFkyVXVkR1Z6ZENnZ1pHRjBZU0FwSUNrZ2UxeHVYSFJjZEhKbGRIVnliaUJLVTA5T0xuQmhjbk5sS0NCa1lYUmhJQ2s3WEc1Y2RIMWNibHh1WEhSeVpYUjFjbTRnWkdGMFlUdGNibjFjYmx4dVpuVnVZM1JwYjI0Z1pHRjBZVUYwZEhJb0lHVnNaVzBzSUd0bGVTd2daR0YwWVNBcElIdGNibHgwZG1GeUlHNWhiV1U3WEc1Y2JseDBMeThnU1dZZ2JtOTBhR2x1WnlCM1lYTWdabTkxYm1RZ2FXNTBaWEp1WVd4c2VTd2dkSEo1SUhSdklHWmxkR05vSUdGdWVWeHVYSFF2THlCa1lYUmhJR1p5YjIwZ2RHaGxJRWhVVFV3MUlHUmhkR0V0S2lCaGRIUnlhV0oxZEdWY2JseDBhV1lnS0NCa1lYUmhJRDA5UFNCMWJtUmxabWx1WldRZ0ppWWdaV3hsYlM1dWIyUmxWSGx3WlNBOVBUMGdNU0FwSUh0Y2JseDBYSFJ1WVcxbElEMGdYQ0prWVhSaExWd2lJQ3NnYTJWNUxuSmxjR3hoWTJVb0lISnRkV3gwYVVSaGMyZ3NJRndpTFNRbVhDSWdLUzUwYjB4dmQyVnlRMkZ6WlNncE8xeHVYSFJjZEdSaGRHRWdQU0JsYkdWdExtZGxkRUYwZEhKcFluVjBaU2dnYm1GdFpTQXBPMXh1WEc1Y2RGeDBhV1lnS0NCMGVYQmxiMllnWkdGMFlTQTlQVDBnWENKemRISnBibWRjSWlBcElIdGNibHgwWEhSY2RIUnllU0I3WEc1Y2RGeDBYSFJjZEdSaGRHRWdQU0JuWlhSRVlYUmhLQ0JrWVhSaElDazdYRzVjZEZ4MFhIUjlJR05oZEdOb0lDZ2daU0FwSUh0OVhHNWNibHgwWEhSY2RDOHZJRTFoYTJVZ2MzVnlaU0IzWlNCelpYUWdkR2hsSUdSaGRHRWdjMjhnYVhRZ2FYTnVKM1FnWTJoaGJtZGxaQ0JzWVhSbGNseHVYSFJjZEZ4MFpHRjBZVlZ6WlhJdWMyVjBLQ0JsYkdWdExDQnJaWGtzSUdSaGRHRWdLVHRjYmx4MFhIUjlJR1ZzYzJVZ2UxeHVYSFJjZEZ4MFpHRjBZU0E5SUhWdVpHVm1hVzVsWkR0Y2JseDBYSFI5WEc1Y2RIMWNibHgwY21WMGRYSnVJR1JoZEdFN1hHNTlYRzVjYm1wUmRXVnllUzVsZUhSbGJtUW9JSHRjYmx4MGFHRnpSR0YwWVRvZ1puVnVZM1JwYjI0b0lHVnNaVzBnS1NCN1hHNWNkRngwY21WMGRYSnVJR1JoZEdGVmMyVnlMbWhoYzBSaGRHRW9JR1ZzWlcwZ0tTQjhmQ0JrWVhSaFVISnBkaTVvWVhORVlYUmhLQ0JsYkdWdElDazdYRzVjZEgwc1hHNWNibHgwWkdGMFlUb2dablZ1WTNScGIyNG9JR1ZzWlcwc0lHNWhiV1VzSUdSaGRHRWdLU0I3WEc1Y2RGeDBjbVYwZFhKdUlHUmhkR0ZWYzJWeUxtRmpZMlZ6Y3lnZ1pXeGxiU3dnYm1GdFpTd2daR0YwWVNBcE8xeHVYSFI5TEZ4dVhHNWNkSEpsYlc5MlpVUmhkR0U2SUdaMWJtTjBhVzl1S0NCbGJHVnRMQ0J1WVcxbElDa2dlMXh1WEhSY2RHUmhkR0ZWYzJWeUxuSmxiVzkyWlNnZ1pXeGxiU3dnYm1GdFpTQXBPMXh1WEhSOUxGeHVYRzVjZEM4dklGUlBSRTg2SUU1dmR5QjBhR0YwSUdGc2JDQmpZV3hzY3lCMGJ5QmZaR0YwWVNCaGJtUWdYM0psYlc5MlpVUmhkR0VnYUdGMlpTQmlaV1Z1SUhKbGNHeGhZMlZrWEc1Y2RDOHZJSGRwZEdnZ1pHbHlaV04wSUdOaGJHeHpJSFJ2SUdSaGRHRlFjbWwySUcxbGRHaHZaSE1zSUhSb1pYTmxJR05oYmlCaVpTQmtaWEJ5WldOaGRHVmtMbHh1WEhSZlpHRjBZVG9nWm5WdVkzUnBiMjRvSUdWc1pXMHNJRzVoYldVc0lHUmhkR0VnS1NCN1hHNWNkRngwY21WMGRYSnVJR1JoZEdGUWNtbDJMbUZqWTJWemN5Z2daV3hsYlN3Z2JtRnRaU3dnWkdGMFlTQXBPMXh1WEhSOUxGeHVYRzVjZEY5eVpXMXZkbVZFWVhSaE9pQm1kVzVqZEdsdmJpZ2daV3hsYlN3Z2JtRnRaU0FwSUh0Y2JseDBYSFJrWVhSaFVISnBkaTV5WlcxdmRtVW9JR1ZzWlcwc0lHNWhiV1VnS1R0Y2JseDBmVnh1ZlNBcE8xeHVYRzVxVVhWbGNua3VabTR1WlhoMFpXNWtLQ0I3WEc1Y2RHUmhkR0U2SUdaMWJtTjBhVzl1S0NCclpYa3NJSFpoYkhWbElDa2dlMXh1WEhSY2RIWmhjaUJwTENCdVlXMWxMQ0JrWVhSaExGeHVYSFJjZEZ4MFpXeGxiU0E5SUhSb2FYTmJJREFnWFN4Y2JseDBYSFJjZEdGMGRISnpJRDBnWld4bGJTQW1KaUJsYkdWdExtRjBkSEpwWW5WMFpYTTdYRzVjYmx4MFhIUXZMeUJIWlhSeklHRnNiQ0IyWVd4MVpYTmNibHgwWEhScFppQW9JR3RsZVNBOVBUMGdkVzVrWldacGJtVmtJQ2tnZTF4dVhIUmNkRngwYVdZZ0tDQjBhR2x6TG14bGJtZDBhQ0FwSUh0Y2JseDBYSFJjZEZ4MFpHRjBZU0E5SUdSaGRHRlZjMlZ5TG1kbGRDZ2daV3hsYlNBcE8xeHVYRzVjZEZ4MFhIUmNkR2xtSUNnZ1pXeGxiUzV1YjJSbFZIbHdaU0E5UFQwZ01TQW1KaUFoWkdGMFlWQnlhWFl1WjJWMEtDQmxiR1Z0TENCY0ltaGhjMFJoZEdGQmRIUnljMXdpSUNrZ0tTQjdYRzVjZEZ4MFhIUmNkRngwYVNBOUlHRjBkSEp6TG14bGJtZDBhRHRjYmx4MFhIUmNkRngwWEhSM2FHbHNaU0FvSUdrdExTQXBJSHRjYmx4dVhIUmNkRngwWEhSY2RGeDBMeThnVTNWd2NHOXlkRG9nU1VVZ01URWdiMjVzZVZ4dVhIUmNkRngwWEhSY2RGeDBMeThnVkdobElHRjBkSEp6SUdWc1pXMWxiblJ6SUdOaGJpQmlaU0J1ZFd4c0lDaDBjbUZqTFRFME9EazBLVnh1WEhSY2RGeDBYSFJjZEZ4MGFXWWdLQ0JoZEhSeWMxc2dhU0JkSUNrZ2UxeHVYSFJjZEZ4MFhIUmNkRngwWEhSdVlXMWxJRDBnWVhSMGNuTmJJR2tnWFM1dVlXMWxPMXh1WEhSY2RGeDBYSFJjZEZ4MFhIUnBaaUFvSUc1aGJXVXVhVzVrWlhoUFppZ2dYQ0prWVhSaExWd2lJQ2tnUFQwOUlEQWdLU0I3WEc1Y2RGeDBYSFJjZEZ4MFhIUmNkRngwYm1GdFpTQTlJR05oYldWc1EyRnpaU2dnYm1GdFpTNXpiR2xqWlNnZ05TQXBJQ2s3WEc1Y2RGeDBYSFJjZEZ4MFhIUmNkRngwWkdGMFlVRjBkSElvSUdWc1pXMHNJRzVoYldVc0lHUmhkR0ZiSUc1aGJXVWdYU0FwTzF4dVhIUmNkRngwWEhSY2RGeDBYSFI5WEc1Y2RGeDBYSFJjZEZ4MFhIUjlYRzVjZEZ4MFhIUmNkRngwZlZ4dVhIUmNkRngwWEhSY2RHUmhkR0ZRY21sMkxuTmxkQ2dnWld4bGJTd2dYQ0pvWVhORVlYUmhRWFIwY25OY0lpd2dkSEoxWlNBcE8xeHVYSFJjZEZ4MFhIUjlYRzVjZEZ4MFhIUjlYRzVjYmx4MFhIUmNkSEpsZEhWeWJpQmtZWFJoTzF4dVhIUmNkSDFjYmx4dVhIUmNkQzh2SUZObGRITWdiWFZzZEdsd2JHVWdkbUZzZFdWelhHNWNkRngwYVdZZ0tDQjBlWEJsYjJZZ2EyVjVJRDA5UFNCY0ltOWlhbVZqZEZ3aUlDa2dlMXh1WEhSY2RGeDBjbVYwZFhKdUlIUm9hWE11WldGamFDZ2dablZ1WTNScGIyNG9LU0I3WEc1Y2RGeDBYSFJjZEdSaGRHRlZjMlZ5TG5ObGRDZ2dkR2hwY3l3Z2EyVjVJQ2s3WEc1Y2RGeDBYSFI5SUNrN1hHNWNkRngwZlZ4dVhHNWNkRngwY21WMGRYSnVJR0ZqWTJWemN5Z2dkR2hwY3l3Z1puVnVZM1JwYjI0b0lIWmhiSFZsSUNrZ2UxeHVYSFJjZEZ4MGRtRnlJR1JoZEdFN1hHNWNibHgwWEhSY2RDOHZJRlJvWlNCallXeHNhVzVuSUdwUmRXVnllU0J2WW1wbFkzUWdLR1ZzWlcxbGJuUWdiV0YwWTJobGN5a2dhWE1nYm05MElHVnRjSFI1WEc1Y2RGeDBYSFF2THlBb1lXNWtJSFJvWlhKbFptOXlaU0JvWVhNZ1lXNGdaV3hsYldWdWRDQmhjSEJsWVhKeklHRjBJSFJvYVhOYklEQWdYU2tnWVc1a0lIUm9aVnh1WEhSY2RGeDBMeThnWUhaaGJIVmxZQ0J3WVhKaGJXVjBaWElnZDJGeklHNXZkQ0IxYm1SbFptbHVaV1F1SUVGdUlHVnRjSFI1SUdwUmRXVnllU0J2WW1wbFkzUmNibHgwWEhSY2RDOHZJSGRwYkd3Z2NtVnpkV3gwSUdsdUlHQjFibVJsWm1sdVpXUmdJR1p2Y2lCbGJHVnRJRDBnZEdocGMxc2dNQ0JkSUhkb2FXTm9JSGRwYkd4Y2JseDBYSFJjZEM4dklIUm9jbTkzSUdGdUlHVjRZMlZ3ZEdsdmJpQnBaaUJoYmlCaGRIUmxiWEIwSUhSdklISmxZV1FnWVNCa1lYUmhJR05oWTJobElHbHpJRzFoWkdVdVhHNWNkRngwWEhScFppQW9JR1ZzWlcwZ0ppWWdkbUZzZFdVZ1BUMDlJSFZ1WkdWbWFXNWxaQ0FwSUh0Y2JseHVYSFJjZEZ4MFhIUXZMeUJCZEhSbGJYQjBJSFJ2SUdkbGRDQmtZWFJoSUdaeWIyMGdkR2hsSUdOaFkyaGxYRzVjZEZ4MFhIUmNkQzh2SUZSb1pTQnJaWGtnZDJsc2JDQmhiSGRoZVhNZ1ltVWdZMkZ0Wld4RFlYTmxaQ0JwYmlCRVlYUmhYRzVjZEZ4MFhIUmNkR1JoZEdFZ1BTQmtZWFJoVlhObGNpNW5aWFFvSUdWc1pXMHNJR3RsZVNBcE8xeHVYSFJjZEZ4MFhIUnBaaUFvSUdSaGRHRWdJVDA5SUhWdVpHVm1hVzVsWkNBcElIdGNibHgwWEhSY2RGeDBYSFJ5WlhSMWNtNGdaR0YwWVR0Y2JseDBYSFJjZEZ4MGZWeHVYRzVjZEZ4MFhIUmNkQzh2SUVGMGRHVnRjSFFnZEc4Z1hDSmthWE5qYjNabGNsd2lJSFJvWlNCa1lYUmhJR2x1WEc1Y2RGeDBYSFJjZEM4dklFaFVUVXcxSUdOMWMzUnZiU0JrWVhSaExTb2dZWFIwY25OY2JseDBYSFJjZEZ4MFpHRjBZU0E5SUdSaGRHRkJkSFJ5S0NCbGJHVnRMQ0JyWlhrZ0tUdGNibHgwWEhSY2RGeDBhV1lnS0NCa1lYUmhJQ0U5UFNCMWJtUmxabWx1WldRZ0tTQjdYRzVjZEZ4MFhIUmNkRngwY21WMGRYSnVJR1JoZEdFN1hHNWNkRngwWEhSY2RIMWNibHh1WEhSY2RGeDBYSFF2THlCWFpTQjBjbWxsWkNCeVpXRnNiSGtnYUdGeVpDd2dZblYwSUhSb1pTQmtZWFJoSUdSdlpYTnVKM1FnWlhocGMzUXVYRzVjZEZ4MFhIUmNkSEpsZEhWeWJqdGNibHgwWEhSY2RIMWNibHh1WEhSY2RGeDBMeThnVTJWMElIUm9aU0JrWVhSaExpNHVYRzVjZEZ4MFhIUjBhR2x6TG1WaFkyZ29JR1oxYm1OMGFXOXVLQ2tnZTF4dVhHNWNkRngwWEhSY2RDOHZJRmRsSUdGc2QyRjVjeUJ6ZEc5eVpTQjBhR1VnWTJGdFpXeERZWE5sWkNCclpYbGNibHgwWEhSY2RGeDBaR0YwWVZWelpYSXVjMlYwS0NCMGFHbHpMQ0JyWlhrc0lIWmhiSFZsSUNrN1hHNWNkRngwWEhSOUlDazdYRzVjZEZ4MGZTd2diblZzYkN3Z2RtRnNkV1VzSUdGeVozVnRaVzUwY3k1c1pXNW5kR2dnUGlBeExDQnVkV3hzTENCMGNuVmxJQ2s3WEc1Y2RIMHNYRzVjYmx4MGNtVnRiM1psUkdGMFlUb2dablZ1WTNScGIyNG9JR3RsZVNBcElIdGNibHgwWEhSeVpYUjFjbTRnZEdocGN5NWxZV05vS0NCbWRXNWpkR2x2YmlncElIdGNibHgwWEhSY2RHUmhkR0ZWYzJWeUxuSmxiVzkyWlNnZ2RHaHBjeXdnYTJWNUlDazdYRzVjZEZ4MGZTQXBPMXh1WEhSOVhHNTlJQ2s3WEc1Y2JseHVhbEYxWlhKNUxtVjRkR1Z1WkNnZ2UxeHVYSFJ4ZFdWMVpUb2dablZ1WTNScGIyNG9JR1ZzWlcwc0lIUjVjR1VzSUdSaGRHRWdLU0I3WEc1Y2RGeDBkbUZ5SUhGMVpYVmxPMXh1WEc1Y2RGeDBhV1lnS0NCbGJHVnRJQ2tnZTF4dVhIUmNkRngwZEhsd1pTQTlJQ2dnZEhsd1pTQjhmQ0JjSW1aNFhDSWdLU0FySUZ3aWNYVmxkV1ZjSWp0Y2JseDBYSFJjZEhGMVpYVmxJRDBnWkdGMFlWQnlhWFl1WjJWMEtDQmxiR1Z0TENCMGVYQmxJQ2s3WEc1Y2JseDBYSFJjZEM4dklGTndaV1ZrSUhWd0lHUmxjWFZsZFdVZ1lua2daMlYwZEdsdVp5QnZkWFFnY1hWcFkydHNlU0JwWmlCMGFHbHpJR2x6SUdwMWMzUWdZU0JzYjI5cmRYQmNibHgwWEhSY2RHbG1JQ2dnWkdGMFlTQXBJSHRjYmx4MFhIUmNkRngwYVdZZ0tDQWhjWFZsZFdVZ2ZId2dRWEp5WVhrdWFYTkJjbkpoZVNnZ1pHRjBZU0FwSUNrZ2UxeHVYSFJjZEZ4MFhIUmNkSEYxWlhWbElEMGdaR0YwWVZCeWFYWXVZV05qWlhOektDQmxiR1Z0TENCMGVYQmxMQ0JxVVhWbGNua3ViV0ZyWlVGeWNtRjVLQ0JrWVhSaElDa2dLVHRjYmx4MFhIUmNkRngwZlNCbGJITmxJSHRjYmx4MFhIUmNkRngwWEhSeGRXVjFaUzV3ZFhOb0tDQmtZWFJoSUNrN1hHNWNkRngwWEhSY2RIMWNibHgwWEhSY2RIMWNibHgwWEhSY2RISmxkSFZ5YmlCeGRXVjFaU0I4ZkNCYlhUdGNibHgwWEhSOVhHNWNkSDBzWEc1Y2JseDBaR1Z4ZFdWMVpUb2dablZ1WTNScGIyNG9JR1ZzWlcwc0lIUjVjR1VnS1NCN1hHNWNkRngwZEhsd1pTQTlJSFI1Y0dVZ2ZId2dYQ0ptZUZ3aU8xeHVYRzVjZEZ4MGRtRnlJSEYxWlhWbElEMGdhbEYxWlhKNUxuRjFaWFZsS0NCbGJHVnRMQ0IwZVhCbElDa3NYRzVjZEZ4MFhIUnpkR0Z5ZEV4bGJtZDBhQ0E5SUhGMVpYVmxMbXhsYm1kMGFDeGNibHgwWEhSY2RHWnVJRDBnY1hWbGRXVXVjMmhwWm5Rb0tTeGNibHgwWEhSY2RHaHZiMnR6SUQwZ2FsRjFaWEo1TGw5eGRXVjFaVWh2YjJ0ektDQmxiR1Z0TENCMGVYQmxJQ2tzWEc1Y2RGeDBYSFJ1WlhoMElEMGdablZ1WTNScGIyNG9LU0I3WEc1Y2RGeDBYSFJjZEdwUmRXVnllUzVrWlhGMVpYVmxLQ0JsYkdWdExDQjBlWEJsSUNrN1hHNWNkRngwWEhSOU8xeHVYRzVjZEZ4MEx5OGdTV1lnZEdobElHWjRJSEYxWlhWbElHbHpJR1JsY1hWbGRXVmtMQ0JoYkhkaGVYTWdjbVZ0YjNabElIUm9aU0J3Y205bmNtVnpjeUJ6Wlc1MGFXNWxiRnh1WEhSY2RHbG1JQ2dnWm00Z1BUMDlJRndpYVc1d2NtOW5jbVZ6YzF3aUlDa2dlMXh1WEhSY2RGeDBabTRnUFNCeGRXVjFaUzV6YUdsbWRDZ3BPMXh1WEhSY2RGeDBjM1JoY25STVpXNW5kR2d0TFR0Y2JseDBYSFI5WEc1Y2JseDBYSFJwWmlBb0lHWnVJQ2tnZTF4dVhHNWNkRngwWEhRdkx5QkJaR1FnWVNCd2NtOW5jbVZ6Y3lCelpXNTBhVzVsYkNCMGJ5QndjbVYyWlc1MElIUm9aU0JtZUNCeGRXVjFaU0JtY205dElHSmxhVzVuWEc1Y2RGeDBYSFF2THlCaGRYUnZiV0YwYVdOaGJHeDVJR1JsY1hWbGRXVmtYRzVjZEZ4MFhIUnBaaUFvSUhSNWNHVWdQVDA5SUZ3aVpuaGNJaUFwSUh0Y2JseDBYSFJjZEZ4MGNYVmxkV1V1ZFc1emFHbG1kQ2dnWENKcGJuQnliMmR5WlhOelhDSWdLVHRjYmx4MFhIUmNkSDFjYmx4dVhIUmNkRngwTHk4Z1EyeGxZWElnZFhBZ2RHaGxJR3hoYzNRZ2NYVmxkV1VnYzNSdmNDQm1kVzVqZEdsdmJseHVYSFJjZEZ4MFpHVnNaWFJsSUdodmIydHpMbk4wYjNBN1hHNWNkRngwWEhSbWJpNWpZV3hzS0NCbGJHVnRMQ0J1WlhoMExDQm9iMjlyY3lBcE8xeHVYSFJjZEgxY2JseHVYSFJjZEdsbUlDZ2dJWE4wWVhKMFRHVnVaM1JvSUNZbUlHaHZiMnR6SUNrZ2UxeHVYSFJjZEZ4MGFHOXZhM011Wlcxd2RIa3VabWx5WlNncE8xeHVYSFJjZEgxY2JseDBmU3hjYmx4dVhIUXZMeUJPYjNRZ2NIVmliR2xqSUMwZ1oyVnVaWEpoZEdVZ1lTQnhkV1YxWlVodmIydHpJRzlpYW1WamRDd2diM0lnY21WMGRYSnVJSFJvWlNCamRYSnlaVzUwSUc5dVpWeHVYSFJmY1hWbGRXVkliMjlyY3pvZ1puVnVZM1JwYjI0b0lHVnNaVzBzSUhSNWNHVWdLU0I3WEc1Y2RGeDBkbUZ5SUd0bGVTQTlJSFI1Y0dVZ0t5QmNJbkYxWlhWbFNHOXZhM05jSWp0Y2JseDBYSFJ5WlhSMWNtNGdaR0YwWVZCeWFYWXVaMlYwS0NCbGJHVnRMQ0JyWlhrZ0tTQjhmQ0JrWVhSaFVISnBkaTVoWTJObGMzTW9JR1ZzWlcwc0lHdGxlU3dnZTF4dVhIUmNkRngwWlcxd2RIazZJR3BSZFdWeWVTNURZV3hzWW1GamEzTW9JRndpYjI1alpTQnRaVzF2Y25sY0lpQXBMbUZrWkNnZ1puVnVZM1JwYjI0b0tTQjdYRzVjZEZ4MFhIUmNkR1JoZEdGUWNtbDJMbkpsYlc5MlpTZ2daV3hsYlN3Z1d5QjBlWEJsSUNzZ1hDSnhkV1YxWlZ3aUxDQnJaWGtnWFNBcE8xeHVYSFJjZEZ4MGZTQXBYRzVjZEZ4MGZTQXBPMXh1WEhSOVhHNTlJQ2s3WEc1Y2JtcFJkV1Z5ZVM1bWJpNWxlSFJsYm1Rb0lIdGNibHgwY1hWbGRXVTZJR1oxYm1OMGFXOXVLQ0IwZVhCbExDQmtZWFJoSUNrZ2UxeHVYSFJjZEhaaGNpQnpaWFIwWlhJZ1BTQXlPMXh1WEc1Y2RGeDBhV1lnS0NCMGVYQmxiMllnZEhsd1pTQWhQVDBnWENKemRISnBibWRjSWlBcElIdGNibHgwWEhSY2RHUmhkR0VnUFNCMGVYQmxPMXh1WEhSY2RGeDBkSGx3WlNBOUlGd2labmhjSWp0Y2JseDBYSFJjZEhObGRIUmxjaTB0TzF4dVhIUmNkSDFjYmx4dVhIUmNkR2xtSUNnZ1lYSm5kVzFsYm5SekxteGxibWQwYUNBOElITmxkSFJsY2lBcElIdGNibHgwWEhSY2RISmxkSFZ5YmlCcVVYVmxjbmt1Y1hWbGRXVW9JSFJvYVhOYklEQWdYU3dnZEhsd1pTQXBPMXh1WEhSY2RIMWNibHh1WEhSY2RISmxkSFZ5YmlCa1lYUmhJRDA5UFNCMWJtUmxabWx1WldRZ1AxeHVYSFJjZEZ4MGRHaHBjeUE2WEc1Y2RGeDBYSFIwYUdsekxtVmhZMmdvSUdaMWJtTjBhVzl1S0NrZ2UxeHVYSFJjZEZ4MFhIUjJZWElnY1hWbGRXVWdQU0JxVVhWbGNua3VjWFZsZFdVb0lIUm9hWE1zSUhSNWNHVXNJR1JoZEdFZ0tUdGNibHh1WEhSY2RGeDBYSFF2THlCRmJuTjFjbVVnWVNCb2IyOXJjeUJtYjNJZ2RHaHBjeUJ4ZFdWMVpWeHVYSFJjZEZ4MFhIUnFVWFZsY25rdVgzRjFaWFZsU0c5dmEzTW9JSFJvYVhNc0lIUjVjR1VnS1R0Y2JseHVYSFJjZEZ4MFhIUnBaaUFvSUhSNWNHVWdQVDA5SUZ3aVpuaGNJaUFtSmlCeGRXVjFaVnNnTUNCZElDRTlQU0JjSW1sdWNISnZaM0psYzNOY0lpQXBJSHRjYmx4MFhIUmNkRngwWEhScVVYVmxjbmt1WkdWeGRXVjFaU2dnZEdocGN5d2dkSGx3WlNBcE8xeHVYSFJjZEZ4MFhIUjlYRzVjZEZ4MFhIUjlJQ2s3WEc1Y2RIMHNYRzVjZEdSbGNYVmxkV1U2SUdaMWJtTjBhVzl1S0NCMGVYQmxJQ2tnZTF4dVhIUmNkSEpsZEhWeWJpQjBhR2x6TG1WaFkyZ29JR1oxYm1OMGFXOXVLQ2tnZTF4dVhIUmNkRngwYWxGMVpYSjVMbVJsY1hWbGRXVW9JSFJvYVhNc0lIUjVjR1VnS1R0Y2JseDBYSFI5SUNrN1hHNWNkSDBzWEc1Y2RHTnNaV0Z5VVhWbGRXVTZJR1oxYm1OMGFXOXVLQ0IwZVhCbElDa2dlMXh1WEhSY2RISmxkSFZ5YmlCMGFHbHpMbkYxWlhWbEtDQjBlWEJsSUh4OElGd2labmhjSWl3Z1cxMGdLVHRjYmx4MGZTeGNibHh1WEhRdkx5QkhaWFFnWVNCd2NtOXRhWE5sSUhKbGMyOXNkbVZrSUhkb1pXNGdjWFZsZFdWeklHOW1JR0VnWTJWeWRHRnBiaUIwZVhCbFhHNWNkQzh2SUdGeVpTQmxiWEIwYVdWa0lDaG1lQ0JwY3lCMGFHVWdkSGx3WlNCaWVTQmtaV1poZFd4MEtWeHVYSFJ3Y205dGFYTmxPaUJtZFc1amRHbHZiaWdnZEhsd1pTd2diMkpxSUNrZ2UxeHVYSFJjZEhaaGNpQjBiWEFzWEc1Y2RGeDBYSFJqYjNWdWRDQTlJREVzWEc1Y2RGeDBYSFJrWldabGNpQTlJR3BSZFdWeWVTNUVaV1psY25KbFpDZ3BMRnh1WEhSY2RGeDBaV3hsYldWdWRITWdQU0IwYUdsekxGeHVYSFJjZEZ4MGFTQTlJSFJvYVhNdWJHVnVaM1JvTEZ4dVhIUmNkRngwY21WemIyeDJaU0E5SUdaMWJtTjBhVzl1S0NrZ2UxeHVYSFJjZEZ4MFhIUnBaaUFvSUNFb0lDMHRZMjkxYm5RZ0tTQXBJSHRjYmx4MFhIUmNkRngwWEhSa1pXWmxjaTV5WlhOdmJIWmxWMmwwYUNnZ1pXeGxiV1Z1ZEhNc0lGc2daV3hsYldWdWRITWdYU0FwTzF4dVhIUmNkRngwWEhSOVhHNWNkRngwWEhSOU8xeHVYRzVjZEZ4MGFXWWdLQ0IwZVhCbGIyWWdkSGx3WlNBaFBUMGdYQ0p6ZEhKcGJtZGNJaUFwSUh0Y2JseDBYSFJjZEc5aWFpQTlJSFI1Y0dVN1hHNWNkRngwWEhSMGVYQmxJRDBnZFc1a1pXWnBibVZrTzF4dVhIUmNkSDFjYmx4MFhIUjBlWEJsSUQwZ2RIbHdaU0I4ZkNCY0ltWjRYQ0k3WEc1Y2JseDBYSFIzYUdsc1pTQW9JR2t0TFNBcElIdGNibHgwWEhSY2RIUnRjQ0E5SUdSaGRHRlFjbWwyTG1kbGRDZ2daV3hsYldWdWRITmJJR2tnWFN3Z2RIbHdaU0FySUZ3aWNYVmxkV1ZJYjI5cmMxd2lJQ2s3WEc1Y2RGeDBYSFJwWmlBb0lIUnRjQ0FtSmlCMGJYQXVaVzF3ZEhrZ0tTQjdYRzVjZEZ4MFhIUmNkR052ZFc1MEt5czdYRzVjZEZ4MFhIUmNkSFJ0Y0M1bGJYQjBlUzVoWkdRb0lISmxjMjlzZG1VZ0tUdGNibHgwWEhSY2RIMWNibHgwWEhSOVhHNWNkRngwY21WemIyeDJaU2dwTzF4dVhIUmNkSEpsZEhWeWJpQmtaV1psY2k1d2NtOXRhWE5sS0NCdlltb2dLVHRjYmx4MGZWeHVmU0FwTzF4dWRtRnlJSEJ1ZFcwZ1BTQW9JQzliS3kxZFB5Zy9PbHhjWkNwY1hDNThLVnhjWkNzb1B6cGJaVVZkV3lzdFhUOWNYR1FyZkNrdklDa3VjMjkxY21ObE8xeHVYRzUyWVhJZ2NtTnpjMDUxYlNBOUlHNWxkeUJTWldkRmVIQW9JRndpWGlnL09paGJLeTFkS1QxOEtTaGNJaUFySUhCdWRXMGdLeUJjSWlrb1cyRXRlaVZkS2lra1hDSXNJRndpYVZ3aUlDazdYRzVjYmx4dWRtRnlJR056YzBWNGNHRnVaQ0E5SUZzZ1hDSlViM0JjSWl3Z1hDSlNhV2RvZEZ3aUxDQmNJa0p2ZEhSdmJWd2lMQ0JjSWt4bFpuUmNJaUJkTzF4dVhHNTJZWElnWkc5amRXMWxiblJGYkdWdFpXNTBJRDBnWkc5amRXMWxiblF1Wkc5amRXMWxiblJGYkdWdFpXNTBPMXh1WEc1Y2JseHVYSFIyWVhJZ2FYTkJkSFJoWTJobFpDQTlJR1oxYm1OMGFXOXVLQ0JsYkdWdElDa2dlMXh1WEhSY2RGeDBjbVYwZFhKdUlHcFJkV1Z5ZVM1amIyNTBZV2x1Y3lnZ1pXeGxiUzV2ZDI1bGNrUnZZM1Z0Wlc1MExDQmxiR1Z0SUNrN1hHNWNkRngwZlN4Y2JseDBYSFJqYjIxd2IzTmxaQ0E5SUhzZ1kyOXRjRzl6WldRNklIUnlkV1VnZlR0Y2JseHVYSFF2THlCVGRYQndiM0owT2lCSlJTQTVJQzBnTVRFckxDQkZaR2RsSURFeUlDMGdNVGdyTENCcFQxTWdNVEF1TUNBdElERXdMaklnYjI1c2VWeHVYSFF2THlCRGFHVmpheUJoZEhSaFkyaHRaVzUwSUdGamNtOXpjeUJ6YUdGa2IzY2dSRTlOSUdKdmRXNWtZWEpwWlhNZ2QyaGxiaUJ3YjNOemFXSnNaU0FvWjJndE16VXdOQ2xjYmx4MEx5OGdVM1Z3Y0c5eWREb2dhVTlUSURFd0xqQXRNVEF1TWlCdmJteDVYRzVjZEM4dklFVmhjbXg1SUdsUFV5QXhNQ0IyWlhKemFXOXVjeUJ6ZFhCd2IzSjBJR0JoZEhSaFkyaFRhR0ZrYjNkZ0lHSjFkQ0J1YjNRZ1lHZGxkRkp2YjNST2IyUmxZQ3hjYmx4MEx5OGdiR1ZoWkdsdVp5QjBieUJsY25KdmNuTXVJRmRsSUc1bFpXUWdkRzhnWTJobFkyc2dabTl5SUdCblpYUlNiMjkwVG05a1pXQXVYRzVjZEdsbUlDZ2daRzlqZFcxbGJuUkZiR1Z0Wlc1MExtZGxkRkp2YjNST2IyUmxJQ2tnZTF4dVhIUmNkR2x6UVhSMFlXTm9aV1FnUFNCbWRXNWpkR2x2YmlnZ1pXeGxiU0FwSUh0Y2JseDBYSFJjZEhKbGRIVnliaUJxVVhWbGNua3VZMjl1ZEdGcGJuTW9JR1ZzWlcwdWIzZHVaWEpFYjJOMWJXVnVkQ3dnWld4bGJTQXBJSHg4WEc1Y2RGeDBYSFJjZEdWc1pXMHVaMlYwVW05dmRFNXZaR1VvSUdOdmJYQnZjMlZrSUNrZ1BUMDlJR1ZzWlcwdWIzZHVaWEpFYjJOMWJXVnVkRHRjYmx4MFhIUjlPMXh1WEhSOVhHNTJZWElnYVhOSWFXUmtaVzVYYVhSb2FXNVVjbVZsSUQwZ1puVnVZM1JwYjI0b0lHVnNaVzBzSUdWc0lDa2dlMXh1WEc1Y2RGeDBMeThnYVhOSWFXUmtaVzVYYVhSb2FXNVVjbVZsSUcxcFoyaDBJR0psSUdOaGJHeGxaQ0JtY205dElHcFJkV1Z5ZVNObWFXeDBaWElnWm5WdVkzUnBiMjQ3WEc1Y2RGeDBMeThnYVc0Z2RHaGhkQ0JqWVhObExDQmxiR1Z0Wlc1MElIZHBiR3dnWW1VZ2MyVmpiMjVrSUdGeVozVnRaVzUwWEc1Y2RGeDBaV3hsYlNBOUlHVnNJSHg4SUdWc1pXMDdYRzVjYmx4MFhIUXZMeUJKYm14cGJtVWdjM1I1YkdVZ2RISjFiWEJ6SUdGc2JGeHVYSFJjZEhKbGRIVnliaUJsYkdWdExuTjBlV3hsTG1ScGMzQnNZWGtnUFQwOUlGd2libTl1WlZ3aUlIeDhYRzVjZEZ4MFhIUmxiR1Z0TG5OMGVXeGxMbVJwYzNCc1lYa2dQVDA5SUZ3aVhDSWdKaVpjYmx4dVhIUmNkRngwTHk4Z1QzUm9aWEozYVhObExDQmphR1ZqYXlCamIyMXdkWFJsWkNCemRIbHNaVnh1WEhSY2RGeDBMeThnVTNWd2NHOXlkRG9nUm1seVpXWnZlQ0E4UFRReklDMGdORFZjYmx4MFhIUmNkQzh2SUVScGMyTnZibTVsWTNSbFpDQmxiR1Z0Wlc1MGN5QmpZVzRnYUdGMlpTQmpiMjF3ZFhSbFpDQmthWE53YkdGNU9pQnViMjVsTENCemJ5Qm1hWEp6ZENCamIyNW1hWEp0SUhSb1lYUWdaV3hsYlNCcGMxeHVYSFJjZEZ4MEx5OGdhVzRnZEdobElHUnZZM1Z0Wlc1MExseHVYSFJjZEZ4MGFYTkJkSFJoWTJobFpDZ2daV3hsYlNBcElDWW1YRzVjYmx4MFhIUmNkR3BSZFdWeWVTNWpjM01vSUdWc1pXMHNJRndpWkdsemNHeGhlVndpSUNrZ1BUMDlJRndpYm05dVpWd2lPMXh1WEhSOU8xeHVYRzVjYmx4dVpuVnVZM1JwYjI0Z1lXUnFkWE4wUTFOVEtDQmxiR1Z0TENCd2NtOXdMQ0IyWVd4MVpWQmhjblJ6TENCMGQyVmxiaUFwSUh0Y2JseDBkbUZ5SUdGa2FuVnpkR1ZrTENCelkyRnNaU3hjYmx4MFhIUnRZWGhKZEdWeVlYUnBiMjV6SUQwZ01qQXNYRzVjZEZ4MFkzVnljbVZ1ZEZaaGJIVmxJRDBnZEhkbFpXNGdQMXh1WEhSY2RGeDBablZ1WTNScGIyNG9LU0I3WEc1Y2RGeDBYSFJjZEhKbGRIVnliaUIwZDJWbGJpNWpkWElvS1R0Y2JseDBYSFJjZEgwZ09seHVYSFJjZEZ4MFpuVnVZM1JwYjI0b0tTQjdYRzVjZEZ4MFhIUmNkSEpsZEhWeWJpQnFVWFZsY25rdVkzTnpLQ0JsYkdWdExDQndjbTl3TENCY0lsd2lJQ2s3WEc1Y2RGeDBYSFI5TEZ4dVhIUmNkR2x1YVhScFlXd2dQU0JqZFhKeVpXNTBWbUZzZFdVb0tTeGNibHgwWEhSMWJtbDBJRDBnZG1Gc2RXVlFZWEowY3lBbUppQjJZV3gxWlZCaGNuUnpXeUF6SUYwZ2ZId2dLQ0JxVVhWbGNua3VZM056VG5WdFltVnlXeUJ3Y205d0lGMGdQeUJjSWx3aUlEb2dYQ0p3ZUZ3aUlDa3NYRzVjYmx4MFhIUXZMeUJUZEdGeWRHbHVaeUIyWVd4MVpTQmpiMjF3ZFhSaGRHbHZiaUJwY3lCeVpYRjFhWEpsWkNCbWIzSWdjRzkwWlc1MGFXRnNJSFZ1YVhRZ2JXbHpiV0YwWTJobGMxeHVYSFJjZEdsdWFYUnBZV3hKYmxWdWFYUWdQU0JsYkdWdExtNXZaR1ZVZVhCbElDWW1YRzVjZEZ4MFhIUW9JR3BSZFdWeWVTNWpjM05PZFcxaVpYSmJJSEJ5YjNBZ1hTQjhmQ0IxYm1sMElDRTlQU0JjSW5CNFhDSWdKaVlnSzJsdWFYUnBZV3dnS1NBbUpseHVYSFJjZEZ4MGNtTnpjMDUxYlM1bGVHVmpLQ0JxVVhWbGNua3VZM056S0NCbGJHVnRMQ0J3Y205d0lDa2dLVHRjYmx4dVhIUnBaaUFvSUdsdWFYUnBZV3hKYmxWdWFYUWdKaVlnYVc1cGRHbGhiRWx1Vlc1cGRGc2dNeUJkSUNFOVBTQjFibWwwSUNrZ2UxeHVYRzVjZEZ4MEx5OGdVM1Z3Y0c5eWREb2dSbWx5WldadmVDQThQVFUwWEc1Y2RGeDBMeThnU0dGc2RtVWdkR2hsSUdsMFpYSmhkR2x2YmlCMFlYSm5aWFFnZG1Gc2RXVWdkRzhnY0hKbGRtVnVkQ0JwYm5SbGNtWmxjbVZ1WTJVZ1puSnZiU0JEVTFNZ2RYQndaWElnWW05MWJtUnpJQ2huYUMweU1UUTBLVnh1WEhSY2RHbHVhWFJwWVd3Z1BTQnBibWwwYVdGc0lDOGdNanRjYmx4dVhIUmNkQzh2SUZSeWRYTjBJSFZ1YVhSeklISmxjRzl5ZEdWa0lHSjVJR3BSZFdWeWVTNWpjM05jYmx4MFhIUjFibWwwSUQwZ2RXNXBkQ0I4ZkNCcGJtbDBhV0ZzU1c1VmJtbDBXeUF6SUYwN1hHNWNibHgwWEhRdkx5QkpkR1Z5WVhScGRtVnNlU0JoY0hCeWIzaHBiV0YwWlNCbWNtOXRJR0VnYm05dWVtVnlieUJ6ZEdGeWRHbHVaeUJ3YjJsdWRGeHVYSFJjZEdsdWFYUnBZV3hKYmxWdWFYUWdQU0FyYVc1cGRHbGhiQ0I4ZkNBeE8xeHVYRzVjZEZ4MGQyaHBiR1VnS0NCdFlYaEpkR1Z5WVhScGIyNXpMUzBnS1NCN1hHNWNibHgwWEhSY2RDOHZJRVYyWVd4MVlYUmxJR0Z1WkNCMWNHUmhkR1VnYjNWeUlHSmxjM1FnWjNWbGMzTWdLR1J2ZFdKc2FXNW5JR2QxWlhOelpYTWdkR2hoZENCNlpYSnZJRzkxZENrdVhHNWNkRngwWEhRdkx5QkdhVzVwYzJnZ2FXWWdkR2hsSUhOallXeGxJR1Z4ZFdGc2N5QnZjaUJqY205emMyVnpJREVnS0cxaGEybHVaeUIwYUdVZ2IyeGtLbTVsZHlCd2NtOWtkV04wSUc1dmJpMXdiM05wZEdsMlpTa3VYRzVjZEZ4MFhIUnFVWFZsY25rdWMzUjViR1VvSUdWc1pXMHNJSEJ5YjNBc0lHbHVhWFJwWVd4SmJsVnVhWFFnS3lCMWJtbDBJQ2s3WEc1Y2RGeDBYSFJwWmlBb0lDZ2dNU0F0SUhOallXeGxJQ2tnS2lBb0lERWdMU0FvSUhOallXeGxJRDBnWTNWeWNtVnVkRlpoYkhWbEtDa2dMeUJwYm1sMGFXRnNJSHg4SURBdU5TQXBJQ2tnUEQwZ01DQXBJSHRjYmx4MFhIUmNkRngwYldGNFNYUmxjbUYwYVc5dWN5QTlJREE3WEc1Y2RGeDBYSFI5WEc1Y2RGeDBYSFJwYm1sMGFXRnNTVzVWYm1sMElEMGdhVzVwZEdsaGJFbHVWVzVwZENBdklITmpZV3hsTzF4dVhHNWNkRngwZlZ4dVhHNWNkRngwYVc1cGRHbGhiRWx1Vlc1cGRDQTlJR2x1YVhScFlXeEpibFZ1YVhRZ0tpQXlPMXh1WEhSY2RHcFJkV1Z5ZVM1emRIbHNaU2dnWld4bGJTd2djSEp2Y0N3Z2FXNXBkR2xoYkVsdVZXNXBkQ0FySUhWdWFYUWdLVHRjYmx4dVhIUmNkQzh2SUUxaGEyVWdjM1Z5WlNCM1pTQjFjR1JoZEdVZ2RHaGxJSFIzWldWdUlIQnliM0JsY25ScFpYTWdiR0YwWlhJZ2IyNWNibHgwWEhSMllXeDFaVkJoY25SeklEMGdkbUZzZFdWUVlYSjBjeUI4ZkNCYlhUdGNibHgwZlZ4dVhHNWNkR2xtSUNnZ2RtRnNkV1ZRWVhKMGN5QXBJSHRjYmx4MFhIUnBibWwwYVdGc1NXNVZibWwwSUQwZ0sybHVhWFJwWVd4SmJsVnVhWFFnZkh3Z0sybHVhWFJwWVd3Z2ZId2dNRHRjYmx4dVhIUmNkQzh2SUVGd2NHeDVJSEpsYkdGMGFYWmxJRzltWm5ObGRDQW9LejB2TFQwcElHbG1JSE53WldOcFptbGxaRnh1WEhSY2RHRmthblZ6ZEdWa0lEMGdkbUZzZFdWUVlYSjBjMXNnTVNCZElEOWNibHgwWEhSY2RHbHVhWFJwWVd4SmJsVnVhWFFnS3lBb0lIWmhiSFZsVUdGeWRITmJJREVnWFNBcklERWdLU0FxSUhaaGJIVmxVR0Z5ZEhOYklESWdYU0E2WEc1Y2RGeDBYSFFyZG1Gc2RXVlFZWEowYzFzZ01pQmRPMXh1WEhSY2RHbG1JQ2dnZEhkbFpXNGdLU0I3WEc1Y2RGeDBYSFIwZDJWbGJpNTFibWwwSUQwZ2RXNXBkRHRjYmx4MFhIUmNkSFIzWldWdUxuTjBZWEowSUQwZ2FXNXBkR2xoYkVsdVZXNXBkRHRjYmx4MFhIUmNkSFIzWldWdUxtVnVaQ0E5SUdGa2FuVnpkR1ZrTzF4dVhIUmNkSDFjYmx4MGZWeHVYSFJ5WlhSMWNtNGdZV1JxZFhOMFpXUTdYRzU5WEc1Y2JseHVkbUZ5SUdSbFptRjFiSFJFYVhOd2JHRjVUV0Z3SUQwZ2UzMDdYRzVjYm1aMWJtTjBhVzl1SUdkbGRFUmxabUYxYkhSRWFYTndiR0Y1S0NCbGJHVnRJQ2tnZTF4dVhIUjJZWElnZEdWdGNDeGNibHgwWEhSa2IyTWdQU0JsYkdWdExtOTNibVZ5Ukc5amRXMWxiblFzWEc1Y2RGeDBibTlrWlU1aGJXVWdQU0JsYkdWdExtNXZaR1ZPWVcxbExGeHVYSFJjZEdScGMzQnNZWGtnUFNCa1pXWmhkV3gwUkdsemNHeGhlVTFoY0ZzZ2JtOWtaVTVoYldVZ1hUdGNibHh1WEhScFppQW9JR1JwYzNCc1lYa2dLU0I3WEc1Y2RGeDBjbVYwZFhKdUlHUnBjM0JzWVhrN1hHNWNkSDFjYmx4dVhIUjBaVzF3SUQwZ1pHOWpMbUp2WkhrdVlYQndaVzVrUTJocGJHUW9JR1J2WXk1amNtVmhkR1ZGYkdWdFpXNTBLQ0J1YjJSbFRtRnRaU0FwSUNrN1hHNWNkR1JwYzNCc1lYa2dQU0JxVVhWbGNua3VZM056S0NCMFpXMXdMQ0JjSW1ScGMzQnNZWGxjSWlBcE8xeHVYRzVjZEhSbGJYQXVjR0Z5Wlc1MFRtOWtaUzV5WlcxdmRtVkRhR2xzWkNnZ2RHVnRjQ0FwTzF4dVhHNWNkR2xtSUNnZ1pHbHpjR3hoZVNBOVBUMGdYQ0p1YjI1bFhDSWdLU0I3WEc1Y2RGeDBaR2x6Y0d4aGVTQTlJRndpWW14dlkydGNJanRjYmx4MGZWeHVYSFJrWldaaGRXeDBSR2x6Y0d4aGVVMWhjRnNnYm05a1pVNWhiV1VnWFNBOUlHUnBjM0JzWVhrN1hHNWNibHgwY21WMGRYSnVJR1JwYzNCc1lYazdYRzU5WEc1Y2JtWjFibU4wYVc5dUlITm9iM2RJYVdSbEtDQmxiR1Z0Wlc1MGN5d2djMmh2ZHlBcElIdGNibHgwZG1GeUlHUnBjM0JzWVhrc0lHVnNaVzBzWEc1Y2RGeDBkbUZzZFdWeklEMGdXMTBzWEc1Y2RGeDBhVzVrWlhnZ1BTQXdMRnh1WEhSY2RHeGxibWQwYUNBOUlHVnNaVzFsYm5SekxteGxibWQwYUR0Y2JseHVYSFF2THlCRVpYUmxjbTFwYm1VZ2JtVjNJR1JwYzNCc1lYa2dkbUZzZFdVZ1ptOXlJR1ZzWlcxbGJuUnpJSFJvWVhRZ2JtVmxaQ0IwYnlCamFHRnVaMlZjYmx4MFptOXlJQ2dnT3lCcGJtUmxlQ0E4SUd4bGJtZDBhRHNnYVc1a1pYZ3JLeUFwSUh0Y2JseDBYSFJsYkdWdElEMGdaV3hsYldWdWRITmJJR2x1WkdWNElGMDdYRzVjZEZ4MGFXWWdLQ0FoWld4bGJTNXpkSGxzWlNBcElIdGNibHgwWEhSY2RHTnZiblJwYm5WbE8xeHVYSFJjZEgxY2JseHVYSFJjZEdScGMzQnNZWGtnUFNCbGJHVnRMbk4wZVd4bExtUnBjM0JzWVhrN1hHNWNkRngwYVdZZ0tDQnphRzkzSUNrZ2UxeHVYRzVjZEZ4MFhIUXZMeUJUYVc1alpTQjNaU0JtYjNKalpTQjJhWE5wWW1sc2FYUjVJSFZ3YjI0Z1kyRnpZMkZrWlMxb2FXUmtaVzRnWld4bGJXVnVkSE1zSUdGdUlHbHRiV1ZrYVdGMFpTQW9ZVzVrSUhOc2IzY3BYRzVjZEZ4MFhIUXZMeUJqYUdWamF5QnBjeUJ5WlhGMWFYSmxaQ0JwYmlCMGFHbHpJR1pwY25OMElHeHZiM0FnZFc1c1pYTnpJSGRsSUdoaGRtVWdZU0J1YjI1bGJYQjBlU0JrYVhOd2JHRjVJSFpoYkhWbElDaGxhWFJvWlhKY2JseDBYSFJjZEM4dklHbHViR2x1WlNCdmNpQmhZbTkxZEMxMGJ5MWlaUzF5WlhOMGIzSmxaQ2xjYmx4MFhIUmNkR2xtSUNnZ1pHbHpjR3hoZVNBOVBUMGdYQ0p1YjI1bFhDSWdLU0I3WEc1Y2RGeDBYSFJjZEhaaGJIVmxjMXNnYVc1a1pYZ2dYU0E5SUdSaGRHRlFjbWwyTG1kbGRDZ2daV3hsYlN3Z1hDSmthWE53YkdGNVhDSWdLU0I4ZkNCdWRXeHNPMXh1WEhSY2RGeDBYSFJwWmlBb0lDRjJZV3gxWlhOYklHbHVaR1Y0SUYwZ0tTQjdYRzVjZEZ4MFhIUmNkRngwWld4bGJTNXpkSGxzWlM1a2FYTndiR0Y1SUQwZ1hDSmNJanRjYmx4MFhIUmNkRngwZlZ4dVhIUmNkRngwZlZ4dVhIUmNkRngwYVdZZ0tDQmxiR1Z0TG5OMGVXeGxMbVJwYzNCc1lYa2dQVDA5SUZ3aVhDSWdKaVlnYVhOSWFXUmtaVzVYYVhSb2FXNVVjbVZsS0NCbGJHVnRJQ2tnS1NCN1hHNWNkRngwWEhSY2RIWmhiSFZsYzFzZ2FXNWtaWGdnWFNBOUlHZGxkRVJsWm1GMWJIUkVhWE53YkdGNUtDQmxiR1Z0SUNrN1hHNWNkRngwWEhSOVhHNWNkRngwZlNCbGJITmxJSHRjYmx4MFhIUmNkR2xtSUNnZ1pHbHpjR3hoZVNBaFBUMGdYQ0p1YjI1bFhDSWdLU0I3WEc1Y2RGeDBYSFJjZEhaaGJIVmxjMXNnYVc1a1pYZ2dYU0E5SUZ3aWJtOXVaVndpTzF4dVhHNWNkRngwWEhSY2RDOHZJRkpsYldWdFltVnlJSGRvWVhRZ2QyVW5jbVVnYjNabGNuZHlhWFJwYm1kY2JseDBYSFJjZEZ4MFpHRjBZVkJ5YVhZdWMyVjBLQ0JsYkdWdExDQmNJbVJwYzNCc1lYbGNJaXdnWkdsemNHeGhlU0FwTzF4dVhIUmNkRngwZlZ4dVhIUmNkSDFjYmx4MGZWeHVYRzVjZEM4dklGTmxkQ0IwYUdVZ1pHbHpjR3hoZVNCdlppQjBhR1VnWld4bGJXVnVkSE1nYVc0Z1lTQnpaV052Ym1RZ2JHOXZjQ0IwYnlCaGRtOXBaQ0JqYjI1emRHRnVkQ0J5Wldac2IzZGNibHgwWm05eUlDZ2dhVzVrWlhnZ1BTQXdPeUJwYm1SbGVDQThJR3hsYm1kMGFEc2dhVzVrWlhnckt5QXBJSHRjYmx4MFhIUnBaaUFvSUhaaGJIVmxjMXNnYVc1a1pYZ2dYU0FoUFNCdWRXeHNJQ2tnZTF4dVhIUmNkRngwWld4bGJXVnVkSE5iSUdsdVpHVjRJRjB1YzNSNWJHVXVaR2x6Y0d4aGVTQTlJSFpoYkhWbGMxc2dhVzVrWlhnZ1hUdGNibHgwWEhSOVhHNWNkSDFjYmx4dVhIUnlaWFIxY200Z1pXeGxiV1Z1ZEhNN1hHNTlYRzVjYm1wUmRXVnllUzVtYmk1bGVIUmxibVFvSUh0Y2JseDBjMmh2ZHpvZ1puVnVZM1JwYjI0b0tTQjdYRzVjZEZ4MGNtVjBkWEp1SUhOb2IzZElhV1JsS0NCMGFHbHpMQ0IwY25WbElDazdYRzVjZEgwc1hHNWNkR2hwWkdVNklHWjFibU4wYVc5dUtDa2dlMXh1WEhSY2RISmxkSFZ5YmlCemFHOTNTR2xrWlNnZ2RHaHBjeUFwTzF4dVhIUjlMRnh1WEhSMGIyZG5iR1U2SUdaMWJtTjBhVzl1S0NCemRHRjBaU0FwSUh0Y2JseDBYSFJwWmlBb0lIUjVjR1Z2WmlCemRHRjBaU0E5UFQwZ1hDSmliMjlzWldGdVhDSWdLU0I3WEc1Y2RGeDBYSFJ5WlhSMWNtNGdjM1JoZEdVZ1B5QjBhR2x6TG5Ob2IzY29LU0E2SUhSb2FYTXVhR2xrWlNncE8xeHVYSFJjZEgxY2JseHVYSFJjZEhKbGRIVnliaUIwYUdsekxtVmhZMmdvSUdaMWJtTjBhVzl1S0NrZ2UxeHVYSFJjZEZ4MGFXWWdLQ0JwYzBocFpHUmxibGRwZEdocGJsUnlaV1VvSUhSb2FYTWdLU0FwSUh0Y2JseDBYSFJjZEZ4MGFsRjFaWEo1S0NCMGFHbHpJQ2t1YzJodmR5Z3BPMXh1WEhSY2RGeDBmU0JsYkhObElIdGNibHgwWEhSY2RGeDBhbEYxWlhKNUtDQjBhR2x6SUNrdWFHbGtaU2dwTzF4dVhIUmNkRngwZlZ4dVhIUmNkSDBnS1R0Y2JseDBmVnh1ZlNBcE8xeHVkbUZ5SUhKamFHVmphMkZpYkdWVWVYQmxJRDBnS0NBdlhpZy9PbU5vWldOclltOTRmSEpoWkdsdktTUXZhU0FwTzF4dVhHNTJZWElnY25SaFowNWhiV1VnUFNBb0lDODhLRnRoTFhwZFcxNWNYQzljWERBK1hGeDRNakJjWEhSY1hISmNYRzVjWEdaZEtpa3ZhU0FwTzF4dVhHNTJZWElnY25OamNtbHdkRlI1Y0dVZ1BTQW9JQzllSkh4ZWJXOWtkV3hsSkh4Y1hDOG9QenBxWVhaaGZHVmpiV0VwYzJOeWFYQjBMMmtnS1R0Y2JseHVYRzVjYmlnZ1puVnVZM1JwYjI0b0tTQjdYRzVjZEhaaGNpQm1jbUZuYldWdWRDQTlJR1J2WTNWdFpXNTBMbU55WldGMFpVUnZZM1Z0Wlc1MFJuSmhaMjFsYm5Rb0tTeGNibHgwWEhSa2FYWWdQU0JtY21GbmJXVnVkQzVoY0hCbGJtUkRhR2xzWkNnZ1pHOWpkVzFsYm5RdVkzSmxZWFJsUld4bGJXVnVkQ2dnWENKa2FYWmNJaUFwSUNrc1hHNWNkRngwYVc1d2RYUWdQU0JrYjJOMWJXVnVkQzVqY21WaGRHVkZiR1Z0Wlc1MEtDQmNJbWx1Y0hWMFhDSWdLVHRjYmx4dVhIUXZMeUJUZFhCd2IzSjBPaUJCYm1SeWIybGtJRFF1TUNBdElEUXVNeUJ2Ym14NVhHNWNkQzh2SUVOb1pXTnJJSE4wWVhSbElHeHZjM1FnYVdZZ2RHaGxJRzVoYldVZ2FYTWdjMlYwSUNoMGNtRmpMVEV4TWpFM0tWeHVYSFF2THlCVGRYQndiM0owT2lCWGFXNWtiM2R6SUZkbFlpQkJjSEJ6SUNoWFYwRXBYRzVjZEM4dklHQnVZVzFsWUNCaGJtUWdZSFI1Y0dWZ0lHMTFjM1FnZFhObElDNXpaWFJCZEhSeWFXSjFkR1VnWm05eUlGZFhRU0FvZEhKaFl5MHhORGt3TVNsY2JseDBhVzV3ZFhRdWMyVjBRWFIwY21saWRYUmxLQ0JjSW5SNWNHVmNJaXdnWENKeVlXUnBiMXdpSUNrN1hHNWNkR2x1Y0hWMExuTmxkRUYwZEhKcFluVjBaU2dnWENKamFHVmphMlZrWENJc0lGd2lZMmhsWTJ0bFpGd2lJQ2s3WEc1Y2RHbHVjSFYwTG5ObGRFRjBkSEpwWW5WMFpTZ2dYQ0p1WVcxbFhDSXNJRndpZEZ3aUlDazdYRzVjYmx4MFpHbDJMbUZ3Y0dWdVpFTm9hV3hrS0NCcGJuQjFkQ0FwTzF4dVhHNWNkQzh2SUZOMWNIQnZjblE2SUVGdVpISnZhV1FnUEQwMExqRWdiMjVzZVZ4dVhIUXZMeUJQYkdSbGNpQlhaV0pMYVhRZ1pHOWxjMjRuZENCamJHOXVaU0JqYUdWamEyVmtJSE4wWVhSbElHTnZjbkpsWTNSc2VTQnBiaUJtY21GbmJXVnVkSE5jYmx4MGMzVndjRzl5ZEM1amFHVmphME5zYjI1bElEMGdaR2wyTG1Oc2IyNWxUbTlrWlNnZ2RISjFaU0FwTG1Oc2IyNWxUbTlrWlNnZ2RISjFaU0FwTG14aGMzUkRhR2xzWkM1amFHVmphMlZrTzF4dVhHNWNkQzh2SUZOMWNIQnZjblE2SUVsRklEdzlNVEVnYjI1c2VWeHVYSFF2THlCTllXdGxJSE4xY21VZ2RHVjRkR0Z5WldFZ0tHRnVaQ0JqYUdWamEySnZlQ2tnWkdWbVlYVnNkRlpoYkhWbElHbHpJSEJ5YjNCbGNteDVJR05zYjI1bFpGeHVYSFJrYVhZdWFXNXVaWEpJVkUxTUlEMGdYQ0k4ZEdWNGRHRnlaV0UrZUR3dmRHVjRkR0Z5WldFK1hDSTdYRzVjZEhOMWNIQnZjblF1Ym05RGJHOXVaVU5vWldOclpXUWdQU0FoSVdScGRpNWpiRzl1WlU1dlpHVW9JSFJ5ZFdVZ0tTNXNZWE4wUTJocGJHUXVaR1ZtWVhWc2RGWmhiSFZsTzF4dVhHNWNkQzh2SUZOMWNIQnZjblE2SUVsRklEdzlPU0J2Ym14NVhHNWNkQzh2SUVsRklEdzlPU0J5WlhCc1lXTmxjeUE4YjNCMGFXOXVQaUIwWVdkeklIZHBkR2dnZEdobGFYSWdZMjl1ZEdWdWRITWdkMmhsYmlCcGJuTmxjblJsWkNCdmRYUnphV1JsSUc5bVhHNWNkQzh2SUhSb1pTQnpaV3hsWTNRZ1pXeGxiV1Z1ZEM1Y2JseDBaR2wyTG1sdWJtVnlTRlJOVENBOUlGd2lQRzl3ZEdsdmJqNDhMMjl3ZEdsdmJqNWNJanRjYmx4MGMzVndjRzl5ZEM1dmNIUnBiMjRnUFNBaElXUnBkaTVzWVhOMFEyaHBiR1E3WEc1OUlDa29LVHRjYmx4dVhHNHZMeUJYWlNCb1lYWmxJSFJ2SUdOc2IzTmxJSFJvWlhObElIUmhaM01nZEc4Z2MzVndjRzl5ZENCWVNGUk5UQ0FvZEhKaFl5MHhNekl3TUNsY2JuWmhjaUIzY21Gd1RXRndJRDBnZTF4dVhHNWNkQzh2SUZoSVZFMU1JSEJoY25ObGNuTWdaRzhnYm05MElHMWhaMmxqWVd4c2VTQnBibk5sY25RZ1pXeGxiV1Z1ZEhNZ2FXNGdkR2hsWEc1Y2RDOHZJSE5oYldVZ2QyRjVJSFJvWVhRZ2RHRm5JSE52ZFhBZ2NHRnljMlZ5Y3lCa2J5NGdVMjhnZDJVZ1kyRnVibTkwSUhOb2IzSjBaVzVjYmx4MEx5OGdkR2hwY3lCaWVTQnZiV2wwZEdsdVp5QThkR0p2WkhrK0lHOXlJRzkwYUdWeUlISmxjWFZwY21Wa0lHVnNaVzFsYm5SekxseHVYSFIwYUdWaFpEb2dXeUF4TENCY0lqeDBZV0pzWlQ1Y0lpd2dYQ0k4TDNSaFlteGxQbHdpSUYwc1hHNWNkR052YkRvZ1d5QXlMQ0JjSWp4MFlXSnNaVDQ4WTI5c1ozSnZkWEErWENJc0lGd2lQQzlqYjJ4bmNtOTFjRDQ4TDNSaFlteGxQbHdpSUYwc1hHNWNkSFJ5T2lCYklESXNJRndpUEhSaFlteGxQangwWW05a2VUNWNJaXdnWENJOEwzUmliMlI1UGp3dmRHRmliR1UrWENJZ1hTeGNibHgwZEdRNklGc2dNeXdnWENJOGRHRmliR1UrUEhSaWIyUjVQangwY2o1Y0lpd2dYQ0k4TDNSeVBqd3ZkR0p2WkhrK1BDOTBZV0pzWlQ1Y0lpQmRMRnh1WEc1Y2RGOWtaV1poZFd4ME9pQmJJREFzSUZ3aVhDSXNJRndpWENJZ1hWeHVmVHRjYmx4dWQzSmhjRTFoY0M1MFltOWtlU0E5SUhkeVlYQk5ZWEF1ZEdadmIzUWdQU0IzY21Gd1RXRndMbU52YkdkeWIzVndJRDBnZDNKaGNFMWhjQzVqWVhCMGFXOXVJRDBnZDNKaGNFMWhjQzUwYUdWaFpEdGNibmR5WVhCTllYQXVkR2dnUFNCM2NtRndUV0Z3TG5Sa08xeHVYRzR2THlCVGRYQndiM0owT2lCSlJTQThQVGtnYjI1c2VWeHVhV1lnS0NBaGMzVndjRzl5ZEM1dmNIUnBiMjRnS1NCN1hHNWNkSGR5WVhCTllYQXViM0IwWjNKdmRYQWdQU0IzY21Gd1RXRndMbTl3ZEdsdmJpQTlJRnNnTVN3Z1hDSThjMlZzWldOMElHMTFiSFJwY0d4bFBTZHRkV3gwYVhCc1pTYytYQ0lzSUZ3aVBDOXpaV3hsWTNRK1hDSWdYVHRjYm4xY2JseHVYRzVtZFc1amRHbHZiaUJuWlhSQmJHd29JR052Ym5SbGVIUXNJSFJoWnlBcElIdGNibHh1WEhRdkx5QlRkWEJ3YjNKME9pQkpSU0E4UFRrZ0xTQXhNU0J2Ym14NVhHNWNkQzh2SUZWelpTQjBlWEJsYjJZZ2RHOGdZWFp2YVdRZ2VtVnlieTFoY21kMWJXVnVkQ0J0WlhSb2IyUWdhVzUyYjJOaGRHbHZiaUJ2YmlCb2IzTjBJRzlpYW1WamRITWdLSFJ5WVdNdE1UVXhOVEVwWEc1Y2RIWmhjaUJ5WlhRN1hHNWNibHgwYVdZZ0tDQjBlWEJsYjJZZ1kyOXVkR1Y0ZEM1blpYUkZiR1Z0Wlc1MGMwSjVWR0ZuVG1GdFpTQWhQVDBnWENKMWJtUmxabWx1WldSY0lpQXBJSHRjYmx4MFhIUnlaWFFnUFNCamIyNTBaWGgwTG1kbGRFVnNaVzFsYm5SelFubFVZV2RPWVcxbEtDQjBZV2NnZkh3Z1hDSXFYQ0lnS1R0Y2JseHVYSFI5SUdWc2MyVWdhV1lnS0NCMGVYQmxiMllnWTI5dWRHVjRkQzV4ZFdWeWVWTmxiR1ZqZEc5eVFXeHNJQ0U5UFNCY0luVnVaR1ZtYVc1bFpGd2lJQ2tnZTF4dVhIUmNkSEpsZENBOUlHTnZiblJsZUhRdWNYVmxjbmxUWld4bFkzUnZja0ZzYkNnZ2RHRm5JSHg4SUZ3aUtsd2lJQ2s3WEc1Y2JseDBmU0JsYkhObElIdGNibHgwWEhSeVpYUWdQU0JiWFR0Y2JseDBmVnh1WEc1Y2RHbG1JQ2dnZEdGbklEMDlQU0IxYm1SbFptbHVaV1FnZkh3Z2RHRm5JQ1ltSUc1dlpHVk9ZVzFsS0NCamIyNTBaWGgwTENCMFlXY2dLU0FwSUh0Y2JseDBYSFJ5WlhSMWNtNGdhbEYxWlhKNUxtMWxjbWRsS0NCYklHTnZiblJsZUhRZ1hTd2djbVYwSUNrN1hHNWNkSDFjYmx4dVhIUnlaWFIxY200Z2NtVjBPMXh1ZlZ4dVhHNWNiaTh2SUUxaGNtc2djMk55YVhCMGN5QmhjeUJvWVhacGJtY2dZV3h5WldGa2VTQmlaV1Z1SUdWMllXeDFZWFJsWkZ4dVpuVnVZM1JwYjI0Z2MyVjBSMnh2WW1Gc1JYWmhiQ2dnWld4bGJYTXNJSEpsWmtWc1pXMWxiblJ6SUNrZ2UxeHVYSFIyWVhJZ2FTQTlJREFzWEc1Y2RGeDBiQ0E5SUdWc1pXMXpMbXhsYm1kMGFEdGNibHh1WEhSbWIzSWdLQ0E3SUdrZ1BDQnNPeUJwS3lzZ0tTQjdYRzVjZEZ4MFpHRjBZVkJ5YVhZdWMyVjBLRnh1WEhSY2RGeDBaV3hsYlhOYklHa2dYU3hjYmx4MFhIUmNkRndpWjJ4dlltRnNSWFpoYkZ3aUxGeHVYSFJjZEZ4MElYSmxaa1ZzWlcxbGJuUnpJSHg4SUdSaGRHRlFjbWwyTG1kbGRDZ2djbVZtUld4bGJXVnVkSE5iSUdrZ1hTd2dYQ0puYkc5aVlXeEZkbUZzWENJZ0tWeHVYSFJjZENrN1hHNWNkSDFjYm4xY2JseHVYRzUyWVhJZ2NtaDBiV3dnUFNBdlBId21JejljWEhjck95ODdYRzVjYm1aMWJtTjBhVzl1SUdKMWFXeGtSbkpoWjIxbGJuUW9JR1ZzWlcxekxDQmpiMjUwWlhoMExDQnpZM0pwY0hSekxDQnpaV3hsWTNScGIyNHNJR2xuYm05eVpXUWdLU0I3WEc1Y2RIWmhjaUJsYkdWdExDQjBiWEFzSUhSaFp5d2dkM0poY0N3Z1lYUjBZV05vWldRc0lHb3NYRzVjZEZ4MFpuSmhaMjFsYm5RZ1BTQmpiMjUwWlhoMExtTnlaV0YwWlVSdlkzVnRaVzUwUm5KaFoyMWxiblFvS1N4Y2JseDBYSFJ1YjJSbGN5QTlJRnRkTEZ4dVhIUmNkR2tnUFNBd0xGeHVYSFJjZEd3Z1BTQmxiR1Z0Y3k1c1pXNW5kR2c3WEc1Y2JseDBabTl5SUNnZ095QnBJRHdnYkRzZ2FTc3JJQ2tnZTF4dVhIUmNkR1ZzWlcwZ1BTQmxiR1Z0YzFzZ2FTQmRPMXh1WEc1Y2RGeDBhV1lnS0NCbGJHVnRJSHg4SUdWc1pXMGdQVDA5SURBZ0tTQjdYRzVjYmx4MFhIUmNkQzh2SUVGa1pDQnViMlJsY3lCa2FYSmxZM1JzZVZ4dVhIUmNkRngwYVdZZ0tDQjBiMVI1Y0dVb0lHVnNaVzBnS1NBOVBUMGdYQ0p2WW1wbFkzUmNJaUFwSUh0Y2JseHVYSFJjZEZ4MFhIUXZMeUJUZFhCd2IzSjBPaUJCYm1SeWIybGtJRHc5TkM0d0lHOXViSGtzSUZCb1lXNTBiMjFLVXlBeElHOXViSGxjYmx4MFhIUmNkRngwTHk4Z2NIVnphQzVoY0hCc2VTaGZMQ0JoY25KaGVXeHBhMlVwSUhSb2NtOTNjeUJ2YmlCaGJtTnBaVzUwSUZkbFlrdHBkRnh1WEhSY2RGeDBYSFJxVVhWbGNua3ViV1Z5WjJVb0lHNXZaR1Z6TENCbGJHVnRMbTV2WkdWVWVYQmxJRDhnV3lCbGJHVnRJRjBnT2lCbGJHVnRJQ2s3WEc1Y2JseDBYSFJjZEM4dklFTnZiblpsY25RZ2JtOXVMV2gwYld3Z2FXNTBieUJoSUhSbGVIUWdibTlrWlZ4dVhIUmNkRngwZlNCbGJITmxJR2xtSUNnZ0lYSm9kRzFzTG5SbGMzUW9JR1ZzWlcwZ0tTQXBJSHRjYmx4MFhIUmNkRngwYm05a1pYTXVjSFZ6YUNnZ1kyOXVkR1Y0ZEM1amNtVmhkR1ZVWlhoMFRtOWtaU2dnWld4bGJTQXBJQ2s3WEc1Y2JseDBYSFJjZEM4dklFTnZiblpsY25RZ2FIUnRiQ0JwYm5SdklFUlBUU0J1YjJSbGMxeHVYSFJjZEZ4MGZTQmxiSE5sSUh0Y2JseDBYSFJjZEZ4MGRHMXdJRDBnZEcxd0lIeDhJR1p5WVdkdFpXNTBMbUZ3Y0dWdVpFTm9hV3hrS0NCamIyNTBaWGgwTG1OeVpXRjBaVVZzWlcxbGJuUW9JRndpWkdsMlhDSWdLU0FwTzF4dVhHNWNkRngwWEhSY2RDOHZJRVJsYzJWeWFXRnNhWHBsSUdFZ2MzUmhibVJoY21RZ2NtVndjbVZ6Wlc1MFlYUnBiMjVjYmx4MFhIUmNkRngwZEdGbklEMGdLQ0J5ZEdGblRtRnRaUzVsZUdWaktDQmxiR1Z0SUNrZ2ZId2dXeUJjSWx3aUxDQmNJbHdpSUYwZ0tWc2dNU0JkTG5SdlRHOTNaWEpEWVhObEtDazdYRzVjZEZ4MFhIUmNkSGR5WVhBZ1BTQjNjbUZ3VFdGd1d5QjBZV2NnWFNCOGZDQjNjbUZ3VFdGd0xsOWtaV1poZFd4ME8xeHVYSFJjZEZ4MFhIUjBiWEF1YVc1dVpYSklWRTFNSUQwZ2QzSmhjRnNnTVNCZElDc2dhbEYxWlhKNUxtaDBiV3hRY21WbWFXeDBaWElvSUdWc1pXMGdLU0FySUhkeVlYQmJJRElnWFR0Y2JseHVYSFJjZEZ4MFhIUXZMeUJFWlhOalpXNWtJSFJvY205MVoyZ2dkM0poY0hCbGNuTWdkRzhnZEdobElISnBaMmgwSUdOdmJuUmxiblJjYmx4MFhIUmNkRngwYWlBOUlIZHlZWEJiSURBZ1hUdGNibHgwWEhSY2RGeDBkMmhwYkdVZ0tDQnFMUzBnS1NCN1hHNWNkRngwWEhSY2RGeDBkRzF3SUQwZ2RHMXdMbXhoYzNSRGFHbHNaRHRjYmx4MFhIUmNkRngwZlZ4dVhHNWNkRngwWEhSY2RDOHZJRk4xY0hCdmNuUTZJRUZ1WkhKdmFXUWdQRDAwTGpBZ2IyNXNlU3dnVUdoaGJuUnZiVXBUSURFZ2IyNXNlVnh1WEhSY2RGeDBYSFF2THlCd2RYTm9MbUZ3Y0d4NUtGOHNJR0Z5Y21GNWJHbHJaU2tnZEdoeWIzZHpJRzl1SUdGdVkybGxiblFnVjJWaVMybDBYRzVjZEZ4MFhIUmNkR3BSZFdWeWVTNXRaWEpuWlNnZ2JtOWtaWE1zSUhSdGNDNWphR2xzWkU1dlpHVnpJQ2s3WEc1Y2JseDBYSFJjZEZ4MEx5OGdVbVZ0WlcxaVpYSWdkR2hsSUhSdmNDMXNaWFpsYkNCamIyNTBZV2x1WlhKY2JseDBYSFJjZEZ4MGRHMXdJRDBnWm5KaFoyMWxiblF1Wm1seWMzUkRhR2xzWkR0Y2JseHVYSFJjZEZ4MFhIUXZMeUJGYm5OMWNtVWdkR2hsSUdOeVpXRjBaV1FnYm05a1pYTWdZWEpsSUc5eWNHaGhibVZrSUNoMGNtRmpMVEV5TXpreUtWeHVYSFJjZEZ4MFhIUjBiWEF1ZEdWNGRFTnZiblJsYm5RZ1BTQmNJbHdpTzF4dVhIUmNkRngwZlZ4dVhIUmNkSDFjYmx4MGZWeHVYRzVjZEM4dklGSmxiVzkyWlNCM2NtRndjR1Z5SUdaeWIyMGdabkpoWjIxbGJuUmNibHgwWm5KaFoyMWxiblF1ZEdWNGRFTnZiblJsYm5RZ1BTQmNJbHdpTzF4dVhHNWNkR2tnUFNBd08xeHVYSFIzYUdsc1pTQW9JQ2dnWld4bGJTQTlJRzV2WkdWeld5QnBLeXNnWFNBcElDa2dlMXh1WEc1Y2RGeDBMeThnVTJ0cGNDQmxiR1Z0Wlc1MGN5QmhiSEpsWVdSNUlHbHVJSFJvWlNCamIyNTBaWGgwSUdOdmJHeGxZM1JwYjI0Z0tIUnlZV010TkRBNE55bGNibHgwWEhScFppQW9JSE5sYkdWamRHbHZiaUFtSmlCcVVYVmxjbmt1YVc1QmNuSmhlU2dnWld4bGJTd2djMlZzWldOMGFXOXVJQ2tnUGlBdE1TQXBJSHRjYmx4MFhIUmNkR2xtSUNnZ2FXZHViM0psWkNBcElIdGNibHgwWEhSY2RGeDBhV2R1YjNKbFpDNXdkWE5vS0NCbGJHVnRJQ2s3WEc1Y2RGeDBYSFI5WEc1Y2RGeDBYSFJqYjI1MGFXNTFaVHRjYmx4MFhIUjlYRzVjYmx4MFhIUmhkSFJoWTJobFpDQTlJR2x6UVhSMFlXTm9aV1FvSUdWc1pXMGdLVHRjYmx4dVhIUmNkQzh2SUVGd2NHVnVaQ0IwYnlCbWNtRm5iV1Z1ZEZ4dVhIUmNkSFJ0Y0NBOUlHZGxkRUZzYkNnZ1puSmhaMjFsYm5RdVlYQndaVzVrUTJocGJHUW9JR1ZzWlcwZ0tTd2dYQ0p6WTNKcGNIUmNJaUFwTzF4dVhHNWNkRngwTHk4Z1VISmxjMlZ5ZG1VZ2MyTnlhWEIwSUdWMllXeDFZWFJwYjI0Z2FHbHpkRzl5ZVZ4dVhIUmNkR2xtSUNnZ1lYUjBZV05vWldRZ0tTQjdYRzVjZEZ4MFhIUnpaWFJIYkc5aVlXeEZkbUZzS0NCMGJYQWdLVHRjYmx4MFhIUjlYRzVjYmx4MFhIUXZMeUJEWVhCMGRYSmxJR1Y0WldOMWRHRmliR1Z6WEc1Y2RGeDBhV1lnS0NCelkzSnBjSFJ6SUNrZ2UxeHVYSFJjZEZ4MGFpQTlJREE3WEc1Y2RGeDBYSFIzYUdsc1pTQW9JQ2dnWld4bGJTQTlJSFJ0Y0ZzZ2Fpc3JJRjBnS1NBcElIdGNibHgwWEhSY2RGeDBhV1lnS0NCeWMyTnlhWEIwVkhsd1pTNTBaWE4wS0NCbGJHVnRMblI1Y0dVZ2ZId2dYQ0pjSWlBcElDa2dlMXh1WEhSY2RGeDBYSFJjZEhOamNtbHdkSE11Y0hWemFDZ2daV3hsYlNBcE8xeHVYSFJjZEZ4MFhIUjlYRzVjZEZ4MFhIUjlYRzVjZEZ4MGZWeHVYSFI5WEc1Y2JseDBjbVYwZFhKdUlHWnlZV2R0Wlc1ME8xeHVmVnh1WEc1Y2JuWmhjaUJ5ZEhsd1pXNWhiV1Z6Y0dGalpTQTlJQzllS0Z0ZUxsMHFLU2cvT2x4Y0xpZ3VLeWw4S1M4N1hHNWNibVoxYm1OMGFXOXVJSEpsZEhWeWJsUnlkV1VvS1NCN1hHNWNkSEpsZEhWeWJpQjBjblZsTzF4dWZWeHVYRzVtZFc1amRHbHZiaUJ5WlhSMWNtNUdZV3h6WlNncElIdGNibHgwY21WMGRYSnVJR1poYkhObE8xeHVmVnh1WEc0dkx5QlRkWEJ3YjNKME9pQkpSU0E4UFRrZ0xTQXhNU3RjYmk4dklHWnZZM1Z6S0NrZ1lXNWtJR0pzZFhJb0tTQmhjbVVnWVhONWJtTm9jbTl1YjNWekxDQmxlR05sY0hRZ2QyaGxiaUIwYUdWNUlHRnlaU0J1YnkxdmNDNWNiaTh2SUZOdklHVjRjR1ZqZENCbWIyTjFjeUIwYnlCaVpTQnplVzVqYUhKdmJtOTFjeUIzYUdWdUlIUm9aU0JsYkdWdFpXNTBJR2x6SUdGc2NtVmhaSGtnWVdOMGFYWmxMRnh1THk4Z1lXNWtJR0pzZFhJZ2RHOGdZbVVnYzNsdVkyaHliMjV2ZFhNZ2QyaGxiaUIwYUdVZ1pXeGxiV1Z1ZENCcGN5QnViM1FnWVd4eVpXRmtlU0JoWTNScGRtVXVYRzR2THlBb1ptOWpkWE1nWVc1a0lHSnNkWElnWVhKbElHRnNkMkY1Y3lCemVXNWphSEp2Ym05MWN5QnBiaUJ2ZEdobGNpQnpkWEJ3YjNKMFpXUWdZbkp2ZDNObGNuTXNYRzR2THlCMGFHbHpJR3AxYzNRZ1pHVm1hVzVsY3lCM2FHVnVJSGRsSUdOaGJpQmpiM1Z1ZENCdmJpQnBkQ2t1WEc1bWRXNWpkR2x2YmlCbGVIQmxZM1JUZVc1aktDQmxiR1Z0TENCMGVYQmxJQ2tnZTF4dVhIUnlaWFIxY200Z0tDQmxiR1Z0SUQwOVBTQnpZV1psUVdOMGFYWmxSV3hsYldWdWRDZ3BJQ2tnUFQwOUlDZ2dkSGx3WlNBOVBUMGdYQ0ptYjJOMWMxd2lJQ2s3WEc1OVhHNWNiaTh2SUZOMWNIQnZjblE2SUVsRklEdzlPU0J2Ym14NVhHNHZMeUJCWTJObGMzTnBibWNnWkc5amRXMWxiblF1WVdOMGFYWmxSV3hsYldWdWRDQmpZVzRnZEdoeWIzY2dkVzVsZUhCbFkzUmxaR3g1WEc0dkx5Qm9kSFJ3Y3pvdkwySjFaM011YW5GMVpYSjVMbU52YlM5MGFXTnJaWFF2TVRNek9UTmNibVoxYm1OMGFXOXVJSE5oWm1WQlkzUnBkbVZGYkdWdFpXNTBLQ2tnZTF4dVhIUjBjbmtnZTF4dVhIUmNkSEpsZEhWeWJpQmtiMk4xYldWdWRDNWhZM1JwZG1WRmJHVnRaVzUwTzF4dVhIUjlJR05oZEdOb0lDZ2daWEp5SUNrZ2V5QjlYRzU5WEc1Y2JtWjFibU4wYVc5dUlHOXVLQ0JsYkdWdExDQjBlWEJsY3l3Z2MyVnNaV04wYjNJc0lHUmhkR0VzSUdadUxDQnZibVVnS1NCN1hHNWNkSFpoY2lCdmNtbG5SbTRzSUhSNWNHVTdYRzVjYmx4MEx5OGdWSGx3WlhNZ1kyRnVJR0psSUdFZ2JXRndJRzltSUhSNWNHVnpMMmhoYm1Sc1pYSnpYRzVjZEdsbUlDZ2dkSGx3Wlc5bUlIUjVjR1Z6SUQwOVBTQmNJbTlpYW1WamRGd2lJQ2tnZTF4dVhHNWNkRngwTHk4Z0tDQjBlWEJsY3kxUFltcGxZM1FzSUhObGJHVmpkRzl5TENCa1lYUmhJQ2xjYmx4MFhIUnBaaUFvSUhSNWNHVnZaaUJ6Wld4bFkzUnZjaUFoUFQwZ1hDSnpkSEpwYm1kY0lpQXBJSHRjYmx4dVhIUmNkRngwTHk4Z0tDQjBlWEJsY3kxUFltcGxZM1FzSUdSaGRHRWdLVnh1WEhSY2RGeDBaR0YwWVNBOUlHUmhkR0VnZkh3Z2MyVnNaV04wYjNJN1hHNWNkRngwWEhSelpXeGxZM1J2Y2lBOUlIVnVaR1ZtYVc1bFpEdGNibHgwWEhSOVhHNWNkRngwWm05eUlDZ2dkSGx3WlNCcGJpQjBlWEJsY3lBcElIdGNibHgwWEhSY2RHOXVLQ0JsYkdWdExDQjBlWEJsTENCelpXeGxZM1J2Y2l3Z1pHRjBZU3dnZEhsd1pYTmJJSFI1Y0dVZ1hTd2diMjVsSUNrN1hHNWNkRngwZlZ4dVhIUmNkSEpsZEhWeWJpQmxiR1Z0TzF4dVhIUjlYRzVjYmx4MGFXWWdLQ0JrWVhSaElEMDlJRzUxYkd3Z0ppWWdabTRnUFQwZ2JuVnNiQ0FwSUh0Y2JseHVYSFJjZEM4dklDZ2dkSGx3WlhNc0lHWnVJQ2xjYmx4MFhIUm1iaUE5SUhObGJHVmpkRzl5TzF4dVhIUmNkR1JoZEdFZ1BTQnpaV3hsWTNSdmNpQTlJSFZ1WkdWbWFXNWxaRHRjYmx4MGZTQmxiSE5sSUdsbUlDZ2dabTRnUFQwZ2JuVnNiQ0FwSUh0Y2JseDBYSFJwWmlBb0lIUjVjR1Z2WmlCelpXeGxZM1J2Y2lBOVBUMGdYQ0p6ZEhKcGJtZGNJaUFwSUh0Y2JseHVYSFJjZEZ4MEx5OGdLQ0IwZVhCbGN5d2djMlZzWldOMGIzSXNJR1p1SUNsY2JseDBYSFJjZEdadUlEMGdaR0YwWVR0Y2JseDBYSFJjZEdSaGRHRWdQU0IxYm1SbFptbHVaV1E3WEc1Y2RGeDBmU0JsYkhObElIdGNibHh1WEhSY2RGeDBMeThnS0NCMGVYQmxjeXdnWkdGMFlTd2dabTRnS1Z4dVhIUmNkRngwWm00Z1BTQmtZWFJoTzF4dVhIUmNkRngwWkdGMFlTQTlJSE5sYkdWamRHOXlPMXh1WEhSY2RGeDBjMlZzWldOMGIzSWdQU0IxYm1SbFptbHVaV1E3WEc1Y2RGeDBmVnh1WEhSOVhHNWNkR2xtSUNnZ1ptNGdQVDA5SUdaaGJITmxJQ2tnZTF4dVhIUmNkR1p1SUQwZ2NtVjBkWEp1Um1Gc2MyVTdYRzVjZEgwZ1pXeHpaU0JwWmlBb0lDRm1iaUFwSUh0Y2JseDBYSFJ5WlhSMWNtNGdaV3hsYlR0Y2JseDBmVnh1WEc1Y2RHbG1JQ2dnYjI1bElEMDlQU0F4SUNrZ2UxeHVYSFJjZEc5eWFXZEdiaUE5SUdadU8xeHVYSFJjZEdadUlEMGdablZ1WTNScGIyNG9JR1YyWlc1MElDa2dlMXh1WEc1Y2RGeDBYSFF2THlCRFlXNGdkWE5sSUdGdUlHVnRjSFI1SUhObGRDd2djMmx1WTJVZ1pYWmxiblFnWTI5dWRHRnBibk1nZEdobElHbHVabTljYmx4MFhIUmNkR3BSZFdWeWVTZ3BMbTltWmlnZ1pYWmxiblFnS1R0Y2JseDBYSFJjZEhKbGRIVnliaUJ2Y21sblJtNHVZWEJ3Ykhrb0lIUm9hWE1zSUdGeVozVnRaVzUwY3lBcE8xeHVYSFJjZEgwN1hHNWNibHgwWEhRdkx5QlZjMlVnYzJGdFpTQm5kV2xrSUhOdklHTmhiR3hsY2lCallXNGdjbVZ0YjNabElIVnphVzVuSUc5eWFXZEdibHh1WEhSY2RHWnVMbWQxYVdRZ1BTQnZjbWxuUm00dVozVnBaQ0I4ZkNBb0lHOXlhV2RHYmk1bmRXbGtJRDBnYWxGMVpYSjVMbWQxYVdRckt5QXBPMXh1WEhSOVhHNWNkSEpsZEhWeWJpQmxiR1Z0TG1WaFkyZ29JR1oxYm1OMGFXOXVLQ2tnZTF4dVhIUmNkR3BSZFdWeWVTNWxkbVZ1ZEM1aFpHUW9JSFJvYVhNc0lIUjVjR1Z6TENCbWJpd2daR0YwWVN3Z2MyVnNaV04wYjNJZ0tUdGNibHgwZlNBcE8xeHVmVnh1WEc0dktseHVJQ29nU0dWc2NHVnlJR1oxYm1OMGFXOXVjeUJtYjNJZ2JXRnVZV2RwYm1jZ1pYWmxiblJ6SUMwdElHNXZkQ0J3WVhKMElHOW1JSFJvWlNCd2RXSnNhV01nYVc1MFpYSm1ZV05sTGx4dUlDb2dVSEp2Y0hNZ2RHOGdSR1ZoYmlCRlpIZGhjbVJ6SnlCaFpHUkZkbVZ1ZENCc2FXSnlZWEo1SUdadmNpQnRZVzU1SUc5bUlIUm9aU0JwWkdWaGN5NWNiaUFxTDF4dWFsRjFaWEo1TG1WMlpXNTBJRDBnZTF4dVhHNWNkR2RzYjJKaGJEb2dlMzBzWEc1Y2JseDBZV1JrT2lCbWRXNWpkR2x2YmlnZ1pXeGxiU3dnZEhsd1pYTXNJR2hoYm1Sc1pYSXNJR1JoZEdFc0lITmxiR1ZqZEc5eUlDa2dlMXh1WEc1Y2RGeDBkbUZ5SUdoaGJtUnNaVTlpYWtsdUxDQmxkbVZ1ZEVoaGJtUnNaU3dnZEcxd0xGeHVYSFJjZEZ4MFpYWmxiblJ6TENCMExDQm9ZVzVrYkdWUFltb3NYRzVjZEZ4MFhIUnpjR1ZqYVdGc0xDQm9ZVzVrYkdWeWN5d2dkSGx3WlN3Z2JtRnRaWE53WVdObGN5d2diM0pwWjFSNWNHVXNYRzVjZEZ4MFhIUmxiR1Z0UkdGMFlTQTlJR1JoZEdGUWNtbDJMbWRsZENnZ1pXeGxiU0FwTzF4dVhHNWNkRngwTHk4Z1QyNXNlU0JoZEhSaFkyZ2daWFpsYm5SeklIUnZJRzlpYW1WamRITWdkR2hoZENCaFkyTmxjSFFnWkdGMFlWeHVYSFJjZEdsbUlDZ2dJV0ZqWTJWd2RFUmhkR0VvSUdWc1pXMGdLU0FwSUh0Y2JseDBYSFJjZEhKbGRIVnlianRjYmx4MFhIUjlYRzVjYmx4MFhIUXZMeUJEWVd4c1pYSWdZMkZ1SUhCaGMzTWdhVzRnWVc0Z2IySnFaV04wSUc5bUlHTjFjM1J2YlNCa1lYUmhJR2x1SUd4cFpYVWdiMllnZEdobElHaGhibVJzWlhKY2JseDBYSFJwWmlBb0lHaGhibVJzWlhJdWFHRnVaR3hsY2lBcElIdGNibHgwWEhSY2RHaGhibVJzWlU5aWFrbHVJRDBnYUdGdVpHeGxjanRjYmx4MFhIUmNkR2hoYm1Sc1pYSWdQU0JvWVc1a2JHVlBZbXBKYmk1b1lXNWtiR1Z5TzF4dVhIUmNkRngwYzJWc1pXTjBiM0lnUFNCb1lXNWtiR1ZQWW1wSmJpNXpaV3hsWTNSdmNqdGNibHgwWEhSOVhHNWNibHgwWEhRdkx5QkZibk4xY21VZ2RHaGhkQ0JwYm5aaGJHbGtJSE5sYkdWamRHOXljeUIwYUhKdmR5QmxlR05sY0hScGIyNXpJR0YwSUdGMGRHRmphQ0IwYVcxbFhHNWNkRngwTHk4Z1JYWmhiSFZoZEdVZ1lXZGhhVzV6ZENCa2IyTjFiV1Z1ZEVWc1pXMWxiblFnYVc0Z1kyRnpaU0JsYkdWdElHbHpJR0VnYm05dUxXVnNaVzFsYm5RZ2JtOWtaU0FvWlM1bkxpd2daRzlqZFcxbGJuUXBYRzVjZEZ4MGFXWWdLQ0J6Wld4bFkzUnZjaUFwSUh0Y2JseDBYSFJjZEdwUmRXVnllUzVtYVc1a0xtMWhkR05vWlhOVFpXeGxZM1J2Y2lnZ1pHOWpkVzFsYm5SRmJHVnRaVzUwTENCelpXeGxZM1J2Y2lBcE8xeHVYSFJjZEgxY2JseHVYSFJjZEM4dklFMWhhMlVnYzNWeVpTQjBhR0YwSUhSb1pTQm9ZVzVrYkdWeUlHaGhjeUJoSUhWdWFYRjFaU0JKUkN3Z2RYTmxaQ0IwYnlCbWFXNWtMM0psYlc5MlpTQnBkQ0JzWVhSbGNseHVYSFJjZEdsbUlDZ2dJV2hoYm1Sc1pYSXVaM1ZwWkNBcElIdGNibHgwWEhSY2RHaGhibVJzWlhJdVozVnBaQ0E5SUdwUmRXVnllUzVuZFdsa0t5czdYRzVjZEZ4MGZWeHVYRzVjZEZ4MEx5OGdTVzVwZENCMGFHVWdaV3hsYldWdWRDZHpJR1YyWlc1MElITjBjblZqZEhWeVpTQmhibVFnYldGcGJpQm9ZVzVrYkdWeUxDQnBaaUIwYUdseklHbHpJSFJvWlNCbWFYSnpkRnh1WEhSY2RHbG1JQ2dnSVNnZ1pYWmxiblJ6SUQwZ1pXeGxiVVJoZEdFdVpYWmxiblJ6SUNrZ0tTQjdYRzVjZEZ4MFhIUmxkbVZ1ZEhNZ1BTQmxiR1Z0UkdGMFlTNWxkbVZ1ZEhNZ1BTQlBZbXBsWTNRdVkzSmxZWFJsS0NCdWRXeHNJQ2s3WEc1Y2RGeDBmVnh1WEhSY2RHbG1JQ2dnSVNnZ1pYWmxiblJJWVc1a2JHVWdQU0JsYkdWdFJHRjBZUzVvWVc1a2JHVWdLU0FwSUh0Y2JseDBYSFJjZEdWMlpXNTBTR0Z1Wkd4bElEMGdaV3hsYlVSaGRHRXVhR0Z1Wkd4bElEMGdablZ1WTNScGIyNG9JR1VnS1NCN1hHNWNibHgwWEhSY2RGeDBMeThnUkdselkyRnlaQ0IwYUdVZ2MyVmpiMjVrSUdWMlpXNTBJRzltSUdFZ2FsRjFaWEo1TG1WMlpXNTBMblJ5YVdkblpYSW9LU0JoYm1SY2JseDBYSFJjZEZ4MEx5OGdkMmhsYmlCaGJpQmxkbVZ1ZENCcGN5QmpZV3hzWldRZ1lXWjBaWElnWVNCd1lXZGxJR2hoY3lCMWJteHZZV1JsWkZ4dVhIUmNkRngwWEhSeVpYUjFjbTRnZEhsd1pXOW1JR3BSZFdWeWVTQWhQVDBnWENKMWJtUmxabWx1WldSY0lpQW1KaUJxVVhWbGNua3VaWFpsYm5RdWRISnBaMmRsY21Wa0lDRTlQU0JsTG5SNWNHVWdQMXh1WEhSY2RGeDBYSFJjZEdwUmRXVnllUzVsZG1WdWRDNWthWE53WVhSamFDNWhjSEJzZVNnZ1pXeGxiU3dnWVhKbmRXMWxiblJ6SUNrZ09pQjFibVJsWm1sdVpXUTdYRzVjZEZ4MFhIUjlPMXh1WEhSY2RIMWNibHh1WEhSY2RDOHZJRWhoYm1Sc1pTQnRkV3gwYVhCc1pTQmxkbVZ1ZEhNZ2MyVndZWEpoZEdWa0lHSjVJR0VnYzNCaFkyVmNibHgwWEhSMGVYQmxjeUE5SUNnZ2RIbHdaWE1nZkh3Z1hDSmNJaUFwTG0xaGRHTm9LQ0J5Ym05MGFIUnRiSGRvYVhSbElDa2dmSHdnV3lCY0lsd2lJRjA3WEc1Y2RGeDBkQ0E5SUhSNWNHVnpMbXhsYm1kMGFEdGNibHgwWEhSM2FHbHNaU0FvSUhRdExTQXBJSHRjYmx4MFhIUmNkSFJ0Y0NBOUlISjBlWEJsYm1GdFpYTndZV05sTG1WNFpXTW9JSFI1Y0dWeld5QjBJRjBnS1NCOGZDQmJYVHRjYmx4MFhIUmNkSFI1Y0dVZ1BTQnZjbWxuVkhsd1pTQTlJSFJ0Y0ZzZ01TQmRPMXh1WEhSY2RGeDBibUZ0WlhOd1lXTmxjeUE5SUNnZ2RHMXdXeUF5SUYwZ2ZId2dYQ0pjSWlBcExuTndiR2wwS0NCY0lpNWNJaUFwTG5OdmNuUW9LVHRjYmx4dVhIUmNkRngwTHk4Z1ZHaGxjbVVnS20xMWMzUXFJR0psSUdFZ2RIbHdaU3dnYm04Z1lYUjBZV05vYVc1bklHNWhiV1Z6Y0dGalpTMXZibXg1SUdoaGJtUnNaWEp6WEc1Y2RGeDBYSFJwWmlBb0lDRjBlWEJsSUNrZ2UxeHVYSFJjZEZ4MFhIUmpiMjUwYVc1MVpUdGNibHgwWEhSY2RIMWNibHh1WEhSY2RGeDBMeThnU1dZZ1pYWmxiblFnWTJoaGJtZGxjeUJwZEhNZ2RIbHdaU3dnZFhObElIUm9aU0J6Y0dWamFXRnNJR1YyWlc1MElHaGhibVJzWlhKeklHWnZjaUIwYUdVZ1kyaGhibWRsWkNCMGVYQmxYRzVjZEZ4MFhIUnpjR1ZqYVdGc0lEMGdhbEYxWlhKNUxtVjJaVzUwTG5Od1pXTnBZV3hiSUhSNWNHVWdYU0I4ZkNCN2ZUdGNibHh1WEhSY2RGeDBMeThnU1dZZ2MyVnNaV04wYjNJZ1pHVm1hVzVsWkN3Z1pHVjBaWEp0YVc1bElITndaV05wWVd3Z1pYWmxiblFnWVhCcElIUjVjR1VzSUc5MGFHVnlkMmx6WlNCbmFYWmxiaUIwZVhCbFhHNWNkRngwWEhSMGVYQmxJRDBnS0NCelpXeGxZM1J2Y2lBL0lITndaV05wWVd3dVpHVnNaV2RoZEdWVWVYQmxJRG9nYzNCbFkybGhiQzVpYVc1a1ZIbHdaU0FwSUh4OElIUjVjR1U3WEc1Y2JseDBYSFJjZEM4dklGVndaR0YwWlNCemNHVmphV0ZzSUdKaGMyVmtJRzl1SUc1bGQyeDVJSEpsYzJWMElIUjVjR1ZjYmx4MFhIUmNkSE53WldOcFlXd2dQU0JxVVhWbGNua3VaWFpsYm5RdWMzQmxZMmxoYkZzZ2RIbHdaU0JkSUh4OElIdDlPMXh1WEc1Y2RGeDBYSFF2THlCb1lXNWtiR1ZQWW1vZ2FYTWdjR0Z6YzJWa0lIUnZJR0ZzYkNCbGRtVnVkQ0JvWVc1a2JHVnljMXh1WEhSY2RGeDBhR0Z1Wkd4bFQySnFJRDBnYWxGMVpYSjVMbVY0ZEdWdVpDZ2dlMXh1WEhSY2RGeDBYSFIwZVhCbE9pQjBlWEJsTEZ4dVhIUmNkRngwWEhSdmNtbG5WSGx3WlRvZ2IzSnBaMVI1Y0dVc1hHNWNkRngwWEhSY2RHUmhkR0U2SUdSaGRHRXNYRzVjZEZ4MFhIUmNkR2hoYm1Sc1pYSTZJR2hoYm1Sc1pYSXNYRzVjZEZ4MFhIUmNkR2QxYVdRNklHaGhibVJzWlhJdVozVnBaQ3hjYmx4MFhIUmNkRngwYzJWc1pXTjBiM0k2SUhObGJHVmpkRzl5TEZ4dVhIUmNkRngwWEhSdVpXVmtjME52Ym5SbGVIUTZJSE5sYkdWamRHOXlJQ1ltSUdwUmRXVnllUzVsZUhCeUxtMWhkR05vTG01bFpXUnpRMjl1ZEdWNGRDNTBaWE4wS0NCelpXeGxZM1J2Y2lBcExGeHVYSFJjZEZ4MFhIUnVZVzFsYzNCaFkyVTZJRzVoYldWemNHRmpaWE11YW05cGJpZ2dYQ0l1WENJZ0tWeHVYSFJjZEZ4MGZTd2dhR0Z1Wkd4bFQySnFTVzRnS1R0Y2JseHVYSFJjZEZ4MEx5OGdTVzVwZENCMGFHVWdaWFpsYm5RZ2FHRnVaR3hsY2lCeGRXVjFaU0JwWmlCM1pTZHlaU0IwYUdVZ1ptbHljM1JjYmx4MFhIUmNkR2xtSUNnZ0lTZ2dhR0Z1Wkd4bGNuTWdQU0JsZG1WdWRITmJJSFI1Y0dVZ1hTQXBJQ2tnZTF4dVhIUmNkRngwWEhSb1lXNWtiR1Z5Y3lBOUlHVjJaVzUwYzFzZ2RIbHdaU0JkSUQwZ1cxMDdYRzVjZEZ4MFhIUmNkR2hoYm1Sc1pYSnpMbVJsYkdWbllYUmxRMjkxYm5RZ1BTQXdPMXh1WEc1Y2RGeDBYSFJjZEM4dklFOXViSGtnZFhObElHRmtaRVYyWlc1MFRHbHpkR1Z1WlhJZ2FXWWdkR2hsSUhOd1pXTnBZV3dnWlhabGJuUnpJR2hoYm1Sc1pYSWdjbVYwZFhKdWN5Qm1ZV3h6WlZ4dVhIUmNkRngwWEhScFppQW9JQ0Z6Y0dWamFXRnNMbk5sZEhWd0lIeDhYRzVjZEZ4MFhIUmNkRngwYzNCbFkybGhiQzV6WlhSMWNDNWpZV3hzS0NCbGJHVnRMQ0JrWVhSaExDQnVZVzFsYzNCaFkyVnpMQ0JsZG1WdWRFaGhibVJzWlNBcElEMDlQU0JtWVd4elpTQXBJSHRjYmx4dVhIUmNkRngwWEhSY2RHbG1JQ2dnWld4bGJTNWhaR1JGZG1WdWRFeHBjM1JsYm1WeUlDa2dlMXh1WEhSY2RGeDBYSFJjZEZ4MFpXeGxiUzVoWkdSRmRtVnVkRXhwYzNSbGJtVnlLQ0IwZVhCbExDQmxkbVZ1ZEVoaGJtUnNaU0FwTzF4dVhIUmNkRngwWEhSY2RIMWNibHgwWEhSY2RGeDBmVnh1WEhSY2RGeDBmVnh1WEc1Y2RGeDBYSFJwWmlBb0lITndaV05wWVd3dVlXUmtJQ2tnZTF4dVhIUmNkRngwWEhSemNHVmphV0ZzTG1Ga1pDNWpZV3hzS0NCbGJHVnRMQ0JvWVc1a2JHVlBZbW9nS1R0Y2JseHVYSFJjZEZ4MFhIUnBaaUFvSUNGb1lXNWtiR1ZQWW1vdWFHRnVaR3hsY2k1bmRXbGtJQ2tnZTF4dVhIUmNkRngwWEhSY2RHaGhibVJzWlU5aWFpNW9ZVzVrYkdWeUxtZDFhV1FnUFNCb1lXNWtiR1Z5TG1kMWFXUTdYRzVjZEZ4MFhIUmNkSDFjYmx4MFhIUmNkSDFjYmx4dVhIUmNkRngwTHk4Z1FXUmtJSFJ2SUhSb1pTQmxiR1Z0Wlc1MEozTWdhR0Z1Wkd4bGNpQnNhWE4wTENCa1pXeGxaMkYwWlhNZ2FXNGdabkp2Ym5SY2JseDBYSFJjZEdsbUlDZ2djMlZzWldOMGIzSWdLU0I3WEc1Y2RGeDBYSFJjZEdoaGJtUnNaWEp6TG5Od2JHbGpaU2dnYUdGdVpHeGxjbk11WkdWc1pXZGhkR1ZEYjNWdWRDc3JMQ0F3TENCb1lXNWtiR1ZQWW1vZ0tUdGNibHgwWEhSY2RIMGdaV3h6WlNCN1hHNWNkRngwWEhSY2RHaGhibVJzWlhKekxuQjFjMmdvSUdoaGJtUnNaVTlpYWlBcE8xeHVYSFJjZEZ4MGZWeHVYRzVjZEZ4MFhIUXZMeUJMWldWd0lIUnlZV05ySUc5bUlIZG9hV05vSUdWMlpXNTBjeUJvWVhabElHVjJaWElnWW1WbGJpQjFjMlZrTENCbWIzSWdaWFpsYm5RZ2IzQjBhVzFwZW1GMGFXOXVYRzVjZEZ4MFhIUnFVWFZsY25rdVpYWmxiblF1WjJ4dlltRnNXeUIwZVhCbElGMGdQU0IwY25WbE8xeHVYSFJjZEgxY2JseHVYSFI5TEZ4dVhHNWNkQzh2SUVSbGRHRmphQ0JoYmlCbGRtVnVkQ0J2Y2lCelpYUWdiMllnWlhabGJuUnpJR1p5YjIwZ1lXNGdaV3hsYldWdWRGeHVYSFJ5WlcxdmRtVTZJR1oxYm1OMGFXOXVLQ0JsYkdWdExDQjBlWEJsY3l3Z2FHRnVaR3hsY2l3Z2MyVnNaV04wYjNJc0lHMWhjSEJsWkZSNWNHVnpJQ2tnZTF4dVhHNWNkRngwZG1GeUlHb3NJRzl5YVdkRGIzVnVkQ3dnZEcxd0xGeHVYSFJjZEZ4MFpYWmxiblJ6TENCMExDQm9ZVzVrYkdWUFltb3NYRzVjZEZ4MFhIUnpjR1ZqYVdGc0xDQm9ZVzVrYkdWeWN5d2dkSGx3WlN3Z2JtRnRaWE53WVdObGN5d2diM0pwWjFSNWNHVXNYRzVjZEZ4MFhIUmxiR1Z0UkdGMFlTQTlJR1JoZEdGUWNtbDJMbWhoYzBSaGRHRW9JR1ZzWlcwZ0tTQW1KaUJrWVhSaFVISnBkaTVuWlhRb0lHVnNaVzBnS1R0Y2JseHVYSFJjZEdsbUlDZ2dJV1ZzWlcxRVlYUmhJSHg4SUNFb0lHVjJaVzUwY3lBOUlHVnNaVzFFWVhSaExtVjJaVzUwY3lBcElDa2dlMXh1WEhSY2RGeDBjbVYwZFhKdU8xeHVYSFJjZEgxY2JseHVYSFJjZEM4dklFOXVZMlVnWm05eUlHVmhZMmdnZEhsd1pTNXVZVzFsYzNCaFkyVWdhVzRnZEhsd1pYTTdJSFI1Y0dVZ2JXRjVJR0psSUc5dGFYUjBaV1JjYmx4MFhIUjBlWEJsY3lBOUlDZ2dkSGx3WlhNZ2ZId2dYQ0pjSWlBcExtMWhkR05vS0NCeWJtOTBhSFJ0Ykhkb2FYUmxJQ2tnZkh3Z1d5QmNJbHdpSUYwN1hHNWNkRngwZENBOUlIUjVjR1Z6TG14bGJtZDBhRHRjYmx4MFhIUjNhR2xzWlNBb0lIUXRMU0FwSUh0Y2JseDBYSFJjZEhSdGNDQTlJSEowZVhCbGJtRnRaWE53WVdObExtVjRaV01vSUhSNWNHVnpXeUIwSUYwZ0tTQjhmQ0JiWFR0Y2JseDBYSFJjZEhSNWNHVWdQU0J2Y21sblZIbHdaU0E5SUhSdGNGc2dNU0JkTzF4dVhIUmNkRngwYm1GdFpYTndZV05sY3lBOUlDZ2dkRzF3V3lBeUlGMGdmSHdnWENKY0lpQXBMbk53YkdsMEtDQmNJaTVjSWlBcExuTnZjblFvS1R0Y2JseHVYSFJjZEZ4MEx5OGdWVzVpYVc1a0lHRnNiQ0JsZG1WdWRITWdLRzl1SUhSb2FYTWdibUZ0WlhOd1lXTmxMQ0JwWmlCd2NtOTJhV1JsWkNrZ1ptOXlJSFJvWlNCbGJHVnRaVzUwWEc1Y2RGeDBYSFJwWmlBb0lDRjBlWEJsSUNrZ2UxeHVYSFJjZEZ4MFhIUm1iM0lnS0NCMGVYQmxJR2x1SUdWMlpXNTBjeUFwSUh0Y2JseDBYSFJjZEZ4MFhIUnFVWFZsY25rdVpYWmxiblF1Y21WdGIzWmxLQ0JsYkdWdExDQjBlWEJsSUNzZ2RIbHdaWE5iSUhRZ1hTd2dhR0Z1Wkd4bGNpd2djMlZzWldOMGIzSXNJSFJ5ZFdVZ0tUdGNibHgwWEhSY2RGeDBmVnh1WEhSY2RGeDBYSFJqYjI1MGFXNTFaVHRjYmx4MFhIUmNkSDFjYmx4dVhIUmNkRngwYzNCbFkybGhiQ0E5SUdwUmRXVnllUzVsZG1WdWRDNXpjR1ZqYVdGc1d5QjBlWEJsSUYwZ2ZId2dlMzA3WEc1Y2RGeDBYSFIwZVhCbElEMGdLQ0J6Wld4bFkzUnZjaUEvSUhOd1pXTnBZV3d1WkdWc1pXZGhkR1ZVZVhCbElEb2djM0JsWTJsaGJDNWlhVzVrVkhsd1pTQXBJSHg4SUhSNWNHVTdYRzVjZEZ4MFhIUm9ZVzVrYkdWeWN5QTlJR1YyWlc1MGMxc2dkSGx3WlNCZElIeDhJRnRkTzF4dVhIUmNkRngwZEcxd0lEMGdkRzF3V3lBeUlGMGdKaVpjYmx4MFhIUmNkRngwYm1WM0lGSmxaMFY0Y0NnZ1hDSW9YbnhjWEZ4Y0xpbGNJaUFySUc1aGJXVnpjR0ZqWlhNdWFtOXBiaWdnWENKY1hGeGNMaWcvT2k0cVhGeGNYQzU4S1Z3aUlDa2dLeUJjSWloY1hGeGNMbndrS1Z3aUlDazdYRzVjYmx4MFhIUmNkQzh2SUZKbGJXOTJaU0J0WVhSamFHbHVaeUJsZG1WdWRITmNibHgwWEhSY2RHOXlhV2REYjNWdWRDQTlJR29nUFNCb1lXNWtiR1Z5Y3k1c1pXNW5kR2c3WEc1Y2RGeDBYSFIzYUdsc1pTQW9JR290TFNBcElIdGNibHgwWEhSY2RGeDBhR0Z1Wkd4bFQySnFJRDBnYUdGdVpHeGxjbk5iSUdvZ1hUdGNibHh1WEhSY2RGeDBYSFJwWmlBb0lDZ2diV0Z3Y0dWa1ZIbHdaWE1nZkh3Z2IzSnBaMVI1Y0dVZ1BUMDlJR2hoYm1Sc1pVOWlhaTV2Y21sblZIbHdaU0FwSUNZbVhHNWNkRngwWEhSY2RGeDBLQ0FoYUdGdVpHeGxjaUI4ZkNCb1lXNWtiR1Z5TG1kMWFXUWdQVDA5SUdoaGJtUnNaVTlpYWk1bmRXbGtJQ2tnSmlaY2JseDBYSFJjZEZ4MFhIUW9JQ0YwYlhBZ2ZId2dkRzF3TG5SbGMzUW9JR2hoYm1Sc1pVOWlhaTV1WVcxbGMzQmhZMlVnS1NBcElDWW1YRzVjZEZ4MFhIUmNkRngwS0NBaGMyVnNaV04wYjNJZ2ZId2djMlZzWldOMGIzSWdQVDA5SUdoaGJtUnNaVTlpYWk1elpXeGxZM1J2Y2lCOGZGeHVYSFJjZEZ4MFhIUmNkRngwYzJWc1pXTjBiM0lnUFQwOUlGd2lLaXBjSWlBbUppQm9ZVzVrYkdWUFltb3VjMlZzWldOMGIzSWdLU0FwSUh0Y2JseDBYSFJjZEZ4MFhIUm9ZVzVrYkdWeWN5NXpjR3hwWTJVb0lHb3NJREVnS1R0Y2JseHVYSFJjZEZ4MFhIUmNkR2xtSUNnZ2FHRnVaR3hsVDJKcUxuTmxiR1ZqZEc5eUlDa2dlMXh1WEhSY2RGeDBYSFJjZEZ4MGFHRnVaR3hsY25NdVpHVnNaV2RoZEdWRGIzVnVkQzB0TzF4dVhIUmNkRngwWEhSY2RIMWNibHgwWEhSY2RGeDBYSFJwWmlBb0lITndaV05wWVd3dWNtVnRiM1psSUNrZ2UxeHVYSFJjZEZ4MFhIUmNkRngwYzNCbFkybGhiQzV5WlcxdmRtVXVZMkZzYkNnZ1pXeGxiU3dnYUdGdVpHeGxUMkpxSUNrN1hHNWNkRngwWEhSY2RGeDBmVnh1WEhSY2RGeDBYSFI5WEc1Y2RGeDBYSFI5WEc1Y2JseDBYSFJjZEM4dklGSmxiVzkyWlNCblpXNWxjbWxqSUdWMlpXNTBJR2hoYm1Sc1pYSWdhV1lnZDJVZ2NtVnRiM1psWkNCemIyMWxkR2hwYm1jZ1lXNWtJRzV2SUcxdmNtVWdhR0Z1Wkd4bGNuTWdaWGhwYzNSY2JseDBYSFJjZEM4dklDaGhkbTlwWkhNZ2NHOTBaVzUwYVdGc0lHWnZjaUJsYm1Sc1pYTnpJSEpsWTNWeWMybHZiaUJrZFhKcGJtY2djbVZ0YjNaaGJDQnZaaUJ6Y0dWamFXRnNJR1YyWlc1MElHaGhibVJzWlhKektWeHVYSFJjZEZ4MGFXWWdLQ0J2Y21sblEyOTFiblFnSmlZZ0lXaGhibVJzWlhKekxteGxibWQwYUNBcElIdGNibHgwWEhSY2RGeDBhV1lnS0NBaGMzQmxZMmxoYkM1MFpXRnlaRzkzYmlCOGZGeHVYSFJjZEZ4MFhIUmNkSE53WldOcFlXd3VkR1ZoY21SdmQyNHVZMkZzYkNnZ1pXeGxiU3dnYm1GdFpYTndZV05sY3l3Z1pXeGxiVVJoZEdFdWFHRnVaR3hsSUNrZ1BUMDlJR1poYkhObElDa2dlMXh1WEc1Y2RGeDBYSFJjZEZ4MGFsRjFaWEo1TG5KbGJXOTJaVVYyWlc1MEtDQmxiR1Z0TENCMGVYQmxMQ0JsYkdWdFJHRjBZUzVvWVc1a2JHVWdLVHRjYmx4MFhIUmNkRngwZlZ4dVhHNWNkRngwWEhSY2RHUmxiR1YwWlNCbGRtVnVkSE5iSUhSNWNHVWdYVHRjYmx4MFhIUmNkSDFjYmx4MFhIUjlYRzVjYmx4MFhIUXZMeUJTWlcxdmRtVWdaR0YwWVNCaGJtUWdkR2hsSUdWNGNHRnVaRzhnYVdZZ2FYUW5jeUJ1YnlCc2IyNW5aWElnZFhObFpGeHVYSFJjZEdsbUlDZ2dhbEYxWlhKNUxtbHpSVzF3ZEhsUFltcGxZM1FvSUdWMlpXNTBjeUFwSUNrZ2UxeHVYSFJjZEZ4MFpHRjBZVkJ5YVhZdWNtVnRiM1psS0NCbGJHVnRMQ0JjSW1oaGJtUnNaU0JsZG1WdWRITmNJaUFwTzF4dVhIUmNkSDFjYmx4MGZTeGNibHh1WEhSa2FYTndZWFJqYURvZ1puVnVZM1JwYjI0b0lHNWhkR2wyWlVWMlpXNTBJQ2tnZTF4dVhHNWNkRngwZG1GeUlHa3NJR29zSUhKbGRDd2diV0YwWTJobFpDd2dhR0Z1Wkd4bFQySnFMQ0JvWVc1a2JHVnlVWFZsZFdVc1hHNWNkRngwWEhSaGNtZHpJRDBnYm1WM0lFRnljbUY1S0NCaGNtZDFiV1Z1ZEhNdWJHVnVaM1JvSUNrc1hHNWNibHgwWEhSY2RDOHZJRTFoYTJVZ1lTQjNjbWwwWVdKc1pTQnFVWFZsY25rdVJYWmxiblFnWm5KdmJTQjBhR1VnYm1GMGFYWmxJR1YyWlc1MElHOWlhbVZqZEZ4dVhIUmNkRngwWlhabGJuUWdQU0JxVVhWbGNua3VaWFpsYm5RdVptbDRLQ0J1WVhScGRtVkZkbVZ1ZENBcExGeHVYRzVjZEZ4MFhIUm9ZVzVrYkdWeWN5QTlJQ2hjYmx4MFhIUmNkRngwWkdGMFlWQnlhWFl1WjJWMEtDQjBhR2x6TENCY0ltVjJaVzUwYzF3aUlDa2dmSHdnVDJKcVpXTjBMbU55WldGMFpTZ2diblZzYkNBcFhHNWNkRngwWEhRcFd5QmxkbVZ1ZEM1MGVYQmxJRjBnZkh3Z1cxMHNYRzVjZEZ4MFhIUnpjR1ZqYVdGc0lEMGdhbEYxWlhKNUxtVjJaVzUwTG5Od1pXTnBZV3hiSUdWMlpXNTBMblI1Y0dVZ1hTQjhmQ0I3ZlR0Y2JseHVYSFJjZEM4dklGVnpaU0IwYUdVZ1ptbDRMV1ZrSUdwUmRXVnllUzVGZG1WdWRDQnlZWFJvWlhJZ2RHaGhiaUIwYUdVZ0tISmxZV1F0YjI1c2VTa2dibUYwYVhabElHVjJaVzUwWEc1Y2RGeDBZWEpuYzFzZ01DQmRJRDBnWlhabGJuUTdYRzVjYmx4MFhIUm1iM0lnS0NCcElEMGdNVHNnYVNBOElHRnlaM1Z0Wlc1MGN5NXNaVzVuZEdnN0lHa3JLeUFwSUh0Y2JseDBYSFJjZEdGeVozTmJJR2tnWFNBOUlHRnlaM1Z0Wlc1MGMxc2dhU0JkTzF4dVhIUmNkSDFjYmx4dVhIUmNkR1YyWlc1MExtUmxiR1ZuWVhSbFZHRnlaMlYwSUQwZ2RHaHBjenRjYmx4dVhIUmNkQzh2SUVOaGJHd2dkR2hsSUhCeVpVUnBjM0JoZEdOb0lHaHZiMnNnWm05eUlIUm9aU0J0WVhCd1pXUWdkSGx3WlN3Z1lXNWtJR3hsZENCcGRDQmlZV2xzSUdsbUlHUmxjMmx5WldSY2JseDBYSFJwWmlBb0lITndaV05wWVd3dWNISmxSR2x6Y0dGMFkyZ2dKaVlnYzNCbFkybGhiQzV3Y21WRWFYTndZWFJqYUM1allXeHNLQ0IwYUdsekxDQmxkbVZ1ZENBcElEMDlQU0JtWVd4elpTQXBJSHRjYmx4MFhIUmNkSEpsZEhWeWJqdGNibHgwWEhSOVhHNWNibHgwWEhRdkx5QkVaWFJsY20xcGJtVWdhR0Z1Wkd4bGNuTmNibHgwWEhSb1lXNWtiR1Z5VVhWbGRXVWdQU0JxVVhWbGNua3VaWFpsYm5RdWFHRnVaR3hsY25NdVkyRnNiQ2dnZEdocGN5d2daWFpsYm5Rc0lHaGhibVJzWlhKeklDazdYRzVjYmx4MFhIUXZMeUJTZFc0Z1pHVnNaV2RoZEdWeklHWnBjbk4wT3lCMGFHVjVJRzFoZVNCM1lXNTBJSFJ2SUhOMGIzQWdjSEp2Y0dGbllYUnBiMjRnWW1WdVpXRjBhQ0IxYzF4dVhIUmNkR2tnUFNBd08xeHVYSFJjZEhkb2FXeGxJQ2dnS0NCdFlYUmphR1ZrSUQwZ2FHRnVaR3hsY2xGMVpYVmxXeUJwS3lzZ1hTQXBJQ1ltSUNGbGRtVnVkQzVwYzFCeWIzQmhaMkYwYVc5dVUzUnZjSEJsWkNncElDa2dlMXh1WEhSY2RGeDBaWFpsYm5RdVkzVnljbVZ1ZEZSaGNtZGxkQ0E5SUcxaGRHTm9aV1F1Wld4bGJUdGNibHh1WEhSY2RGeDBhaUE5SURBN1hHNWNkRngwWEhSM2FHbHNaU0FvSUNnZ2FHRnVaR3hsVDJKcUlEMGdiV0YwWTJobFpDNW9ZVzVrYkdWeWMxc2dhaXNySUYwZ0tTQW1KbHh1WEhSY2RGeDBYSFFoWlhabGJuUXVhWE5KYlcxbFpHbGhkR1ZRY205d1lXZGhkR2x2YmxOMGIzQndaV1FvS1NBcElIdGNibHh1WEhSY2RGeDBYSFF2THlCSlppQjBhR1VnWlhabGJuUWdhWE1nYm1GdFpYTndZV05sWkN3Z2RHaGxiaUJsWVdOb0lHaGhibVJzWlhJZ2FYTWdiMjVzZVNCcGJuWnZhMlZrSUdsbUlHbDBJR2x6WEc1Y2RGeDBYSFJjZEM4dklITndaV05wWVd4c2VTQjFibWwyWlhKellXd2diM0lnYVhSeklHNWhiV1Z6Y0dGalpYTWdZWEpsSUdFZ2MzVndaWEp6WlhRZ2IyWWdkR2hsSUdWMlpXNTBKM011WEc1Y2RGeDBYSFJjZEdsbUlDZ2dJV1YyWlc1MExuSnVZVzFsYzNCaFkyVWdmSHdnYUdGdVpHeGxUMkpxTG01aGJXVnpjR0ZqWlNBOVBUMGdabUZzYzJVZ2ZIeGNibHgwWEhSY2RGeDBYSFJsZG1WdWRDNXlibUZ0WlhOd1lXTmxMblJsYzNRb0lHaGhibVJzWlU5aWFpNXVZVzFsYzNCaFkyVWdLU0FwSUh0Y2JseHVYSFJjZEZ4MFhIUmNkR1YyWlc1MExtaGhibVJzWlU5aWFpQTlJR2hoYm1Sc1pVOWlhanRjYmx4MFhIUmNkRngwWEhSbGRtVnVkQzVrWVhSaElEMGdhR0Z1Wkd4bFQySnFMbVJoZEdFN1hHNWNibHgwWEhSY2RGeDBYSFJ5WlhRZ1BTQW9JQ2dnYWxGMVpYSjVMbVYyWlc1MExuTndaV05wWVd4YklHaGhibVJzWlU5aWFpNXZjbWxuVkhsd1pTQmRJSHg4SUh0OUlDa3VhR0Z1Wkd4bElIeDhYRzVjZEZ4MFhIUmNkRngwWEhSb1lXNWtiR1ZQWW1vdWFHRnVaR3hsY2lBcExtRndjR3g1S0NCdFlYUmphR1ZrTG1Wc1pXMHNJR0Z5WjNNZ0tUdGNibHh1WEhSY2RGeDBYSFJjZEdsbUlDZ2djbVYwSUNFOVBTQjFibVJsWm1sdVpXUWdLU0I3WEc1Y2RGeDBYSFJjZEZ4MFhIUnBaaUFvSUNnZ1pYWmxiblF1Y21WemRXeDBJRDBnY21WMElDa2dQVDA5SUdaaGJITmxJQ2tnZTF4dVhIUmNkRngwWEhSY2RGeDBYSFJsZG1WdWRDNXdjbVYyWlc1MFJHVm1ZWFZzZENncE8xeHVYSFJjZEZ4MFhIUmNkRngwWEhSbGRtVnVkQzV6ZEc5d1VISnZjR0ZuWVhScGIyNG9LVHRjYmx4MFhIUmNkRngwWEhSY2RIMWNibHgwWEhSY2RGeDBYSFI5WEc1Y2RGeDBYSFJjZEgxY2JseDBYSFJjZEgxY2JseDBYSFI5WEc1Y2JseDBYSFF2THlCRFlXeHNJSFJvWlNCd2IzTjBSR2x6Y0dGMFkyZ2dhRzl2YXlCbWIzSWdkR2hsSUcxaGNIQmxaQ0IwZVhCbFhHNWNkRngwYVdZZ0tDQnpjR1ZqYVdGc0xuQnZjM1JFYVhOd1lYUmphQ0FwSUh0Y2JseDBYSFJjZEhOd1pXTnBZV3d1Y0c5emRFUnBjM0JoZEdOb0xtTmhiR3dvSUhSb2FYTXNJR1YyWlc1MElDazdYRzVjZEZ4MGZWeHVYRzVjZEZ4MGNtVjBkWEp1SUdWMlpXNTBMbkpsYzNWc2REdGNibHgwZlN4Y2JseHVYSFJvWVc1a2JHVnljem9nWm5WdVkzUnBiMjRvSUdWMlpXNTBMQ0JvWVc1a2JHVnljeUFwSUh0Y2JseDBYSFIyWVhJZ2FTd2dhR0Z1Wkd4bFQySnFMQ0J6Wld3c0lHMWhkR05vWldSSVlXNWtiR1Z5Y3l3Z2JXRjBZMmhsWkZObGJHVmpkRzl5Y3l4Y2JseDBYSFJjZEdoaGJtUnNaWEpSZFdWMVpTQTlJRnRkTEZ4dVhIUmNkRngwWkdWc1pXZGhkR1ZEYjNWdWRDQTlJR2hoYm1Sc1pYSnpMbVJsYkdWbllYUmxRMjkxYm5Rc1hHNWNkRngwWEhSamRYSWdQU0JsZG1WdWRDNTBZWEpuWlhRN1hHNWNibHgwWEhRdkx5QkdhVzVrSUdSbGJHVm5ZWFJsSUdoaGJtUnNaWEp6WEc1Y2RGeDBhV1lnS0NCa1pXeGxaMkYwWlVOdmRXNTBJQ1ltWEc1Y2JseDBYSFJjZEM4dklGTjFjSEJ2Y25RNklFbEZJRHc5T1Z4dVhIUmNkRngwTHk4Z1FteGhZMnN0YUc5c1pTQlRWa2NnUEhWelpUNGdhVzV6ZEdGdVkyVWdkSEpsWlhNZ0tIUnlZV010TVRNeE9EQXBYRzVjZEZ4MFhIUmpkWEl1Ym05a1pWUjVjR1VnSmlaY2JseHVYSFJjZEZ4MEx5OGdVM1Z3Y0c5eWREb2dSbWx5WldadmVDQThQVFF5WEc1Y2RGeDBYSFF2THlCVGRYQndjbVZ6Y3lCemNHVmpMWFpwYjJ4aGRHbHVaeUJqYkdsamEzTWdhVzVrYVdOaGRHbHVaeUJoSUc1dmJpMXdjbWx0WVhKNUlIQnZhVzUwWlhJZ1luVjBkRzl1SUNoMGNtRmpMVE00TmpFcFhHNWNkRngwWEhRdkx5Qm9kSFJ3Y3pvdkwzZDNkeTUzTXk1dmNtY3ZWRkl2UkU5TkxVeGxkbVZzTFRNdFJYWmxiblJ6THlObGRtVnVkQzEwZVhCbExXTnNhV05yWEc1Y2RGeDBYSFF2THlCVGRYQndiM0owT2lCSlJTQXhNU0J2Ym14NVhHNWNkRngwWEhRdkx5QXVMaTVpZFhRZ2JtOTBJR0Z5Y205M0lHdGxlU0JjSW1Oc2FXTnJjMXdpSUc5bUlISmhaR2x2SUdsdWNIVjBjeXdnZDJocFkyZ2dZMkZ1SUdoaGRtVWdZR0oxZEhSdmJtQWdMVEVnS0dkb0xUSXpORE1wWEc1Y2RGeDBYSFFoS0NCbGRtVnVkQzUwZVhCbElEMDlQU0JjSW1Oc2FXTnJYQ0lnSmlZZ1pYWmxiblF1WW5WMGRHOXVJRDQ5SURFZ0tTQXBJSHRjYmx4dVhIUmNkRngwWm05eUlDZ2dPeUJqZFhJZ0lUMDlJSFJvYVhNN0lHTjFjaUE5SUdOMWNpNXdZWEpsYm5ST2IyUmxJSHg4SUhSb2FYTWdLU0I3WEc1Y2JseDBYSFJjZEZ4MEx5OGdSRzl1SjNRZ1kyaGxZMnNnYm05dUxXVnNaVzFsYm5SeklDaDBjbUZqTFRFek1qQTRLVnh1WEhSY2RGeDBYSFF2THlCRWIyNG5kQ0J3Y205alpYTnpJR05zYVdOcmN5QnZiaUJrYVhOaFlteGxaQ0JsYkdWdFpXNTBjeUFvZEhKaFl5MDJPVEV4TENCMGNtRmpMVGd4TmpVc0lIUnlZV010TVRFek9ESXNJSFJ5WVdNdE1URTNOalFwWEc1Y2RGeDBYSFJjZEdsbUlDZ2dZM1Z5TG01dlpHVlVlWEJsSUQwOVBTQXhJQ1ltSUNFb0lHVjJaVzUwTG5SNWNHVWdQVDA5SUZ3aVkyeHBZMnRjSWlBbUppQmpkWEl1WkdsellXSnNaV1FnUFQwOUlIUnlkV1VnS1NBcElIdGNibHgwWEhSY2RGeDBYSFJ0WVhSamFHVmtTR0Z1Wkd4bGNuTWdQU0JiWFR0Y2JseDBYSFJjZEZ4MFhIUnRZWFJqYUdWa1UyVnNaV04wYjNKeklEMGdlMzA3WEc1Y2RGeDBYSFJjZEZ4MFptOXlJQ2dnYVNBOUlEQTdJR2tnUENCa1pXeGxaMkYwWlVOdmRXNTBPeUJwS3lzZ0tTQjdYRzVjZEZ4MFhIUmNkRngwWEhSb1lXNWtiR1ZQWW1vZ1BTQm9ZVzVrYkdWeWMxc2dhU0JkTzF4dVhHNWNkRngwWEhSY2RGeDBYSFF2THlCRWIyNG5kQ0JqYjI1bWJHbGpkQ0IzYVhSb0lFOWlhbVZqZEM1d2NtOTBiM1I1Y0dVZ2NISnZjR1Z5ZEdsbGN5QW9kSEpoWXkweE16SXdNeWxjYmx4MFhIUmNkRngwWEhSY2RITmxiQ0E5SUdoaGJtUnNaVTlpYWk1elpXeGxZM1J2Y2lBcklGd2lJRndpTzF4dVhHNWNkRngwWEhSY2RGeDBYSFJwWmlBb0lHMWhkR05vWldSVFpXeGxZM1J2Y25OYklITmxiQ0JkSUQwOVBTQjFibVJsWm1sdVpXUWdLU0I3WEc1Y2RGeDBYSFJjZEZ4MFhIUmNkRzFoZEdOb1pXUlRaV3hsWTNSdmNuTmJJSE5sYkNCZElEMGdhR0Z1Wkd4bFQySnFMbTVsWldSelEyOXVkR1Y0ZENBL1hHNWNkRngwWEhSY2RGeDBYSFJjZEZ4MGFsRjFaWEo1S0NCelpXd3NJSFJvYVhNZ0tTNXBibVJsZUNnZ1kzVnlJQ2tnUGlBdE1TQTZYRzVjZEZ4MFhIUmNkRngwWEhSY2RGeDBhbEYxWlhKNUxtWnBibVFvSUhObGJDd2dkR2hwY3l3Z2JuVnNiQ3dnV3lCamRYSWdYU0FwTG14bGJtZDBhRHRjYmx4MFhIUmNkRngwWEhSY2RIMWNibHgwWEhSY2RGeDBYSFJjZEdsbUlDZ2diV0YwWTJobFpGTmxiR1ZqZEc5eWMxc2djMlZzSUYwZ0tTQjdYRzVjZEZ4MFhIUmNkRngwWEhSY2RHMWhkR05vWldSSVlXNWtiR1Z5Y3k1d2RYTm9LQ0JvWVc1a2JHVlBZbW9nS1R0Y2JseDBYSFJjZEZ4MFhIUmNkSDFjYmx4MFhIUmNkRngwWEhSOVhHNWNkRngwWEhSY2RGeDBhV1lnS0NCdFlYUmphR1ZrU0dGdVpHeGxjbk11YkdWdVozUm9JQ2tnZTF4dVhIUmNkRngwWEhSY2RGeDBhR0Z1Wkd4bGNsRjFaWFZsTG5CMWMyZ29JSHNnWld4bGJUb2dZM1Z5TENCb1lXNWtiR1Z5Y3pvZ2JXRjBZMmhsWkVoaGJtUnNaWEp6SUgwZ0tUdGNibHgwWEhSY2RGeDBYSFI5WEc1Y2RGeDBYSFJjZEgxY2JseDBYSFJjZEgxY2JseDBYSFI5WEc1Y2JseDBYSFF2THlCQlpHUWdkR2hsSUhKbGJXRnBibWx1WnlBb1pHbHlaV04wYkhrdFltOTFibVFwSUdoaGJtUnNaWEp6WEc1Y2RGeDBZM1Z5SUQwZ2RHaHBjenRjYmx4MFhIUnBaaUFvSUdSbGJHVm5ZWFJsUTI5MWJuUWdQQ0JvWVc1a2JHVnljeTVzWlc1bmRHZ2dLU0I3WEc1Y2RGeDBYSFJvWVc1a2JHVnlVWFZsZFdVdWNIVnphQ2dnZXlCbGJHVnRPaUJqZFhJc0lHaGhibVJzWlhKek9pQm9ZVzVrYkdWeWN5NXpiR2xqWlNnZ1pHVnNaV2RoZEdWRGIzVnVkQ0FwSUgwZ0tUdGNibHgwWEhSOVhHNWNibHgwWEhSeVpYUjFjbTRnYUdGdVpHeGxjbEYxWlhWbE8xeHVYSFI5TEZ4dVhHNWNkR0ZrWkZCeWIzQTZJR1oxYm1OMGFXOXVLQ0J1WVcxbExDQm9iMjlySUNrZ2UxeHVYSFJjZEU5aWFtVmpkQzVrWldacGJtVlFjbTl3WlhKMGVTZ2dhbEYxWlhKNUxrVjJaVzUwTG5CeWIzUnZkSGx3WlN3Z2JtRnRaU3dnZTF4dVhIUmNkRngwWlc1MWJXVnlZV0pzWlRvZ2RISjFaU3hjYmx4MFhIUmNkR052Ym1acFozVnlZV0pzWlRvZ2RISjFaU3hjYmx4dVhIUmNkRngwWjJWME9pQnBjMFoxYm1OMGFXOXVLQ0JvYjI5cklDa2dQMXh1WEhSY2RGeDBYSFJtZFc1amRHbHZiaWdwSUh0Y2JseDBYSFJjZEZ4MFhIUnBaaUFvSUhSb2FYTXViM0pwWjJsdVlXeEZkbVZ1ZENBcElIdGNibHgwWEhSY2RGeDBYSFJjZEhKbGRIVnliaUJvYjI5cktDQjBhR2x6TG05eWFXZHBibUZzUlhabGJuUWdLVHRjYmx4MFhIUmNkRngwWEhSOVhHNWNkRngwWEhSY2RIMGdPbHh1WEhSY2RGeDBYSFJtZFc1amRHbHZiaWdwSUh0Y2JseDBYSFJjZEZ4MFhIUnBaaUFvSUhSb2FYTXViM0pwWjJsdVlXeEZkbVZ1ZENBcElIdGNibHgwWEhSY2RGeDBYSFJjZEhKbGRIVnliaUIwYUdsekxtOXlhV2RwYm1Gc1JYWmxiblJiSUc1aGJXVWdYVHRjYmx4MFhIUmNkRngwWEhSOVhHNWNkRngwWEhSY2RIMHNYRzVjYmx4MFhIUmNkSE5sZERvZ1puVnVZM1JwYjI0b0lIWmhiSFZsSUNrZ2UxeHVYSFJjZEZ4MFhIUlBZbXBsWTNRdVpHVm1hVzVsVUhKdmNHVnlkSGtvSUhSb2FYTXNJRzVoYldVc0lIdGNibHgwWEhSY2RGeDBYSFJsYm5WdFpYSmhZbXhsT2lCMGNuVmxMRnh1WEhSY2RGeDBYSFJjZEdOdmJtWnBaM1Z5WVdKc1pUb2dkSEoxWlN4Y2JseDBYSFJjZEZ4MFhIUjNjbWwwWVdKc1pUb2dkSEoxWlN4Y2JseDBYSFJjZEZ4MFhIUjJZV3gxWlRvZ2RtRnNkV1ZjYmx4MFhIUmNkRngwZlNBcE8xeHVYSFJjZEZ4MGZWeHVYSFJjZEgwZ0tUdGNibHgwZlN4Y2JseHVYSFJtYVhnNklHWjFibU4wYVc5dUtDQnZjbWxuYVc1aGJFVjJaVzUwSUNrZ2UxeHVYSFJjZEhKbGRIVnliaUJ2Y21sbmFXNWhiRVYyWlc1MFd5QnFVWFZsY25rdVpYaHdZVzVrYnlCZElEOWNibHgwWEhSY2RHOXlhV2RwYm1Gc1JYWmxiblFnT2x4dVhIUmNkRngwYm1WM0lHcFJkV1Z5ZVM1RmRtVnVkQ2dnYjNKcFoybHVZV3hGZG1WdWRDQXBPMXh1WEhSOUxGeHVYRzVjZEhOd1pXTnBZV3c2SUh0Y2JseDBYSFJzYjJGa09pQjdYRzVjYmx4MFhIUmNkQzh2SUZCeVpYWmxiblFnZEhKcFoyZGxjbVZrSUdsdFlXZGxMbXh2WVdRZ1pYWmxiblJ6SUdaeWIyMGdZblZpWW14cGJtY2dkRzhnZDJsdVpHOTNMbXh2WVdSY2JseDBYSFJjZEc1dlFuVmlZbXhsT2lCMGNuVmxYRzVjZEZ4MGZTeGNibHgwWEhSamJHbGphem9nZTF4dVhHNWNkRngwWEhRdkx5QlZkR2xzYVhwbElHNWhkR2wyWlNCbGRtVnVkQ0IwYnlCbGJuTjFjbVVnWTI5eWNtVmpkQ0J6ZEdGMFpTQm1iM0lnWTJobFkydGhZbXhsSUdsdWNIVjBjMXh1WEhSY2RGeDBjMlYwZFhBNklHWjFibU4wYVc5dUtDQmtZWFJoSUNrZ2UxeHVYRzVjZEZ4MFhIUmNkQzh2SUVadmNpQnRkWFIxWVd3Z1kyOXRjSEpsYzNOcFltbHNhWFI1SUhkcGRHZ2dYMlJsWm1GMWJIUXNJSEpsY0d4aFkyVWdZSFJvYVhOZ0lHRmpZMlZ6Y3lCM2FYUm9JR0VnYkc5allXd2dkbUZ5TGx4dVhIUmNkRngwWEhRdkx5QmdmSHdnWkdGMFlXQWdhWE1nWkdWaFpDQmpiMlJsSUcxbFlXNTBJRzl1YkhrZ2RHOGdjSEpsYzJWeWRtVWdkR2hsSUhaaGNtbGhZbXhsSUhSb2NtOTFaMmdnYldsdWFXWnBZMkYwYVc5dUxseHVYSFJjZEZ4MFhIUjJZWElnWld3Z1BTQjBhR2x6SUh4OElHUmhkR0U3WEc1Y2JseDBYSFJjZEZ4MEx5OGdRMnhoYVcwZ2RHaGxJR1pwY25OMElHaGhibVJzWlhKY2JseDBYSFJjZEZ4MGFXWWdLQ0J5WTJobFkydGhZbXhsVkhsd1pTNTBaWE4wS0NCbGJDNTBlWEJsSUNrZ0ppWmNibHgwWEhSY2RGeDBYSFJsYkM1amJHbGpheUFtSmlCdWIyUmxUbUZ0WlNnZ1pXd3NJRndpYVc1d2RYUmNJaUFwSUNrZ2UxeHVYRzVjZEZ4MFhIUmNkRngwTHk4Z1pHRjBZVkJ5YVhZdWMyVjBLQ0JsYkN3Z1hDSmpiR2xqYTF3aUxDQXVMaTRnS1Z4dVhIUmNkRngwWEhSY2RHeGxkbVZ5WVdkbFRtRjBhWFpsS0NCbGJDd2dYQ0pqYkdsamExd2lMQ0J5WlhSMWNtNVVjblZsSUNrN1hHNWNkRngwWEhSY2RIMWNibHh1WEhSY2RGeDBYSFF2THlCU1pYUjFjbTRnWm1Gc2MyVWdkRzhnWVd4c2IzY2dibTl5YldGc0lIQnliMk5sYzNOcGJtY2dhVzRnZEdobElHTmhiR3hsY2x4dVhIUmNkRngwWEhSeVpYUjFjbTRnWm1Gc2MyVTdYRzVjZEZ4MFhIUjlMRnh1WEhSY2RGeDBkSEpwWjJkbGNqb2dablZ1WTNScGIyNG9JR1JoZEdFZ0tTQjdYRzVjYmx4MFhIUmNkRngwTHk4Z1JtOXlJRzExZEhWaGJDQmpiMjF3Y21WemMybGlhV3hwZEhrZ2QybDBhQ0JmWkdWbVlYVnNkQ3dnY21Wd2JHRmpaU0JnZEdocGMyQWdZV05qWlhOeklIZHBkR2dnWVNCc2IyTmhiQ0IyWVhJdVhHNWNkRngwWEhSY2RDOHZJR0I4ZkNCa1lYUmhZQ0JwY3lCa1pXRmtJR052WkdVZ2JXVmhiblFnYjI1c2VTQjBieUJ3Y21WelpYSjJaU0IwYUdVZ2RtRnlhV0ZpYkdVZ2RHaHliM1ZuYUNCdGFXNXBabWxqWVhScGIyNHVYRzVjZEZ4MFhIUmNkSFpoY2lCbGJDQTlJSFJvYVhNZ2ZId2daR0YwWVR0Y2JseHVYSFJjZEZ4MFhIUXZMeUJHYjNKalpTQnpaWFIxY0NCaVpXWnZjbVVnZEhKcFoyZGxjbWx1WnlCaElHTnNhV05yWEc1Y2RGeDBYSFJjZEdsbUlDZ2djbU5vWldOcllXSnNaVlI1Y0dVdWRHVnpkQ2dnWld3dWRIbHdaU0FwSUNZbVhHNWNkRngwWEhSY2RGeDBaV3d1WTJ4cFkyc2dKaVlnYm05a1pVNWhiV1VvSUdWc0xDQmNJbWx1Y0hWMFhDSWdLU0FwSUh0Y2JseHVYSFJjZEZ4MFhIUmNkR3hsZG1WeVlXZGxUbUYwYVhabEtDQmxiQ3dnWENKamJHbGphMXdpSUNrN1hHNWNkRngwWEhSY2RIMWNibHh1WEhSY2RGeDBYSFF2THlCU1pYUjFjbTRnYm05dUxXWmhiSE5sSUhSdklHRnNiRzkzSUc1dmNtMWhiQ0JsZG1WdWRDMXdZWFJvSUhCeWIzQmhaMkYwYVc5dVhHNWNkRngwWEhSY2RISmxkSFZ5YmlCMGNuVmxPMXh1WEhSY2RGeDBmU3hjYmx4dVhIUmNkRngwTHk4Z1JtOXlJR055YjNOekxXSnliM2R6WlhJZ1kyOXVjMmx6ZEdWdVkza3NJSE4xY0hCeVpYTnpJRzVoZEdsMlpTQXVZMnhwWTJzb0tTQnZiaUJzYVc1cmMxeHVYSFJjZEZ4MEx5OGdRV3h6YnlCd2NtVjJaVzUwSUdsMElHbG1JSGRsSjNKbElHTjFjbkpsYm5Sc2VTQnBibk5wWkdVZ1lTQnNaWFpsY21GblpXUWdibUYwYVhabExXVjJaVzUwSUhOMFlXTnJYRzVjZEZ4MFhIUmZaR1ZtWVhWc2REb2dablZ1WTNScGIyNG9JR1YyWlc1MElDa2dlMXh1WEhSY2RGeDBYSFIyWVhJZ2RHRnlaMlYwSUQwZ1pYWmxiblF1ZEdGeVoyVjBPMXh1WEhSY2RGeDBYSFJ5WlhSMWNtNGdjbU5vWldOcllXSnNaVlI1Y0dVdWRHVnpkQ2dnZEdGeVoyVjBMblI1Y0dVZ0tTQW1KbHh1WEhSY2RGeDBYSFJjZEhSaGNtZGxkQzVqYkdsamF5QW1KaUJ1YjJSbFRtRnRaU2dnZEdGeVoyVjBMQ0JjSW1sdWNIVjBYQ0lnS1NBbUpseHVYSFJjZEZ4MFhIUmNkR1JoZEdGUWNtbDJMbWRsZENnZ2RHRnlaMlYwTENCY0ltTnNhV05yWENJZ0tTQjhmRnh1WEhSY2RGeDBYSFJjZEc1dlpHVk9ZVzFsS0NCMFlYSm5aWFFzSUZ3aVlWd2lJQ2s3WEc1Y2RGeDBYSFI5WEc1Y2RGeDBmU3hjYmx4dVhIUmNkR0psWm05eVpYVnViRzloWkRvZ2UxeHVYSFJjZEZ4MGNHOXpkRVJwYzNCaGRHTm9PaUJtZFc1amRHbHZiaWdnWlhabGJuUWdLU0I3WEc1Y2JseDBYSFJjZEZ4MEx5OGdVM1Z3Y0c5eWREb2dSbWx5WldadmVDQXlNQ3RjYmx4MFhIUmNkRngwTHk4Z1JtbHlaV1p2ZUNCa2IyVnpiaWQwSUdGc1pYSjBJR2xtSUhSb1pTQnlaWFIxY201V1lXeDFaU0JtYVdWc1pDQnBjeUJ1YjNRZ2MyVjBMbHh1WEhSY2RGeDBYSFJwWmlBb0lHVjJaVzUwTG5KbGMzVnNkQ0FoUFQwZ2RXNWtaV1pwYm1Wa0lDWW1JR1YyWlc1MExtOXlhV2RwYm1Gc1JYWmxiblFnS1NCN1hHNWNkRngwWEhSY2RGeDBaWFpsYm5RdWIzSnBaMmx1WVd4RmRtVnVkQzV5WlhSMWNtNVdZV3gxWlNBOUlHVjJaVzUwTG5KbGMzVnNkRHRjYmx4MFhIUmNkRngwZlZ4dVhIUmNkRngwZlZ4dVhIUmNkSDFjYmx4MGZWeHVmVHRjYmx4dUx5OGdSVzV6ZFhKbElIUm9aU0J3Y21WelpXNWpaU0J2WmlCaGJpQmxkbVZ1ZENCc2FYTjBaVzVsY2lCMGFHRjBJR2hoYm1Sc1pYTWdiV0Z1ZFdGc2JIa3RkSEpwWjJkbGNtVmtYRzR2THlCemVXNTBhR1YwYVdNZ1pYWmxiblJ6SUdKNUlHbHVkR1Z5Y25Wd2RHbHVaeUJ3Y205bmNtVnpjeUIxYm5ScGJDQnlaV2x1ZG05clpXUWdhVzRnY21WemNHOXVjMlVnZEc5Y2JpOHZJQ3B1WVhScGRtVXFJR1YyWlc1MGN5QjBhR0YwSUdsMElHWnBjbVZ6SUdScGNtVmpkR3g1TENCbGJuTjFjbWx1WnlCMGFHRjBJSE4wWVhSbElHTm9ZVzVuWlhNZ2FHRjJaVnh1THk4Z1lXeHlaV0ZrZVNCdlkyTjFjbkpsWkNCaVpXWnZjbVVnYjNSb1pYSWdiR2x6ZEdWdVpYSnpJR0Z5WlNCcGJuWnZhMlZrTGx4dVpuVnVZM1JwYjI0Z2JHVjJaWEpoWjJWT1lYUnBkbVVvSUdWc0xDQjBlWEJsTENCbGVIQmxZM1JUZVc1aklDa2dlMXh1WEc1Y2RDOHZJRTFwYzNOcGJtY2daWGh3WldOMFUzbHVZeUJwYm1ScFkyRjBaWE1nWVNCMGNtbG5aMlZ5SUdOaGJHd3NJSGRvYVdOb0lHMTFjM1FnWm05eVkyVWdjMlYwZFhBZ2RHaHliM1ZuYUNCcVVYVmxjbmt1WlhabGJuUXVZV1JrWEc1Y2RHbG1JQ2dnSVdWNGNHVmpkRk41Ym1NZ0tTQjdYRzVjZEZ4MGFXWWdLQ0JrWVhSaFVISnBkaTVuWlhRb0lHVnNMQ0IwZVhCbElDa2dQVDA5SUhWdVpHVm1hVzVsWkNBcElIdGNibHgwWEhSY2RHcFJkV1Z5ZVM1bGRtVnVkQzVoWkdRb0lHVnNMQ0IwZVhCbExDQnlaWFIxY201VWNuVmxJQ2s3WEc1Y2RGeDBmVnh1WEhSY2RISmxkSFZ5Ymp0Y2JseDBmVnh1WEc1Y2RDOHZJRkpsWjJsemRHVnlJSFJvWlNCamIyNTBjbTlzYkdWeUlHRnpJR0VnYzNCbFkybGhiQ0IxYm1sMlpYSnpZV3dnYUdGdVpHeGxjaUJtYjNJZ1lXeHNJR1YyWlc1MElHNWhiV1Z6Y0dGalpYTmNibHgwWkdGMFlWQnlhWFl1YzJWMEtDQmxiQ3dnZEhsd1pTd2dabUZzYzJVZ0tUdGNibHgwYWxGMVpYSjVMbVYyWlc1MExtRmtaQ2dnWld3c0lIUjVjR1VzSUh0Y2JseDBYSFJ1WVcxbGMzQmhZMlU2SUdaaGJITmxMRnh1WEhSY2RHaGhibVJzWlhJNklHWjFibU4wYVc5dUtDQmxkbVZ1ZENBcElIdGNibHgwWEhSY2RIWmhjaUJ1YjNSQmMzbHVZeXdnY21WemRXeDBMRnh1WEhSY2RGeDBYSFJ6WVhabFpDQTlJR1JoZEdGUWNtbDJMbWRsZENnZ2RHaHBjeXdnZEhsd1pTQXBPMXh1WEc1Y2RGeDBYSFJwWmlBb0lDZ2daWFpsYm5RdWFYTlVjbWxuWjJWeUlDWWdNU0FwSUNZbUlIUm9hWE5iSUhSNWNHVWdYU0FwSUh0Y2JseHVYSFJjZEZ4MFhIUXZMeUJKYm5SbGNuSjFjSFFnY0hKdlkyVnpjMmx1WnlCdlppQjBhR1VnYjNWMFpYSWdjM2x1ZEdobGRHbGpJQzUwY21sbloyVnlLQ2xsWkNCbGRtVnVkRnh1WEhSY2RGeDBYSFF2THlCVFlYWmxaQ0JrWVhSaElITm9iM1ZzWkNCaVpTQm1ZV3h6WlNCcGJpQnpkV05vSUdOaGMyVnpMQ0JpZFhRZ2JXbG5hSFFnWW1VZ1lTQnNaV1owYjNabGNpQmpZWEIwZFhKbElHOWlhbVZqZEZ4dVhIUmNkRngwWEhRdkx5Qm1jbTl0SUdGdUlHRnplVzVqSUc1aGRHbDJaU0JvWVc1a2JHVnlJQ2huYUMwME16VXdLVnh1WEhSY2RGeDBYSFJwWmlBb0lDRnpZWFpsWkM1c1pXNW5kR2dnS1NCN1hHNWNibHgwWEhSY2RGeDBYSFF2THlCVGRHOXlaU0JoY21kMWJXVnVkSE1nWm05eUlIVnpaU0IzYUdWdUlHaGhibVJzYVc1bklIUm9aU0JwYm01bGNpQnVZWFJwZG1VZ1pYWmxiblJjYmx4MFhIUmNkRngwWEhRdkx5QlVhR1Z5WlNCM2FXeHNJR0ZzZDJGNWN5QmlaU0JoZENCc1pXRnpkQ0J2Ym1VZ1lYSm5kVzFsYm5RZ0tHRnVJR1YyWlc1MElHOWlhbVZqZENrc0lITnZJSFJvYVhNZ1lYSnlZWGxjYmx4MFhIUmNkRngwWEhRdkx5QjNhV3hzSUc1dmRDQmlaU0JqYjI1bWRYTmxaQ0IzYVhSb0lHRWdiR1ZtZEc5MlpYSWdZMkZ3ZEhWeVpTQnZZbXBsWTNRdVhHNWNkRngwWEhSY2RGeDBjMkYyWldRZ1BTQnpiR2xqWlM1allXeHNLQ0JoY21kMWJXVnVkSE1nS1R0Y2JseDBYSFJjZEZ4MFhIUmtZWFJoVUhKcGRpNXpaWFFvSUhSb2FYTXNJSFI1Y0dVc0lITmhkbVZrSUNrN1hHNWNibHgwWEhSY2RGeDBYSFF2THlCVWNtbG5aMlZ5SUhSb1pTQnVZWFJwZG1VZ1pYWmxiblFnWVc1a0lHTmhjSFIxY21VZ2FYUnpJSEpsYzNWc2RGeHVYSFJjZEZ4MFhIUmNkQzh2SUZOMWNIQnZjblE2SUVsRklEdzlPU0F0SURFeEsxeHVYSFJjZEZ4MFhIUmNkQzh2SUdadlkzVnpLQ2tnWVc1a0lHSnNkWElvS1NCaGNtVWdZWE41Ym1Ob2NtOXViM1Z6WEc1Y2RGeDBYSFJjZEZ4MGJtOTBRWE41Ym1NZ1BTQmxlSEJsWTNSVGVXNWpLQ0IwYUdsekxDQjBlWEJsSUNrN1hHNWNkRngwWEhSY2RGeDBkR2hwYzFzZ2RIbHdaU0JkS0NrN1hHNWNkRngwWEhSY2RGeDBjbVZ6ZFd4MElEMGdaR0YwWVZCeWFYWXVaMlYwS0NCMGFHbHpMQ0IwZVhCbElDazdYRzVjZEZ4MFhIUmNkRngwYVdZZ0tDQnpZWFpsWkNBaFBUMGdjbVZ6ZFd4MElIeDhJRzV2ZEVGemVXNWpJQ2tnZTF4dVhIUmNkRngwWEhSY2RGeDBaR0YwWVZCeWFYWXVjMlYwS0NCMGFHbHpMQ0IwZVhCbExDQm1ZV3h6WlNBcE8xeHVYSFJjZEZ4MFhIUmNkSDBnWld4elpTQjdYRzVjZEZ4MFhIUmNkRngwWEhSeVpYTjFiSFFnUFNCN2ZUdGNibHgwWEhSY2RGeDBYSFI5WEc1Y2RGeDBYSFJjZEZ4MGFXWWdLQ0J6WVhabFpDQWhQVDBnY21WemRXeDBJQ2tnZTF4dVhHNWNkRngwWEhSY2RGeDBYSFF2THlCRFlXNWpaV3dnZEdobElHOTFkR1Z5SUhONWJuUm9aWFJwWXlCbGRtVnVkRnh1WEhSY2RGeDBYSFJjZEZ4MFpYWmxiblF1YzNSdmNFbHRiV1ZrYVdGMFpWQnliM0JoWjJGMGFXOXVLQ2s3WEc1Y2RGeDBYSFJjZEZ4MFhIUmxkbVZ1ZEM1d2NtVjJaVzUwUkdWbVlYVnNkQ2dwTzF4dVhHNWNkRngwWEhSY2RGeDBYSFF2THlCVGRYQndiM0owT2lCRGFISnZiV1VnT0RZclhHNWNkRngwWEhSY2RGeDBYSFF2THlCSmJpQkRhSEp2YldVc0lHbG1JR0Z1SUdWc1pXMWxiblFnYUdGMmFXNW5JR0VnWm05amRYTnZkWFFnYUdGdVpHeGxjaUJwY3lCaWJIVnljbVZrSUdKNVhHNWNkRngwWEhSY2RGeDBYSFF2THlCamJHbGphMmx1WnlCdmRYUnphV1JsSUc5bUlHbDBMQ0JwZENCcGJuWnZhMlZ6SUhSb1pTQm9ZVzVrYkdWeUlITjVibU5vY205dWIzVnpiSGt1SUVsbVhHNWNkRngwWEhSY2RGeDBYSFF2THlCMGFHRjBJR2hoYm1Sc1pYSWdZMkZzYkhNZ1lDNXlaVzF2ZG1Vb0tXQWdiMjRnZEdobElHVnNaVzFsYm5Rc0lIUm9aU0JrWVhSaElHbHpJR05zWldGeVpXUXNYRzVjZEZ4MFhIUmNkRngwWEhRdkx5QnNaV0YyYVc1bklHQnlaWE4xYkhSZ0lIVnVaR1ZtYVc1bFpDNGdWMlVnYm1WbFpDQjBieUJuZFdGeVpDQmhaMkZwYm5OMElIUm9hWE11WEc1Y2RGeDBYSFJjZEZ4MFhIUnlaWFIxY200Z2NtVnpkV3gwSUNZbUlISmxjM1ZzZEM1MllXeDFaVHRjYmx4MFhIUmNkRngwWEhSOVhHNWNibHgwWEhSY2RGeDBMeThnU1dZZ2RHaHBjeUJwY3lCaGJpQnBibTVsY2lCemVXNTBhR1YwYVdNZ1pYWmxiblFnWm05eUlHRnVJR1YyWlc1MElIZHBkR2dnWVNCaWRXSmliR2x1WnlCemRYSnliMmRoZEdWY2JseDBYSFJjZEZ4MEx5OGdLR1p2WTNWeklHOXlJR0pzZFhJcExDQmhjM04xYldVZ2RHaGhkQ0IwYUdVZ2MzVnljbTluWVhSbElHRnNjbVZoWkhrZ2NISnZjR0ZuWVhSbFpDQm1jbTl0SUhSeWFXZG5aWEpwYm1jZ2RHaGxYRzVjZEZ4MFhIUmNkQzh2SUc1aGRHbDJaU0JsZG1WdWRDQmhibVFnY0hKbGRtVnVkQ0IwYUdGMElHWnliMjBnYUdGd2NHVnVhVzVuSUdGbllXbHVJR2hsY21VdVhHNWNkRngwWEhSY2RDOHZJRlJvYVhNZ2RHVmphRzVwWTJGc2JIa2daMlYwY3lCMGFHVWdiM0prWlhKcGJtY2dkM0p2Ym1jZ2R5NXlMblF1SUhSdklHQXVkSEpwWjJkbGNpZ3BZQ0FvYVc0Z2QyaHBZMmdnZEdobFhHNWNkRngwWEhSY2RDOHZJR0oxWW1Kc2FXNW5JSE4xY25KdloyRjBaU0J3Y205d1lXZGhkR1Z6SUNwaFpuUmxjaW9nZEdobElHNXZiaTFpZFdKaWJHbHVaeUJpWVhObEtTd2dZblYwSUhSb1lYUWdjMlZsYlhOY2JseDBYSFJjZEZ4MEx5OGdiR1Z6Y3lCaVlXUWdkR2hoYmlCa2RYQnNhV05oZEdsdmJpNWNibHgwWEhSY2RGeDBmU0JsYkhObElHbG1JQ2dnS0NCcVVYVmxjbmt1WlhabGJuUXVjM0JsWTJsaGJGc2dkSGx3WlNCZElIeDhJSHQ5SUNrdVpHVnNaV2RoZEdWVWVYQmxJQ2tnZTF4dVhIUmNkRngwWEhSY2RHVjJaVzUwTG5OMGIzQlFjbTl3WVdkaGRHbHZiaWdwTzF4dVhIUmNkRngwWEhSOVhHNWNibHgwWEhSY2RDOHZJRWxtSUhSb2FYTWdhWE1nWVNCdVlYUnBkbVVnWlhabGJuUWdkSEpwWjJkbGNtVmtJR0ZpYjNabExDQmxkbVZ5ZVhSb2FXNW5JR2x6SUc1dmR5QnBiaUJ2Y21SbGNseHVYSFJjZEZ4MEx5OGdSbWx5WlNCaGJpQnBibTVsY2lCemVXNTBhR1YwYVdNZ1pYWmxiblFnZDJsMGFDQjBhR1VnYjNKcFoybHVZV3dnWVhKbmRXMWxiblJ6WEc1Y2RGeDBYSFI5SUdWc2MyVWdhV1lnS0NCellYWmxaQzVzWlc1bmRHZ2dLU0I3WEc1Y2JseDBYSFJjZEZ4MEx5OGdMaTR1WVc1a0lHTmhjSFIxY21VZ2RHaGxJSEpsYzNWc2RGeHVYSFJjZEZ4MFhIUmtZWFJoVUhKcGRpNXpaWFFvSUhSb2FYTXNJSFI1Y0dVc0lIdGNibHgwWEhSY2RGeDBYSFIyWVd4MVpUb2dhbEYxWlhKNUxtVjJaVzUwTG5SeWFXZG5aWElvWEc1Y2JseDBYSFJjZEZ4MFhIUmNkQzh2SUZOMWNIQnZjblE2SUVsRklEdzlPU0F0SURFeEsxeHVYSFJjZEZ4MFhIUmNkRngwTHk4Z1JYaDBaVzVrSUhkcGRHZ2dkR2hsSUhCeWIzUnZkSGx3WlNCMGJ5QnlaWE5sZENCMGFHVWdZV0p2ZG1VZ2MzUnZjRWx0YldWa2FXRjBaVkJ5YjNCaFoyRjBhVzl1S0NsY2JseDBYSFJjZEZ4MFhIUmNkR3BSZFdWeWVTNWxlSFJsYm1Rb0lITmhkbVZrV3lBd0lGMHNJR3BSZFdWeWVTNUZkbVZ1ZEM1d2NtOTBiM1I1Y0dVZ0tTeGNibHgwWEhSY2RGeDBYSFJjZEhOaGRtVmtMbk5zYVdObEtDQXhJQ2tzWEc1Y2RGeDBYSFJjZEZ4MFhIUjBhR2x6WEc1Y2RGeDBYSFJjZEZ4MEtWeHVYSFJjZEZ4MFhIUjlJQ2s3WEc1Y2JseDBYSFJjZEZ4MEx5OGdRV0p2Y25RZ2FHRnVaR3hwYm1jZ2IyWWdkR2hsSUc1aGRHbDJaU0JsZG1WdWRGeHVYSFJjZEZ4MFhIUmxkbVZ1ZEM1emRHOXdTVzF0WldScFlYUmxVSEp2Y0dGbllYUnBiMjRvS1R0Y2JseDBYSFJjZEgxY2JseDBYSFI5WEc1Y2RIMGdLVHRjYm4xY2JseHVhbEYxWlhKNUxuSmxiVzkyWlVWMlpXNTBJRDBnWm5WdVkzUnBiMjRvSUdWc1pXMHNJSFI1Y0dVc0lHaGhibVJzWlNBcElIdGNibHh1WEhRdkx5QlVhR2x6SUZ3aWFXWmNJaUJwY3lCdVpXVmtaV1FnWm05eUlIQnNZV2x1SUc5aWFtVmpkSE5jYmx4MGFXWWdLQ0JsYkdWdExuSmxiVzkyWlVWMlpXNTBUR2x6ZEdWdVpYSWdLU0I3WEc1Y2RGeDBaV3hsYlM1eVpXMXZkbVZGZG1WdWRFeHBjM1JsYm1WeUtDQjBlWEJsTENCb1lXNWtiR1VnS1R0Y2JseDBmVnh1ZlR0Y2JseHVhbEYxWlhKNUxrVjJaVzUwSUQwZ1puVnVZM1JwYjI0b0lITnlZeXdnY0hKdmNITWdLU0I3WEc1Y2JseDBMeThnUVd4c2IzY2dhVzV6ZEdGdWRHbGhkR2x2YmlCM2FYUm9iM1YwSUhSb1pTQW5ibVYzSnlCclpYbDNiM0prWEc1Y2RHbG1JQ2dnSVNnZ2RHaHBjeUJwYm5OMFlXNWpaVzltSUdwUmRXVnllUzVGZG1WdWRDQXBJQ2tnZTF4dVhIUmNkSEpsZEhWeWJpQnVaWGNnYWxGMVpYSjVMa1YyWlc1MEtDQnpjbU1zSUhCeWIzQnpJQ2s3WEc1Y2RIMWNibHh1WEhRdkx5QkZkbVZ1ZENCdlltcGxZM1JjYmx4MGFXWWdLQ0J6Y21NZ0ppWWdjM0pqTG5SNWNHVWdLU0I3WEc1Y2RGeDBkR2hwY3k1dmNtbG5hVzVoYkVWMlpXNTBJRDBnYzNKak8xeHVYSFJjZEhSb2FYTXVkSGx3WlNBOUlITnlZeTUwZVhCbE8xeHVYRzVjZEZ4MEx5OGdSWFpsYm5SeklHSjFZbUpzYVc1bklIVndJSFJvWlNCa2IyTjFiV1Z1ZENCdFlYa2dhR0YyWlNCaVpXVnVJRzFoY210bFpDQmhjeUJ3Y21WMlpXNTBaV1JjYmx4MFhIUXZMeUJpZVNCaElHaGhibVJzWlhJZ2JHOTNaWElnWkc5M2JpQjBhR1VnZEhKbFpUc2djbVZtYkdWamRDQjBhR1VnWTI5eWNtVmpkQ0IyWVd4MVpTNWNibHgwWEhSMGFHbHpMbWx6UkdWbVlYVnNkRkJ5WlhabGJuUmxaQ0E5SUhOeVl5NWtaV1poZFd4MFVISmxkbVZ1ZEdWa0lIeDhYRzVjZEZ4MFhIUmNkSE55WXk1a1pXWmhkV3gwVUhKbGRtVnVkR1ZrSUQwOVBTQjFibVJsWm1sdVpXUWdKaVpjYmx4dVhIUmNkRngwWEhRdkx5QlRkWEJ3YjNKME9pQkJibVJ5YjJsa0lEdzlNaTR6SUc5dWJIbGNibHgwWEhSY2RGeDBjM0pqTG5KbGRIVnlibFpoYkhWbElEMDlQU0JtWVd4elpTQS9YRzVjZEZ4MFhIUnlaWFIxY201VWNuVmxJRHBjYmx4MFhIUmNkSEpsZEhWeWJrWmhiSE5sTzF4dVhHNWNkRngwTHk4Z1EzSmxZWFJsSUhSaGNtZGxkQ0J3Y205d1pYSjBhV1Z6WEc1Y2RGeDBMeThnVTNWd2NHOXlkRG9nVTJGbVlYSnBJRHc5TmlBdElEY2diMjVzZVZ4dVhIUmNkQzh2SUZSaGNtZGxkQ0J6YUc5MWJHUWdibTkwSUdKbElHRWdkR1Y0ZENCdWIyUmxJQ2gwY21GakxUVXdOQ3dnZEhKaFl5MHhNekUwTXlsY2JseDBYSFIwYUdsekxuUmhjbWRsZENBOUlDZ2djM0pqTG5SaGNtZGxkQ0FtSmlCemNtTXVkR0Z5WjJWMExtNXZaR1ZVZVhCbElEMDlQU0F6SUNrZ1AxeHVYSFJjZEZ4MGMzSmpMblJoY21kbGRDNXdZWEpsYm5ST2IyUmxJRHBjYmx4MFhIUmNkSE55WXk1MFlYSm5aWFE3WEc1Y2JseDBYSFIwYUdsekxtTjFjbkpsYm5SVVlYSm5aWFFnUFNCemNtTXVZM1Z5Y21WdWRGUmhjbWRsZER0Y2JseDBYSFIwYUdsekxuSmxiR0YwWldSVVlYSm5aWFFnUFNCemNtTXVjbVZzWVhSbFpGUmhjbWRsZER0Y2JseHVYSFF2THlCRmRtVnVkQ0IwZVhCbFhHNWNkSDBnWld4elpTQjdYRzVjZEZ4MGRHaHBjeTUwZVhCbElEMGdjM0pqTzF4dVhIUjlYRzVjYmx4MEx5OGdVSFYwSUdWNGNHeHBZMmwwYkhrZ2NISnZkbWxrWldRZ2NISnZjR1Z5ZEdsbGN5QnZiblJ2SUhSb1pTQmxkbVZ1ZENCdlltcGxZM1JjYmx4MGFXWWdLQ0J3Y205d2N5QXBJSHRjYmx4MFhIUnFVWFZsY25rdVpYaDBaVzVrS0NCMGFHbHpMQ0J3Y205d2N5QXBPMXh1WEhSOVhHNWNibHgwTHk4Z1EzSmxZWFJsSUdFZ2RHbHRaWE4wWVcxd0lHbG1JR2x1WTI5dGFXNW5JR1YyWlc1MElHUnZaWE51SjNRZ2FHRjJaU0J2Ym1WY2JseDBkR2hwY3k1MGFXMWxVM1JoYlhBZ1BTQnpjbU1nSmlZZ2MzSmpMblJwYldWVGRHRnRjQ0I4ZkNCRVlYUmxMbTV2ZHlncE8xeHVYRzVjZEM4dklFMWhjbXNnYVhRZ1lYTWdabWw0WldSY2JseDBkR2hwYzFzZ2FsRjFaWEo1TG1WNGNHRnVaRzhnWFNBOUlIUnlkV1U3WEc1OU8xeHVYRzR2THlCcVVYVmxjbmt1UlhabGJuUWdhWE1nWW1GelpXUWdiMjRnUkU5Tk15QkZkbVZ1ZEhNZ1lYTWdjM0JsWTJsbWFXVmtJR0o1SUhSb1pTQkZRMDFCVTJOeWFYQjBJRXhoYm1kMVlXZGxJRUpwYm1ScGJtZGNiaTh2SUdoMGRIQnpPaTh2ZDNkM0xuY3pMbTl5Wnk5VVVpOHlNREF6TDFkRUxVUlBUUzFNWlhabGJDMHpMVVYyWlc1MGN5MHlNREF6TURNek1TOWxZMjFoTFhOamNtbHdkQzFpYVc1a2FXNW5MbWgwYld4Y2JtcFJkV1Z5ZVM1RmRtVnVkQzV3Y205MGIzUjVjR1VnUFNCN1hHNWNkR052Ym5OMGNuVmpkRzl5T2lCcVVYVmxjbmt1UlhabGJuUXNYRzVjZEdselJHVm1ZWFZzZEZCeVpYWmxiblJsWkRvZ2NtVjBkWEp1Um1Gc2MyVXNYRzVjZEdselVISnZjR0ZuWVhScGIyNVRkRzl3Y0dWa09pQnlaWFIxY201R1lXeHpaU3hjYmx4MGFYTkpiVzFsWkdsaGRHVlFjbTl3WVdkaGRHbHZibE4wYjNCd1pXUTZJSEpsZEhWeWJrWmhiSE5sTEZ4dVhIUnBjMU5wYlhWc1lYUmxaRG9nWm1Gc2MyVXNYRzVjYmx4MGNISmxkbVZ1ZEVSbFptRjFiSFE2SUdaMWJtTjBhVzl1S0NrZ2UxeHVYSFJjZEhaaGNpQmxJRDBnZEdocGN5NXZjbWxuYVc1aGJFVjJaVzUwTzF4dVhHNWNkRngwZEdocGN5NXBjMFJsWm1GMWJIUlFjbVYyWlc1MFpXUWdQU0J5WlhSMWNtNVVjblZsTzF4dVhHNWNkRngwYVdZZ0tDQmxJQ1ltSUNGMGFHbHpMbWx6VTJsdGRXeGhkR1ZrSUNrZ2UxeHVYSFJjZEZ4MFpTNXdjbVYyWlc1MFJHVm1ZWFZzZENncE8xeHVYSFJjZEgxY2JseDBmU3hjYmx4MGMzUnZjRkJ5YjNCaFoyRjBhVzl1T2lCbWRXNWpkR2x2YmlncElIdGNibHgwWEhSMllYSWdaU0E5SUhSb2FYTXViM0pwWjJsdVlXeEZkbVZ1ZER0Y2JseHVYSFJjZEhSb2FYTXVhWE5RY205d1lXZGhkR2x2YmxOMGIzQndaV1FnUFNCeVpYUjFjbTVVY25WbE8xeHVYRzVjZEZ4MGFXWWdLQ0JsSUNZbUlDRjBhR2x6TG1selUybHRkV3hoZEdWa0lDa2dlMXh1WEhSY2RGeDBaUzV6ZEc5d1VISnZjR0ZuWVhScGIyNG9LVHRjYmx4MFhIUjlYRzVjZEgwc1hHNWNkSE4wYjNCSmJXMWxaR2xoZEdWUWNtOXdZV2RoZEdsdmJqb2dablZ1WTNScGIyNG9LU0I3WEc1Y2RGeDBkbUZ5SUdVZ1BTQjBhR2x6TG05eWFXZHBibUZzUlhabGJuUTdYRzVjYmx4MFhIUjBhR2x6TG1selNXMXRaV1JwWVhSbFVISnZjR0ZuWVhScGIyNVRkRzl3Y0dWa0lEMGdjbVYwZFhKdVZISjFaVHRjYmx4dVhIUmNkR2xtSUNnZ1pTQW1KaUFoZEdocGN5NXBjMU5wYlhWc1lYUmxaQ0FwSUh0Y2JseDBYSFJjZEdVdWMzUnZjRWx0YldWa2FXRjBaVkJ5YjNCaFoyRjBhVzl1S0NrN1hHNWNkRngwZlZ4dVhHNWNkRngwZEdocGN5NXpkRzl3VUhKdmNHRm5ZWFJwYjI0b0tUdGNibHgwZlZ4dWZUdGNibHh1THk4Z1NXNWpiSFZrWlhNZ1lXeHNJR052YlcxdmJpQmxkbVZ1ZENCd2NtOXdjeUJwYm1Oc2RXUnBibWNnUzJWNVJYWmxiblFnWVc1a0lFMXZkWE5sUlhabGJuUWdjM0JsWTJsbWFXTWdjSEp2Y0hOY2JtcFJkV1Z5ZVM1bFlXTm9LQ0I3WEc1Y2RHRnNkRXRsZVRvZ2RISjFaU3hjYmx4MFluVmlZbXhsY3pvZ2RISjFaU3hjYmx4MFkyRnVZMlZzWVdKc1pUb2dkSEoxWlN4Y2JseDBZMmhoYm1kbFpGUnZkV05vWlhNNklIUnlkV1VzWEc1Y2RHTjBjbXhMWlhrNklIUnlkV1VzWEc1Y2RHUmxkR0ZwYkRvZ2RISjFaU3hjYmx4MFpYWmxiblJRYUdGelpUb2dkSEoxWlN4Y2JseDBiV1YwWVV0bGVUb2dkSEoxWlN4Y2JseDBjR0ZuWlZnNklIUnlkV1VzWEc1Y2RIQmhaMlZaT2lCMGNuVmxMRnh1WEhSemFHbG1kRXRsZVRvZ2RISjFaU3hjYmx4MGRtbGxkem9nZEhKMVpTeGNibHgwWENKamFHRnlYQ0k2SUhSeWRXVXNYRzVjZEdOdlpHVTZJSFJ5ZFdVc1hHNWNkR05vWVhKRGIyUmxPaUIwY25WbExGeHVYSFJyWlhrNklIUnlkV1VzWEc1Y2RHdGxlVU52WkdVNklIUnlkV1VzWEc1Y2RHSjFkSFJ2YmpvZ2RISjFaU3hjYmx4MFluVjBkRzl1Y3pvZ2RISjFaU3hjYmx4MFkyeHBaVzUwV0RvZ2RISjFaU3hjYmx4MFkyeHBaVzUwV1RvZ2RISjFaU3hjYmx4MGIyWm1jMlYwV0RvZ2RISjFaU3hjYmx4MGIyWm1jMlYwV1RvZ2RISjFaU3hjYmx4MGNHOXBiblJsY2tsa09pQjBjblZsTEZ4dVhIUndiMmx1ZEdWeVZIbHdaVG9nZEhKMVpTeGNibHgwYzJOeVpXVnVXRG9nZEhKMVpTeGNibHgwYzJOeVpXVnVXVG9nZEhKMVpTeGNibHgwZEdGeVoyVjBWRzkxWTJobGN6b2dkSEoxWlN4Y2JseDBkRzlGYkdWdFpXNTBPaUIwY25WbExGeHVYSFIwYjNWamFHVnpPaUIwY25WbExGeHVYSFIzYUdsamFEb2dkSEoxWlZ4dWZTd2dhbEYxWlhKNUxtVjJaVzUwTG1Ga1pGQnliM0FnS1R0Y2JseHVhbEYxWlhKNUxtVmhZMmdvSUhzZ1ptOWpkWE02SUZ3aVptOWpkWE5wYmx3aUxDQmliSFZ5T2lCY0ltWnZZM1Z6YjNWMFhDSWdmU3dnWm5WdVkzUnBiMjRvSUhSNWNHVXNJR1JsYkdWbllYUmxWSGx3WlNBcElIdGNibHgwYWxGMVpYSjVMbVYyWlc1MExuTndaV05wWVd4YklIUjVjR1VnWFNBOUlIdGNibHh1WEhSY2RDOHZJRlYwYVd4cGVtVWdibUYwYVhabElHVjJaVzUwSUdsbUlIQnZjM05wWW14bElITnZJR0pzZFhJdlptOWpkWE1nYzJWeGRXVnVZMlVnYVhNZ1kyOXljbVZqZEZ4dVhIUmNkSE5sZEhWd09pQm1kVzVqZEdsdmJpZ3BJSHRjYmx4dVhIUmNkRngwTHk4Z1EyeGhhVzBnZEdobElHWnBjbk4wSUdoaGJtUnNaWEpjYmx4MFhIUmNkQzh2SUdSaGRHRlFjbWwyTG5ObGRDZ2dkR2hwY3l3Z1hDSm1iMk4xYzF3aUxDQXVMaTRnS1Z4dVhIUmNkRngwTHk4Z1pHRjBZVkJ5YVhZdWMyVjBLQ0IwYUdsekxDQmNJbUpzZFhKY0lpd2dMaTR1SUNsY2JseDBYSFJjZEd4bGRtVnlZV2RsVG1GMGFYWmxLQ0IwYUdsekxDQjBlWEJsTENCbGVIQmxZM1JUZVc1aklDazdYRzVjYmx4MFhIUmNkQzh2SUZKbGRIVnliaUJtWVd4elpTQjBieUJoYkd4dmR5QnViM0p0WVd3Z2NISnZZMlZ6YzJsdVp5QnBiaUIwYUdVZ1kyRnNiR1Z5WEc1Y2RGeDBYSFJ5WlhSMWNtNGdabUZzYzJVN1hHNWNkRngwZlN4Y2JseDBYSFIwY21sbloyVnlPaUJtZFc1amRHbHZiaWdwSUh0Y2JseHVYSFJjZEZ4MEx5OGdSbTl5WTJVZ2MyVjBkWEFnWW1WbWIzSmxJSFJ5YVdkblpYSmNibHgwWEhSY2RHeGxkbVZ5WVdkbFRtRjBhWFpsS0NCMGFHbHpMQ0IwZVhCbElDazdYRzVjYmx4MFhIUmNkQzh2SUZKbGRIVnliaUJ1YjI0dFptRnNjMlVnZEc4Z1lXeHNiM2NnYm05eWJXRnNJR1YyWlc1MExYQmhkR2dnY0hKdmNHRm5ZWFJwYjI1Y2JseDBYSFJjZEhKbGRIVnliaUIwY25WbE8xeHVYSFJjZEgwc1hHNWNibHgwWEhRdkx5QlRkWEJ3Y21WemN5QnVZWFJwZG1VZ1ptOWpkWE1nYjNJZ1lteDFjaUJwWmlCM1pTZHlaU0JqZFhKeVpXNTBiSGtnYVc1emFXUmxYRzVjZEZ4MEx5OGdZU0JzWlhabGNtRm5aV1FnYm1GMGFYWmxMV1YyWlc1MElITjBZV05yWEc1Y2RGeDBYMlJsWm1GMWJIUTZJR1oxYm1OMGFXOXVLQ0JsZG1WdWRDQXBJSHRjYmx4MFhIUmNkSEpsZEhWeWJpQmtZWFJoVUhKcGRpNW5aWFFvSUdWMlpXNTBMblJoY21kbGRDd2dkSGx3WlNBcE8xeHVYSFJjZEgwc1hHNWNibHgwWEhSa1pXeGxaMkYwWlZSNWNHVTZJR1JsYkdWbllYUmxWSGx3WlZ4dVhIUjlPMXh1ZlNBcE8xeHVYRzR2THlCRGNtVmhkR1VnYlc5MWMyVmxiblJsY2k5c1pXRjJaU0JsZG1WdWRITWdkWE5wYm1jZ2JXOTFjMlZ2ZG1WeUwyOTFkQ0JoYm1RZ1pYWmxiblF0ZEdsdFpTQmphR1ZqYTNOY2JpOHZJSE52SUhSb1lYUWdaWFpsYm5RZ1pHVnNaV2RoZEdsdmJpQjNiM0pyY3lCcGJpQnFVWFZsY25rdVhHNHZMeUJFYnlCMGFHVWdjMkZ0WlNCbWIzSWdjRzlwYm5SbGNtVnVkR1Z5TDNCdmFXNTBaWEpzWldGMlpTQmhibVFnY0c5cGJuUmxjbTkyWlhJdmNHOXBiblJsY205MWRGeHVMeTljYmk4dklGTjFjSEJ2Y25RNklGTmhabUZ5YVNBM0lHOXViSGxjYmk4dklGTmhabUZ5YVNCelpXNWtjeUJ0YjNWelpXVnVkR1Z5SUhSdmJ5QnZablJsYmpzZ2MyVmxPbHh1THk4Z2FIUjBjSE02THk5aWRXZHpMbU5vY205dGFYVnRMbTl5Wnk5d0wyTm9jbTl0YVhWdEwybHpjM1ZsY3k5a1pYUmhhV3cvYVdROU5EY3dNalU0WEc0dkx5Qm1iM0lnZEdobElHUmxjMk55YVhCMGFXOXVJRzltSUhSb1pTQmlkV2NnS0dsMElHVjRhWE4wWldRZ2FXNGdiMnhrWlhJZ1EyaHliMjFsSUhabGNuTnBiMjV6SUdGeklIZGxiR3dwTGx4dWFsRjFaWEo1TG1WaFkyZ29JSHRjYmx4MGJXOTFjMlZsYm5SbGNqb2dYQ0p0YjNWelpXOTJaWEpjSWl4Y2JseDBiVzkxYzJWc1pXRjJaVG9nWENKdGIzVnpaVzkxZEZ3aUxGeHVYSFJ3YjJsdWRHVnlaVzUwWlhJNklGd2ljRzlwYm5SbGNtOTJaWEpjSWl4Y2JseDBjRzlwYm5SbGNteGxZWFpsT2lCY0luQnZhVzUwWlhKdmRYUmNJbHh1ZlN3Z1puVnVZM1JwYjI0b0lHOXlhV2NzSUdacGVDQXBJSHRjYmx4MGFsRjFaWEo1TG1WMlpXNTBMbk53WldOcFlXeGJJRzl5YVdjZ1hTQTlJSHRjYmx4MFhIUmtaV3hsWjJGMFpWUjVjR1U2SUdacGVDeGNibHgwWEhSaWFXNWtWSGx3WlRvZ1ptbDRMRnh1WEc1Y2RGeDBhR0Z1Wkd4bE9pQm1kVzVqZEdsdmJpZ2daWFpsYm5RZ0tTQjdYRzVjZEZ4MFhIUjJZWElnY21WMExGeHVYSFJjZEZ4MFhIUjBZWEpuWlhRZ1BTQjBhR2x6TEZ4dVhIUmNkRngwWEhSeVpXeGhkR1ZrSUQwZ1pYWmxiblF1Y21Wc1lYUmxaRlJoY21kbGRDeGNibHgwWEhSY2RGeDBhR0Z1Wkd4bFQySnFJRDBnWlhabGJuUXVhR0Z1Wkd4bFQySnFPMXh1WEc1Y2RGeDBYSFF2THlCR2IzSWdiVzkxYzJWbGJuUmxjaTlzWldGMlpTQmpZV3hzSUhSb1pTQm9ZVzVrYkdWeUlHbG1JSEpsYkdGMFpXUWdhWE1nYjNWMGMybGtaU0IwYUdVZ2RHRnlaMlYwTGx4dVhIUmNkRngwTHk4Z1RrSTZJRTV2SUhKbGJHRjBaV1JVWVhKblpYUWdhV1lnZEdobElHMXZkWE5sSUd4bFpuUXZaVzUwWlhKbFpDQjBhR1VnWW5KdmQzTmxjaUIzYVc1a2IzZGNibHgwWEhSY2RHbG1JQ2dnSVhKbGJHRjBaV1FnZkh3Z0tDQnlaV3hoZEdWa0lDRTlQU0IwWVhKblpYUWdKaVlnSVdwUmRXVnllUzVqYjI1MFlXbHVjeWdnZEdGeVoyVjBMQ0J5Wld4aGRHVmtJQ2tnS1NBcElIdGNibHgwWEhSY2RGeDBaWFpsYm5RdWRIbHdaU0E5SUdoaGJtUnNaVTlpYWk1dmNtbG5WSGx3WlR0Y2JseDBYSFJjZEZ4MGNtVjBJRDBnYUdGdVpHeGxUMkpxTG1oaGJtUnNaWEl1WVhCd2JIa29JSFJvYVhNc0lHRnlaM1Z0Wlc1MGN5QXBPMXh1WEhSY2RGeDBYSFJsZG1WdWRDNTBlWEJsSUQwZ1ptbDRPMXh1WEhSY2RGeDBmVnh1WEhSY2RGeDBjbVYwZFhKdUlISmxkRHRjYmx4MFhIUjlYRzVjZEgwN1hHNTlJQ2s3WEc1Y2JtcFJkV1Z5ZVM1bWJpNWxlSFJsYm1Rb0lIdGNibHh1WEhSdmJqb2dablZ1WTNScGIyNG9JSFI1Y0dWekxDQnpaV3hsWTNSdmNpd2daR0YwWVN3Z1ptNGdLU0I3WEc1Y2RGeDBjbVYwZFhKdUlHOXVLQ0IwYUdsekxDQjBlWEJsY3l3Z2MyVnNaV04wYjNJc0lHUmhkR0VzSUdadUlDazdYRzVjZEgwc1hHNWNkRzl1WlRvZ1puVnVZM1JwYjI0b0lIUjVjR1Z6TENCelpXeGxZM1J2Y2l3Z1pHRjBZU3dnWm00Z0tTQjdYRzVjZEZ4MGNtVjBkWEp1SUc5dUtDQjBhR2x6TENCMGVYQmxjeXdnYzJWc1pXTjBiM0lzSUdSaGRHRXNJR1p1TENBeElDazdYRzVjZEgwc1hHNWNkRzltWmpvZ1puVnVZM1JwYjI0b0lIUjVjR1Z6TENCelpXeGxZM1J2Y2l3Z1ptNGdLU0I3WEc1Y2RGeDBkbUZ5SUdoaGJtUnNaVTlpYWl3Z2RIbHdaVHRjYmx4MFhIUnBaaUFvSUhSNWNHVnpJQ1ltSUhSNWNHVnpMbkJ5WlhabGJuUkVaV1poZFd4MElDWW1JSFI1Y0dWekxtaGhibVJzWlU5aWFpQXBJSHRjYmx4dVhIUmNkRngwTHk4Z0tDQmxkbVZ1ZENBcElDQmthWE53WVhSamFHVmtJR3BSZFdWeWVTNUZkbVZ1ZEZ4dVhIUmNkRngwYUdGdVpHeGxUMkpxSUQwZ2RIbHdaWE11YUdGdVpHeGxUMkpxTzF4dVhIUmNkRngwYWxGMVpYSjVLQ0IwZVhCbGN5NWtaV3hsWjJGMFpWUmhjbWRsZENBcExtOW1aaWhjYmx4MFhIUmNkRngwYUdGdVpHeGxUMkpxTG01aGJXVnpjR0ZqWlNBL1hHNWNkRngwWEhSY2RGeDBhR0Z1Wkd4bFQySnFMbTl5YVdkVWVYQmxJQ3NnWENJdVhDSWdLeUJvWVc1a2JHVlBZbW91Ym1GdFpYTndZV05sSURwY2JseDBYSFJjZEZ4MFhIUm9ZVzVrYkdWUFltb3ViM0pwWjFSNWNHVXNYRzVjZEZ4MFhIUmNkR2hoYm1Sc1pVOWlhaTV6Wld4bFkzUnZjaXhjYmx4MFhIUmNkRngwYUdGdVpHeGxUMkpxTG1oaGJtUnNaWEpjYmx4MFhIUmNkQ2s3WEc1Y2RGeDBYSFJ5WlhSMWNtNGdkR2hwY3p0Y2JseDBYSFI5WEc1Y2RGeDBhV1lnS0NCMGVYQmxiMllnZEhsd1pYTWdQVDA5SUZ3aWIySnFaV04wWENJZ0tTQjdYRzVjYmx4MFhIUmNkQzh2SUNnZ2RIbHdaWE10YjJKcVpXTjBJRnNzSUhObGJHVmpkRzl5WFNBcFhHNWNkRngwWEhSbWIzSWdLQ0IwZVhCbElHbHVJSFI1Y0dWeklDa2dlMXh1WEhSY2RGeDBYSFIwYUdsekxtOW1aaWdnZEhsd1pTd2djMlZzWldOMGIzSXNJSFI1Y0dWeld5QjBlWEJsSUYwZ0tUdGNibHgwWEhSY2RIMWNibHgwWEhSY2RISmxkSFZ5YmlCMGFHbHpPMXh1WEhSY2RIMWNibHgwWEhScFppQW9JSE5sYkdWamRHOXlJRDA5UFNCbVlXeHpaU0I4ZkNCMGVYQmxiMllnYzJWc1pXTjBiM0lnUFQwOUlGd2lablZ1WTNScGIyNWNJaUFwSUh0Y2JseHVYSFJjZEZ4MEx5OGdLQ0IwZVhCbGN5QmJMQ0JtYmwwZ0tWeHVYSFJjZEZ4MFptNGdQU0J6Wld4bFkzUnZjanRjYmx4MFhIUmNkSE5sYkdWamRHOXlJRDBnZFc1a1pXWnBibVZrTzF4dVhIUmNkSDFjYmx4MFhIUnBaaUFvSUdadUlEMDlQU0JtWVd4elpTQXBJSHRjYmx4MFhIUmNkR1p1SUQwZ2NtVjBkWEp1Um1Gc2MyVTdYRzVjZEZ4MGZWeHVYSFJjZEhKbGRIVnliaUIwYUdsekxtVmhZMmdvSUdaMWJtTjBhVzl1S0NrZ2UxeHVYSFJjZEZ4MGFsRjFaWEo1TG1WMlpXNTBMbkpsYlc5MlpTZ2dkR2hwY3l3Z2RIbHdaWE1zSUdadUxDQnpaV3hsWTNSdmNpQXBPMXh1WEhSY2RIMGdLVHRjYmx4MGZWeHVmU0FwTzF4dVhHNWNiblpoY2x4dVhHNWNkQzh2SUZOMWNIQnZjblE2SUVsRklEdzlNVEFnTFNBeE1Td2dSV1JuWlNBeE1pQXRJREV6SUc5dWJIbGNibHgwTHk4Z1NXNGdTVVV2UldSblpTQjFjMmx1WnlCeVpXZGxlQ0JuY205MWNITWdhR1Z5WlNCallYVnpaWE1nYzJWMlpYSmxJSE5zYjNka2IzZHVjeTVjYmx4MEx5OGdVMlZsSUdoMGRIQnpPaTh2WTI5dWJtVmpkQzV0YVdOeWIzTnZablF1WTI5dEwwbEZMMlpsWldSaVlXTnJMMlJsZEdGcGJITXZNVGN6TmpVeE1pOWNibHgwY201dlNXNXVaWEpvZEcxc0lEMGdMenh6WTNKcGNIUjhQSE4wZVd4bGZEeHNhVzVyTDJrc1hHNWNibHgwTHk4Z1kyaGxZMnRsWkQxY0ltTm9aV05yWldSY0lpQnZjaUJqYUdWamEyVmtYRzVjZEhKamFHVmphMlZrSUQwZ0wyTm9aV05yWldSY1hITXFLRDg2VzE0OVhYdzlYRnh6S2k1amFHVmphMlZrTGlrdmFTeGNibHh1WEhSeVkyeGxZVzVUWTNKcGNIUWdQU0F2WGx4Y2N5bzhJVnhjVzBORVFWUkJYRnhiZkZ4Y1hWeGNYVDVjWEhNcUpDOW5PMXh1WEc0dkx5QlFjbVZtWlhJZ1lTQjBZbTlrZVNCdmRtVnlJR2wwY3lCd1lYSmxiblFnZEdGaWJHVWdabTl5SUdOdmJuUmhhVzVwYm1jZ2JtVjNJSEp2ZDNOY2JtWjFibU4wYVc5dUlHMWhibWx3ZFd4aGRHbHZibFJoY21kbGRDZ2daV3hsYlN3Z1kyOXVkR1Z1ZENBcElIdGNibHgwYVdZZ0tDQnViMlJsVG1GdFpTZ2daV3hsYlN3Z1hDSjBZV0pzWlZ3aUlDa2dKaVpjYmx4MFhIUnViMlJsVG1GdFpTZ2dZMjl1ZEdWdWRDNXViMlJsVkhsd1pTQWhQVDBnTVRFZ1B5QmpiMjUwWlc1MElEb2dZMjl1ZEdWdWRDNW1hWEp6ZEVOb2FXeGtMQ0JjSW5SeVhDSWdLU0FwSUh0Y2JseHVYSFJjZEhKbGRIVnliaUJxVVhWbGNua29JR1ZzWlcwZ0tTNWphR2xzWkhKbGJpZ2dYQ0owWW05a2VWd2lJQ2xiSURBZ1hTQjhmQ0JsYkdWdE8xeHVYSFI5WEc1Y2JseDBjbVYwZFhKdUlHVnNaVzA3WEc1OVhHNWNiaTh2SUZKbGNHeGhZMlV2Y21WemRHOXlaU0IwYUdVZ2RIbHdaU0JoZEhSeWFXSjFkR1VnYjJZZ2MyTnlhWEIwSUdWc1pXMWxiblJ6SUdadmNpQnpZV1psSUVSUFRTQnRZVzVwY0hWc1lYUnBiMjVjYm1aMWJtTjBhVzl1SUdScGMyRmliR1ZUWTNKcGNIUW9JR1ZzWlcwZ0tTQjdYRzVjZEdWc1pXMHVkSGx3WlNBOUlDZ2daV3hsYlM1blpYUkJkSFJ5YVdKMWRHVW9JRndpZEhsd1pWd2lJQ2tnSVQwOUlHNTFiR3dnS1NBcklGd2lMMXdpSUNzZ1pXeGxiUzUwZVhCbE8xeHVYSFJ5WlhSMWNtNGdaV3hsYlR0Y2JuMWNibVoxYm1OMGFXOXVJSEpsYzNSdmNtVlRZM0pwY0hRb0lHVnNaVzBnS1NCN1hHNWNkR2xtSUNnZ0tDQmxiR1Z0TG5SNWNHVWdmSHdnWENKY0lpQXBMbk5zYVdObEtDQXdMQ0ExSUNrZ1BUMDlJRndpZEhKMVpTOWNJaUFwSUh0Y2JseDBYSFJsYkdWdExuUjVjR1VnUFNCbGJHVnRMblI1Y0dVdWMyeHBZMlVvSURVZ0tUdGNibHgwZlNCbGJITmxJSHRjYmx4MFhIUmxiR1Z0TG5KbGJXOTJaVUYwZEhKcFluVjBaU2dnWENKMGVYQmxYQ0lnS1R0Y2JseDBmVnh1WEc1Y2RISmxkSFZ5YmlCbGJHVnRPMXh1ZlZ4dVhHNW1kVzVqZEdsdmJpQmpiRzl1WlVOdmNIbEZkbVZ1ZENnZ2MzSmpMQ0JrWlhOMElDa2dlMXh1WEhSMllYSWdhU3dnYkN3Z2RIbHdaU3dnY0dSaGRHRlBiR1FzSUhWa1lYUmhUMnhrTENCMVpHRjBZVU4xY2l3Z1pYWmxiblJ6TzF4dVhHNWNkR2xtSUNnZ1pHVnpkQzV1YjJSbFZIbHdaU0FoUFQwZ01TQXBJSHRjYmx4MFhIUnlaWFIxY200N1hHNWNkSDFjYmx4dVhIUXZMeUF4TGlCRGIzQjVJSEJ5YVhaaGRHVWdaR0YwWVRvZ1pYWmxiblJ6TENCb1lXNWtiR1Z5Y3l3Z1pYUmpMbHh1WEhScFppQW9JR1JoZEdGUWNtbDJMbWhoYzBSaGRHRW9JSE55WXlBcElDa2dlMXh1WEhSY2RIQmtZWFJoVDJ4a0lEMGdaR0YwWVZCeWFYWXVaMlYwS0NCemNtTWdLVHRjYmx4MFhIUmxkbVZ1ZEhNZ1BTQndaR0YwWVU5c1pDNWxkbVZ1ZEhNN1hHNWNibHgwWEhScFppQW9JR1YyWlc1MGN5QXBJSHRjYmx4MFhIUmNkR1JoZEdGUWNtbDJMbkpsYlc5MlpTZ2daR1Z6ZEN3Z1hDSm9ZVzVrYkdVZ1pYWmxiblJ6WENJZ0tUdGNibHh1WEhSY2RGeDBabTl5SUNnZ2RIbHdaU0JwYmlCbGRtVnVkSE1nS1NCN1hHNWNkRngwWEhSY2RHWnZjaUFvSUdrZ1BTQXdMQ0JzSUQwZ1pYWmxiblJ6V3lCMGVYQmxJRjB1YkdWdVozUm9PeUJwSUR3Z2JEc2dhU3NySUNrZ2UxeHVYSFJjZEZ4MFhIUmNkR3BSZFdWeWVTNWxkbVZ1ZEM1aFpHUW9JR1JsYzNRc0lIUjVjR1VzSUdWMlpXNTBjMXNnZEhsd1pTQmRXeUJwSUYwZ0tUdGNibHgwWEhSY2RGeDBmVnh1WEhSY2RGeDBmVnh1WEhSY2RIMWNibHgwZlZ4dVhHNWNkQzh2SURJdUlFTnZjSGtnZFhObGNpQmtZWFJoWEc1Y2RHbG1JQ2dnWkdGMFlWVnpaWEl1YUdGelJHRjBZU2dnYzNKaklDa2dLU0I3WEc1Y2RGeDBkV1JoZEdGUGJHUWdQU0JrWVhSaFZYTmxjaTVoWTJObGMzTW9JSE55WXlBcE8xeHVYSFJjZEhWa1lYUmhRM1Z5SUQwZ2FsRjFaWEo1TG1WNGRHVnVaQ2dnZTMwc0lIVmtZWFJoVDJ4a0lDazdYRzVjYmx4MFhIUmtZWFJoVlhObGNpNXpaWFFvSUdSbGMzUXNJSFZrWVhSaFEzVnlJQ2s3WEc1Y2RIMWNibjFjYmx4dUx5OGdSbWw0SUVsRklHSjFaM01zSUhObFpTQnpkWEJ3YjNKMElIUmxjM1J6WEc1bWRXNWpkR2x2YmlCbWFYaEpibkIxZENnZ2MzSmpMQ0JrWlhOMElDa2dlMXh1WEhSMllYSWdibTlrWlU1aGJXVWdQU0JrWlhOMExtNXZaR1ZPWVcxbExuUnZURzkzWlhKRFlYTmxLQ2s3WEc1Y2JseDBMeThnUm1GcGJITWdkRzhnY0dWeWMybHpkQ0IwYUdVZ1kyaGxZMnRsWkNCemRHRjBaU0J2WmlCaElHTnNiMjVsWkNCamFHVmphMkp2ZUNCdmNpQnlZV1JwYnlCaWRYUjBiMjR1WEc1Y2RHbG1JQ2dnYm05a1pVNWhiV1VnUFQwOUlGd2lhVzV3ZFhSY0lpQW1KaUJ5WTJobFkydGhZbXhsVkhsd1pTNTBaWE4wS0NCemNtTXVkSGx3WlNBcElDa2dlMXh1WEhSY2RHUmxjM1F1WTJobFkydGxaQ0E5SUhOeVl5NWphR1ZqYTJWa08xeHVYRzVjZEM4dklFWmhhV3h6SUhSdklISmxkSFZ5YmlCMGFHVWdjMlZzWldOMFpXUWdiM0IwYVc5dUlIUnZJSFJvWlNCa1pXWmhkV3gwSUhObGJHVmpkR1ZrSUhOMFlYUmxJSGRvWlc0Z1kyeHZibWx1WnlCdmNIUnBiMjV6WEc1Y2RIMGdaV3h6WlNCcFppQW9JRzV2WkdWT1lXMWxJRDA5UFNCY0ltbHVjSFYwWENJZ2ZId2dibTlrWlU1aGJXVWdQVDA5SUZ3aWRHVjRkR0Z5WldGY0lpQXBJSHRjYmx4MFhIUmtaWE4wTG1SbFptRjFiSFJXWVd4MVpTQTlJSE55WXk1a1pXWmhkV3gwVm1Gc2RXVTdYRzVjZEgxY2JuMWNibHh1Wm5WdVkzUnBiMjRnWkc5dFRXRnVhWEFvSUdOdmJHeGxZM1JwYjI0c0lHRnlaM01zSUdOaGJHeGlZV05yTENCcFoyNXZjbVZrSUNrZ2UxeHVYRzVjZEM4dklFWnNZWFIwWlc0Z1lXNTVJRzVsYzNSbFpDQmhjbkpoZVhOY2JseDBZWEpuY3lBOUlHWnNZWFFvSUdGeVozTWdLVHRjYmx4dVhIUjJZWElnWm5KaFoyMWxiblFzSUdacGNuTjBMQ0J6WTNKcGNIUnpMQ0JvWVhOVFkzSnBjSFJ6TENCdWIyUmxMQ0JrYjJNc1hHNWNkRngwYVNBOUlEQXNYRzVjZEZ4MGJDQTlJR052Ykd4bFkzUnBiMjR1YkdWdVozUm9MRnh1WEhSY2RHbE9iME5zYjI1bElEMGdiQ0F0SURFc1hHNWNkRngwZG1Gc2RXVWdQU0JoY21keld5QXdJRjBzWEc1Y2RGeDBkbUZzZFdWSmMwWjFibU4wYVc5dUlEMGdhWE5HZFc1amRHbHZiaWdnZG1Gc2RXVWdLVHRjYmx4dVhIUXZMeUJYWlNCallXNG5kQ0JqYkc5dVpVNXZaR1VnWm5KaFoyMWxiblJ6SUhSb1lYUWdZMjl1ZEdGcGJpQmphR1ZqYTJWa0xDQnBiaUJYWldKTGFYUmNibHgwYVdZZ0tDQjJZV3gxWlVselJuVnVZM1JwYjI0Z2ZIeGNibHgwWEhSY2RDZ2diQ0ErSURFZ0ppWWdkSGx3Wlc5bUlIWmhiSFZsSUQwOVBTQmNJbk4wY21sdVoxd2lJQ1ltWEc1Y2RGeDBYSFJjZENGemRYQndiM0owTG1Ob1pXTnJRMnh2Ym1VZ0ppWWdjbU5vWldOclpXUXVkR1Z6ZENnZ2RtRnNkV1VnS1NBcElDa2dlMXh1WEhSY2RISmxkSFZ5YmlCamIyeHNaV04wYVc5dUxtVmhZMmdvSUdaMWJtTjBhVzl1S0NCcGJtUmxlQ0FwSUh0Y2JseDBYSFJjZEhaaGNpQnpaV3htSUQwZ1kyOXNiR1ZqZEdsdmJpNWxjU2dnYVc1a1pYZ2dLVHRjYmx4MFhIUmNkR2xtSUNnZ2RtRnNkV1ZKYzBaMWJtTjBhVzl1SUNrZ2UxeHVYSFJjZEZ4MFhIUmhjbWR6V3lBd0lGMGdQU0IyWVd4MVpTNWpZV3hzS0NCMGFHbHpMQ0JwYm1SbGVDd2djMlZzWmk1b2RHMXNLQ2tnS1R0Y2JseDBYSFJjZEgxY2JseDBYSFJjZEdSdmJVMWhibWx3S0NCelpXeG1MQ0JoY21kekxDQmpZV3hzWW1GamF5d2dhV2R1YjNKbFpDQXBPMXh1WEhSY2RIMGdLVHRjYmx4MGZWeHVYRzVjZEdsbUlDZ2diQ0FwSUh0Y2JseDBYSFJtY21GbmJXVnVkQ0E5SUdKMWFXeGtSbkpoWjIxbGJuUW9JR0Z5WjNNc0lHTnZiR3hsWTNScGIyNWJJREFnWFM1dmQyNWxja1J2WTNWdFpXNTBMQ0JtWVd4elpTd2dZMjlzYkdWamRHbHZiaXdnYVdkdWIzSmxaQ0FwTzF4dVhIUmNkR1pwY25OMElEMGdabkpoWjIxbGJuUXVabWx5YzNSRGFHbHNaRHRjYmx4dVhIUmNkR2xtSUNnZ1puSmhaMjFsYm5RdVkyaHBiR1JPYjJSbGN5NXNaVzVuZEdnZ1BUMDlJREVnS1NCN1hHNWNkRngwWEhSbWNtRm5iV1Z1ZENBOUlHWnBjbk4wTzF4dVhIUmNkSDFjYmx4dVhIUmNkQzh2SUZKbGNYVnBjbVVnWldsMGFHVnlJRzVsZHlCamIyNTBaVzUwSUc5eUlHRnVJR2x1ZEdWeVpYTjBJR2x1SUdsbmJtOXlaV1FnWld4bGJXVnVkSE1nZEc4Z2FXNTJiMnRsSUhSb1pTQmpZV3hzWW1GamExeHVYSFJjZEdsbUlDZ2dabWx5YzNRZ2ZId2dhV2R1YjNKbFpDQXBJSHRjYmx4MFhIUmNkSE5qY21sd2RITWdQU0JxVVhWbGNua3ViV0Z3S0NCblpYUkJiR3dvSUdaeVlXZHRaVzUwTENCY0luTmpjbWx3ZEZ3aUlDa3NJR1JwYzJGaWJHVlRZM0pwY0hRZ0tUdGNibHgwWEhSY2RHaGhjMU5qY21sd2RITWdQU0J6WTNKcGNIUnpMbXhsYm1kMGFEdGNibHh1WEhSY2RGeDBMeThnVlhObElIUm9aU0J2Y21sbmFXNWhiQ0JtY21GbmJXVnVkQ0JtYjNJZ2RHaGxJR3hoYzNRZ2FYUmxiVnh1WEhSY2RGeDBMeThnYVc1emRHVmhaQ0J2WmlCMGFHVWdabWx5YzNRZ1ltVmpZWFZ6WlNCcGRDQmpZVzRnWlc1a0lIVndYRzVjZEZ4MFhIUXZMeUJpWldsdVp5QmxiWEIwYVdWa0lHbHVZMjl5Y21WamRHeDVJR2x1SUdObGNuUmhhVzRnYzJsMGRXRjBhVzl1Y3lBb2RISmhZeTA0TURjd0tTNWNibHgwWEhSY2RHWnZjaUFvSURzZ2FTQThJR3c3SUdrckt5QXBJSHRjYmx4MFhIUmNkRngwYm05a1pTQTlJR1p5WVdkdFpXNTBPMXh1WEc1Y2RGeDBYSFJjZEdsbUlDZ2dhU0FoUFQwZ2FVNXZRMnh2Ym1VZ0tTQjdYRzVjZEZ4MFhIUmNkRngwYm05a1pTQTlJR3BSZFdWeWVTNWpiRzl1WlNnZ2JtOWtaU3dnZEhKMVpTd2dkSEoxWlNBcE8xeHVYRzVjZEZ4MFhIUmNkRngwTHk4Z1MyVmxjQ0J5WldabGNtVnVZMlZ6SUhSdklHTnNiMjVsWkNCelkzSnBjSFJ6SUdadmNpQnNZWFJsY2lCeVpYTjBiM0poZEdsdmJseHVYSFJjZEZ4MFhIUmNkR2xtSUNnZ2FHRnpVMk55YVhCMGN5QXBJSHRjYmx4dVhIUmNkRngwWEhSY2RGeDBMeThnVTNWd2NHOXlkRG9nUVc1a2NtOXBaQ0E4UFRRdU1DQnZibXg1TENCUWFHRnVkRzl0U2xNZ01TQnZibXg1WEc1Y2RGeDBYSFJjZEZ4MFhIUXZMeUJ3ZFhOb0xtRndjR3g1S0Y4c0lHRnljbUY1YkdsclpTa2dkR2h5YjNkeklHOXVJR0Z1WTJsbGJuUWdWMlZpUzJsMFhHNWNkRngwWEhSY2RGeDBYSFJxVVhWbGNua3ViV1Z5WjJVb0lITmpjbWx3ZEhNc0lHZGxkRUZzYkNnZ2JtOWtaU3dnWENKelkzSnBjSFJjSWlBcElDazdYRzVjZEZ4MFhIUmNkRngwZlZ4dVhIUmNkRngwWEhSOVhHNWNibHgwWEhSY2RGeDBZMkZzYkdKaFkyc3VZMkZzYkNnZ1kyOXNiR1ZqZEdsdmJsc2dhU0JkTENCdWIyUmxMQ0JwSUNrN1hHNWNkRngwWEhSOVhHNWNibHgwWEhSY2RHbG1JQ2dnYUdGelUyTnlhWEIwY3lBcElIdGNibHgwWEhSY2RGeDBaRzlqSUQwZ2MyTnlhWEIwYzFzZ2MyTnlhWEIwY3k1c1pXNW5kR2dnTFNBeElGMHViM2R1WlhKRWIyTjFiV1Z1ZER0Y2JseHVYSFJjZEZ4MFhIUXZMeUJTWldWdVlXSnNaU0J6WTNKcGNIUnpYRzVjZEZ4MFhIUmNkR3BSZFdWeWVTNXRZWEFvSUhOamNtbHdkSE1zSUhKbGMzUnZjbVZUWTNKcGNIUWdLVHRjYmx4dVhIUmNkRngwWEhRdkx5QkZkbUZzZFdGMFpTQmxlR1ZqZFhSaFlteGxJSE5qY21sd2RITWdiMjRnWm1seWMzUWdaRzlqZFcxbGJuUWdhVzV6WlhKMGFXOXVYRzVjZEZ4MFhIUmNkR1p2Y2lBb0lHa2dQU0F3T3lCcElEd2dhR0Z6VTJOeWFYQjBjenNnYVNzcklDa2dlMXh1WEhSY2RGeDBYSFJjZEc1dlpHVWdQU0J6WTNKcGNIUnpXeUJwSUYwN1hHNWNkRngwWEhSY2RGeDBhV1lnS0NCeWMyTnlhWEIwVkhsd1pTNTBaWE4wS0NCdWIyUmxMblI1Y0dVZ2ZId2dYQ0pjSWlBcElDWW1YRzVjZEZ4MFhIUmNkRngwWEhRaFpHRjBZVkJ5YVhZdVlXTmpaWE56S0NCdWIyUmxMQ0JjSW1kc2IySmhiRVYyWVd4Y0lpQXBJQ1ltWEc1Y2RGeDBYSFJjZEZ4MFhIUnFVWFZsY25rdVkyOXVkR0ZwYm5Nb0lHUnZZeXdnYm05a1pTQXBJQ2tnZTF4dVhHNWNkRngwWEhSY2RGeDBYSFJwWmlBb0lHNXZaR1V1YzNKaklDWW1JQ2dnYm05a1pTNTBlWEJsSUh4OElGd2lYQ0lnS1M1MGIweHZkMlZ5UTJGelpTZ3BJQ0FoUFQwZ1hDSnRiMlIxYkdWY0lpQXBJSHRjYmx4dVhIUmNkRngwWEhSY2RGeDBYSFF2THlCUGNIUnBiMjVoYkNCQlNrRllJR1JsY0dWdVpHVnVZM2tzSUdKMWRDQjNiMjRuZENCeWRXNGdjMk55YVhCMGN5QnBaaUJ1YjNRZ2NISmxjMlZ1ZEZ4dVhIUmNkRngwWEhSY2RGeDBYSFJwWmlBb0lHcFJkV1Z5ZVM1ZlpYWmhiRlZ5YkNBbUppQWhibTlrWlM1dWIwMXZaSFZzWlNBcElIdGNibHgwWEhSY2RGeDBYSFJjZEZ4MFhIUnFVWFZsY25rdVgyVjJZV3hWY213b0lHNXZaR1V1YzNKakxDQjdYRzVjZEZ4MFhIUmNkRngwWEhSY2RGeDBYSFJ1YjI1alpUb2dibTlrWlM1dWIyNWpaU0I4ZkNCdWIyUmxMbWRsZEVGMGRISnBZblYwWlNnZ1hDSnViMjVqWlZ3aUlDbGNibHgwWEhSY2RGeDBYSFJjZEZ4MFhIUjlMQ0JrYjJNZ0tUdGNibHgwWEhSY2RGeDBYSFJjZEZ4MGZWeHVYSFJjZEZ4MFhIUmNkRngwZlNCbGJITmxJSHRjYmx4dVhIUmNkRngwWEhSY2RGeDBYSFF2THlCVmJuZHlZWEFnWVNCRFJFRlVRU0J6WldOMGFXOXVJR052Ym5SaGFXNXBibWNnYzJOeWFYQjBJR052Ym5SbGJuUnpMaUJVYUdseklITm9iM1ZzWkc0bmRDQmlaVnh1WEhSY2RGeDBYSFJjZEZ4MFhIUXZMeUJ1WldWa1pXUWdZWE1nYVc0Z1dFMU1JR1J2WTNWdFpXNTBjeUIwYUdWNUozSmxJR0ZzY21WaFpIa2dibTkwSUhacGMybGliR1VnZDJobGJseHVYSFJjZEZ4MFhIUmNkRngwWEhRdkx5QnBibk53WldOMGFXNW5JR1ZzWlcxbGJuUWdZMjl1ZEdWdWRITWdZVzVrSUdsdUlFaFVUVXdnWkc5amRXMWxiblJ6SUhSb1pYa2dhR0YyWlNCdWIxeHVYSFJjZEZ4MFhIUmNkRngwWEhRdkx5QnRaV0Z1YVc1bklHSjFkQ0IzWlNkeVpTQndjbVZ6WlhKMmFXNW5JSFJvWVhRZ2JHOW5hV01nWm05eUlHSmhZMnQzWVhKa2N5QmpiMjF3WVhScFltbHNhWFI1TGx4dVhIUmNkRngwWEhSY2RGeDBYSFF2THlCVWFHbHpJSGRwYkd3Z1ltVWdjbVZ0YjNabFpDQmpiMjF3YkdWMFpXeDVJR2x1SURRdU1DNGdVMlZsSUdkb0xUUTVNRFF1WEc1Y2RGeDBYSFJjZEZ4MFhIUmNkRVJQVFVWMllXd29JRzV2WkdVdWRHVjRkRU52Ym5SbGJuUXVjbVZ3YkdGalpTZ2djbU5zWldGdVUyTnlhWEIwTENCY0lsd2lJQ2tzSUc1dlpHVXNJR1J2WXlBcE8xeHVYSFJjZEZ4MFhIUmNkRngwZlZ4dVhIUmNkRngwWEhSY2RIMWNibHgwWEhSY2RGeDBmVnh1WEhSY2RGeDBmVnh1WEhSY2RIMWNibHgwZlZ4dVhHNWNkSEpsZEhWeWJpQmpiMnhzWldOMGFXOXVPMXh1ZlZ4dVhHNW1kVzVqZEdsdmJpQnlaVzF2ZG1Vb0lHVnNaVzBzSUhObGJHVmpkRzl5TENCclpXVndSR0YwWVNBcElIdGNibHgwZG1GeUlHNXZaR1VzWEc1Y2RGeDBibTlrWlhNZ1BTQnpaV3hsWTNSdmNpQS9JR3BSZFdWeWVTNW1hV3gwWlhJb0lITmxiR1ZqZEc5eUxDQmxiR1Z0SUNrZ09pQmxiR1Z0TEZ4dVhIUmNkR2tnUFNBd08xeHVYRzVjZEdadmNpQW9JRHNnS0NCdWIyUmxJRDBnYm05a1pYTmJJR2tnWFNBcElDRTlJRzUxYkd3N0lHa3JLeUFwSUh0Y2JseDBYSFJwWmlBb0lDRnJaV1Z3UkdGMFlTQW1KaUJ1YjJSbExtNXZaR1ZVZVhCbElEMDlQU0F4SUNrZ2UxeHVYSFJjZEZ4MGFsRjFaWEo1TG1Oc1pXRnVSR0YwWVNnZ1oyVjBRV3hzS0NCdWIyUmxJQ2tnS1R0Y2JseDBYSFI5WEc1Y2JseDBYSFJwWmlBb0lHNXZaR1V1Y0dGeVpXNTBUbTlrWlNBcElIdGNibHgwWEhSY2RHbG1JQ2dnYTJWbGNFUmhkR0VnSmlZZ2FYTkJkSFJoWTJobFpDZ2dibTlrWlNBcElDa2dlMXh1WEhSY2RGeDBYSFJ6WlhSSGJHOWlZV3hGZG1Gc0tDQm5aWFJCYkd3b0lHNXZaR1VzSUZ3aWMyTnlhWEIwWENJZ0tTQXBPMXh1WEhSY2RGeDBmVnh1WEhSY2RGeDBibTlrWlM1d1lYSmxiblJPYjJSbExuSmxiVzkyWlVOb2FXeGtLQ0J1YjJSbElDazdYRzVjZEZ4MGZWeHVYSFI5WEc1Y2JseDBjbVYwZFhKdUlHVnNaVzA3WEc1OVhHNWNibXBSZFdWeWVTNWxlSFJsYm1Rb0lIdGNibHgwYUhSdGJGQnlaV1pwYkhSbGNqb2dablZ1WTNScGIyNG9JR2gwYld3Z0tTQjdYRzVjZEZ4MGNtVjBkWEp1SUdoMGJXdzdYRzVjZEgwc1hHNWNibHgwWTJ4dmJtVTZJR1oxYm1OMGFXOXVLQ0JsYkdWdExDQmtZWFJoUVc1a1JYWmxiblJ6TENCa1pXVndSR0YwWVVGdVpFVjJaVzUwY3lBcElIdGNibHgwWEhSMllYSWdhU3dnYkN3Z2MzSmpSV3hsYldWdWRITXNJR1JsYzNSRmJHVnRaVzUwY3l4Y2JseDBYSFJjZEdOc2IyNWxJRDBnWld4bGJTNWpiRzl1WlU1dlpHVW9JSFJ5ZFdVZ0tTeGNibHgwWEhSY2RHbHVVR0ZuWlNBOUlHbHpRWFIwWVdOb1pXUW9JR1ZzWlcwZ0tUdGNibHh1WEhSY2RDOHZJRVpwZUNCSlJTQmpiRzl1YVc1bklHbHpjM1ZsYzF4dVhIUmNkR2xtSUNnZ0lYTjFjSEJ2Y25RdWJtOURiRzl1WlVOb1pXTnJaV1FnSmlZZ0tDQmxiR1Z0TG01dlpHVlVlWEJsSUQwOVBTQXhJSHg4SUdWc1pXMHVibTlrWlZSNWNHVWdQVDA5SURFeElDa2dKaVpjYmx4MFhIUmNkRngwSVdwUmRXVnllUzVwYzFoTlRFUnZZeWdnWld4bGJTQXBJQ2tnZTF4dVhHNWNkRngwWEhRdkx5QlhaU0JsYzJOb1pYY2dVMmw2ZW14bElHaGxjbVVnWm05eUlIQmxjbVp2Y20xaGJtTmxJSEpsWVhOdmJuTTZJR2gwZEhCek9pOHZhbk53WlhKbUxtTnZiUzluWlhSaGJHd3Rkbk10YzJsNmVteGxMekpjYmx4MFhIUmNkR1JsYzNSRmJHVnRaVzUwY3lBOUlHZGxkRUZzYkNnZ1kyeHZibVVnS1R0Y2JseDBYSFJjZEhOeVkwVnNaVzFsYm5SeklEMGdaMlYwUVd4c0tDQmxiR1Z0SUNrN1hHNWNibHgwWEhSY2RHWnZjaUFvSUdrZ1BTQXdMQ0JzSUQwZ2MzSmpSV3hsYldWdWRITXViR1Z1WjNSb095QnBJRHdnYkRzZ2FTc3JJQ2tnZTF4dVhIUmNkRngwWEhSbWFYaEpibkIxZENnZ2MzSmpSV3hsYldWdWRITmJJR2tnWFN3Z1pHVnpkRVZzWlcxbGJuUnpXeUJwSUYwZ0tUdGNibHgwWEhSY2RIMWNibHgwWEhSOVhHNWNibHgwWEhRdkx5QkRiM0I1SUhSb1pTQmxkbVZ1ZEhNZ1puSnZiU0IwYUdVZ2IzSnBaMmx1WVd3Z2RHOGdkR2hsSUdOc2IyNWxYRzVjZEZ4MGFXWWdLQ0JrWVhSaFFXNWtSWFpsYm5SeklDa2dlMXh1WEhSY2RGeDBhV1lnS0NCa1pXVndSR0YwWVVGdVpFVjJaVzUwY3lBcElIdGNibHgwWEhSY2RGeDBjM0pqUld4bGJXVnVkSE1nUFNCemNtTkZiR1Z0Wlc1MGN5QjhmQ0JuWlhSQmJHd29JR1ZzWlcwZ0tUdGNibHgwWEhSY2RGeDBaR1Z6ZEVWc1pXMWxiblJ6SUQwZ1pHVnpkRVZzWlcxbGJuUnpJSHg4SUdkbGRFRnNiQ2dnWTJ4dmJtVWdLVHRjYmx4dVhIUmNkRngwWEhSbWIzSWdLQ0JwSUQwZ01Dd2diQ0E5SUhOeVkwVnNaVzFsYm5SekxteGxibWQwYURzZ2FTQThJR3c3SUdrckt5QXBJSHRjYmx4MFhIUmNkRngwWEhSamJHOXVaVU52Y0hsRmRtVnVkQ2dnYzNKalJXeGxiV1Z1ZEhOYklHa2dYU3dnWkdWemRFVnNaVzFsYm5Seld5QnBJRjBnS1R0Y2JseDBYSFJjZEZ4MGZWeHVYSFJjZEZ4MGZTQmxiSE5sSUh0Y2JseDBYSFJjZEZ4MFkyeHZibVZEYjNCNVJYWmxiblFvSUdWc1pXMHNJR05zYjI1bElDazdYRzVjZEZ4MFhIUjlYRzVjZEZ4MGZWeHVYRzVjZEZ4MEx5OGdVSEpsYzJWeWRtVWdjMk55YVhCMElHVjJZV3gxWVhScGIyNGdhR2x6ZEc5eWVWeHVYSFJjZEdSbGMzUkZiR1Z0Wlc1MGN5QTlJR2RsZEVGc2JDZ2dZMnh2Ym1Vc0lGd2ljMk55YVhCMFhDSWdLVHRjYmx4MFhIUnBaaUFvSUdSbGMzUkZiR1Z0Wlc1MGN5NXNaVzVuZEdnZ1BpQXdJQ2tnZTF4dVhIUmNkRngwYzJWMFIyeHZZbUZzUlhaaGJDZ2daR1Z6ZEVWc1pXMWxiblJ6TENBaGFXNVFZV2RsSUNZbUlHZGxkRUZzYkNnZ1pXeGxiU3dnWENKelkzSnBjSFJjSWlBcElDazdYRzVjZEZ4MGZWeHVYRzVjZEZ4MEx5OGdVbVYwZFhKdUlIUm9aU0JqYkc5dVpXUWdjMlYwWEc1Y2RGeDBjbVYwZFhKdUlHTnNiMjVsTzF4dVhIUjlMRnh1WEc1Y2RHTnNaV0Z1UkdGMFlUb2dablZ1WTNScGIyNG9JR1ZzWlcxeklDa2dlMXh1WEhSY2RIWmhjaUJrWVhSaExDQmxiR1Z0TENCMGVYQmxMRnh1WEhSY2RGeDBjM0JsWTJsaGJDQTlJR3BSZFdWeWVTNWxkbVZ1ZEM1emNHVmphV0ZzTEZ4dVhIUmNkRngwYVNBOUlEQTdYRzVjYmx4MFhIUm1iM0lnS0NBN0lDZ2daV3hsYlNBOUlHVnNaVzF6V3lCcElGMGdLU0FoUFQwZ2RXNWtaV1pwYm1Wa095QnBLeXNnS1NCN1hHNWNkRngwWEhScFppQW9JR0ZqWTJWd2RFUmhkR0VvSUdWc1pXMGdLU0FwSUh0Y2JseDBYSFJjZEZ4MGFXWWdLQ0FvSUdSaGRHRWdQU0JsYkdWdFd5QmtZWFJoVUhKcGRpNWxlSEJoYm1SdklGMGdLU0FwSUh0Y2JseDBYSFJjZEZ4MFhIUnBaaUFvSUdSaGRHRXVaWFpsYm5SeklDa2dlMXh1WEhSY2RGeDBYSFJjZEZ4MFptOXlJQ2dnZEhsd1pTQnBiaUJrWVhSaExtVjJaVzUwY3lBcElIdGNibHgwWEhSY2RGeDBYSFJjZEZ4MGFXWWdLQ0J6Y0dWamFXRnNXeUIwZVhCbElGMGdLU0I3WEc1Y2RGeDBYSFJjZEZ4MFhIUmNkRngwYWxGMVpYSjVMbVYyWlc1MExuSmxiVzkyWlNnZ1pXeGxiU3dnZEhsd1pTQXBPMXh1WEc1Y2RGeDBYSFJjZEZ4MFhIUmNkQzh2SUZSb2FYTWdhWE1nWVNCemFHOXlkR04xZENCMGJ5QmhkbTlwWkNCcVVYVmxjbmt1WlhabGJuUXVjbVZ0YjNabEozTWdiM1psY21obFlXUmNibHgwWEhSY2RGeDBYSFJjZEZ4MGZTQmxiSE5sSUh0Y2JseDBYSFJjZEZ4MFhIUmNkRngwWEhScVVYVmxjbmt1Y21WdGIzWmxSWFpsYm5Rb0lHVnNaVzBzSUhSNWNHVXNJR1JoZEdFdWFHRnVaR3hsSUNrN1hHNWNkRngwWEhSY2RGeDBYSFJjZEgxY2JseDBYSFJjZEZ4MFhIUmNkSDFjYmx4MFhIUmNkRngwWEhSOVhHNWNibHgwWEhSY2RGeDBYSFF2THlCVGRYQndiM0owT2lCRGFISnZiV1VnUEQwek5TQXRJRFExSzF4dVhIUmNkRngwWEhSY2RDOHZJRUZ6YzJsbmJpQjFibVJsWm1sdVpXUWdhVzV6ZEdWaFpDQnZaaUIxYzJsdVp5QmtaV3hsZEdVc0lITmxaU0JFWVhSaEkzSmxiVzkyWlZ4dVhIUmNkRngwWEhSY2RHVnNaVzFiSUdSaGRHRlFjbWwyTG1WNGNHRnVaRzhnWFNBOUlIVnVaR1ZtYVc1bFpEdGNibHgwWEhSY2RGeDBmVnh1WEhSY2RGeDBYSFJwWmlBb0lHVnNaVzFiSUdSaGRHRlZjMlZ5TG1WNGNHRnVaRzhnWFNBcElIdGNibHh1WEhSY2RGeDBYSFJjZEM4dklGTjFjSEJ2Y25RNklFTm9jbTl0WlNBOFBUTTFJQzBnTkRVclhHNWNkRngwWEhSY2RGeDBMeThnUVhOemFXZHVJSFZ1WkdWbWFXNWxaQ0JwYm5OMFpXRmtJRzltSUhWemFXNW5JR1JsYkdWMFpTd2djMlZsSUVSaGRHRWpjbVZ0YjNabFhHNWNkRngwWEhSY2RGeDBaV3hsYlZzZ1pHRjBZVlZ6WlhJdVpYaHdZVzVrYnlCZElEMGdkVzVrWldacGJtVmtPMXh1WEhSY2RGeDBYSFI5WEc1Y2RGeDBYSFI5WEc1Y2RGeDBmVnh1WEhSOVhHNTlJQ2s3WEc1Y2JtcFJkV1Z5ZVM1bWJpNWxlSFJsYm1Rb0lIdGNibHgwWkdWMFlXTm9PaUJtZFc1amRHbHZiaWdnYzJWc1pXTjBiM0lnS1NCN1hHNWNkRngwY21WMGRYSnVJSEpsYlc5MlpTZ2dkR2hwY3l3Z2MyVnNaV04wYjNJc0lIUnlkV1VnS1R0Y2JseDBmU3hjYmx4dVhIUnlaVzF2ZG1VNklHWjFibU4wYVc5dUtDQnpaV3hsWTNSdmNpQXBJSHRjYmx4MFhIUnlaWFIxY200Z2NtVnRiM1psS0NCMGFHbHpMQ0J6Wld4bFkzUnZjaUFwTzF4dVhIUjlMRnh1WEc1Y2RIUmxlSFE2SUdaMWJtTjBhVzl1S0NCMllXeDFaU0FwSUh0Y2JseDBYSFJ5WlhSMWNtNGdZV05qWlhOektDQjBhR2x6TENCbWRXNWpkR2x2YmlnZ2RtRnNkV1VnS1NCN1hHNWNkRngwWEhSeVpYUjFjbTRnZG1Gc2RXVWdQVDA5SUhWdVpHVm1hVzVsWkNBL1hHNWNkRngwWEhSY2RHcFJkV1Z5ZVM1MFpYaDBLQ0IwYUdseklDa2dPbHh1WEhSY2RGeDBYSFIwYUdsekxtVnRjSFI1S0NrdVpXRmphQ2dnWm5WdVkzUnBiMjRvS1NCN1hHNWNkRngwWEhSY2RGeDBhV1lnS0NCMGFHbHpMbTV2WkdWVWVYQmxJRDA5UFNBeElIeDhJSFJvYVhNdWJtOWtaVlI1Y0dVZ1BUMDlJREV4SUh4OElIUm9hWE11Ym05a1pWUjVjR1VnUFQwOUlEa2dLU0I3WEc1Y2RGeDBYSFJjZEZ4MFhIUjBhR2x6TG5SbGVIUkRiMjUwWlc1MElEMGdkbUZzZFdVN1hHNWNkRngwWEhSY2RGeDBmVnh1WEhSY2RGeDBYSFI5SUNrN1hHNWNkRngwZlN3Z2JuVnNiQ3dnZG1Gc2RXVXNJR0Z5WjNWdFpXNTBjeTVzWlc1bmRHZ2dLVHRjYmx4MGZTeGNibHh1WEhSaGNIQmxibVE2SUdaMWJtTjBhVzl1S0NrZ2UxeHVYSFJjZEhKbGRIVnliaUJrYjIxTllXNXBjQ2dnZEdocGN5d2dZWEpuZFcxbGJuUnpMQ0JtZFc1amRHbHZiaWdnWld4bGJTQXBJSHRjYmx4MFhIUmNkR2xtSUNnZ2RHaHBjeTV1YjJSbFZIbHdaU0E5UFQwZ01TQjhmQ0IwYUdsekxtNXZaR1ZVZVhCbElEMDlQU0F4TVNCOGZDQjBhR2x6TG01dlpHVlVlWEJsSUQwOVBTQTVJQ2tnZTF4dVhIUmNkRngwWEhSMllYSWdkR0Z5WjJWMElEMGdiV0Z1YVhCMWJHRjBhVzl1VkdGeVoyVjBLQ0IwYUdsekxDQmxiR1Z0SUNrN1hHNWNkRngwWEhSY2RIUmhjbWRsZEM1aGNIQmxibVJEYUdsc1pDZ2daV3hsYlNBcE8xeHVYSFJjZEZ4MGZWeHVYSFJjZEgwZ0tUdGNibHgwZlN4Y2JseHVYSFJ3Y21Wd1pXNWtPaUJtZFc1amRHbHZiaWdwSUh0Y2JseDBYSFJ5WlhSMWNtNGdaRzl0VFdGdWFYQW9JSFJvYVhNc0lHRnlaM1Z0Wlc1MGN5d2dablZ1WTNScGIyNG9JR1ZzWlcwZ0tTQjdYRzVjZEZ4MFhIUnBaaUFvSUhSb2FYTXVibTlrWlZSNWNHVWdQVDA5SURFZ2ZId2dkR2hwY3k1dWIyUmxWSGx3WlNBOVBUMGdNVEVnZkh3Z2RHaHBjeTV1YjJSbFZIbHdaU0E5UFQwZ09TQXBJSHRjYmx4MFhIUmNkRngwZG1GeUlIUmhjbWRsZENBOUlHMWhibWx3ZFd4aGRHbHZibFJoY21kbGRDZ2dkR2hwY3l3Z1pXeGxiU0FwTzF4dVhIUmNkRngwWEhSMFlYSm5aWFF1YVc1elpYSjBRbVZtYjNKbEtDQmxiR1Z0TENCMFlYSm5aWFF1Wm1seWMzUkRhR2xzWkNBcE8xeHVYSFJjZEZ4MGZWeHVYSFJjZEgwZ0tUdGNibHgwZlN4Y2JseHVYSFJpWldadmNtVTZJR1oxYm1OMGFXOXVLQ2tnZTF4dVhIUmNkSEpsZEhWeWJpQmtiMjFOWVc1cGNDZ2dkR2hwY3l3Z1lYSm5kVzFsYm5SekxDQm1kVzVqZEdsdmJpZ2daV3hsYlNBcElIdGNibHgwWEhSY2RHbG1JQ2dnZEdocGN5NXdZWEpsYm5ST2IyUmxJQ2tnZTF4dVhIUmNkRngwWEhSMGFHbHpMbkJoY21WdWRFNXZaR1V1YVc1elpYSjBRbVZtYjNKbEtDQmxiR1Z0TENCMGFHbHpJQ2s3WEc1Y2RGeDBYSFI5WEc1Y2RGeDBmU0FwTzF4dVhIUjlMRnh1WEc1Y2RHRm1kR1Z5T2lCbWRXNWpkR2x2YmlncElIdGNibHgwWEhSeVpYUjFjbTRnWkc5dFRXRnVhWEFvSUhSb2FYTXNJR0Z5WjNWdFpXNTBjeXdnWm5WdVkzUnBiMjRvSUdWc1pXMGdLU0I3WEc1Y2RGeDBYSFJwWmlBb0lIUm9hWE11Y0dGeVpXNTBUbTlrWlNBcElIdGNibHgwWEhSY2RGeDBkR2hwY3k1d1lYSmxiblJPYjJSbExtbHVjMlZ5ZEVKbFptOXlaU2dnWld4bGJTd2dkR2hwY3k1dVpYaDBVMmxpYkdsdVp5QXBPMXh1WEhSY2RGeDBmVnh1WEhSY2RIMGdLVHRjYmx4MGZTeGNibHh1WEhSbGJYQjBlVG9nWm5WdVkzUnBiMjRvS1NCN1hHNWNkRngwZG1GeUlHVnNaVzBzWEc1Y2RGeDBYSFJwSUQwZ01EdGNibHh1WEhSY2RHWnZjaUFvSURzZ0tDQmxiR1Z0SUQwZ2RHaHBjMXNnYVNCZElDa2dJVDBnYm5Wc2JEc2dhU3NySUNrZ2UxeHVYSFJjZEZ4MGFXWWdLQ0JsYkdWdExtNXZaR1ZVZVhCbElEMDlQU0F4SUNrZ2UxeHVYRzVjZEZ4MFhIUmNkQzh2SUZCeVpYWmxiblFnYldWdGIzSjVJR3hsWVd0elhHNWNkRngwWEhSY2RHcFJkV1Z5ZVM1amJHVmhia1JoZEdFb0lHZGxkRUZzYkNnZ1pXeGxiU3dnWm1Gc2MyVWdLU0FwTzF4dVhHNWNkRngwWEhSY2RDOHZJRkpsYlc5MlpTQmhibmtnY21WdFlXbHVhVzVuSUc1dlpHVnpYRzVjZEZ4MFhIUmNkR1ZzWlcwdWRHVjRkRU52Ym5SbGJuUWdQU0JjSWx3aU8xeHVYSFJjZEZ4MGZWeHVYSFJjZEgxY2JseHVYSFJjZEhKbGRIVnliaUIwYUdsek8xeHVYSFI5TEZ4dVhHNWNkR05zYjI1bE9pQm1kVzVqZEdsdmJpZ2daR0YwWVVGdVpFVjJaVzUwY3l3Z1pHVmxjRVJoZEdGQmJtUkZkbVZ1ZEhNZ0tTQjdYRzVjZEZ4MFpHRjBZVUZ1WkVWMlpXNTBjeUE5SUdSaGRHRkJibVJGZG1WdWRITWdQVDBnYm5Wc2JDQS9JR1poYkhObElEb2daR0YwWVVGdVpFVjJaVzUwY3p0Y2JseDBYSFJrWldWd1JHRjBZVUZ1WkVWMlpXNTBjeUE5SUdSbFpYQkVZWFJoUVc1a1JYWmxiblJ6SUQwOUlHNTFiR3dnUHlCa1lYUmhRVzVrUlhabGJuUnpJRG9nWkdWbGNFUmhkR0ZCYm1SRmRtVnVkSE03WEc1Y2JseDBYSFJ5WlhSMWNtNGdkR2hwY3k1dFlYQW9JR1oxYm1OMGFXOXVLQ2tnZTF4dVhIUmNkRngwY21WMGRYSnVJR3BSZFdWeWVTNWpiRzl1WlNnZ2RHaHBjeXdnWkdGMFlVRnVaRVYyWlc1MGN5d2daR1ZsY0VSaGRHRkJibVJGZG1WdWRITWdLVHRjYmx4MFhIUjlJQ2s3WEc1Y2RIMHNYRzVjYmx4MGFIUnRiRG9nWm5WdVkzUnBiMjRvSUhaaGJIVmxJQ2tnZTF4dVhIUmNkSEpsZEhWeWJpQmhZMk5sYzNNb0lIUm9hWE1zSUdaMWJtTjBhVzl1S0NCMllXeDFaU0FwSUh0Y2JseDBYSFJjZEhaaGNpQmxiR1Z0SUQwZ2RHaHBjMXNnTUNCZElIeDhJSHQ5TEZ4dVhIUmNkRngwWEhScElEMGdNQ3hjYmx4MFhIUmNkRngwYkNBOUlIUm9hWE11YkdWdVozUm9PMXh1WEc1Y2RGeDBYSFJwWmlBb0lIWmhiSFZsSUQwOVBTQjFibVJsWm1sdVpXUWdKaVlnWld4bGJTNXViMlJsVkhsd1pTQTlQVDBnTVNBcElIdGNibHgwWEhSY2RGeDBjbVYwZFhKdUlHVnNaVzB1YVc1dVpYSklWRTFNTzF4dVhIUmNkRngwZlZ4dVhHNWNkRngwWEhRdkx5QlRaV1VnYVdZZ2QyVWdZMkZ1SUhSaGEyVWdZU0J6YUc5eWRHTjFkQ0JoYm1RZ2FuVnpkQ0IxYzJVZ2FXNXVaWEpJVkUxTVhHNWNkRngwWEhScFppQW9JSFI1Y0dWdlppQjJZV3gxWlNBOVBUMGdYQ0p6ZEhKcGJtZGNJaUFtSmlBaGNtNXZTVzV1WlhKb2RHMXNMblJsYzNRb0lIWmhiSFZsSUNrZ0ppWmNibHgwWEhSY2RGeDBJWGR5WVhCTllYQmJJQ2dnY25SaFowNWhiV1V1WlhobFl5Z2dkbUZzZFdVZ0tTQjhmQ0JiSUZ3aVhDSXNJRndpWENJZ1hTQXBXeUF4SUYwdWRHOU1iM2RsY2tOaGMyVW9LU0JkSUNrZ2UxeHVYRzVjZEZ4MFhIUmNkSFpoYkhWbElEMGdhbEYxWlhKNUxtaDBiV3hRY21WbWFXeDBaWElvSUhaaGJIVmxJQ2s3WEc1Y2JseDBYSFJjZEZ4MGRISjVJSHRjYmx4MFhIUmNkRngwWEhSbWIzSWdLQ0E3SUdrZ1BDQnNPeUJwS3lzZ0tTQjdYRzVjZEZ4MFhIUmNkRngwWEhSbGJHVnRJRDBnZEdocGMxc2dhU0JkSUh4OElIdDlPMXh1WEc1Y2RGeDBYSFJjZEZ4MFhIUXZMeUJTWlcxdmRtVWdaV3hsYldWdWRDQnViMlJsY3lCaGJtUWdjSEpsZG1WdWRDQnRaVzF2Y25rZ2JHVmhhM05jYmx4MFhIUmNkRngwWEhSY2RHbG1JQ2dnWld4bGJTNXViMlJsVkhsd1pTQTlQVDBnTVNBcElIdGNibHgwWEhSY2RGeDBYSFJjZEZ4MGFsRjFaWEo1TG1Oc1pXRnVSR0YwWVNnZ1oyVjBRV3hzS0NCbGJHVnRMQ0JtWVd4elpTQXBJQ2s3WEc1Y2RGeDBYSFJjZEZ4MFhIUmNkR1ZzWlcwdWFXNXVaWEpJVkUxTUlEMGdkbUZzZFdVN1hHNWNkRngwWEhSY2RGeDBYSFI5WEc1Y2RGeDBYSFJjZEZ4MGZWeHVYRzVjZEZ4MFhIUmNkRngwWld4bGJTQTlJREE3WEc1Y2JseDBYSFJjZEZ4MEx5OGdTV1lnZFhOcGJtY2dhVzV1WlhKSVZFMU1JSFJvY205M2N5QmhiaUJsZUdObGNIUnBiMjRzSUhWelpTQjBhR1VnWm1Gc2JHSmhZMnNnYldWMGFHOWtYRzVjZEZ4MFhIUmNkSDBnWTJGMFkyZ2dLQ0JsSUNrZ2UzMWNibHgwWEhSY2RIMWNibHh1WEhSY2RGeDBhV1lnS0NCbGJHVnRJQ2tnZTF4dVhIUmNkRngwWEhSMGFHbHpMbVZ0Y0hSNUtDa3VZWEJ3Wlc1a0tDQjJZV3gxWlNBcE8xeHVYSFJjZEZ4MGZWeHVYSFJjZEgwc0lHNTFiR3dzSUhaaGJIVmxMQ0JoY21kMWJXVnVkSE11YkdWdVozUm9JQ2s3WEc1Y2RIMHNYRzVjYmx4MGNtVndiR0ZqWlZkcGRHZzZJR1oxYm1OMGFXOXVLQ2tnZTF4dVhIUmNkSFpoY2lCcFoyNXZjbVZrSUQwZ1cxMDdYRzVjYmx4MFhIUXZMeUJOWVd0bElIUm9aU0JqYUdGdVoyVnpMQ0J5WlhCc1lXTnBibWNnWldGamFDQnViMjR0YVdkdWIzSmxaQ0JqYjI1MFpYaDBJR1ZzWlcxbGJuUWdkMmwwYUNCMGFHVWdibVYzSUdOdmJuUmxiblJjYmx4MFhIUnlaWFIxY200Z1pHOXRUV0Z1YVhBb0lIUm9hWE1zSUdGeVozVnRaVzUwY3l3Z1puVnVZM1JwYjI0b0lHVnNaVzBnS1NCN1hHNWNkRngwWEhSMllYSWdjR0Z5Wlc1MElEMGdkR2hwY3k1d1lYSmxiblJPYjJSbE8xeHVYRzVjZEZ4MFhIUnBaaUFvSUdwUmRXVnllUzVwYmtGeWNtRjVLQ0IwYUdsekxDQnBaMjV2Y21Wa0lDa2dQQ0F3SUNrZ2UxeHVYSFJjZEZ4MFhIUnFVWFZsY25rdVkyeGxZVzVFWVhSaEtDQm5aWFJCYkd3b0lIUm9hWE1nS1NBcE8xeHVYSFJjZEZ4MFhIUnBaaUFvSUhCaGNtVnVkQ0FwSUh0Y2JseDBYSFJjZEZ4MFhIUndZWEpsYm5RdWNtVndiR0ZqWlVOb2FXeGtLQ0JsYkdWdExDQjBhR2x6SUNrN1hHNWNkRngwWEhSY2RIMWNibHgwWEhSY2RIMWNibHh1WEhSY2RDOHZJRVp2Y21ObElHTmhiR3hpWVdOcklHbHVkbTlqWVhScGIyNWNibHgwWEhSOUxDQnBaMjV2Y21Wa0lDazdYRzVjZEgxY2JuMGdLVHRjYmx4dWFsRjFaWEo1TG1WaFkyZ29JSHRjYmx4MFlYQndaVzVrVkc4NklGd2lZWEJ3Wlc1a1hDSXNYRzVjZEhCeVpYQmxibVJVYnpvZ1hDSndjbVZ3Wlc1a1hDSXNYRzVjZEdsdWMyVnlkRUpsWm05eVpUb2dYQ0ppWldadmNtVmNJaXhjYmx4MGFXNXpaWEowUVdaMFpYSTZJRndpWVdaMFpYSmNJaXhjYmx4MGNtVndiR0ZqWlVGc2JEb2dYQ0p5WlhCc1lXTmxWMmwwYUZ3aVhHNTlMQ0JtZFc1amRHbHZiaWdnYm1GdFpTd2diM0pwWjJsdVlXd2dLU0I3WEc1Y2RHcFJkV1Z5ZVM1bWJsc2dibUZ0WlNCZElEMGdablZ1WTNScGIyNG9JSE5sYkdWamRHOXlJQ2tnZTF4dVhIUmNkSFpoY2lCbGJHVnRjeXhjYmx4MFhIUmNkSEpsZENBOUlGdGRMRnh1WEhSY2RGeDBhVzV6WlhKMElEMGdhbEYxWlhKNUtDQnpaV3hsWTNSdmNpQXBMRnh1WEhSY2RGeDBiR0Z6ZENBOUlHbHVjMlZ5ZEM1c1pXNW5kR2dnTFNBeExGeHVYSFJjZEZ4MGFTQTlJREE3WEc1Y2JseDBYSFJtYjNJZ0tDQTdJR2tnUEQwZ2JHRnpkRHNnYVNzcklDa2dlMXh1WEhSY2RGeDBaV3hsYlhNZ1BTQnBJRDA5UFNCc1lYTjBJRDhnZEdocGN5QTZJSFJvYVhNdVkyeHZibVVvSUhSeWRXVWdLVHRjYmx4MFhIUmNkR3BSZFdWeWVTZ2dhVzV6WlhKMFd5QnBJRjBnS1ZzZ2IzSnBaMmx1WVd3Z1hTZ2daV3hsYlhNZ0tUdGNibHh1WEhSY2RGeDBMeThnVTNWd2NHOXlkRG9nUVc1a2NtOXBaQ0E4UFRRdU1DQnZibXg1TENCUWFHRnVkRzl0U2xNZ01TQnZibXg1WEc1Y2RGeDBYSFF2THlBdVoyVjBLQ2tnWW1WallYVnpaU0J3ZFhOb0xtRndjR3g1S0Y4c0lHRnljbUY1YkdsclpTa2dkR2h5YjNkeklHOXVJR0Z1WTJsbGJuUWdWMlZpUzJsMFhHNWNkRngwWEhSd2RYTm9MbUZ3Y0d4NUtDQnlaWFFzSUdWc1pXMXpMbWRsZENncElDazdYRzVjZEZ4MGZWeHVYRzVjZEZ4MGNtVjBkWEp1SUhSb2FYTXVjSFZ6YUZOMFlXTnJLQ0J5WlhRZ0tUdGNibHgwZlR0Y2JuMGdLVHRjYm5aaGNpQnliblZ0Ym05dWNIZ2dQU0J1WlhjZ1VtVm5SWGh3S0NCY0lsNG9YQ0lnS3lCd2JuVnRJQ3NnWENJcEtEOGhjSGdwVzJFdGVpVmRLeVJjSWl3Z1hDSnBYQ0lnS1R0Y2JseHVkbUZ5SUhKamRYTjBiMjFRY205d0lEMGdMMTR0TFM4N1hHNWNibHh1ZG1GeUlHZGxkRk4wZVd4bGN5QTlJR1oxYm1OMGFXOXVLQ0JsYkdWdElDa2dlMXh1WEc1Y2RGeDBMeThnVTNWd2NHOXlkRG9nU1VVZ1BEMHhNU0J2Ym14NUxDQkdhWEpsWm05NElEdzlNekFnS0hSeVlXTXRNVFV3T1Rnc0lIUnlZV010TVRReE5UQXBYRzVjZEZ4MEx5OGdTVVVnZEdoeWIzZHpJRzl1SUdWc1pXMWxiblJ6SUdOeVpXRjBaV1FnYVc0Z2NHOXdkWEJ6WEc1Y2RGeDBMeThnUmtZZ2JXVmhibmRvYVd4bElIUm9jbTkzY3lCdmJpQm1jbUZ0WlNCbGJHVnRaVzUwY3lCMGFISnZkV2RvSUZ3aVpHVm1ZWFZzZEZacFpYY3VaMlYwUTI5dGNIVjBaV1JUZEhsc1pWd2lYRzVjZEZ4MGRtRnlJSFpwWlhjZ1BTQmxiR1Z0TG05M2JtVnlSRzlqZFcxbGJuUXVaR1ZtWVhWc2RGWnBaWGM3WEc1Y2JseDBYSFJwWmlBb0lDRjJhV1YzSUh4OElDRjJhV1YzTG05d1pXNWxjaUFwSUh0Y2JseDBYSFJjZEhacFpYY2dQU0IzYVc1a2IzYzdYRzVjZEZ4MGZWeHVYRzVjZEZ4MGNtVjBkWEp1SUhacFpYY3VaMlYwUTI5dGNIVjBaV1JUZEhsc1pTZ2daV3hsYlNBcE8xeHVYSFI5TzF4dVhHNTJZWElnYzNkaGNDQTlJR1oxYm1OMGFXOXVLQ0JsYkdWdExDQnZjSFJwYjI1ekxDQmpZV3hzWW1GamF5QXBJSHRjYmx4MGRtRnlJSEpsZEN3Z2JtRnRaU3hjYmx4MFhIUnZiR1FnUFNCN2ZUdGNibHh1WEhRdkx5QlNaVzFsYldKbGNpQjBhR1VnYjJ4a0lIWmhiSFZsY3l3Z1lXNWtJR2x1YzJWeWRDQjBhR1VnYm1WM0lHOXVaWE5jYmx4MFptOXlJQ2dnYm1GdFpTQnBiaUJ2Y0hScGIyNXpJQ2tnZTF4dVhIUmNkRzlzWkZzZ2JtRnRaU0JkSUQwZ1pXeGxiUzV6ZEhsc1pWc2dibUZ0WlNCZE8xeHVYSFJjZEdWc1pXMHVjM1I1YkdWYklHNWhiV1VnWFNBOUlHOXdkR2x2Ym5OYklHNWhiV1VnWFR0Y2JseDBmVnh1WEc1Y2RISmxkQ0E5SUdOaGJHeGlZV05yTG1OaGJHd29JR1ZzWlcwZ0tUdGNibHh1WEhRdkx5QlNaWFpsY25RZ2RHaGxJRzlzWkNCMllXeDFaWE5jYmx4MFptOXlJQ2dnYm1GdFpTQnBiaUJ2Y0hScGIyNXpJQ2tnZTF4dVhIUmNkR1ZzWlcwdWMzUjViR1ZiSUc1aGJXVWdYU0E5SUc5c1pGc2dibUZ0WlNCZE8xeHVYSFI5WEc1Y2JseDBjbVYwZFhKdUlISmxkRHRjYm4wN1hHNWNibHh1ZG1GeUlISmliM2hUZEhsc1pTQTlJRzVsZHlCU1pXZEZlSEFvSUdOemMwVjRjR0Z1WkM1cWIybHVLQ0JjSW54Y0lpQXBMQ0JjSW1sY0lpQXBPMXh1WEc1MllYSWdkMmhwZEdWemNHRmpaU0E5SUZ3aVcxeGNYRng0TWpCY1hGeGNkRnhjWEZ4eVhGeGNYRzVjWEZ4Y1psMWNJanRjYmx4dVhHNTJZWElnY25SeWFXMURVMU1nUFNCdVpYY2dVbVZuUlhod0tGeHVYSFJjSWw1Y0lpQXJJSGRvYVhSbGMzQmhZMlVnS3lCY0lpdDhLQ2cvT2w1OFcxNWNYRnhjWEZ4Y1hGMHBLRDg2WEZ4Y1hGeGNYRnd1S1NvcFhDSWdLeUIzYUdsMFpYTndZV05sSUNzZ1hDSXJKRndpTEZ4dVhIUmNJbWRjSWx4dUtUdGNibHh1WEc1Y2JseHVLQ0JtZFc1amRHbHZiaWdwSUh0Y2JseHVYSFF2THlCRmVHVmpkWFJwYm1jZ1ltOTBhQ0J3YVhobGJGQnZjMmwwYVc5dUlDWWdZbTk0VTJsNmFXNW5VbVZzYVdGaWJHVWdkR1Z6ZEhNZ2NtVnhkV2x5WlNCdmJteDVJRzl1WlNCc1lYbHZkWFJjYmx4MEx5OGdjMjhnZEdobGVTZHlaU0JsZUdWamRYUmxaQ0JoZENCMGFHVWdjMkZ0WlNCMGFXMWxJSFJ2SUhOaGRtVWdkR2hsSUhObFkyOXVaQ0JqYjIxd2RYUmhkR2x2Ymk1Y2JseDBablZ1WTNScGIyNGdZMjl0Y0hWMFpWTjBlV3hsVkdWemRITW9LU0I3WEc1Y2JseDBYSFF2THlCVWFHbHpJR2x6SUdFZ2MybHVaMnhsZEc5dUxDQjNaU0J1WldWa0lIUnZJR1Y0WldOMWRHVWdhWFFnYjI1c2VTQnZibU5sWEc1Y2RGeDBhV1lnS0NBaFpHbDJJQ2tnZTF4dVhIUmNkRngwY21WMGRYSnVPMXh1WEhSY2RIMWNibHh1WEhSY2RHTnZiblJoYVc1bGNpNXpkSGxzWlM1amMzTlVaWGgwSUQwZ1hDSndiM05wZEdsdmJqcGhZbk52YkhWMFpUdHNaV1owT2kweE1URXhNWEI0TzNkcFpIUm9Pall3Y0hnN1hDSWdLMXh1WEhSY2RGeDBYQ0p0WVhKbmFXNHRkRzl3T2pGd2VEdHdZV1JrYVc1bk9qQTdZbTl5WkdWeU9qQmNJanRjYmx4MFhIUmthWFl1YzNSNWJHVXVZM056VkdWNGRDQTlYRzVjZEZ4MFhIUmNJbkJ2YzJsMGFXOXVPbkpsYkdGMGFYWmxPMlJwYzNCc1lYazZZbXh2WTJzN1ltOTRMWE5wZW1sdVp6cGliM0prWlhJdFltOTRPMjkyWlhKbWJHOTNPbk5qY205c2JEdGNJaUFyWEc1Y2RGeDBYSFJjSW0xaGNtZHBianBoZFhSdk8ySnZjbVJsY2pveGNIZzdjR0ZrWkdsdVp6b3hjSGc3WENJZ0sxeHVYSFJjZEZ4MFhDSjNhV1IwYURvMk1DVTdkRzl3T2pFbFhDSTdYRzVjZEZ4MFpHOWpkVzFsYm5SRmJHVnRaVzUwTG1Gd2NHVnVaRU5vYVd4a0tDQmpiMjUwWVdsdVpYSWdLUzVoY0hCbGJtUkRhR2xzWkNnZ1pHbDJJQ2s3WEc1Y2JseDBYSFIyWVhJZ1pHbDJVM1I1YkdVZ1BTQjNhVzVrYjNjdVoyVjBRMjl0Y0hWMFpXUlRkSGxzWlNnZ1pHbDJJQ2s3WEc1Y2RGeDBjR2w0Wld4UWIzTnBkR2x2YmxaaGJDQTlJR1JwZGxOMGVXeGxMblJ2Y0NBaFBUMGdYQ0l4SlZ3aU8xeHVYRzVjZEZ4MEx5OGdVM1Z3Y0c5eWREb2dRVzVrY205cFpDQTBMakFnTFNBMExqTWdiMjVzZVN3Z1JtbHlaV1p2ZUNBOFBUTWdMU0EwTkZ4dVhIUmNkSEpsYkdsaFlteGxUV0Z5WjJsdVRHVm1kRlpoYkNBOUlISnZkVzVrVUdsNFpXeE5aV0Z6ZFhKbGN5Z2daR2wyVTNSNWJHVXViV0Z5WjJsdVRHVm1kQ0FwSUQwOVBTQXhNanRjYmx4dVhIUmNkQzh2SUZOMWNIQnZjblE2SUVGdVpISnZhV1FnTkM0d0lDMGdOQzR6SUc5dWJIa3NJRk5oWm1GeWFTQThQVGt1TVNBdElERXdMakVzSUdsUFV5QThQVGN1TUNBdElEa3VNMXh1WEhSY2RDOHZJRk52YldVZ2MzUjViR1Z6SUdOdmJXVWdZbUZqYXlCM2FYUm9JSEJsY21ObGJuUmhaMlVnZG1Gc2RXVnpMQ0JsZG1WdUlIUm9iM1ZuYUNCMGFHVjVJSE5vYjNWc1pHNG5kRnh1WEhSY2RHUnBkaTV6ZEhsc1pTNXlhV2RvZENBOUlGd2lOakFsWENJN1hHNWNkRngwY0dsNFpXeENiM2hUZEhsc1pYTldZV3dnUFNCeWIzVnVaRkJwZUdWc1RXVmhjM1Z5WlhNb0lHUnBkbE4wZVd4bExuSnBaMmgwSUNrZ1BUMDlJRE0yTzF4dVhHNWNkRngwTHk4Z1UzVndjRzl5ZERvZ1NVVWdPU0F0SURFeElHOXViSGxjYmx4MFhIUXZMeUJFWlhSbFkzUWdiV2x6Y21Wd2IzSjBhVzVuSUc5bUlHTnZiblJsYm5RZ1pHbHRaVzV6YVc5dWN5Qm1iM0lnWW05NExYTnBlbWx1WnpwaWIzSmtaWEl0WW05NElHVnNaVzFsYm5SelhHNWNkRngwWW05NFUybDZhVzVuVW1Wc2FXRmliR1ZXWVd3Z1BTQnliM1Z1WkZCcGVHVnNUV1ZoYzNWeVpYTW9JR1JwZGxOMGVXeGxMbmRwWkhSb0lDa2dQVDA5SURNMk8xeHVYRzVjZEZ4MEx5OGdVM1Z3Y0c5eWREb2dTVVVnT1NCdmJteDVYRzVjZEZ4MEx5OGdSR1YwWldOMElHOTJaWEptYkc5M09uTmpjbTlzYkNCelkzSmxkMmx1WlhOeklDaG5hQzB6TmprNUtWeHVYSFJjZEM4dklGTjFjSEJ2Y25RNklFTm9jbTl0WlNBOFBUWTBYRzVjZEZ4MEx5OGdSRzl1SjNRZ1oyVjBJSFJ5YVdOclpXUWdkMmhsYmlCNmIyOXRJR0ZtWm1WamRITWdiMlptYzJWMFYybGtkR2dnS0dkb0xUUXdNamtwWEc1Y2RGeDBaR2wyTG5OMGVXeGxMbkJ2YzJsMGFXOXVJRDBnWENKaFluTnZiSFYwWlZ3aU8xeHVYSFJjZEhOamNtOXNiR0p2ZUZOcGVtVldZV3dnUFNCeWIzVnVaRkJwZUdWc1RXVmhjM1Z5WlhNb0lHUnBkaTV2Wm1aelpYUlhhV1IwYUNBdklETWdLU0E5UFQwZ01USTdYRzVjYmx4MFhIUmtiMk4xYldWdWRFVnNaVzFsYm5RdWNtVnRiM1psUTJocGJHUW9JR052Ym5SaGFXNWxjaUFwTzF4dVhHNWNkRngwTHk4Z1RuVnNiR2xtZVNCMGFHVWdaR2wySUhOdklHbDBJSGR2ZFd4a2JpZDBJR0psSUhOMGIzSmxaQ0JwYmlCMGFHVWdiV1Z0YjNKNUlHRnVaRnh1WEhSY2RDOHZJR2wwSUhkcGJHd2dZV3h6YnlCaVpTQmhJSE5wWjI0Z2RHaGhkQ0JqYUdWamEzTWdZV3h5WldGa2VTQndaWEptYjNKdFpXUmNibHgwWEhSa2FYWWdQU0J1ZFd4c08xeHVYSFI5WEc1Y2JseDBablZ1WTNScGIyNGdjbTkxYm1SUWFYaGxiRTFsWVhOMWNtVnpLQ0J0WldGemRYSmxJQ2tnZTF4dVhIUmNkSEpsZEhWeWJpQk5ZWFJvTG5KdmRXNWtLQ0J3WVhKelpVWnNiMkYwS0NCdFpXRnpkWEpsSUNrZ0tUdGNibHgwZlZ4dVhHNWNkSFpoY2lCd2FYaGxiRkJ2YzJsMGFXOXVWbUZzTENCaWIzaFRhWHBwYm1kU1pXeHBZV0pzWlZaaGJDd2djMk55YjJ4c1ltOTRVMmw2WlZaaGJDd2djR2w0Wld4Q2IzaFRkSGxzWlhOV1lXd3NYRzVjZEZ4MGNtVnNhV0ZpYkdWVWNrUnBiV1Z1YzJsdmJuTldZV3dzSUhKbGJHbGhZbXhsVFdGeVoybHVUR1ZtZEZaaGJDeGNibHgwWEhSamIyNTBZV2x1WlhJZ1BTQmtiMk4xYldWdWRDNWpjbVZoZEdWRmJHVnRaVzUwS0NCY0ltUnBkbHdpSUNrc1hHNWNkRngwWkdsMklEMGdaRzlqZFcxbGJuUXVZM0psWVhSbFJXeGxiV1Z1ZENnZ1hDSmthWFpjSWlBcE8xeHVYRzVjZEM4dklFWnBibWx6YUNCbFlYSnNlU0JwYmlCc2FXMXBkR1ZrSUNodWIyNHRZbkp2ZDNObGNpa2daVzUyYVhKdmJtMWxiblJ6WEc1Y2RHbG1JQ2dnSVdScGRpNXpkSGxzWlNBcElIdGNibHgwWEhSeVpYUjFjbTQ3WEc1Y2RIMWNibHh1WEhRdkx5QlRkWEJ3YjNKME9pQkpSU0E4UFRrZ0xTQXhNU0J2Ym14NVhHNWNkQzh2SUZOMGVXeGxJRzltSUdOc2IyNWxaQ0JsYkdWdFpXNTBJR0ZtWm1WamRITWdjMjkxY21ObElHVnNaVzFsYm5RZ1kyeHZibVZrSUNoMGNtRmpMVGc1TURncFhHNWNkR1JwZGk1emRIbHNaUzVpWVdOclozSnZkVzVrUTJ4cGNDQTlJRndpWTI5dWRHVnVkQzFpYjNoY0lqdGNibHgwWkdsMkxtTnNiMjVsVG05a1pTZ2dkSEoxWlNBcExuTjBlV3hsTG1KaFkydG5jbTkxYm1SRGJHbHdJRDBnWENKY0lqdGNibHgwYzNWd2NHOXlkQzVqYkdWaGNrTnNiMjVsVTNSNWJHVWdQU0JrYVhZdWMzUjViR1V1WW1GamEyZHliM1Z1WkVOc2FYQWdQVDA5SUZ3aVkyOXVkR1Z1ZEMxaWIzaGNJanRjYmx4dVhIUnFVWFZsY25rdVpYaDBaVzVrS0NCemRYQndiM0owTENCN1hHNWNkRngwWW05NFUybDZhVzVuVW1Wc2FXRmliR1U2SUdaMWJtTjBhVzl1S0NrZ2UxeHVYSFJjZEZ4MFkyOXRjSFYwWlZOMGVXeGxWR1Z6ZEhNb0tUdGNibHgwWEhSY2RISmxkSFZ5YmlCaWIzaFRhWHBwYm1kU1pXeHBZV0pzWlZaaGJEdGNibHgwWEhSOUxGeHVYSFJjZEhCcGVHVnNRbTk0VTNSNWJHVnpPaUJtZFc1amRHbHZiaWdwSUh0Y2JseDBYSFJjZEdOdmJYQjFkR1ZUZEhsc1pWUmxjM1J6S0NrN1hHNWNkRngwWEhSeVpYUjFjbTRnY0dsNFpXeENiM2hUZEhsc1pYTldZV3c3WEc1Y2RGeDBmU3hjYmx4MFhIUndhWGhsYkZCdmMybDBhVzl1T2lCbWRXNWpkR2x2YmlncElIdGNibHgwWEhSY2RHTnZiWEIxZEdWVGRIbHNaVlJsYzNSektDazdYRzVjZEZ4MFhIUnlaWFIxY200Z2NHbDRaV3hRYjNOcGRHbHZibFpoYkR0Y2JseDBYSFI5TEZ4dVhIUmNkSEpsYkdsaFlteGxUV0Z5WjJsdVRHVm1kRG9nWm5WdVkzUnBiMjRvS1NCN1hHNWNkRngwWEhSamIyMXdkWFJsVTNSNWJHVlVaWE4wY3lncE8xeHVYSFJjZEZ4MGNtVjBkWEp1SUhKbGJHbGhZbXhsVFdGeVoybHVUR1ZtZEZaaGJEdGNibHgwWEhSOUxGeHVYSFJjZEhOamNtOXNiR0p2ZUZOcGVtVTZJR1oxYm1OMGFXOXVLQ2tnZTF4dVhIUmNkRngwWTI5dGNIVjBaVk4wZVd4bFZHVnpkSE1vS1R0Y2JseDBYSFJjZEhKbGRIVnliaUJ6WTNKdmJHeGliM2hUYVhwbFZtRnNPMXh1WEhSY2RIMHNYRzVjYmx4MFhIUXZMeUJUZFhCd2IzSjBPaUJKUlNBNUlDMGdNVEVyTENCRlpHZGxJREUxSUMwZ01UZ3JYRzVjZEZ4MEx5OGdTVVV2UldSblpTQnRhWE55WlhCdmNuUWdZR2RsZEVOdmJYQjFkR1ZrVTNSNWJHVmdJRzltSUhSaFlteGxJSEp2ZDNNZ2QybDBhQ0IzYVdSMGFDOW9aV2xuYUhSY2JseDBYSFF2THlCelpYUWdhVzRnUTFOVElIZG9hV3hsSUdCdlptWnpaWFFxWUNCd2NtOXdaWEowYVdWeklISmxjRzl5ZENCamIzSnlaV04wSUhaaGJIVmxjeTVjYmx4MFhIUXZMeUJDWldoaGRtbHZjaUJwYmlCSlJTQTVJR2x6SUcxdmNtVWdjM1ZpZEd4bElIUm9ZVzRnYVc0Z2JtVjNaWElnZG1WeWMybHZibk1nSmlCcGRDQndZWE56WlhOY2JseDBYSFF2THlCemIyMWxJSFpsY25OcGIyNXpJRzltSUhSb2FYTWdkR1Z6ZERzZ2JXRnJaU0J6ZFhKbElHNXZkQ0IwYnlCdFlXdGxJR2wwSUhCaGMzTWdkR2hsY21VaFhHNWNkRngwTHk5Y2JseDBYSFF2THlCVGRYQndiM0owT2lCR2FYSmxabTk0SURjd0sxeHVYSFJjZEM4dklFOXViSGtnUm1seVpXWnZlQ0JwYm1Oc2RXUmxjeUJpYjNKa1pYSWdkMmxrZEdoelhHNWNkRngwTHk4Z2FXNGdZMjl0Y0hWMFpXUWdaR2x0Wlc1emFXOXVjeTRnS0dkb0xUUTFNamtwWEc1Y2RGeDBjbVZzYVdGaWJHVlVja1JwYldWdWMybHZibk02SUdaMWJtTjBhVzl1S0NrZ2UxeHVYSFJjZEZ4MGRtRnlJSFJoWW14bExDQjBjaXdnZEhKRGFHbHNaQ3dnZEhKVGRIbHNaVHRjYmx4MFhIUmNkR2xtSUNnZ2NtVnNhV0ZpYkdWVWNrUnBiV1Z1YzJsdmJuTldZV3dnUFQwZ2JuVnNiQ0FwSUh0Y2JseDBYSFJjZEZ4MGRHRmliR1VnUFNCa2IyTjFiV1Z1ZEM1amNtVmhkR1ZGYkdWdFpXNTBLQ0JjSW5SaFlteGxYQ0lnS1R0Y2JseDBYSFJjZEZ4MGRISWdQU0JrYjJOMWJXVnVkQzVqY21WaGRHVkZiR1Z0Wlc1MEtDQmNJblJ5WENJZ0tUdGNibHgwWEhSY2RGeDBkSEpEYUdsc1pDQTlJR1J2WTNWdFpXNTBMbU55WldGMFpVVnNaVzFsYm5Rb0lGd2laR2wyWENJZ0tUdGNibHh1WEhSY2RGeDBYSFIwWVdKc1pTNXpkSGxzWlM1amMzTlVaWGgwSUQwZ1hDSndiM05wZEdsdmJqcGhZbk52YkhWMFpUdHNaV1owT2kweE1URXhNWEI0TzJKdmNtUmxjaTFqYjJ4c1lYQnpaVHB6WlhCaGNtRjBaVndpTzF4dVhIUmNkRngwWEhSMGNpNXpkSGxzWlM1amMzTlVaWGgwSUQwZ1hDSmliM0prWlhJNk1YQjRJSE52Ykdsa1hDSTdYRzVjYmx4MFhIUmNkRngwTHk4Z1UzVndjRzl5ZERvZ1EyaHliMjFsSURnMksxeHVYSFJjZEZ4MFhIUXZMeUJJWldsbmFIUWdjMlYwSUhSb2NtOTFaMmdnWTNOelZHVjRkQ0JrYjJWeklHNXZkQ0JuWlhRZ1lYQndiR2xsWkM1Y2JseDBYSFJjZEZ4MEx5OGdRMjl0Y0hWMFpXUWdhR1ZwWjJoMElIUm9aVzRnWTI5dFpYTWdZbUZqYXlCaGN5QXdMbHh1WEhSY2RGeDBYSFIwY2k1emRIbHNaUzVvWldsbmFIUWdQU0JjSWpGd2VGd2lPMXh1WEhSY2RGeDBYSFIwY2tOb2FXeGtMbk4wZVd4bExtaGxhV2RvZENBOUlGd2lPWEI0WENJN1hHNWNibHgwWEhSY2RGeDBMeThnVTNWd2NHOXlkRG9nUVc1a2NtOXBaQ0E0SUVOb2NtOXRaU0E0Tml0Y2JseDBYSFJjZEZ4MEx5OGdTVzRnYjNWeUlHSnZaSGxDWVdOclozSnZkVzVrTG1oMGJXd2dhV1p5WVcxbExGeHVYSFJjZEZ4MFhIUXZMeUJrYVhOd2JHRjVJR1p2Y2lCaGJHd2daR2wySUdWc1pXMWxiblJ6SUdseklITmxkQ0IwYnlCY0ltbHViR2x1WlZ3aUxGeHVYSFJjZEZ4MFhIUXZMeUIzYUdsamFDQmpZWFZ6WlhNZ1lTQndjbTlpYkdWdElHOXViSGtnYVc0Z1FXNWtjbTlwWkNBNElFTm9jbTl0WlNBNE5pNWNibHgwWEhSY2RGeDBMeThnUlc1emRYSnBibWNnZEdobElHUnBkaUJwY3lCa2FYTndiR0Y1T2lCaWJHOWphMXh1WEhSY2RGeDBYSFF2THlCblpYUnpJR0Z5YjNWdVpDQjBhR2x6SUdsemMzVmxMbHh1WEhSY2RGeDBYSFIwY2tOb2FXeGtMbk4wZVd4bExtUnBjM0JzWVhrZ1BTQmNJbUpzYjJOclhDSTdYRzVjYmx4MFhIUmNkRngwWkc5amRXMWxiblJGYkdWdFpXNTBYRzVjZEZ4MFhIUmNkRngwTG1Gd2NHVnVaRU5vYVd4a0tDQjBZV0pzWlNBcFhHNWNkRngwWEhSY2RGeDBMbUZ3Y0dWdVpFTm9hV3hrS0NCMGNpQXBYRzVjZEZ4MFhIUmNkRngwTG1Gd2NHVnVaRU5vYVd4a0tDQjBja05vYVd4a0lDazdYRzVjYmx4MFhIUmNkRngwZEhKVGRIbHNaU0E5SUhkcGJtUnZkeTVuWlhSRGIyMXdkWFJsWkZOMGVXeGxLQ0IwY2lBcE8xeHVYSFJjZEZ4MFhIUnlaV3hwWVdKc1pWUnlSR2x0Wlc1emFXOXVjMVpoYkNBOUlDZ2djR0Z5YzJWSmJuUW9JSFJ5VTNSNWJHVXVhR1ZwWjJoMExDQXhNQ0FwSUN0Y2JseDBYSFJjZEZ4MFhIUndZWEp6WlVsdWRDZ2dkSEpUZEhsc1pTNWliM0prWlhKVWIzQlhhV1IwYUN3Z01UQWdLU0FyWEc1Y2RGeDBYSFJjZEZ4MGNHRnljMlZKYm5Rb0lIUnlVM1I1YkdVdVltOXlaR1Z5UW05MGRHOXRWMmxrZEdnc0lERXdJQ2tnS1NBOVBUMGdkSEl1YjJabWMyVjBTR1ZwWjJoME8xeHVYRzVjZEZ4MFhIUmNkR1J2WTNWdFpXNTBSV3hsYldWdWRDNXlaVzF2ZG1WRGFHbHNaQ2dnZEdGaWJHVWdLVHRjYmx4MFhIUmNkSDFjYmx4MFhIUmNkSEpsZEhWeWJpQnlaV3hwWVdKc1pWUnlSR2x0Wlc1emFXOXVjMVpoYkR0Y2JseDBYSFI5WEc1Y2RIMGdLVHRjYm4wZ0tTZ3BPMXh1WEc1Y2JtWjFibU4wYVc5dUlHTjFja05UVXlnZ1pXeGxiU3dnYm1GdFpTd2dZMjl0Y0hWMFpXUWdLU0I3WEc1Y2RIWmhjaUIzYVdSMGFDd2diV2x1VjJsa2RHZ3NJRzFoZUZkcFpIUm9MQ0J5WlhRc1hHNWNkRngwYVhORGRYTjBiMjFRY205d0lEMGdjbU4xYzNSdmJWQnliM0F1ZEdWemRDZ2dibUZ0WlNBcExGeHVYRzVjZEZ4MEx5OGdVM1Z3Y0c5eWREb2dSbWx5WldadmVDQTFNU3RjYmx4MFhIUXZMeUJTWlhSeWFXVjJhVzVuSUhOMGVXeGxJR0psWm05eVpTQmpiMjF3ZFhSbFpDQnpiMjFsYUc5M1hHNWNkRngwTHk4Z1ptbDRaWE1nWVc0Z2FYTnpkV1VnZDJsMGFDQm5aWFIwYVc1bklIZHliMjVuSUhaaGJIVmxjMXh1WEhSY2RDOHZJRzl1SUdSbGRHRmphR1ZrSUdWc1pXMWxiblJ6WEc1Y2RGeDBjM1I1YkdVZ1BTQmxiR1Z0TG5OMGVXeGxPMXh1WEc1Y2RHTnZiWEIxZEdWa0lEMGdZMjl0Y0hWMFpXUWdmSHdnWjJWMFUzUjViR1Z6S0NCbGJHVnRJQ2s3WEc1Y2JseDBMeThnWjJWMFVISnZjR1Z5ZEhsV1lXeDFaU0JwY3lCdVpXVmtaV1FnWm05eU9seHVYSFF2THlBZ0lDNWpjM01vSjJacGJIUmxjaWNwSUNoSlJTQTVJRzl1Ykhrc0lIUnlZV010TVRJMU16Y3BYRzVjZEM4dklDQWdMbU56Y3lnbkxTMWpkWE4wYjIxUWNtOXdaWEowZVNrZ0tHZG9MVE14TkRRcFhHNWNkR2xtSUNnZ1kyOXRjSFYwWldRZ0tTQjdYRzVjYmx4MFhIUXZMeUJUZFhCd2IzSjBPaUJKUlNBOFBUa2dMU0F4TVN0Y2JseDBYSFF2THlCSlJTQnZibXg1SUhOMWNIQnZjblJ6SUdCY0ltWnNiMkYwWENKZ0lHbHVJR0JuWlhSUWNtOXdaWEowZVZaaGJIVmxZRHNnYVc0Z1kyOXRjSFYwWldRZ2MzUjViR1Z6WEc1Y2RGeDBMeThnYVhRbmN5QnZibXg1SUdGMllXbHNZV0pzWlNCaGN5QmdYQ0pqYzNOR2JHOWhkRndpWUM0Z1YyVWdibThnYkc5dVoyVnlJRzF2WkdsbWVTQndjbTl3WlhKMGFXVnpYRzVjZEZ4MEx5OGdjMlZ1ZENCMGJ5QmdMbU56Y3lncFlDQmhjR0Z5ZENCbWNtOXRJR05oYldWc1EyRnphVzVuTENCemJ5QjNaU0J1WldWa0lIUnZJR05vWldOcklHSnZkR2d1WEc1Y2RGeDBMeThnVG05eWJXRnNiSGtzSUhSb2FYTWdkMjkxYkdRZ1kzSmxZWFJsSUdScFptWmxjbVZ1WTJVZ2FXNGdZbVZvWVhacGIzSTZJR2xtWEc1Y2RGeDBMeThnWUdkbGRGQnliM0JsY25SNVZtRnNkV1ZnSUhKbGRIVnlibk1nWVc0Z1pXMXdkSGtnYzNSeWFXNW5MQ0IwYUdVZ2RtRnNkV1VnY21WMGRYSnVaV1JjYmx4MFhIUXZMeUJpZVNCZ0xtTnpjeWdwWUNCM2IzVnNaQ0JpWlNCZ2RXNWtaV1pwYm1Wa1lDNGdWR2hwY3lCcGN5QjFjM1ZoYkd4NUlIUm9aU0JqWVhObElHWnZjbHh1WEhSY2RDOHZJR1JwYzJOdmJtNWxZM1JsWkNCbGJHVnRaVzUwY3k0Z1NHOTNaWFpsY2l3Z2FXNGdTVVVnWlhabGJpQmthWE5qYjI1dVpXTjBaV1FnWld4bGJXVnVkSE5jYmx4MFhIUXZMeUIzYVhSb0lHNXZJSE4wZVd4bGN5QnlaWFIxY200Z1lGd2libTl1WlZ3aVlDQm1iM0lnWUdkbGRGQnliM0JsY25SNVZtRnNkV1VvSUZ3aVpteHZZWFJjSWlBcFlGeHVYSFJjZEhKbGRDQTlJR052YlhCMWRHVmtMbWRsZEZCeWIzQmxjblI1Vm1Gc2RXVW9JRzVoYldVZ0tTQjhmQ0JqYjIxd2RYUmxaRnNnYm1GdFpTQmRPMXh1WEc1Y2RGeDBhV1lnS0NCcGMwTjFjM1J2YlZCeWIzQWdKaVlnY21WMElDa2dlMXh1WEc1Y2RGeDBYSFF2THlCVGRYQndiM0owT2lCR2FYSmxabTk0SURFd05Tc3NJRU5vY205dFpTQThQVEV3TlN0Y2JseDBYSFJjZEM4dklGTndaV01nY21WeGRXbHlaWE1nZEhKcGJXMXBibWNnZDJocGRHVnpjR0ZqWlNCbWIzSWdZM1Z6ZEc5dElIQnliM0JsY25ScFpYTWdLR2RvTFRRNU1qWXBMbHh1WEhSY2RGeDBMeThnUm1seVpXWnZlQ0J2Ym14NUlIUnlhVzF6SUd4bFlXUnBibWNnZDJocGRHVnpjR0ZqWlM0Z1EyaHliMjFsSUdwMWMzUWdZMjlzYkdGd2MyVnpYRzVjZEZ4MFhIUXZMeUJpYjNSb0lHeGxZV1JwYm1jZ0ppQjBjbUZwYkdsdVp5QjNhR2wwWlhOd1lXTmxJSFJ2SUdFZ2MybHVaMnhsSUhOd1lXTmxMbHh1WEhSY2RGeDBMeTljYmx4MFhIUmNkQzh2SUVaaGJHd2dZbUZqYXlCMGJ5QmdkVzVrWldacGJtVmtZQ0JwWmlCbGJYQjBlU0J6ZEhKcGJtY2djbVYwZFhKdVpXUXVYRzVjZEZ4MFhIUXZMeUJVYUdseklHTnZiR3hoY0hObGN5QmhJRzFwYzNOcGJtY2daR1ZtYVc1cGRHbHZiaUIzYVhSb0lIQnliM0JsY25SNUlHUmxabWx1WldSY2JseDBYSFJjZEM4dklHRnVaQ0J6WlhRZ2RHOGdZVzRnWlcxd2RIa2djM1J5YVc1bklHSjFkQ0IwYUdWeVpTZHpJRzV2SUhOMFlXNWtZWEprSUVGUVNWeHVYSFJjZEZ4MEx5OGdZV3hzYjNkcGJtY2dkWE1nZEc4Z1pHbG1abVZ5Wlc1MGFXRjBaU0IwYUdWdElIZHBkR2h2ZFhRZ1lTQndaWEptYjNKdFlXNWpaU0J3Wlc1aGJIUjVYRzVjZEZ4MFhIUXZMeUJoYm1RZ2NtVjBkWEp1YVc1bklHQjFibVJsWm1sdVpXUmdJR0ZzYVdkdWN5QjNhWFJvSUc5c1pHVnlJR3BSZFdWeWVTNWNibHgwWEhSY2RDOHZYRzVjZEZ4MFhIUXZMeUJ5ZEhKcGJVTlRVeUIwY21WaGRITWdWU3N3TURCRUlFTkJVbEpKUVVkRklGSkZWRlZTVGlCaGJtUWdWU3N3TURCRElFWlBVazBnUmtWRlJGeHVYSFJjZEZ4MEx5OGdZWE1nZDJocGRHVnpjR0ZqWlNCM2FHbHNaU0JEVTFNZ1pHOWxjeUJ1YjNRc0lHSjFkQ0IwYUdseklHbHpJRzV2ZENCaElIQnliMkpzWlcxY2JseDBYSFJjZEM4dklHSmxZMkYxYzJVZ1ExTlRJSEJ5WlhCeWIyTmxjM05wYm1jZ2NtVndiR0ZqWlhNZ2RHaGxiU0IzYVhSb0lGVXJNREF3UVNCTVNVNUZJRVpGUlVSY2JseDBYSFJjZEM4dklDaDNhR2xqYUNBcWFYTXFJRU5UVXlCM2FHbDBaWE53WVdObEtWeHVYSFJjZEZ4MEx5OGdhSFIwY0hNNkx5OTNkM2N1ZHpNdWIzSm5MMVJTTDJOemN5MXplVzUwWVhndE15OGphVzV3ZFhRdGNISmxjSEp2WTJWemMybHVaMXh1WEhSY2RGeDBjbVYwSUQwZ2NtVjBMbkpsY0d4aFkyVW9JSEowY21sdFExTlRMQ0JjSWlReFhDSWdLU0I4ZkNCMWJtUmxabWx1WldRN1hHNWNkRngwZlZ4dVhHNWNkRngwYVdZZ0tDQnlaWFFnUFQwOUlGd2lYQ0lnSmlZZ0lXbHpRWFIwWVdOb1pXUW9JR1ZzWlcwZ0tTQXBJSHRjYmx4MFhIUmNkSEpsZENBOUlHcFJkV1Z5ZVM1emRIbHNaU2dnWld4bGJTd2dibUZ0WlNBcE8xeHVYSFJjZEgxY2JseHVYSFJjZEM4dklFRWdkSEpwWW5WMFpTQjBieUIwYUdVZ1hDSmhkMlZ6YjIxbElHaGhZMnNnWW5rZ1JHVmhiaUJGWkhkaGNtUnpYQ0pjYmx4MFhIUXZMeUJCYm1SeWIybGtJRUp5YjNkelpYSWdjbVYwZFhKdWN5QndaWEpqWlc1MFlXZGxJR1p2Y2lCemIyMWxJSFpoYkhWbGN5eGNibHgwWEhRdkx5QmlkWFFnZDJsa2RHZ2djMlZsYlhNZ2RHOGdZbVVnY21Wc2FXRmliSGtnY0dsNFpXeHpMbHh1WEhSY2RDOHZJRlJvYVhNZ2FYTWdZV2RoYVc1emRDQjBhR1VnUTFOVFQwMGdaSEpoWm5RZ2MzQmxZenBjYmx4MFhIUXZMeUJvZEhSd2N6b3ZMMlJ5WVdaMGN5NWpjM04zWnk1dmNtY3ZZM056YjIwdkkzSmxjMjlzZG1Wa0xYWmhiSFZsYzF4dVhIUmNkR2xtSUNnZ0lYTjFjSEJ2Y25RdWNHbDRaV3hDYjNoVGRIbHNaWE1vS1NBbUppQnliblZ0Ym05dWNIZ3VkR1Z6ZENnZ2NtVjBJQ2tnSmlZZ2NtSnZlRk4wZVd4bExuUmxjM1FvSUc1aGJXVWdLU0FwSUh0Y2JseHVYSFJjZEZ4MEx5OGdVbVZ0WlcxaVpYSWdkR2hsSUc5eWFXZHBibUZzSUhaaGJIVmxjMXh1WEhSY2RGeDBkMmxrZEdnZ1BTQnpkSGxzWlM1M2FXUjBhRHRjYmx4MFhIUmNkRzFwYmxkcFpIUm9JRDBnYzNSNWJHVXViV2x1VjJsa2RHZzdYRzVjZEZ4MFhIUnRZWGhYYVdSMGFDQTlJSE4wZVd4bExtMWhlRmRwWkhSb08xeHVYRzVjZEZ4MFhIUXZMeUJRZFhRZ2FXNGdkR2hsSUc1bGR5QjJZV3gxWlhNZ2RHOGdaMlYwSUdFZ1kyOXRjSFYwWldRZ2RtRnNkV1VnYjNWMFhHNWNkRngwWEhSemRIbHNaUzV0YVc1WGFXUjBhQ0E5SUhOMGVXeGxMbTFoZUZkcFpIUm9JRDBnYzNSNWJHVXVkMmxrZEdnZ1BTQnlaWFE3WEc1Y2RGeDBYSFJ5WlhRZ1BTQmpiMjF3ZFhSbFpDNTNhV1IwYUR0Y2JseHVYSFJjZEZ4MEx5OGdVbVYyWlhKMElIUm9aU0JqYUdGdVoyVmtJSFpoYkhWbGMxeHVYSFJjZEZ4MGMzUjViR1V1ZDJsa2RHZ2dQU0IzYVdSMGFEdGNibHgwWEhSY2RITjBlV3hsTG0xcGJsZHBaSFJvSUQwZ2JXbHVWMmxrZEdnN1hHNWNkRngwWEhSemRIbHNaUzV0WVhoWGFXUjBhQ0E5SUcxaGVGZHBaSFJvTzF4dVhIUmNkSDFjYmx4MGZWeHVYRzVjZEhKbGRIVnliaUJ5WlhRZ0lUMDlJSFZ1WkdWbWFXNWxaQ0EvWEc1Y2JseDBYSFF2THlCVGRYQndiM0owT2lCSlJTQThQVGtnTFNBeE1TQnZibXg1WEc1Y2RGeDBMeThnU1VVZ2NtVjBkWEp1Y3lCNlNXNWtaWGdnZG1Gc2RXVWdZWE1nWVc0Z2FXNTBaV2RsY2k1Y2JseDBYSFJ5WlhRZ0t5QmNJbHdpSURwY2JseDBYSFJ5WlhRN1hHNTlYRzVjYmx4dVpuVnVZM1JwYjI0Z1lXUmtSMlYwU0c5dmEwbG1LQ0JqYjI1a2FYUnBiMjVHYml3Z2FHOXZhMFp1SUNrZ2UxeHVYRzVjZEM4dklFUmxabWx1WlNCMGFHVWdhRzl2YXl3Z2QyVW5iR3dnWTJobFkyc2diMjRnZEdobElHWnBjbk4wSUhKMWJpQnBaaUJwZENkeklISmxZV3hzZVNCdVpXVmtaV1F1WEc1Y2RISmxkSFZ5YmlCN1hHNWNkRngwWjJWME9pQm1kVzVqZEdsdmJpZ3BJSHRjYmx4MFhIUmNkR2xtSUNnZ1kyOXVaR2wwYVc5dVJtNG9LU0FwSUh0Y2JseHVYSFJjZEZ4MFhIUXZMeUJJYjI5cklHNXZkQ0J1WldWa1pXUWdLRzl5SUdsMEozTWdibTkwSUhCdmMzTnBZbXhsSUhSdklIVnpaU0JwZENCa2RXVmNibHgwWEhSY2RGeDBMeThnZEc4Z2JXbHpjMmx1WnlCa1pYQmxibVJsYm1ONUtTd2djbVZ0YjNabElHbDBMbHh1WEhSY2RGeDBYSFJrWld4bGRHVWdkR2hwY3k1blpYUTdYRzVjZEZ4MFhIUmNkSEpsZEhWeWJqdGNibHgwWEhSY2RIMWNibHh1WEhSY2RGeDBMeThnU0c5dmF5QnVaV1ZrWldRN0lISmxaR1ZtYVc1bElHbDBJSE52SUhSb1lYUWdkR2hsSUhOMWNIQnZjblFnZEdWemRDQnBjeUJ1YjNRZ1pYaGxZM1YwWldRZ1lXZGhhVzR1WEc1Y2RGeDBYSFJ5WlhSMWNtNGdLQ0IwYUdsekxtZGxkQ0E5SUdodmIydEdiaUFwTG1Gd2NHeDVLQ0IwYUdsekxDQmhjbWQxYldWdWRITWdLVHRjYmx4MFhIUjlYRzVjZEgwN1hHNTlYRzVjYmx4dWRtRnlJR056YzFCeVpXWnBlR1Z6SUQwZ1d5QmNJbGRsWW10cGRGd2lMQ0JjSWsxdmVsd2lMQ0JjSW0xelhDSWdYU3hjYmx4MFpXMXdkSGxUZEhsc1pTQTlJR1J2WTNWdFpXNTBMbU55WldGMFpVVnNaVzFsYm5Rb0lGd2laR2wyWENJZ0tTNXpkSGxzWlN4Y2JseDBkbVZ1Wkc5eVVISnZjSE1nUFNCN2ZUdGNibHh1THk4Z1VtVjBkWEp1SUdFZ2RtVnVaRzl5TFhCeVpXWnBlR1ZrSUhCeWIzQmxjblI1SUc5eUlIVnVaR1ZtYVc1bFpGeHVablZ1WTNScGIyNGdkbVZ1Wkc5eVVISnZjRTVoYldVb0lHNWhiV1VnS1NCN1hHNWNibHgwTHk4Z1EyaGxZMnNnWm05eUlIWmxibVJ2Y2lCd2NtVm1hWGhsWkNCdVlXMWxjMXh1WEhSMllYSWdZMkZ3VG1GdFpTQTlJRzVoYldWYklEQWdYUzUwYjFWd2NHVnlRMkZ6WlNncElDc2dibUZ0WlM1emJHbGpaU2dnTVNBcExGeHVYSFJjZEdrZ1BTQmpjM05RY21WbWFYaGxjeTVzWlc1bmRHZzdYRzVjYmx4MGQyaHBiR1VnS0NCcExTMGdLU0I3WEc1Y2RGeDBibUZ0WlNBOUlHTnpjMUJ5WldacGVHVnpXeUJwSUYwZ0t5QmpZWEJPWVcxbE8xeHVYSFJjZEdsbUlDZ2dibUZ0WlNCcGJpQmxiWEIwZVZOMGVXeGxJQ2tnZTF4dVhIUmNkRngwY21WMGRYSnVJRzVoYldVN1hHNWNkRngwZlZ4dVhIUjlYRzU5WEc1Y2JpOHZJRkpsZEhWeWJpQmhJSEJ2ZEdWdWRHbGhiR3g1TFcxaGNIQmxaQ0JxVVhWbGNua3VZM056VUhKdmNITWdiM0lnZG1WdVpHOXlJSEJ5WldacGVHVmtJSEJ5YjNCbGNuUjVYRzVtZFc1amRHbHZiaUJtYVc1aGJGQnliM0JPWVcxbEtDQnVZVzFsSUNrZ2UxeHVYSFIyWVhJZ1ptbHVZV3dnUFNCcVVYVmxjbmt1WTNOelVISnZjSE5iSUc1aGJXVWdYU0I4ZkNCMlpXNWtiM0pRY205d2Mxc2dibUZ0WlNCZE8xeHVYRzVjZEdsbUlDZ2dabWx1WVd3Z0tTQjdYRzVjZEZ4MGNtVjBkWEp1SUdacGJtRnNPMXh1WEhSOVhHNWNkR2xtSUNnZ2JtRnRaU0JwYmlCbGJYQjBlVk4wZVd4bElDa2dlMXh1WEhSY2RISmxkSFZ5YmlCdVlXMWxPMXh1WEhSOVhHNWNkSEpsZEhWeWJpQjJaVzVrYjNKUWNtOXdjMXNnYm1GdFpTQmRJRDBnZG1WdVpHOXlVSEp2Y0U1aGJXVW9JRzVoYldVZ0tTQjhmQ0J1WVcxbE8xeHVmVnh1WEc1Y2JuWmhjbHh1WEc1Y2RDOHZJRk4zWVhCd1lXSnNaU0JwWmlCa2FYTndiR0Y1SUdseklHNXZibVVnYjNJZ2MzUmhjblJ6SUhkcGRHZ2dkR0ZpYkdWY2JseDBMeThnWlhoalpYQjBJRndpZEdGaWJHVmNJaXdnWENKMFlXSnNaUzFqWld4c1hDSXNJRzl5SUZ3aWRHRmliR1V0WTJGd2RHbHZibHdpWEc1Y2RDOHZJRk5sWlNCb1pYSmxJR1p2Y2lCa2FYTndiR0Y1SUhaaGJIVmxjem9nYUhSMGNITTZMeTlrWlhabGJHOXdaWEl1Ylc5NmFXeHNZUzV2Y21jdlpXNHRWVk12Wkc5amN5OURVMU12WkdsemNHeGhlVnh1WEhSeVpHbHpjR3hoZVhOM1lYQWdQU0F2WGlodWIyNWxmSFJoWW14bEtEOGhMV05iWldGZEtTNHJLUzhzWEc1Y2RHTnpjMU5vYjNjZ1BTQjdJSEJ2YzJsMGFXOXVPaUJjSW1GaWMyOXNkWFJsWENJc0lIWnBjMmxpYVd4cGRIazZJRndpYUdsa1pHVnVYQ0lzSUdScGMzQnNZWGs2SUZ3aVlteHZZMnRjSWlCOUxGeHVYSFJqYzNOT2IzSnRZV3hVY21GdWMyWnZjbTBnUFNCN1hHNWNkRngwYkdWMGRHVnlVM0JoWTJsdVp6b2dYQ0l3WENJc1hHNWNkRngwWm05dWRGZGxhV2RvZERvZ1hDSTBNREJjSWx4dVhIUjlPMXh1WEc1bWRXNWpkR2x2YmlCelpYUlFiM05wZEdsMlpVNTFiV0psY2lnZ1gyVnNaVzBzSUhaaGJIVmxMQ0J6ZFdKMGNtRmpkQ0FwSUh0Y2JseHVYSFF2THlCQmJua2djbVZzWVhScGRtVWdLQ3N2TFNrZ2RtRnNkV1Z6SUdoaGRtVWdZV3h5WldGa2VTQmlaV1Z1WEc1Y2RDOHZJRzV2Y20xaGJHbDZaV1FnWVhRZ2RHaHBjeUJ3YjJsdWRGeHVYSFIyWVhJZ2JXRjBZMmhsY3lBOUlISmpjM05PZFcwdVpYaGxZeWdnZG1Gc2RXVWdLVHRjYmx4MGNtVjBkWEp1SUcxaGRHTm9aWE1nUDF4dVhHNWNkRngwTHk4Z1IzVmhjbVFnWVdkaGFXNXpkQ0IxYm1SbFptbHVaV1FnWENKemRXSjBjbUZqZEZ3aUxDQmxMbWN1TENCM2FHVnVJSFZ6WldRZ1lYTWdhVzRnWTNOelNHOXZhM05jYmx4MFhIUk5ZWFJvTG0xaGVDZ2dNQ3dnYldGMFkyaGxjMXNnTWlCZElDMGdLQ0J6ZFdKMGNtRmpkQ0I4ZkNBd0lDa2dLU0FySUNnZ2JXRjBZMmhsYzFzZ015QmRJSHg4SUZ3aWNIaGNJaUFwSURwY2JseDBYSFIyWVd4MVpUdGNibjFjYmx4dVpuVnVZM1JwYjI0Z1ltOTRUVzlrWld4QlpHcDFjM1J0Wlc1MEtDQmxiR1Z0TENCa2FXMWxibk5wYjI0c0lHSnZlQ3dnYVhOQ2IzSmtaWEpDYjNnc0lITjBlV3hsY3l3Z1kyOXRjSFYwWldSV1lXd2dLU0I3WEc1Y2RIWmhjaUJwSUQwZ1pHbHRaVzV6YVc5dUlEMDlQU0JjSW5kcFpIUm9YQ0lnUHlBeElEb2dNQ3hjYmx4MFhIUmxlSFJ5WVNBOUlEQXNYRzVjZEZ4MFpHVnNkR0VnUFNBd08xeHVYRzVjZEM4dklFRmthblZ6ZEcxbGJuUWdiV0Y1SUc1dmRDQmlaU0J1WldObGMzTmhjbmxjYmx4MGFXWWdLQ0JpYjNnZ1BUMDlJQ2dnYVhOQ2IzSmtaWEpDYjNnZ1B5QmNJbUp2Y21SbGNsd2lJRG9nWENKamIyNTBaVzUwWENJZ0tTQXBJSHRjYmx4MFhIUnlaWFIxY200Z01EdGNibHgwZlZ4dVhHNWNkR1p2Y2lBb0lEc2dhU0E4SURRN0lHa2dLejBnTWlBcElIdGNibHh1WEhSY2RDOHZJRUp2ZEdnZ1ltOTRJRzF2WkdWc2N5QmxlR05zZFdSbElHMWhjbWRwYmx4dVhIUmNkR2xtSUNnZ1ltOTRJRDA5UFNCY0ltMWhjbWRwYmx3aUlDa2dlMXh1WEhSY2RGeDBaR1ZzZEdFZ0t6MGdhbEYxWlhKNUxtTnpjeWdnWld4bGJTd2dZbTk0SUNzZ1kzTnpSWGh3WVc1a1d5QnBJRjBzSUhSeWRXVXNJSE4wZVd4bGN5QXBPMXh1WEhSY2RIMWNibHh1WEhSY2RDOHZJRWxtSUhkbElHZGxkQ0JvWlhKbElIZHBkR2dnWVNCamIyNTBaVzUwTFdKdmVDd2dkMlVuY21VZ2MyVmxhMmx1WnlCY0luQmhaR1JwYm1kY0lpQnZjaUJjSW1KdmNtUmxjbHdpSUc5eUlGd2liV0Z5WjJsdVhDSmNibHgwWEhScFppQW9JQ0ZwYzBKdmNtUmxja0p2ZUNBcElIdGNibHh1WEhSY2RGeDBMeThnUVdSa0lIQmhaR1JwYm1kY2JseDBYSFJjZEdSbGJIUmhJQ3M5SUdwUmRXVnllUzVqYzNNb0lHVnNaVzBzSUZ3aWNHRmtaR2x1WjF3aUlDc2dZM056Ulhod1lXNWtXeUJwSUYwc0lIUnlkV1VzSUhOMGVXeGxjeUFwTzF4dVhHNWNkRngwWEhRdkx5QkdiM0lnWENKaWIzSmtaWEpjSWlCdmNpQmNJbTFoY21kcGJsd2lMQ0JoWkdRZ1ltOXlaR1Z5WEc1Y2RGeDBYSFJwWmlBb0lHSnZlQ0FoUFQwZ1hDSndZV1JrYVc1blhDSWdLU0I3WEc1Y2RGeDBYSFJjZEdSbGJIUmhJQ3M5SUdwUmRXVnllUzVqYzNNb0lHVnNaVzBzSUZ3aVltOXlaR1Z5WENJZ0t5QmpjM05GZUhCaGJtUmJJR2tnWFNBcklGd2lWMmxrZEdoY0lpd2dkSEoxWlN3Z2MzUjViR1Z6SUNrN1hHNWNibHgwWEhSY2RDOHZJRUoxZENCemRHbHNiQ0JyWldWd0lIUnlZV05ySUc5bUlHbDBJRzkwYUdWeWQybHpaVnh1WEhSY2RGeDBmU0JsYkhObElIdGNibHgwWEhSY2RGeDBaWGgwY21FZ0t6MGdhbEYxWlhKNUxtTnpjeWdnWld4bGJTd2dYQ0ppYjNKa1pYSmNJaUFySUdOemMwVjRjR0Z1WkZzZ2FTQmRJQ3NnWENKWGFXUjBhRndpTENCMGNuVmxMQ0J6ZEhsc1pYTWdLVHRjYmx4MFhIUmNkSDFjYmx4dVhIUmNkQzh2SUVsbUlIZGxJR2RsZENCb1pYSmxJSGRwZEdnZ1lTQmliM0prWlhJdFltOTRJQ2hqYjI1MFpXNTBJQ3NnY0dGa1pHbHVaeUFySUdKdmNtUmxjaWtzSUhkbEozSmxJSE5sWld0cGJtY2dYQ0pqYjI1MFpXNTBYQ0lnYjNKY2JseDBYSFF2THlCY0luQmhaR1JwYm1kY0lpQnZjaUJjSW0xaGNtZHBibHdpWEc1Y2RGeDBmU0JsYkhObElIdGNibHh1WEhSY2RGeDBMeThnUm05eUlGd2lZMjl1ZEdWdWRGd2lMQ0J6ZFdKMGNtRmpkQ0J3WVdSa2FXNW5YRzVjZEZ4MFhIUnBaaUFvSUdKdmVDQTlQVDBnWENKamIyNTBaVzUwWENJZ0tTQjdYRzVjZEZ4MFhIUmNkR1JsYkhSaElDMDlJR3BSZFdWeWVTNWpjM01vSUdWc1pXMHNJRndpY0dGa1pHbHVaMXdpSUNzZ1kzTnpSWGh3WVc1a1d5QnBJRjBzSUhSeWRXVXNJSE4wZVd4bGN5QXBPMXh1WEhSY2RGeDBmVnh1WEc1Y2RGeDBYSFF2THlCR2IzSWdYQ0pqYjI1MFpXNTBYQ0lnYjNJZ1hDSndZV1JrYVc1blhDSXNJSE4xWW5SeVlXTjBJR0p2Y21SbGNseHVYSFJjZEZ4MGFXWWdLQ0JpYjNnZ0lUMDlJRndpYldGeVoybHVYQ0lnS1NCN1hHNWNkRngwWEhSY2RHUmxiSFJoSUMwOUlHcFJkV1Z5ZVM1amMzTW9JR1ZzWlcwc0lGd2lZbTl5WkdWeVhDSWdLeUJqYzNORmVIQmhibVJiSUdrZ1hTQXJJRndpVjJsa2RHaGNJaXdnZEhKMVpTd2djM1I1YkdWeklDazdYRzVjZEZ4MFhIUjlYRzVjZEZ4MGZWeHVYSFI5WEc1Y2JseDBMeThnUVdOamIzVnVkQ0JtYjNJZ2NHOXphWFJwZG1VZ1kyOXVkR1Z1ZEMxaWIzZ2djMk55YjJ4c0lHZDFkSFJsY2lCM2FHVnVJSEpsY1hWbGMzUmxaQ0JpZVNCd2NtOTJhV1JwYm1jZ1kyOXRjSFYwWldSV1lXeGNibHgwYVdZZ0tDQWhhWE5DYjNKa1pYSkNiM2dnSmlZZ1kyOXRjSFYwWldSV1lXd2dQajBnTUNBcElIdGNibHh1WEhSY2RDOHZJRzltWm5ObGRGZHBaSFJvTDI5bVpuTmxkRWhsYVdkb2RDQnBjeUJoSUhKdmRXNWtaV1FnYzNWdElHOW1JR052Ym5SbGJuUXNJSEJoWkdScGJtY3NJSE5qY205c2JDQm5kWFIwWlhJc0lHRnVaQ0JpYjNKa1pYSmNibHgwWEhRdkx5QkJjM04xYldsdVp5QnBiblJsWjJWeUlITmpjbTlzYkNCbmRYUjBaWElzSUhOMVluUnlZV04wSUhSb1pTQnlaWE4wSUdGdVpDQnliM1Z1WkNCa2IzZHVYRzVjZEZ4MFpHVnNkR0VnS3owZ1RXRjBhQzV0WVhnb0lEQXNJRTFoZEdndVkyVnBiQ2hjYmx4MFhIUmNkR1ZzWlcxYklGd2liMlptYzJWMFhDSWdLeUJrYVcxbGJuTnBiMjViSURBZ1hTNTBiMVZ3Y0dWeVEyRnpaU2dwSUNzZ1pHbHRaVzV6YVc5dUxuTnNhV05sS0NBeElDa2dYU0F0WEc1Y2RGeDBYSFJqYjIxd2RYUmxaRlpoYkNBdFhHNWNkRngwWEhSa1pXeDBZU0F0WEc1Y2RGeDBYSFJsZUhSeVlTQXRYRzVjZEZ4MFhIUXdMalZjYmx4dVhIUmNkQzh2SUVsbUlHOW1abk5sZEZkcFpIUm9MMjltWm5ObGRFaGxhV2RvZENCcGN5QjFibXR1YjNkdUxDQjBhR1Z1SUhkbElHTmhiaWQwSUdSbGRHVnliV2x1WlNCamIyNTBaVzUwTFdKdmVDQnpZM0p2Ykd3Z1ozVjBkR1Z5WEc1Y2RGeDBMeThnVlhObElHRnVJR1Y0Y0d4cFkybDBJSHBsY204Z2RHOGdZWFp2YVdRZ1RtRk9JQ2huYUMwek9UWTBLVnh1WEhSY2RDa2dLU0I4ZkNBd08xeHVYSFI5WEc1Y2JseDBjbVYwZFhKdUlHUmxiSFJoTzF4dWZWeHVYRzVtZFc1amRHbHZiaUJuWlhSWGFXUjBhRTl5U0dWcFoyaDBLQ0JsYkdWdExDQmthVzFsYm5OcGIyNHNJR1Y0ZEhKaElDa2dlMXh1WEc1Y2RDOHZJRk4wWVhKMElIZHBkR2dnWTI5dGNIVjBaV1FnYzNSNWJHVmNibHgwZG1GeUlITjBlV3hsY3lBOUlHZGxkRk4wZVd4bGN5Z2daV3hsYlNBcExGeHVYRzVjZEZ4MEx5OGdWRzhnWVhadmFXUWdabTl5WTJsdVp5QmhJSEpsWm14dmR5d2diMjVzZVNCbVpYUmphQ0JpYjNoVGFYcHBibWNnYVdZZ2QyVWdibVZsWkNCcGRDQW9aMmd0TkRNeU1pa3VYRzVjZEZ4MEx5OGdSbUZyWlNCamIyNTBaVzUwTFdKdmVDQjFiblJwYkNCM1pTQnJibTkzSUdsMEozTWdibVZsWkdWa0lIUnZJR3R1YjNjZ2RHaGxJSFJ5ZFdVZ2RtRnNkV1V1WEc1Y2RGeDBZbTk0VTJsNmFXNW5UbVZsWkdWa0lEMGdJWE4xY0hCdmNuUXVZbTk0VTJsNmFXNW5VbVZzYVdGaWJHVW9LU0I4ZkNCbGVIUnlZU3hjYmx4MFhIUnBjMEp2Y21SbGNrSnZlQ0E5SUdKdmVGTnBlbWx1WjA1bFpXUmxaQ0FtSmx4dVhIUmNkRngwYWxGMVpYSjVMbU56Y3lnZ1pXeGxiU3dnWENKaWIzaFRhWHBwYm1kY0lpd2dabUZzYzJVc0lITjBlV3hsY3lBcElEMDlQU0JjSW1KdmNtUmxjaTFpYjNoY0lpeGNibHgwWEhSMllXeDFaVWx6UW05eVpHVnlRbTk0SUQwZ2FYTkNiM0prWlhKQ2IzZ3NYRzVjYmx4MFhIUjJZV3dnUFNCamRYSkRVMU1vSUdWc1pXMHNJR1JwYldWdWMybHZiaXdnYzNSNWJHVnpJQ2tzWEc1Y2RGeDBiMlptYzJWMFVISnZjQ0E5SUZ3aWIyWm1jMlYwWENJZ0t5QmthVzFsYm5OcGIyNWJJREFnWFM1MGIxVndjR1Z5UTJGelpTZ3BJQ3NnWkdsdFpXNXphVzl1TG5Oc2FXTmxLQ0F4SUNrN1hHNWNibHgwTHk4Z1UzVndjRzl5ZERvZ1JtbHlaV1p2ZUNBOFBUVTBYRzVjZEM4dklGSmxkSFZ5YmlCaElHTnZibVp2ZFc1a2FXNW5JRzV2Ymkxd2FYaGxiQ0IyWVd4MVpTQnZjaUJtWldsbmJpQnBaMjV2Y21GdVkyVXNJR0Z6SUdGd2NISnZjSEpwWVhSbExseHVYSFJwWmlBb0lISnVkVzF1YjI1d2VDNTBaWE4wS0NCMllXd2dLU0FwSUh0Y2JseDBYSFJwWmlBb0lDRmxlSFJ5WVNBcElIdGNibHgwWEhSY2RISmxkSFZ5YmlCMllXdzdYRzVjZEZ4MGZWeHVYSFJjZEhaaGJDQTlJRndpWVhWMGIxd2lPMXh1WEhSOVhHNWNibHh1WEhRdkx5QlRkWEJ3YjNKME9pQkpSU0E1SUMwZ01URWdiMjVzZVZ4dVhIUXZMeUJWYzJVZ2IyWm1jMlYwVjJsa2RHZ3ZiMlptYzJWMFNHVnBaMmgwSUdadmNpQjNhR1Z1SUdKdmVDQnphWHBwYm1jZ2FYTWdkVzV5Wld4cFlXSnNaUzVjYmx4MEx5OGdTVzRnZEdodmMyVWdZMkZ6WlhNc0lIUm9aU0JqYjIxd2RYUmxaQ0IyWVd4MVpTQmpZVzRnWW1VZ2RISjFjM1JsWkNCMGJ5QmlaU0JpYjNKa1pYSXRZbTk0TGx4dVhIUnBaaUFvSUNnZ0lYTjFjSEJ2Y25RdVltOTRVMmw2YVc1blVtVnNhV0ZpYkdVb0tTQW1KaUJwYzBKdmNtUmxja0p2ZUNCOGZGeHVYRzVjZEZ4MEx5OGdVM1Z3Y0c5eWREb2dTVVVnTVRBZ0xTQXhNU3NzSUVWa1oyVWdNVFVnTFNBeE9DdGNibHgwWEhRdkx5QkpSUzlGWkdkbElHMXBjM0psY0c5eWRDQmdaMlYwUTI5dGNIVjBaV1JUZEhsc1pXQWdiMllnZEdGaWJHVWdjbTkzY3lCM2FYUm9JSGRwWkhSb0wyaGxhV2RvZEZ4dVhIUmNkQzh2SUhObGRDQnBiaUJEVTFNZ2QyaHBiR1VnWUc5bVpuTmxkQ3BnSUhCeWIzQmxjblJwWlhNZ2NtVndiM0owSUdOdmNuSmxZM1FnZG1Gc2RXVnpMbHh1WEhSY2RDOHZJRWx1ZEdWeVpYTjBhVzVuYkhrc0lHbHVJSE52YldVZ1kyRnpaWE1nU1VVZ09TQmtiMlZ6YmlkMElITjFabVpsY2lCbWNtOXRJSFJvYVhNZ2FYTnpkV1V1WEc1Y2RGeDBJWE4xY0hCdmNuUXVjbVZzYVdGaWJHVlVja1JwYldWdWMybHZibk1vS1NBbUppQnViMlJsVG1GdFpTZ2daV3hsYlN3Z1hDSjBjbHdpSUNrZ2ZIeGNibHh1WEhSY2RDOHZJRVpoYkd3Z1ltRmpheUIwYnlCdlptWnpaWFJYYVdSMGFDOXZabVp6WlhSSVpXbG5hSFFnZDJobGJpQjJZV3gxWlNCcGN5QmNJbUYxZEc5Y0lseHVYSFJjZEM4dklGUm9hWE1nYUdGd2NHVnVjeUJtYjNJZ2FXNXNhVzVsSUdWc1pXMWxiblJ6SUhkcGRHZ2dibThnWlhod2JHbGphWFFnYzJWMGRHbHVaeUFvWjJndE16VTNNU2xjYmx4MFhIUjJZV3dnUFQwOUlGd2lZWFYwYjF3aUlIeDhYRzVjYmx4MFhIUXZMeUJUZFhCd2IzSjBPaUJCYm1SeWIybGtJRHc5TkM0eElDMGdOQzR6SUc5dWJIbGNibHgwWEhRdkx5QkJiSE52SUhWelpTQnZabVp6WlhSWGFXUjBhQzl2Wm1aelpYUklaV2xuYUhRZ1ptOXlJRzFwYzNKbGNHOXlkR1ZrSUdsdWJHbHVaU0JrYVcxbGJuTnBiMjV6SUNobmFDMHpOakF5S1Z4dVhIUmNkQ0Z3WVhKelpVWnNiMkYwS0NCMllXd2dLU0FtSmlCcVVYVmxjbmt1WTNOektDQmxiR1Z0TENCY0ltUnBjM0JzWVhsY0lpd2dabUZzYzJVc0lITjBlV3hsY3lBcElEMDlQU0JjSW1sdWJHbHVaVndpSUNrZ0ppWmNibHh1WEhSY2RDOHZJRTFoYTJVZ2MzVnlaU0IwYUdVZ1pXeGxiV1Z1ZENCcGN5QjJhWE5wWW14bElDWWdZMjl1Ym1WamRHVmtYRzVjZEZ4MFpXeGxiUzVuWlhSRGJHbGxiblJTWldOMGN5Z3BMbXhsYm1kMGFDQXBJSHRjYmx4dVhIUmNkR2x6UW05eVpHVnlRbTk0SUQwZ2FsRjFaWEo1TG1OemN5Z2daV3hsYlN3Z1hDSmliM2hUYVhwcGJtZGNJaXdnWm1Gc2MyVXNJSE4wZVd4bGN5QXBJRDA5UFNCY0ltSnZjbVJsY2kxaWIzaGNJanRjYmx4dVhIUmNkQzh2SUZkb1pYSmxJR0YyWVdsc1lXSnNaU3dnYjJabWMyVjBWMmxrZEdndmIyWm1jMlYwU0dWcFoyaDBJR0Z3Y0hKdmVHbHRZWFJsSUdKdmNtUmxjaUJpYjNnZ1pHbHRaVzV6YVc5dWN5NWNibHgwWEhRdkx5QlhhR1Z5WlNCdWIzUWdZWFpoYVd4aFlteGxJQ2hsTG1jdUxDQlRWa2NwTENCaGMzTjFiV1VnZFc1eVpXeHBZV0pzWlNCaWIzZ3RjMmw2YVc1bklHRnVaQ0JwYm5SbGNuQnlaWFFnZEdobFhHNWNkRngwTHk4Z2NtVjBjbWxsZG1Wa0lIWmhiSFZsSUdGeklHRWdZMjl1ZEdWdWRDQmliM2dnWkdsdFpXNXphVzl1TGx4dVhIUmNkSFpoYkhWbFNYTkNiM0prWlhKQ2IzZ2dQU0J2Wm1aelpYUlFjbTl3SUdsdUlHVnNaVzA3WEc1Y2RGeDBhV1lnS0NCMllXeDFaVWx6UW05eVpHVnlRbTk0SUNrZ2UxeHVYSFJjZEZ4MGRtRnNJRDBnWld4bGJWc2diMlptYzJWMFVISnZjQ0JkTzF4dVhIUmNkSDFjYmx4MGZWeHVYRzVjZEM4dklFNXZjbTFoYkdsNlpTQmNJbHdpSUdGdVpDQmhkWFJ2WEc1Y2RIWmhiQ0E5SUhCaGNuTmxSbXh2WVhRb0lIWmhiQ0FwSUh4OElEQTdYRzVjYmx4MEx5OGdRV1JxZFhOMElHWnZjaUIwYUdVZ1pXeGxiV1Z1ZENkeklHSnZlQ0J0YjJSbGJGeHVYSFJ5WlhSMWNtNGdLQ0IyWVd3Z0sxeHVYSFJjZEdKdmVFMXZaR1ZzUVdScWRYTjBiV1Z1ZENoY2JseDBYSFJjZEdWc1pXMHNYRzVjZEZ4MFhIUmthVzFsYm5OcGIyNHNYRzVjZEZ4MFhIUmxlSFJ5WVNCOGZDQW9JR2x6UW05eVpHVnlRbTk0SUQ4Z1hDSmliM0prWlhKY0lpQTZJRndpWTI5dWRHVnVkRndpSUNrc1hHNWNkRngwWEhSMllXeDFaVWx6UW05eVpHVnlRbTk0TEZ4dVhIUmNkRngwYzNSNWJHVnpMRnh1WEc1Y2RGeDBYSFF2THlCUWNtOTJhV1JsSUhSb1pTQmpkWEp5Wlc1MElHTnZiWEIxZEdWa0lITnBlbVVnZEc4Z2NtVnhkV1Z6ZENCelkzSnZiR3dnWjNWMGRHVnlJR05oYkdOMWJHRjBhVzl1SUNobmFDMHpOVGc1S1Z4dVhIUmNkRngwZG1Gc1hHNWNkRngwS1Z4dVhIUXBJQ3NnWENKd2VGd2lPMXh1ZlZ4dVhHNXFVWFZsY25rdVpYaDBaVzVrS0NCN1hHNWNibHgwTHk4Z1FXUmtJR2x1SUhOMGVXeGxJSEJ5YjNCbGNuUjVJR2h2YjJ0eklHWnZjaUJ2ZG1WeWNtbGthVzVuSUhSb1pTQmtaV1poZFd4MFhHNWNkQzh2SUdKbGFHRjJhVzl5SUc5bUlHZGxkSFJwYm1jZ1lXNWtJSE5sZEhScGJtY2dZU0J6ZEhsc1pTQndjbTl3WlhKMGVWeHVYSFJqYzNOSWIyOXJjem9nZTF4dVhIUmNkRzl3WVdOcGRIazZJSHRjYmx4MFhIUmNkR2RsZERvZ1puVnVZM1JwYjI0b0lHVnNaVzBzSUdOdmJYQjFkR1ZrSUNrZ2UxeHVYSFJjZEZ4MFhIUnBaaUFvSUdOdmJYQjFkR1ZrSUNrZ2UxeHVYRzVjZEZ4MFhIUmNkRngwTHk4Z1YyVWdjMmh2ZFd4a0lHRnNkMkY1Y3lCblpYUWdZU0J1ZFcxaVpYSWdZbUZqYXlCbWNtOXRJRzl3WVdOcGRIbGNibHgwWEhSY2RGeDBYSFIyWVhJZ2NtVjBJRDBnWTNWeVExTlRLQ0JsYkdWdExDQmNJbTl3WVdOcGRIbGNJaUFwTzF4dVhIUmNkRngwWEhSY2RISmxkSFZ5YmlCeVpYUWdQVDA5SUZ3aVhDSWdQeUJjSWpGY0lpQTZJSEpsZER0Y2JseDBYSFJjZEZ4MGZWeHVYSFJjZEZ4MGZWeHVYSFJjZEgxY2JseDBmU3hjYmx4dVhIUXZMeUJFYjI0bmRDQmhkWFJ2YldGMGFXTmhiR3g1SUdGa1pDQmNJbkI0WENJZ2RHOGdkR2hsYzJVZ2NHOXpjMmxpYkhrdGRXNXBkR3hsYzNNZ2NISnZjR1Z5ZEdsbGMxeHVYSFJqYzNOT2RXMWlaWEk2SUh0Y2JseDBYSFJjSW1GdWFXMWhkR2x2YmtsMFpYSmhkR2x2YmtOdmRXNTBYQ0k2SUhSeWRXVXNYRzVjZEZ4MFhDSmpiMngxYlc1RGIzVnVkRndpT2lCMGNuVmxMRnh1WEhSY2RGd2labWxzYkU5d1lXTnBkSGxjSWpvZ2RISjFaU3hjYmx4MFhIUmNJbVpzWlhoSGNtOTNYQ0k2SUhSeWRXVXNYRzVjZEZ4MFhDSm1iR1Y0VTJoeWFXNXJYQ0k2SUhSeWRXVXNYRzVjZEZ4MFhDSm1iMjUwVjJWcFoyaDBYQ0k2SUhSeWRXVXNYRzVjZEZ4MFhDSm5jbWxrUVhKbFlWd2lPaUIwY25WbExGeHVYSFJjZEZ3aVozSnBaRU52YkhWdGJsd2lPaUIwY25WbExGeHVYSFJjZEZ3aVozSnBaRU52YkhWdGJrVnVaRndpT2lCMGNuVmxMRnh1WEhSY2RGd2laM0pwWkVOdmJIVnRibE4wWVhKMFhDSTZJSFJ5ZFdVc1hHNWNkRngwWENKbmNtbGtVbTkzWENJNklIUnlkV1VzWEc1Y2RGeDBYQ0puY21sa1VtOTNSVzVrWENJNklIUnlkV1VzWEc1Y2RGeDBYQ0puY21sa1VtOTNVM1JoY25SY0lqb2dkSEoxWlN4Y2JseDBYSFJjSW14cGJtVklaV2xuYUhSY0lqb2dkSEoxWlN4Y2JseDBYSFJjSW05d1lXTnBkSGxjSWpvZ2RISjFaU3hjYmx4MFhIUmNJbTl5WkdWeVhDSTZJSFJ5ZFdVc1hHNWNkRngwWENKdmNuQm9ZVzV6WENJNklIUnlkV1VzWEc1Y2RGeDBYQ0ozYVdSdmQzTmNJam9nZEhKMVpTeGNibHgwWEhSY0lucEpibVJsZUZ3aU9pQjBjblZsTEZ4dVhIUmNkRndpZW05dmJWd2lPaUIwY25WbFhHNWNkSDBzWEc1Y2JseDBMeThnUVdSa0lHbHVJSEJ5YjNCbGNuUnBaWE1nZDJodmMyVWdibUZ0WlhNZ2VXOTFJSGRwYzJnZ2RHOGdabWw0SUdKbFptOXlaVnh1WEhRdkx5QnpaWFIwYVc1bklHOXlJR2RsZEhScGJtY2dkR2hsSUhaaGJIVmxYRzVjZEdOemMxQnliM0J6T2lCN2ZTeGNibHh1WEhRdkx5QkhaWFFnWVc1a0lITmxkQ0IwYUdVZ2MzUjViR1VnY0hKdmNHVnlkSGtnYjI0Z1lTQkVUMDBnVG05a1pWeHVYSFJ6ZEhsc1pUb2dablZ1WTNScGIyNG9JR1ZzWlcwc0lHNWhiV1VzSUhaaGJIVmxMQ0JsZUhSeVlTQXBJSHRjYmx4dVhIUmNkQzh2SUVSdmJpZDBJSE5sZENCemRIbHNaWE1nYjI0Z2RHVjRkQ0JoYm1RZ1kyOXRiV1Z1ZENCdWIyUmxjMXh1WEhSY2RHbG1JQ2dnSVdWc1pXMGdmSHdnWld4bGJTNXViMlJsVkhsd1pTQTlQVDBnTXlCOGZDQmxiR1Z0TG01dlpHVlVlWEJsSUQwOVBTQTRJSHg4SUNGbGJHVnRMbk4wZVd4bElDa2dlMXh1WEhSY2RGeDBjbVYwZFhKdU8xeHVYSFJjZEgxY2JseHVYSFJjZEM4dklFMWhhMlVnYzNWeVpTQjBhR0YwSUhkbEozSmxJSGR2Y210cGJtY2dkMmwwYUNCMGFHVWdjbWxuYUhRZ2JtRnRaVnh1WEhSY2RIWmhjaUJ5WlhRc0lIUjVjR1VzSUdodmIydHpMRnh1WEhSY2RGeDBiM0pwWjA1aGJXVWdQU0JqWVcxbGJFTmhjMlVvSUc1aGJXVWdLU3hjYmx4MFhIUmNkR2x6UTNWemRHOXRVSEp2Y0NBOUlISmpkWE4wYjIxUWNtOXdMblJsYzNRb0lHNWhiV1VnS1N4Y2JseDBYSFJjZEhOMGVXeGxJRDBnWld4bGJTNXpkSGxzWlR0Y2JseHVYSFJjZEM4dklFMWhhMlVnYzNWeVpTQjBhR0YwSUhkbEozSmxJSGR2Y210cGJtY2dkMmwwYUNCMGFHVWdjbWxuYUhRZ2JtRnRaUzRnVjJVZ1pHOXVKM1JjYmx4MFhIUXZMeUIzWVc1MElIUnZJSEYxWlhKNUlIUm9aU0IyWVd4MVpTQnBaaUJwZENCcGN5QmhJRU5UVXlCamRYTjBiMjBnY0hKdmNHVnlkSGxjYmx4MFhIUXZMeUJ6YVc1alpTQjBhR1Y1SUdGeVpTQjFjMlZ5TFdSbFptbHVaV1F1WEc1Y2RGeDBhV1lnS0NBaGFYTkRkWE4wYjIxUWNtOXdJQ2tnZTF4dVhIUmNkRngwYm1GdFpTQTlJR1pwYm1Gc1VISnZjRTVoYldVb0lHOXlhV2RPWVcxbElDazdYRzVjZEZ4MGZWeHVYRzVjZEZ4MEx5OGdSMlYwY3lCb2IyOXJJR1p2Y2lCMGFHVWdjSEpsWm1sNFpXUWdkbVZ5YzJsdmJpd2dkR2hsYmlCMWJuQnlaV1pwZUdWa0lIWmxjbk5wYjI1Y2JseDBYSFJvYjI5cmN5QTlJR3BSZFdWeWVTNWpjM05JYjI5cmMxc2dibUZ0WlNCZElIeDhJR3BSZFdWeWVTNWpjM05JYjI5cmMxc2diM0pwWjA1aGJXVWdYVHRjYmx4dVhIUmNkQzh2SUVOb1pXTnJJR2xtSUhkbEozSmxJSE5sZEhScGJtY2dZU0IyWVd4MVpWeHVYSFJjZEdsbUlDZ2dkbUZzZFdVZ0lUMDlJSFZ1WkdWbWFXNWxaQ0FwSUh0Y2JseDBYSFJjZEhSNWNHVWdQU0IwZVhCbGIyWWdkbUZzZFdVN1hHNWNibHgwWEhSY2RDOHZJRU52Ym5abGNuUWdYQ0lyUFZ3aUlHOXlJRndpTFQxY0lpQjBieUJ5Wld4aGRHbDJaU0J1ZFcxaVpYSnpJQ2gwY21GakxUY3pORFVwWEc1Y2RGeDBYSFJwWmlBb0lIUjVjR1VnUFQwOUlGd2ljM1J5YVc1blhDSWdKaVlnS0NCeVpYUWdQU0J5WTNOelRuVnRMbVY0WldNb0lIWmhiSFZsSUNrZ0tTQW1KaUJ5WlhSYklERWdYU0FwSUh0Y2JseDBYSFJjZEZ4MGRtRnNkV1VnUFNCaFpHcDFjM1JEVTFNb0lHVnNaVzBzSUc1aGJXVXNJSEpsZENBcE8xeHVYRzVjZEZ4MFhIUmNkQzh2SUVacGVHVnpJR0oxWnlCMGNtRmpMVGt5TXpkY2JseDBYSFJjZEZ4MGRIbHdaU0E5SUZ3aWJuVnRZbVZ5WENJN1hHNWNkRngwWEhSOVhHNWNibHgwWEhSY2RDOHZJRTFoYTJVZ2MzVnlaU0IwYUdGMElHNTFiR3dnWVc1a0lFNWhUaUIyWVd4MVpYTWdZWEpsYmlkMElITmxkQ0FvZEhKaFl5MDNNVEUyS1Z4dVhIUmNkRngwYVdZZ0tDQjJZV3gxWlNBOVBTQnVkV3hzSUh4OElIWmhiSFZsSUNFOVBTQjJZV3gxWlNBcElIdGNibHgwWEhSY2RGeDBjbVYwZFhKdU8xeHVYSFJjZEZ4MGZWeHVYRzVjZEZ4MFhIUXZMeUJKWmlCaElHNTFiV0psY2lCM1lYTWdjR0Z6YzJWa0lHbHVMQ0JoWkdRZ2RHaGxJSFZ1YVhRZ0tHVjRZMlZ3ZENCbWIzSWdZMlZ5ZEdGcGJpQkRVMU1nY0hKdmNHVnlkR2xsY3lsY2JseDBYSFJjZEM4dklGUm9aU0JwYzBOMWMzUnZiVkJ5YjNBZ1kyaGxZMnNnWTJGdUlHSmxJSEpsYlc5MlpXUWdhVzRnYWxGMVpYSjVJRFF1TUNCM2FHVnVJSGRsSUc5dWJIa2dZWFYwYnkxaGNIQmxibVJjYmx4MFhIUmNkQzh2SUZ3aWNIaGNJaUIwYnlCaElHWmxkeUJvWVhKa1kyOWtaV1FnZG1Gc2RXVnpMbHh1WEhSY2RGeDBhV1lnS0NCMGVYQmxJRDA5UFNCY0ltNTFiV0psY2x3aUlDWW1JQ0ZwYzBOMWMzUnZiVkJ5YjNBZ0tTQjdYRzVjZEZ4MFhIUmNkSFpoYkhWbElDczlJSEpsZENBbUppQnlaWFJiSURNZ1hTQjhmQ0FvSUdwUmRXVnllUzVqYzNOT2RXMWlaWEpiSUc5eWFXZE9ZVzFsSUYwZ1B5QmNJbHdpSURvZ1hDSndlRndpSUNrN1hHNWNkRngwWEhSOVhHNWNibHgwWEhSY2RDOHZJR0poWTJ0bmNtOTFibVF0S2lCd2NtOXdjeUJoWm1abFkzUWdiM0pwWjJsdVlXd2dZMnh2Ym1VbmN5QjJZV3gxWlhOY2JseDBYSFJjZEdsbUlDZ2dJWE4xY0hCdmNuUXVZMnhsWVhKRGJHOXVaVk4wZVd4bElDWW1JSFpoYkhWbElEMDlQU0JjSWx3aUlDWW1JRzVoYldVdWFXNWtaWGhQWmlnZ1hDSmlZV05yWjNKdmRXNWtYQ0lnS1NBOVBUMGdNQ0FwSUh0Y2JseDBYSFJjZEZ4MGMzUjViR1ZiSUc1aGJXVWdYU0E5SUZ3aWFXNW9aWEpwZEZ3aU8xeHVYSFJjZEZ4MGZWeHVYRzVjZEZ4MFhIUXZMeUJKWmlCaElHaHZiMnNnZDJGeklIQnliM1pwWkdWa0xDQjFjMlVnZEdoaGRDQjJZV3gxWlN3Z2IzUm9aWEozYVhObElHcDFjM1FnYzJWMElIUm9aU0J6Y0dWamFXWnBaV1FnZG1Gc2RXVmNibHgwWEhSY2RHbG1JQ2dnSVdodmIydHpJSHg4SUNFb0lGd2ljMlYwWENJZ2FXNGdhRzl2YTNNZ0tTQjhmRnh1WEhSY2RGeDBYSFFvSUhaaGJIVmxJRDBnYUc5dmEzTXVjMlYwS0NCbGJHVnRMQ0IyWVd4MVpTd2daWGgwY21FZ0tTQXBJQ0U5UFNCMWJtUmxabWx1WldRZ0tTQjdYRzVjYmx4MFhIUmNkRngwYVdZZ0tDQnBjME4xYzNSdmJWQnliM0FnS1NCN1hHNWNkRngwWEhSY2RGeDBjM1I1YkdVdWMyVjBVSEp2Y0dWeWRIa29JRzVoYldVc0lIWmhiSFZsSUNrN1hHNWNkRngwWEhSY2RIMGdaV3h6WlNCN1hHNWNkRngwWEhSY2RGeDBjM1I1YkdWYklHNWhiV1VnWFNBOUlIWmhiSFZsTzF4dVhIUmNkRngwWEhSOVhHNWNkRngwWEhSOVhHNWNibHgwWEhSOUlHVnNjMlVnZTF4dVhHNWNkRngwWEhRdkx5QkpaaUJoSUdodmIyc2dkMkZ6SUhCeWIzWnBaR1ZrSUdkbGRDQjBhR1VnYm05dUxXTnZiWEIxZEdWa0lIWmhiSFZsSUdaeWIyMGdkR2hsY21WY2JseDBYSFJjZEdsbUlDZ2dhRzl2YTNNZ0ppWWdYQ0puWlhSY0lpQnBiaUJvYjI5cmN5QW1KbHh1WEhSY2RGeDBYSFFvSUhKbGRDQTlJR2h2YjJ0ekxtZGxkQ2dnWld4bGJTd2dabUZzYzJVc0lHVjRkSEpoSUNrZ0tTQWhQVDBnZFc1a1pXWnBibVZrSUNrZ2UxeHVYRzVjZEZ4MFhIUmNkSEpsZEhWeWJpQnlaWFE3WEc1Y2RGeDBYSFI5WEc1Y2JseDBYSFJjZEM4dklFOTBhR1Z5ZDJselpTQnFkWE4wSUdkbGRDQjBhR1VnZG1Gc2RXVWdabkp2YlNCMGFHVWdjM1I1YkdVZ2IySnFaV04wWEc1Y2RGeDBYSFJ5WlhSMWNtNGdjM1I1YkdWYklHNWhiV1VnWFR0Y2JseDBYSFI5WEc1Y2RIMHNYRzVjYmx4MFkzTnpPaUJtZFc1amRHbHZiaWdnWld4bGJTd2dibUZ0WlN3Z1pYaDBjbUVzSUhOMGVXeGxjeUFwSUh0Y2JseDBYSFIyWVhJZ2RtRnNMQ0J1ZFcwc0lHaHZiMnR6TEZ4dVhIUmNkRngwYjNKcFowNWhiV1VnUFNCallXMWxiRU5oYzJVb0lHNWhiV1VnS1N4Y2JseDBYSFJjZEdselEzVnpkRzl0VUhKdmNDQTlJSEpqZFhOMGIyMVFjbTl3TG5SbGMzUW9JRzVoYldVZ0tUdGNibHh1WEhSY2RDOHZJRTFoYTJVZ2MzVnlaU0IwYUdGMElIZGxKM0psSUhkdmNtdHBibWNnZDJsMGFDQjBhR1VnY21sbmFIUWdibUZ0WlM0Z1YyVWdaRzl1SjNSY2JseDBYSFF2THlCM1lXNTBJSFJ2SUcxdlpHbG1lU0IwYUdVZ2RtRnNkV1VnYVdZZ2FYUWdhWE1nWVNCRFUxTWdZM1Z6ZEc5dElIQnliM0JsY25SNVhHNWNkRngwTHk4Z2MybHVZMlVnZEdobGVTQmhjbVVnZFhObGNpMWtaV1pwYm1Wa0xseHVYSFJjZEdsbUlDZ2dJV2x6UTNWemRHOXRVSEp2Y0NBcElIdGNibHgwWEhSY2RHNWhiV1VnUFNCbWFXNWhiRkJ5YjNCT1lXMWxLQ0J2Y21sblRtRnRaU0FwTzF4dVhIUmNkSDFjYmx4dVhIUmNkQzh2SUZSeWVTQndjbVZtYVhobFpDQnVZVzFsSUdadmJHeHZkMlZrSUdKNUlIUm9aU0IxYm5CeVpXWnBlR1ZrSUc1aGJXVmNibHgwWEhSb2IyOXJjeUE5SUdwUmRXVnllUzVqYzNOSWIyOXJjMXNnYm1GdFpTQmRJSHg4SUdwUmRXVnllUzVqYzNOSWIyOXJjMXNnYjNKcFowNWhiV1VnWFR0Y2JseHVYSFJjZEM4dklFbG1JR0VnYUc5dmF5QjNZWE1nY0hKdmRtbGtaV1FnWjJWMElIUm9aU0JqYjIxd2RYUmxaQ0IyWVd4MVpTQm1jbTl0SUhSb1pYSmxYRzVjZEZ4MGFXWWdLQ0JvYjI5cmN5QW1KaUJjSW1kbGRGd2lJR2x1SUdodmIydHpJQ2tnZTF4dVhIUmNkRngwZG1Gc0lEMGdhRzl2YTNNdVoyVjBLQ0JsYkdWdExDQjBjblZsTENCbGVIUnlZU0FwTzF4dVhIUmNkSDFjYmx4dVhIUmNkQzh2SUU5MGFHVnlkMmx6WlN3Z2FXWWdZU0IzWVhrZ2RHOGdaMlYwSUhSb1pTQmpiMjF3ZFhSbFpDQjJZV3gxWlNCbGVHbHpkSE1zSUhWelpTQjBhR0YwWEc1Y2RGeDBhV1lnS0NCMllXd2dQVDA5SUhWdVpHVm1hVzVsWkNBcElIdGNibHgwWEhSY2RIWmhiQ0E5SUdOMWNrTlRVeWdnWld4bGJTd2dibUZ0WlN3Z2MzUjViR1Z6SUNrN1hHNWNkRngwZlZ4dVhHNWNkRngwTHk4Z1EyOXVkbVZ5ZENCY0ltNXZjbTFoYkZ3aUlIUnZJR052YlhCMWRHVmtJSFpoYkhWbFhHNWNkRngwYVdZZ0tDQjJZV3dnUFQwOUlGd2libTl5YldGc1hDSWdKaVlnYm1GdFpTQnBiaUJqYzNOT2IzSnRZV3hVY21GdWMyWnZjbTBnS1NCN1hHNWNkRngwWEhSMllXd2dQU0JqYzNOT2IzSnRZV3hVY21GdWMyWnZjbTFiSUc1aGJXVWdYVHRjYmx4MFhIUjlYRzVjYmx4MFhIUXZMeUJOWVd0bElHNTFiV1Z5YVdNZ2FXWWdabTl5WTJWa0lHOXlJR0VnY1hWaGJHbG1hV1Z5SUhkaGN5QndjbTkyYVdSbFpDQmhibVFnZG1Gc0lHeHZiMnR6SUc1MWJXVnlhV05jYmx4MFhIUnBaaUFvSUdWNGRISmhJRDA5UFNCY0lsd2lJSHg4SUdWNGRISmhJQ2tnZTF4dVhIUmNkRngwYm5WdElEMGdjR0Z5YzJWR2JHOWhkQ2dnZG1Gc0lDazdYRzVjZEZ4MFhIUnlaWFIxY200Z1pYaDBjbUVnUFQwOUlIUnlkV1VnZkh3Z2FYTkdhVzVwZEdVb0lHNTFiU0FwSUQ4Z2JuVnRJSHg4SURBZ09pQjJZV3c3WEc1Y2RGeDBmVnh1WEc1Y2RGeDBjbVYwZFhKdUlIWmhiRHRjYmx4MGZWeHVmU0FwTzF4dVhHNXFVWFZsY25rdVpXRmphQ2dnV3lCY0ltaGxhV2RvZEZ3aUxDQmNJbmRwWkhSb1hDSWdYU3dnWm5WdVkzUnBiMjRvSUY5cExDQmthVzFsYm5OcGIyNGdLU0I3WEc1Y2RHcFJkV1Z5ZVM1amMzTkliMjlyYzFzZ1pHbHRaVzV6YVc5dUlGMGdQU0I3WEc1Y2RGeDBaMlYwT2lCbWRXNWpkR2x2YmlnZ1pXeGxiU3dnWTI5dGNIVjBaV1FzSUdWNGRISmhJQ2tnZTF4dVhIUmNkRngwYVdZZ0tDQmpiMjF3ZFhSbFpDQXBJSHRjYmx4dVhIUmNkRngwWEhRdkx5QkRaWEowWVdsdUlHVnNaVzFsYm5SeklHTmhiaUJvWVhabElHUnBiV1Z1YzJsdmJpQnBibVp2SUdsbUlIZGxJR2x1ZG1semFXSnNlU0J6YUc5M0lIUm9aVzFjYmx4MFhIUmNkRngwTHk4Z1luVjBJR2wwSUcxMWMzUWdhR0YyWlNCaElHTjFjbkpsYm5RZ1pHbHpjR3hoZVNCemRIbHNaU0IwYUdGMElIZHZkV3hrSUdKbGJtVm1hWFJjYmx4MFhIUmNkRngwY21WMGRYSnVJSEprYVhOd2JHRjVjM2RoY0M1MFpYTjBLQ0JxVVhWbGNua3VZM056S0NCbGJHVnRMQ0JjSW1ScGMzQnNZWGxjSWlBcElDa2dKaVpjYmx4dVhIUmNkRngwWEhSY2RDOHZJRk4xY0hCdmNuUTZJRk5oWm1GeWFTQTRLMXh1WEhSY2RGeDBYSFJjZEM4dklGUmhZbXhsSUdOdmJIVnRibk1nYVc0Z1UyRm1ZWEpwSUdoaGRtVWdibTl1TFhwbGNtOGdiMlptYzJWMFYybGtkR2dnSmlCNlpYSnZYRzVjZEZ4MFhIUmNkRngwTHk4Z1oyVjBRbTkxYm1ScGJtZERiR2xsYm5SU1pXTjBLQ2t1ZDJsa2RHZ2dkVzVzWlhOeklHUnBjM0JzWVhrZ2FYTWdZMmhoYm1kbFpDNWNibHgwWEhSY2RGeDBYSFF2THlCVGRYQndiM0owT2lCSlJTQThQVEV4SUc5dWJIbGNibHgwWEhSY2RGeDBYSFF2THlCU2RXNXVhVzVuSUdkbGRFSnZkVzVrYVc1blEyeHBaVzUwVW1WamRDQnZiaUJoSUdScGMyTnZibTVsWTNSbFpDQnViMlJsWEc1Y2RGeDBYSFJjZEZ4MEx5OGdhVzRnU1VVZ2RHaHliM2R6SUdGdUlHVnljbTl5TGx4dVhIUmNkRngwWEhSY2RDZ2dJV1ZzWlcwdVoyVjBRMnhwWlc1MFVtVmpkSE1vS1M1c1pXNW5kR2dnZkh3Z0lXVnNaVzB1WjJWMFFtOTFibVJwYm1kRGJHbGxiblJTWldOMEtDa3VkMmxrZEdnZ0tTQS9YRzVjZEZ4MFhIUmNkRngwYzNkaGNDZ2daV3hsYlN3Z1kzTnpVMmh2ZHl3Z1puVnVZM1JwYjI0b0tTQjdYRzVjZEZ4MFhIUmNkRngwWEhSeVpYUjFjbTRnWjJWMFYybGtkR2hQY2tobGFXZG9kQ2dnWld4bGJTd2daR2x0Wlc1emFXOXVMQ0JsZUhSeVlTQXBPMXh1WEhSY2RGeDBYSFJjZEgwZ0tTQTZYRzVjZEZ4MFhIUmNkRngwWjJWMFYybGtkR2hQY2tobGFXZG9kQ2dnWld4bGJTd2daR2x0Wlc1emFXOXVMQ0JsZUhSeVlTQXBPMXh1WEhSY2RGeDBmVnh1WEhSY2RIMHNYRzVjYmx4MFhIUnpaWFE2SUdaMWJtTjBhVzl1S0NCbGJHVnRMQ0IyWVd4MVpTd2daWGgwY21FZ0tTQjdYRzVjZEZ4MFhIUjJZWElnYldGMFkyaGxjeXhjYmx4MFhIUmNkRngwYzNSNWJHVnpJRDBnWjJWMFUzUjViR1Z6S0NCbGJHVnRJQ2tzWEc1Y2JseDBYSFJjZEZ4MEx5OGdUMjVzZVNCeVpXRmtJSE4wZVd4bGN5NXdiM05wZEdsdmJpQnBaaUIwYUdVZ2RHVnpkQ0JvWVhNZ1lTQmphR0Z1WTJVZ2RHOGdabUZwYkZ4dVhIUmNkRngwWEhRdkx5QjBieUJoZG05cFpDQm1iM0pqYVc1bklHRWdjbVZtYkc5M0xseHVYSFJjZEZ4MFhIUnpZM0p2Ykd4aWIzaFRhWHBsUW5Wbloza2dQU0FoYzNWd2NHOXlkQzV6WTNKdmJHeGliM2hUYVhwbEtDa2dKaVpjYmx4MFhIUmNkRngwWEhSemRIbHNaWE11Y0c5emFYUnBiMjRnUFQwOUlGd2lZV0p6YjJ4MWRHVmNJaXhjYmx4dVhIUmNkRngwWEhRdkx5QlVieUJoZG05cFpDQm1iM0pqYVc1bklHRWdjbVZtYkc5M0xDQnZibXg1SUdabGRHTm9JR0p2ZUZOcGVtbHVaeUJwWmlCM1pTQnVaV1ZrSUdsMElDaG5hQzB6T1RreEtWeHVYSFJjZEZ4MFhIUmliM2hUYVhwcGJtZE9aV1ZrWldRZ1BTQnpZM0p2Ykd4aWIzaFRhWHBsUW5Wbloza2dmSHdnWlhoMGNtRXNYRzVjZEZ4MFhIUmNkR2x6UW05eVpHVnlRbTk0SUQwZ1ltOTRVMmw2YVc1blRtVmxaR1ZrSUNZbVhHNWNkRngwWEhSY2RGeDBhbEYxWlhKNUxtTnpjeWdnWld4bGJTd2dYQ0ppYjNoVGFYcHBibWRjSWl3Z1ptRnNjMlVzSUhOMGVXeGxjeUFwSUQwOVBTQmNJbUp2Y21SbGNpMWliM2hjSWl4Y2JseDBYSFJjZEZ4MGMzVmlkSEpoWTNRZ1BTQmxlSFJ5WVNBL1hHNWNkRngwWEhSY2RGeDBZbTk0VFc5a1pXeEJaR3AxYzNSdFpXNTBLRnh1WEhSY2RGeDBYSFJjZEZ4MFpXeGxiU3hjYmx4MFhIUmNkRngwWEhSY2RHUnBiV1Z1YzJsdmJpeGNibHgwWEhSY2RGeDBYSFJjZEdWNGRISmhMRnh1WEhSY2RGeDBYSFJjZEZ4MGFYTkNiM0prWlhKQ2IzZ3NYRzVjZEZ4MFhIUmNkRngwWEhSemRIbHNaWE5jYmx4MFhIUmNkRngwWEhRcElEcGNibHgwWEhSY2RGeDBYSFF3TzF4dVhHNWNkRngwWEhRdkx5QkJZMk52ZFc1MElHWnZjaUIxYm5KbGJHbGhZbXhsSUdKdmNtUmxjaTFpYjNnZ1pHbHRaVzV6YVc5dWN5QmllU0JqYjIxd1lYSnBibWNnYjJabWMyVjBLaUIwYnlCamIyMXdkWFJsWkNCaGJtUmNibHgwWEhSY2RDOHZJR1poYTJsdVp5QmhJR052Ym5SbGJuUXRZbTk0SUhSdklHZGxkQ0JpYjNKa1pYSWdZVzVrSUhCaFpHUnBibWNnS0dkb0xUTTJPVGtwWEc1Y2RGeDBYSFJwWmlBb0lHbHpRbTl5WkdWeVFtOTRJQ1ltSUhOamNtOXNiR0p2ZUZOcGVtVkNkV2RuZVNBcElIdGNibHgwWEhSY2RGeDBjM1ZpZEhKaFkzUWdMVDBnVFdGMGFDNWpaV2xzS0Z4dVhIUmNkRngwWEhSY2RHVnNaVzFiSUZ3aWIyWm1jMlYwWENJZ0t5QmthVzFsYm5OcGIyNWJJREFnWFM1MGIxVndjR1Z5UTJGelpTZ3BJQ3NnWkdsdFpXNXphVzl1TG5Oc2FXTmxLQ0F4SUNrZ1hTQXRYRzVjZEZ4MFhIUmNkRngwY0dGeWMyVkdiRzloZENnZ2MzUjViR1Z6V3lCa2FXMWxibk5wYjI0Z1hTQXBJQzFjYmx4MFhIUmNkRngwWEhSaWIzaE5iMlJsYkVGa2FuVnpkRzFsYm5Rb0lHVnNaVzBzSUdScGJXVnVjMmx2Yml3Z1hDSmliM0prWlhKY0lpd2dabUZzYzJVc0lITjBlV3hsY3lBcElDMWNibHgwWEhSY2RGeDBYSFF3TGpWY2JseDBYSFJjZEZ4MEtUdGNibHgwWEhSY2RIMWNibHh1WEhSY2RGeDBMeThnUTI5dWRtVnlkQ0IwYnlCd2FYaGxiSE1nYVdZZ2RtRnNkV1VnWVdScWRYTjBiV1Z1ZENCcGN5QnVaV1ZrWldSY2JseDBYSFJjZEdsbUlDZ2djM1ZpZEhKaFkzUWdKaVlnS0NCdFlYUmphR1Z6SUQwZ2NtTnpjMDUxYlM1bGVHVmpLQ0IyWVd4MVpTQXBJQ2tnSmlaY2JseDBYSFJjZEZ4MEtDQnRZWFJqYUdWeld5QXpJRjBnZkh3Z1hDSndlRndpSUNrZ0lUMDlJRndpY0hoY0lpQXBJSHRjYmx4dVhIUmNkRngwWEhSbGJHVnRMbk4wZVd4bFd5QmthVzFsYm5OcGIyNGdYU0E5SUhaaGJIVmxPMXh1WEhSY2RGeDBYSFIyWVd4MVpTQTlJR3BSZFdWeWVTNWpjM01vSUdWc1pXMHNJR1JwYldWdWMybHZiaUFwTzF4dVhIUmNkRngwZlZ4dVhHNWNkRngwWEhSeVpYUjFjbTRnYzJWMFVHOXphWFJwZG1WT2RXMWlaWElvSUdWc1pXMHNJSFpoYkhWbExDQnpkV0owY21GamRDQXBPMXh1WEhSY2RIMWNibHgwZlR0Y2JuMGdLVHRjYmx4dWFsRjFaWEo1TG1OemMwaHZiMnR6TG0xaGNtZHBia3hsWm5RZ1BTQmhaR1JIWlhSSWIyOXJTV1lvSUhOMWNIQnZjblF1Y21Wc2FXRmliR1ZOWVhKbmFXNU1aV1owTEZ4dVhIUm1kVzVqZEdsdmJpZ2daV3hsYlN3Z1kyOXRjSFYwWldRZ0tTQjdYRzVjZEZ4MGFXWWdLQ0JqYjIxd2RYUmxaQ0FwSUh0Y2JseDBYSFJjZEhKbGRIVnliaUFvSUhCaGNuTmxSbXh2WVhRb0lHTjFja05UVXlnZ1pXeGxiU3dnWENKdFlYSm5hVzVNWldaMFhDSWdLU0FwSUh4OFhHNWNkRngwWEhSY2RHVnNaVzB1WjJWMFFtOTFibVJwYm1kRGJHbGxiblJTWldOMEtDa3ViR1ZtZENBdFhHNWNkRngwWEhSY2RGeDBjM2RoY0NnZ1pXeGxiU3dnZXlCdFlYSm5hVzVNWldaME9pQXdJSDBzSUdaMWJtTjBhVzl1S0NrZ2UxeHVYSFJjZEZ4MFhIUmNkRngwY21WMGRYSnVJR1ZzWlcwdVoyVjBRbTkxYm1ScGJtZERiR2xsYm5SU1pXTjBLQ2t1YkdWbWREdGNibHgwWEhSY2RGeDBYSFI5SUNsY2JseDBYSFJjZENrZ0t5QmNJbkI0WENJN1hHNWNkRngwZlZ4dVhIUjlYRzRwTzF4dVhHNHZMeUJVYUdWelpTQm9iMjlyY3lCaGNtVWdkWE5sWkNCaWVTQmhibWx0WVhSbElIUnZJR1Y0Y0dGdVpDQndjbTl3WlhKMGFXVnpYRzVxVVhWbGNua3VaV0ZqYUNnZ2UxeHVYSFJ0WVhKbmFXNDZJRndpWENJc1hHNWNkSEJoWkdScGJtYzZJRndpWENJc1hHNWNkR0p2Y21SbGNqb2dYQ0pYYVdSMGFGd2lYRzU5TENCbWRXNWpkR2x2YmlnZ2NISmxabWw0TENCemRXWm1hWGdnS1NCN1hHNWNkR3BSZFdWeWVTNWpjM05JYjI5cmMxc2djSEpsWm1sNElDc2djM1ZtWm1sNElGMGdQU0I3WEc1Y2RGeDBaWGh3WVc1a09pQm1kVzVqZEdsdmJpZ2dkbUZzZFdVZ0tTQjdYRzVjZEZ4MFhIUjJZWElnYVNBOUlEQXNYRzVjZEZ4MFhIUmNkR1Y0Y0dGdVpHVmtJRDBnZTMwc1hHNWNibHgwWEhSY2RGeDBMeThnUVhOemRXMWxjeUJoSUhOcGJtZHNaU0J1ZFcxaVpYSWdhV1lnYm05MElHRWdjM1J5YVc1blhHNWNkRngwWEhSY2RIQmhjblJ6SUQwZ2RIbHdaVzltSUhaaGJIVmxJRDA5UFNCY0luTjBjbWx1WjF3aUlEOGdkbUZzZFdVdWMzQnNhWFFvSUZ3aUlGd2lJQ2tnT2lCYklIWmhiSFZsSUYwN1hHNWNibHgwWEhSY2RHWnZjaUFvSURzZ2FTQThJRFE3SUdrckt5QXBJSHRjYmx4MFhIUmNkRngwWlhod1lXNWtaV1JiSUhCeVpXWnBlQ0FySUdOemMwVjRjR0Z1WkZzZ2FTQmRJQ3NnYzNWbVptbDRJRjBnUFZ4dVhIUmNkRngwWEhSY2RIQmhjblJ6V3lCcElGMGdmSHdnY0dGeWRITmJJR2tnTFNBeUlGMGdmSHdnY0dGeWRITmJJREFnWFR0Y2JseDBYSFJjZEgxY2JseHVYSFJjZEZ4MGNtVjBkWEp1SUdWNGNHRnVaR1ZrTzF4dVhIUmNkSDFjYmx4MGZUdGNibHh1WEhScFppQW9JSEJ5WldacGVDQWhQVDBnWENKdFlYSm5hVzVjSWlBcElIdGNibHgwWEhScVVYVmxjbmt1WTNOelNHOXZhM05iSUhCeVpXWnBlQ0FySUhOMVptWnBlQ0JkTG5ObGRDQTlJSE5sZEZCdmMybDBhWFpsVG5WdFltVnlPMXh1WEhSOVhHNTlJQ2s3WEc1Y2JtcFJkV1Z5ZVM1bWJpNWxlSFJsYm1Rb0lIdGNibHgwWTNOek9pQm1kVzVqZEdsdmJpZ2dibUZ0WlN3Z2RtRnNkV1VnS1NCN1hHNWNkRngwY21WMGRYSnVJR0ZqWTJWemN5Z2dkR2hwY3l3Z1puVnVZM1JwYjI0b0lHVnNaVzBzSUc1aGJXVXNJSFpoYkhWbElDa2dlMXh1WEhSY2RGeDBkbUZ5SUhOMGVXeGxjeXdnYkdWdUxGeHVYSFJjZEZ4MFhIUnRZWEFnUFNCN2ZTeGNibHgwWEhSY2RGeDBhU0E5SURBN1hHNWNibHgwWEhSY2RHbG1JQ2dnUVhKeVlYa3VhWE5CY25KaGVTZ2dibUZ0WlNBcElDa2dlMXh1WEhSY2RGeDBYSFJ6ZEhsc1pYTWdQU0JuWlhSVGRIbHNaWE1vSUdWc1pXMGdLVHRjYmx4MFhIUmNkRngwYkdWdUlEMGdibUZ0WlM1c1pXNW5kR2c3WEc1Y2JseDBYSFJjZEZ4MFptOXlJQ2dnT3lCcElEd2diR1Z1T3lCcEt5c2dLU0I3WEc1Y2RGeDBYSFJjZEZ4MGJXRndXeUJ1WVcxbFd5QnBJRjBnWFNBOUlHcFJkV1Z5ZVM1amMzTW9JR1ZzWlcwc0lHNWhiV1ZiSUdrZ1hTd2dabUZzYzJVc0lITjBlV3hsY3lBcE8xeHVYSFJjZEZ4MFhIUjlYRzVjYmx4MFhIUmNkRngwY21WMGRYSnVJRzFoY0R0Y2JseDBYSFJjZEgxY2JseHVYSFJjZEZ4MGNtVjBkWEp1SUhaaGJIVmxJQ0U5UFNCMWJtUmxabWx1WldRZ1AxeHVYSFJjZEZ4MFhIUnFVWFZsY25rdWMzUjViR1VvSUdWc1pXMHNJRzVoYldVc0lIWmhiSFZsSUNrZ09seHVYSFJjZEZ4MFhIUnFVWFZsY25rdVkzTnpLQ0JsYkdWdExDQnVZVzFsSUNrN1hHNWNkRngwZlN3Z2JtRnRaU3dnZG1Gc2RXVXNJR0Z5WjNWdFpXNTBjeTVzWlc1bmRHZ2dQaUF4SUNrN1hHNWNkSDFjYm4wZ0tUdGNibHh1WEc1bWRXNWpkR2x2YmlCVWQyVmxiaWdnWld4bGJTd2diM0IwYVc5dWN5d2djSEp2Y0N3Z1pXNWtMQ0JsWVhOcGJtY2dLU0I3WEc1Y2RISmxkSFZ5YmlCdVpYY2dWSGRsWlc0dWNISnZkRzkwZVhCbExtbHVhWFFvSUdWc1pXMHNJRzl3ZEdsdmJuTXNJSEJ5YjNBc0lHVnVaQ3dnWldGemFXNW5JQ2s3WEc1OVhHNXFVWFZsY25rdVZIZGxaVzRnUFNCVWQyVmxianRjYmx4dVZIZGxaVzR1Y0hKdmRHOTBlWEJsSUQwZ2UxeHVYSFJqYjI1emRISjFZM1J2Y2pvZ1ZIZGxaVzRzWEc1Y2RHbHVhWFE2SUdaMWJtTjBhVzl1S0NCbGJHVnRMQ0J2Y0hScGIyNXpMQ0J3Y205d0xDQmxibVFzSUdWaGMybHVaeXdnZFc1cGRDQXBJSHRjYmx4MFhIUjBhR2x6TG1Wc1pXMGdQU0JsYkdWdE8xeHVYSFJjZEhSb2FYTXVjSEp2Y0NBOUlIQnliM0E3WEc1Y2RGeDBkR2hwY3k1bFlYTnBibWNnUFNCbFlYTnBibWNnZkh3Z2FsRjFaWEo1TG1WaGMybHVaeTVmWkdWbVlYVnNkRHRjYmx4MFhIUjBhR2x6TG05d2RHbHZibk1nUFNCdmNIUnBiMjV6TzF4dVhIUmNkSFJvYVhNdWMzUmhjblFnUFNCMGFHbHpMbTV2ZHlBOUlIUm9hWE11WTNWeUtDazdYRzVjZEZ4MGRHaHBjeTVsYm1RZ1BTQmxibVE3WEc1Y2RGeDBkR2hwY3k1MWJtbDBJRDBnZFc1cGRDQjhmQ0FvSUdwUmRXVnllUzVqYzNOT2RXMWlaWEpiSUhCeWIzQWdYU0EvSUZ3aVhDSWdPaUJjSW5CNFhDSWdLVHRjYmx4MGZTeGNibHgwWTNWeU9pQm1kVzVqZEdsdmJpZ3BJSHRjYmx4MFhIUjJZWElnYUc5dmEzTWdQU0JVZDJWbGJpNXdjbTl3U0c5dmEzTmJJSFJvYVhNdWNISnZjQ0JkTzF4dVhHNWNkRngwY21WMGRYSnVJR2h2YjJ0eklDWW1JR2h2YjJ0ekxtZGxkQ0EvWEc1Y2RGeDBYSFJvYjI5cmN5NW5aWFFvSUhSb2FYTWdLU0E2WEc1Y2RGeDBYSFJVZDJWbGJpNXdjbTl3U0c5dmEzTXVYMlJsWm1GMWJIUXVaMlYwS0NCMGFHbHpJQ2s3WEc1Y2RIMHNYRzVjZEhKMWJqb2dablZ1WTNScGIyNG9JSEJsY21ObGJuUWdLU0I3WEc1Y2RGeDBkbUZ5SUdWaGMyVmtMRnh1WEhSY2RGeDBhRzl2YTNNZ1BTQlVkMlZsYmk1d2NtOXdTRzl2YTNOYklIUm9hWE11Y0hKdmNDQmRPMXh1WEc1Y2RGeDBhV1lnS0NCMGFHbHpMbTl3ZEdsdmJuTXVaSFZ5WVhScGIyNGdLU0I3WEc1Y2RGeDBYSFIwYUdsekxuQnZjeUE5SUdWaGMyVmtJRDBnYWxGMVpYSjVMbVZoYzJsdVoxc2dkR2hwY3k1bFlYTnBibWNnWFNoY2JseDBYSFJjZEZ4MGNHVnlZMlZ1ZEN3Z2RHaHBjeTV2Y0hScGIyNXpMbVIxY21GMGFXOXVJQ29nY0dWeVkyVnVkQ3dnTUN3Z01Td2dkR2hwY3k1dmNIUnBiMjV6TG1SMWNtRjBhVzl1WEc1Y2RGeDBYSFFwTzF4dVhIUmNkSDBnWld4elpTQjdYRzVjZEZ4MFhIUjBhR2x6TG5CdmN5QTlJR1ZoYzJWa0lEMGdjR1Z5WTJWdWREdGNibHgwWEhSOVhHNWNkRngwZEdocGN5NXViM2NnUFNBb0lIUm9hWE11Wlc1a0lDMGdkR2hwY3k1emRHRnlkQ0FwSUNvZ1pXRnpaV1FnS3lCMGFHbHpMbk4wWVhKME8xeHVYRzVjZEZ4MGFXWWdLQ0IwYUdsekxtOXdkR2x2Ym5NdWMzUmxjQ0FwSUh0Y2JseDBYSFJjZEhSb2FYTXViM0IwYVc5dWN5NXpkR1Z3TG1OaGJHd29JSFJvYVhNdVpXeGxiU3dnZEdocGN5NXViM2NzSUhSb2FYTWdLVHRjYmx4MFhIUjlYRzVjYmx4MFhIUnBaaUFvSUdodmIydHpJQ1ltSUdodmIydHpMbk5sZENBcElIdGNibHgwWEhSY2RHaHZiMnR6TG5ObGRDZ2dkR2hwY3lBcE8xeHVYSFJjZEgwZ1pXeHpaU0I3WEc1Y2RGeDBYSFJVZDJWbGJpNXdjbTl3U0c5dmEzTXVYMlJsWm1GMWJIUXVjMlYwS0NCMGFHbHpJQ2s3WEc1Y2RGeDBmVnh1WEhSY2RISmxkSFZ5YmlCMGFHbHpPMXh1WEhSOVhHNTlPMXh1WEc1VWQyVmxiaTV3Y205MGIzUjVjR1V1YVc1cGRDNXdjbTkwYjNSNWNHVWdQU0JVZDJWbGJpNXdjbTkwYjNSNWNHVTdYRzVjYmxSM1pXVnVMbkJ5YjNCSWIyOXJjeUE5SUh0Y2JseDBYMlJsWm1GMWJIUTZJSHRjYmx4MFhIUm5aWFE2SUdaMWJtTjBhVzl1S0NCMGQyVmxiaUFwSUh0Y2JseDBYSFJjZEhaaGNpQnlaWE4xYkhRN1hHNWNibHgwWEhSY2RDOHZJRlZ6WlNCaElIQnliM0JsY25SNUlHOXVJSFJvWlNCbGJHVnRaVzUwSUdScGNtVmpkR3g1SUhkb1pXNGdhWFFnYVhNZ2JtOTBJR0VnUkU5TklHVnNaVzFsYm5Rc1hHNWNkRngwWEhRdkx5QnZjaUIzYUdWdUlIUm9aWEpsSUdseklHNXZJRzFoZEdOb2FXNW5JSE4wZVd4bElIQnliM0JsY25SNUlIUm9ZWFFnWlhocGMzUnpMbHh1WEhSY2RGeDBhV1lnS0NCMGQyVmxiaTVsYkdWdExtNXZaR1ZVZVhCbElDRTlQU0F4SUh4OFhHNWNkRngwWEhSY2RIUjNaV1Z1TG1Wc1pXMWJJSFIzWldWdUxuQnliM0FnWFNBaFBTQnVkV3hzSUNZbUlIUjNaV1Z1TG1Wc1pXMHVjM1I1YkdWYklIUjNaV1Z1TG5CeWIzQWdYU0E5UFNCdWRXeHNJQ2tnZTF4dVhIUmNkRngwWEhSeVpYUjFjbTRnZEhkbFpXNHVaV3hsYlZzZ2RIZGxaVzR1Y0hKdmNDQmRPMXh1WEhSY2RGeDBmVnh1WEc1Y2RGeDBYSFF2THlCUVlYTnphVzVuSUdGdUlHVnRjSFI1SUhOMGNtbHVaeUJoY3lCaElETnlaQ0J3WVhKaGJXVjBaWElnZEc4Z0xtTnpjeUIzYVd4c0lHRjFkRzl0WVhScFkyRnNiSGxjYmx4MFhIUmNkQzh2SUdGMGRHVnRjSFFnWVNCd1lYSnpaVVpzYjJGMElHRnVaQ0JtWVd4c1ltRmpheUIwYnlCaElITjBjbWx1WnlCcFppQjBhR1VnY0dGeWMyVWdabUZwYkhNdVhHNWNkRngwWEhRdkx5QlRhVzF3YkdVZ2RtRnNkV1Z6SUhOMVkyZ2dZWE1nWENJeE1IQjRYQ0lnWVhKbElIQmhjbk5sWkNCMGJ5QkdiRzloZER0Y2JseDBYSFJjZEM4dklHTnZiWEJzWlhnZ2RtRnNkV1Z6SUhOMVkyZ2dZWE1nWENKeWIzUmhkR1VvTVhKaFpDbGNJaUJoY21VZ2NtVjBkWEp1WldRZ1lYTXRhWE11WEc1Y2RGeDBYSFJ5WlhOMWJIUWdQU0JxVVhWbGNua3VZM056S0NCMGQyVmxiaTVsYkdWdExDQjBkMlZsYmk1d2NtOXdMQ0JjSWx3aUlDazdYRzVjYmx4MFhIUmNkQzh2SUVWdGNIUjVJSE4wY21sdVozTXNJRzUxYkd3c0lIVnVaR1ZtYVc1bFpDQmhibVFnWENKaGRYUnZYQ0lnWVhKbElHTnZiblpsY25SbFpDQjBieUF3TGx4dVhIUmNkRngwY21WMGRYSnVJQ0Z5WlhOMWJIUWdmSHdnY21WemRXeDBJRDA5UFNCY0ltRjFkRzljSWlBL0lEQWdPaUJ5WlhOMWJIUTdYRzVjZEZ4MGZTeGNibHgwWEhSelpYUTZJR1oxYm1OMGFXOXVLQ0IwZDJWbGJpQXBJSHRjYmx4dVhIUmNkRngwTHk4Z1ZYTmxJSE4wWlhBZ2FHOXZheUJtYjNJZ1ltRmpheUJqYjIxd1lYUXVYRzVjZEZ4MFhIUXZMeUJWYzJVZ1kzTnpTRzl2YXlCcFppQnBkSE1nZEdobGNtVXVYRzVjZEZ4MFhIUXZMeUJWYzJVZ0xuTjBlV3hsSUdsbUlHRjJZV2xzWVdKc1pTQmhibVFnZFhObElIQnNZV2x1SUhCeWIzQmxjblJwWlhNZ2QyaGxjbVVnWVhaaGFXeGhZbXhsTGx4dVhIUmNkRngwYVdZZ0tDQnFVWFZsY25rdVpuZ3VjM1JsY0ZzZ2RIZGxaVzR1Y0hKdmNDQmRJQ2tnZTF4dVhIUmNkRngwWEhScVVYVmxjbmt1Wm5ndWMzUmxjRnNnZEhkbFpXNHVjSEp2Y0NCZEtDQjBkMlZsYmlBcE8xeHVYSFJjZEZ4MGZTQmxiSE5sSUdsbUlDZ2dkSGRsWlc0dVpXeGxiUzV1YjJSbFZIbHdaU0E5UFQwZ01TQW1KaUFvWEc1Y2RGeDBYSFJjZEdwUmRXVnllUzVqYzNOSWIyOXJjMXNnZEhkbFpXNHVjSEp2Y0NCZElIeDhYRzVjZEZ4MFhIUmNkRngwZEhkbFpXNHVaV3hsYlM1emRIbHNaVnNnWm1sdVlXeFFjbTl3VG1GdFpTZ2dkSGRsWlc0dWNISnZjQ0FwSUYwZ0lUMGdiblZzYkNBcElDa2dlMXh1WEhSY2RGeDBYSFJxVVhWbGNua3VjM1I1YkdVb0lIUjNaV1Z1TG1Wc1pXMHNJSFIzWldWdUxuQnliM0FzSUhSM1pXVnVMbTV2ZHlBcklIUjNaV1Z1TG5WdWFYUWdLVHRjYmx4MFhIUmNkSDBnWld4elpTQjdYRzVjZEZ4MFhIUmNkSFIzWldWdUxtVnNaVzFiSUhSM1pXVnVMbkJ5YjNBZ1hTQTlJSFIzWldWdUxtNXZkenRjYmx4MFhIUmNkSDFjYmx4MFhIUjlYRzVjZEgxY2JuMDdYRzVjYmk4dklGTjFjSEJ2Y25RNklFbEZJRHc5T1NCdmJteDVYRzR2THlCUVlXNXBZeUJpWVhObFpDQmhjSEJ5YjJGamFDQjBieUJ6WlhSMGFXNW5JSFJvYVc1bmN5QnZiaUJrYVhOamIyNXVaV04wWldRZ2JtOWtaWE5jYmxSM1pXVnVMbkJ5YjNCSWIyOXJjeTV6WTNKdmJHeFViM0FnUFNCVWQyVmxiaTV3Y205d1NHOXZhM011YzJOeWIyeHNUR1ZtZENBOUlIdGNibHgwYzJWME9pQm1kVzVqZEdsdmJpZ2dkSGRsWlc0Z0tTQjdYRzVjZEZ4MGFXWWdLQ0IwZDJWbGJpNWxiR1Z0TG01dlpHVlVlWEJsSUNZbUlIUjNaV1Z1TG1Wc1pXMHVjR0Z5Wlc1MFRtOWtaU0FwSUh0Y2JseDBYSFJjZEhSM1pXVnVMbVZzWlcxYklIUjNaV1Z1TG5CeWIzQWdYU0E5SUhSM1pXVnVMbTV2ZHp0Y2JseDBYSFI5WEc1Y2RIMWNibjA3WEc1Y2JtcFJkV1Z5ZVM1bFlYTnBibWNnUFNCN1hHNWNkR3hwYm1WaGNqb2dablZ1WTNScGIyNG9JSEFnS1NCN1hHNWNkRngwY21WMGRYSnVJSEE3WEc1Y2RIMHNYRzVjZEhOM2FXNW5PaUJtZFc1amRHbHZiaWdnY0NBcElIdGNibHgwWEhSeVpYUjFjbTRnTUM0MUlDMGdUV0YwYUM1amIzTW9JSEFnS2lCTllYUm9MbEJKSUNrZ0x5QXlPMXh1WEhSOUxGeHVYSFJmWkdWbVlYVnNkRG9nWENKemQybHVaMXdpWEc1OU8xeHVYRzVxVVhWbGNua3VabmdnUFNCVWQyVmxiaTV3Y205MGIzUjVjR1V1YVc1cGREdGNibHh1THk4Z1FtRmpheUJqYjIxd1lYUWdQREV1T0NCbGVIUmxibk5wYjI0Z2NHOXBiblJjYm1wUmRXVnllUzVtZUM1emRHVndJRDBnZTMwN1hHNWNibHh1WEc1Y2JuWmhjbHh1WEhSbWVFNXZkeXdnYVc1UWNtOW5jbVZ6Y3l4Y2JseDBjbVo0ZEhsd1pYTWdQU0F2WGlnL09uUnZaMmRzWlh4emFHOTNmR2hwWkdVcEpDOHNYRzVjZEhKeWRXNGdQU0F2Y1hWbGRXVkliMjlyY3lRdk8xeHVYRzVtZFc1amRHbHZiaUJ6WTJobFpIVnNaU2dwSUh0Y2JseDBhV1lnS0NCcGJsQnliMmR5WlhOeklDa2dlMXh1WEhSY2RHbG1JQ2dnWkc5amRXMWxiblF1YUdsa1pHVnVJRDA5UFNCbVlXeHpaU0FtSmlCM2FXNWtiM2N1Y21WeGRXVnpkRUZ1YVcxaGRHbHZia1p5WVcxbElDa2dlMXh1WEhSY2RGeDBkMmx1Wkc5M0xuSmxjWFZsYzNSQmJtbHRZWFJwYjI1R2NtRnRaU2dnYzJOb1pXUjFiR1VnS1R0Y2JseDBYSFI5SUdWc2MyVWdlMXh1WEhSY2RGeDBkMmx1Wkc5M0xuTmxkRlJwYldWdmRYUW9JSE5qYUdWa2RXeGxMQ0JxVVhWbGNua3Vabmd1YVc1MFpYSjJZV3dnS1R0Y2JseDBYSFI5WEc1Y2JseDBYSFJxVVhWbGNua3Vabmd1ZEdsamF5Z3BPMXh1WEhSOVhHNTlYRzVjYmk4dklFRnVhVzFoZEdsdmJuTWdZM0psWVhSbFpDQnplVzVqYUhKdmJtOTFjMng1SUhkcGJHd2djblZ1SUhONWJtTm9jbTl1YjNWemJIbGNibVoxYm1OMGFXOXVJR055WldGMFpVWjRUbTkzS0NrZ2UxeHVYSFIzYVc1a2IzY3VjMlYwVkdsdFpXOTFkQ2dnWm5WdVkzUnBiMjRvS1NCN1hHNWNkRngwWm5oT2IzY2dQU0IxYm1SbFptbHVaV1E3WEc1Y2RIMGdLVHRjYmx4MGNtVjBkWEp1SUNnZ1puaE9iM2NnUFNCRVlYUmxMbTV2ZHlncElDazdYRzU5WEc1Y2JpOHZJRWRsYm1WeVlYUmxJSEJoY21GdFpYUmxjbk1nZEc4Z1kzSmxZWFJsSUdFZ2MzUmhibVJoY21RZ1lXNXBiV0YwYVc5dVhHNW1kVzVqZEdsdmJpQm5aVzVHZUNnZ2RIbHdaU3dnYVc1amJIVmtaVmRwWkhSb0lDa2dlMXh1WEhSMllYSWdkMmhwWTJnc1hHNWNkRngwYVNBOUlEQXNYRzVjZEZ4MFlYUjBjbk1nUFNCN0lHaGxhV2RvZERvZ2RIbHdaU0I5TzF4dVhHNWNkQzh2SUVsbUlIZGxJR2x1WTJ4MVpHVWdkMmxrZEdnc0lITjBaWEFnZG1Gc2RXVWdhWE1nTVNCMGJ5QmtieUJoYkd3Z1kzTnpSWGh3WVc1a0lIWmhiSFZsY3l4Y2JseDBMeThnYjNSb1pYSjNhWE5sSUhOMFpYQWdkbUZzZFdVZ2FYTWdNaUIwYnlCemEybHdJRzkyWlhJZ1RHVm1kQ0JoYm1RZ1VtbG5hSFJjYmx4MGFXNWpiSFZrWlZkcFpIUm9JRDBnYVc1amJIVmtaVmRwWkhSb0lEOGdNU0E2SURBN1hHNWNkR1p2Y2lBb0lEc2dhU0E4SURRN0lHa2dLejBnTWlBdElHbHVZMngxWkdWWGFXUjBhQ0FwSUh0Y2JseDBYSFIzYUdsamFDQTlJR056YzBWNGNHRnVaRnNnYVNCZE8xeHVYSFJjZEdGMGRISnpXeUJjSW0xaGNtZHBibHdpSUNzZ2QyaHBZMmdnWFNBOUlHRjBkSEp6V3lCY0luQmhaR1JwYm1kY0lpQXJJSGRvYVdOb0lGMGdQU0IwZVhCbE8xeHVYSFI5WEc1Y2JseDBhV1lnS0NCcGJtTnNkV1JsVjJsa2RHZ2dLU0I3WEc1Y2RGeDBZWFIwY25NdWIzQmhZMmwwZVNBOUlHRjBkSEp6TG5kcFpIUm9JRDBnZEhsd1pUdGNibHgwZlZ4dVhHNWNkSEpsZEhWeWJpQmhkSFJ5Y3p0Y2JuMWNibHh1Wm5WdVkzUnBiMjRnWTNKbFlYUmxWSGRsWlc0b0lIWmhiSFZsTENCd2NtOXdMQ0JoYm1sdFlYUnBiMjRnS1NCN1hHNWNkSFpoY2lCMGQyVmxiaXhjYmx4MFhIUmpiMnhzWldOMGFXOXVJRDBnS0NCQmJtbHRZWFJwYjI0dWRIZGxaVzVsY25OYklIQnliM0FnWFNCOGZDQmJYU0FwTG1OdmJtTmhkQ2dnUVc1cGJXRjBhVzl1TG5SM1pXVnVaWEp6V3lCY0lpcGNJaUJkSUNrc1hHNWNkRngwYVc1a1pYZ2dQU0F3TEZ4dVhIUmNkR3hsYm1kMGFDQTlJR052Ykd4bFkzUnBiMjR1YkdWdVozUm9PMXh1WEhSbWIzSWdLQ0E3SUdsdVpHVjRJRHdnYkdWdVozUm9PeUJwYm1SbGVDc3JJQ2tnZTF4dVhIUmNkR2xtSUNnZ0tDQjBkMlZsYmlBOUlHTnZiR3hsWTNScGIyNWJJR2x1WkdWNElGMHVZMkZzYkNnZ1lXNXBiV0YwYVc5dUxDQndjbTl3TENCMllXeDFaU0FwSUNrZ0tTQjdYRzVjYmx4MFhIUmNkQzh2SUZkbEozSmxJR1J2Ym1VZ2QybDBhQ0IwYUdseklIQnliM0JsY25SNVhHNWNkRngwWEhSeVpYUjFjbTRnZEhkbFpXNDdYRzVjZEZ4MGZWeHVYSFI5WEc1OVhHNWNibVoxYm1OMGFXOXVJR1JsWm1GMWJIUlFjbVZtYVd4MFpYSW9JR1ZzWlcwc0lIQnliM0J6TENCdmNIUnpJQ2tnZTF4dVhIUjJZWElnY0hKdmNDd2dkbUZzZFdVc0lIUnZaMmRzWlN3Z2FHOXZhM01zSUc5c1pHWnBjbVVzSUhCeWIzQlVkMlZsYml3Z2NtVnpkRzl5WlVScGMzQnNZWGtzSUdScGMzQnNZWGtzWEc1Y2RGeDBhWE5DYjNnZ1BTQmNJbmRwWkhSb1hDSWdhVzRnY0hKdmNITWdmSHdnWENKb1pXbG5hSFJjSWlCcGJpQndjbTl3Y3l4Y2JseDBYSFJoYm1sdElEMGdkR2hwY3l4Y2JseDBYSFJ2Y21sbklEMGdlMzBzWEc1Y2RGeDBjM1I1YkdVZ1BTQmxiR1Z0TG5OMGVXeGxMRnh1WEhSY2RHaHBaR1JsYmlBOUlHVnNaVzB1Ym05a1pWUjVjR1VnSmlZZ2FYTklhV1JrWlc1WGFYUm9hVzVVY21WbEtDQmxiR1Z0SUNrc1hHNWNkRngwWkdGMFlWTm9iM2NnUFNCa1lYUmhVSEpwZGk1blpYUW9JR1ZzWlcwc0lGd2labmh6YUc5M1hDSWdLVHRjYmx4dVhIUXZMeUJSZFdWMVpTMXphMmx3Y0dsdVp5QmhibWx0WVhScGIyNXpJR2hwYW1GamF5QjBhR1VnWm5nZ2FHOXZhM05jYmx4MGFXWWdLQ0FoYjNCMGN5NXhkV1YxWlNBcElIdGNibHgwWEhSb2IyOXJjeUE5SUdwUmRXVnllUzVmY1hWbGRXVkliMjlyY3lnZ1pXeGxiU3dnWENKbWVGd2lJQ2s3WEc1Y2RGeDBhV1lnS0NCb2IyOXJjeTUxYm5GMVpYVmxaQ0E5UFNCdWRXeHNJQ2tnZTF4dVhIUmNkRngwYUc5dmEzTXVkVzV4ZFdWMVpXUWdQU0F3TzF4dVhIUmNkRngwYjJ4a1ptbHlaU0E5SUdodmIydHpMbVZ0Y0hSNUxtWnBjbVU3WEc1Y2RGeDBYSFJvYjI5cmN5NWxiWEIwZVM1bWFYSmxJRDBnWm5WdVkzUnBiMjRvS1NCN1hHNWNkRngwWEhSY2RHbG1JQ2dnSVdodmIydHpMblZ1Y1hWbGRXVmtJQ2tnZTF4dVhIUmNkRngwWEhSY2RHOXNaR1pwY21Vb0tUdGNibHgwWEhSY2RGeDBmVnh1WEhSY2RGeDBmVHRjYmx4MFhIUjlYRzVjZEZ4MGFHOXZhM011ZFc1eGRXVjFaV1FyS3p0Y2JseHVYSFJjZEdGdWFXMHVZV3gzWVhsektDQm1kVzVqZEdsdmJpZ3BJSHRjYmx4dVhIUmNkRngwTHk4Z1JXNXpkWEpsSUhSb1pTQmpiMjF3YkdWMFpTQm9ZVzVrYkdWeUlHbHpJR05oYkd4bFpDQmlaV1p2Y21VZ2RHaHBjeUJqYjIxd2JHVjBaWE5jYmx4MFhIUmNkR0Z1YVcwdVlXeDNZWGx6S0NCbWRXNWpkR2x2YmlncElIdGNibHgwWEhSY2RGeDBhRzl2YTNNdWRXNXhkV1YxWldRdExUdGNibHgwWEhSY2RGeDBhV1lnS0NBaGFsRjFaWEo1TG5GMVpYVmxLQ0JsYkdWdExDQmNJbVo0WENJZ0tTNXNaVzVuZEdnZ0tTQjdYRzVjZEZ4MFhIUmNkRngwYUc5dmEzTXVaVzF3ZEhrdVptbHlaU2dwTzF4dVhIUmNkRngwWEhSOVhHNWNkRngwWEhSOUlDazdYRzVjZEZ4MGZTQXBPMXh1WEhSOVhHNWNibHgwTHk4Z1JHVjBaV04wSUhOb2IzY3ZhR2xrWlNCaGJtbHRZWFJwYjI1elhHNWNkR1p2Y2lBb0lIQnliM0FnYVc0Z2NISnZjSE1nS1NCN1hHNWNkRngwZG1Gc2RXVWdQU0J3Y205d2Mxc2djSEp2Y0NCZE8xeHVYSFJjZEdsbUlDZ2djbVo0ZEhsd1pYTXVkR1Z6ZENnZ2RtRnNkV1VnS1NBcElIdGNibHgwWEhSY2RHUmxiR1YwWlNCd2NtOXdjMXNnY0hKdmNDQmRPMXh1WEhSY2RGeDBkRzluWjJ4bElEMGdkRzluWjJ4bElIeDhJSFpoYkhWbElEMDlQU0JjSW5SdloyZHNaVndpTzF4dVhIUmNkRngwYVdZZ0tDQjJZV3gxWlNBOVBUMGdLQ0JvYVdSa1pXNGdQeUJjSW1ocFpHVmNJaUE2SUZ3aWMyaHZkMXdpSUNrZ0tTQjdYRzVjYmx4MFhIUmNkRngwTHk4Z1VISmxkR1Z1WkNCMGJ5QmlaU0JvYVdSa1pXNGdhV1lnZEdocGN5QnBjeUJoSUZ3aWMyaHZkMXdpSUdGdVpGeHVYSFJjZEZ4MFhIUXZMeUIwYUdWeVpTQnBjeUJ6ZEdsc2JDQmtZWFJoSUdaeWIyMGdZU0J6ZEc5d2NHVmtJSE5vYjNjdmFHbGtaVnh1WEhSY2RGeDBYSFJwWmlBb0lIWmhiSFZsSUQwOVBTQmNJbk5vYjNkY0lpQW1KaUJrWVhSaFUyaHZkeUFtSmlCa1lYUmhVMmh2ZDFzZ2NISnZjQ0JkSUNFOVBTQjFibVJsWm1sdVpXUWdLU0I3WEc1Y2RGeDBYSFJjZEZ4MGFHbGtaR1Z1SUQwZ2RISjFaVHRjYmx4dVhIUmNkRngwWEhRdkx5QkpaMjV2Y21VZ1lXeHNJRzkwYUdWeUlHNXZMVzl3SUhOb2IzY3ZhR2xrWlNCa1lYUmhYRzVjZEZ4MFhIUmNkSDBnWld4elpTQjdYRzVjZEZ4MFhIUmNkRngwWTI5dWRHbHVkV1U3WEc1Y2RGeDBYSFJjZEgxY2JseDBYSFJjZEgxY2JseDBYSFJjZEc5eWFXZGJJSEJ5YjNBZ1hTQTlJR1JoZEdGVGFHOTNJQ1ltSUdSaGRHRlRhRzkzV3lCd2NtOXdJRjBnZkh3Z2FsRjFaWEo1TG5OMGVXeGxLQ0JsYkdWdExDQndjbTl3SUNrN1hHNWNkRngwZlZ4dVhIUjlYRzVjYmx4MEx5OGdRbUZwYkNCdmRYUWdhV1lnZEdocGN5QnBjeUJoSUc1dkxXOXdJR3hwYTJVZ0xtaHBaR1VvS1M1b2FXUmxLQ2xjYmx4MGNISnZjRlIzWldWdUlEMGdJV3BSZFdWeWVTNXBjMFZ0Y0hSNVQySnFaV04wS0NCd2NtOXdjeUFwTzF4dVhIUnBaaUFvSUNGd2NtOXdWSGRsWlc0Z0ppWWdhbEYxWlhKNUxtbHpSVzF3ZEhsUFltcGxZM1FvSUc5eWFXY2dLU0FwSUh0Y2JseDBYSFJ5WlhSMWNtNDdYRzVjZEgxY2JseHVYSFF2THlCU1pYTjBjbWxqZENCY0ltOTJaWEptYkc5M1hDSWdZVzVrSUZ3aVpHbHpjR3hoZVZ3aUlITjBlV3hsY3lCa2RYSnBibWNnWW05NElHRnVhVzFoZEdsdmJuTmNibHgwYVdZZ0tDQnBjMEp2ZUNBbUppQmxiR1Z0TG01dlpHVlVlWEJsSUQwOVBTQXhJQ2tnZTF4dVhHNWNkRngwTHk4Z1UzVndjRzl5ZERvZ1NVVWdQRDA1SUMwZ01URXNJRVZrWjJVZ01USWdMU0F4TlZ4dVhIUmNkQzh2SUZKbFkyOXlaQ0JoYkd3Z015QnZkbVZ5Wm14dmR5QmhkSFJ5YVdKMWRHVnpJR0psWTJGMWMyVWdTVVVnWkc5bGN5QnViM1FnYVc1bVpYSWdkR2hsSUhOb2IzSjBhR0Z1WkZ4dVhIUmNkQzh2SUdaeWIyMGdhV1JsYm5ScFkyRnNiSGt0ZG1Gc2RXVmtJRzkyWlhKbWJHOTNXQ0JoYm1RZ2IzWmxjbVpzYjNkWklHRnVaQ0JGWkdkbElHcDFjM1FnYldseWNtOXljMXh1WEhSY2RDOHZJSFJvWlNCdmRtVnlabXh2ZDFnZ2RtRnNkV1VnZEdobGNtVXVYRzVjZEZ4MGIzQjBjeTV2ZG1WeVpteHZkeUE5SUZzZ2MzUjViR1V1YjNabGNtWnNiM2NzSUhOMGVXeGxMbTkyWlhKbWJHOTNXQ3dnYzNSNWJHVXViM1psY21ac2IzZFpJRjA3WEc1Y2JseDBYSFF2THlCSlpHVnVkR2xtZVNCaElHUnBjM0JzWVhrZ2RIbHdaU3dnY0hKbFptVnljbWx1WnlCdmJHUWdjMmh2ZHk5b2FXUmxJR1JoZEdFZ2IzWmxjaUIwYUdVZ1ExTlRJR05oYzJOaFpHVmNibHgwWEhSeVpYTjBiM0psUkdsemNHeGhlU0E5SUdSaGRHRlRhRzkzSUNZbUlHUmhkR0ZUYUc5M0xtUnBjM0JzWVhrN1hHNWNkRngwYVdZZ0tDQnlaWE4wYjNKbFJHbHpjR3hoZVNBOVBTQnVkV3hzSUNrZ2UxeHVYSFJjZEZ4MGNtVnpkRzl5WlVScGMzQnNZWGtnUFNCa1lYUmhVSEpwZGk1blpYUW9JR1ZzWlcwc0lGd2laR2x6Y0d4aGVWd2lJQ2s3WEc1Y2RGeDBmVnh1WEhSY2RHUnBjM0JzWVhrZ1BTQnFVWFZsY25rdVkzTnpLQ0JsYkdWdExDQmNJbVJwYzNCc1lYbGNJaUFwTzF4dVhIUmNkR2xtSUNnZ1pHbHpjR3hoZVNBOVBUMGdYQ0p1YjI1bFhDSWdLU0I3WEc1Y2RGeDBYSFJwWmlBb0lISmxjM1J2Y21WRWFYTndiR0Y1SUNrZ2UxeHVYSFJjZEZ4MFhIUmthWE53YkdGNUlEMGdjbVZ6ZEc5eVpVUnBjM0JzWVhrN1hHNWNkRngwWEhSOUlHVnNjMlVnZTF4dVhHNWNkRngwWEhSY2RDOHZJRWRsZENCdWIyNWxiWEIwZVNCMllXeDFaU2h6S1NCaWVTQjBaVzF3YjNKaGNtbHNlU0JtYjNKamFXNW5JSFpwYzJsaWFXeHBkSGxjYmx4MFhIUmNkRngwYzJodmQwaHBaR1VvSUZzZ1pXeGxiU0JkTENCMGNuVmxJQ2s3WEc1Y2RGeDBYSFJjZEhKbGMzUnZjbVZFYVhOd2JHRjVJRDBnWld4bGJTNXpkSGxzWlM1a2FYTndiR0Y1SUh4OElISmxjM1J2Y21WRWFYTndiR0Y1TzF4dVhIUmNkRngwWEhSa2FYTndiR0Y1SUQwZ2FsRjFaWEo1TG1OemN5Z2daV3hsYlN3Z1hDSmthWE53YkdGNVhDSWdLVHRjYmx4MFhIUmNkRngwYzJodmQwaHBaR1VvSUZzZ1pXeGxiU0JkSUNrN1hHNWNkRngwWEhSOVhHNWNkRngwZlZ4dVhHNWNkRngwTHk4Z1FXNXBiV0YwWlNCcGJteHBibVVnWld4bGJXVnVkSE1nWVhNZ2FXNXNhVzVsTFdKc2IyTnJYRzVjZEZ4MGFXWWdLQ0JrYVhOd2JHRjVJRDA5UFNCY0ltbHViR2x1WlZ3aUlIeDhJR1JwYzNCc1lYa2dQVDA5SUZ3aWFXNXNhVzVsTFdKc2IyTnJYQ0lnSmlZZ2NtVnpkRzl5WlVScGMzQnNZWGtnSVQwZ2JuVnNiQ0FwSUh0Y2JseDBYSFJjZEdsbUlDZ2dhbEYxWlhKNUxtTnpjeWdnWld4bGJTd2dYQ0ptYkc5aGRGd2lJQ2tnUFQwOUlGd2libTl1WlZ3aUlDa2dlMXh1WEc1Y2RGeDBYSFJjZEM4dklGSmxjM1J2Y21VZ2RHaGxJRzl5YVdkcGJtRnNJR1JwYzNCc1lYa2dkbUZzZFdVZ1lYUWdkR2hsSUdWdVpDQnZaaUJ3ZFhKbElITm9iM2N2YUdsa1pTQmhibWx0WVhScGIyNXpYRzVjZEZ4MFhIUmNkR2xtSUNnZ0lYQnliM0JVZDJWbGJpQXBJSHRjYmx4MFhIUmNkRngwWEhSaGJtbHRMbVJ2Ym1Vb0lHWjFibU4wYVc5dUtDa2dlMXh1WEhSY2RGeDBYSFJjZEZ4MGMzUjViR1V1WkdsemNHeGhlU0E5SUhKbGMzUnZjbVZFYVhOd2JHRjVPMXh1WEhSY2RGeDBYSFJjZEgwZ0tUdGNibHgwWEhSY2RGeDBYSFJwWmlBb0lISmxjM1J2Y21WRWFYTndiR0Y1SUQwOUlHNTFiR3dnS1NCN1hHNWNkRngwWEhSY2RGeDBYSFJrYVhOd2JHRjVJRDBnYzNSNWJHVXVaR2x6Y0d4aGVUdGNibHgwWEhSY2RGeDBYSFJjZEhKbGMzUnZjbVZFYVhOd2JHRjVJRDBnWkdsemNHeGhlU0E5UFQwZ1hDSnViMjVsWENJZ1B5QmNJbHdpSURvZ1pHbHpjR3hoZVR0Y2JseDBYSFJjZEZ4MFhIUjlYRzVjZEZ4MFhIUmNkSDFjYmx4MFhIUmNkRngwYzNSNWJHVXVaR2x6Y0d4aGVTQTlJRndpYVc1c2FXNWxMV0pzYjJOclhDSTdYRzVjZEZ4MFhIUjlYRzVjZEZ4MGZWeHVYSFI5WEc1Y2JseDBhV1lnS0NCdmNIUnpMbTkyWlhKbWJHOTNJQ2tnZTF4dVhIUmNkSE4wZVd4bExtOTJaWEptYkc5M0lEMGdYQ0pvYVdSa1pXNWNJanRjYmx4MFhIUmhibWx0TG1Gc2QyRjVjeWdnWm5WdVkzUnBiMjRvS1NCN1hHNWNkRngwWEhSemRIbHNaUzV2ZG1WeVpteHZkeUE5SUc5d2RITXViM1psY21ac2IzZGJJREFnWFR0Y2JseDBYSFJjZEhOMGVXeGxMbTkyWlhKbWJHOTNXQ0E5SUc5d2RITXViM1psY21ac2IzZGJJREVnWFR0Y2JseDBYSFJjZEhOMGVXeGxMbTkyWlhKbWJHOTNXU0E5SUc5d2RITXViM1psY21ac2IzZGJJRElnWFR0Y2JseDBYSFI5SUNrN1hHNWNkSDFjYmx4dVhIUXZMeUJKYlhCc1pXMWxiblFnYzJodmR5OW9hV1JsSUdGdWFXMWhkR2x2Ym5OY2JseDBjSEp2Y0ZSM1pXVnVJRDBnWm1Gc2MyVTdYRzVjZEdadmNpQW9JSEJ5YjNBZ2FXNGdiM0pwWnlBcElIdGNibHh1WEhSY2RDOHZJRWRsYm1WeVlXd2djMmh2ZHk5b2FXUmxJSE5sZEhWd0lHWnZjaUIwYUdseklHVnNaVzFsYm5RZ1lXNXBiV0YwYVc5dVhHNWNkRngwYVdZZ0tDQWhjSEp2Y0ZSM1pXVnVJQ2tnZTF4dVhIUmNkRngwYVdZZ0tDQmtZWFJoVTJodmR5QXBJSHRjYmx4MFhIUmNkRngwYVdZZ0tDQmNJbWhwWkdSbGJsd2lJR2x1SUdSaGRHRlRhRzkzSUNrZ2UxeHVYSFJjZEZ4MFhIUmNkR2hwWkdSbGJpQTlJR1JoZEdGVGFHOTNMbWhwWkdSbGJqdGNibHgwWEhSY2RGeDBmVnh1WEhSY2RGeDBmU0JsYkhObElIdGNibHgwWEhSY2RGeDBaR0YwWVZOb2IzY2dQU0JrWVhSaFVISnBkaTVoWTJObGMzTW9JR1ZzWlcwc0lGd2labmh6YUc5M1hDSXNJSHNnWkdsemNHeGhlVG9nY21WemRHOXlaVVJwYzNCc1lYa2dmU0FwTzF4dVhIUmNkRngwZlZ4dVhHNWNkRngwWEhRdkx5QlRkRzl5WlNCb2FXUmtaVzR2ZG1semFXSnNaU0JtYjNJZ2RHOW5aMnhsSUhOdklHQXVjM1J2Y0NncExuUnZaMmRzWlNncFlDQmNJbkpsZG1WeWMyVnpYQ0pjYmx4MFhIUmNkR2xtSUNnZ2RHOW5aMnhsSUNrZ2UxeHVYSFJjZEZ4MFhIUmtZWFJoVTJodmR5NW9hV1JrWlc0Z1BTQWhhR2xrWkdWdU8xeHVYSFJjZEZ4MGZWeHVYRzVjZEZ4MFhIUXZMeUJUYUc5M0lHVnNaVzFsYm5SeklHSmxabTl5WlNCaGJtbHRZWFJwYm1jZ2RHaGxiVnh1WEhSY2RGeDBhV1lnS0NCb2FXUmtaVzRnS1NCN1hHNWNkRngwWEhSY2RITm9iM2RJYVdSbEtDQmJJR1ZzWlcwZ1hTd2dkSEoxWlNBcE8xeHVYSFJjZEZ4MGZWeHVYRzVjZEZ4MFhIUXZLaUJsYzJ4cGJuUXRaR2x6WVdKc1pTQnVieTFzYjI5d0xXWjFibU1nS2k5Y2JseHVYSFJjZEZ4MFlXNXBiUzVrYjI1bEtDQm1kVzVqZEdsdmJpZ3BJSHRjYmx4dVhIUmNkRngwWEhRdktpQmxjMnhwYm5RdFpXNWhZbXhsSUc1dkxXeHZiM0F0Wm5WdVl5QXFMMXh1WEc1Y2RGeDBYSFJjZEM4dklGUm9aU0JtYVc1aGJDQnpkR1Z3SUc5bUlHRWdYQ0pvYVdSbFhDSWdZVzVwYldGMGFXOXVJR2x6SUdGamRIVmhiR3g1SUdocFpHbHVaeUIwYUdVZ1pXeGxiV1Z1ZEZ4dVhIUmNkRngwWEhScFppQW9JQ0ZvYVdSa1pXNGdLU0I3WEc1Y2RGeDBYSFJjZEZ4MGMyaHZkMGhwWkdVb0lGc2daV3hsYlNCZElDazdYRzVjZEZ4MFhIUmNkSDFjYmx4MFhIUmNkRngwWkdGMFlWQnlhWFl1Y21WdGIzWmxLQ0JsYkdWdExDQmNJbVo0YzJodmQxd2lJQ2s3WEc1Y2RGeDBYSFJjZEdadmNpQW9JSEJ5YjNBZ2FXNGdiM0pwWnlBcElIdGNibHgwWEhSY2RGeDBYSFJxVVhWbGNua3VjM1I1YkdVb0lHVnNaVzBzSUhCeWIzQXNJRzl5YVdkYklIQnliM0FnWFNBcE8xeHVYSFJjZEZ4MFhIUjlYRzVjZEZ4MFhIUjlJQ2s3WEc1Y2RGeDBmVnh1WEc1Y2RGeDBMeThnVUdWeUxYQnliM0JsY25SNUlITmxkSFZ3WEc1Y2RGeDBjSEp2Y0ZSM1pXVnVJRDBnWTNKbFlYUmxWSGRsWlc0b0lHaHBaR1JsYmlBL0lHUmhkR0ZUYUc5M1d5QndjbTl3SUYwZ09pQXdMQ0J3Y205d0xDQmhibWx0SUNrN1hHNWNkRngwYVdZZ0tDQWhLQ0J3Y205d0lHbHVJR1JoZEdGVGFHOTNJQ2tnS1NCN1hHNWNkRngwWEhSa1lYUmhVMmh2ZDFzZ2NISnZjQ0JkSUQwZ2NISnZjRlIzWldWdUxuTjBZWEowTzF4dVhIUmNkRngwYVdZZ0tDQm9hV1JrWlc0Z0tTQjdYRzVjZEZ4MFhIUmNkSEJ5YjNCVWQyVmxiaTVsYm1RZ1BTQndjbTl3VkhkbFpXNHVjM1JoY25RN1hHNWNkRngwWEhSY2RIQnliM0JVZDJWbGJpNXpkR0Z5ZENBOUlEQTdYRzVjZEZ4MFhIUjlYRzVjZEZ4MGZWeHVYSFI5WEc1OVhHNWNibVoxYm1OMGFXOXVJSEJ5YjNCR2FXeDBaWElvSUhCeWIzQnpMQ0J6Y0dWamFXRnNSV0Z6YVc1bklDa2dlMXh1WEhSMllYSWdhVzVrWlhnc0lHNWhiV1VzSUdWaGMybHVaeXdnZG1Gc2RXVXNJR2h2YjJ0ek8xeHVYRzVjZEM4dklHTmhiV1ZzUTJGelpTd2djM0JsWTJsaGJFVmhjMmx1WnlCaGJtUWdaWGh3WVc1a0lHTnpjMGh2YjJzZ2NHRnpjMXh1WEhSbWIzSWdLQ0JwYm1SbGVDQnBiaUJ3Y205d2N5QXBJSHRjYmx4MFhIUnVZVzFsSUQwZ1kyRnRaV3hEWVhObEtDQnBibVJsZUNBcE8xeHVYSFJjZEdWaGMybHVaeUE5SUhOd1pXTnBZV3hGWVhOcGJtZGJJRzVoYldVZ1hUdGNibHgwWEhSMllXeDFaU0E5SUhCeWIzQnpXeUJwYm1SbGVDQmRPMXh1WEhSY2RHbG1JQ2dnUVhKeVlYa3VhWE5CY25KaGVTZ2dkbUZzZFdVZ0tTQXBJSHRjYmx4MFhIUmNkR1ZoYzJsdVp5QTlJSFpoYkhWbFd5QXhJRjA3WEc1Y2RGeDBYSFIyWVd4MVpTQTlJSEJ5YjNCeld5QnBibVJsZUNCZElEMGdkbUZzZFdWYklEQWdYVHRjYmx4MFhIUjlYRzVjYmx4MFhIUnBaaUFvSUdsdVpHVjRJQ0U5UFNCdVlXMWxJQ2tnZTF4dVhIUmNkRngwY0hKdmNITmJJRzVoYldVZ1hTQTlJSFpoYkhWbE8xeHVYSFJjZEZ4MFpHVnNaWFJsSUhCeWIzQnpXeUJwYm1SbGVDQmRPMXh1WEhSY2RIMWNibHh1WEhSY2RHaHZiMnR6SUQwZ2FsRjFaWEo1TG1OemMwaHZiMnR6V3lCdVlXMWxJRjA3WEc1Y2RGeDBhV1lnS0NCb2IyOXJjeUFtSmlCY0ltVjRjR0Z1WkZ3aUlHbHVJR2h2YjJ0eklDa2dlMXh1WEhSY2RGeDBkbUZzZFdVZ1BTQm9iMjlyY3k1bGVIQmhibVFvSUhaaGJIVmxJQ2s3WEc1Y2RGeDBYSFJrWld4bGRHVWdjSEp2Y0hOYklHNWhiV1VnWFR0Y2JseHVYSFJjZEZ4MEx5OGdUbTkwSUhGMWFYUmxJQ1F1WlhoMFpXNWtMQ0IwYUdseklIZHZiaWQwSUc5MlpYSjNjbWwwWlNCbGVHbHpkR2x1WnlCclpYbHpMbHh1WEhSY2RGeDBMeThnVW1WMWMybHVaeUFuYVc1a1pYZ25JR0psWTJGMWMyVWdkMlVnYUdGMlpTQjBhR1VnWTI5eWNtVmpkQ0JjSW01aGJXVmNJbHh1WEhSY2RGeDBabTl5SUNnZ2FXNWtaWGdnYVc0Z2RtRnNkV1VnS1NCN1hHNWNkRngwWEhSY2RHbG1JQ2dnSVNnZ2FXNWtaWGdnYVc0Z2NISnZjSE1nS1NBcElIdGNibHgwWEhSY2RGeDBYSFJ3Y205d2Mxc2dhVzVrWlhnZ1hTQTlJSFpoYkhWbFd5QnBibVJsZUNCZE8xeHVYSFJjZEZ4MFhIUmNkSE53WldOcFlXeEZZWE5wYm1kYklHbHVaR1Y0SUYwZ1BTQmxZWE5wYm1jN1hHNWNkRngwWEhSY2RIMWNibHgwWEhSY2RIMWNibHgwWEhSOUlHVnNjMlVnZTF4dVhIUmNkRngwYzNCbFkybGhiRVZoYzJsdVoxc2dibUZ0WlNCZElEMGdaV0Z6YVc1bk8xeHVYSFJjZEgxY2JseDBmVnh1ZlZ4dVhHNW1kVzVqZEdsdmJpQkJibWx0WVhScGIyNG9JR1ZzWlcwc0lIQnliM0JsY25ScFpYTXNJRzl3ZEdsdmJuTWdLU0I3WEc1Y2RIWmhjaUJ5WlhOMWJIUXNYRzVjZEZ4MGMzUnZjSEJsWkN4Y2JseDBYSFJwYm1SbGVDQTlJREFzWEc1Y2RGeDBiR1Z1WjNSb0lEMGdRVzVwYldGMGFXOXVMbkJ5WldacGJIUmxjbk11YkdWdVozUm9MRnh1WEhSY2RHUmxabVZ5Y21Wa0lEMGdhbEYxWlhKNUxrUmxabVZ5Y21Wa0tDa3VZV3gzWVhsektDQm1kVzVqZEdsdmJpZ3BJSHRjYmx4dVhIUmNkRngwTHk4Z1JHOXVKM1FnYldGMFkyZ2daV3hsYlNCcGJpQjBhR1VnT21GdWFXMWhkR1ZrSUhObGJHVmpkRzl5WEc1Y2RGeDBYSFJrWld4bGRHVWdkR2xqYXk1bGJHVnRPMXh1WEhSY2RIMGdLU3hjYmx4MFhIUjBhV05ySUQwZ1puVnVZM1JwYjI0b0tTQjdYRzVjZEZ4MFhIUnBaaUFvSUhOMGIzQndaV1FnS1NCN1hHNWNkRngwWEhSY2RISmxkSFZ5YmlCbVlXeHpaVHRjYmx4MFhIUmNkSDFjYmx4MFhIUmNkSFpoY2lCamRYSnlaVzUwVkdsdFpTQTlJR1o0VG05M0lIeDhJR055WldGMFpVWjRUbTkzS0Nrc1hHNWNkRngwWEhSY2RISmxiV0ZwYm1sdVp5QTlJRTFoZEdndWJXRjRLQ0F3TENCaGJtbHRZWFJwYjI0dWMzUmhjblJVYVcxbElDc2dZVzVwYldGMGFXOXVMbVIxY21GMGFXOXVJQzBnWTNWeWNtVnVkRlJwYldVZ0tTeGNibHh1WEhSY2RGeDBYSFF2THlCVGRYQndiM0owT2lCQmJtUnliMmxrSURJdU15QnZibXg1WEc1Y2RGeDBYSFJjZEM4dklFRnlZMmhoYVdNZ1kzSmhjMmdnWW5WbklIZHZiaWQwSUdGc2JHOTNJSFZ6SUhSdklIVnpaU0JnTVNBdElDZ2dNQzQxSUh4OElEQWdLV0FnS0hSeVlXTXRNVEkwT1RjcFhHNWNkRngwWEhSY2RIUmxiWEFnUFNCeVpXMWhhVzVwYm1jZ0x5QmhibWx0WVhScGIyNHVaSFZ5WVhScGIyNGdmSHdnTUN4Y2JseDBYSFJjZEZ4MGNHVnlZMlZ1ZENBOUlERWdMU0IwWlcxd0xGeHVYSFJjZEZ4MFhIUnBibVJsZUNBOUlEQXNYRzVjZEZ4MFhIUmNkR3hsYm1kMGFDQTlJR0Z1YVcxaGRHbHZiaTUwZDJWbGJuTXViR1Z1WjNSb08xeHVYRzVjZEZ4MFhIUm1iM0lnS0NBN0lHbHVaR1Y0SUR3Z2JHVnVaM1JvT3lCcGJtUmxlQ3NySUNrZ2UxeHVYSFJjZEZ4MFhIUmhibWx0WVhScGIyNHVkSGRsWlc1eld5QnBibVJsZUNCZExuSjFiaWdnY0dWeVkyVnVkQ0FwTzF4dVhIUmNkRngwZlZ4dVhHNWNkRngwWEhSa1pXWmxjbkpsWkM1dWIzUnBabmxYYVhSb0tDQmxiR1Z0TENCYklHRnVhVzFoZEdsdmJpd2djR1Z5WTJWdWRDd2djbVZ0WVdsdWFXNW5JRjBnS1R0Y2JseHVYSFJjZEZ4MEx5OGdTV1lnZEdobGNtVW5jeUJ0YjNKbElIUnZJR1J2TENCNWFXVnNaRnh1WEhSY2RGeDBhV1lnS0NCd1pYSmpaVzUwSUR3Z01TQW1KaUJzWlc1bmRHZ2dLU0I3WEc1Y2RGeDBYSFJjZEhKbGRIVnliaUJ5WlcxaGFXNXBibWM3WEc1Y2RGeDBYSFI5WEc1Y2JseDBYSFJjZEM4dklFbG1JSFJvYVhNZ2QyRnpJR0Z1SUdWdGNIUjVJR0Z1YVcxaGRHbHZiaXdnYzNsdWRHaGxjMmw2WlNCaElHWnBibUZzSUhCeWIyZHlaWE56SUc1dmRHbG1hV05oZEdsdmJseHVYSFJjZEZ4MGFXWWdLQ0FoYkdWdVozUm9JQ2tnZTF4dVhIUmNkRngwWEhSa1pXWmxjbkpsWkM1dWIzUnBabmxYYVhSb0tDQmxiR1Z0TENCYklHRnVhVzFoZEdsdmJpd2dNU3dnTUNCZElDazdYRzVjZEZ4MFhIUjlYRzVjYmx4MFhIUmNkQzh2SUZKbGMyOXNkbVVnZEdobElHRnVhVzFoZEdsdmJpQmhibVFnY21Wd2IzSjBJR2wwY3lCamIyNWpiSFZ6YVc5dVhHNWNkRngwWEhSa1pXWmxjbkpsWkM1eVpYTnZiSFpsVjJsMGFDZ2daV3hsYlN3Z1d5QmhibWx0WVhScGIyNGdYU0FwTzF4dVhIUmNkRngwY21WMGRYSnVJR1poYkhObE8xeHVYSFJjZEgwc1hHNWNkRngwWVc1cGJXRjBhVzl1SUQwZ1pHVm1aWEp5WldRdWNISnZiV2x6WlNnZ2UxeHVYSFJjZEZ4MFpXeGxiVG9nWld4bGJTeGNibHgwWEhSY2RIQnliM0J6T2lCcVVYVmxjbmt1WlhoMFpXNWtLQ0I3ZlN3Z2NISnZjR1Z5ZEdsbGN5QXBMRnh1WEhSY2RGeDBiM0IwY3pvZ2FsRjFaWEo1TG1WNGRHVnVaQ2dnZEhKMVpTd2dlMXh1WEhSY2RGeDBYSFJ6Y0dWamFXRnNSV0Z6YVc1bk9pQjdmU3hjYmx4MFhIUmNkRngwWldGemFXNW5PaUJxVVhWbGNua3VaV0Z6YVc1bkxsOWtaV1poZFd4MFhHNWNkRngwWEhSOUxDQnZjSFJwYjI1eklDa3NYRzVjZEZ4MFhIUnZjbWxuYVc1aGJGQnliM0JsY25ScFpYTTZJSEJ5YjNCbGNuUnBaWE1zWEc1Y2RGeDBYSFJ2Y21sbmFXNWhiRTl3ZEdsdmJuTTZJRzl3ZEdsdmJuTXNYRzVjZEZ4MFhIUnpkR0Z5ZEZScGJXVTZJR1o0VG05M0lIeDhJR055WldGMFpVWjRUbTkzS0Nrc1hHNWNkRngwWEhSa2RYSmhkR2x2YmpvZ2IzQjBhVzl1Y3k1a2RYSmhkR2x2Yml4Y2JseDBYSFJjZEhSM1pXVnVjem9nVzEwc1hHNWNkRngwWEhSamNtVmhkR1ZVZDJWbGJqb2dablZ1WTNScGIyNG9JSEJ5YjNBc0lHVnVaQ0FwSUh0Y2JseDBYSFJjZEZ4MGRtRnlJSFIzWldWdUlEMGdhbEYxWlhKNUxsUjNaV1Z1S0NCbGJHVnRMQ0JoYm1sdFlYUnBiMjR1YjNCMGN5d2djSEp2Y0N3Z1pXNWtMRnh1WEhSY2RGeDBYSFJjZEdGdWFXMWhkR2x2Ymk1dmNIUnpMbk53WldOcFlXeEZZWE5wYm1kYklIQnliM0FnWFNCOGZDQmhibWx0WVhScGIyNHViM0IwY3k1bFlYTnBibWNnS1R0Y2JseDBYSFJjZEZ4MFlXNXBiV0YwYVc5dUxuUjNaV1Z1Y3k1d2RYTm9LQ0IwZDJWbGJpQXBPMXh1WEhSY2RGeDBYSFJ5WlhSMWNtNGdkSGRsWlc0N1hHNWNkRngwWEhSOUxGeHVYSFJjZEZ4MGMzUnZjRG9nWm5WdVkzUnBiMjRvSUdkdmRHOUZibVFnS1NCN1hHNWNkRngwWEhSY2RIWmhjaUJwYm1SbGVDQTlJREFzWEc1Y2JseDBYSFJjZEZ4MFhIUXZMeUJKWmlCM1pTQmhjbVVnWjI5cGJtY2dkRzhnZEdobElHVnVaQ3dnZDJVZ2QyRnVkQ0IwYnlCeWRXNGdZV3hzSUhSb1pTQjBkMlZsYm5OY2JseDBYSFJjZEZ4MFhIUXZMeUJ2ZEdobGNuZHBjMlVnZDJVZ2MydHBjQ0IwYUdseklIQmhjblJjYmx4MFhIUmNkRngwWEhSc1pXNW5kR2dnUFNCbmIzUnZSVzVrSUQ4Z1lXNXBiV0YwYVc5dUxuUjNaV1Z1Y3k1c1pXNW5kR2dnT2lBd08xeHVYSFJjZEZ4MFhIUnBaaUFvSUhOMGIzQndaV1FnS1NCN1hHNWNkRngwWEhSY2RGeDBjbVYwZFhKdUlIUm9hWE03WEc1Y2RGeDBYSFJjZEgxY2JseDBYSFJjZEZ4MGMzUnZjSEJsWkNBOUlIUnlkV1U3WEc1Y2RGeDBYSFJjZEdadmNpQW9JRHNnYVc1a1pYZ2dQQ0JzWlc1bmRHZzdJR2x1WkdWNEt5c2dLU0I3WEc1Y2RGeDBYSFJjZEZ4MFlXNXBiV0YwYVc5dUxuUjNaV1Z1YzFzZ2FXNWtaWGdnWFM1eWRXNG9JREVnS1R0Y2JseDBYSFJjZEZ4MGZWeHVYRzVjZEZ4MFhIUmNkQzh2SUZKbGMyOXNkbVVnZDJobGJpQjNaU0J3YkdGNVpXUWdkR2hsSUd4aGMzUWdabkpoYldVN0lHOTBhR1Z5ZDJselpTd2djbVZxWldOMFhHNWNkRngwWEhSY2RHbG1JQ2dnWjI5MGIwVnVaQ0FwSUh0Y2JseDBYSFJjZEZ4MFhIUmtaV1psY25KbFpDNXViM1JwWm5sWGFYUm9LQ0JsYkdWdExDQmJJR0Z1YVcxaGRHbHZiaXdnTVN3Z01DQmRJQ2s3WEc1Y2RGeDBYSFJjZEZ4MFpHVm1aWEp5WldRdWNtVnpiMngyWlZkcGRHZ29JR1ZzWlcwc0lGc2dZVzVwYldGMGFXOXVMQ0JuYjNSdlJXNWtJRjBnS1R0Y2JseDBYSFJjZEZ4MGZTQmxiSE5sSUh0Y2JseDBYSFJjZEZ4MFhIUmtaV1psY25KbFpDNXlaV3BsWTNSWGFYUm9LQ0JsYkdWdExDQmJJR0Z1YVcxaGRHbHZiaXdnWjI5MGIwVnVaQ0JkSUNrN1hHNWNkRngwWEhSY2RIMWNibHgwWEhSY2RGeDBjbVYwZFhKdUlIUm9hWE03WEc1Y2RGeDBYSFI5WEc1Y2RGeDBmU0FwTEZ4dVhIUmNkSEJ5YjNCeklEMGdZVzVwYldGMGFXOXVMbkJ5YjNCek8xeHVYRzVjZEhCeWIzQkdhV3gwWlhJb0lIQnliM0J6TENCaGJtbHRZWFJwYjI0dWIzQjBjeTV6Y0dWamFXRnNSV0Z6YVc1bklDazdYRzVjYmx4MFptOXlJQ2dnT3lCcGJtUmxlQ0E4SUd4bGJtZDBhRHNnYVc1a1pYZ3JLeUFwSUh0Y2JseDBYSFJ5WlhOMWJIUWdQU0JCYm1sdFlYUnBiMjR1Y0hKbFptbHNkR1Z5YzFzZ2FXNWtaWGdnWFM1allXeHNLQ0JoYm1sdFlYUnBiMjRzSUdWc1pXMHNJSEJ5YjNCekxDQmhibWx0WVhScGIyNHViM0IwY3lBcE8xeHVYSFJjZEdsbUlDZ2djbVZ6ZFd4MElDa2dlMXh1WEhSY2RGeDBhV1lnS0NCcGMwWjFibU4wYVc5dUtDQnlaWE4xYkhRdWMzUnZjQ0FwSUNrZ2UxeHVYSFJjZEZ4MFhIUnFVWFZsY25rdVgzRjFaWFZsU0c5dmEzTW9JR0Z1YVcxaGRHbHZiaTVsYkdWdExDQmhibWx0WVhScGIyNHViM0IwY3k1eGRXVjFaU0FwTG5OMGIzQWdQVnh1WEhSY2RGeDBYSFJjZEhKbGMzVnNkQzV6ZEc5d0xtSnBibVFvSUhKbGMzVnNkQ0FwTzF4dVhIUmNkRngwZlZ4dVhIUmNkRngwY21WMGRYSnVJSEpsYzNWc2REdGNibHgwWEhSOVhHNWNkSDFjYmx4dVhIUnFVWFZsY25rdWJXRndLQ0J3Y205d2N5d2dZM0psWVhSbFZIZGxaVzRzSUdGdWFXMWhkR2x2YmlBcE8xeHVYRzVjZEdsbUlDZ2dhWE5HZFc1amRHbHZiaWdnWVc1cGJXRjBhVzl1TG05d2RITXVjM1JoY25RZ0tTQXBJSHRjYmx4MFhIUmhibWx0WVhScGIyNHViM0IwY3k1emRHRnlkQzVqWVd4c0tDQmxiR1Z0TENCaGJtbHRZWFJwYjI0Z0tUdGNibHgwZlZ4dVhHNWNkQzh2SUVGMGRHRmphQ0JqWVd4c1ltRmphM01nWm5KdmJTQnZjSFJwYjI1elhHNWNkR0Z1YVcxaGRHbHZibHh1WEhSY2RDNXdjbTluY21WemN5Z2dZVzVwYldGMGFXOXVMbTl3ZEhNdWNISnZaM0psYzNNZ0tWeHVYSFJjZEM1a2IyNWxLQ0JoYm1sdFlYUnBiMjR1YjNCMGN5NWtiMjVsTENCaGJtbHRZWFJwYjI0dWIzQjBjeTVqYjIxd2JHVjBaU0FwWEc1Y2RGeDBMbVpoYVd3b0lHRnVhVzFoZEdsdmJpNXZjSFJ6TG1aaGFXd2dLVnh1WEhSY2RDNWhiSGRoZVhNb0lHRnVhVzFoZEdsdmJpNXZjSFJ6TG1Gc2QyRjVjeUFwTzF4dVhHNWNkR3BSZFdWeWVTNW1lQzUwYVcxbGNpaGNibHgwWEhScVVYVmxjbmt1WlhoMFpXNWtLQ0IwYVdOckxDQjdYRzVjZEZ4MFhIUmxiR1Z0T2lCbGJHVnRMRnh1WEhSY2RGeDBZVzVwYlRvZ1lXNXBiV0YwYVc5dUxGeHVYSFJjZEZ4MGNYVmxkV1U2SUdGdWFXMWhkR2x2Ymk1dmNIUnpMbkYxWlhWbFhHNWNkRngwZlNBcFhHNWNkQ2s3WEc1Y2JseDBjbVYwZFhKdUlHRnVhVzFoZEdsdmJqdGNibjFjYmx4dWFsRjFaWEo1TGtGdWFXMWhkR2x2YmlBOUlHcFJkV1Z5ZVM1bGVIUmxibVFvSUVGdWFXMWhkR2x2Yml3Z2UxeHVYRzVjZEhSM1pXVnVaWEp6T2lCN1hHNWNkRngwWENJcVhDSTZJRnNnWm5WdVkzUnBiMjRvSUhCeWIzQXNJSFpoYkhWbElDa2dlMXh1WEhSY2RGeDBkbUZ5SUhSM1pXVnVJRDBnZEdocGN5NWpjbVZoZEdWVWQyVmxiaWdnY0hKdmNDd2dkbUZzZFdVZ0tUdGNibHgwWEhSY2RHRmthblZ6ZEVOVFV5Z2dkSGRsWlc0dVpXeGxiU3dnY0hKdmNDd2djbU56YzA1MWJTNWxlR1ZqS0NCMllXeDFaU0FwTENCMGQyVmxiaUFwTzF4dVhIUmNkRngwY21WMGRYSnVJSFIzWldWdU8xeHVYSFJjZEgwZ1hWeHVYSFI5TEZ4dVhHNWNkSFIzWldWdVpYSTZJR1oxYm1OMGFXOXVLQ0J3Y205d2N5d2dZMkZzYkdKaFkyc2dLU0I3WEc1Y2RGeDBhV1lnS0NCcGMwWjFibU4wYVc5dUtDQndjbTl3Y3lBcElDa2dlMXh1WEhSY2RGeDBZMkZzYkdKaFkyc2dQU0J3Y205d2N6dGNibHgwWEhSY2RIQnliM0J6SUQwZ1d5QmNJaXBjSWlCZE8xeHVYSFJjZEgwZ1pXeHpaU0I3WEc1Y2RGeDBYSFJ3Y205d2N5QTlJSEJ5YjNCekxtMWhkR05vS0NCeWJtOTBhSFJ0Ykhkb2FYUmxJQ2s3WEc1Y2RGeDBmVnh1WEc1Y2RGeDBkbUZ5SUhCeWIzQXNYRzVjZEZ4MFhIUnBibVJsZUNBOUlEQXNYRzVjZEZ4MFhIUnNaVzVuZEdnZ1BTQndjbTl3Y3k1c1pXNW5kR2c3WEc1Y2JseDBYSFJtYjNJZ0tDQTdJR2x1WkdWNElEd2diR1Z1WjNSb095QnBibVJsZUNzcklDa2dlMXh1WEhSY2RGeDBjSEp2Y0NBOUlIQnliM0J6V3lCcGJtUmxlQ0JkTzF4dVhIUmNkRngwUVc1cGJXRjBhVzl1TG5SM1pXVnVaWEp6V3lCd2NtOXdJRjBnUFNCQmJtbHRZWFJwYjI0dWRIZGxaVzVsY25OYklIQnliM0FnWFNCOGZDQmJYVHRjYmx4MFhIUmNkRUZ1YVcxaGRHbHZiaTUwZDJWbGJtVnljMXNnY0hKdmNDQmRMblZ1YzJocFpuUW9JR05oYkd4aVlXTnJJQ2s3WEc1Y2RGeDBmVnh1WEhSOUxGeHVYRzVjZEhCeVpXWnBiSFJsY25NNklGc2daR1ZtWVhWc2RGQnlaV1pwYkhSbGNpQmRMRnh1WEc1Y2RIQnlaV1pwYkhSbGNqb2dablZ1WTNScGIyNG9JR05oYkd4aVlXTnJMQ0J3Y21Wd1pXNWtJQ2tnZTF4dVhIUmNkR2xtSUNnZ2NISmxjR1Z1WkNBcElIdGNibHgwWEhSY2RFRnVhVzFoZEdsdmJpNXdjbVZtYVd4MFpYSnpMblZ1YzJocFpuUW9JR05oYkd4aVlXTnJJQ2s3WEc1Y2RGeDBmU0JsYkhObElIdGNibHgwWEhSY2RFRnVhVzFoZEdsdmJpNXdjbVZtYVd4MFpYSnpMbkIxYzJnb0lHTmhiR3hpWVdOcklDazdYRzVjZEZ4MGZWeHVYSFI5WEc1OUlDazdYRzVjYm1wUmRXVnllUzV6Y0dWbFpDQTlJR1oxYm1OMGFXOXVLQ0J6Y0dWbFpDd2daV0Z6YVc1bkxDQm1iaUFwSUh0Y2JseDBkbUZ5SUc5d2RDQTlJSE53WldWa0lDWW1JSFI1Y0dWdlppQnpjR1ZsWkNBOVBUMGdYQ0p2WW1wbFkzUmNJaUEvSUdwUmRXVnllUzVsZUhSbGJtUW9JSHQ5TENCemNHVmxaQ0FwSURvZ2UxeHVYSFJjZEdOdmJYQnNaWFJsT2lCbWJpQjhmQ0FoWm00Z0ppWWdaV0Z6YVc1bklIeDhYRzVjZEZ4MFhIUnBjMFoxYm1OMGFXOXVLQ0J6Y0dWbFpDQXBJQ1ltSUhOd1pXVmtMRnh1WEhSY2RHUjFjbUYwYVc5dU9pQnpjR1ZsWkN4Y2JseDBYSFJsWVhOcGJtYzZJR1p1SUNZbUlHVmhjMmx1WnlCOGZDQmxZWE5wYm1jZ0ppWWdJV2x6Um5WdVkzUnBiMjRvSUdWaGMybHVaeUFwSUNZbUlHVmhjMmx1WjF4dVhIUjlPMXh1WEc1Y2RDOHZJRWR2SUhSdklIUm9aU0JsYm1RZ2MzUmhkR1VnYVdZZ1puZ2dZWEpsSUc5bVpseHVYSFJwWmlBb0lHcFJkV1Z5ZVM1bWVDNXZabVlnS1NCN1hHNWNkRngwYjNCMExtUjFjbUYwYVc5dUlEMGdNRHRjYmx4dVhIUjlJR1ZzYzJVZ2UxeHVYSFJjZEdsbUlDZ2dkSGx3Wlc5bUlHOXdkQzVrZFhKaGRHbHZiaUFoUFQwZ1hDSnVkVzFpWlhKY0lpQXBJSHRjYmx4MFhIUmNkR2xtSUNnZ2IzQjBMbVIxY21GMGFXOXVJR2x1SUdwUmRXVnllUzVtZUM1emNHVmxaSE1nS1NCN1hHNWNkRngwWEhSY2RHOXdkQzVrZFhKaGRHbHZiaUE5SUdwUmRXVnllUzVtZUM1emNHVmxaSE5iSUc5d2RDNWtkWEpoZEdsdmJpQmRPMXh1WEc1Y2RGeDBYSFI5SUdWc2MyVWdlMXh1WEhSY2RGeDBYSFJ2Y0hRdVpIVnlZWFJwYjI0Z1BTQnFVWFZsY25rdVpuZ3VjM0JsWldSekxsOWtaV1poZFd4ME8xeHVYSFJjZEZ4MGZWeHVYSFJjZEgxY2JseDBmVnh1WEc1Y2RDOHZJRTV2Y20xaGJHbDZaU0J2Y0hRdWNYVmxkV1VnTFNCMGNuVmxMM1Z1WkdWbWFXNWxaQzl1ZFd4c0lDMCtJRndpWm5oY0lseHVYSFJwWmlBb0lHOXdkQzV4ZFdWMVpTQTlQU0J1ZFd4c0lIeDhJRzl3ZEM1eGRXVjFaU0E5UFQwZ2RISjFaU0FwSUh0Y2JseDBYSFJ2Y0hRdWNYVmxkV1VnUFNCY0ltWjRYQ0k3WEc1Y2RIMWNibHh1WEhRdkx5QlJkV1YxWldsdVoxeHVYSFJ2Y0hRdWIyeGtJRDBnYjNCMExtTnZiWEJzWlhSbE8xeHVYRzVjZEc5d2RDNWpiMjF3YkdWMFpTQTlJR1oxYm1OMGFXOXVLQ2tnZTF4dVhIUmNkR2xtSUNnZ2FYTkdkVzVqZEdsdmJpZ2diM0IwTG05c1pDQXBJQ2tnZTF4dVhIUmNkRngwYjNCMExtOXNaQzVqWVd4c0tDQjBhR2x6SUNrN1hHNWNkRngwZlZ4dVhHNWNkRngwYVdZZ0tDQnZjSFF1Y1hWbGRXVWdLU0I3WEc1Y2RGeDBYSFJxVVhWbGNua3VaR1Z4ZFdWMVpTZ2dkR2hwY3l3Z2IzQjBMbkYxWlhWbElDazdYRzVjZEZ4MGZWeHVYSFI5TzF4dVhHNWNkSEpsZEhWeWJpQnZjSFE3WEc1OU8xeHVYRzVxVVhWbGNua3VabTR1WlhoMFpXNWtLQ0I3WEc1Y2RHWmhaR1ZVYnpvZ1puVnVZM1JwYjI0b0lITndaV1ZrTENCMGJ5d2daV0Z6YVc1bkxDQmpZV3hzWW1GamF5QXBJSHRjYmx4dVhIUmNkQzh2SUZOb2IzY2dZVzU1SUdocFpHUmxiaUJsYkdWdFpXNTBjeUJoWm5SbGNpQnpaWFIwYVc1bklHOXdZV05wZEhrZ2RHOGdNRnh1WEhSY2RISmxkSFZ5YmlCMGFHbHpMbVpwYkhSbGNpZ2dhWE5JYVdSa1pXNVhhWFJvYVc1VWNtVmxJQ2t1WTNOektDQmNJbTl3WVdOcGRIbGNJaXdnTUNBcExuTm9iM2NvS1Z4dVhHNWNkRngwWEhRdkx5QkJibWx0WVhSbElIUnZJSFJvWlNCMllXeDFaU0J6Y0dWamFXWnBaV1JjYmx4MFhIUmNkQzVsYm1Rb0tTNWhibWx0WVhSbEtDQjdJRzl3WVdOcGRIazZJSFJ2SUgwc0lITndaV1ZrTENCbFlYTnBibWNzSUdOaGJHeGlZV05ySUNrN1hHNWNkSDBzWEc1Y2RHRnVhVzFoZEdVNklHWjFibU4wYVc5dUtDQndjbTl3TENCemNHVmxaQ3dnWldGemFXNW5MQ0JqWVd4c1ltRmpheUFwSUh0Y2JseDBYSFIyWVhJZ1pXMXdkSGtnUFNCcVVYVmxjbmt1YVhORmJYQjBlVTlpYW1WamRDZ2djSEp2Y0NBcExGeHVYSFJjZEZ4MGIzQjBZV3hzSUQwZ2FsRjFaWEo1TG5Od1pXVmtLQ0J6Y0dWbFpDd2daV0Z6YVc1bkxDQmpZV3hzWW1GamF5QXBMRnh1WEhSY2RGeDBaRzlCYm1sdFlYUnBiMjRnUFNCbWRXNWpkR2x2YmlncElIdGNibHh1WEhSY2RGeDBYSFF2THlCUGNHVnlZWFJsSUc5dUlHRWdZMjl3ZVNCdlppQndjbTl3SUhOdklIQmxjaTF3Y205d1pYSjBlU0JsWVhOcGJtY2dkMjl1SjNRZ1ltVWdiRzl6ZEZ4dVhIUmNkRngwWEhSMllYSWdZVzVwYlNBOUlFRnVhVzFoZEdsdmJpZ2dkR2hwY3l3Z2FsRjFaWEo1TG1WNGRHVnVaQ2dnZTMwc0lIQnliM0FnS1N3Z2IzQjBZV3hzSUNrN1hHNWNibHgwWEhSY2RGeDBMeThnUlcxd2RIa2dZVzVwYldGMGFXOXVjeXdnYjNJZ1ptbHVhWE5vYVc1bklISmxjMjlzZG1WeklHbHRiV1ZrYVdGMFpXeDVYRzVjZEZ4MFhIUmNkR2xtSUNnZ1pXMXdkSGtnZkh3Z1pHRjBZVkJ5YVhZdVoyVjBLQ0IwYUdsekxDQmNJbVpwYm1semFGd2lJQ2tnS1NCN1hHNWNkRngwWEhSY2RGeDBZVzVwYlM1emRHOXdLQ0IwY25WbElDazdYRzVjZEZ4MFhIUmNkSDFjYmx4MFhIUmNkSDA3WEc1Y2JseDBYSFJrYjBGdWFXMWhkR2x2Ymk1bWFXNXBjMmdnUFNCa2IwRnVhVzFoZEdsdmJqdGNibHh1WEhSY2RISmxkSFZ5YmlCbGJYQjBlU0I4ZkNCdmNIUmhiR3d1Y1hWbGRXVWdQVDA5SUdaaGJITmxJRDljYmx4MFhIUmNkSFJvYVhNdVpXRmphQ2dnWkc5QmJtbHRZWFJwYjI0Z0tTQTZYRzVjZEZ4MFhIUjBhR2x6TG5GMVpYVmxLQ0J2Y0hSaGJHd3VjWFZsZFdVc0lHUnZRVzVwYldGMGFXOXVJQ2s3WEc1Y2RIMHNYRzVjZEhOMGIzQTZJR1oxYm1OMGFXOXVLQ0IwZVhCbExDQmpiR1ZoY2xGMVpYVmxMQ0JuYjNSdlJXNWtJQ2tnZTF4dVhIUmNkSFpoY2lCemRHOXdVWFZsZFdVZ1BTQm1kVzVqZEdsdmJpZ2dhRzl2YTNNZ0tTQjdYRzVjZEZ4MFhIUjJZWElnYzNSdmNDQTlJR2h2YjJ0ekxuTjBiM0E3WEc1Y2RGeDBYSFJrWld4bGRHVWdhRzl2YTNNdWMzUnZjRHRjYmx4MFhIUmNkSE4wYjNBb0lHZHZkRzlGYm1RZ0tUdGNibHgwWEhSOU8xeHVYRzVjZEZ4MGFXWWdLQ0IwZVhCbGIyWWdkSGx3WlNBaFBUMGdYQ0p6ZEhKcGJtZGNJaUFwSUh0Y2JseDBYSFJjZEdkdmRHOUZibVFnUFNCamJHVmhjbEYxWlhWbE8xeHVYSFJjZEZ4MFkyeGxZWEpSZFdWMVpTQTlJSFI1Y0dVN1hHNWNkRngwWEhSMGVYQmxJRDBnZFc1a1pXWnBibVZrTzF4dVhIUmNkSDFjYmx4MFhIUnBaaUFvSUdOc1pXRnlVWFZsZFdVZ0tTQjdYRzVjZEZ4MFhIUjBhR2x6TG5GMVpYVmxLQ0IwZVhCbElIeDhJRndpWm5oY0lpd2dXMTBnS1R0Y2JseDBYSFI5WEc1Y2JseDBYSFJ5WlhSMWNtNGdkR2hwY3k1bFlXTm9LQ0JtZFc1amRHbHZiaWdwSUh0Y2JseDBYSFJjZEhaaGNpQmtaWEYxWlhWbElEMGdkSEoxWlN4Y2JseDBYSFJjZEZ4MGFXNWtaWGdnUFNCMGVYQmxJQ0U5SUc1MWJHd2dKaVlnZEhsd1pTQXJJRndpY1hWbGRXVkliMjlyYzF3aUxGeHVYSFJjZEZ4MFhIUjBhVzFsY25NZ1BTQnFVWFZsY25rdWRHbHRaWEp6TEZ4dVhIUmNkRngwWEhSa1lYUmhJRDBnWkdGMFlWQnlhWFl1WjJWMEtDQjBhR2x6SUNrN1hHNWNibHgwWEhSY2RHbG1JQ2dnYVc1a1pYZ2dLU0I3WEc1Y2RGeDBYSFJjZEdsbUlDZ2daR0YwWVZzZ2FXNWtaWGdnWFNBbUppQmtZWFJoV3lCcGJtUmxlQ0JkTG5OMGIzQWdLU0I3WEc1Y2RGeDBYSFJjZEZ4MGMzUnZjRkYxWlhWbEtDQmtZWFJoV3lCcGJtUmxlQ0JkSUNrN1hHNWNkRngwWEhSY2RIMWNibHgwWEhSY2RIMGdaV3h6WlNCN1hHNWNkRngwWEhSY2RHWnZjaUFvSUdsdVpHVjRJR2x1SUdSaGRHRWdLU0I3WEc1Y2RGeDBYSFJjZEZ4MGFXWWdLQ0JrWVhSaFd5QnBibVJsZUNCZElDWW1JR1JoZEdGYklHbHVaR1Y0SUYwdWMzUnZjQ0FtSmlCeWNuVnVMblJsYzNRb0lHbHVaR1Y0SUNrZ0tTQjdYRzVjZEZ4MFhIUmNkRngwWEhSemRHOXdVWFZsZFdVb0lHUmhkR0ZiSUdsdVpHVjRJRjBnS1R0Y2JseDBYSFJjZEZ4MFhIUjlYRzVjZEZ4MFhIUmNkSDFjYmx4MFhIUmNkSDFjYmx4dVhIUmNkRngwWm05eUlDZ2dhVzVrWlhnZ1BTQjBhVzFsY25NdWJHVnVaM1JvT3lCcGJtUmxlQzB0T3lBcElIdGNibHgwWEhSY2RGeDBhV1lnS0NCMGFXMWxjbk5iSUdsdVpHVjRJRjB1Wld4bGJTQTlQVDBnZEdocGN5QW1KbHh1WEhSY2RGeDBYSFJjZENnZ2RIbHdaU0E5UFNCdWRXeHNJSHg4SUhScGJXVnljMXNnYVc1a1pYZ2dYUzV4ZFdWMVpTQTlQVDBnZEhsd1pTQXBJQ2tnZTF4dVhHNWNkRngwWEhSY2RGeDBkR2x0WlhKeld5QnBibVJsZUNCZExtRnVhVzB1YzNSdmNDZ2daMjkwYjBWdVpDQXBPMXh1WEhSY2RGeDBYSFJjZEdSbGNYVmxkV1VnUFNCbVlXeHpaVHRjYmx4MFhIUmNkRngwWEhSMGFXMWxjbk11YzNCc2FXTmxLQ0JwYm1SbGVDd2dNU0FwTzF4dVhIUmNkRngwWEhSOVhHNWNkRngwWEhSOVhHNWNibHgwWEhSY2RDOHZJRk4wWVhKMElIUm9aU0J1WlhoMElHbHVJSFJvWlNCeGRXVjFaU0JwWmlCMGFHVWdiR0Z6ZENCemRHVndJSGRoYzI0bmRDQm1iM0pqWldRdVhHNWNkRngwWEhRdkx5QlVhVzFsY25NZ1kzVnljbVZ1ZEd4NUlIZHBiR3dnWTJGc2JDQjBhR1ZwY2lCamIyMXdiR1YwWlNCallXeHNZbUZqYTNNc0lIZG9hV05vWEc1Y2RGeDBYSFF2THlCM2FXeHNJR1JsY1hWbGRXVWdZblYwSUc5dWJIa2dhV1lnZEdobGVTQjNaWEpsSUdkdmRHOUZibVF1WEc1Y2RGeDBYSFJwWmlBb0lHUmxjWFZsZFdVZ2ZId2dJV2R2ZEc5RmJtUWdLU0I3WEc1Y2RGeDBYSFJjZEdwUmRXVnllUzVrWlhGMVpYVmxLQ0IwYUdsekxDQjBlWEJsSUNrN1hHNWNkRngwWEhSOVhHNWNkRngwZlNBcE8xeHVYSFI5TEZ4dVhIUm1hVzVwYzJnNklHWjFibU4wYVc5dUtDQjBlWEJsSUNrZ2UxeHVYSFJjZEdsbUlDZ2dkSGx3WlNBaFBUMGdabUZzYzJVZ0tTQjdYRzVjZEZ4MFhIUjBlWEJsSUQwZ2RIbHdaU0I4ZkNCY0ltWjRYQ0k3WEc1Y2RGeDBmVnh1WEhSY2RISmxkSFZ5YmlCMGFHbHpMbVZoWTJnb0lHWjFibU4wYVc5dUtDa2dlMXh1WEhSY2RGeDBkbUZ5SUdsdVpHVjRMRnh1WEhSY2RGeDBYSFJrWVhSaElEMGdaR0YwWVZCeWFYWXVaMlYwS0NCMGFHbHpJQ2tzWEc1Y2RGeDBYSFJjZEhGMVpYVmxJRDBnWkdGMFlWc2dkSGx3WlNBcklGd2ljWFZsZFdWY0lpQmRMRnh1WEhSY2RGeDBYSFJvYjI5cmN5QTlJR1JoZEdGYklIUjVjR1VnS3lCY0luRjFaWFZsU0c5dmEzTmNJaUJkTEZ4dVhIUmNkRngwWEhSMGFXMWxjbk1nUFNCcVVYVmxjbmt1ZEdsdFpYSnpMRnh1WEhSY2RGeDBYSFJzWlc1bmRHZ2dQU0J4ZFdWMVpTQS9JSEYxWlhWbExteGxibWQwYUNBNklEQTdYRzVjYmx4MFhIUmNkQzh2SUVWdVlXSnNaU0JtYVc1cGMyaHBibWNnWm14aFp5QnZiaUJ3Y21sMllYUmxJR1JoZEdGY2JseDBYSFJjZEdSaGRHRXVabWx1YVhOb0lEMGdkSEoxWlR0Y2JseHVYSFJjZEZ4MEx5OGdSVzF3ZEhrZ2RHaGxJSEYxWlhWbElHWnBjbk4wWEc1Y2RGeDBYSFJxVVhWbGNua3VjWFZsZFdVb0lIUm9hWE1zSUhSNWNHVXNJRnRkSUNrN1hHNWNibHgwWEhSY2RHbG1JQ2dnYUc5dmEzTWdKaVlnYUc5dmEzTXVjM1J2Y0NBcElIdGNibHgwWEhSY2RGeDBhRzl2YTNNdWMzUnZjQzVqWVd4c0tDQjBhR2x6TENCMGNuVmxJQ2s3WEc1Y2RGeDBYSFI5WEc1Y2JseDBYSFJjZEM4dklFeHZiMnNnWm05eUlHRnVlU0JoWTNScGRtVWdZVzVwYldGMGFXOXVjeXdnWVc1a0lHWnBibWx6YUNCMGFHVnRYRzVjZEZ4MFhIUm1iM0lnS0NCcGJtUmxlQ0E5SUhScGJXVnljeTVzWlc1bmRHZzdJR2x1WkdWNExTMDdJQ2tnZTF4dVhIUmNkRngwWEhScFppQW9JSFJwYldWeWMxc2dhVzVrWlhnZ1hTNWxiR1Z0SUQwOVBTQjBhR2x6SUNZbUlIUnBiV1Z5YzFzZ2FXNWtaWGdnWFM1eGRXVjFaU0E5UFQwZ2RIbHdaU0FwSUh0Y2JseDBYSFJjZEZ4MFhIUjBhVzFsY25OYklHbHVaR1Y0SUYwdVlXNXBiUzV6ZEc5d0tDQjBjblZsSUNrN1hHNWNkRngwWEhSY2RGeDBkR2x0WlhKekxuTndiR2xqWlNnZ2FXNWtaWGdzSURFZ0tUdGNibHgwWEhSY2RGeDBmVnh1WEhSY2RGeDBmVnh1WEc1Y2RGeDBYSFF2THlCTWIyOXJJR1p2Y2lCaGJua2dZVzVwYldGMGFXOXVjeUJwYmlCMGFHVWdiMnhrSUhGMVpYVmxJR0Z1WkNCbWFXNXBjMmdnZEdobGJWeHVYSFJjZEZ4MFptOXlJQ2dnYVc1a1pYZ2dQU0F3T3lCcGJtUmxlQ0E4SUd4bGJtZDBhRHNnYVc1a1pYZ3JLeUFwSUh0Y2JseDBYSFJjZEZ4MGFXWWdLQ0J4ZFdWMVpWc2dhVzVrWlhnZ1hTQW1KaUJ4ZFdWMVpWc2dhVzVrWlhnZ1hTNW1hVzVwYzJnZ0tTQjdYRzVjZEZ4MFhIUmNkRngwY1hWbGRXVmJJR2x1WkdWNElGMHVabWx1YVhOb0xtTmhiR3dvSUhSb2FYTWdLVHRjYmx4MFhIUmNkRngwZlZ4dVhIUmNkRngwZlZ4dVhHNWNkRngwWEhRdkx5QlVkWEp1SUc5bVppQm1hVzVwYzJocGJtY2dabXhoWjF4dVhIUmNkRngwWkdWc1pYUmxJR1JoZEdFdVptbHVhWE5vTzF4dVhIUmNkSDBnS1R0Y2JseDBmVnh1ZlNBcE8xeHVYRzVxVVhWbGNua3VaV0ZqYUNnZ1d5QmNJblJ2WjJkc1pWd2lMQ0JjSW5Ob2IzZGNJaXdnWENKb2FXUmxYQ0lnWFN3Z1puVnVZM1JwYjI0b0lGOXBMQ0J1WVcxbElDa2dlMXh1WEhSMllYSWdZM056Um00Z1BTQnFVWFZsY25rdVptNWJJRzVoYldVZ1hUdGNibHgwYWxGMVpYSjVMbVp1V3lCdVlXMWxJRjBnUFNCbWRXNWpkR2x2YmlnZ2MzQmxaV1FzSUdWaGMybHVaeXdnWTJGc2JHSmhZMnNnS1NCN1hHNWNkRngwY21WMGRYSnVJSE53WldWa0lEMDlJRzUxYkd3Z2ZId2dkSGx3Wlc5bUlITndaV1ZrSUQwOVBTQmNJbUp2YjJ4bFlXNWNJaUEvWEc1Y2RGeDBYSFJqYzNOR2JpNWhjSEJzZVNnZ2RHaHBjeXdnWVhKbmRXMWxiblJ6SUNrZ09seHVYSFJjZEZ4MGRHaHBjeTVoYm1sdFlYUmxLQ0JuWlc1R2VDZ2dibUZ0WlN3Z2RISjFaU0FwTENCemNHVmxaQ3dnWldGemFXNW5MQ0JqWVd4c1ltRmpheUFwTzF4dVhIUjlPMXh1ZlNBcE8xeHVYRzR2THlCSFpXNWxjbUYwWlNCemFHOXlkR04xZEhNZ1ptOXlJR04xYzNSdmJTQmhibWx0WVhScGIyNXpYRzVxVVhWbGNua3VaV0ZqYUNnZ2UxeHVYSFJ6Ykdsa1pVUnZkMjQ2SUdkbGJrWjRLQ0JjSW5Ob2IzZGNJaUFwTEZ4dVhIUnpiR2xrWlZWd09pQm5aVzVHZUNnZ1hDSm9hV1JsWENJZ0tTeGNibHgwYzJ4cFpHVlViMmRuYkdVNklHZGxia1o0S0NCY0luUnZaMmRzWlZ3aUlDa3NYRzVjZEdaaFpHVkpiam9nZXlCdmNHRmphWFI1T2lCY0luTm9iM2RjSWlCOUxGeHVYSFJtWVdSbFQzVjBPaUI3SUc5d1lXTnBkSGs2SUZ3aWFHbGtaVndpSUgwc1hHNWNkR1poWkdWVWIyZG5iR1U2SUhzZ2IzQmhZMmwwZVRvZ1hDSjBiMmRuYkdWY0lpQjlYRzU5TENCbWRXNWpkR2x2YmlnZ2JtRnRaU3dnY0hKdmNITWdLU0I3WEc1Y2RHcFJkV1Z5ZVM1bWJsc2dibUZ0WlNCZElEMGdablZ1WTNScGIyNG9JSE53WldWa0xDQmxZWE5wYm1jc0lHTmhiR3hpWVdOcklDa2dlMXh1WEhSY2RISmxkSFZ5YmlCMGFHbHpMbUZ1YVcxaGRHVW9JSEJ5YjNCekxDQnpjR1ZsWkN3Z1pXRnphVzVuTENCallXeHNZbUZqYXlBcE8xeHVYSFI5TzF4dWZTQXBPMXh1WEc1cVVYVmxjbmt1ZEdsdFpYSnpJRDBnVzEwN1hHNXFVWFZsY25rdVpuZ3VkR2xqYXlBOUlHWjFibU4wYVc5dUtDa2dlMXh1WEhSMllYSWdkR2x0WlhJc1hHNWNkRngwYVNBOUlEQXNYRzVjZEZ4MGRHbHRaWEp6SUQwZ2FsRjFaWEo1TG5ScGJXVnljenRjYmx4dVhIUm1lRTV2ZHlBOUlFUmhkR1V1Ym05M0tDazdYRzVjYmx4MFptOXlJQ2dnT3lCcElEd2dkR2x0WlhKekxteGxibWQwYURzZ2FTc3JJQ2tnZTF4dVhIUmNkSFJwYldWeUlEMGdkR2x0WlhKeld5QnBJRjA3WEc1Y2JseDBYSFF2THlCU2RXNGdkR2hsSUhScGJXVnlJR0Z1WkNCellXWmxiSGtnY21WdGIzWmxJR2wwSUhkb1pXNGdaRzl1WlNBb1lXeHNiM2RwYm1jZ1ptOXlJR1Y0ZEdWeWJtRnNJSEpsYlc5MllXd3BYRzVjZEZ4MGFXWWdLQ0FoZEdsdFpYSW9LU0FtSmlCMGFXMWxjbk5iSUdrZ1hTQTlQVDBnZEdsdFpYSWdLU0I3WEc1Y2RGeDBYSFIwYVcxbGNuTXVjM0JzYVdObEtDQnBMUzBzSURFZ0tUdGNibHgwWEhSOVhHNWNkSDFjYmx4dVhIUnBaaUFvSUNGMGFXMWxjbk11YkdWdVozUm9JQ2tnZTF4dVhIUmNkR3BSZFdWeWVTNW1lQzV6ZEc5d0tDazdYRzVjZEgxY2JseDBabmhPYjNjZ1BTQjFibVJsWm1sdVpXUTdYRzU5TzF4dVhHNXFVWFZsY25rdVpuZ3VkR2x0WlhJZ1BTQm1kVzVqZEdsdmJpZ2dkR2x0WlhJZ0tTQjdYRzVjZEdwUmRXVnllUzUwYVcxbGNuTXVjSFZ6YUNnZ2RHbHRaWElnS1R0Y2JseDBhbEYxWlhKNUxtWjRMbk4wWVhKMEtDazdYRzU5TzF4dVhHNXFVWFZsY25rdVpuZ3VhVzUwWlhKMllXd2dQU0F4TXp0Y2JtcFJkV1Z5ZVM1bWVDNXpkR0Z5ZENBOUlHWjFibU4wYVc5dUtDa2dlMXh1WEhScFppQW9JR2x1VUhKdlozSmxjM01nS1NCN1hHNWNkRngwY21WMGRYSnVPMXh1WEhSOVhHNWNibHgwYVc1UWNtOW5jbVZ6Y3lBOUlIUnlkV1U3WEc1Y2RITmphR1ZrZFd4bEtDazdYRzU5TzF4dVhHNXFVWFZsY25rdVpuZ3VjM1J2Y0NBOUlHWjFibU4wYVc5dUtDa2dlMXh1WEhScGJsQnliMmR5WlhOeklEMGdiblZzYkR0Y2JuMDdYRzVjYm1wUmRXVnllUzVtZUM1emNHVmxaSE1nUFNCN1hHNWNkSE5zYjNjNklEWXdNQ3hjYmx4MFptRnpkRG9nTWpBd0xGeHVYRzVjZEM4dklFUmxabUYxYkhRZ2MzQmxaV1JjYmx4MFgyUmxabUYxYkhRNklEUXdNRnh1ZlR0Y2JseHVYRzR2THlCQ1lYTmxaQ0J2Wm1ZZ2IyWWdkR2hsSUhCc2RXZHBiaUJpZVNCRGJHbHVkQ0JJWld4bVpYSnpMQ0IzYVhSb0lIQmxjbTFwYzNOcGIyNHVYRzVxVVhWbGNua3VabTR1WkdWc1lYa2dQU0JtZFc1amRHbHZiaWdnZEdsdFpTd2dkSGx3WlNBcElIdGNibHgwZEdsdFpTQTlJR3BSZFdWeWVTNW1lQ0EvSUdwUmRXVnllUzVtZUM1emNHVmxaSE5iSUhScGJXVWdYU0I4ZkNCMGFXMWxJRG9nZEdsdFpUdGNibHgwZEhsd1pTQTlJSFI1Y0dVZ2ZId2dYQ0ptZUZ3aU8xeHVYRzVjZEhKbGRIVnliaUIwYUdsekxuRjFaWFZsS0NCMGVYQmxMQ0JtZFc1amRHbHZiaWdnYm1WNGRDd2dhRzl2YTNNZ0tTQjdYRzVjZEZ4MGRtRnlJSFJwYldWdmRYUWdQU0IzYVc1a2IzY3VjMlYwVkdsdFpXOTFkQ2dnYm1WNGRDd2dkR2x0WlNBcE8xeHVYSFJjZEdodmIydHpMbk4wYjNBZ1BTQm1kVzVqZEdsdmJpZ3BJSHRjYmx4MFhIUmNkSGRwYm1SdmR5NWpiR1ZoY2xScGJXVnZkWFFvSUhScGJXVnZkWFFnS1R0Y2JseDBYSFI5TzF4dVhIUjlJQ2s3WEc1OU8xeHVYRzVjYmlnZ1puVnVZM1JwYjI0b0tTQjdYRzVjZEhaaGNpQnBibkIxZENBOUlHUnZZM1Z0Wlc1MExtTnlaV0YwWlVWc1pXMWxiblFvSUZ3aWFXNXdkWFJjSWlBcExGeHVYSFJjZEhObGJHVmpkQ0E5SUdSdlkzVnRaVzUwTG1OeVpXRjBaVVZzWlcxbGJuUW9JRndpYzJWc1pXTjBYQ0lnS1N4Y2JseDBYSFJ2Y0hRZ1BTQnpaV3hsWTNRdVlYQndaVzVrUTJocGJHUW9JR1J2WTNWdFpXNTBMbU55WldGMFpVVnNaVzFsYm5Rb0lGd2liM0IwYVc5dVhDSWdLU0FwTzF4dVhHNWNkR2x1Y0hWMExuUjVjR1VnUFNCY0ltTm9aV05yWW05NFhDSTdYRzVjYmx4MEx5OGdVM1Z3Y0c5eWREb2dRVzVrY205cFpDQThQVFF1TXlCdmJteDVYRzVjZEM4dklFUmxabUYxYkhRZ2RtRnNkV1VnWm05eUlHRWdZMmhsWTJ0aWIzZ2djMmh2ZFd4a0lHSmxJRndpYjI1Y0lseHVYSFJ6ZFhCd2IzSjBMbU5vWldOclQyNGdQU0JwYm5CMWRDNTJZV3gxWlNBaFBUMGdYQ0pjSWp0Y2JseHVYSFF2THlCVGRYQndiM0owT2lCSlJTQThQVEV4SUc5dWJIbGNibHgwTHk4Z1RYVnpkQ0JoWTJObGMzTWdjMlZzWldOMFpXUkpibVJsZUNCMGJ5QnRZV3RsSUdSbFptRjFiSFFnYjNCMGFXOXVjeUJ6Wld4bFkzUmNibHgwYzNWd2NHOXlkQzV2Y0hSVFpXeGxZM1JsWkNBOUlHOXdkQzV6Wld4bFkzUmxaRHRjYmx4dVhIUXZMeUJUZFhCd2IzSjBPaUJKUlNBOFBURXhJRzl1YkhsY2JseDBMeThnUVc0Z2FXNXdkWFFnYkc5elpYTWdhWFJ6SUhaaGJIVmxJR0ZtZEdWeUlHSmxZMjl0YVc1bklHRWdjbUZrYVc5Y2JseDBhVzV3ZFhRZ1BTQmtiMk4xYldWdWRDNWpjbVZoZEdWRmJHVnRaVzUwS0NCY0ltbHVjSFYwWENJZ0tUdGNibHgwYVc1d2RYUXVkbUZzZFdVZ1BTQmNJblJjSWp0Y2JseDBhVzV3ZFhRdWRIbHdaU0E5SUZ3aWNtRmthVzljSWp0Y2JseDBjM1Z3Y0c5eWRDNXlZV1JwYjFaaGJIVmxJRDBnYVc1d2RYUXVkbUZzZFdVZ1BUMDlJRndpZEZ3aU8xeHVmU0FwS0NrN1hHNWNibHh1ZG1GeUlHSnZiMnhJYjI5ckxGeHVYSFJoZEhSeVNHRnVaR3hsSUQwZ2FsRjFaWEo1TG1WNGNISXVZWFIwY2toaGJtUnNaVHRjYmx4dWFsRjFaWEo1TG1adUxtVjRkR1Z1WkNnZ2UxeHVYSFJoZEhSeU9pQm1kVzVqZEdsdmJpZ2dibUZ0WlN3Z2RtRnNkV1VnS1NCN1hHNWNkRngwY21WMGRYSnVJR0ZqWTJWemN5Z2dkR2hwY3l3Z2FsRjFaWEo1TG1GMGRISXNJRzVoYldVc0lIWmhiSFZsTENCaGNtZDFiV1Z1ZEhNdWJHVnVaM1JvSUQ0Z01TQXBPMXh1WEhSOUxGeHVYRzVjZEhKbGJXOTJaVUYwZEhJNklHWjFibU4wYVc5dUtDQnVZVzFsSUNrZ2UxeHVYSFJjZEhKbGRIVnliaUIwYUdsekxtVmhZMmdvSUdaMWJtTjBhVzl1S0NrZ2UxeHVYSFJjZEZ4MGFsRjFaWEo1TG5KbGJXOTJaVUYwZEhJb0lIUm9hWE1zSUc1aGJXVWdLVHRjYmx4MFhIUjlJQ2s3WEc1Y2RIMWNibjBnS1R0Y2JseHVhbEYxWlhKNUxtVjRkR1Z1WkNnZ2UxeHVYSFJoZEhSeU9pQm1kVzVqZEdsdmJpZ2daV3hsYlN3Z2JtRnRaU3dnZG1Gc2RXVWdLU0I3WEc1Y2RGeDBkbUZ5SUhKbGRDd2dhRzl2YTNNc1hHNWNkRngwWEhSdVZIbHdaU0E5SUdWc1pXMHVibTlrWlZSNWNHVTdYRzVjYmx4MFhIUXZMeUJFYjI0bmRDQm5aWFF2YzJWMElHRjBkSEpwWW5WMFpYTWdiMjRnZEdWNGRDd2dZMjl0YldWdWRDQmhibVFnWVhSMGNtbGlkWFJsSUc1dlpHVnpYRzVjZEZ4MGFXWWdLQ0J1Vkhsd1pTQTlQVDBnTXlCOGZDQnVWSGx3WlNBOVBUMGdPQ0I4ZkNCdVZIbHdaU0E5UFQwZ01pQXBJSHRjYmx4MFhIUmNkSEpsZEhWeWJqdGNibHgwWEhSOVhHNWNibHgwWEhRdkx5QkdZV3hzWW1GamF5QjBieUJ3Y205d0lIZG9aVzRnWVhSMGNtbGlkWFJsY3lCaGNtVWdibTkwSUhOMWNIQnZjblJsWkZ4dVhIUmNkR2xtSUNnZ2RIbHdaVzltSUdWc1pXMHVaMlYwUVhSMGNtbGlkWFJsSUQwOVBTQmNJblZ1WkdWbWFXNWxaRndpSUNrZ2UxeHVYSFJjZEZ4MGNtVjBkWEp1SUdwUmRXVnllUzV3Y205d0tDQmxiR1Z0TENCdVlXMWxMQ0IyWVd4MVpTQXBPMXh1WEhSY2RIMWNibHh1WEhSY2RDOHZJRUYwZEhKcFluVjBaU0JvYjI5cmN5QmhjbVVnWkdWMFpYSnRhVzVsWkNCaWVTQjBhR1VnYkc5M1pYSmpZWE5sSUhabGNuTnBiMjVjYmx4MFhIUXZMeUJIY21GaUlHNWxZMlZ6YzJGeWVTQm9iMjlySUdsbUlHOXVaU0JwY3lCa1pXWnBibVZrWEc1Y2RGeDBhV1lnS0NCdVZIbHdaU0FoUFQwZ01TQjhmQ0FoYWxGMVpYSjVMbWx6V0UxTVJHOWpLQ0JsYkdWdElDa2dLU0I3WEc1Y2RGeDBYSFJvYjI5cmN5QTlJR3BSZFdWeWVTNWhkSFJ5U0c5dmEzTmJJRzVoYldVdWRHOU1iM2RsY2tOaGMyVW9LU0JkSUh4OFhHNWNkRngwWEhSY2RDZ2dhbEYxWlhKNUxtVjRjSEl1YldGMFkyZ3VZbTl2YkM1MFpYTjBLQ0J1WVcxbElDa2dQeUJpYjI5c1NHOXZheUE2SUhWdVpHVm1hVzVsWkNBcE8xeHVYSFJjZEgxY2JseHVYSFJjZEdsbUlDZ2dkbUZzZFdVZ0lUMDlJSFZ1WkdWbWFXNWxaQ0FwSUh0Y2JseDBYSFJjZEdsbUlDZ2dkbUZzZFdVZ1BUMDlJRzUxYkd3Z0tTQjdYRzVjZEZ4MFhIUmNkR3BSZFdWeWVTNXlaVzF2ZG1WQmRIUnlLQ0JsYkdWdExDQnVZVzFsSUNrN1hHNWNkRngwWEhSY2RISmxkSFZ5Ymp0Y2JseDBYSFJjZEgxY2JseHVYSFJjZEZ4MGFXWWdLQ0JvYjI5cmN5QW1KaUJjSW5ObGRGd2lJR2x1SUdodmIydHpJQ1ltWEc1Y2RGeDBYSFJjZENnZ2NtVjBJRDBnYUc5dmEzTXVjMlYwS0NCbGJHVnRMQ0IyWVd4MVpTd2dibUZ0WlNBcElDa2dJVDA5SUhWdVpHVm1hVzVsWkNBcElIdGNibHgwWEhSY2RGeDBjbVYwZFhKdUlISmxkRHRjYmx4MFhIUmNkSDFjYmx4dVhIUmNkRngwWld4bGJTNXpaWFJCZEhSeWFXSjFkR1VvSUc1aGJXVXNJSFpoYkhWbElDc2dYQ0pjSWlBcE8xeHVYSFJjZEZ4MGNtVjBkWEp1SUhaaGJIVmxPMXh1WEhSY2RIMWNibHh1WEhSY2RHbG1JQ2dnYUc5dmEzTWdKaVlnWENKblpYUmNJaUJwYmlCb2IyOXJjeUFtSmlBb0lISmxkQ0E5SUdodmIydHpMbWRsZENnZ1pXeGxiU3dnYm1GdFpTQXBJQ2tnSVQwOUlHNTFiR3dnS1NCN1hHNWNkRngwWEhSeVpYUjFjbTRnY21WME8xeHVYSFJjZEgxY2JseHVYSFJjZEhKbGRDQTlJR3BSZFdWeWVTNW1hVzVrTG1GMGRISW9JR1ZzWlcwc0lHNWhiV1VnS1R0Y2JseHVYSFJjZEM4dklFNXZiaTFsZUdsemRHVnVkQ0JoZEhSeWFXSjFkR1Z6SUhKbGRIVnliaUJ1ZFd4c0xDQjNaU0J1YjNKdFlXeHBlbVVnZEc4Z2RXNWtaV1pwYm1Wa1hHNWNkRngwY21WMGRYSnVJSEpsZENBOVBTQnVkV3hzSUQ4Z2RXNWtaV1pwYm1Wa0lEb2djbVYwTzF4dVhIUjlMRnh1WEc1Y2RHRjBkSEpJYjI5cmN6b2dlMXh1WEhSY2RIUjVjR1U2SUh0Y2JseDBYSFJjZEhObGREb2dablZ1WTNScGIyNG9JR1ZzWlcwc0lIWmhiSFZsSUNrZ2UxeHVYSFJjZEZ4MFhIUnBaaUFvSUNGemRYQndiM0owTG5KaFpHbHZWbUZzZFdVZ0ppWWdkbUZzZFdVZ1BUMDlJRndpY21Ga2FXOWNJaUFtSmx4dVhIUmNkRngwWEhSY2RHNXZaR1ZPWVcxbEtDQmxiR1Z0TENCY0ltbHVjSFYwWENJZ0tTQXBJSHRjYmx4MFhIUmNkRngwWEhSMllYSWdkbUZzSUQwZ1pXeGxiUzUyWVd4MVpUdGNibHgwWEhSY2RGeDBYSFJsYkdWdExuTmxkRUYwZEhKcFluVjBaU2dnWENKMGVYQmxYQ0lzSUhaaGJIVmxJQ2s3WEc1Y2RGeDBYSFJjZEZ4MGFXWWdLQ0IyWVd3Z0tTQjdYRzVjZEZ4MFhIUmNkRngwWEhSbGJHVnRMblpoYkhWbElEMGdkbUZzTzF4dVhIUmNkRngwWEhSY2RIMWNibHgwWEhSY2RGeDBYSFJ5WlhSMWNtNGdkbUZzZFdVN1hHNWNkRngwWEhSY2RIMWNibHgwWEhSY2RIMWNibHgwWEhSOVhHNWNkSDBzWEc1Y2JseDBjbVZ0YjNabFFYUjBjam9nWm5WdVkzUnBiMjRvSUdWc1pXMHNJSFpoYkhWbElDa2dlMXh1WEhSY2RIWmhjaUJ1WVcxbExGeHVYSFJjZEZ4MGFTQTlJREFzWEc1Y2JseDBYSFJjZEM4dklFRjBkSEpwWW5WMFpTQnVZVzFsY3lCallXNGdZMjl1ZEdGcGJpQnViMjR0U0ZSTlRDQjNhR2wwWlhOd1lXTmxJR05vWVhKaFkzUmxjbk5jYmx4MFhIUmNkQzh2SUdoMGRIQnpPaTh2YUhSdGJDNXpjR1ZqTG5kb1lYUjNaeTV2Y21jdmJYVnNkR2x3WVdkbEwzTjViblJoZUM1b2RHMXNJMkYwZEhKcFluVjBaWE10TWx4dVhIUmNkRngwWVhSMGNrNWhiV1Z6SUQwZ2RtRnNkV1VnSmlZZ2RtRnNkV1V1YldGMFkyZ29JSEp1YjNSb2RHMXNkMmhwZEdVZ0tUdGNibHh1WEhSY2RHbG1JQ2dnWVhSMGNrNWhiV1Z6SUNZbUlHVnNaVzB1Ym05a1pWUjVjR1VnUFQwOUlERWdLU0I3WEc1Y2RGeDBYSFIzYUdsc1pTQW9JQ2dnYm1GdFpTQTlJR0YwZEhKT1lXMWxjMXNnYVNzcklGMGdLU0FwSUh0Y2JseDBYSFJjZEZ4MFpXeGxiUzV5WlcxdmRtVkJkSFJ5YVdKMWRHVW9JRzVoYldVZ0tUdGNibHgwWEhSY2RIMWNibHgwWEhSOVhHNWNkSDFjYm4wZ0tUdGNibHh1THk4Z1NHOXZhM01nWm05eUlHSnZiMnhsWVc0Z1lYUjBjbWxpZFhSbGMxeHVZbTl2YkVodmIyc2dQU0I3WEc1Y2RITmxkRG9nWm5WdVkzUnBiMjRvSUdWc1pXMHNJSFpoYkhWbExDQnVZVzFsSUNrZ2UxeHVYSFJjZEdsbUlDZ2dkbUZzZFdVZ1BUMDlJR1poYkhObElDa2dlMXh1WEc1Y2RGeDBYSFF2THlCU1pXMXZkbVVnWW05dmJHVmhiaUJoZEhSeWFXSjFkR1Z6SUhkb1pXNGdjMlYwSUhSdklHWmhiSE5sWEc1Y2RGeDBYSFJxVVhWbGNua3VjbVZ0YjNabFFYUjBjaWdnWld4bGJTd2dibUZ0WlNBcE8xeHVYSFJjZEgwZ1pXeHpaU0I3WEc1Y2RGeDBYSFJsYkdWdExuTmxkRUYwZEhKcFluVjBaU2dnYm1GdFpTd2dibUZ0WlNBcE8xeHVYSFJjZEgxY2JseDBYSFJ5WlhSMWNtNGdibUZ0WlR0Y2JseDBmVnh1ZlR0Y2JseHVhbEYxWlhKNUxtVmhZMmdvSUdwUmRXVnllUzVsZUhCeUxtMWhkR05vTG1KdmIyd3VjMjkxY21ObExtMWhkR05vS0NBdlhGeDNLeTluSUNrc0lHWjFibU4wYVc5dUtDQmZhU3dnYm1GdFpTQXBJSHRjYmx4MGRtRnlJR2RsZEhSbGNpQTlJR0YwZEhKSVlXNWtiR1ZiSUc1aGJXVWdYU0I4ZkNCcVVYVmxjbmt1Wm1sdVpDNWhkSFJ5TzF4dVhHNWNkR0YwZEhKSVlXNWtiR1ZiSUc1aGJXVWdYU0E5SUdaMWJtTjBhVzl1S0NCbGJHVnRMQ0J1WVcxbExDQnBjMWhOVENBcElIdGNibHgwWEhSMllYSWdjbVYwTENCb1lXNWtiR1VzWEc1Y2RGeDBYSFJzYjNkbGNtTmhjMlZPWVcxbElEMGdibUZ0WlM1MGIweHZkMlZ5UTJGelpTZ3BPMXh1WEc1Y2RGeDBhV1lnS0NBaGFYTllUVXdnS1NCN1hHNWNibHgwWEhSY2RDOHZJRUYyYjJsa0lHRnVJR2x1Wm1sdWFYUmxJR3h2YjNBZ1lua2dkR1Z0Y0c5eVlYSnBiSGtnY21WdGIzWnBibWNnZEdocGN5Qm1kVzVqZEdsdmJpQm1jbTl0SUhSb1pTQm5aWFIwWlhKY2JseDBYSFJjZEdoaGJtUnNaU0E5SUdGMGRISklZVzVrYkdWYklHeHZkMlZ5WTJGelpVNWhiV1VnWFR0Y2JseDBYSFJjZEdGMGRISklZVzVrYkdWYklHeHZkMlZ5WTJGelpVNWhiV1VnWFNBOUlISmxkRHRjYmx4MFhIUmNkSEpsZENBOUlHZGxkSFJsY2lnZ1pXeGxiU3dnYm1GdFpTd2dhWE5ZVFV3Z0tTQWhQU0J1ZFd4c0lEOWNibHgwWEhSY2RGeDBiRzkzWlhKallYTmxUbUZ0WlNBNlhHNWNkRngwWEhSY2RHNTFiR3c3WEc1Y2RGeDBYSFJoZEhSeVNHRnVaR3hsV3lCc2IzZGxjbU5oYzJWT1lXMWxJRjBnUFNCb1lXNWtiR1U3WEc1Y2RGeDBmVnh1WEhSY2RISmxkSFZ5YmlCeVpYUTdYRzVjZEgwN1hHNTlJQ2s3WEc1Y2JseHVYRzVjYm5aaGNpQnlabTlqZFhOaFlteGxJRDBnTDE0b1B6cHBibkIxZEh4elpXeGxZM1I4ZEdWNGRHRnlaV0Y4WW5WMGRHOXVLU1F2YVN4Y2JseDBjbU5zYVdOcllXSnNaU0E5SUM5ZUtEODZZWHhoY21WaEtTUXZhVHRjYmx4dWFsRjFaWEo1TG1adUxtVjRkR1Z1WkNnZ2UxeHVYSFJ3Y205d09pQm1kVzVqZEdsdmJpZ2dibUZ0WlN3Z2RtRnNkV1VnS1NCN1hHNWNkRngwY21WMGRYSnVJR0ZqWTJWemN5Z2dkR2hwY3l3Z2FsRjFaWEo1TG5CeWIzQXNJRzVoYldVc0lIWmhiSFZsTENCaGNtZDFiV1Z1ZEhNdWJHVnVaM1JvSUQ0Z01TQXBPMXh1WEhSOUxGeHVYRzVjZEhKbGJXOTJaVkJ5YjNBNklHWjFibU4wYVc5dUtDQnVZVzFsSUNrZ2UxeHVYSFJjZEhKbGRIVnliaUIwYUdsekxtVmhZMmdvSUdaMWJtTjBhVzl1S0NrZ2UxeHVYSFJjZEZ4MFpHVnNaWFJsSUhSb2FYTmJJR3BSZFdWeWVTNXdjbTl3Um1sNFd5QnVZVzFsSUYwZ2ZId2dibUZ0WlNCZE8xeHVYSFJjZEgwZ0tUdGNibHgwZlZ4dWZTQXBPMXh1WEc1cVVYVmxjbmt1WlhoMFpXNWtLQ0I3WEc1Y2RIQnliM0E2SUdaMWJtTjBhVzl1S0NCbGJHVnRMQ0J1WVcxbExDQjJZV3gxWlNBcElIdGNibHgwWEhSMllYSWdjbVYwTENCb2IyOXJjeXhjYmx4MFhIUmNkRzVVZVhCbElEMGdaV3hsYlM1dWIyUmxWSGx3WlR0Y2JseHVYSFJjZEM4dklFUnZiaWQwSUdkbGRDOXpaWFFnY0hKdmNHVnlkR2xsY3lCdmJpQjBaWGgwTENCamIyMXRaVzUwSUdGdVpDQmhkSFJ5YVdKMWRHVWdibTlrWlhOY2JseDBYSFJwWmlBb0lHNVVlWEJsSUQwOVBTQXpJSHg4SUc1VWVYQmxJRDA5UFNBNElIeDhJRzVVZVhCbElEMDlQU0F5SUNrZ2UxeHVYSFJjZEZ4MGNtVjBkWEp1TzF4dVhIUmNkSDFjYmx4dVhIUmNkR2xtSUNnZ2JsUjVjR1VnSVQwOUlERWdmSHdnSVdwUmRXVnllUzVwYzFoTlRFUnZZeWdnWld4bGJTQXBJQ2tnZTF4dVhHNWNkRngwWEhRdkx5QkdhWGdnYm1GdFpTQmhibVFnWVhSMFlXTm9JR2h2YjJ0elhHNWNkRngwWEhSdVlXMWxJRDBnYWxGMVpYSjVMbkJ5YjNCR2FYaGJJRzVoYldVZ1hTQjhmQ0J1WVcxbE8xeHVYSFJjZEZ4MGFHOXZhM01nUFNCcVVYVmxjbmt1Y0hKdmNFaHZiMnR6V3lCdVlXMWxJRjA3WEc1Y2RGeDBmVnh1WEc1Y2RGeDBhV1lnS0NCMllXeDFaU0FoUFQwZ2RXNWtaV1pwYm1Wa0lDa2dlMXh1WEhSY2RGeDBhV1lnS0NCb2IyOXJjeUFtSmlCY0luTmxkRndpSUdsdUlHaHZiMnR6SUNZbVhHNWNkRngwWEhSY2RDZ2djbVYwSUQwZ2FHOXZhM011YzJWMEtDQmxiR1Z0TENCMllXeDFaU3dnYm1GdFpTQXBJQ2tnSVQwOUlIVnVaR1ZtYVc1bFpDQXBJSHRjYmx4MFhIUmNkRngwY21WMGRYSnVJSEpsZER0Y2JseDBYSFJjZEgxY2JseHVYSFJjZEZ4MGNtVjBkWEp1SUNnZ1pXeGxiVnNnYm1GdFpTQmRJRDBnZG1Gc2RXVWdLVHRjYmx4MFhIUjlYRzVjYmx4MFhIUnBaaUFvSUdodmIydHpJQ1ltSUZ3aVoyVjBYQ0lnYVc0Z2FHOXZhM01nSmlZZ0tDQnlaWFFnUFNCb2IyOXJjeTVuWlhRb0lHVnNaVzBzSUc1aGJXVWdLU0FwSUNFOVBTQnVkV3hzSUNrZ2UxeHVYSFJjZEZ4MGNtVjBkWEp1SUhKbGREdGNibHgwWEhSOVhHNWNibHgwWEhSeVpYUjFjbTRnWld4bGJWc2dibUZ0WlNCZE8xeHVYSFI5TEZ4dVhHNWNkSEJ5YjNCSWIyOXJjem9nZTF4dVhIUmNkSFJoWWtsdVpHVjRPaUI3WEc1Y2RGeDBYSFJuWlhRNklHWjFibU4wYVc5dUtDQmxiR1Z0SUNrZ2UxeHVYRzVjZEZ4MFhIUmNkQzh2SUZOMWNIQnZjblE2SUVsRklEdzlPU0F0SURFeElHOXViSGxjYmx4MFhIUmNkRngwTHk4Z1pXeGxiUzUwWVdKSmJtUmxlQ0JrYjJWemJpZDBJR0ZzZDJGNWN5QnlaWFIxY200Z2RHaGxYRzVjZEZ4MFhIUmNkQzh2SUdOdmNuSmxZM1FnZG1Gc2RXVWdkMmhsYmlCcGRDQm9ZWE51SjNRZ1ltVmxiaUJsZUhCc2FXTnBkR3g1SUhObGRGeHVYSFJjZEZ4MFhIUXZMeUJWYzJVZ2NISnZjR1Z5SUdGMGRISnBZblYwWlNCeVpYUnlhV1YyWVd3Z0tIUnlZV010TVRJd056SXBYRzVjZEZ4MFhIUmNkSFpoY2lCMFlXSnBibVJsZUNBOUlHcFJkV1Z5ZVM1bWFXNWtMbUYwZEhJb0lHVnNaVzBzSUZ3aWRHRmlhVzVrWlhoY0lpQXBPMXh1WEc1Y2RGeDBYSFJjZEdsbUlDZ2dkR0ZpYVc1a1pYZ2dLU0I3WEc1Y2RGeDBYSFJjZEZ4MGNtVjBkWEp1SUhCaGNuTmxTVzUwS0NCMFlXSnBibVJsZUN3Z01UQWdLVHRjYmx4MFhIUmNkRngwZlZ4dVhHNWNkRngwWEhSY2RHbG1JQ2hjYmx4MFhIUmNkRngwWEhSeVptOWpkWE5oWW14bExuUmxjM1FvSUdWc1pXMHVibTlrWlU1aGJXVWdLU0I4ZkZ4dVhIUmNkRngwWEhSY2RISmpiR2xqYTJGaWJHVXVkR1Z6ZENnZ1pXeGxiUzV1YjJSbFRtRnRaU0FwSUNZbVhHNWNkRngwWEhSY2RGeDBaV3hsYlM1b2NtVm1YRzVjZEZ4MFhIUmNkQ2tnZTF4dVhIUmNkRngwWEhSY2RISmxkSFZ5YmlBd08xeHVYSFJjZEZ4MFhIUjlYRzVjYmx4MFhIUmNkRngwY21WMGRYSnVJQzB4TzF4dVhIUmNkRngwZlZ4dVhIUmNkSDFjYmx4MGZTeGNibHh1WEhSd2NtOXdSbWw0T2lCN1hHNWNkRngwWENKbWIzSmNJam9nWENKb2RHMXNSbTl5WENJc1hHNWNkRngwWENKamJHRnpjMXdpT2lCY0ltTnNZWE56VG1GdFpWd2lYRzVjZEgxY2JuMGdLVHRjYmx4dUx5OGdVM1Z3Y0c5eWREb2dTVVVnUEQweE1TQnZibXg1WEc0dkx5QkJZMk5sYzNOcGJtY2dkR2hsSUhObGJHVmpkR1ZrU1c1a1pYZ2djSEp2Y0dWeWRIbGNiaTh2SUdadmNtTmxjeUIwYUdVZ1luSnZkM05sY2lCMGJ5QnlaWE53WldOMElITmxkSFJwYm1jZ2MyVnNaV04wWldSY2JpOHZJRzl1SUhSb1pTQnZjSFJwYjI1Y2JpOHZJRlJvWlNCblpYUjBaWElnWlc1emRYSmxjeUJoSUdSbFptRjFiSFFnYjNCMGFXOXVJR2x6SUhObGJHVmpkR1ZrWEc0dkx5QjNhR1Z1SUdsdUlHRnVJRzl3ZEdkeWIzVndYRzR2THlCbGMyeHBiblFnY25Wc1pTQmNJbTV2TFhWdWRYTmxaQzFsZUhCeVpYTnphVzl1YzF3aUlHbHpJR1JwYzJGaWJHVmtJR1p2Y2lCMGFHbHpJR052WkdWY2JpOHZJSE5wYm1ObElHbDBJR052Ym5OcFpHVnljeUJ6ZFdOb0lHRmpZMlZ6YzJsdmJuTWdibTl2Y0Z4dWFXWWdLQ0FoYzNWd2NHOXlkQzV2Y0hSVFpXeGxZM1JsWkNBcElIdGNibHgwYWxGMVpYSjVMbkJ5YjNCSWIyOXJjeTV6Wld4bFkzUmxaQ0E5SUh0Y2JseDBYSFJuWlhRNklHWjFibU4wYVc5dUtDQmxiR1Z0SUNrZ2UxeHVYRzVjZEZ4MFhIUXZLaUJsYzJ4cGJuUWdibTh0ZFc1MWMyVmtMV1Y0Y0hKbGMzTnBiMjV6T2lCY0ltOW1abHdpSUNvdlhHNWNibHgwWEhSY2RIWmhjaUJ3WVhKbGJuUWdQU0JsYkdWdExuQmhjbVZ1ZEU1dlpHVTdYRzVjZEZ4MFhIUnBaaUFvSUhCaGNtVnVkQ0FtSmlCd1lYSmxiblF1Y0dGeVpXNTBUbTlrWlNBcElIdGNibHgwWEhSY2RGeDBjR0Z5Wlc1MExuQmhjbVZ1ZEU1dlpHVXVjMlZzWldOMFpXUkpibVJsZUR0Y2JseDBYSFJjZEgxY2JseDBYSFJjZEhKbGRIVnliaUJ1ZFd4c08xeHVYSFJjZEgwc1hHNWNkRngwYzJWME9pQm1kVzVqZEdsdmJpZ2daV3hsYlNBcElIdGNibHh1WEhSY2RGeDBMeW9nWlhOc2FXNTBJRzV2TFhWdWRYTmxaQzFsZUhCeVpYTnphVzl1Y3pvZ1hDSnZabVpjSWlBcUwxeHVYRzVjZEZ4MFhIUjJZWElnY0dGeVpXNTBJRDBnWld4bGJTNXdZWEpsYm5ST2IyUmxPMXh1WEhSY2RGeDBhV1lnS0NCd1lYSmxiblFnS1NCN1hHNWNkRngwWEhSY2RIQmhjbVZ1ZEM1elpXeGxZM1JsWkVsdVpHVjRPMXh1WEc1Y2RGeDBYSFJjZEdsbUlDZ2djR0Z5Wlc1MExuQmhjbVZ1ZEU1dlpHVWdLU0I3WEc1Y2RGeDBYSFJjZEZ4MGNHRnlaVzUwTG5CaGNtVnVkRTV2WkdVdWMyVnNaV04wWldSSmJtUmxlRHRjYmx4MFhIUmNkRngwZlZ4dVhIUmNkRngwZlZ4dVhIUmNkSDFjYmx4MGZUdGNibjFjYmx4dWFsRjFaWEo1TG1WaFkyZ29JRnRjYmx4MFhDSjBZV0pKYm1SbGVGd2lMRnh1WEhSY0luSmxZV1JQYm14NVhDSXNYRzVjZEZ3aWJXRjRUR1Z1WjNSb1hDSXNYRzVjZEZ3aVkyVnNiRk53WVdOcGJtZGNJaXhjYmx4MFhDSmpaV3hzVUdGa1pHbHVaMXdpTEZ4dVhIUmNJbkp2ZDFOd1lXNWNJaXhjYmx4MFhDSmpiMnhUY0dGdVhDSXNYRzVjZEZ3aWRYTmxUV0Z3WENJc1hHNWNkRndpWm5KaGJXVkNiM0prWlhKY0lpeGNibHgwWENKamIyNTBaVzUwUldScGRHRmliR1ZjSWx4dVhTd2dablZ1WTNScGIyNG9LU0I3WEc1Y2RHcFJkV1Z5ZVM1d2NtOXdSbWw0V3lCMGFHbHpMblJ2VEc5M1pYSkRZWE5sS0NrZ1hTQTlJSFJvYVhNN1hHNTlJQ2s3WEc1Y2JseHVYRzVjYmx4MEx5OGdVM1J5YVhBZ1lXNWtJR052Ykd4aGNITmxJSGRvYVhSbGMzQmhZMlVnWVdOamIzSmthVzVuSUhSdklFaFVUVXdnYzNCbFkxeHVYSFF2THlCb2RIUndjem92TDJsdVpuSmhMbk53WldNdWQyaGhkSGRuTG05eVp5OGpjM1J5YVhBdFlXNWtMV052Ykd4aGNITmxMV0Z6WTJscExYZG9hWFJsYzNCaFkyVmNibHgwWm5WdVkzUnBiMjRnYzNSeWFYQkJibVJEYjJ4c1lYQnpaU2dnZG1Gc2RXVWdLU0I3WEc1Y2RGeDBkbUZ5SUhSdmEyVnVjeUE5SUhaaGJIVmxMbTFoZEdOb0tDQnlibTkwYUhSdGJIZG9hWFJsSUNrZ2ZId2dXMTA3WEc1Y2RGeDBjbVYwZFhKdUlIUnZhMlZ1Y3k1cWIybHVLQ0JjSWlCY0lpQXBPMXh1WEhSOVhHNWNibHh1Wm5WdVkzUnBiMjRnWjJWMFEyeGhjM01vSUdWc1pXMGdLU0I3WEc1Y2RISmxkSFZ5YmlCbGJHVnRMbWRsZEVGMGRISnBZblYwWlNBbUppQmxiR1Z0TG1kbGRFRjBkSEpwWW5WMFpTZ2dYQ0pqYkdGemMxd2lJQ2tnZkh3Z1hDSmNJanRjYm4xY2JseHVablZ1WTNScGIyNGdZMnhoYzNObGMxUnZRWEp5WVhrb0lIWmhiSFZsSUNrZ2UxeHVYSFJwWmlBb0lFRnljbUY1TG1selFYSnlZWGtvSUhaaGJIVmxJQ2tnS1NCN1hHNWNkRngwY21WMGRYSnVJSFpoYkhWbE8xeHVYSFI5WEc1Y2RHbG1JQ2dnZEhsd1pXOW1JSFpoYkhWbElEMDlQU0JjSW5OMGNtbHVaMXdpSUNrZ2UxeHVYSFJjZEhKbGRIVnliaUIyWVd4MVpTNXRZWFJqYUNnZ2NtNXZkR2gwYld4M2FHbDBaU0FwSUh4OElGdGRPMXh1WEhSOVhHNWNkSEpsZEhWeWJpQmJYVHRjYm4xY2JseHVhbEYxWlhKNUxtWnVMbVY0ZEdWdVpDZ2dlMXh1WEhSaFpHUkRiR0Z6Y3pvZ1puVnVZM1JwYjI0b0lIWmhiSFZsSUNrZ2UxeHVYSFJjZEhaaGNpQmpiR0Z6YzA1aGJXVnpMQ0JqZFhJc0lHTjFjbFpoYkhWbExDQmpiR0Z6YzA1aGJXVXNJR2tzSUdacGJtRnNWbUZzZFdVN1hHNWNibHgwWEhScFppQW9JR2x6Um5WdVkzUnBiMjRvSUhaaGJIVmxJQ2tnS1NCN1hHNWNkRngwWEhSeVpYUjFjbTRnZEdocGN5NWxZV05vS0NCbWRXNWpkR2x2YmlnZ2FpQXBJSHRjYmx4MFhIUmNkRngwYWxGMVpYSjVLQ0IwYUdseklDa3VZV1JrUTJ4aGMzTW9JSFpoYkhWbExtTmhiR3dvSUhSb2FYTXNJR29zSUdkbGRFTnNZWE56S0NCMGFHbHpJQ2tnS1NBcE8xeHVYSFJjZEZ4MGZTQXBPMXh1WEhSY2RIMWNibHh1WEhSY2RHTnNZWE56VG1GdFpYTWdQU0JqYkdGemMyVnpWRzlCY25KaGVTZ2dkbUZzZFdVZ0tUdGNibHh1WEhSY2RHbG1JQ2dnWTJ4aGMzTk9ZVzFsY3k1c1pXNW5kR2dnS1NCN1hHNWNkRngwWEhSeVpYUjFjbTRnZEdocGN5NWxZV05vS0NCbWRXNWpkR2x2YmlncElIdGNibHgwWEhSY2RGeDBZM1Z5Vm1Gc2RXVWdQU0JuWlhSRGJHRnpjeWdnZEdocGN5QXBPMXh1WEhSY2RGeDBYSFJqZFhJZ1BTQjBhR2x6TG01dlpHVlVlWEJsSUQwOVBTQXhJQ1ltSUNnZ1hDSWdYQ0lnS3lCemRISnBjRUZ1WkVOdmJHeGhjSE5sS0NCamRYSldZV3gxWlNBcElDc2dYQ0lnWENJZ0tUdGNibHh1WEhSY2RGeDBYSFJwWmlBb0lHTjFjaUFwSUh0Y2JseDBYSFJjZEZ4MFhIUm1iM0lnS0NCcElEMGdNRHNnYVNBOElHTnNZWE56VG1GdFpYTXViR1Z1WjNSb095QnBLeXNnS1NCN1hHNWNkRngwWEhSY2RGeDBYSFJqYkdGemMwNWhiV1VnUFNCamJHRnpjMDVoYldWeld5QnBJRjA3WEc1Y2RGeDBYSFJjZEZ4MFhIUnBaaUFvSUdOMWNpNXBibVJsZUU5bUtDQmNJaUJjSWlBcklHTnNZWE56VG1GdFpTQXJJRndpSUZ3aUlDa2dQQ0F3SUNrZ2UxeHVYSFJjZEZ4MFhIUmNkRngwWEhSamRYSWdLejBnWTJ4aGMzTk9ZVzFsSUNzZ1hDSWdYQ0k3WEc1Y2RGeDBYSFJjZEZ4MFhIUjlYRzVjZEZ4MFhIUmNkRngwZlZ4dVhHNWNkRngwWEhSY2RGeDBMeThnVDI1c2VTQmhjM05wWjI0Z2FXWWdaR2xtWm1WeVpXNTBJSFJ2SUdGMmIybGtJSFZ1Ym1WbFpHVmtJSEpsYm1SbGNtbHVaeTVjYmx4MFhIUmNkRngwWEhSbWFXNWhiRlpoYkhWbElEMGdjM1J5YVhCQmJtUkRiMnhzWVhCelpTZ2dZM1Z5SUNrN1hHNWNkRngwWEhSY2RGeDBhV1lnS0NCamRYSldZV3gxWlNBaFBUMGdabWx1WVd4V1lXeDFaU0FwSUh0Y2JseDBYSFJjZEZ4MFhIUmNkSFJvYVhNdWMyVjBRWFIwY21saWRYUmxLQ0JjSW1Oc1lYTnpYQ0lzSUdacGJtRnNWbUZzZFdVZ0tUdGNibHgwWEhSY2RGeDBYSFI5WEc1Y2RGeDBYSFJjZEgxY2JseDBYSFJjZEgwZ0tUdGNibHgwWEhSOVhHNWNibHgwWEhSeVpYUjFjbTRnZEdocGN6dGNibHgwZlN4Y2JseHVYSFJ5WlcxdmRtVkRiR0Z6Y3pvZ1puVnVZM1JwYjI0b0lIWmhiSFZsSUNrZ2UxeHVYSFJjZEhaaGNpQmpiR0Z6YzA1aGJXVnpMQ0JqZFhJc0lHTjFjbFpoYkhWbExDQmpiR0Z6YzA1aGJXVXNJR2tzSUdacGJtRnNWbUZzZFdVN1hHNWNibHgwWEhScFppQW9JR2x6Um5WdVkzUnBiMjRvSUhaaGJIVmxJQ2tnS1NCN1hHNWNkRngwWEhSeVpYUjFjbTRnZEdocGN5NWxZV05vS0NCbWRXNWpkR2x2YmlnZ2FpQXBJSHRjYmx4MFhIUmNkRngwYWxGMVpYSjVLQ0IwYUdseklDa3VjbVZ0YjNabFEyeGhjM01vSUhaaGJIVmxMbU5oYkd3b0lIUm9hWE1zSUdvc0lHZGxkRU5zWVhOektDQjBhR2x6SUNrZ0tTQXBPMXh1WEhSY2RGeDBmU0FwTzF4dVhIUmNkSDFjYmx4dVhIUmNkR2xtSUNnZ0lXRnlaM1Z0Wlc1MGN5NXNaVzVuZEdnZ0tTQjdYRzVjZEZ4MFhIUnlaWFIxY200Z2RHaHBjeTVoZEhSeUtDQmNJbU5zWVhOelhDSXNJRndpWENJZ0tUdGNibHgwWEhSOVhHNWNibHgwWEhSamJHRnpjMDVoYldWeklEMGdZMnhoYzNObGMxUnZRWEp5WVhrb0lIWmhiSFZsSUNrN1hHNWNibHgwWEhScFppQW9JR05zWVhOelRtRnRaWE11YkdWdVozUm9JQ2tnZTF4dVhIUmNkRngwY21WMGRYSnVJSFJvYVhNdVpXRmphQ2dnWm5WdVkzUnBiMjRvS1NCN1hHNWNkRngwWEhSY2RHTjFjbFpoYkhWbElEMGdaMlYwUTJ4aGMzTW9JSFJvYVhNZ0tUdGNibHh1WEhSY2RGeDBYSFF2THlCVWFHbHpJR1Y0Y0hKbGMzTnBiMjRnYVhNZ2FHVnlaU0JtYjNJZ1ltVjBkR1Z5SUdOdmJYQnlaWE56YVdKcGJHbDBlU0FvYzJWbElHRmtaRU5zWVhOektWeHVYSFJjZEZ4MFhIUmpkWElnUFNCMGFHbHpMbTV2WkdWVWVYQmxJRDA5UFNBeElDWW1JQ2dnWENJZ1hDSWdLeUJ6ZEhKcGNFRnVaRU52Ykd4aGNITmxLQ0JqZFhKV1lXeDFaU0FwSUNzZ1hDSWdYQ0lnS1R0Y2JseHVYSFJjZEZ4MFhIUnBaaUFvSUdOMWNpQXBJSHRjYmx4MFhIUmNkRngwWEhSbWIzSWdLQ0JwSUQwZ01Ec2dhU0E4SUdOc1lYTnpUbUZ0WlhNdWJHVnVaM1JvT3lCcEt5c2dLU0I3WEc1Y2RGeDBYSFJjZEZ4MFhIUmpiR0Z6YzA1aGJXVWdQU0JqYkdGemMwNWhiV1Z6V3lCcElGMDdYRzVjYmx4MFhIUmNkRngwWEhSY2RDOHZJRkpsYlc5MlpTQXFZV3hzS2lCcGJuTjBZVzVqWlhOY2JseDBYSFJjZEZ4MFhIUmNkSGRvYVd4bElDZ2dZM1Z5TG1sdVpHVjRUMllvSUZ3aUlGd2lJQ3NnWTJ4aGMzTk9ZVzFsSUNzZ1hDSWdYQ0lnS1NBK0lDMHhJQ2tnZTF4dVhIUmNkRngwWEhSY2RGeDBYSFJqZFhJZ1BTQmpkWEl1Y21Wd2JHRmpaU2dnWENJZ1hDSWdLeUJqYkdGemMwNWhiV1VnS3lCY0lpQmNJaXdnWENJZ1hDSWdLVHRjYmx4MFhIUmNkRngwWEhSY2RIMWNibHgwWEhSY2RGeDBYSFI5WEc1Y2JseDBYSFJjZEZ4MFhIUXZMeUJQYm14NUlHRnpjMmxuYmlCcFppQmthV1ptWlhKbGJuUWdkRzhnWVhadmFXUWdkVzV1WldWa1pXUWdjbVZ1WkdWeWFXNW5MbHh1WEhSY2RGeDBYSFJjZEdacGJtRnNWbUZzZFdVZ1BTQnpkSEpwY0VGdVpFTnZiR3hoY0hObEtDQmpkWElnS1R0Y2JseDBYSFJjZEZ4MFhIUnBaaUFvSUdOMWNsWmhiSFZsSUNFOVBTQm1hVzVoYkZaaGJIVmxJQ2tnZTF4dVhIUmNkRngwWEhSY2RGeDBkR2hwY3k1elpYUkJkSFJ5YVdKMWRHVW9JRndpWTJ4aGMzTmNJaXdnWm1sdVlXeFdZV3gxWlNBcE8xeHVYSFJjZEZ4MFhIUmNkSDFjYmx4MFhIUmNkRngwZlZ4dVhIUmNkRngwZlNBcE8xeHVYSFJjZEgxY2JseHVYSFJjZEhKbGRIVnliaUIwYUdsek8xeHVYSFI5TEZ4dVhHNWNkSFJ2WjJkc1pVTnNZWE56T2lCbWRXNWpkR2x2YmlnZ2RtRnNkV1VzSUhOMFlYUmxWbUZzSUNrZ2UxeHVYSFJjZEhaaGNpQmpiR0Z6YzA1aGJXVnpMQ0JqYkdGemMwNWhiV1VzSUdrc0lITmxiR1lzWEc1Y2RGeDBYSFIwZVhCbElEMGdkSGx3Wlc5bUlIWmhiSFZsTEZ4dVhIUmNkRngwYVhOV1lXeHBaRlpoYkhWbElEMGdkSGx3WlNBOVBUMGdYQ0p6ZEhKcGJtZGNJaUI4ZkNCQmNuSmhlUzVwYzBGeWNtRjVLQ0IyWVd4MVpTQXBPMXh1WEc1Y2RGeDBhV1lnS0NCcGMwWjFibU4wYVc5dUtDQjJZV3gxWlNBcElDa2dlMXh1WEhSY2RGeDBjbVYwZFhKdUlIUm9hWE11WldGamFDZ2dablZ1WTNScGIyNG9JR2tnS1NCN1hHNWNkRngwWEhSY2RHcFJkV1Z5ZVNnZ2RHaHBjeUFwTG5SdloyZHNaVU5zWVhOektGeHVYSFJjZEZ4MFhIUmNkSFpoYkhWbExtTmhiR3dvSUhSb2FYTXNJR2tzSUdkbGRFTnNZWE56S0NCMGFHbHpJQ2tzSUhOMFlYUmxWbUZzSUNrc1hHNWNkRngwWEhSY2RGeDBjM1JoZEdWV1lXeGNibHgwWEhSY2RGeDBLVHRjYmx4MFhIUmNkSDBnS1R0Y2JseDBYSFI5WEc1Y2JseDBYSFJwWmlBb0lIUjVjR1Z2WmlCemRHRjBaVlpoYkNBOVBUMGdYQ0ppYjI5c1pXRnVYQ0lnSmlZZ2FYTldZV3hwWkZaaGJIVmxJQ2tnZTF4dVhIUmNkRngwY21WMGRYSnVJSE4wWVhSbFZtRnNJRDhnZEdocGN5NWhaR1JEYkdGemN5Z2dkbUZzZFdVZ0tTQTZJSFJvYVhNdWNtVnRiM1psUTJ4aGMzTW9JSFpoYkhWbElDazdYRzVjZEZ4MGZWeHVYRzVjZEZ4MFkyeGhjM05PWVcxbGN5QTlJR05zWVhOelpYTlViMEZ5Y21GNUtDQjJZV3gxWlNBcE8xeHVYRzVjZEZ4MGNtVjBkWEp1SUhSb2FYTXVaV0ZqYUNnZ1puVnVZM1JwYjI0b0tTQjdYRzVjZEZ4MFhIUnBaaUFvSUdselZtRnNhV1JXWVd4MVpTQXBJSHRjYmx4dVhIUmNkRngwWEhRdkx5QlViMmRuYkdVZ2FXNWthWFpwWkhWaGJDQmpiR0Z6Y3lCdVlXMWxjMXh1WEhSY2RGeDBYSFJ6Wld4bUlEMGdhbEYxWlhKNUtDQjBhR2x6SUNrN1hHNWNibHgwWEhSY2RGeDBabTl5SUNnZ2FTQTlJREE3SUdrZ1BDQmpiR0Z6YzA1aGJXVnpMbXhsYm1kMGFEc2dhU3NySUNrZ2UxeHVYSFJjZEZ4MFhIUmNkR05zWVhOelRtRnRaU0E5SUdOc1lYTnpUbUZ0WlhOYklHa2dYVHRjYmx4dVhIUmNkRngwWEhSY2RDOHZJRU5vWldOcklHVmhZMmdnWTJ4aGMzTk9ZVzFsSUdkcGRtVnVMQ0J6Y0dGalpTQnpaWEJoY21GMFpXUWdiR2x6ZEZ4dVhIUmNkRngwWEhSY2RHbG1JQ2dnYzJWc1ppNW9ZWE5EYkdGemN5Z2dZMnhoYzNOT1lXMWxJQ2tnS1NCN1hHNWNkRngwWEhSY2RGeDBYSFJ6Wld4bUxuSmxiVzkyWlVOc1lYTnpLQ0JqYkdGemMwNWhiV1VnS1R0Y2JseDBYSFJjZEZ4MFhIUjlJR1ZzYzJVZ2UxeHVYSFJjZEZ4MFhIUmNkRngwYzJWc1ppNWhaR1JEYkdGemN5Z2dZMnhoYzNOT1lXMWxJQ2s3WEc1Y2RGeDBYSFJjZEZ4MGZWeHVYSFJjZEZ4MFhIUjlYRzVjYmx4MFhIUmNkQzh2SUZSdloyZHNaU0IzYUc5c1pTQmpiR0Z6Y3lCdVlXMWxYRzVjZEZ4MFhIUjlJR1ZzYzJVZ2FXWWdLQ0IyWVd4MVpTQTlQVDBnZFc1a1pXWnBibVZrSUh4OElIUjVjR1VnUFQwOUlGd2lZbTl2YkdWaGJsd2lJQ2tnZTF4dVhIUmNkRngwWEhSamJHRnpjMDVoYldVZ1BTQm5aWFJEYkdGemN5Z2dkR2hwY3lBcE8xeHVYSFJjZEZ4MFhIUnBaaUFvSUdOc1lYTnpUbUZ0WlNBcElIdGNibHh1WEhSY2RGeDBYSFJjZEM4dklGTjBiM0psSUdOc1lYTnpUbUZ0WlNCcFppQnpaWFJjYmx4MFhIUmNkRngwWEhSa1lYUmhVSEpwZGk1elpYUW9JSFJvYVhNc0lGd2lYMTlqYkdGemMwNWhiV1ZmWDF3aUxDQmpiR0Z6YzA1aGJXVWdLVHRjYmx4MFhIUmNkRngwZlZ4dVhHNWNkRngwWEhSY2RDOHZJRWxtSUhSb1pTQmxiR1Z0Wlc1MElHaGhjeUJoSUdOc1lYTnpJRzVoYldVZ2IzSWdhV1lnZDJVbmNtVWdjR0Z6YzJWa0lHQm1ZV3h6WldBc1hHNWNkRngwWEhSY2RDOHZJSFJvWlc0Z2NtVnRiM1psSUhSb1pTQjNhRzlzWlNCamJHRnpjMjVoYldVZ0tHbG1JSFJvWlhKbElIZGhjeUJ2Ym1Vc0lIUm9aU0JoWW05MlpTQnpZWFpsWkNCcGRDa3VYRzVjZEZ4MFhIUmNkQzh2SUU5MGFHVnlkMmx6WlNCaWNtbHVaeUJpWVdOcklIZG9ZWFJsZG1WeUlIZGhjeUJ3Y21WMmFXOTFjMng1SUhOaGRtVmtJQ2hwWmlCaGJubDBhR2x1Wnlrc1hHNWNkRngwWEhSY2RDOHZJR1poYkd4cGJtY2dZbUZqYXlCMGJ5QjBhR1VnWlcxd2RIa2djM1J5YVc1bklHbG1JRzV2ZEdocGJtY2dkMkZ6SUhOMGIzSmxaQzVjYmx4MFhIUmNkRngwYVdZZ0tDQjBhR2x6TG5ObGRFRjBkSEpwWW5WMFpTQXBJSHRjYmx4MFhIUmNkRngwWEhSMGFHbHpMbk5sZEVGMGRISnBZblYwWlNnZ1hDSmpiR0Z6YzF3aUxGeHVYSFJjZEZ4MFhIUmNkRngwWTJ4aGMzTk9ZVzFsSUh4OElIWmhiSFZsSUQwOVBTQm1ZV3h6WlNBL1hHNWNkRngwWEhSY2RGeDBYSFJjZEZ3aVhDSWdPbHh1WEhSY2RGeDBYSFJjZEZ4MFhIUmtZWFJoVUhKcGRpNW5aWFFvSUhSb2FYTXNJRndpWDE5amJHRnpjMDVoYldWZlgxd2lJQ2tnZkh3Z1hDSmNJbHh1WEhSY2RGeDBYSFJjZENrN1hHNWNkRngwWEhSY2RIMWNibHgwWEhSY2RIMWNibHgwWEhSOUlDazdYRzVjZEgwc1hHNWNibHgwYUdGelEyeGhjM002SUdaMWJtTjBhVzl1S0NCelpXeGxZM1J2Y2lBcElIdGNibHgwWEhSMllYSWdZMnhoYzNOT1lXMWxMQ0JsYkdWdExGeHVYSFJjZEZ4MGFTQTlJREE3WEc1Y2JseDBYSFJqYkdGemMwNWhiV1VnUFNCY0lpQmNJaUFySUhObGJHVmpkRzl5SUNzZ1hDSWdYQ0k3WEc1Y2RGeDBkMmhwYkdVZ0tDQW9JR1ZzWlcwZ1BTQjBhR2x6V3lCcEt5c2dYU0FwSUNrZ2UxeHVYSFJjZEZ4MGFXWWdLQ0JsYkdWdExtNXZaR1ZVZVhCbElEMDlQU0F4SUNZbVhHNWNkRngwWEhSY2RDZ2dYQ0lnWENJZ0t5QnpkSEpwY0VGdVpFTnZiR3hoY0hObEtDQm5aWFJEYkdGemN5Z2daV3hsYlNBcElDa2dLeUJjSWlCY0lpQXBMbWx1WkdWNFQyWW9JR05zWVhOelRtRnRaU0FwSUQ0Z0xURWdLU0I3WEc1Y2RGeDBYSFJjZEhKbGRIVnliaUIwY25WbE8xeHVYSFJjZEZ4MGZWeHVYSFJjZEgxY2JseHVYSFJjZEhKbGRIVnliaUJtWVd4elpUdGNibHgwZlZ4dWZTQXBPMXh1WEc1Y2JseHVYRzUyWVhJZ2NuSmxkSFZ5YmlBOUlDOWNYSEl2Wnp0Y2JseHVhbEYxWlhKNUxtWnVMbVY0ZEdWdVpDZ2dlMXh1WEhSMllXdzZJR1oxYm1OMGFXOXVLQ0IyWVd4MVpTQXBJSHRjYmx4MFhIUjJZWElnYUc5dmEzTXNJSEpsZEN3Z2RtRnNkV1ZKYzBaMWJtTjBhVzl1TEZ4dVhIUmNkRngwWld4bGJTQTlJSFJvYVhOYklEQWdYVHRjYmx4dVhIUmNkR2xtSUNnZ0lXRnlaM1Z0Wlc1MGN5NXNaVzVuZEdnZ0tTQjdYRzVjZEZ4MFhIUnBaaUFvSUdWc1pXMGdLU0I3WEc1Y2RGeDBYSFJjZEdodmIydHpJRDBnYWxGMVpYSjVMblpoYkVodmIydHpXeUJsYkdWdExuUjVjR1VnWFNCOGZGeHVYSFJjZEZ4MFhIUmNkR3BSZFdWeWVTNTJZV3hJYjI5cmMxc2daV3hsYlM1dWIyUmxUbUZ0WlM1MGIweHZkMlZ5UTJGelpTZ3BJRjA3WEc1Y2JseDBYSFJjZEZ4MGFXWWdLQ0JvYjI5cmN5QW1KbHh1WEhSY2RGeDBYSFJjZEZ3aVoyVjBYQ0lnYVc0Z2FHOXZhM01nSmlaY2JseDBYSFJjZEZ4MFhIUW9JSEpsZENBOUlHaHZiMnR6TG1kbGRDZ2daV3hsYlN3Z1hDSjJZV3gxWlZ3aUlDa2dLU0FoUFQwZ2RXNWtaV1pwYm1Wa1hHNWNkRngwWEhSY2RDa2dlMXh1WEhSY2RGeDBYSFJjZEhKbGRIVnliaUJ5WlhRN1hHNWNkRngwWEhSY2RIMWNibHh1WEhSY2RGeDBYSFJ5WlhRZ1BTQmxiR1Z0TG5aaGJIVmxPMXh1WEc1Y2RGeDBYSFJjZEM4dklFaGhibVJzWlNCdGIzTjBJR052YlcxdmJpQnpkSEpwYm1jZ1kyRnpaWE5jYmx4MFhIUmNkRngwYVdZZ0tDQjBlWEJsYjJZZ2NtVjBJRDA5UFNCY0luTjBjbWx1WjF3aUlDa2dlMXh1WEhSY2RGeDBYSFJjZEhKbGRIVnliaUJ5WlhRdWNtVndiR0ZqWlNnZ2NuSmxkSFZ5Yml3Z1hDSmNJaUFwTzF4dVhIUmNkRngwWEhSOVhHNWNibHgwWEhSY2RGeDBMeThnU0dGdVpHeGxJR05oYzJWeklIZG9aWEpsSUhaaGJIVmxJR2x6SUc1MWJHd3ZkVzVrWldZZ2IzSWdiblZ0WW1WeVhHNWNkRngwWEhSY2RISmxkSFZ5YmlCeVpYUWdQVDBnYm5Wc2JDQS9JRndpWENJZ09pQnlaWFE3WEc1Y2RGeDBYSFI5WEc1Y2JseDBYSFJjZEhKbGRIVnlianRjYmx4MFhIUjlYRzVjYmx4MFhIUjJZV3gxWlVselJuVnVZM1JwYjI0Z1BTQnBjMFoxYm1OMGFXOXVLQ0IyWVd4MVpTQXBPMXh1WEc1Y2RGeDBjbVYwZFhKdUlIUm9hWE11WldGamFDZ2dablZ1WTNScGIyNG9JR2tnS1NCN1hHNWNkRngwWEhSMllYSWdkbUZzTzF4dVhHNWNkRngwWEhScFppQW9JSFJvYVhNdWJtOWtaVlI1Y0dVZ0lUMDlJREVnS1NCN1hHNWNkRngwWEhSY2RISmxkSFZ5Ymp0Y2JseDBYSFJjZEgxY2JseHVYSFJjZEZ4MGFXWWdLQ0IyWVd4MVpVbHpSblZ1WTNScGIyNGdLU0I3WEc1Y2RGeDBYSFJjZEhaaGJDQTlJSFpoYkhWbExtTmhiR3dvSUhSb2FYTXNJR2tzSUdwUmRXVnllU2dnZEdocGN5QXBMblpoYkNncElDazdYRzVjZEZ4MFhIUjlJR1ZzYzJVZ2UxeHVYSFJjZEZ4MFhIUjJZV3dnUFNCMllXeDFaVHRjYmx4MFhIUmNkSDFjYmx4dVhIUmNkRngwTHk4Z1ZISmxZWFFnYm5Wc2JDOTFibVJsWm1sdVpXUWdZWE1nWENKY0lqc2dZMjl1ZG1WeWRDQnVkVzFpWlhKeklIUnZJSE4wY21sdVoxeHVYSFJjZEZ4MGFXWWdLQ0IyWVd3Z1BUMGdiblZzYkNBcElIdGNibHgwWEhSY2RGeDBkbUZzSUQwZ1hDSmNJanRjYmx4dVhIUmNkRngwZlNCbGJITmxJR2xtSUNnZ2RIbHdaVzltSUhaaGJDQTlQVDBnWENKdWRXMWlaWEpjSWlBcElIdGNibHgwWEhSY2RGeDBkbUZzSUNzOUlGd2lYQ0k3WEc1Y2JseDBYSFJjZEgwZ1pXeHpaU0JwWmlBb0lFRnljbUY1TG1selFYSnlZWGtvSUhaaGJDQXBJQ2tnZTF4dVhIUmNkRngwWEhSMllXd2dQU0JxVVhWbGNua3ViV0Z3S0NCMllXd3NJR1oxYm1OMGFXOXVLQ0IyWVd4MVpTQXBJSHRjYmx4MFhIUmNkRngwWEhSeVpYUjFjbTRnZG1Gc2RXVWdQVDBnYm5Wc2JDQS9JRndpWENJZ09pQjJZV3gxWlNBcklGd2lYQ0k3WEc1Y2RGeDBYSFJjZEgwZ0tUdGNibHgwWEhSY2RIMWNibHh1WEhSY2RGeDBhRzl2YTNNZ1BTQnFVWFZsY25rdWRtRnNTRzl2YTNOYklIUm9hWE11ZEhsd1pTQmRJSHg4SUdwUmRXVnllUzUyWVd4SWIyOXJjMXNnZEdocGN5NXViMlJsVG1GdFpTNTBiMHh2ZDJWeVEyRnpaU2dwSUYwN1hHNWNibHgwWEhSY2RDOHZJRWxtSUhObGRDQnlaWFIxY201eklIVnVaR1ZtYVc1bFpDd2dabUZzYkNCaVlXTnJJSFJ2SUc1dmNtMWhiQ0J6WlhSMGFXNW5YRzVjZEZ4MFhIUnBaaUFvSUNGb2IyOXJjeUI4ZkNBaEtDQmNJbk5sZEZ3aUlHbHVJR2h2YjJ0eklDa2dmSHdnYUc5dmEzTXVjMlYwS0NCMGFHbHpMQ0IyWVd3c0lGd2lkbUZzZFdWY0lpQXBJRDA5UFNCMWJtUmxabWx1WldRZ0tTQjdYRzVjZEZ4MFhIUmNkSFJvYVhNdWRtRnNkV1VnUFNCMllXdzdYRzVjZEZ4MFhIUjlYRzVjZEZ4MGZTQXBPMXh1WEhSOVhHNTlJQ2s3WEc1Y2JtcFJkV1Z5ZVM1bGVIUmxibVFvSUh0Y2JseDBkbUZzU0c5dmEzTTZJSHRjYmx4MFhIUnZjSFJwYjI0NklIdGNibHgwWEhSY2RHZGxkRG9nWm5WdVkzUnBiMjRvSUdWc1pXMGdLU0I3WEc1Y2JseDBYSFJjZEZ4MGRtRnlJSFpoYkNBOUlHcFJkV1Z5ZVM1bWFXNWtMbUYwZEhJb0lHVnNaVzBzSUZ3aWRtRnNkV1ZjSWlBcE8xeHVYSFJjZEZ4MFhIUnlaWFIxY200Z2RtRnNJQ0U5SUc1MWJHd2dQMXh1WEhSY2RGeDBYSFJjZEhaaGJDQTZYRzVjYmx4MFhIUmNkRngwWEhRdkx5QlRkWEJ3YjNKME9pQkpSU0E4UFRFd0lDMGdNVEVnYjI1c2VWeHVYSFJjZEZ4MFhIUmNkQzh2SUc5d2RHbHZiaTUwWlhoMElIUm9jbTkzY3lCbGVHTmxjSFJwYjI1eklDaDBjbUZqTFRFME5qZzJMQ0IwY21GakxURTBPRFU0S1Z4dVhIUmNkRngwWEhSY2RDOHZJRk4wY21sd0lHRnVaQ0JqYjJ4c1lYQnpaU0IzYUdsMFpYTndZV05sWEc1Y2RGeDBYSFJjZEZ4MEx5OGdhSFIwY0hNNkx5OW9kRzFzTG5Od1pXTXVkMmhoZEhkbkxtOXlaeThqYzNSeWFYQXRZVzVrTFdOdmJHeGhjSE5sTFhkb2FYUmxjM0JoWTJWY2JseDBYSFJjZEZ4MFhIUnpkSEpwY0VGdVpFTnZiR3hoY0hObEtDQnFVWFZsY25rdWRHVjRkQ2dnWld4bGJTQXBJQ2s3WEc1Y2RGeDBYSFI5WEc1Y2RGeDBmU3hjYmx4MFhIUnpaV3hsWTNRNklIdGNibHgwWEhSY2RHZGxkRG9nWm5WdVkzUnBiMjRvSUdWc1pXMGdLU0I3WEc1Y2RGeDBYSFJjZEhaaGNpQjJZV3gxWlN3Z2IzQjBhVzl1TENCcExGeHVYSFJjZEZ4MFhIUmNkRzl3ZEdsdmJuTWdQU0JsYkdWdExtOXdkR2x2Ym5Nc1hHNWNkRngwWEhSY2RGeDBhVzVrWlhnZ1BTQmxiR1Z0TG5ObGJHVmpkR1ZrU1c1a1pYZ3NYRzVjZEZ4MFhIUmNkRngwYjI1bElEMGdaV3hsYlM1MGVYQmxJRDA5UFNCY0luTmxiR1ZqZEMxdmJtVmNJaXhjYmx4MFhIUmNkRngwWEhSMllXeDFaWE1nUFNCdmJtVWdQeUJ1ZFd4c0lEb2dXMTBzWEc1Y2RGeDBYSFJjZEZ4MGJXRjRJRDBnYjI1bElEOGdhVzVrWlhnZ0t5QXhJRG9nYjNCMGFXOXVjeTVzWlc1bmRHZzdYRzVjYmx4MFhIUmNkRngwYVdZZ0tDQnBibVJsZUNBOElEQWdLU0I3WEc1Y2RGeDBYSFJjZEZ4MGFTQTlJRzFoZUR0Y2JseHVYSFJjZEZ4MFhIUjlJR1ZzYzJVZ2UxeHVYSFJjZEZ4MFhIUmNkR2tnUFNCdmJtVWdQeUJwYm1SbGVDQTZJREE3WEc1Y2RGeDBYSFJjZEgxY2JseHVYSFJjZEZ4MFhIUXZMeUJNYjI5d0lIUm9jbTkxWjJnZ1lXeHNJSFJvWlNCelpXeGxZM1JsWkNCdmNIUnBiMjV6WEc1Y2RGeDBYSFJjZEdadmNpQW9JRHNnYVNBOElHMWhlRHNnYVNzcklDa2dlMXh1WEhSY2RGeDBYSFJjZEc5d2RHbHZiaUE5SUc5d2RHbHZibk5iSUdrZ1hUdGNibHh1WEhSY2RGeDBYSFJjZEM4dklGTjFjSEJ2Y25RNklFbEZJRHc5T1NCdmJteDVYRzVjZEZ4MFhIUmNkRngwTHk4Z1NVVTRMVGtnWkc5bGMyNG5kQ0IxY0dSaGRHVWdjMlZzWldOMFpXUWdZV1owWlhJZ1ptOXliU0J5WlhObGRDQW9kSEpoWXkweU5UVXhLVnh1WEhSY2RGeDBYSFJjZEdsbUlDZ2dLQ0J2Y0hScGIyNHVjMlZzWldOMFpXUWdmSHdnYVNBOVBUMGdhVzVrWlhnZ0tTQW1KbHh1WEc1Y2RGeDBYSFJjZEZ4MFhIUmNkQzh2SUVSdmJpZDBJSEpsZEhWeWJpQnZjSFJwYjI1eklIUm9ZWFFnWVhKbElHUnBjMkZpYkdWa0lHOXlJR2x1SUdFZ1pHbHpZV0pzWldRZ2IzQjBaM0p2ZFhCY2JseDBYSFJjZEZ4MFhIUmNkRngwSVc5d2RHbHZiaTVrYVhOaFlteGxaQ0FtSmx4dVhIUmNkRngwWEhSY2RGeDBYSFFvSUNGdmNIUnBiMjR1Y0dGeVpXNTBUbTlrWlM1a2FYTmhZbXhsWkNCOGZGeHVYSFJjZEZ4MFhIUmNkRngwWEhSY2RDRnViMlJsVG1GdFpTZ2diM0IwYVc5dUxuQmhjbVZ1ZEU1dlpHVXNJRndpYjNCMFozSnZkWEJjSWlBcElDa2dLU0I3WEc1Y2JseDBYSFJjZEZ4MFhIUmNkQzh2SUVkbGRDQjBhR1VnYzNCbFkybG1hV01nZG1Gc2RXVWdabTl5SUhSb1pTQnZjSFJwYjI1Y2JseDBYSFJjZEZ4MFhIUmNkSFpoYkhWbElEMGdhbEYxWlhKNUtDQnZjSFJwYjI0Z0tTNTJZV3dvS1R0Y2JseHVYSFJjZEZ4MFhIUmNkRngwTHk4Z1YyVWdaRzl1SjNRZ2JtVmxaQ0JoYmlCaGNuSmhlU0JtYjNJZ2IyNWxJSE5sYkdWamRITmNibHgwWEhSY2RGeDBYSFJjZEdsbUlDZ2diMjVsSUNrZ2UxeHVYSFJjZEZ4MFhIUmNkRngwWEhSeVpYUjFjbTRnZG1Gc2RXVTdYRzVjZEZ4MFhIUmNkRngwWEhSOVhHNWNibHgwWEhSY2RGeDBYSFJjZEM4dklFMTFiSFJwTFZObGJHVmpkSE1nY21WMGRYSnVJR0Z1SUdGeWNtRjVYRzVjZEZ4MFhIUmNkRngwWEhSMllXeDFaWE11Y0hWemFDZ2dkbUZzZFdVZ0tUdGNibHgwWEhSY2RGeDBYSFI5WEc1Y2RGeDBYSFJjZEgxY2JseHVYSFJjZEZ4MFhIUnlaWFIxY200Z2RtRnNkV1Z6TzF4dVhIUmNkRngwZlN4Y2JseHVYSFJjZEZ4MGMyVjBPaUJtZFc1amRHbHZiaWdnWld4bGJTd2dkbUZzZFdVZ0tTQjdYRzVjZEZ4MFhIUmNkSFpoY2lCdmNIUnBiMjVUWlhRc0lHOXdkR2x2Yml4Y2JseDBYSFJjZEZ4MFhIUnZjSFJwYjI1eklEMGdaV3hsYlM1dmNIUnBiMjV6TEZ4dVhIUmNkRngwWEhSY2RIWmhiSFZsY3lBOUlHcFJkV1Z5ZVM1dFlXdGxRWEp5WVhrb0lIWmhiSFZsSUNrc1hHNWNkRngwWEhSY2RGeDBhU0E5SUc5d2RHbHZibk11YkdWdVozUm9PMXh1WEc1Y2RGeDBYSFJjZEhkb2FXeGxJQ2dnYVMwdElDa2dlMXh1WEhSY2RGeDBYSFJjZEc5d2RHbHZiaUE5SUc5d2RHbHZibk5iSUdrZ1hUdGNibHh1WEhSY2RGeDBYSFJjZEM4cUlHVnpiR2x1ZEMxa2FYTmhZbXhsSUc1dkxXTnZibVF0WVhOemFXZHVJQ292WEc1Y2JseDBYSFJjZEZ4MFhIUnBaaUFvSUc5d2RHbHZiaTV6Wld4bFkzUmxaQ0E5WEc1Y2RGeDBYSFJjZEZ4MFhIUnFVWFZsY25rdWFXNUJjbkpoZVNnZ2FsRjFaWEo1TG5aaGJFaHZiMnR6TG05d2RHbHZiaTVuWlhRb0lHOXdkR2x2YmlBcExDQjJZV3gxWlhNZ0tTQStJQzB4WEc1Y2RGeDBYSFJjZEZ4MEtTQjdYRzVjZEZ4MFhIUmNkRngwWEhSdmNIUnBiMjVUWlhRZ1BTQjBjblZsTzF4dVhIUmNkRngwWEhSY2RIMWNibHh1WEhSY2RGeDBYSFJjZEM4cUlHVnpiR2x1ZEMxbGJtRmliR1VnYm04dFkyOXVaQzFoYzNOcFoyNGdLaTljYmx4MFhIUmNkRngwZlZ4dVhHNWNkRngwWEhSY2RDOHZJRVp2Y21ObElHSnliM2R6WlhKeklIUnZJR0psYUdGMlpTQmpiMjV6YVhOMFpXNTBiSGtnZDJobGJpQnViMjR0YldGMFkyaHBibWNnZG1Gc2RXVWdhWE1nYzJWMFhHNWNkRngwWEhSY2RHbG1JQ2dnSVc5d2RHbHZibE5sZENBcElIdGNibHgwWEhSY2RGeDBYSFJsYkdWdExuTmxiR1ZqZEdWa1NXNWtaWGdnUFNBdE1UdGNibHgwWEhSY2RGeDBmVnh1WEhSY2RGeDBYSFJ5WlhSMWNtNGdkbUZzZFdWek8xeHVYSFJjZEZ4MGZWeHVYSFJjZEgxY2JseDBmVnh1ZlNBcE8xeHVYRzR2THlCU1lXUnBiM01nWVc1a0lHTm9aV05yWW05NFpYTWdaMlYwZEdWeUwzTmxkSFJsY2x4dWFsRjFaWEo1TG1WaFkyZ29JRnNnWENKeVlXUnBiMXdpTENCY0ltTm9aV05yWW05NFhDSWdYU3dnWm5WdVkzUnBiMjRvS1NCN1hHNWNkR3BSZFdWeWVTNTJZV3hJYjI5cmMxc2dkR2hwY3lCZElEMGdlMXh1WEhSY2RITmxkRG9nWm5WdVkzUnBiMjRvSUdWc1pXMHNJSFpoYkhWbElDa2dlMXh1WEhSY2RGeDBhV1lnS0NCQmNuSmhlUzVwYzBGeWNtRjVLQ0IyWVd4MVpTQXBJQ2tnZTF4dVhIUmNkRngwWEhSeVpYUjFjbTRnS0NCbGJHVnRMbU5vWldOclpXUWdQU0JxVVhWbGNua3VhVzVCY25KaGVTZ2dhbEYxWlhKNUtDQmxiR1Z0SUNrdWRtRnNLQ2tzSUhaaGJIVmxJQ2tnUGlBdE1TQXBPMXh1WEhSY2RGeDBmVnh1WEhSY2RIMWNibHgwZlR0Y2JseDBhV1lnS0NBaGMzVndjRzl5ZEM1amFHVmphMDl1SUNrZ2UxeHVYSFJjZEdwUmRXVnllUzUyWVd4SWIyOXJjMXNnZEdocGN5QmRMbWRsZENBOUlHWjFibU4wYVc5dUtDQmxiR1Z0SUNrZ2UxeHVYSFJjZEZ4MGNtVjBkWEp1SUdWc1pXMHVaMlYwUVhSMGNtbGlkWFJsS0NCY0luWmhiSFZsWENJZ0tTQTlQVDBnYm5Wc2JDQS9JRndpYjI1Y0lpQTZJR1ZzWlcwdWRtRnNkV1U3WEc1Y2RGeDBmVHRjYmx4MGZWeHVmU0FwTzF4dVhHNWNibHh1WEc0dkx5QlNaWFIxY200Z2FsRjFaWEo1SUdadmNpQmhkSFJ5YVdKMWRHVnpMVzl1YkhrZ2FXNWpiSFZ6YVc5dVhHNWNibHh1YzNWd2NHOXlkQzVtYjJOMWMybHVJRDBnWENKdmJtWnZZM1Z6YVc1Y0lpQnBiaUIzYVc1a2IzYzdYRzVjYmx4dWRtRnlJSEptYjJOMWMwMXZjbkJvSUQwZ0wxNG9QenBtYjJOMWMybHVabTlqZFhOOFptOWpkWE52ZFhSaWJIVnlLU1F2TEZ4dVhIUnpkRzl3VUhKdmNHRm5ZWFJwYjI1RFlXeHNZbUZqYXlBOUlHWjFibU4wYVc5dUtDQmxJQ2tnZTF4dVhIUmNkR1V1YzNSdmNGQnliM0JoWjJGMGFXOXVLQ2s3WEc1Y2RIMDdYRzVjYm1wUmRXVnllUzVsZUhSbGJtUW9JR3BSZFdWeWVTNWxkbVZ1ZEN3Z2UxeHVYRzVjZEhSeWFXZG5aWEk2SUdaMWJtTjBhVzl1S0NCbGRtVnVkQ3dnWkdGMFlTd2daV3hsYlN3Z2IyNXNlVWhoYm1Sc1pYSnpJQ2tnZTF4dVhHNWNkRngwZG1GeUlHa3NJR04xY2l3Z2RHMXdMQ0JpZFdKaWJHVlVlWEJsTENCdmJuUjVjR1VzSUdoaGJtUnNaU3dnYzNCbFkybGhiQ3dnYkdGemRFVnNaVzFsYm5Rc1hHNWNkRngwWEhSbGRtVnVkRkJoZEdnZ1BTQmJJR1ZzWlcwZ2ZId2daRzlqZFcxbGJuUWdYU3hjYmx4MFhIUmNkSFI1Y0dVZ1BTQm9ZWE5QZDI0dVkyRnNiQ2dnWlhabGJuUXNJRndpZEhsd1pWd2lJQ2tnUHlCbGRtVnVkQzUwZVhCbElEb2daWFpsYm5Rc1hHNWNkRngwWEhSdVlXMWxjM0JoWTJWeklEMGdhR0Z6VDNkdUxtTmhiR3dvSUdWMlpXNTBMQ0JjSW01aGJXVnpjR0ZqWlZ3aUlDa2dQeUJsZG1WdWRDNXVZVzFsYzNCaFkyVXVjM0JzYVhRb0lGd2lMbHdpSUNrZ09pQmJYVHRjYmx4dVhIUmNkR04xY2lBOUlHeGhjM1JGYkdWdFpXNTBJRDBnZEcxd0lEMGdaV3hsYlNBOUlHVnNaVzBnZkh3Z1pHOWpkVzFsYm5RN1hHNWNibHgwWEhRdkx5QkViMjRuZENCa2J5QmxkbVZ1ZEhNZ2IyNGdkR1Y0ZENCaGJtUWdZMjl0YldWdWRDQnViMlJsYzF4dVhIUmNkR2xtSUNnZ1pXeGxiUzV1YjJSbFZIbHdaU0E5UFQwZ015QjhmQ0JsYkdWdExtNXZaR1ZVZVhCbElEMDlQU0E0SUNrZ2UxeHVYSFJjZEZ4MGNtVjBkWEp1TzF4dVhIUmNkSDFjYmx4dVhIUmNkQzh2SUdadlkzVnpMMkpzZFhJZ2JXOXljR2h6SUhSdklHWnZZM1Z6YVc0dmIzVjBPeUJsYm5OMWNtVWdkMlVuY21VZ2JtOTBJR1pwY21sdVp5QjBhR1Z0SUhKcFoyaDBJRzV2ZDF4dVhIUmNkR2xtSUNnZ2NtWnZZM1Z6VFc5eWNHZ3VkR1Z6ZENnZ2RIbHdaU0FySUdwUmRXVnllUzVsZG1WdWRDNTBjbWxuWjJWeVpXUWdLU0FwSUh0Y2JseDBYSFJjZEhKbGRIVnlianRjYmx4MFhIUjlYRzVjYmx4MFhIUnBaaUFvSUhSNWNHVXVhVzVrWlhoUFppZ2dYQ0l1WENJZ0tTQStJQzB4SUNrZ2UxeHVYRzVjZEZ4MFhIUXZMeUJPWVcxbGMzQmhZMlZrSUhSeWFXZG5aWEk3SUdOeVpXRjBaU0JoSUhKbFoyVjRjQ0IwYnlCdFlYUmphQ0JsZG1WdWRDQjBlWEJsSUdsdUlHaGhibVJzWlNncFhHNWNkRngwWEhSdVlXMWxjM0JoWTJWeklEMGdkSGx3WlM1emNHeHBkQ2dnWENJdVhDSWdLVHRjYmx4MFhIUmNkSFI1Y0dVZ1BTQnVZVzFsYzNCaFkyVnpMbk5vYVdaMEtDazdYRzVjZEZ4MFhIUnVZVzFsYzNCaFkyVnpMbk52Y25Rb0tUdGNibHgwWEhSOVhHNWNkRngwYjI1MGVYQmxJRDBnZEhsd1pTNXBibVJsZUU5bUtDQmNJanBjSWlBcElEd2dNQ0FtSmlCY0ltOXVYQ0lnS3lCMGVYQmxPMXh1WEc1Y2RGeDBMeThnUTJGc2JHVnlJR05oYmlCd1lYTnpJR2x1SUdFZ2FsRjFaWEo1TGtWMlpXNTBJRzlpYW1WamRDd2dUMkpxWldOMExDQnZjaUJxZFhOMElHRnVJR1YyWlc1MElIUjVjR1VnYzNSeWFXNW5YRzVjZEZ4MFpYWmxiblFnUFNCbGRtVnVkRnNnYWxGMVpYSjVMbVY0Y0dGdVpHOGdYU0EvWEc1Y2RGeDBYSFJsZG1WdWRDQTZYRzVjZEZ4MFhIUnVaWGNnYWxGMVpYSjVMa1YyWlc1MEtDQjBlWEJsTENCMGVYQmxiMllnWlhabGJuUWdQVDA5SUZ3aWIySnFaV04wWENJZ0ppWWdaWFpsYm5RZ0tUdGNibHh1WEhSY2RDOHZJRlJ5YVdkblpYSWdZbWwwYldGemF6b2dKaUF4SUdadmNpQnVZWFJwZG1VZ2FHRnVaR3hsY25NN0lDWWdNaUJtYjNJZ2FsRjFaWEo1SUNoaGJIZGhlWE1nZEhKMVpTbGNibHgwWEhSbGRtVnVkQzVwYzFSeWFXZG5aWElnUFNCdmJteDVTR0Z1Wkd4bGNuTWdQeUF5SURvZ016dGNibHgwWEhSbGRtVnVkQzV1WVcxbGMzQmhZMlVnUFNCdVlXMWxjM0JoWTJWekxtcHZhVzRvSUZ3aUxsd2lJQ2s3WEc1Y2RGeDBaWFpsYm5RdWNtNWhiV1Z6Y0dGalpTQTlJR1YyWlc1MExtNWhiV1Z6Y0dGalpTQS9YRzVjZEZ4MFhIUnVaWGNnVW1WblJYaHdLQ0JjSWloZWZGeGNYRnd1S1Z3aUlDc2dibUZ0WlhOd1lXTmxjeTVxYjJsdUtDQmNJbHhjWEZ3dUtEODZMaXBjWEZ4Y0xud3BYQ0lnS1NBcklGd2lLRnhjWEZ3dWZDUXBYQ0lnS1NBNlhHNWNkRngwWEhSdWRXeHNPMXh1WEc1Y2RGeDBMeThnUTJ4bFlXNGdkWEFnZEdobElHVjJaVzUwSUdsdUlHTmhjMlVnYVhRZ2FYTWdZbVZwYm1jZ2NtVjFjMlZrWEc1Y2RGeDBaWFpsYm5RdWNtVnpkV3gwSUQwZ2RXNWtaV1pwYm1Wa08xeHVYSFJjZEdsbUlDZ2dJV1YyWlc1MExuUmhjbWRsZENBcElIdGNibHgwWEhSY2RHVjJaVzUwTG5SaGNtZGxkQ0E5SUdWc1pXMDdYRzVjZEZ4MGZWeHVYRzVjZEZ4MEx5OGdRMnh2Ym1VZ1lXNTVJR2x1WTI5dGFXNW5JR1JoZEdFZ1lXNWtJSEJ5WlhCbGJtUWdkR2hsSUdWMlpXNTBMQ0JqY21WaGRHbHVaeUIwYUdVZ2FHRnVaR3hsY2lCaGNtY2diR2x6ZEZ4dVhIUmNkR1JoZEdFZ1BTQmtZWFJoSUQwOUlHNTFiR3dnUDF4dVhIUmNkRngwV3lCbGRtVnVkQ0JkSURwY2JseDBYSFJjZEdwUmRXVnllUzV0WVd0bFFYSnlZWGtvSUdSaGRHRXNJRnNnWlhabGJuUWdYU0FwTzF4dVhHNWNkRngwTHk4Z1FXeHNiM2NnYzNCbFkybGhiQ0JsZG1WdWRITWdkRzhnWkhKaGR5QnZkWFJ6YVdSbElIUm9aU0JzYVc1bGMxeHVYSFJjZEhOd1pXTnBZV3dnUFNCcVVYVmxjbmt1WlhabGJuUXVjM0JsWTJsaGJGc2dkSGx3WlNCZElIeDhJSHQ5TzF4dVhIUmNkR2xtSUNnZ0lXOXViSGxJWVc1a2JHVnljeUFtSmlCemNHVmphV0ZzTG5SeWFXZG5aWElnSmlZZ2MzQmxZMmxoYkM1MGNtbG5aMlZ5TG1Gd2NHeDVLQ0JsYkdWdExDQmtZWFJoSUNrZ1BUMDlJR1poYkhObElDa2dlMXh1WEhSY2RGeDBjbVYwZFhKdU8xeHVYSFJjZEgxY2JseHVYSFJjZEM4dklFUmxkR1Z5YldsdVpTQmxkbVZ1ZENCd2NtOXdZV2RoZEdsdmJpQndZWFJvSUdsdUlHRmtkbUZ1WTJVc0lIQmxjaUJYTTBNZ1pYWmxiblJ6SUhOd1pXTWdLSFJ5WVdNdE9UazFNU2xjYmx4MFhIUXZMeUJDZFdKaWJHVWdkWEFnZEc4Z1pHOWpkVzFsYm5Rc0lIUm9aVzRnZEc4Z2QybHVaRzkzT3lCM1lYUmphQ0JtYjNJZ1lTQm5iRzlpWVd3Z2IzZHVaWEpFYjJOMWJXVnVkQ0IyWVhJZ0tIUnlZV010T1RjeU5DbGNibHgwWEhScFppQW9JQ0Z2Ym14NVNHRnVaR3hsY25NZ0ppWWdJWE53WldOcFlXd3VibTlDZFdKaWJHVWdKaVlnSVdselYybHVaRzkzS0NCbGJHVnRJQ2tnS1NCN1hHNWNibHgwWEhSY2RHSjFZbUpzWlZSNWNHVWdQU0J6Y0dWamFXRnNMbVJsYkdWbllYUmxWSGx3WlNCOGZDQjBlWEJsTzF4dVhIUmNkRngwYVdZZ0tDQWhjbVp2WTNWelRXOXljR2d1ZEdWemRDZ2dZblZpWW14bFZIbHdaU0FySUhSNWNHVWdLU0FwSUh0Y2JseDBYSFJjZEZ4MFkzVnlJRDBnWTNWeUxuQmhjbVZ1ZEU1dlpHVTdYRzVjZEZ4MFhIUjlYRzVjZEZ4MFhIUm1iM0lnS0NBN0lHTjFjanNnWTNWeUlEMGdZM1Z5TG5CaGNtVnVkRTV2WkdVZ0tTQjdYRzVjZEZ4MFhIUmNkR1YyWlc1MFVHRjBhQzV3ZFhOb0tDQmpkWElnS1R0Y2JseDBYSFJjZEZ4MGRHMXdJRDBnWTNWeU8xeHVYSFJjZEZ4MGZWeHVYRzVjZEZ4MFhIUXZMeUJQYm14NUlHRmtaQ0IzYVc1a2IzY2dhV1lnZDJVZ1oyOTBJSFJ2SUdSdlkzVnRaVzUwSUNobExtY3VMQ0J1YjNRZ2NHeGhhVzRnYjJKcUlHOXlJR1JsZEdGamFHVmtJRVJQVFNsY2JseDBYSFJjZEdsbUlDZ2dkRzF3SUQwOVBTQW9JR1ZzWlcwdWIzZHVaWEpFYjJOMWJXVnVkQ0I4ZkNCa2IyTjFiV1Z1ZENBcElDa2dlMXh1WEhSY2RGeDBYSFJsZG1WdWRGQmhkR2d1Y0hWemFDZ2dkRzF3TG1SbFptRjFiSFJXYVdWM0lIeDhJSFJ0Y0M1d1lYSmxiblJYYVc1a2IzY2dmSHdnZDJsdVpHOTNJQ2s3WEc1Y2RGeDBYSFI5WEc1Y2RGeDBmVnh1WEc1Y2RGeDBMeThnUm1seVpTQm9ZVzVrYkdWeWN5QnZiaUIwYUdVZ1pYWmxiblFnY0dGMGFGeHVYSFJjZEdrZ1BTQXdPMXh1WEhSY2RIZG9hV3hsSUNnZ0tDQmpkWElnUFNCbGRtVnVkRkJoZEdoYklHa3JLeUJkSUNrZ0ppWWdJV1YyWlc1MExtbHpVSEp2Y0dGbllYUnBiMjVUZEc5d2NHVmtLQ2tnS1NCN1hHNWNkRngwWEhSc1lYTjBSV3hsYldWdWRDQTlJR04xY2p0Y2JseDBYSFJjZEdWMlpXNTBMblI1Y0dVZ1BTQnBJRDRnTVNBL1hHNWNkRngwWEhSY2RHSjFZbUpzWlZSNWNHVWdPbHh1WEhSY2RGeDBYSFJ6Y0dWamFXRnNMbUpwYm1SVWVYQmxJSHg4SUhSNWNHVTdYRzVjYmx4MFhIUmNkQzh2SUdwUmRXVnllU0JvWVc1a2JHVnlYRzVjZEZ4MFhIUm9ZVzVrYkdVZ1BTQW9JR1JoZEdGUWNtbDJMbWRsZENnZ1kzVnlMQ0JjSW1WMlpXNTBjMXdpSUNrZ2ZId2dUMkpxWldOMExtTnlaV0YwWlNnZ2JuVnNiQ0FwSUNsYklHVjJaVzUwTG5SNWNHVWdYU0FtSmx4dVhIUmNkRngwWEhSa1lYUmhVSEpwZGk1blpYUW9JR04xY2l3Z1hDSm9ZVzVrYkdWY0lpQXBPMXh1WEhSY2RGeDBhV1lnS0NCb1lXNWtiR1VnS1NCN1hHNWNkRngwWEhSY2RHaGhibVJzWlM1aGNIQnNlU2dnWTNWeUxDQmtZWFJoSUNrN1hHNWNkRngwWEhSOVhHNWNibHgwWEhSY2RDOHZJRTVoZEdsMlpTQm9ZVzVrYkdWeVhHNWNkRngwWEhSb1lXNWtiR1VnUFNCdmJuUjVjR1VnSmlZZ1kzVnlXeUJ2Ym5SNWNHVWdYVHRjYmx4MFhIUmNkR2xtSUNnZ2FHRnVaR3hsSUNZbUlHaGhibVJzWlM1aGNIQnNlU0FtSmlCaFkyTmxjSFJFWVhSaEtDQmpkWElnS1NBcElIdGNibHgwWEhSY2RGeDBaWFpsYm5RdWNtVnpkV3gwSUQwZ2FHRnVaR3hsTG1Gd2NHeDVLQ0JqZFhJc0lHUmhkR0VnS1R0Y2JseDBYSFJjZEZ4MGFXWWdLQ0JsZG1WdWRDNXlaWE4xYkhRZ1BUMDlJR1poYkhObElDa2dlMXh1WEhSY2RGeDBYSFJjZEdWMlpXNTBMbkJ5WlhabGJuUkVaV1poZFd4MEtDazdYRzVjZEZ4MFhIUmNkSDFjYmx4MFhIUmNkSDFjYmx4MFhIUjlYRzVjZEZ4MFpYWmxiblF1ZEhsd1pTQTlJSFI1Y0dVN1hHNWNibHgwWEhRdkx5QkpaaUJ1YjJKdlpIa2djSEpsZG1WdWRHVmtJSFJvWlNCa1pXWmhkV3gwSUdGamRHbHZiaXdnWkc4Z2FYUWdibTkzWEc1Y2RGeDBhV1lnS0NBaGIyNXNlVWhoYm1Sc1pYSnpJQ1ltSUNGbGRtVnVkQzVwYzBSbFptRjFiSFJRY21WMlpXNTBaV1FvS1NBcElIdGNibHh1WEhSY2RGeDBhV1lnS0NBb0lDRnpjR1ZqYVdGc0xsOWtaV1poZFd4MElIeDhYRzVjZEZ4MFhIUmNkSE53WldOcFlXd3VYMlJsWm1GMWJIUXVZWEJ3Ykhrb0lHVjJaVzUwVUdGMGFDNXdiM0FvS1N3Z1pHRjBZU0FwSUQwOVBTQm1ZV3h6WlNBcElDWW1YRzVjZEZ4MFhIUmNkR0ZqWTJWd2RFUmhkR0VvSUdWc1pXMGdLU0FwSUh0Y2JseHVYSFJjZEZ4MFhIUXZMeUJEWVd4c0lHRWdibUYwYVhabElFUlBUU0J0WlhSb2IyUWdiMjRnZEdobElIUmhjbWRsZENCM2FYUm9JSFJvWlNCellXMWxJRzVoYldVZ1lYTWdkR2hsSUdWMlpXNTBMbHh1WEhSY2RGeDBYSFF2THlCRWIyNG5kQ0JrYnlCa1pXWmhkV3gwSUdGamRHbHZibk1nYjI0Z2QybHVaRzkzTENCMGFHRjBKM01nZDJobGNtVWdaMnh2WW1Gc0lIWmhjbWxoWW14bGN5QmlaU0FvZEhKaFl5MDJNVGN3S1Z4dVhIUmNkRngwWEhScFppQW9JRzl1ZEhsd1pTQW1KaUJwYzBaMWJtTjBhVzl1S0NCbGJHVnRXeUIwZVhCbElGMGdLU0FtSmlBaGFYTlhhVzVrYjNjb0lHVnNaVzBnS1NBcElIdGNibHh1WEhSY2RGeDBYSFJjZEM4dklFUnZiaWQwSUhKbExYUnlhV2RuWlhJZ1lXNGdiMjVHVDA4Z1pYWmxiblFnZDJobGJpQjNaU0JqWVd4c0lHbDBjeUJHVDA4b0tTQnRaWFJvYjJSY2JseDBYSFJjZEZ4MFhIUjBiWEFnUFNCbGJHVnRXeUJ2Ym5SNWNHVWdYVHRjYmx4dVhIUmNkRngwWEhSY2RHbG1JQ2dnZEcxd0lDa2dlMXh1WEhSY2RGeDBYSFJjZEZ4MFpXeGxiVnNnYjI1MGVYQmxJRjBnUFNCdWRXeHNPMXh1WEhSY2RGeDBYSFJjZEgxY2JseHVYSFJjZEZ4MFhIUmNkQzh2SUZCeVpYWmxiblFnY21VdGRISnBaMmRsY21sdVp5QnZaaUIwYUdVZ2MyRnRaU0JsZG1WdWRDd2djMmx1WTJVZ2QyVWdZV3h5WldGa2VTQmlkV0ppYkdWa0lHbDBJR0ZpYjNabFhHNWNkRngwWEhSY2RGeDBhbEYxWlhKNUxtVjJaVzUwTG5SeWFXZG5aWEpsWkNBOUlIUjVjR1U3WEc1Y2JseDBYSFJjZEZ4MFhIUnBaaUFvSUdWMlpXNTBMbWx6VUhKdmNHRm5ZWFJwYjI1VGRHOXdjR1ZrS0NrZ0tTQjdYRzVjZEZ4MFhIUmNkRngwWEhSc1lYTjBSV3hsYldWdWRDNWhaR1JGZG1WdWRFeHBjM1JsYm1WeUtDQjBlWEJsTENCemRHOXdVSEp2Y0dGbllYUnBiMjVEWVd4c1ltRmpheUFwTzF4dVhIUmNkRngwWEhSY2RIMWNibHh1WEhSY2RGeDBYSFJjZEdWc1pXMWJJSFI1Y0dVZ1hTZ3BPMXh1WEc1Y2RGeDBYSFJjZEZ4MGFXWWdLQ0JsZG1WdWRDNXBjMUJ5YjNCaFoyRjBhVzl1VTNSdmNIQmxaQ2dwSUNrZ2UxeHVYSFJjZEZ4MFhIUmNkRngwYkdGemRFVnNaVzFsYm5RdWNtVnRiM1psUlhabGJuUk1hWE4wWlc1bGNpZ2dkSGx3WlN3Z2MzUnZjRkJ5YjNCaFoyRjBhVzl1UTJGc2JHSmhZMnNnS1R0Y2JseDBYSFJjZEZ4MFhIUjlYRzVjYmx4MFhIUmNkRngwWEhScVVYVmxjbmt1WlhabGJuUXVkSEpwWjJkbGNtVmtJRDBnZFc1a1pXWnBibVZrTzF4dVhHNWNkRngwWEhSY2RGeDBhV1lnS0NCMGJYQWdLU0I3WEc1Y2RGeDBYSFJjZEZ4MFhIUmxiR1Z0V3lCdmJuUjVjR1VnWFNBOUlIUnRjRHRjYmx4MFhIUmNkRngwWEhSOVhHNWNkRngwWEhSY2RIMWNibHgwWEhSY2RIMWNibHgwWEhSOVhHNWNibHgwWEhSeVpYUjFjbTRnWlhabGJuUXVjbVZ6ZFd4ME8xeHVYSFI5TEZ4dVhHNWNkQzh2SUZCcFoyZDVZbUZqYXlCdmJpQmhJR1J2Ym05eUlHVjJaVzUwSUhSdklITnBiWFZzWVhSbElHRWdaR2xtWm1WeVpXNTBJRzl1WlZ4dVhIUXZMeUJWYzJWa0lHOXViSGtnWm05eUlHQm1iMk4xY3locGJpQjhJRzkxZENsZ0lHVjJaVzUwYzF4dVhIUnphVzExYkdGMFpUb2dablZ1WTNScGIyNG9JSFI1Y0dVc0lHVnNaVzBzSUdWMlpXNTBJQ2tnZTF4dVhIUmNkSFpoY2lCbElEMGdhbEYxWlhKNUxtVjRkR1Z1WkNoY2JseDBYSFJjZEc1bGR5QnFVWFZsY25rdVJYWmxiblFvS1N4Y2JseDBYSFJjZEdWMlpXNTBMRnh1WEhSY2RGeDBlMXh1WEhSY2RGeDBYSFIwZVhCbE9pQjBlWEJsTEZ4dVhIUmNkRngwWEhScGMxTnBiWFZzWVhSbFpEb2dkSEoxWlZ4dVhIUmNkRngwZlZ4dVhIUmNkQ2s3WEc1Y2JseDBYSFJxVVhWbGNua3VaWFpsYm5RdWRISnBaMmRsY2lnZ1pTd2diblZzYkN3Z1pXeGxiU0FwTzF4dVhIUjlYRzVjYm4wZ0tUdGNibHh1YWxGMVpYSjVMbVp1TG1WNGRHVnVaQ2dnZTF4dVhHNWNkSFJ5YVdkblpYSTZJR1oxYm1OMGFXOXVLQ0IwZVhCbExDQmtZWFJoSUNrZ2UxeHVYSFJjZEhKbGRIVnliaUIwYUdsekxtVmhZMmdvSUdaMWJtTjBhVzl1S0NrZ2UxeHVYSFJjZEZ4MGFsRjFaWEo1TG1WMlpXNTBMblJ5YVdkblpYSW9JSFI1Y0dVc0lHUmhkR0VzSUhSb2FYTWdLVHRjYmx4MFhIUjlJQ2s3WEc1Y2RIMHNYRzVjZEhSeWFXZG5aWEpJWVc1a2JHVnlPaUJtZFc1amRHbHZiaWdnZEhsd1pTd2daR0YwWVNBcElIdGNibHgwWEhSMllYSWdaV3hsYlNBOUlIUm9hWE5iSURBZ1hUdGNibHgwWEhScFppQW9JR1ZzWlcwZ0tTQjdYRzVjZEZ4MFhIUnlaWFIxY200Z2FsRjFaWEo1TG1WMlpXNTBMblJ5YVdkblpYSW9JSFI1Y0dVc0lHUmhkR0VzSUdWc1pXMHNJSFJ5ZFdVZ0tUdGNibHgwWEhSOVhHNWNkSDFjYm4wZ0tUdGNibHh1WEc0dkx5QlRkWEJ3YjNKME9pQkdhWEpsWm05NElEdzlORFJjYmk4dklFWnBjbVZtYjNnZ1pHOWxjMjRuZENCb1lYWmxJR1p2WTNWektHbHVJSHdnYjNWMEtTQmxkbVZ1ZEhOY2JpOHZJRkpsYkdGMFpXUWdkR2xqYTJWMElDMGdhSFIwY0hNNkx5OWlkV2Q2YVd4c1lTNXRiM3BwYkd4aExtOXlaeTl6YUc5M1gySjFaeTVqWjJrL2FXUTlOamczTnpnM1hHNHZMMXh1THk4Z1UzVndjRzl5ZERvZ1EyaHliMjFsSUR3OU5EZ2dMU0EwT1N3Z1UyRm1ZWEpwSUR3OU9TNHdJQzBnT1M0eFhHNHZMeUJtYjJOMWN5aHBiaUI4SUc5MWRDa2daWFpsYm5SeklHWnBjbVVnWVdaMFpYSWdabTlqZFhNZ0ppQmliSFZ5SUdWMlpXNTBjeXhjYmk4dklIZG9hV05vSUdseklITndaV01nZG1sdmJHRjBhVzl1SUMwZ2FIUjBjRG92TDNkM2R5NTNNeTV2Y21jdlZGSXZSRTlOTFV4bGRtVnNMVE10UlhabGJuUnpMeU5sZG1WdWRITXRabTlqZFhObGRtVnVkQzFsZG1WdWRDMXZjbVJsY2x4dUx5OGdVbVZzWVhSbFpDQjBhV05yWlhRZ0xTQm9kSFJ3Y3pvdkwySjFaM011WTJoeWIyMXBkVzB1YjNKbkwzQXZZMmh5YjIxcGRXMHZhWE56ZFdWekwyUmxkR0ZwYkQ5cFpEMDBORGs0TlRkY2JtbG1JQ2dnSVhOMWNIQnZjblF1Wm05amRYTnBiaUFwSUh0Y2JseDBhbEYxWlhKNUxtVmhZMmdvSUhzZ1ptOWpkWE02SUZ3aVptOWpkWE5wYmx3aUxDQmliSFZ5T2lCY0ltWnZZM1Z6YjNWMFhDSWdmU3dnWm5WdVkzUnBiMjRvSUc5eWFXY3NJR1pwZUNBcElIdGNibHh1WEhSY2RDOHZJRUYwZEdGamFDQmhJSE5wYm1kc1pTQmpZWEIwZFhKcGJtY2dhR0Z1Wkd4bGNpQnZiaUIwYUdVZ1pHOWpkVzFsYm5RZ2QyaHBiR1VnYzI5dFpXOXVaU0IzWVc1MGN5Qm1iMk4xYzJsdUwyWnZZM1Z6YjNWMFhHNWNkRngwZG1GeUlHaGhibVJzWlhJZ1BTQm1kVzVqZEdsdmJpZ2daWFpsYm5RZ0tTQjdYRzVjZEZ4MFhIUnFVWFZsY25rdVpYWmxiblF1YzJsdGRXeGhkR1VvSUdacGVDd2daWFpsYm5RdWRHRnlaMlYwTENCcVVYVmxjbmt1WlhabGJuUXVabWw0S0NCbGRtVnVkQ0FwSUNrN1hHNWNkRngwZlR0Y2JseHVYSFJjZEdwUmRXVnllUzVsZG1WdWRDNXpjR1ZqYVdGc1d5Qm1hWGdnWFNBOUlIdGNibHgwWEhSY2RITmxkSFZ3T2lCbWRXNWpkR2x2YmlncElIdGNibHh1WEhSY2RGeDBYSFF2THlCSVlXNWtiR1U2SUhKbFozVnNZWElnYm05a1pYTWdLSFpwWVNCZ2RHaHBjeTV2ZDI1bGNrUnZZM1Z0Wlc1MFlDa3NJSGRwYm1SdmQxeHVYSFJjZEZ4MFhIUXZMeUFvZG1saElHQjBhR2x6TG1SdlkzVnRaVzUwWUNrZ0ppQmtiMk4xYldWdWRDQW9kbWxoSUdCMGFHbHpZQ2t1WEc1Y2RGeDBYSFJjZEhaaGNpQmtiMk1nUFNCMGFHbHpMbTkzYm1WeVJHOWpkVzFsYm5RZ2ZId2dkR2hwY3k1a2IyTjFiV1Z1ZENCOGZDQjBhR2x6TEZ4dVhIUmNkRngwWEhSY2RHRjBkR0ZqYUdWeklEMGdaR0YwWVZCeWFYWXVZV05qWlhOektDQmtiMk1zSUdacGVDQXBPMXh1WEc1Y2RGeDBYSFJjZEdsbUlDZ2dJV0YwZEdGamFHVnpJQ2tnZTF4dVhIUmNkRngwWEhSY2RHUnZZeTVoWkdSRmRtVnVkRXhwYzNSbGJtVnlLQ0J2Y21sbkxDQm9ZVzVrYkdWeUxDQjBjblZsSUNrN1hHNWNkRngwWEhSY2RIMWNibHgwWEhSY2RGeDBaR0YwWVZCeWFYWXVZV05qWlhOektDQmtiMk1zSUdacGVDd2dLQ0JoZEhSaFkyaGxjeUI4ZkNBd0lDa2dLeUF4SUNrN1hHNWNkRngwWEhSOUxGeHVYSFJjZEZ4MGRHVmhjbVJ2ZDI0NklHWjFibU4wYVc5dUtDa2dlMXh1WEhSY2RGeDBYSFIyWVhJZ1pHOWpJRDBnZEdocGN5NXZkMjVsY2tSdlkzVnRaVzUwSUh4OElIUm9hWE11Wkc5amRXMWxiblFnZkh3Z2RHaHBjeXhjYmx4MFhIUmNkRngwWEhSaGRIUmhZMmhsY3lBOUlHUmhkR0ZRY21sMkxtRmpZMlZ6Y3lnZ1pHOWpMQ0JtYVhnZ0tTQXRJREU3WEc1Y2JseDBYSFJjZEZ4MGFXWWdLQ0FoWVhSMFlXTm9aWE1nS1NCN1hHNWNkRngwWEhSY2RGeDBaRzlqTG5KbGJXOTJaVVYyWlc1MFRHbHpkR1Z1WlhJb0lHOXlhV2NzSUdoaGJtUnNaWElzSUhSeWRXVWdLVHRjYmx4MFhIUmNkRngwWEhSa1lYUmhVSEpwZGk1eVpXMXZkbVVvSUdSdll5d2dabWw0SUNrN1hHNWNibHgwWEhSY2RGeDBmU0JsYkhObElIdGNibHgwWEhSY2RGeDBYSFJrWVhSaFVISnBkaTVoWTJObGMzTW9JR1J2WXl3Z1ptbDRMQ0JoZEhSaFkyaGxjeUFwTzF4dVhIUmNkRngwWEhSOVhHNWNkRngwWEhSOVhHNWNkRngwZlR0Y2JseDBmU0FwTzF4dWZWeHVkbUZ5SUd4dlkyRjBhVzl1SUQwZ2QybHVaRzkzTG14dlkyRjBhVzl1TzF4dVhHNTJZWElnYm05dVkyVWdQU0I3SUdkMWFXUTZJRVJoZEdVdWJtOTNLQ2tnZlR0Y2JseHVkbUZ5SUhKeGRXVnllU0E5SUNnZ0wxeGNQeThnS1R0Y2JseHVYRzVjYmk4dklFTnliM056TFdKeWIzZHpaWElnZUcxc0lIQmhjbk5wYm1kY2JtcFJkV1Z5ZVM1d1lYSnpaVmhOVENBOUlHWjFibU4wYVc5dUtDQmtZWFJoSUNrZ2UxeHVYSFIyWVhJZ2VHMXNMQ0J3WVhKelpYSkZjbkp2Y2tWc1pXMDdYRzVjZEdsbUlDZ2dJV1JoZEdFZ2ZId2dkSGx3Wlc5bUlHUmhkR0VnSVQwOUlGd2ljM1J5YVc1blhDSWdLU0I3WEc1Y2RGeDBjbVYwZFhKdUlHNTFiR3c3WEc1Y2RIMWNibHh1WEhRdkx5QlRkWEJ3YjNKME9pQkpSU0E1SUMwZ01URWdiMjVzZVZ4dVhIUXZMeUJKUlNCMGFISnZkM01nYjI0Z2NHRnljMlZHY205dFUzUnlhVzVuSUhkcGRHZ2dhVzUyWVd4cFpDQnBibkIxZEM1Y2JseDBkSEo1SUh0Y2JseDBYSFI0Yld3Z1BTQW9JRzVsZHlCM2FXNWtiM2N1UkU5TlVHRnljMlZ5S0NrZ0tTNXdZWEp6WlVaeWIyMVRkSEpwYm1jb0lHUmhkR0VzSUZ3aWRHVjRkQzk0Yld4Y0lpQXBPMXh1WEhSOUlHTmhkR05vSUNnZ1pTQXBJSHQ5WEc1Y2JseDBjR0Z5YzJWeVJYSnliM0pGYkdWdElEMGdlRzFzSUNZbUlIaHRiQzVuWlhSRmJHVnRaVzUwYzBKNVZHRm5UbUZ0WlNnZ1hDSndZWEp6WlhKbGNuSnZjbHdpSUNsYklEQWdYVHRjYmx4MGFXWWdLQ0FoZUcxc0lIeDhJSEJoY25ObGNrVnljbTl5Uld4bGJTQXBJSHRjYmx4MFhIUnFVWFZsY25rdVpYSnliM0lvSUZ3aVNXNTJZV3hwWkNCWVRVdzZJRndpSUNzZ0tGeHVYSFJjZEZ4MGNHRnljMlZ5UlhKeWIzSkZiR1Z0SUQ5Y2JseDBYSFJjZEZ4MGFsRjFaWEo1TG0xaGNDZ2djR0Z5YzJWeVJYSnliM0pGYkdWdExtTm9hV3hrVG05a1pYTXNJR1oxYm1OMGFXOXVLQ0JsYkNBcElIdGNibHgwWEhSY2RGeDBYSFJ5WlhSMWNtNGdaV3d1ZEdWNGRFTnZiblJsYm5RN1hHNWNkRngwWEhSY2RIMGdLUzVxYjJsdUtDQmNJbHhjYmx3aUlDa2dPbHh1WEhSY2RGeDBYSFJrWVhSaFhHNWNkRngwS1NBcE8xeHVYSFI5WEc1Y2RISmxkSFZ5YmlCNGJXdzdYRzU5TzF4dVhHNWNiblpoY2x4dVhIUnlZbkpoWTJ0bGRDQTlJQzljWEZ0Y1hGMGtMeXhjYmx4MGNrTlNURVlnUFNBdlhGeHlQMXhjYmk5bkxGeHVYSFJ5YzNWaWJXbDBkR1Z5Vkhsd1pYTWdQU0F2WGlnL09uTjFZbTFwZEh4aWRYUjBiMjU4YVcxaFoyVjhjbVZ6WlhSOFptbHNaU2trTDJrc1hHNWNkSEp6ZFdKdGFYUjBZV0pzWlNBOUlDOWVLRDg2YVc1d2RYUjhjMlZzWldOMGZIUmxlSFJoY21WaGZHdGxlV2RsYmlrdmFUdGNibHh1Wm5WdVkzUnBiMjRnWW5WcGJHUlFZWEpoYlhNb0lIQnlaV1pwZUN3Z2IySnFMQ0IwY21Ga2FYUnBiMjVoYkN3Z1lXUmtJQ2tnZTF4dVhIUjJZWElnYm1GdFpUdGNibHh1WEhScFppQW9JRUZ5Y21GNUxtbHpRWEp5WVhrb0lHOWlhaUFwSUNrZ2UxeHVYRzVjZEZ4MEx5OGdVMlZ5YVdGc2FYcGxJR0Z5Y21GNUlHbDBaVzB1WEc1Y2RGeDBhbEYxWlhKNUxtVmhZMmdvSUc5aWFpd2dablZ1WTNScGIyNG9JR2tzSUhZZ0tTQjdYRzVjZEZ4MFhIUnBaaUFvSUhSeVlXUnBkR2x2Ym1Gc0lIeDhJSEppY21GamEyVjBMblJsYzNRb0lIQnlaV1pwZUNBcElDa2dlMXh1WEc1Y2RGeDBYSFJjZEM4dklGUnlaV0YwSUdWaFkyZ2dZWEp5WVhrZ2FYUmxiU0JoY3lCaElITmpZV3hoY2k1Y2JseDBYSFJjZEZ4MFlXUmtLQ0J3Y21WbWFYZ3NJSFlnS1R0Y2JseHVYSFJjZEZ4MGZTQmxiSE5sSUh0Y2JseHVYSFJjZEZ4MFhIUXZMeUJKZEdWdElHbHpJRzV2YmkxelkyRnNZWElnS0dGeWNtRjVJRzl5SUc5aWFtVmpkQ2tzSUdWdVkyOWtaU0JwZEhNZ2JuVnRaWEpwWXlCcGJtUmxlQzVjYmx4MFhIUmNkRngwWW5WcGJHUlFZWEpoYlhNb1hHNWNkRngwWEhSY2RGeDBjSEpsWm1sNElDc2dYQ0piWENJZ0t5QW9JSFI1Y0dWdlppQjJJRDA5UFNCY0ltOWlhbVZqZEZ3aUlDWW1JSFlnSVQwZ2JuVnNiQ0EvSUdrZ09pQmNJbHdpSUNrZ0t5QmNJbDFjSWl4Y2JseDBYSFJjZEZ4MFhIUjJMRnh1WEhSY2RGeDBYSFJjZEhSeVlXUnBkR2x2Ym1Gc0xGeHVYSFJjZEZ4MFhIUmNkR0ZrWkZ4dVhIUmNkRngwWEhRcE8xeHVYSFJjZEZ4MGZWeHVYSFJjZEgwZ0tUdGNibHh1WEhSOUlHVnNjMlVnYVdZZ0tDQWhkSEpoWkdsMGFXOXVZV3dnSmlZZ2RHOVVlWEJsS0NCdlltb2dLU0E5UFQwZ1hDSnZZbXBsWTNSY0lpQXBJSHRjYmx4dVhIUmNkQzh2SUZObGNtbGhiR2w2WlNCdlltcGxZM1FnYVhSbGJTNWNibHgwWEhSbWIzSWdLQ0J1WVcxbElHbHVJRzlpYWlBcElIdGNibHgwWEhSY2RHSjFhV3hrVUdGeVlXMXpLQ0J3Y21WbWFYZ2dLeUJjSWx0Y0lpQXJJRzVoYldVZ0t5QmNJbDFjSWl3Z2IySnFXeUJ1WVcxbElGMHNJSFJ5WVdScGRHbHZibUZzTENCaFpHUWdLVHRjYmx4MFhIUjlYRzVjYmx4MGZTQmxiSE5sSUh0Y2JseHVYSFJjZEM4dklGTmxjbWxoYkdsNlpTQnpZMkZzWVhJZ2FYUmxiUzVjYmx4MFhIUmhaR1FvSUhCeVpXWnBlQ3dnYjJKcUlDazdYRzVjZEgxY2JuMWNibHh1THk4Z1UyVnlhV0ZzYVhwbElHRnVJR0Z5Y21GNUlHOW1JR1p2Y20wZ1pXeGxiV1Z1ZEhNZ2IzSWdZU0J6WlhRZ2IyWmNiaTh2SUd0bGVTOTJZV3gxWlhNZ2FXNTBieUJoSUhGMVpYSjVJSE4wY21sdVoxeHVhbEYxWlhKNUxuQmhjbUZ0SUQwZ1puVnVZM1JwYjI0b0lHRXNJSFJ5WVdScGRHbHZibUZzSUNrZ2UxeHVYSFIyWVhJZ2NISmxabWw0TEZ4dVhIUmNkSE1nUFNCYlhTeGNibHgwWEhSaFpHUWdQU0JtZFc1amRHbHZiaWdnYTJWNUxDQjJZV3gxWlU5eVJuVnVZM1JwYjI0Z0tTQjdYRzVjYmx4MFhIUmNkQzh2SUVsbUlIWmhiSFZsSUdseklHRWdablZ1WTNScGIyNHNJR2x1ZG05clpTQnBkQ0JoYm1RZ2RYTmxJR2wwY3lCeVpYUjFjbTRnZG1Gc2RXVmNibHgwWEhSY2RIWmhjaUIyWVd4MVpTQTlJR2x6Um5WdVkzUnBiMjRvSUhaaGJIVmxUM0pHZFc1amRHbHZiaUFwSUQ5Y2JseDBYSFJjZEZ4MGRtRnNkV1ZQY2taMWJtTjBhVzl1S0NrZ09seHVYSFJjZEZ4MFhIUjJZV3gxWlU5eVJuVnVZM1JwYjI0N1hHNWNibHgwWEhSY2RITmJJSE11YkdWdVozUm9JRjBnUFNCbGJtTnZaR1ZWVWtsRGIyMXdiMjVsYm5Rb0lHdGxlU0FwSUNzZ1hDSTlYQ0lnSzF4dVhIUmNkRngwWEhSbGJtTnZaR1ZWVWtsRGIyMXdiMjVsYm5Rb0lIWmhiSFZsSUQwOUlHNTFiR3dnUHlCY0lsd2lJRG9nZG1Gc2RXVWdLVHRjYmx4MFhIUjlPMXh1WEc1Y2RHbG1JQ2dnWVNBOVBTQnVkV3hzSUNrZ2UxeHVYSFJjZEhKbGRIVnliaUJjSWx3aU8xeHVYSFI5WEc1Y2JseDBMeThnU1dZZ1lXNGdZWEp5WVhrZ2QyRnpJSEJoYzNObFpDQnBiaXdnWVhOemRXMWxJSFJvWVhRZ2FYUWdhWE1nWVc0Z1lYSnlZWGtnYjJZZ1ptOXliU0JsYkdWdFpXNTBjeTVjYmx4MGFXWWdLQ0JCY25KaGVTNXBjMEZ5Y21GNUtDQmhJQ2tnZkh3Z0tDQmhMbXB4ZFdWeWVTQW1KaUFoYWxGMVpYSjVMbWx6VUd4aGFXNVBZbXBsWTNRb0lHRWdLU0FwSUNrZ2UxeHVYRzVjZEZ4MEx5OGdVMlZ5YVdGc2FYcGxJSFJvWlNCbWIzSnRJR1ZzWlcxbGJuUnpYRzVjZEZ4MGFsRjFaWEo1TG1WaFkyZ29JR0VzSUdaMWJtTjBhVzl1S0NrZ2UxeHVYSFJjZEZ4MFlXUmtLQ0IwYUdsekxtNWhiV1VzSUhSb2FYTXVkbUZzZFdVZ0tUdGNibHgwWEhSOUlDazdYRzVjYmx4MGZTQmxiSE5sSUh0Y2JseHVYSFJjZEM4dklFbG1JSFJ5WVdScGRHbHZibUZzTENCbGJtTnZaR1VnZEdobElGd2liMnhrWENJZ2QyRjVJQ2gwYUdVZ2QyRjVJREV1TXk0eUlHOXlJRzlzWkdWeVhHNWNkRngwTHk4Z1pHbGtJR2wwS1N3Z2IzUm9aWEozYVhObElHVnVZMjlrWlNCd1lYSmhiWE1nY21WamRYSnphWFpsYkhrdVhHNWNkRngwWm05eUlDZ2djSEpsWm1sNElHbHVJR0VnS1NCN1hHNWNkRngwWEhSaWRXbHNaRkJoY21GdGN5Z2djSEpsWm1sNExDQmhXeUJ3Y21WbWFYZ2dYU3dnZEhKaFpHbDBhVzl1WVd3c0lHRmtaQ0FwTzF4dVhIUmNkSDFjYmx4MGZWeHVYRzVjZEM4dklGSmxkSFZ5YmlCMGFHVWdjbVZ6ZFd4MGFXNW5JSE5sY21saGJHbDZZWFJwYjI1Y2JseDBjbVYwZFhKdUlITXVhbTlwYmlnZ1hDSW1YQ0lnS1R0Y2JuMDdYRzVjYm1wUmRXVnllUzVtYmk1bGVIUmxibVFvSUh0Y2JseDBjMlZ5YVdGc2FYcGxPaUJtZFc1amRHbHZiaWdwSUh0Y2JseDBYSFJ5WlhSMWNtNGdhbEYxWlhKNUxuQmhjbUZ0S0NCMGFHbHpMbk5sY21saGJHbDZaVUZ5Y21GNUtDa2dLVHRjYmx4MGZTeGNibHgwYzJWeWFXRnNhWHBsUVhKeVlYazZJR1oxYm1OMGFXOXVLQ2tnZTF4dVhIUmNkSEpsZEhWeWJpQjBhR2x6TG0xaGNDZ2dablZ1WTNScGIyNG9LU0I3WEc1Y2JseDBYSFJjZEM4dklFTmhiaUJoWkdRZ2NISnZjRWh2YjJzZ1ptOXlJRndpWld4bGJXVnVkSE5jSWlCMGJ5Qm1hV3gwWlhJZ2IzSWdZV1JrSUdadmNtMGdaV3hsYldWdWRITmNibHgwWEhSY2RIWmhjaUJsYkdWdFpXNTBjeUE5SUdwUmRXVnllUzV3Y205d0tDQjBhR2x6TENCY0ltVnNaVzFsYm5SelhDSWdLVHRjYmx4MFhIUmNkSEpsZEhWeWJpQmxiR1Z0Wlc1MGN5QS9JR3BSZFdWeWVTNXRZV3RsUVhKeVlYa29JR1ZzWlcxbGJuUnpJQ2tnT2lCMGFHbHpPMXh1WEhSY2RIMGdLUzVtYVd4MFpYSW9JR1oxYm1OMGFXOXVLQ2tnZTF4dVhIUmNkRngwZG1GeUlIUjVjR1VnUFNCMGFHbHpMblI1Y0dVN1hHNWNibHgwWEhSY2RDOHZJRlZ6WlNBdWFYTW9JRndpT21ScGMyRmliR1ZrWENJZ0tTQnpieUIwYUdGMElHWnBaV3hrYzJWMFcyUnBjMkZpYkdWa1hTQjNiM0pyYzF4dVhIUmNkRngwY21WMGRYSnVJSFJvYVhNdWJtRnRaU0FtSmlBaGFsRjFaWEo1S0NCMGFHbHpJQ2t1YVhNb0lGd2lPbVJwYzJGaWJHVmtYQ0lnS1NBbUpseHVYSFJjZEZ4MFhIUnljM1ZpYldsMGRHRmliR1V1ZEdWemRDZ2dkR2hwY3k1dWIyUmxUbUZ0WlNBcElDWW1JQ0Z5YzNWaWJXbDBkR1Z5Vkhsd1pYTXVkR1Z6ZENnZ2RIbHdaU0FwSUNZbVhHNWNkRngwWEhSY2RDZ2dkR2hwY3k1amFHVmphMlZrSUh4OElDRnlZMmhsWTJ0aFlteGxWSGx3WlM1MFpYTjBLQ0IwZVhCbElDa2dLVHRjYmx4MFhIUjlJQ2t1YldGd0tDQm1kVzVqZEdsdmJpZ2dYMmtzSUdWc1pXMGdLU0I3WEc1Y2RGeDBYSFIyWVhJZ2RtRnNJRDBnYWxGMVpYSjVLQ0IwYUdseklDa3VkbUZzS0NrN1hHNWNibHgwWEhSY2RHbG1JQ2dnZG1Gc0lEMDlJRzUxYkd3Z0tTQjdYRzVjZEZ4MFhIUmNkSEpsZEhWeWJpQnVkV3hzTzF4dVhIUmNkRngwZlZ4dVhHNWNkRngwWEhScFppQW9JRUZ5Y21GNUxtbHpRWEp5WVhrb0lIWmhiQ0FwSUNrZ2UxeHVYSFJjZEZ4MFhIUnlaWFIxY200Z2FsRjFaWEo1TG0xaGNDZ2dkbUZzTENCbWRXNWpkR2x2YmlnZ2RtRnNJQ2tnZTF4dVhIUmNkRngwWEhSY2RISmxkSFZ5YmlCN0lHNWhiV1U2SUdWc1pXMHVibUZ0WlN3Z2RtRnNkV1U2SUhaaGJDNXlaWEJzWVdObEtDQnlRMUpNUml3Z1hDSmNYSEpjWEc1Y0lpQXBJSDA3WEc1Y2RGeDBYSFJjZEgwZ0tUdGNibHgwWEhSY2RIMWNibHh1WEhSY2RGeDBjbVYwZFhKdUlIc2dibUZ0WlRvZ1pXeGxiUzV1WVcxbExDQjJZV3gxWlRvZ2RtRnNMbkpsY0d4aFkyVW9JSEpEVWt4R0xDQmNJbHhjY2x4Y2Jsd2lJQ2tnZlR0Y2JseDBYSFI5SUNrdVoyVjBLQ2s3WEc1Y2RIMWNibjBnS1R0Y2JseHVYRzUyWVhKY2JseDBjakl3SUQwZ0x5VXlNQzluTEZ4dVhIUnlhR0Z6YUNBOUlDOGpMaW9rTHl4Y2JseDBjbUZ1ZEdsRFlXTm9aU0E5SUM4b1d6OG1YU2xmUFZ0ZUpsMHFMeXhjYmx4MGNtaGxZV1JsY25NZ1BTQXZYaWd1S2o4cE9sc2dYRngwWFNvb1cxNWNYSEpjWEc1ZEtpa2tMMjFuTEZ4dVhHNWNkQzh2SUhSeVlXTXROelkxTXl3Z2RISmhZeTA0TVRJMUxDQjBjbUZqTFRneE5USTZJR3h2WTJGc0lIQnliM1J2WTI5c0lHUmxkR1ZqZEdsdmJseHVYSFJ5Ykc5allXeFFjbTkwYjJOdmJDQTlJQzllS0Q4NllXSnZkWFI4WVhCd2ZHRndjQzF6ZEc5eVlXZGxmQzRyTFdWNGRHVnVjMmx2Ym54bWFXeGxmSEpsYzN4M2FXUm5aWFFwT2lRdkxGeHVYSFJ5Ym05RGIyNTBaVzUwSUQwZ0wxNG9QenBIUlZSOFNFVkJSQ2trTHl4Y2JseDBjbkJ5YjNSdlkyOXNJRDBnTDE1Y1hDOWNYQzh2TEZ4dVhHNWNkQzhxSUZCeVpXWnBiSFJsY25OY2JseDBJQ29nTVNrZ1ZHaGxlU0JoY21VZ2RYTmxablZzSUhSdklHbHVkSEp2WkhWalpTQmpkWE4wYjIwZ1pHRjBZVlI1Y0dWeklDaHpaV1VnWVdwaGVDOXFjMjl1Y0M1cWN5Qm1iM0lnWVc0Z1pYaGhiWEJzWlNsY2JseDBJQ29nTWlrZ1ZHaGxjMlVnWVhKbElHTmhiR3hsWkRwY2JseDBJQ29nSUNBZ0xTQkNSVVpQVWtVZ1lYTnJhVzVuSUdadmNpQmhJSFJ5WVc1emNHOXlkRnh1WEhRZ0tpQWdJQ0F0SUVGR1ZFVlNJSEJoY21GdElITmxjbWxoYkdsNllYUnBiMjRnS0hNdVpHRjBZU0JwY3lCaElITjBjbWx1WnlCcFppQnpMbkJ5YjJObGMzTkVZWFJoSUdseklIUnlkV1VwWEc1Y2RDQXFJRE1wSUd0bGVTQnBjeUIwYUdVZ1pHRjBZVlI1Y0dWY2JseDBJQ29nTkNrZ2RHaGxJR05oZEdOb1lXeHNJSE41YldKdmJDQmNJaXBjSWlCallXNGdZbVVnZFhObFpGeHVYSFFnS2lBMUtTQmxlR1ZqZFhScGIyNGdkMmxzYkNCemRHRnlkQ0IzYVhSb0lIUnlZVzV6Y0c5eWRDQmtZWFJoVkhsd1pTQmhibVFnVkVoRlRpQmpiMjUwYVc1MVpTQmtiM2R1SUhSdklGd2lLbHdpSUdsbUlHNWxaV1JsWkZ4dVhIUWdLaTljYmx4MGNISmxabWxzZEdWeWN5QTlJSHQ5TEZ4dVhHNWNkQzhxSUZSeVlXNXpjRzl5ZEhNZ1ltbHVaR2x1WjNOY2JseDBJQ29nTVNrZ2EyVjVJR2x6SUhSb1pTQmtZWFJoVkhsd1pWeHVYSFFnS2lBeUtTQjBhR1VnWTJGMFkyaGhiR3dnYzNsdFltOXNJRndpS2x3aUlHTmhiaUJpWlNCMWMyVmtYRzVjZENBcUlETXBJSE5sYkdWamRHbHZiaUIzYVd4c0lITjBZWEowSUhkcGRHZ2dkSEpoYm5Od2IzSjBJR1JoZEdGVWVYQmxJR0Z1WkNCVVNFVk9JR2R2SUhSdklGd2lLbHdpSUdsbUlHNWxaV1JsWkZ4dVhIUWdLaTljYmx4MGRISmhibk53YjNKMGN5QTlJSHQ5TEZ4dVhHNWNkQzh2SUVGMmIybGtJR052YlcxbGJuUXRjSEp2Ykc5bklHTm9ZWElnYzJWeGRXVnVZMlVnS0hSeVlXTXRNVEF3T1RncE95QnRkWE4wSUdGd2NHVmhjMlVnYkdsdWRDQmhibVFnWlhaaFpHVWdZMjl0Y0hKbGMzTnBiMjVjYmx4MFlXeHNWSGx3WlhNZ1BTQmNJaW92WENJdVkyOXVZMkYwS0NCY0lpcGNJaUFwTEZ4dVhHNWNkQzh2SUVGdVkyaHZjaUIwWVdjZ1ptOXlJSEJoY25OcGJtY2dkR2hsSUdSdlkzVnRaVzUwSUc5eWFXZHBibHh1WEhSdmNtbG5hVzVCYm1Ob2IzSWdQU0JrYjJOMWJXVnVkQzVqY21WaGRHVkZiR1Z0Wlc1MEtDQmNJbUZjSWlBcE8xeHVYRzV2Y21sbmFXNUJibU5vYjNJdWFISmxaaUE5SUd4dlkyRjBhVzl1TG1oeVpXWTdYRzVjYmk4dklFSmhjMlVnWENKamIyNXpkSEoxWTNSdmNsd2lJR1p2Y2lCcVVYVmxjbmt1WVdwaGVGQnlaV1pwYkhSbGNpQmhibVFnYWxGMVpYSjVMbUZxWVhoVWNtRnVjM0J2Y25SY2JtWjFibU4wYVc5dUlHRmtaRlJ2VUhKbFptbHNkR1Z5YzA5eVZISmhibk53YjNKMGN5Z2djM1J5ZFdOMGRYSmxJQ2tnZTF4dVhHNWNkQzh2SUdSaGRHRlVlWEJsUlhod2NtVnpjMmx2YmlCcGN5QnZjSFJwYjI1aGJDQmhibVFnWkdWbVlYVnNkSE1nZEc4Z1hDSXFYQ0pjYmx4MGNtVjBkWEp1SUdaMWJtTjBhVzl1S0NCa1lYUmhWSGx3WlVWNGNISmxjM05wYjI0c0lHWjFibU1nS1NCN1hHNWNibHgwWEhScFppQW9JSFI1Y0dWdlppQmtZWFJoVkhsd1pVVjRjSEpsYzNOcGIyNGdJVDA5SUZ3aWMzUnlhVzVuWENJZ0tTQjdYRzVjZEZ4MFhIUm1kVzVqSUQwZ1pHRjBZVlI1Y0dWRmVIQnlaWE56YVc5dU8xeHVYSFJjZEZ4MFpHRjBZVlI1Y0dWRmVIQnlaWE56YVc5dUlEMGdYQ0lxWENJN1hHNWNkRngwZlZ4dVhHNWNkRngwZG1GeUlHUmhkR0ZVZVhCbExGeHVYSFJjZEZ4MGFTQTlJREFzWEc1Y2RGeDBYSFJrWVhSaFZIbHdaWE1nUFNCa1lYUmhWSGx3WlVWNGNISmxjM05wYjI0dWRHOU1iM2RsY2tOaGMyVW9LUzV0WVhSamFDZ2djbTV2ZEdoMGJXeDNhR2wwWlNBcElIeDhJRnRkTzF4dVhHNWNkRngwYVdZZ0tDQnBjMFoxYm1OMGFXOXVLQ0JtZFc1aklDa2dLU0I3WEc1Y2JseDBYSFJjZEM4dklFWnZjaUJsWVdOb0lHUmhkR0ZVZVhCbElHbHVJSFJvWlNCa1lYUmhWSGx3WlVWNGNISmxjM05wYjI1Y2JseDBYSFJjZEhkb2FXeGxJQ2dnS0NCa1lYUmhWSGx3WlNBOUlHUmhkR0ZVZVhCbGMxc2dhU3NySUYwZ0tTQXBJSHRjYmx4dVhIUmNkRngwWEhRdkx5QlFjbVZ3Wlc1a0lHbG1JSEpsY1hWbGMzUmxaRnh1WEhSY2RGeDBYSFJwWmlBb0lHUmhkR0ZVZVhCbFd5QXdJRjBnUFQwOUlGd2lLMXdpSUNrZ2UxeHVYSFJjZEZ4MFhIUmNkR1JoZEdGVWVYQmxJRDBnWkdGMFlWUjVjR1V1YzJ4cFkyVW9JREVnS1NCOGZDQmNJaXBjSWp0Y2JseDBYSFJjZEZ4MFhIUW9JSE4wY25WamRIVnlaVnNnWkdGMFlWUjVjR1VnWFNBOUlITjBjblZqZEhWeVpWc2daR0YwWVZSNWNHVWdYU0I4ZkNCYlhTQXBMblZ1YzJocFpuUW9JR1oxYm1NZ0tUdGNibHh1WEhSY2RGeDBYSFF2THlCUGRHaGxjbmRwYzJVZ1lYQndaVzVrWEc1Y2RGeDBYSFJjZEgwZ1pXeHpaU0I3WEc1Y2RGeDBYSFJjZEZ4MEtDQnpkSEoxWTNSMWNtVmJJR1JoZEdGVWVYQmxJRjBnUFNCemRISjFZM1IxY21WYklHUmhkR0ZVZVhCbElGMGdmSHdnVzEwZ0tTNXdkWE5vS0NCbWRXNWpJQ2s3WEc1Y2RGeDBYSFJjZEgxY2JseDBYSFJjZEgxY2JseDBYSFI5WEc1Y2RIMDdYRzU5WEc1Y2JpOHZJRUpoYzJVZ2FXNXpjR1ZqZEdsdmJpQm1kVzVqZEdsdmJpQm1iM0lnY0hKbFptbHNkR1Z5Y3lCaGJtUWdkSEpoYm5Od2IzSjBjMXh1Wm5WdVkzUnBiMjRnYVc1emNHVmpkRkJ5WldacGJIUmxjbk5QY2xSeVlXNXpjRzl5ZEhNb0lITjBjblZqZEhWeVpTd2diM0IwYVc5dWN5d2diM0pwWjJsdVlXeFBjSFJwYjI1ekxDQnFjVmhJVWlBcElIdGNibHh1WEhSMllYSWdhVzV6Y0dWamRHVmtJRDBnZTMwc1hHNWNkRngwYzJWbGEybHVaMVJ5WVc1emNHOXlkQ0E5SUNnZ2MzUnlkV04wZFhKbElEMDlQU0IwY21GdWMzQnZjblJ6SUNrN1hHNWNibHgwWm5WdVkzUnBiMjRnYVc1emNHVmpkQ2dnWkdGMFlWUjVjR1VnS1NCN1hHNWNkRngwZG1GeUlITmxiR1ZqZEdWa08xeHVYSFJjZEdsdWMzQmxZM1JsWkZzZ1pHRjBZVlI1Y0dVZ1hTQTlJSFJ5ZFdVN1hHNWNkRngwYWxGMVpYSjVMbVZoWTJnb0lITjBjblZqZEhWeVpWc2daR0YwWVZSNWNHVWdYU0I4ZkNCYlhTd2dablZ1WTNScGIyNG9JRjhzSUhCeVpXWnBiSFJsY2s5eVJtRmpkRzl5ZVNBcElIdGNibHgwWEhSY2RIWmhjaUJrWVhSaFZIbHdaVTl5VkhKaGJuTndiM0owSUQwZ2NISmxabWxzZEdWeVQzSkdZV04wYjNKNUtDQnZjSFJwYjI1ekxDQnZjbWxuYVc1aGJFOXdkR2x2Ym5Nc0lHcHhXRWhTSUNrN1hHNWNkRngwWEhScFppQW9JSFI1Y0dWdlppQmtZWFJoVkhsd1pVOXlWSEpoYm5Od2IzSjBJRDA5UFNCY0luTjBjbWx1WjF3aUlDWW1YRzVjZEZ4MFhIUmNkQ0Z6WldWcmFXNW5WSEpoYm5Od2IzSjBJQ1ltSUNGcGJuTndaV04wWldSYklHUmhkR0ZVZVhCbFQzSlVjbUZ1YzNCdmNuUWdYU0FwSUh0Y2JseHVYSFJjZEZ4MFhIUnZjSFJwYjI1ekxtUmhkR0ZVZVhCbGN5NTFibk5vYVdaMEtDQmtZWFJoVkhsd1pVOXlWSEpoYm5Od2IzSjBJQ2s3WEc1Y2RGeDBYSFJjZEdsdWMzQmxZM1FvSUdSaGRHRlVlWEJsVDNKVWNtRnVjM0J2Y25RZ0tUdGNibHgwWEhSY2RGeDBjbVYwZFhKdUlHWmhiSE5sTzF4dVhIUmNkRngwZlNCbGJITmxJR2xtSUNnZ2MyVmxhMmx1WjFSeVlXNXpjRzl5ZENBcElIdGNibHgwWEhSY2RGeDBjbVYwZFhKdUlDRW9JSE5sYkdWamRHVmtJRDBnWkdGMFlWUjVjR1ZQY2xSeVlXNXpjRzl5ZENBcE8xeHVYSFJjZEZ4MGZWeHVYSFJjZEgwZ0tUdGNibHgwWEhSeVpYUjFjbTRnYzJWc1pXTjBaV1E3WEc1Y2RIMWNibHh1WEhSeVpYUjFjbTRnYVc1emNHVmpkQ2dnYjNCMGFXOXVjeTVrWVhSaFZIbHdaWE5iSURBZ1hTQXBJSHg4SUNGcGJuTndaV04wWldSYklGd2lLbHdpSUYwZ0ppWWdhVzV6Y0dWamRDZ2dYQ0lxWENJZ0tUdGNibjFjYmx4dUx5OGdRU0J6Y0dWamFXRnNJR1Y0ZEdWdVpDQm1iM0lnWVdwaGVDQnZjSFJwYjI1elhHNHZMeUIwYUdGMElIUmhhMlZ6SUZ3aVpteGhkRndpSUc5d2RHbHZibk1nS0c1dmRDQjBieUJpWlNCa1pXVndJR1Y0ZEdWdVpHVmtLVnh1THk4Z1JtbDRaWE1nZEhKaFl5MDVPRGczWEc1bWRXNWpkR2x2YmlCaGFtRjRSWGgwWlc1a0tDQjBZWEpuWlhRc0lITnlZeUFwSUh0Y2JseDBkbUZ5SUd0bGVTd2daR1ZsY0N4Y2JseDBYSFJtYkdGMFQzQjBhVzl1Y3lBOUlHcFJkV1Z5ZVM1aGFtRjRVMlYwZEdsdVozTXVabXhoZEU5d2RHbHZibk1nZkh3Z2UzMDdYRzVjYmx4MFptOXlJQ2dnYTJWNUlHbHVJSE55WXlBcElIdGNibHgwWEhScFppQW9JSE55WTFzZ2EyVjVJRjBnSVQwOUlIVnVaR1ZtYVc1bFpDQXBJSHRjYmx4MFhIUmNkQ2dnWm14aGRFOXdkR2x2Ym5OYklHdGxlU0JkSUQ4Z2RHRnlaMlYwSURvZ0tDQmtaV1Z3SUh4OElDZ2daR1ZsY0NBOUlIdDlJQ2tnS1NBcFd5QnJaWGtnWFNBOUlITnlZMXNnYTJWNUlGMDdYRzVjZEZ4MGZWeHVYSFI5WEc1Y2RHbG1JQ2dnWkdWbGNDQXBJSHRjYmx4MFhIUnFVWFZsY25rdVpYaDBaVzVrS0NCMGNuVmxMQ0IwWVhKblpYUXNJR1JsWlhBZ0tUdGNibHgwZlZ4dVhHNWNkSEpsZEhWeWJpQjBZWEpuWlhRN1hHNTlYRzVjYmk4cUlFaGhibVJzWlhNZ2NtVnpjRzl1YzJWeklIUnZJR0Z1SUdGcVlYZ2djbVZ4ZFdWemREcGNiaUFxSUMwZ1ptbHVaSE1nZEdobElISnBaMmgwSUdSaGRHRlVlWEJsSUNodFpXUnBZWFJsY3lCaVpYUjNaV1Z1SUdOdmJuUmxiblF0ZEhsd1pTQmhibVFnWlhod1pXTjBaV1FnWkdGMFlWUjVjR1VwWEc0Z0tpQXRJSEpsZEhWeWJuTWdkR2hsSUdOdmNuSmxjM0J2Ym1ScGJtY2djbVZ6Y0c5dWMyVmNiaUFxTDF4dVpuVnVZM1JwYjI0Z1lXcGhlRWhoYm1Sc1pWSmxjM0J2Ym5ObGN5Z2djeXdnYW5GWVNGSXNJSEpsYzNCdmJuTmxjeUFwSUh0Y2JseHVYSFIyWVhJZ1kzUXNJSFI1Y0dVc0lHWnBibUZzUkdGMFlWUjVjR1VzSUdacGNuTjBSR0YwWVZSNWNHVXNYRzVjZEZ4MFkyOXVkR1Z1ZEhNZ1BTQnpMbU52Ym5SbGJuUnpMRnh1WEhSY2RHUmhkR0ZVZVhCbGN5QTlJSE11WkdGMFlWUjVjR1Z6TzF4dVhHNWNkQzh2SUZKbGJXOTJaU0JoZFhSdklHUmhkR0ZVZVhCbElHRnVaQ0JuWlhRZ1kyOXVkR1Z1ZEMxMGVYQmxJR2x1SUhSb1pTQndjbTlqWlhOelhHNWNkSGRvYVd4bElDZ2daR0YwWVZSNWNHVnpXeUF3SUYwZ1BUMDlJRndpS2x3aUlDa2dlMXh1WEhSY2RHUmhkR0ZVZVhCbGN5NXphR2xtZENncE8xeHVYSFJjZEdsbUlDZ2dZM1FnUFQwOUlIVnVaR1ZtYVc1bFpDQXBJSHRjYmx4MFhIUmNkR04wSUQwZ2N5NXRhVzFsVkhsd1pTQjhmQ0JxY1ZoSVVpNW5aWFJTWlhOd2IyNXpaVWhsWVdSbGNpZ2dYQ0pEYjI1MFpXNTBMVlI1Y0dWY0lpQXBPMXh1WEhSY2RIMWNibHgwZlZ4dVhHNWNkQzh2SUVOb1pXTnJJR2xtSUhkbEozSmxJR1JsWVd4cGJtY2dkMmwwYUNCaElHdHViM2R1SUdOdmJuUmxiblF0ZEhsd1pWeHVYSFJwWmlBb0lHTjBJQ2tnZTF4dVhIUmNkR1p2Y2lBb0lIUjVjR1VnYVc0Z1kyOXVkR1Z1ZEhNZ0tTQjdYRzVjZEZ4MFhIUnBaaUFvSUdOdmJuUmxiblJ6V3lCMGVYQmxJRjBnSmlZZ1kyOXVkR1Z1ZEhOYklIUjVjR1VnWFM1MFpYTjBLQ0JqZENBcElDa2dlMXh1WEhSY2RGeDBYSFJrWVhSaFZIbHdaWE11ZFc1emFHbG1kQ2dnZEhsd1pTQXBPMXh1WEhSY2RGeDBYSFJpY21WaGF6dGNibHgwWEhSY2RIMWNibHgwWEhSOVhHNWNkSDFjYmx4dVhIUXZMeUJEYUdWamF5QjBieUJ6WldVZ2FXWWdkMlVnYUdGMlpTQmhJSEpsYzNCdmJuTmxJR1p2Y2lCMGFHVWdaWGh3WldOMFpXUWdaR0YwWVZSNWNHVmNibHgwYVdZZ0tDQmtZWFJoVkhsd1pYTmJJREFnWFNCcGJpQnlaWE53YjI1elpYTWdLU0I3WEc1Y2RGeDBabWx1WVd4RVlYUmhWSGx3WlNBOUlHUmhkR0ZVZVhCbGMxc2dNQ0JkTzF4dVhIUjlJR1ZzYzJVZ2UxeHVYRzVjZEZ4MEx5OGdWSEo1SUdOdmJuWmxjblJwWW14bElHUmhkR0ZVZVhCbGMxeHVYSFJjZEdadmNpQW9JSFI1Y0dVZ2FXNGdjbVZ6Y0c5dWMyVnpJQ2tnZTF4dVhIUmNkRngwYVdZZ0tDQWhaR0YwWVZSNWNHVnpXeUF3SUYwZ2ZId2djeTVqYjI1MlpYSjBaWEp6V3lCMGVYQmxJQ3NnWENJZ1hDSWdLeUJrWVhSaFZIbHdaWE5iSURBZ1hTQmRJQ2tnZTF4dVhIUmNkRngwWEhSbWFXNWhiRVJoZEdGVWVYQmxJRDBnZEhsd1pUdGNibHgwWEhSY2RGeDBZbkpsWVdzN1hHNWNkRngwWEhSOVhHNWNkRngwWEhScFppQW9JQ0ZtYVhKemRFUmhkR0ZVZVhCbElDa2dlMXh1WEhSY2RGeDBYSFJtYVhKemRFUmhkR0ZVZVhCbElEMGdkSGx3WlR0Y2JseDBYSFJjZEgxY2JseDBYSFI5WEc1Y2JseDBYSFF2THlCUGNpQnFkWE4wSUhWelpTQm1hWEp6ZENCdmJtVmNibHgwWEhSbWFXNWhiRVJoZEdGVWVYQmxJRDBnWm1sdVlXeEVZWFJoVkhsd1pTQjhmQ0JtYVhKemRFUmhkR0ZVZVhCbE8xeHVYSFI5WEc1Y2JseDBMeThnU1dZZ2QyVWdabTkxYm1RZ1lTQmtZWFJoVkhsd1pWeHVYSFF2THlCWFpTQmhaR1FnZEdobElHUmhkR0ZVZVhCbElIUnZJSFJvWlNCc2FYTjBJR2xtSUc1bFpXUmxaRnh1WEhRdkx5QmhibVFnY21WMGRYSnVJSFJvWlNCamIzSnlaWE53YjI1a2FXNW5JSEpsYzNCdmJuTmxYRzVjZEdsbUlDZ2dabWx1WVd4RVlYUmhWSGx3WlNBcElIdGNibHgwWEhScFppQW9JR1pwYm1Gc1JHRjBZVlI1Y0dVZ0lUMDlJR1JoZEdGVWVYQmxjMXNnTUNCZElDa2dlMXh1WEhSY2RGeDBaR0YwWVZSNWNHVnpMblZ1YzJocFpuUW9JR1pwYm1Gc1JHRjBZVlI1Y0dVZ0tUdGNibHgwWEhSOVhHNWNkRngwY21WMGRYSnVJSEpsYzNCdmJuTmxjMXNnWm1sdVlXeEVZWFJoVkhsd1pTQmRPMXh1WEhSOVhHNTlYRzVjYmk4cUlFTm9ZV2x1SUdOdmJuWmxjbk5wYjI1eklHZHBkbVZ1SUhSb1pTQnlaWEYxWlhOMElHRnVaQ0IwYUdVZ2IzSnBaMmx1WVd3Z2NtVnpjRzl1YzJWY2JpQXFJRUZzYzI4Z2MyVjBjeUIwYUdVZ2NtVnpjRzl1YzJWWVdGZ2dabWxsYkdSeklHOXVJSFJvWlNCcWNWaElVaUJwYm5OMFlXNWpaVnh1SUNvdlhHNW1kVzVqZEdsdmJpQmhhbUY0UTI5dWRtVnlkQ2dnY3l3Z2NtVnpjRzl1YzJVc0lHcHhXRWhTTENCcGMxTjFZMk5sYzNNZ0tTQjdYRzVjZEhaaGNpQmpiMjUyTWl3Z1kzVnljbVZ1ZEN3Z1kyOXVkaXdnZEcxd0xDQndjbVYyTEZ4dVhIUmNkR052Ym5abGNuUmxjbk1nUFNCN2ZTeGNibHh1WEhSY2RDOHZJRmR2Y21zZ2QybDBhQ0JoSUdOdmNIa2diMllnWkdGMFlWUjVjR1Z6SUdsdUlHTmhjMlVnZDJVZ2JtVmxaQ0IwYnlCdGIyUnBabmtnYVhRZ1ptOXlJR052Ym5abGNuTnBiMjVjYmx4MFhIUmtZWFJoVkhsd1pYTWdQU0J6TG1SaGRHRlVlWEJsY3k1emJHbGpaU2dwTzF4dVhHNWNkQzh2SUVOeVpXRjBaU0JqYjI1MlpYSjBaWEp6SUcxaGNDQjNhWFJvSUd4dmQyVnlZMkZ6WldRZ2EyVjVjMXh1WEhScFppQW9JR1JoZEdGVWVYQmxjMXNnTVNCZElDa2dlMXh1WEhSY2RHWnZjaUFvSUdOdmJuWWdhVzRnY3k1amIyNTJaWEowWlhKeklDa2dlMXh1WEhSY2RGeDBZMjl1ZG1WeWRHVnljMXNnWTI5dWRpNTBiMHh2ZDJWeVEyRnpaU2dwSUYwZ1BTQnpMbU52Ym5abGNuUmxjbk5iSUdOdmJuWWdYVHRjYmx4MFhIUjlYRzVjZEgxY2JseHVYSFJqZFhKeVpXNTBJRDBnWkdGMFlWUjVjR1Z6TG5Ob2FXWjBLQ2s3WEc1Y2JseDBMeThnUTI5dWRtVnlkQ0IwYnlCbFlXTm9JSE5sY1hWbGJuUnBZV3dnWkdGMFlWUjVjR1ZjYmx4MGQyaHBiR1VnS0NCamRYSnlaVzUwSUNrZ2UxeHVYRzVjZEZ4MGFXWWdLQ0J6TG5KbGMzQnZibk5sUm1sbGJHUnpXeUJqZFhKeVpXNTBJRjBnS1NCN1hHNWNkRngwWEhScWNWaElVbHNnY3k1eVpYTndiMjV6WlVacFpXeGtjMXNnWTNWeWNtVnVkQ0JkSUYwZ1BTQnlaWE53YjI1elpUdGNibHgwWEhSOVhHNWNibHgwWEhRdkx5QkJjSEJzZVNCMGFHVWdaR0YwWVVacGJIUmxjaUJwWmlCd2NtOTJhV1JsWkZ4dVhIUmNkR2xtSUNnZ0lYQnlaWFlnSmlZZ2FYTlRkV05qWlhOeklDWW1JSE11WkdGMFlVWnBiSFJsY2lBcElIdGNibHgwWEhSY2RISmxjM0J2Ym5ObElEMGdjeTVrWVhSaFJtbHNkR1Z5S0NCeVpYTndiMjV6WlN3Z2N5NWtZWFJoVkhsd1pTQXBPMXh1WEhSY2RIMWNibHh1WEhSY2RIQnlaWFlnUFNCamRYSnlaVzUwTzF4dVhIUmNkR04xY25KbGJuUWdQU0JrWVhSaFZIbHdaWE11YzJocFpuUW9LVHRjYmx4dVhIUmNkR2xtSUNnZ1kzVnljbVZ1ZENBcElIdGNibHh1WEhSY2RGeDBMeThnVkdobGNtVW5jeUJ2Ym14NUlIZHZjbXNnZEc4Z1pHOGdhV1lnWTNWeWNtVnVkQ0JrWVhSaFZIbHdaU0JwY3lCdWIyNHRZWFYwYjF4dVhIUmNkRngwYVdZZ0tDQmpkWEp5Wlc1MElEMDlQU0JjSWlwY0lpQXBJSHRjYmx4dVhIUmNkRngwWEhSamRYSnlaVzUwSUQwZ2NISmxkanRjYmx4dVhIUmNkRngwTHk4Z1EyOXVkbVZ5ZENCeVpYTndiMjV6WlNCcFppQndjbVYySUdSaGRHRlVlWEJsSUdseklHNXZiaTFoZFhSdklHRnVaQ0JrYVdabVpYSnpJR1p5YjIwZ1kzVnljbVZ1ZEZ4dVhIUmNkRngwZlNCbGJITmxJR2xtSUNnZ2NISmxkaUFoUFQwZ1hDSXFYQ0lnSmlZZ2NISmxkaUFoUFQwZ1kzVnljbVZ1ZENBcElIdGNibHh1WEhSY2RGeDBYSFF2THlCVFpXVnJJR0VnWkdseVpXTjBJR052Ym5abGNuUmxjbHh1WEhSY2RGeDBYSFJqYjI1MklEMGdZMjl1ZG1WeWRHVnljMXNnY0hKbGRpQXJJRndpSUZ3aUlDc2dZM1Z5Y21WdWRDQmRJSHg4SUdOdmJuWmxjblJsY25OYklGd2lLaUJjSWlBcklHTjFjbkpsYm5RZ1hUdGNibHh1WEhSY2RGeDBYSFF2THlCSlppQnViMjVsSUdadmRXNWtMQ0J6WldWcklHRWdjR0ZwY2x4dVhIUmNkRngwWEhScFppQW9JQ0ZqYjI1MklDa2dlMXh1WEhSY2RGeDBYSFJjZEdadmNpQW9JR052Ym5ZeUlHbHVJR052Ym5abGNuUmxjbk1nS1NCN1hHNWNibHgwWEhSY2RGeDBYSFJjZEM4dklFbG1JR052Ym5ZeUlHOTFkSEIxZEhNZ1kzVnljbVZ1ZEZ4dVhIUmNkRngwWEhSY2RGeDBkRzF3SUQwZ1kyOXVkakl1YzNCc2FYUW9JRndpSUZ3aUlDazdYRzVjZEZ4MFhIUmNkRngwWEhScFppQW9JSFJ0Y0ZzZ01TQmRJRDA5UFNCamRYSnlaVzUwSUNrZ2UxeHVYRzVjZEZ4MFhIUmNkRngwWEhSY2RDOHZJRWxtSUhCeVpYWWdZMkZ1SUdKbElHTnZiblpsY25SbFpDQjBieUJoWTJObGNIUmxaQ0JwYm5CMWRGeHVYSFJjZEZ4MFhIUmNkRngwWEhSamIyNTJJRDBnWTI5dWRtVnlkR1Z5YzFzZ2NISmxkaUFySUZ3aUlGd2lJQ3NnZEcxd1d5QXdJRjBnWFNCOGZGeHVYSFJjZEZ4MFhIUmNkRngwWEhSY2RHTnZiblpsY25SbGNuTmJJRndpS2lCY0lpQXJJSFJ0Y0ZzZ01DQmRJRjA3WEc1Y2RGeDBYSFJjZEZ4MFhIUmNkR2xtSUNnZ1kyOXVkaUFwSUh0Y2JseHVYSFJjZEZ4MFhIUmNkRngwWEhSY2RDOHZJRU52Ym1SbGJuTmxJR1Z4ZFdsMllXeGxibU5sSUdOdmJuWmxjblJsY25OY2JseDBYSFJjZEZ4MFhIUmNkRngwWEhScFppQW9JR052Ym5ZZ1BUMDlJSFJ5ZFdVZ0tTQjdYRzVjZEZ4MFhIUmNkRngwWEhSY2RGeDBYSFJqYjI1MklEMGdZMjl1ZG1WeWRHVnljMXNnWTI5dWRqSWdYVHRjYmx4dVhIUmNkRngwWEhSY2RGeDBYSFJjZEM4dklFOTBhR1Z5ZDJselpTd2dhVzV6WlhKMElIUm9aU0JwYm5SbGNtMWxaR2xoZEdVZ1pHRjBZVlI1Y0dWY2JseDBYSFJjZEZ4MFhIUmNkRngwWEhSOUlHVnNjMlVnYVdZZ0tDQmpiMjUyWlhKMFpYSnpXeUJqYjI1Mk1pQmRJQ0U5UFNCMGNuVmxJQ2tnZTF4dVhIUmNkRngwWEhSY2RGeDBYSFJjZEZ4MFkzVnljbVZ1ZENBOUlIUnRjRnNnTUNCZE8xeHVYSFJjZEZ4MFhIUmNkRngwWEhSY2RGeDBaR0YwWVZSNWNHVnpMblZ1YzJocFpuUW9JSFJ0Y0ZzZ01TQmRJQ2s3WEc1Y2RGeDBYSFJjZEZ4MFhIUmNkRngwZlZ4dVhIUmNkRngwWEhSY2RGeDBYSFJjZEdKeVpXRnJPMXh1WEhSY2RGeDBYSFJjZEZ4MFhIUjlYRzVjZEZ4MFhIUmNkRngwWEhSOVhHNWNkRngwWEhSY2RGeDBmVnh1WEhSY2RGeDBYSFI5WEc1Y2JseDBYSFJjZEZ4MEx5OGdRWEJ3YkhrZ1kyOXVkbVZ5ZEdWeUlDaHBaaUJ1YjNRZ1lXNGdaWEYxYVhaaGJHVnVZMlVwWEc1Y2RGeDBYSFJjZEdsbUlDZ2dZMjl1ZGlBaFBUMGdkSEoxWlNBcElIdGNibHh1WEhSY2RGeDBYSFJjZEM4dklGVnViR1Z6Y3lCbGNuSnZjbk1nWVhKbElHRnNiRzkzWldRZ2RHOGdZblZpWW14bExDQmpZWFJqYUNCaGJtUWdjbVYwZFhKdUlIUm9aVzFjYmx4MFhIUmNkRngwWEhScFppQW9JR052Ym5ZZ0ppWWdjeTUwYUhKdmQzTWdLU0I3WEc1Y2RGeDBYSFJjZEZ4MFhIUnlaWE53YjI1elpTQTlJR052Ym5Zb0lISmxjM0J2Ym5ObElDazdYRzVjZEZ4MFhIUmNkRngwZlNCbGJITmxJSHRjYmx4MFhIUmNkRngwWEhSY2RIUnllU0I3WEc1Y2RGeDBYSFJjZEZ4MFhIUmNkSEpsYzNCdmJuTmxJRDBnWTI5dWRpZ2djbVZ6Y0c5dWMyVWdLVHRjYmx4MFhIUmNkRngwWEhSY2RIMGdZMkYwWTJnZ0tDQmxJQ2tnZTF4dVhIUmNkRngwWEhSY2RGeDBYSFJ5WlhSMWNtNGdlMXh1WEhSY2RGeDBYSFJjZEZ4MFhIUmNkSE4wWVhSbE9pQmNJbkJoY25ObGNtVnljbTl5WENJc1hHNWNkRngwWEhSY2RGeDBYSFJjZEZ4MFpYSnliM0k2SUdOdmJuWWdQeUJsSURvZ1hDSk9ieUJqYjI1MlpYSnphVzl1SUdaeWIyMGdYQ0lnS3lCd2NtVjJJQ3NnWENJZ2RHOGdYQ0lnS3lCamRYSnlaVzUwWEc1Y2RGeDBYSFJjZEZ4MFhIUmNkSDA3WEc1Y2RGeDBYSFJjZEZ4MFhIUjlYRzVjZEZ4MFhIUmNkRngwZlZ4dVhIUmNkRngwWEhSOVhHNWNkRngwWEhSOVhHNWNkRngwZlZ4dVhIUjlYRzVjYmx4MGNtVjBkWEp1SUhzZ2MzUmhkR1U2SUZ3aWMzVmpZMlZ6YzF3aUxDQmtZWFJoT2lCeVpYTndiMjV6WlNCOU8xeHVmVnh1WEc1cVVYVmxjbmt1WlhoMFpXNWtLQ0I3WEc1Y2JseDBMeThnUTI5MWJuUmxjaUJtYjNJZ2FHOXNaR2x1WnlCMGFHVWdiblZ0WW1WeUlHOW1JR0ZqZEdsMlpTQnhkV1Z5YVdWelhHNWNkR0ZqZEdsMlpUb2dNQ3hjYmx4dVhIUXZMeUJNWVhOMExVMXZaR2xtYVdWa0lHaGxZV1JsY2lCallXTm9aU0JtYjNJZ2JtVjRkQ0J5WlhGMVpYTjBYRzVjZEd4aGMzUk5iMlJwWm1sbFpEb2dlMzBzWEc1Y2RHVjBZV2M2SUh0OUxGeHVYRzVjZEdGcVlYaFRaWFIwYVc1bmN6b2dlMXh1WEhSY2RIVnliRG9nYkc5allYUnBiMjR1YUhKbFppeGNibHgwWEhSMGVYQmxPaUJjSWtkRlZGd2lMRnh1WEhSY2RHbHpURzlqWVd3NklISnNiMk5oYkZCeWIzUnZZMjlzTG5SbGMzUW9JR3h2WTJGMGFXOXVMbkJ5YjNSdlkyOXNJQ2tzWEc1Y2RGeDBaMnh2WW1Gc09pQjBjblZsTEZ4dVhIUmNkSEJ5YjJObGMzTkVZWFJoT2lCMGNuVmxMRnh1WEhSY2RHRnplVzVqT2lCMGNuVmxMRnh1WEhSY2RHTnZiblJsYm5SVWVYQmxPaUJjSW1Gd2NHeHBZMkYwYVc5dUwzZ3RkM2QzTFdadmNtMHRkWEpzWlc1amIyUmxaRHNnWTJoaGNuTmxkRDFWVkVZdE9Gd2lMRnh1WEc1Y2RGeDBMeXBjYmx4MFhIUjBhVzFsYjNWME9pQXdMRnh1WEhSY2RHUmhkR0U2SUc1MWJHd3NYRzVjZEZ4MFpHRjBZVlI1Y0dVNklHNTFiR3dzWEc1Y2RGeDBkWE5sY201aGJXVTZJRzUxYkd3c1hHNWNkRngwY0dGemMzZHZjbVE2SUc1MWJHd3NYRzVjZEZ4MFkyRmphR1U2SUc1MWJHd3NYRzVjZEZ4MGRHaHliM2R6T2lCbVlXeHpaU3hjYmx4MFhIUjBjbUZrYVhScGIyNWhiRG9nWm1Gc2MyVXNYRzVjZEZ4MGFHVmhaR1Z5Y3pvZ2UzMHNYRzVjZEZ4MEtpOWNibHh1WEhSY2RHRmpZMlZ3ZEhNNklIdGNibHgwWEhSY2RGd2lLbHdpT2lCaGJHeFVlWEJsY3l4Y2JseDBYSFJjZEhSbGVIUTZJRndpZEdWNGRDOXdiR0ZwYmx3aUxGeHVYSFJjZEZ4MGFIUnRiRG9nWENKMFpYaDBMMmgwYld4Y0lpeGNibHgwWEhSY2RIaHRiRG9nWENKaGNIQnNhV05oZEdsdmJpOTRiV3dzSUhSbGVIUXZlRzFzWENJc1hHNWNkRngwWEhScWMyOXVPaUJjSW1Gd2NHeHBZMkYwYVc5dUwycHpiMjRzSUhSbGVIUXZhbUYyWVhOamNtbHdkRndpWEc1Y2RGeDBmU3hjYmx4dVhIUmNkR052Ym5SbGJuUnpPaUI3WEc1Y2RGeDBYSFI0Yld3NklDOWNYR0o0Yld4Y1hHSXZMRnh1WEhSY2RGeDBhSFJ0YkRvZ0wxeGNZbWgwYld3dkxGeHVYSFJjZEZ4MGFuTnZiam9nTDF4Y1ltcHpiMjVjWEdJdlhHNWNkRngwZlN4Y2JseHVYSFJjZEhKbGMzQnZibk5sUm1sbGJHUnpPaUI3WEc1Y2RGeDBYSFI0Yld3NklGd2ljbVZ6Y0c5dWMyVllUVXhjSWl4Y2JseDBYSFJjZEhSbGVIUTZJRndpY21WemNHOXVjMlZVWlhoMFhDSXNYRzVjZEZ4MFhIUnFjMjl1T2lCY0luSmxjM0J2Ym5ObFNsTlBUbHdpWEc1Y2RGeDBmU3hjYmx4dVhIUmNkQzh2SUVSaGRHRWdZMjl1ZG1WeWRHVnljMXh1WEhSY2RDOHZJRXRsZVhNZ2MyVndZWEpoZEdVZ2MyOTFjbU5sSUNodmNpQmpZWFJqYUdGc2JDQmNJaXBjSWlrZ1lXNWtJR1JsYzNScGJtRjBhVzl1SUhSNWNHVnpJSGRwZEdnZ1lTQnphVzVuYkdVZ2MzQmhZMlZjYmx4MFhIUmpiMjUyWlhKMFpYSnpPaUI3WEc1Y2JseDBYSFJjZEM4dklFTnZiblpsY25RZ1lXNTVkR2hwYm1jZ2RHOGdkR1Y0ZEZ4dVhIUmNkRngwWENJcUlIUmxlSFJjSWpvZ1UzUnlhVzVuTEZ4dVhHNWNkRngwWEhRdkx5QlVaWGgwSUhSdklHaDBiV3dnS0hSeWRXVWdQU0J1YnlCMGNtRnVjMlp2Y20xaGRHbHZiaWxjYmx4MFhIUmNkRndpZEdWNGRDQm9kRzFzWENJNklIUnlkV1VzWEc1Y2JseDBYSFJjZEM4dklFVjJZV3gxWVhSbElIUmxlSFFnWVhNZ1lTQnFjMjl1SUdWNGNISmxjM05wYjI1Y2JseDBYSFJjZEZ3aWRHVjRkQ0JxYzI5dVhDSTZJRXBUVDA0dWNHRnljMlVzWEc1Y2JseDBYSFJjZEM4dklGQmhjbk5sSUhSbGVIUWdZWE1nZUcxc1hHNWNkRngwWEhSY0luUmxlSFFnZUcxc1hDSTZJR3BSZFdWeWVTNXdZWEp6WlZoTlRGeHVYSFJjZEgwc1hHNWNibHgwWEhRdkx5QkdiM0lnYjNCMGFXOXVjeUIwYUdGMElITm9iM1ZzWkc0bmRDQmlaU0JrWldWd0lHVjRkR1Z1WkdWa09seHVYSFJjZEM4dklIbHZkU0JqWVc0Z1lXUmtJSGx2ZFhJZ2IzZHVJR04xYzNSdmJTQnZjSFJwYjI1eklHaGxjbVVnYVdaY2JseDBYSFF2THlCaGJtUWdkMmhsYmlCNWIzVWdZM0psWVhSbElHOXVaU0IwYUdGMElITm9iM1ZzWkc0bmRDQmlaVnh1WEhSY2RDOHZJR1JsWlhBZ1pYaDBaVzVrWldRZ0tITmxaU0JoYW1GNFJYaDBaVzVrS1Z4dVhIUmNkR1pzWVhSUGNIUnBiMjV6T2lCN1hHNWNkRngwWEhSMWNtdzZJSFJ5ZFdVc1hHNWNkRngwWEhSamIyNTBaWGgwT2lCMGNuVmxYRzVjZEZ4MGZWeHVYSFI5TEZ4dVhHNWNkQzh2SUVOeVpXRjBaWE1nWVNCbWRXeHNJR1pzWldSblpXUWdjMlYwZEdsdVozTWdiMkpxWldOMElHbHVkRzhnZEdGeVoyVjBYRzVjZEM4dklIZHBkR2dnWW05MGFDQmhhbUY0VTJWMGRHbHVaM01nWVc1a0lITmxkSFJwYm1keklHWnBaV3hrY3k1Y2JseDBMeThnU1dZZ2RHRnlaMlYwSUdseklHOXRhWFIwWldRc0lIZHlhWFJsY3lCcGJuUnZJR0ZxWVhoVFpYUjBhVzVuY3k1Y2JseDBZV3BoZUZObGRIVndPaUJtZFc1amRHbHZiaWdnZEdGeVoyVjBMQ0J6WlhSMGFXNW5jeUFwSUh0Y2JseDBYSFJ5WlhSMWNtNGdjMlYwZEdsdVozTWdQMXh1WEc1Y2RGeDBYSFF2THlCQ2RXbHNaR2x1WnlCaElITmxkSFJwYm1keklHOWlhbVZqZEZ4dVhIUmNkRngwWVdwaGVFVjRkR1Z1WkNnZ1lXcGhlRVY0ZEdWdVpDZ2dkR0Z5WjJWMExDQnFVWFZsY25rdVlXcGhlRk5sZEhScGJtZHpJQ2tzSUhObGRIUnBibWR6SUNrZ09seHVYRzVjZEZ4MFhIUXZMeUJGZUhSbGJtUnBibWNnWVdwaGVGTmxkSFJwYm1kelhHNWNkRngwWEhSaGFtRjRSWGgwWlc1a0tDQnFVWFZsY25rdVlXcGhlRk5sZEhScGJtZHpMQ0IwWVhKblpYUWdLVHRjYmx4MGZTeGNibHh1WEhSaGFtRjRVSEpsWm1sc2RHVnlPaUJoWkdSVWIxQnlaV1pwYkhSbGNuTlBjbFJ5WVc1emNHOXlkSE1vSUhCeVpXWnBiSFJsY25NZ0tTeGNibHgwWVdwaGVGUnlZVzV6Y0c5eWREb2dZV1JrVkc5UWNtVm1hV3gwWlhKelQzSlVjbUZ1YzNCdmNuUnpLQ0IwY21GdWMzQnZjblJ6SUNrc1hHNWNibHgwTHk4Z1RXRnBiaUJ0WlhSb2IyUmNibHgwWVdwaGVEb2dablZ1WTNScGIyNG9JSFZ5YkN3Z2IzQjBhVzl1Y3lBcElIdGNibHh1WEhSY2RDOHZJRWxtSUhWeWJDQnBjeUJoYmlCdlltcGxZM1FzSUhOcGJYVnNZWFJsSUhCeVpTMHhMalVnYzJsbmJtRjBkWEpsWEc1Y2RGeDBhV1lnS0NCMGVYQmxiMllnZFhKc0lEMDlQU0JjSW05aWFtVmpkRndpSUNrZ2UxeHVYSFJjZEZ4MGIzQjBhVzl1Y3lBOUlIVnliRHRjYmx4MFhIUmNkSFZ5YkNBOUlIVnVaR1ZtYVc1bFpEdGNibHgwWEhSOVhHNWNibHgwWEhRdkx5QkdiM0pqWlNCdmNIUnBiMjV6SUhSdklHSmxJR0Z1SUc5aWFtVmpkRnh1WEhSY2RHOXdkR2x2Ym5NZ1BTQnZjSFJwYjI1eklIeDhJSHQ5TzF4dVhHNWNkRngwZG1GeUlIUnlZVzV6Y0c5eWRDeGNibHh1WEhSY2RGeDBMeThnVlZKTUlIZHBkR2h2ZFhRZ1lXNTBhUzFqWVdOb1pTQndZWEpoYlZ4dVhIUmNkRngwWTJGamFHVlZVa3dzWEc1Y2JseDBYSFJjZEM4dklGSmxjM0J2Ym5ObElHaGxZV1JsY25OY2JseDBYSFJjZEhKbGMzQnZibk5sU0dWaFpHVnljMU4wY21sdVp5eGNibHgwWEhSY2RISmxjM0J2Ym5ObFNHVmhaR1Z5Y3l4Y2JseHVYSFJjZEZ4MEx5OGdkR2x0Wlc5MWRDQm9ZVzVrYkdWY2JseDBYSFJjZEhScGJXVnZkWFJVYVcxbGNpeGNibHh1WEhSY2RGeDBMeThnVlhKc0lHTnNaV0Z1ZFhBZ2RtRnlYRzVjZEZ4MFhIUjFjbXhCYm1Ob2IzSXNYRzVjYmx4MFhIUmNkQzh2SUZKbGNYVmxjM1FnYzNSaGRHVWdLR0psWTI5dFpYTWdabUZzYzJVZ2RYQnZiaUJ6Wlc1a0lHRnVaQ0IwY25WbElIVndiMjRnWTI5dGNHeGxkR2x2YmlsY2JseDBYSFJjZEdOdmJYQnNaWFJsWkN4Y2JseHVYSFJjZEZ4MEx5OGdWRzhnYTI1dmR5QnBaaUJuYkc5aVlXd2daWFpsYm5SeklHRnlaU0IwYnlCaVpTQmthWE53WVhSamFHVmtYRzVjZEZ4MFhIUm1hWEpsUjJ4dlltRnNjeXhjYmx4dVhIUmNkRngwTHk4Z1RHOXZjQ0IyWVhKcFlXSnNaVnh1WEhSY2RGeDBhU3hjYmx4dVhIUmNkRngwTHk4Z2RXNWpZV05vWldRZ2NHRnlkQ0J2WmlCMGFHVWdkWEpzWEc1Y2RGeDBYSFIxYm1OaFkyaGxaQ3hjYmx4dVhIUmNkRngwTHk4Z1EzSmxZWFJsSUhSb1pTQm1hVzVoYkNCdmNIUnBiMjV6SUc5aWFtVmpkRnh1WEhSY2RGeDBjeUE5SUdwUmRXVnllUzVoYW1GNFUyVjBkWEFvSUh0OUxDQnZjSFJwYjI1eklDa3NYRzVjYmx4MFhIUmNkQzh2SUVOaGJHeGlZV05yY3lCamIyNTBaWGgwWEc1Y2RGeDBYSFJqWVd4c1ltRmphME52Ym5SbGVIUWdQU0J6TG1OdmJuUmxlSFFnZkh3Z2N5eGNibHh1WEhSY2RGeDBMeThnUTI5dWRHVjRkQ0JtYjNJZ1oyeHZZbUZzSUdWMlpXNTBjeUJwY3lCallXeHNZbUZqYTBOdmJuUmxlSFFnYVdZZ2FYUWdhWE1nWVNCRVQwMGdibTlrWlNCdmNpQnFVWFZsY25rZ1kyOXNiR1ZqZEdsdmJseHVYSFJjZEZ4MFoyeHZZbUZzUlhabGJuUkRiMjUwWlhoMElEMGdjeTVqYjI1MFpYaDBJQ1ltWEc1Y2RGeDBYSFJjZENnZ1kyRnNiR0poWTJ0RGIyNTBaWGgwTG01dlpHVlVlWEJsSUh4OElHTmhiR3hpWVdOclEyOXVkR1Y0ZEM1cWNYVmxjbmtnS1NBL1hHNWNkRngwWEhSY2RHcFJkV1Z5ZVNnZ1kyRnNiR0poWTJ0RGIyNTBaWGgwSUNrZ09seHVYSFJjZEZ4MFhIUnFVWFZsY25rdVpYWmxiblFzWEc1Y2JseDBYSFJjZEM4dklFUmxabVZ5Y21Wa2MxeHVYSFJjZEZ4MFpHVm1aWEp5WldRZ1BTQnFVWFZsY25rdVJHVm1aWEp5WldRb0tTeGNibHgwWEhSY2RHTnZiWEJzWlhSbFJHVm1aWEp5WldRZ1BTQnFVWFZsY25rdVEyRnNiR0poWTJ0ektDQmNJbTl1WTJVZ2JXVnRiM0o1WENJZ0tTeGNibHh1WEhSY2RGeDBMeThnVTNSaGRIVnpMV1JsY0dWdVpHVnVkQ0JqWVd4c1ltRmphM05jYmx4MFhIUmNkSE4wWVhSMWMwTnZaR1VnUFNCekxuTjBZWFIxYzBOdlpHVWdmSHdnZTMwc1hHNWNibHgwWEhSY2RDOHZJRWhsWVdSbGNuTWdLSFJvWlhrZ1lYSmxJSE5sYm5RZ1lXeHNJR0YwSUc5dVkyVXBYRzVjZEZ4MFhIUnlaWEYxWlhOMFNHVmhaR1Z5Y3lBOUlIdDlMRnh1WEhSY2RGeDBjbVZ4ZFdWemRFaGxZV1JsY25OT1lXMWxjeUE5SUh0OUxGeHVYRzVjZEZ4MFhIUXZMeUJFWldaaGRXeDBJR0ZpYjNKMElHMWxjM05oWjJWY2JseDBYSFJjZEhOMGNrRmliM0owSUQwZ1hDSmpZVzVqWld4bFpGd2lMRnh1WEc1Y2RGeDBYSFF2THlCR1lXdGxJSGhvY2x4dVhIUmNkRngwYW5GWVNGSWdQU0I3WEc1Y2RGeDBYSFJjZEhKbFlXUjVVM1JoZEdVNklEQXNYRzVjYmx4MFhIUmNkRngwTHk4Z1FuVnBiR1J6SUdobFlXUmxjbk1nYUdGemFIUmhZbXhsSUdsbUlHNWxaV1JsWkZ4dVhIUmNkRngwWEhSblpYUlNaWE53YjI1elpVaGxZV1JsY2pvZ1puVnVZM1JwYjI0b0lHdGxlU0FwSUh0Y2JseDBYSFJjZEZ4MFhIUjJZWElnYldGMFkyZzdYRzVjZEZ4MFhIUmNkRngwYVdZZ0tDQmpiMjF3YkdWMFpXUWdLU0I3WEc1Y2RGeDBYSFJjZEZ4MFhIUnBaaUFvSUNGeVpYTndiMjV6WlVobFlXUmxjbk1nS1NCN1hHNWNkRngwWEhSY2RGeDBYSFJjZEhKbGMzQnZibk5sU0dWaFpHVnljeUE5SUh0OU8xeHVYSFJjZEZ4MFhIUmNkRngwWEhSM2FHbHNaU0FvSUNnZ2JXRjBZMmdnUFNCeWFHVmhaR1Z5Y3k1bGVHVmpLQ0J5WlhOd2IyNXpaVWhsWVdSbGNuTlRkSEpwYm1jZ0tTQXBJQ2tnZTF4dVhIUmNkRngwWEhSY2RGeDBYSFJjZEhKbGMzQnZibk5sU0dWaFpHVnljMXNnYldGMFkyaGJJREVnWFM1MGIweHZkMlZ5UTJGelpTZ3BJQ3NnWENJZ1hDSWdYU0E5WEc1Y2RGeDBYSFJjZEZ4MFhIUmNkRngwWEhRb0lISmxjM0J2Ym5ObFNHVmhaR1Z5YzFzZ2JXRjBZMmhiSURFZ1hTNTBiMHh2ZDJWeVEyRnpaU2dwSUNzZ1hDSWdYQ0lnWFNCOGZDQmJYU0FwWEc1Y2RGeDBYSFJjZEZ4MFhIUmNkRngwWEhSY2RDNWpiMjVqWVhRb0lHMWhkR05vV3lBeUlGMGdLVHRjYmx4MFhIUmNkRngwWEhSY2RGeDBmVnh1WEhSY2RGeDBYSFJjZEZ4MGZWeHVYSFJjZEZ4MFhIUmNkRngwYldGMFkyZ2dQU0J5WlhOd2IyNXpaVWhsWVdSbGNuTmJJR3RsZVM1MGIweHZkMlZ5UTJGelpTZ3BJQ3NnWENJZ1hDSWdYVHRjYmx4MFhIUmNkRngwWEhSOVhHNWNkRngwWEhSY2RGeDBjbVYwZFhKdUlHMWhkR05vSUQwOUlHNTFiR3dnUHlCdWRXeHNJRG9nYldGMFkyZ3VhbTlwYmlnZ1hDSXNJRndpSUNrN1hHNWNkRngwWEhSY2RIMHNYRzVjYmx4MFhIUmNkRngwTHk4Z1VtRjNJSE4wY21sdVoxeHVYSFJjZEZ4MFhIUm5aWFJCYkd4U1pYTndiMjV6WlVobFlXUmxjbk02SUdaMWJtTjBhVzl1S0NrZ2UxeHVYSFJjZEZ4MFhIUmNkSEpsZEhWeWJpQmpiMjF3YkdWMFpXUWdQeUJ5WlhOd2IyNXpaVWhsWVdSbGNuTlRkSEpwYm1jZ09pQnVkV3hzTzF4dVhIUmNkRngwWEhSOUxGeHVYRzVjZEZ4MFhIUmNkQzh2SUVOaFkyaGxjeUIwYUdVZ2FHVmhaR1Z5WEc1Y2RGeDBYSFJjZEhObGRGSmxjWFZsYzNSSVpXRmtaWEk2SUdaMWJtTjBhVzl1S0NCdVlXMWxMQ0IyWVd4MVpTQXBJSHRjYmx4MFhIUmNkRngwWEhScFppQW9JR052YlhCc1pYUmxaQ0E5UFNCdWRXeHNJQ2tnZTF4dVhIUmNkRngwWEhSY2RGeDBibUZ0WlNBOUlISmxjWFZsYzNSSVpXRmtaWEp6VG1GdFpYTmJJRzVoYldVdWRHOU1iM2RsY2tOaGMyVW9LU0JkSUQxY2JseDBYSFJjZEZ4MFhIUmNkRngwY21WeGRXVnpkRWhsWVdSbGNuTk9ZVzFsYzFzZ2JtRnRaUzUwYjB4dmQyVnlRMkZ6WlNncElGMGdmSHdnYm1GdFpUdGNibHgwWEhSY2RGeDBYSFJjZEhKbGNYVmxjM1JJWldGa1pYSnpXeUJ1WVcxbElGMGdQU0IyWVd4MVpUdGNibHgwWEhSY2RGeDBYSFI5WEc1Y2RGeDBYSFJjZEZ4MGNtVjBkWEp1SUhSb2FYTTdYRzVjZEZ4MFhIUmNkSDBzWEc1Y2JseDBYSFJjZEZ4MEx5OGdUM1psY25KcFpHVnpJSEpsYzNCdmJuTmxJR052Ym5SbGJuUXRkSGx3WlNCb1pXRmtaWEpjYmx4MFhIUmNkRngwYjNabGNuSnBaR1ZOYVcxbFZIbHdaVG9nWm5WdVkzUnBiMjRvSUhSNWNHVWdLU0I3WEc1Y2RGeDBYSFJjZEZ4MGFXWWdLQ0JqYjIxd2JHVjBaV1FnUFQwZ2JuVnNiQ0FwSUh0Y2JseDBYSFJjZEZ4MFhIUmNkSE11YldsdFpWUjVjR1VnUFNCMGVYQmxPMXh1WEhSY2RGeDBYSFJjZEgxY2JseDBYSFJjZEZ4MFhIUnlaWFIxY200Z2RHaHBjenRjYmx4MFhIUmNkRngwZlN4Y2JseHVYSFJjZEZ4MFhIUXZMeUJUZEdGMGRYTXRaR1Z3Wlc1a1pXNTBJR05oYkd4aVlXTnJjMXh1WEhSY2RGeDBYSFJ6ZEdGMGRYTkRiMlJsT2lCbWRXNWpkR2x2YmlnZ2JXRndJQ2tnZTF4dVhIUmNkRngwWEhSY2RIWmhjaUJqYjJSbE8xeHVYSFJjZEZ4MFhIUmNkR2xtSUNnZ2JXRndJQ2tnZTF4dVhIUmNkRngwWEhSY2RGeDBhV1lnS0NCamIyMXdiR1YwWldRZ0tTQjdYRzVjYmx4MFhIUmNkRngwWEhSY2RGeDBMeThnUlhobFkzVjBaU0IwYUdVZ1lYQndjbTl3Y21saGRHVWdZMkZzYkdKaFkydHpYRzVjZEZ4MFhIUmNkRngwWEhSY2RHcHhXRWhTTG1Gc2QyRjVjeWdnYldGd1d5QnFjVmhJVWk1emRHRjBkWE1nWFNBcE8xeHVYSFJjZEZ4MFhIUmNkRngwZlNCbGJITmxJSHRjYmx4dVhIUmNkRngwWEhSY2RGeDBYSFF2THlCTVlYcDVMV0ZrWkNCMGFHVWdibVYzSUdOaGJHeGlZV05yY3lCcGJpQmhJSGRoZVNCMGFHRjBJSEJ5WlhObGNuWmxjeUJ2YkdRZ2IyNWxjMXh1WEhSY2RGeDBYSFJjZEZ4MFhIUm1iM0lnS0NCamIyUmxJR2x1SUcxaGNDQXBJSHRjYmx4MFhIUmNkRngwWEhSY2RGeDBYSFJ6ZEdGMGRYTkRiMlJsV3lCamIyUmxJRjBnUFNCYklITjBZWFIxYzBOdlpHVmJJR052WkdVZ1hTd2diV0Z3V3lCamIyUmxJRjBnWFR0Y2JseDBYSFJjZEZ4MFhIUmNkRngwZlZ4dVhIUmNkRngwWEhSY2RGeDBmVnh1WEhSY2RGeDBYSFJjZEgxY2JseDBYSFJjZEZ4MFhIUnlaWFIxY200Z2RHaHBjenRjYmx4MFhIUmNkRngwZlN4Y2JseHVYSFJjZEZ4MFhIUXZMeUJEWVc1alpXd2dkR2hsSUhKbGNYVmxjM1JjYmx4MFhIUmNkRngwWVdKdmNuUTZJR1oxYm1OMGFXOXVLQ0J6ZEdGMGRYTlVaWGgwSUNrZ2UxeHVYSFJjZEZ4MFhIUmNkSFpoY2lCbWFXNWhiRlJsZUhRZ1BTQnpkR0YwZFhOVVpYaDBJSHg4SUhOMGNrRmliM0owTzF4dVhIUmNkRngwWEhSY2RHbG1JQ2dnZEhKaGJuTndiM0owSUNrZ2UxeHVYSFJjZEZ4MFhIUmNkRngwZEhKaGJuTndiM0owTG1GaWIzSjBLQ0JtYVc1aGJGUmxlSFFnS1R0Y2JseDBYSFJjZEZ4MFhIUjlYRzVjZEZ4MFhIUmNkRngwWkc5dVpTZ2dNQ3dnWm1sdVlXeFVaWGgwSUNrN1hHNWNkRngwWEhSY2RGeDBjbVYwZFhKdUlIUm9hWE03WEc1Y2RGeDBYSFJjZEgxY2JseDBYSFJjZEgwN1hHNWNibHgwWEhRdkx5QkJkSFJoWTJnZ1pHVm1aWEp5WldSelhHNWNkRngwWkdWbVpYSnlaV1F1Y0hKdmJXbHpaU2dnYW5GWVNGSWdLVHRjYmx4dVhIUmNkQzh2SUVGa1pDQndjbTkwYjJOdmJDQnBaaUJ1YjNRZ2NISnZkbWxrWldRZ0tIQnlaV1pwYkhSbGNuTWdiV2xuYUhRZ1pYaHdaV04wSUdsMEtWeHVYSFJjZEM4dklFaGhibVJzWlNCbVlXeHplU0IxY213Z2FXNGdkR2hsSUhObGRIUnBibWR6SUc5aWFtVmpkQ0FvZEhKaFl5MHhNREE1TXpvZ1kyOXVjMmx6ZEdWdVkza2dkMmwwYUNCdmJHUWdjMmxuYm1GMGRYSmxLVnh1WEhSY2RDOHZJRmRsSUdGc2MyOGdkWE5sSUhSb1pTQjFjbXdnY0dGeVlXMWxkR1Z5SUdsbUlHRjJZV2xzWVdKc1pWeHVYSFJjZEhNdWRYSnNJRDBnS0NBb0lIVnliQ0I4ZkNCekxuVnliQ0I4ZkNCc2IyTmhkR2x2Ymk1b2NtVm1JQ2tnS3lCY0lsd2lJQ2xjYmx4MFhIUmNkQzV5WlhCc1lXTmxLQ0J5Y0hKdmRHOWpiMndzSUd4dlkyRjBhVzl1TG5CeWIzUnZZMjlzSUNzZ1hDSXZMMXdpSUNrN1hHNWNibHgwWEhRdkx5QkJiR2xoY3lCdFpYUm9iMlFnYjNCMGFXOXVJSFJ2SUhSNWNHVWdZWE1nY0dWeUlIUnBZMnRsZENCMGNtRmpMVEV5TURBMFhHNWNkRngwY3k1MGVYQmxJRDBnYjNCMGFXOXVjeTV0WlhSb2IyUWdmSHdnYjNCMGFXOXVjeTUwZVhCbElIeDhJSE11YldWMGFHOWtJSHg4SUhNdWRIbHdaVHRjYmx4dVhIUmNkQzh2SUVWNGRISmhZM1FnWkdGMFlWUjVjR1Z6SUd4cGMzUmNibHgwWEhSekxtUmhkR0ZVZVhCbGN5QTlJQ2dnY3k1a1lYUmhWSGx3WlNCOGZDQmNJaXBjSWlBcExuUnZURzkzWlhKRFlYTmxLQ2t1YldGMFkyZ29JSEp1YjNSb2RHMXNkMmhwZEdVZ0tTQjhmQ0JiSUZ3aVhDSWdYVHRjYmx4dVhIUmNkQzh2SUVFZ1kzSnZjM010Wkc5dFlXbHVJSEpsY1hWbGMzUWdhWE1nYVc0Z2IzSmtaWElnZDJobGJpQjBhR1VnYjNKcFoybHVJR1J2WlhOdUozUWdiV0YwWTJnZ2RHaGxJR04xY25KbGJuUWdiM0pwWjJsdUxseHVYSFJjZEdsbUlDZ2djeTVqY205emMwUnZiV0ZwYmlBOVBTQnVkV3hzSUNrZ2UxeHVYSFJjZEZ4MGRYSnNRVzVqYUc5eUlEMGdaRzlqZFcxbGJuUXVZM0psWVhSbFJXeGxiV1Z1ZENnZ1hDSmhYQ0lnS1R0Y2JseHVYSFJjZEZ4MEx5OGdVM1Z3Y0c5eWREb2dTVVVnUEQwNElDMGdNVEVzSUVWa1oyVWdNVElnTFNBeE5WeHVYSFJjZEZ4MEx5OGdTVVVnZEdoeWIzZHpJR1Y0WTJWd2RHbHZiaUJ2YmlCaFkyTmxjM05wYm1jZ2RHaGxJR2h5WldZZ2NISnZjR1Z5ZEhrZ2FXWWdkWEpzSUdseklHMWhiR1p2Y20xbFpDeGNibHgwWEhSY2RDOHZJR1V1Wnk0Z2FIUjBjRG92TDJWNFlXMXdiR1V1WTI5dE9qZ3dlQzljYmx4MFhIUmNkSFJ5ZVNCN1hHNWNkRngwWEhSY2RIVnliRUZ1WTJodmNpNW9jbVZtSUQwZ2N5NTFjbXc3WEc1Y2JseDBYSFJjZEZ4MEx5OGdVM1Z3Y0c5eWREb2dTVVVnUEQwNElDMGdNVEVnYjI1c2VWeHVYSFJjZEZ4MFhIUXZMeUJCYm1Ob2IzSW5jeUJvYjNOMElIQnliM0JsY25SNUlHbHpiaWQwSUdOdmNuSmxZM1JzZVNCelpYUWdkMmhsYmlCekxuVnliQ0JwY3lCeVpXeGhkR2wyWlZ4dVhIUmNkRngwWEhSMWNteEJibU5vYjNJdWFISmxaaUE5SUhWeWJFRnVZMmh2Y2k1b2NtVm1PMXh1WEhSY2RGeDBYSFJ6TG1OeWIzTnpSRzl0WVdsdUlEMGdiM0pwWjJsdVFXNWphRzl5TG5CeWIzUnZZMjlzSUNzZ1hDSXZMMXdpSUNzZ2IzSnBaMmx1UVc1amFHOXlMbWh2YzNRZ0lUMDlYRzVjZEZ4MFhIUmNkRngwZFhKc1FXNWphRzl5TG5CeWIzUnZZMjlzSUNzZ1hDSXZMMXdpSUNzZ2RYSnNRVzVqYUc5eUxtaHZjM1E3WEc1Y2RGeDBYSFI5SUdOaGRHTm9JQ2dnWlNBcElIdGNibHh1WEhSY2RGeDBYSFF2THlCSlppQjBhR1Z5WlNCcGN5QmhiaUJsY25KdmNpQndZWEp6YVc1bklIUm9aU0JWVWt3c0lHRnpjM1Z0WlNCcGRDQnBjeUJqY205emMwUnZiV0ZwYml4Y2JseDBYSFJjZEZ4MEx5OGdhWFFnWTJGdUlHSmxJSEpsYW1WamRHVmtJR0o1SUhSb1pTQjBjbUZ1YzNCdmNuUWdhV1lnYVhRZ2FYTWdhVzUyWVd4cFpGeHVYSFJjZEZ4MFhIUnpMbU55YjNOelJHOXRZV2x1SUQwZ2RISjFaVHRjYmx4MFhIUmNkSDFjYmx4MFhIUjlYRzVjYmx4MFhIUXZMeUJEYjI1MlpYSjBJR1JoZEdFZ2FXWWdibTkwSUdGc2NtVmhaSGtnWVNCemRISnBibWRjYmx4MFhIUnBaaUFvSUhNdVpHRjBZU0FtSmlCekxuQnliMk5sYzNORVlYUmhJQ1ltSUhSNWNHVnZaaUJ6TG1SaGRHRWdJVDA5SUZ3aWMzUnlhVzVuWENJZ0tTQjdYRzVjZEZ4MFhIUnpMbVJoZEdFZ1BTQnFVWFZsY25rdWNHRnlZVzBvSUhNdVpHRjBZU3dnY3k1MGNtRmthWFJwYjI1aGJDQXBPMXh1WEhSY2RIMWNibHh1WEhSY2RDOHZJRUZ3Y0d4NUlIQnlaV1pwYkhSbGNuTmNibHgwWEhScGJuTndaV04wVUhKbFptbHNkR1Z5YzA5eVZISmhibk53YjNKMGN5Z2djSEpsWm1sc2RHVnljeXdnY3l3Z2IzQjBhVzl1Y3l3Z2FuRllTRklnS1R0Y2JseHVYSFJjZEM4dklFbG1JSEpsY1hWbGMzUWdkMkZ6SUdGaWIzSjBaV1FnYVc1emFXUmxJR0VnY0hKbFptbHNkR1Z5TENCemRHOXdJSFJvWlhKbFhHNWNkRngwYVdZZ0tDQmpiMjF3YkdWMFpXUWdLU0I3WEc1Y2RGeDBYSFJ5WlhSMWNtNGdhbkZZU0ZJN1hHNWNkRngwZlZ4dVhHNWNkRngwTHk4Z1YyVWdZMkZ1SUdacGNtVWdaMnh2WW1Gc0lHVjJaVzUwY3lCaGN5QnZaaUJ1YjNjZ2FXWWdZWE5yWldRZ2RHOWNibHgwWEhRdkx5QkViMjRuZENCbWFYSmxJR1YyWlc1MGN5QnBaaUJxVVhWbGNua3VaWFpsYm5RZ2FYTWdkVzVrWldacGJtVmtJR2x1SUdGdUlFRk5SQzExYzJGblpTQnpZMlZ1WVhKcGJ5QW9kSEpoWXkweE5URXhPQ2xjYmx4MFhIUm1hWEpsUjJ4dlltRnNjeUE5SUdwUmRXVnllUzVsZG1WdWRDQW1KaUJ6TG1kc2IySmhiRHRjYmx4dVhIUmNkQzh2SUZkaGRHTm9JR1p2Y2lCaElHNWxkeUJ6WlhRZ2IyWWdjbVZ4ZFdWemRITmNibHgwWEhScFppQW9JR1pwY21WSGJHOWlZV3h6SUNZbUlHcFJkV1Z5ZVM1aFkzUnBkbVVyS3lBOVBUMGdNQ0FwSUh0Y2JseDBYSFJjZEdwUmRXVnllUzVsZG1WdWRDNTBjbWxuWjJWeUtDQmNJbUZxWVhoVGRHRnlkRndpSUNrN1hHNWNkRngwZlZ4dVhHNWNkRngwTHk4Z1ZYQndaWEpqWVhObElIUm9aU0IwZVhCbFhHNWNkRngwY3k1MGVYQmxJRDBnY3k1MGVYQmxMblJ2VlhCd1pYSkRZWE5sS0NrN1hHNWNibHgwWEhRdkx5QkVaWFJsY20xcGJtVWdhV1lnY21WeGRXVnpkQ0JvWVhNZ1kyOXVkR1Z1ZEZ4dVhIUmNkSE11YUdGelEyOXVkR1Z1ZENBOUlDRnlibTlEYjI1MFpXNTBMblJsYzNRb0lITXVkSGx3WlNBcE8xeHVYRzVjZEZ4MEx5OGdVMkYyWlNCMGFHVWdWVkpNSUdsdUlHTmhjMlVnZDJVbmNtVWdkRzk1YVc1bklIZHBkR2dnZEdobElFbG1MVTF2WkdsbWFXVmtMVk5wYm1ObFhHNWNkRngwTHk4Z1lXNWtMMjl5SUVsbUxVNXZibVV0VFdGMFkyZ2dhR1ZoWkdWeUlHeGhkR1Z5SUc5dVhHNWNkRngwTHk4Z1VtVnRiM1psSUdoaGMyZ2dkRzhnYzJsdGNHeHBabmtnZFhKc0lHMWhibWx3ZFd4aGRHbHZibHh1WEhSY2RHTmhZMmhsVlZKTUlEMGdjeTUxY213dWNtVndiR0ZqWlNnZ2NtaGhjMmdzSUZ3aVhDSWdLVHRjYmx4dVhIUmNkQzh2SUUxdmNtVWdiM0IwYVc5dWN5Qm9ZVzVrYkdsdVp5Qm1iM0lnY21WeGRXVnpkSE1nZDJsMGFDQnVieUJqYjI1MFpXNTBYRzVjZEZ4MGFXWWdLQ0FoY3k1b1lYTkRiMjUwWlc1MElDa2dlMXh1WEc1Y2RGeDBYSFF2THlCU1pXMWxiV0psY2lCMGFHVWdhR0Z6YUNCemJ5QjNaU0JqWVc0Z2NIVjBJR2wwSUdKaFkydGNibHgwWEhSY2RIVnVZMkZqYUdWa0lEMGdjeTUxY213dWMyeHBZMlVvSUdOaFkyaGxWVkpNTG14bGJtZDBhQ0FwTzF4dVhHNWNkRngwWEhRdkx5QkpaaUJrWVhSaElHbHpJR0YyWVdsc1lXSnNaU0JoYm1RZ2MyaHZkV3hrSUdKbElIQnliMk5sYzNObFpDd2dZWEJ3Wlc1a0lHUmhkR0VnZEc4Z2RYSnNYRzVjZEZ4MFhIUnBaaUFvSUhNdVpHRjBZU0FtSmlBb0lITXVjSEp2WTJWemMwUmhkR0VnZkh3Z2RIbHdaVzltSUhNdVpHRjBZU0E5UFQwZ1hDSnpkSEpwYm1kY0lpQXBJQ2tnZTF4dVhIUmNkRngwWEhSallXTm9aVlZTVENBclBTQW9JSEp4ZFdWeWVTNTBaWE4wS0NCallXTm9aVlZTVENBcElEOGdYQ0ltWENJZ09pQmNJajljSWlBcElDc2djeTVrWVhSaE8xeHVYRzVjZEZ4MFhIUmNkQzh2SUhSeVlXTXRPVFk0TWpvZ2NtVnRiM1psSUdSaGRHRWdjMjhnZEdoaGRDQnBkQ2R6SUc1dmRDQjFjMlZrSUdsdUlHRnVJR1YyWlc1MGRXRnNJSEpsZEhKNVhHNWNkRngwWEhSY2RHUmxiR1YwWlNCekxtUmhkR0U3WEc1Y2RGeDBYSFI5WEc1Y2JseDBYSFJjZEM4dklFRmtaQ0J2Y2lCMWNHUmhkR1VnWVc1MGFTMWpZV05vWlNCd1lYSmhiU0JwWmlCdVpXVmtaV1JjYmx4MFhIUmNkR2xtSUNnZ2N5NWpZV05vWlNBOVBUMGdabUZzYzJVZ0tTQjdYRzVjZEZ4MFhIUmNkR05oWTJobFZWSk1JRDBnWTJGamFHVlZVa3d1Y21Wd2JHRmpaU2dnY21GdWRHbERZV05vWlN3Z1hDSWtNVndpSUNrN1hHNWNkRngwWEhSY2RIVnVZMkZqYUdWa0lEMGdLQ0J5Y1hWbGNua3VkR1Z6ZENnZ1kyRmphR1ZWVWt3Z0tTQS9JRndpSmx3aUlEb2dYQ0kvWENJZ0tTQXJJRndpWHoxY0lpQXJJQ2dnYm05dVkyVXVaM1ZwWkNzcklDa2dLMXh1WEhSY2RGeDBYSFJjZEhWdVkyRmphR1ZrTzF4dVhIUmNkRngwZlZ4dVhHNWNkRngwWEhRdkx5QlFkWFFnYUdGemFDQmhibVFnWVc1MGFTMWpZV05vWlNCdmJpQjBhR1VnVlZKTUlIUm9ZWFFnZDJsc2JDQmlaU0J5WlhGMVpYTjBaV1FnS0dkb0xURTNNeklwWEc1Y2RGeDBYSFJ6TG5WeWJDQTlJR05oWTJobFZWSk1JQ3NnZFc1allXTm9aV1E3WEc1Y2JseDBYSFF2THlCRGFHRnVaMlVnSnlVeU1DY2dkRzhnSnlzbklHbG1JSFJvYVhNZ2FYTWdaVzVqYjJSbFpDQm1iM0p0SUdKdlpIa2dZMjl1ZEdWdWRDQW9aMmd0TWpZMU9DbGNibHgwWEhSOUlHVnNjMlVnYVdZZ0tDQnpMbVJoZEdFZ0ppWWdjeTV3Y205alpYTnpSR0YwWVNBbUpseHVYSFJjZEZ4MEtDQnpMbU52Ym5SbGJuUlVlWEJsSUh4OElGd2lYQ0lnS1M1cGJtUmxlRTltS0NCY0ltRndjR3hwWTJGMGFXOXVMM2d0ZDNkM0xXWnZjbTB0ZFhKc1pXNWpiMlJsWkZ3aUlDa2dQVDA5SURBZ0tTQjdYRzVjZEZ4MFhIUnpMbVJoZEdFZ1BTQnpMbVJoZEdFdWNtVndiR0ZqWlNnZ2NqSXdMQ0JjSWl0Y0lpQXBPMXh1WEhSY2RIMWNibHh1WEhSY2RDOHZJRk5sZENCMGFHVWdTV1l0VFc5a2FXWnBaV1F0VTJsdVkyVWdZVzVrTDI5eUlFbG1MVTV2Ym1VdFRXRjBZMmdnYUdWaFpHVnlMQ0JwWmlCcGJpQnBaazF2WkdsbWFXVmtJRzF2WkdVdVhHNWNkRngwYVdZZ0tDQnpMbWxtVFc5a2FXWnBaV1FnS1NCN1hHNWNkRngwWEhScFppQW9JR3BSZFdWeWVTNXNZWE4wVFc5a2FXWnBaV1JiSUdOaFkyaGxWVkpNSUYwZ0tTQjdYRzVjZEZ4MFhIUmNkR3B4V0VoU0xuTmxkRkpsY1hWbGMzUklaV0ZrWlhJb0lGd2lTV1l0VFc5a2FXWnBaV1F0VTJsdVkyVmNJaXdnYWxGMVpYSjVMbXhoYzNSTmIyUnBabWxsWkZzZ1kyRmphR1ZWVWt3Z1hTQXBPMXh1WEhSY2RGeDBmVnh1WEhSY2RGeDBhV1lnS0NCcVVYVmxjbmt1WlhSaFoxc2dZMkZqYUdWVlVrd2dYU0FwSUh0Y2JseDBYSFJjZEZ4MGFuRllTRkl1YzJWMFVtVnhkV1Z6ZEVobFlXUmxjaWdnWENKSlppMU9iMjVsTFUxaGRHTm9YQ0lzSUdwUmRXVnllUzVsZEdGbld5QmpZV05vWlZWU1RDQmRJQ2s3WEc1Y2RGeDBYSFI5WEc1Y2RGeDBmVnh1WEc1Y2RGeDBMeThnVTJWMElIUm9aU0JqYjNKeVpXTjBJR2hsWVdSbGNpd2dhV1lnWkdGMFlTQnBjeUJpWldsdVp5QnpaVzUwWEc1Y2RGeDBhV1lnS0NCekxtUmhkR0VnSmlZZ2N5NW9ZWE5EYjI1MFpXNTBJQ1ltSUhNdVkyOXVkR1Z1ZEZSNWNHVWdJVDA5SUdaaGJITmxJSHg4SUc5d2RHbHZibk11WTI5dWRHVnVkRlI1Y0dVZ0tTQjdYRzVjZEZ4MFhIUnFjVmhJVWk1elpYUlNaWEYxWlhOMFNHVmhaR1Z5S0NCY0lrTnZiblJsYm5RdFZIbHdaVndpTENCekxtTnZiblJsYm5SVWVYQmxJQ2s3WEc1Y2RGeDBmVnh1WEc1Y2RGeDBMeThnVTJWMElIUm9aU0JCWTJObGNIUnpJR2hsWVdSbGNpQm1iM0lnZEdobElITmxjblpsY2l3Z1pHVndaVzVrYVc1bklHOXVJSFJvWlNCa1lYUmhWSGx3WlZ4dVhIUmNkR3B4V0VoU0xuTmxkRkpsY1hWbGMzUklaV0ZrWlhJb1hHNWNkRngwWEhSY0lrRmpZMlZ3ZEZ3aUxGeHVYSFJjZEZ4MGN5NWtZWFJoVkhsd1pYTmJJREFnWFNBbUppQnpMbUZqWTJWd2RITmJJSE11WkdGMFlWUjVjR1Z6V3lBd0lGMGdYU0EvWEc1Y2RGeDBYSFJjZEhNdVlXTmpaWEIwYzFzZ2N5NWtZWFJoVkhsd1pYTmJJREFnWFNCZElDdGNibHgwWEhSY2RGeDBYSFFvSUhNdVpHRjBZVlI1Y0dWeld5QXdJRjBnSVQwOUlGd2lLbHdpSUQ4Z1hDSXNJRndpSUNzZ1lXeHNWSGx3WlhNZ0t5QmNJanNnY1Qwd0xqQXhYQ0lnT2lCY0lsd2lJQ2tnT2x4dVhIUmNkRngwWEhSekxtRmpZMlZ3ZEhOYklGd2lLbHdpSUYxY2JseDBYSFFwTzF4dVhHNWNkRngwTHk4Z1EyaGxZMnNnWm05eUlHaGxZV1JsY25NZ2IzQjBhVzl1WEc1Y2RGeDBabTl5SUNnZ2FTQnBiaUJ6TG1obFlXUmxjbk1nS1NCN1hHNWNkRngwWEhScWNWaElVaTV6WlhSU1pYRjFaWE4wU0dWaFpHVnlLQ0JwTENCekxtaGxZV1JsY25OYklHa2dYU0FwTzF4dVhIUmNkSDFjYmx4dVhIUmNkQzh2SUVGc2JHOTNJR04xYzNSdmJTQm9aV0ZrWlhKekwyMXBiV1YwZVhCbGN5QmhibVFnWldGeWJIa2dZV0p2Y25SY2JseDBYSFJwWmlBb0lITXVZbVZtYjNKbFUyVnVaQ0FtSmx4dVhIUmNkRngwS0NCekxtSmxabTl5WlZObGJtUXVZMkZzYkNnZ1kyRnNiR0poWTJ0RGIyNTBaWGgwTENCcWNWaElVaXdnY3lBcElEMDlQU0JtWVd4elpTQjhmQ0JqYjIxd2JHVjBaV1FnS1NBcElIdGNibHh1WEhSY2RGeDBMeThnUVdKdmNuUWdhV1lnYm05MElHUnZibVVnWVd4eVpXRmtlU0JoYm1RZ2NtVjBkWEp1WEc1Y2RGeDBYSFJ5WlhSMWNtNGdhbkZZU0ZJdVlXSnZjblFvS1R0Y2JseDBYSFI5WEc1Y2JseDBYSFF2THlCQlltOXlkR2x1WnlCcGN5QnVieUJzYjI1blpYSWdZU0JqWVc1alpXeHNZWFJwYjI1Y2JseDBYSFJ6ZEhKQlltOXlkQ0E5SUZ3aVlXSnZjblJjSWp0Y2JseHVYSFJjZEM4dklFbHVjM1JoYkd3Z1kyRnNiR0poWTJ0eklHOXVJR1JsWm1WeWNtVmtjMXh1WEhSY2RHTnZiWEJzWlhSbFJHVm1aWEp5WldRdVlXUmtLQ0J6TG1OdmJYQnNaWFJsSUNrN1hHNWNkRngwYW5GWVNGSXVaRzl1WlNnZ2N5NXpkV05qWlhOeklDazdYRzVjZEZ4MGFuRllTRkl1Wm1GcGJDZ2djeTVsY25KdmNpQXBPMXh1WEc1Y2RGeDBMeThnUjJWMElIUnlZVzV6Y0c5eWRGeHVYSFJjZEhSeVlXNXpjRzl5ZENBOUlHbHVjM0JsWTNSUWNtVm1hV3gwWlhKelQzSlVjbUZ1YzNCdmNuUnpLQ0IwY21GdWMzQnZjblJ6TENCekxDQnZjSFJwYjI1ekxDQnFjVmhJVWlBcE8xeHVYRzVjZEZ4MEx5OGdTV1lnYm04Z2RISmhibk53YjNKMExDQjNaU0JoZFhSdkxXRmliM0owWEc1Y2RGeDBhV1lnS0NBaGRISmhibk53YjNKMElDa2dlMXh1WEhSY2RGeDBaRzl1WlNnZ0xURXNJRndpVG04Z1ZISmhibk53YjNKMFhDSWdLVHRjYmx4MFhIUjlJR1ZzYzJVZ2UxeHVYSFJjZEZ4MGFuRllTRkl1Y21WaFpIbFRkR0YwWlNBOUlERTdYRzVjYmx4MFhIUmNkQzh2SUZObGJtUWdaMnh2WW1Gc0lHVjJaVzUwWEc1Y2RGeDBYSFJwWmlBb0lHWnBjbVZIYkc5aVlXeHpJQ2tnZTF4dVhIUmNkRngwWEhSbmJHOWlZV3hGZG1WdWRFTnZiblJsZUhRdWRISnBaMmRsY2lnZ1hDSmhhbUY0VTJWdVpGd2lMQ0JiSUdweFdFaFNMQ0J6SUYwZ0tUdGNibHgwWEhSY2RIMWNibHh1WEhSY2RGeDBMeThnU1dZZ2NtVnhkV1Z6ZENCM1lYTWdZV0p2Y25SbFpDQnBibk5wWkdVZ1lXcGhlRk5sYm1Rc0lITjBiM0FnZEdobGNtVmNibHgwWEhSY2RHbG1JQ2dnWTI5dGNHeGxkR1ZrSUNrZ2UxeHVYSFJjZEZ4MFhIUnlaWFIxY200Z2FuRllTRkk3WEc1Y2RGeDBYSFI5WEc1Y2JseDBYSFJjZEM4dklGUnBiV1Z2ZFhSY2JseDBYSFJjZEdsbUlDZ2djeTVoYzNsdVl5QW1KaUJ6TG5ScGJXVnZkWFFnUGlBd0lDa2dlMXh1WEhSY2RGeDBYSFIwYVcxbGIzVjBWR2x0WlhJZ1BTQjNhVzVrYjNjdWMyVjBWR2x0Wlc5MWRDZ2dablZ1WTNScGIyNG9LU0I3WEc1Y2RGeDBYSFJjZEZ4MGFuRllTRkl1WVdKdmNuUW9JRndpZEdsdFpXOTFkRndpSUNrN1hHNWNkRngwWEhSY2RIMHNJSE11ZEdsdFpXOTFkQ0FwTzF4dVhIUmNkRngwZlZ4dVhHNWNkRngwWEhSMGNua2dlMXh1WEhSY2RGeDBYSFJqYjIxd2JHVjBaV1FnUFNCbVlXeHpaVHRjYmx4MFhIUmNkRngwZEhKaGJuTndiM0owTG5ObGJtUW9JSEpsY1hWbGMzUklaV0ZrWlhKekxDQmtiMjVsSUNrN1hHNWNkRngwWEhSOUlHTmhkR05vSUNnZ1pTQXBJSHRjYmx4dVhIUmNkRngwWEhRdkx5QlNaWFJvY205M0lIQnZjM1F0WTI5dGNHeGxkR2x2YmlCbGVHTmxjSFJwYjI1elhHNWNkRngwWEhSY2RHbG1JQ2dnWTI5dGNHeGxkR1ZrSUNrZ2UxeHVYSFJjZEZ4MFhIUmNkSFJvY205M0lHVTdYRzVjZEZ4MFhIUmNkSDFjYmx4dVhIUmNkRngwWEhRdkx5QlFjbTl3WVdkaGRHVWdiM1JvWlhKeklHRnpJSEpsYzNWc2RITmNibHgwWEhSY2RGeDBaRzl1WlNnZ0xURXNJR1VnS1R0Y2JseDBYSFJjZEgxY2JseDBYSFI5WEc1Y2JseDBYSFF2THlCRFlXeHNZbUZqYXlCbWIzSWdkMmhsYmlCbGRtVnllWFJvYVc1bklHbHpJR1J2Ym1WY2JseDBYSFJtZFc1amRHbHZiaUJrYjI1bEtDQnpkR0YwZFhNc0lHNWhkR2wyWlZOMFlYUjFjMVJsZUhRc0lISmxjM0J2Ym5ObGN5d2dhR1ZoWkdWeWN5QXBJSHRjYmx4MFhIUmNkSFpoY2lCcGMxTjFZMk5sYzNNc0lITjFZMk5sYzNNc0lHVnljbTl5TENCeVpYTndiMjV6WlN3Z2JXOWthV1pwWldRc1hHNWNkRngwWEhSY2RITjBZWFIxYzFSbGVIUWdQU0J1WVhScGRtVlRkR0YwZFhOVVpYaDBPMXh1WEc1Y2RGeDBYSFF2THlCSloyNXZjbVVnY21Wd1pXRjBJR2x1ZG05allYUnBiMjV6WEc1Y2RGeDBYSFJwWmlBb0lHTnZiWEJzWlhSbFpDQXBJSHRjYmx4MFhIUmNkRngwY21WMGRYSnVPMXh1WEhSY2RGeDBmVnh1WEc1Y2RGeDBYSFJqYjIxd2JHVjBaV1FnUFNCMGNuVmxPMXh1WEc1Y2RGeDBYSFF2THlCRGJHVmhjaUIwYVcxbGIzVjBJR2xtSUdsMElHVjRhWE4wYzF4dVhIUmNkRngwYVdZZ0tDQjBhVzFsYjNWMFZHbHRaWElnS1NCN1hHNWNkRngwWEhSY2RIZHBibVJ2ZHk1amJHVmhjbFJwYldWdmRYUW9JSFJwYldWdmRYUlVhVzFsY2lBcE8xeHVYSFJjZEZ4MGZWeHVYRzVjZEZ4MFhIUXZMeUJFWlhKbFptVnlaVzVqWlNCMGNtRnVjM0J2Y25RZ1ptOXlJR1ZoY214NUlHZGhjbUpoWjJVZ1kyOXNiR1ZqZEdsdmJseHVYSFJjZEZ4MEx5OGdLRzV2SUcxaGRIUmxjaUJvYjNjZ2JHOXVaeUIwYUdVZ2FuRllTRklnYjJKcVpXTjBJSGRwYkd3Z1ltVWdkWE5sWkNsY2JseDBYSFJjZEhSeVlXNXpjRzl5ZENBOUlIVnVaR1ZtYVc1bFpEdGNibHh1WEhSY2RGeDBMeThnUTJGamFHVWdjbVZ6Y0c5dWMyVWdhR1ZoWkdWeWMxeHVYSFJjZEZ4MGNtVnpjRzl1YzJWSVpXRmtaWEp6VTNSeWFXNW5JRDBnYUdWaFpHVnljeUI4ZkNCY0lsd2lPMXh1WEc1Y2RGeDBYSFF2THlCVFpYUWdjbVZoWkhsVGRHRjBaVnh1WEhSY2RGeDBhbkZZU0ZJdWNtVmhaSGxUZEdGMFpTQTlJSE4wWVhSMWN5QStJREFnUHlBMElEb2dNRHRjYmx4dVhIUmNkRngwTHk4Z1JHVjBaWEp0YVc1bElHbG1JSE4xWTJObGMzTm1kV3hjYmx4MFhIUmNkR2x6VTNWalkyVnpjeUE5SUhOMFlYUjFjeUErUFNBeU1EQWdKaVlnYzNSaGRIVnpJRHdnTXpBd0lIeDhJSE4wWVhSMWN5QTlQVDBnTXpBME8xeHVYRzVjZEZ4MFhIUXZMeUJIWlhRZ2NtVnpjRzl1YzJVZ1pHRjBZVnh1WEhSY2RGeDBhV1lnS0NCeVpYTndiMjV6WlhNZ0tTQjdYRzVjZEZ4MFhIUmNkSEpsYzNCdmJuTmxJRDBnWVdwaGVFaGhibVJzWlZKbGMzQnZibk5sY3lnZ2N5d2dhbkZZU0ZJc0lISmxjM0J2Ym5ObGN5QXBPMXh1WEhSY2RGeDBmVnh1WEc1Y2RGeDBYSFF2THlCVmMyVWdZU0J1YjI5d0lHTnZiblpsY25SbGNpQm1iM0lnYldsemMybHVaeUJ6WTNKcGNIUWdZblYwSUc1dmRDQnBaaUJxYzI5dWNGeHVYSFJjZEZ4MGFXWWdLQ0FoYVhOVGRXTmpaWE56SUNZbVhHNWNkRngwWEhSY2RHcFJkV1Z5ZVM1cGJrRnljbUY1S0NCY0luTmpjbWx3ZEZ3aUxDQnpMbVJoZEdGVWVYQmxjeUFwSUQ0Z0xURWdKaVpjYmx4MFhIUmNkRngwYWxGMVpYSjVMbWx1UVhKeVlYa29JRndpYW5OdmJsd2lMQ0J6TG1SaGRHRlVlWEJsY3lBcElEd2dNQ0FwSUh0Y2JseDBYSFJjZEZ4MGN5NWpiMjUyWlhKMFpYSnpXeUJjSW5SbGVIUWdjMk55YVhCMFhDSWdYU0E5SUdaMWJtTjBhVzl1S0NrZ2UzMDdYRzVjZEZ4MFhIUjlYRzVjYmx4MFhIUmNkQzh2SUVOdmJuWmxjblFnYm04Z2JXRjBkR1Z5SUhkb1lYUWdLSFJvWVhRZ2QyRjVJSEpsYzNCdmJuTmxXRmhZSUdacFpXeGtjeUJoY21VZ1lXeDNZWGx6SUhObGRDbGNibHgwWEhSY2RISmxjM0J2Ym5ObElEMGdZV3BoZUVOdmJuWmxjblFvSUhNc0lISmxjM0J2Ym5ObExDQnFjVmhJVWl3Z2FYTlRkV05qWlhOeklDazdYRzVjYmx4MFhIUmNkQzh2SUVsbUlITjFZMk5sYzNObWRXd3NJR2hoYm1Sc1pTQjBlWEJsSUdOb1lXbHVhVzVuWEc1Y2RGeDBYSFJwWmlBb0lHbHpVM1ZqWTJWemN5QXBJSHRjYmx4dVhIUmNkRngwWEhRdkx5QlRaWFFnZEdobElFbG1MVTF2WkdsbWFXVmtMVk5wYm1ObElHRnVaQzl2Y2lCSlppMU9iMjVsTFUxaGRHTm9JR2hsWVdSbGNpd2dhV1lnYVc0Z2FXWk5iMlJwWm1sbFpDQnRiMlJsTGx4dVhIUmNkRngwWEhScFppQW9JSE11YVdaTmIyUnBabWxsWkNBcElIdGNibHgwWEhSY2RGeDBYSFJ0YjJScFptbGxaQ0E5SUdweFdFaFNMbWRsZEZKbGMzQnZibk5sU0dWaFpHVnlLQ0JjSWt4aGMzUXRUVzlrYVdacFpXUmNJaUFwTzF4dVhIUmNkRngwWEhSY2RHbG1JQ2dnYlc5a2FXWnBaV1FnS1NCN1hHNWNkRngwWEhSY2RGeDBYSFJxVVhWbGNua3ViR0Z6ZEUxdlpHbG1hV1ZrV3lCallXTm9aVlZTVENCZElEMGdiVzlrYVdacFpXUTdYRzVjZEZ4MFhIUmNkRngwZlZ4dVhIUmNkRngwWEhSY2RHMXZaR2xtYVdWa0lEMGdhbkZZU0ZJdVoyVjBVbVZ6Y0c5dWMyVklaV0ZrWlhJb0lGd2laWFJoWjF3aUlDazdYRzVjZEZ4MFhIUmNkRngwYVdZZ0tDQnRiMlJwWm1sbFpDQXBJSHRjYmx4MFhIUmNkRngwWEhSY2RHcFJkV1Z5ZVM1bGRHRm5XeUJqWVdOb1pWVlNUQ0JkSUQwZ2JXOWthV1pwWldRN1hHNWNkRngwWEhSY2RGeDBmVnh1WEhSY2RGeDBYSFI5WEc1Y2JseDBYSFJjZEZ4MEx5OGdhV1lnYm04Z1kyOXVkR1Z1ZEZ4dVhIUmNkRngwWEhScFppQW9JSE4wWVhSMWN5QTlQVDBnTWpBMElIeDhJSE11ZEhsd1pTQTlQVDBnWENKSVJVRkVYQ0lnS1NCN1hHNWNkRngwWEhSY2RGeDBjM1JoZEhWelZHVjRkQ0E5SUZ3aWJtOWpiMjUwWlc1MFhDSTdYRzVjYmx4MFhIUmNkRngwTHk4Z2FXWWdibTkwSUcxdlpHbG1hV1ZrWEc1Y2RGeDBYSFJjZEgwZ1pXeHpaU0JwWmlBb0lITjBZWFIxY3lBOVBUMGdNekEwSUNrZ2UxeHVYSFJjZEZ4MFhIUmNkSE4wWVhSMWMxUmxlSFFnUFNCY0ltNXZkRzF2WkdsbWFXVmtYQ0k3WEc1Y2JseDBYSFJjZEZ4MEx5OGdTV1lnZDJVZ2FHRjJaU0JrWVhSaExDQnNaWFFuY3lCamIyNTJaWEowSUdsMFhHNWNkRngwWEhSY2RIMGdaV3h6WlNCN1hHNWNkRngwWEhSY2RGeDBjM1JoZEhWelZHVjRkQ0E5SUhKbGMzQnZibk5sTG5OMFlYUmxPMXh1WEhSY2RGeDBYSFJjZEhOMVkyTmxjM01nUFNCeVpYTndiMjV6WlM1a1lYUmhPMXh1WEhSY2RGeDBYSFJjZEdWeWNtOXlJRDBnY21WemNHOXVjMlV1WlhKeWIzSTdYRzVjZEZ4MFhIUmNkRngwYVhOVGRXTmpaWE56SUQwZ0lXVnljbTl5TzF4dVhIUmNkRngwWEhSOVhHNWNkRngwWEhSOUlHVnNjMlVnZTF4dVhHNWNkRngwWEhSY2RDOHZJRVY0ZEhKaFkzUWdaWEp5YjNJZ1puSnZiU0J6ZEdGMGRYTlVaWGgwSUdGdVpDQnViM0p0WVd4cGVtVWdabTl5SUc1dmJpMWhZbTl5ZEhOY2JseDBYSFJjZEZ4MFpYSnliM0lnUFNCemRHRjBkWE5VWlhoME8xeHVYSFJjZEZ4MFhIUnBaaUFvSUhOMFlYUjFjeUI4ZkNBaGMzUmhkSFZ6VkdWNGRDQXBJSHRjYmx4MFhIUmNkRngwWEhSemRHRjBkWE5VWlhoMElEMGdYQ0psY25KdmNsd2lPMXh1WEhSY2RGeDBYSFJjZEdsbUlDZ2djM1JoZEhWeklEd2dNQ0FwSUh0Y2JseDBYSFJjZEZ4MFhIUmNkSE4wWVhSMWN5QTlJREE3WEc1Y2RGeDBYSFJjZEZ4MGZWeHVYSFJjZEZ4MFhIUjlYRzVjZEZ4MFhIUjlYRzVjYmx4MFhIUmNkQzh2SUZObGRDQmtZWFJoSUdadmNpQjBhR1VnWm1GclpTQjRhSElnYjJKcVpXTjBYRzVjZEZ4MFhIUnFjVmhJVWk1emRHRjBkWE1nUFNCemRHRjBkWE03WEc1Y2RGeDBYSFJxY1ZoSVVpNXpkR0YwZFhOVVpYaDBJRDBnS0NCdVlYUnBkbVZUZEdGMGRYTlVaWGgwSUh4OElITjBZWFIxYzFSbGVIUWdLU0FySUZ3aVhDSTdYRzVjYmx4MFhIUmNkQzh2SUZOMVkyTmxjM012UlhKeWIzSmNibHgwWEhSY2RHbG1JQ2dnYVhOVGRXTmpaWE56SUNrZ2UxeHVYSFJjZEZ4MFhIUmtaV1psY25KbFpDNXlaWE52YkhabFYybDBhQ2dnWTJGc2JHSmhZMnREYjI1MFpYaDBMQ0JiSUhOMVkyTmxjM01zSUhOMFlYUjFjMVJsZUhRc0lHcHhXRWhTSUYwZ0tUdGNibHgwWEhSY2RIMGdaV3h6WlNCN1hHNWNkRngwWEhSY2RHUmxabVZ5Y21Wa0xuSmxhbVZqZEZkcGRHZ29JR05oYkd4aVlXTnJRMjl1ZEdWNGRDd2dXeUJxY1ZoSVVpd2djM1JoZEhWelZHVjRkQ3dnWlhKeWIzSWdYU0FwTzF4dVhIUmNkRngwZlZ4dVhHNWNkRngwWEhRdkx5QlRkR0YwZFhNdFpHVndaVzVrWlc1MElHTmhiR3hpWVdOcmMxeHVYSFJjZEZ4MGFuRllTRkl1YzNSaGRIVnpRMjlrWlNnZ2MzUmhkSFZ6UTI5a1pTQXBPMXh1WEhSY2RGeDBjM1JoZEhWelEyOWtaU0E5SUhWdVpHVm1hVzVsWkR0Y2JseHVYSFJjZEZ4MGFXWWdLQ0JtYVhKbFIyeHZZbUZzY3lBcElIdGNibHgwWEhSY2RGeDBaMnh2WW1Gc1JYWmxiblJEYjI1MFpYaDBMblJ5YVdkblpYSW9JR2x6VTNWalkyVnpjeUEvSUZ3aVlXcGhlRk4xWTJObGMzTmNJaUE2SUZ3aVlXcGhlRVZ5Y205eVhDSXNYRzVjZEZ4MFhIUmNkRngwV3lCcWNWaElVaXdnY3l3Z2FYTlRkV05qWlhOeklEOGdjM1ZqWTJWemN5QTZJR1Z5Y205eUlGMGdLVHRjYmx4MFhIUmNkSDFjYmx4dVhIUmNkRngwTHk4Z1EyOXRjR3hsZEdWY2JseDBYSFJjZEdOdmJYQnNaWFJsUkdWbVpYSnlaV1F1Wm1seVpWZHBkR2dvSUdOaGJHeGlZV05yUTI5dWRHVjRkQ3dnV3lCcWNWaElVaXdnYzNSaGRIVnpWR1Y0ZENCZElDazdYRzVjYmx4MFhIUmNkR2xtSUNnZ1ptbHlaVWRzYjJKaGJITWdLU0I3WEc1Y2RGeDBYSFJjZEdkc2IySmhiRVYyWlc1MFEyOXVkR1Y0ZEM1MGNtbG5aMlZ5S0NCY0ltRnFZWGhEYjIxd2JHVjBaVndpTENCYklHcHhXRWhTTENCeklGMGdLVHRjYmx4dVhIUmNkRngwWEhRdkx5QklZVzVrYkdVZ2RHaGxJR2RzYjJKaGJDQkJTa0ZZSUdOdmRXNTBaWEpjYmx4MFhIUmNkRngwYVdZZ0tDQWhLQ0F0TFdwUmRXVnllUzVoWTNScGRtVWdLU0FwSUh0Y2JseDBYSFJjZEZ4MFhIUnFVWFZsY25rdVpYWmxiblF1ZEhKcFoyZGxjaWdnWENKaGFtRjRVM1J2Y0Z3aUlDazdYRzVjZEZ4MFhIUmNkSDFjYmx4MFhIUmNkSDFjYmx4MFhIUjlYRzVjYmx4MFhIUnlaWFIxY200Z2FuRllTRkk3WEc1Y2RIMHNYRzVjYmx4MFoyVjBTbE5QVGpvZ1puVnVZM1JwYjI0b0lIVnliQ3dnWkdGMFlTd2dZMkZzYkdKaFkyc2dLU0I3WEc1Y2RGeDBjbVYwZFhKdUlHcFJkV1Z5ZVM1blpYUW9JSFZ5YkN3Z1pHRjBZU3dnWTJGc2JHSmhZMnNzSUZ3aWFuTnZibHdpSUNrN1hHNWNkSDBzWEc1Y2JseDBaMlYwVTJOeWFYQjBPaUJtZFc1amRHbHZiaWdnZFhKc0xDQmpZV3hzWW1GamF5QXBJSHRjYmx4MFhIUnlaWFIxY200Z2FsRjFaWEo1TG1kbGRDZ2dkWEpzTENCMWJtUmxabWx1WldRc0lHTmhiR3hpWVdOckxDQmNJbk5qY21sd2RGd2lJQ2s3WEc1Y2RIMWNibjBnS1R0Y2JseHVhbEYxWlhKNUxtVmhZMmdvSUZzZ1hDSm5aWFJjSWl3Z1hDSndiM04wWENJZ1hTd2dablZ1WTNScGIyNG9JRjlwTENCdFpYUm9iMlFnS1NCN1hHNWNkR3BSZFdWeWVWc2diV1YwYUc5a0lGMGdQU0JtZFc1amRHbHZiaWdnZFhKc0xDQmtZWFJoTENCallXeHNZbUZqYXl3Z2RIbHdaU0FwSUh0Y2JseHVYSFJjZEM4dklGTm9hV1owSUdGeVozVnRaVzUwY3lCcFppQmtZWFJoSUdGeVozVnRaVzUwSUhkaGN5QnZiV2wwZEdWa1hHNWNkRngwYVdZZ0tDQnBjMFoxYm1OMGFXOXVLQ0JrWVhSaElDa2dLU0I3WEc1Y2RGeDBYSFIwZVhCbElEMGdkSGx3WlNCOGZDQmpZV3hzWW1GamF6dGNibHgwWEhSY2RHTmhiR3hpWVdOcklEMGdaR0YwWVR0Y2JseDBYSFJjZEdSaGRHRWdQU0IxYm1SbFptbHVaV1E3WEc1Y2RGeDBmVnh1WEc1Y2RGeDBMeThnVkdobElIVnliQ0JqWVc0Z1ltVWdZVzRnYjNCMGFXOXVjeUJ2WW1wbFkzUWdLSGRvYVdOb0lIUm9aVzRnYlhWemRDQm9ZWFpsSUM1MWNtd3BYRzVjZEZ4MGNtVjBkWEp1SUdwUmRXVnllUzVoYW1GNEtDQnFVWFZsY25rdVpYaDBaVzVrS0NCN1hHNWNkRngwWEhSMWNtdzZJSFZ5YkN4Y2JseDBYSFJjZEhSNWNHVTZJRzFsZEdodlpDeGNibHgwWEhSY2RHUmhkR0ZVZVhCbE9pQjBlWEJsTEZ4dVhIUmNkRngwWkdGMFlUb2daR0YwWVN4Y2JseDBYSFJjZEhOMVkyTmxjM002SUdOaGJHeGlZV05yWEc1Y2RGeDBmU3dnYWxGMVpYSjVMbWx6VUd4aGFXNVBZbXBsWTNRb0lIVnliQ0FwSUNZbUlIVnliQ0FwSUNrN1hHNWNkSDA3WEc1OUlDazdYRzVjYm1wUmRXVnllUzVoYW1GNFVISmxabWxzZEdWeUtDQm1kVzVqZEdsdmJpZ2djeUFwSUh0Y2JseDBkbUZ5SUdrN1hHNWNkR1p2Y2lBb0lHa2dhVzRnY3k1b1pXRmtaWEp6SUNrZ2UxeHVYSFJjZEdsbUlDZ2dhUzUwYjB4dmQyVnlRMkZ6WlNncElEMDlQU0JjSW1OdmJuUmxiblF0ZEhsd1pWd2lJQ2tnZTF4dVhIUmNkRngwY3k1amIyNTBaVzUwVkhsd1pTQTlJSE11YUdWaFpHVnljMXNnYVNCZElIeDhJRndpWENJN1hHNWNkRngwZlZ4dVhIUjlYRzU5SUNrN1hHNWNibHh1YWxGMVpYSjVMbDlsZG1Gc1ZYSnNJRDBnWm5WdVkzUnBiMjRvSUhWeWJDd2diM0IwYVc5dWN5d2daRzlqSUNrZ2UxeHVYSFJ5WlhSMWNtNGdhbEYxWlhKNUxtRnFZWGdvSUh0Y2JseDBYSFIxY213NklIVnliQ3hjYmx4dVhIUmNkQzh2SUUxaGEyVWdkR2hwY3lCbGVIQnNhV05wZEN3Z2MybHVZMlVnZFhObGNpQmpZVzRnYjNabGNuSnBaR1VnZEdocGN5QjBhSEp2ZFdkb0lHRnFZWGhUWlhSMWNDQW9kSEpoWXkweE1USTJOQ2xjYmx4MFhIUjBlWEJsT2lCY0lrZEZWRndpTEZ4dVhIUmNkR1JoZEdGVWVYQmxPaUJjSW5OamNtbHdkRndpTEZ4dVhIUmNkR05oWTJobE9pQjBjblZsTEZ4dVhIUmNkR0Z6ZVc1ak9pQm1ZV3h6WlN4Y2JseDBYSFJuYkc5aVlXdzZJR1poYkhObExGeHVYRzVjZEZ4MEx5OGdUMjVzZVNCbGRtRnNkV0YwWlNCMGFHVWdjbVZ6Y0c5dWMyVWdhV1lnYVhRZ2FYTWdjM1ZqWTJWemMyWjFiQ0FvWjJndE5ERXlOaWxjYmx4MFhIUXZMeUJrWVhSaFJtbHNkR1Z5SUdseklHNXZkQ0JwYm5admEyVmtJR1p2Y2lCbVlXbHNkWEpsSUhKbGMzQnZibk5sY3l3Z2MyOGdkWE5wYm1jZ2FYUWdhVzV6ZEdWaFpGeHVYSFJjZEM4dklHOW1JSFJvWlNCa1pXWmhkV3gwSUdOdmJuWmxjblJsY2lCcGN5QnJiSFZrWjNrZ1luVjBJR2wwSUhkdmNtdHpMbHh1WEhSY2RHTnZiblpsY25SbGNuTTZJSHRjYmx4MFhIUmNkRndpZEdWNGRDQnpZM0pwY0hSY0lqb2dablZ1WTNScGIyNG9LU0I3ZlZ4dVhIUmNkSDBzWEc1Y2RGeDBaR0YwWVVacGJIUmxjam9nWm5WdVkzUnBiMjRvSUhKbGMzQnZibk5sSUNrZ2UxeHVYSFJjZEZ4MGFsRjFaWEo1TG1kc2IySmhiRVYyWVd3b0lISmxjM0J2Ym5ObExDQnZjSFJwYjI1ekxDQmtiMk1nS1R0Y2JseDBYSFI5WEc1Y2RIMGdLVHRjYm4wN1hHNWNibHh1YWxGMVpYSjVMbVp1TG1WNGRHVnVaQ2dnZTF4dVhIUjNjbUZ3UVd4c09pQm1kVzVqZEdsdmJpZ2dhSFJ0YkNBcElIdGNibHgwWEhSMllYSWdkM0poY0R0Y2JseHVYSFJjZEdsbUlDZ2dkR2hwYzFzZ01DQmRJQ2tnZTF4dVhIUmNkRngwYVdZZ0tDQnBjMFoxYm1OMGFXOXVLQ0JvZEcxc0lDa2dLU0I3WEc1Y2RGeDBYSFJjZEdoMGJXd2dQU0JvZEcxc0xtTmhiR3dvSUhSb2FYTmJJREFnWFNBcE8xeHVYSFJjZEZ4MGZWeHVYRzVjZEZ4MFhIUXZMeUJVYUdVZ1pXeGxiV1Z1ZEhNZ2RHOGdkM0poY0NCMGFHVWdkR0Z5WjJWMElHRnliM1Z1WkZ4dVhIUmNkRngwZDNKaGNDQTlJR3BSZFdWeWVTZ2dhSFJ0YkN3Z2RHaHBjMXNnTUNCZExtOTNibVZ5Ukc5amRXMWxiblFnS1M1bGNTZ2dNQ0FwTG1Oc2IyNWxLQ0IwY25WbElDazdYRzVjYmx4MFhIUmNkR2xtSUNnZ2RHaHBjMXNnTUNCZExuQmhjbVZ1ZEU1dlpHVWdLU0I3WEc1Y2RGeDBYSFJjZEhkeVlYQXVhVzV6WlhKMFFtVm1iM0psS0NCMGFHbHpXeUF3SUYwZ0tUdGNibHgwWEhSY2RIMWNibHh1WEhSY2RGeDBkM0poY0M1dFlYQW9JR1oxYm1OMGFXOXVLQ2tnZTF4dVhIUmNkRngwWEhSMllYSWdaV3hsYlNBOUlIUm9hWE03WEc1Y2JseDBYSFJjZEZ4MGQyaHBiR1VnS0NCbGJHVnRMbVpwY25OMFJXeGxiV1Z1ZEVOb2FXeGtJQ2tnZTF4dVhIUmNkRngwWEhSY2RHVnNaVzBnUFNCbGJHVnRMbVpwY25OMFJXeGxiV1Z1ZEVOb2FXeGtPMXh1WEhSY2RGeDBYSFI5WEc1Y2JseDBYSFJjZEZ4MGNtVjBkWEp1SUdWc1pXMDdYRzVjZEZ4MFhIUjlJQ2t1WVhCd1pXNWtLQ0IwYUdseklDazdYRzVjZEZ4MGZWeHVYRzVjZEZ4MGNtVjBkWEp1SUhSb2FYTTdYRzVjZEgwc1hHNWNibHgwZDNKaGNFbHVibVZ5T2lCbWRXNWpkR2x2YmlnZ2FIUnRiQ0FwSUh0Y2JseDBYSFJwWmlBb0lHbHpSblZ1WTNScGIyNG9JR2gwYld3Z0tTQXBJSHRjYmx4MFhIUmNkSEpsZEhWeWJpQjBhR2x6TG1WaFkyZ29JR1oxYm1OMGFXOXVLQ0JwSUNrZ2UxeHVYSFJjZEZ4MFhIUnFVWFZsY25rb0lIUm9hWE1nS1M1M2NtRndTVzV1WlhJb0lHaDBiV3d1WTJGc2JDZ2dkR2hwY3l3Z2FTQXBJQ2s3WEc1Y2RGeDBYSFI5SUNrN1hHNWNkRngwZlZ4dVhHNWNkRngwY21WMGRYSnVJSFJvYVhNdVpXRmphQ2dnWm5WdVkzUnBiMjRvS1NCN1hHNWNkRngwWEhSMllYSWdjMlZzWmlBOUlHcFJkV1Z5ZVNnZ2RHaHBjeUFwTEZ4dVhIUmNkRngwWEhSamIyNTBaVzUwY3lBOUlITmxiR1l1WTI5dWRHVnVkSE1vS1R0Y2JseHVYSFJjZEZ4MGFXWWdLQ0JqYjI1MFpXNTBjeTVzWlc1bmRHZ2dLU0I3WEc1Y2RGeDBYSFJjZEdOdmJuUmxiblJ6TG5keVlYQkJiR3dvSUdoMGJXd2dLVHRjYmx4dVhIUmNkRngwZlNCbGJITmxJSHRjYmx4MFhIUmNkRngwYzJWc1ppNWhjSEJsYm1Rb0lHaDBiV3dnS1R0Y2JseDBYSFJjZEgxY2JseDBYSFI5SUNrN1hHNWNkSDBzWEc1Y2JseDBkM0poY0RvZ1puVnVZM1JwYjI0b0lHaDBiV3dnS1NCN1hHNWNkRngwZG1GeUlHaDBiV3hKYzBaMWJtTjBhVzl1SUQwZ2FYTkdkVzVqZEdsdmJpZ2dhSFJ0YkNBcE8xeHVYRzVjZEZ4MGNtVjBkWEp1SUhSb2FYTXVaV0ZqYUNnZ1puVnVZM1JwYjI0b0lHa2dLU0I3WEc1Y2RGeDBYSFJxVVhWbGNua29JSFJvYVhNZ0tTNTNjbUZ3UVd4c0tDQm9kRzFzU1hOR2RXNWpkR2x2YmlBL0lHaDBiV3d1WTJGc2JDZ2dkR2hwY3l3Z2FTQXBJRG9nYUhSdGJDQXBPMXh1WEhSY2RIMGdLVHRjYmx4MGZTeGNibHh1WEhSMWJuZHlZWEE2SUdaMWJtTjBhVzl1S0NCelpXeGxZM1J2Y2lBcElIdGNibHgwWEhSMGFHbHpMbkJoY21WdWRDZ2djMlZzWldOMGIzSWdLUzV1YjNRb0lGd2lZbTlrZVZ3aUlDa3VaV0ZqYUNnZ1puVnVZM1JwYjI0b0tTQjdYRzVjZEZ4MFhIUnFVWFZsY25rb0lIUm9hWE1nS1M1eVpYQnNZV05sVjJsMGFDZ2dkR2hwY3k1amFHbHNaRTV2WkdWeklDazdYRzVjZEZ4MGZTQXBPMXh1WEhSY2RISmxkSFZ5YmlCMGFHbHpPMXh1WEhSOVhHNTlJQ2s3WEc1Y2JseHVhbEYxWlhKNUxtVjRjSEl1Y0hObGRXUnZjeTVvYVdSa1pXNGdQU0JtZFc1amRHbHZiaWdnWld4bGJTQXBJSHRjYmx4MGNtVjBkWEp1SUNGcVVYVmxjbmt1Wlhod2NpNXdjMlYxWkc5ekxuWnBjMmxpYkdVb0lHVnNaVzBnS1R0Y2JuMDdYRzVxVVhWbGNua3VaWGh3Y2k1d2MyVjFaRzl6TG5acGMybGliR1VnUFNCbWRXNWpkR2x2YmlnZ1pXeGxiU0FwSUh0Y2JseDBjbVYwZFhKdUlDRWhLQ0JsYkdWdExtOW1abk5sZEZkcFpIUm9JSHg4SUdWc1pXMHViMlptYzJWMFNHVnBaMmgwSUh4OElHVnNaVzB1WjJWMFEyeHBaVzUwVW1WamRITW9LUzVzWlc1bmRHZ2dLVHRjYm4wN1hHNWNibHh1WEc1Y2JtcFJkV1Z5ZVM1aGFtRjRVMlYwZEdsdVozTXVlR2h5SUQwZ1puVnVZM1JwYjI0b0tTQjdYRzVjZEhSeWVTQjdYRzVjZEZ4MGNtVjBkWEp1SUc1bGR5QjNhVzVrYjNjdVdFMU1TSFIwY0ZKbGNYVmxjM1FvS1R0Y2JseDBmU0JqWVhSamFDQW9JR1VnS1NCN2ZWeHVmVHRjYmx4dWRtRnlJSGhvY2xOMVkyTmxjM05UZEdGMGRYTWdQU0I3WEc1Y2JseDBYSFF2THlCR2FXeGxJSEJ5YjNSdlkyOXNJR0ZzZDJGNWN5QjVhV1ZzWkhNZ2MzUmhkSFZ6SUdOdlpHVWdNQ3dnWVhOemRXMWxJREl3TUZ4dVhIUmNkREE2SURJd01DeGNibHh1WEhSY2RDOHZJRk4xY0hCdmNuUTZJRWxGSUR3OU9TQnZibXg1WEc1Y2RGeDBMeThnZEhKaFl5MHhORFV3T2lCemIyMWxkR2x0WlhNZ1NVVWdjbVYwZFhKdWN5QXhNakl6SUhkb1pXNGdhWFFnYzJodmRXeGtJR0psSURJd05GeHVYSFJjZERFeU1qTTZJREl3TkZ4dVhIUjlMRnh1WEhSNGFISlRkWEJ3YjNKMFpXUWdQU0JxVVhWbGNua3VZV3BoZUZObGRIUnBibWR6TG5ob2NpZ3BPMXh1WEc1emRYQndiM0owTG1OdmNuTWdQU0FoSVhob2NsTjFjSEJ2Y25SbFpDQW1KaUFvSUZ3aWQybDBhRU55WldSbGJuUnBZV3h6WENJZ2FXNGdlR2h5VTNWd2NHOXlkR1ZrSUNrN1hHNXpkWEJ3YjNKMExtRnFZWGdnUFNCNGFISlRkWEJ3YjNKMFpXUWdQU0FoSVhob2NsTjFjSEJ2Y25SbFpEdGNibHh1YWxGMVpYSjVMbUZxWVhoVWNtRnVjM0J2Y25Rb0lHWjFibU4wYVc5dUtDQnZjSFJwYjI1eklDa2dlMXh1WEhSMllYSWdZMkZzYkdKaFkyc3NJR1Z5Y205eVEyRnNiR0poWTJzN1hHNWNibHgwTHk4Z1EzSnZjM01nWkc5dFlXbHVJRzl1YkhrZ1lXeHNiM2RsWkNCcFppQnpkWEJ3YjNKMFpXUWdkR2h5YjNWbmFDQllUVXhJZEhSd1VtVnhkV1Z6ZEZ4dVhIUnBaaUFvSUhOMWNIQnZjblF1WTI5eWN5QjhmQ0I0YUhKVGRYQndiM0owWldRZ0ppWWdJVzl3ZEdsdmJuTXVZM0p2YzNORWIyMWhhVzRnS1NCN1hHNWNkRngwY21WMGRYSnVJSHRjYmx4MFhIUmNkSE5sYm1RNklHWjFibU4wYVc5dUtDQm9aV0ZrWlhKekxDQmpiMjF3YkdWMFpTQXBJSHRjYmx4MFhIUmNkRngwZG1GeUlHa3NYRzVjZEZ4MFhIUmNkRngwZUdoeUlEMGdiM0IwYVc5dWN5NTRhSElvS1R0Y2JseHVYSFJjZEZ4MFhIUjRhSEl1YjNCbGJpaGNibHgwWEhSY2RGeDBYSFJ2Y0hScGIyNXpMblI1Y0dVc1hHNWNkRngwWEhSY2RGeDBiM0IwYVc5dWN5NTFjbXdzWEc1Y2RGeDBYSFJjZEZ4MGIzQjBhVzl1Y3k1aGMzbHVZeXhjYmx4MFhIUmNkRngwWEhSdmNIUnBiMjV6TG5WelpYSnVZVzFsTEZ4dVhIUmNkRngwWEhSY2RHOXdkR2x2Ym5NdWNHRnpjM2R2Y21SY2JseDBYSFJjZEZ4MEtUdGNibHh1WEhSY2RGeDBYSFF2THlCQmNIQnNlU0JqZFhOMGIyMGdabWxsYkdSeklHbG1JSEJ5YjNacFpHVmtYRzVjZEZ4MFhIUmNkR2xtSUNnZ2IzQjBhVzl1Y3k1NGFISkdhV1ZzWkhNZ0tTQjdYRzVjZEZ4MFhIUmNkRngwWm05eUlDZ2dhU0JwYmlCdmNIUnBiMjV6TG5ob2NrWnBaV3hrY3lBcElIdGNibHgwWEhSY2RGeDBYSFJjZEhob2Nsc2dhU0JkSUQwZ2IzQjBhVzl1Y3k1NGFISkdhV1ZzWkhOYklHa2dYVHRjYmx4MFhIUmNkRngwWEhSOVhHNWNkRngwWEhSY2RIMWNibHh1WEhSY2RGeDBYSFF2THlCUGRtVnljbWxrWlNCdGFXMWxJSFI1Y0dVZ2FXWWdibVZsWkdWa1hHNWNkRngwWEhSY2RHbG1JQ2dnYjNCMGFXOXVjeTV0YVcxbFZIbHdaU0FtSmlCNGFISXViM1psY25KcFpHVk5hVzFsVkhsd1pTQXBJSHRjYmx4MFhIUmNkRngwWEhSNGFISXViM1psY25KcFpHVk5hVzFsVkhsd1pTZ2diM0IwYVc5dWN5NXRhVzFsVkhsd1pTQXBPMXh1WEhSY2RGeDBYSFI5WEc1Y2JseDBYSFJjZEZ4MEx5OGdXQzFTWlhGMVpYTjBaV1F0VjJsMGFDQm9aV0ZrWlhKY2JseDBYSFJjZEZ4MEx5OGdSbTl5SUdOeWIzTnpMV1J2YldGcGJpQnlaWEYxWlhOMGN5d2djMlZsYVc1bklHRnpJR052Ym1ScGRHbHZibk1nWm05eUlHRWdjSEpsWm14cFoyaDBJR0Z5WlZ4dVhIUmNkRngwWEhRdkx5QmhhMmx1SUhSdklHRWdhbWxuYzJGM0lIQjFlbnBzWlN3Z2QyVWdjMmx0Y0d4NUlHNWxkbVZ5SUhObGRDQnBkQ0IwYnlCaVpTQnpkWEpsTGx4dVhIUmNkRngwWEhRdkx5QW9hWFFnWTJGdUlHRnNkMkY1Y3lCaVpTQnpaWFFnYjI0Z1lTQndaWEl0Y21WeGRXVnpkQ0JpWVhOcGN5QnZjaUJsZG1WdUlIVnphVzVuSUdGcVlYaFRaWFIxY0NsY2JseDBYSFJjZEZ4MEx5OGdSbTl5SUhOaGJXVXRaRzl0WVdsdUlISmxjWFZsYzNSekxDQjNiMjRuZENCamFHRnVaMlVnYUdWaFpHVnlJR2xtSUdGc2NtVmhaSGtnY0hKdmRtbGtaV1F1WEc1Y2RGeDBYSFJjZEdsbUlDZ2dJVzl3ZEdsdmJuTXVZM0p2YzNORWIyMWhhVzRnSmlZZ0lXaGxZV1JsY25OYklGd2lXQzFTWlhGMVpYTjBaV1F0VjJsMGFGd2lJRjBnS1NCN1hHNWNkRngwWEhSY2RGeDBhR1ZoWkdWeWMxc2dYQ0pZTFZKbGNYVmxjM1JsWkMxWGFYUm9YQ0lnWFNBOUlGd2lXRTFNU0hSMGNGSmxjWFZsYzNSY0lqdGNibHgwWEhSY2RGeDBmVnh1WEc1Y2RGeDBYSFJjZEM4dklGTmxkQ0JvWldGa1pYSnpYRzVjZEZ4MFhIUmNkR1p2Y2lBb0lHa2dhVzRnYUdWaFpHVnljeUFwSUh0Y2JseDBYSFJjZEZ4MFhIUjRhSEl1YzJWMFVtVnhkV1Z6ZEVobFlXUmxjaWdnYVN3Z2FHVmhaR1Z5YzFzZ2FTQmRJQ2s3WEc1Y2RGeDBYSFJjZEgxY2JseHVYSFJjZEZ4MFhIUXZMeUJEWVd4c1ltRmphMXh1WEhSY2RGeDBYSFJqWVd4c1ltRmpheUE5SUdaMWJtTjBhVzl1S0NCMGVYQmxJQ2tnZTF4dVhIUmNkRngwWEhSY2RISmxkSFZ5YmlCbWRXNWpkR2x2YmlncElIdGNibHgwWEhSY2RGeDBYSFJjZEdsbUlDZ2dZMkZzYkdKaFkyc2dLU0I3WEc1Y2RGeDBYSFJjZEZ4MFhIUmNkR05oYkd4aVlXTnJJRDBnWlhKeWIzSkRZV3hzWW1GamF5QTlJSGhvY2k1dmJteHZZV1FnUFZ4dVhIUmNkRngwWEhSY2RGeDBYSFJjZEhob2NpNXZibVZ5Y205eUlEMGdlR2h5TG05dVlXSnZjblFnUFNCNGFISXViMjUwYVcxbGIzVjBJRDFjYmx4MFhIUmNkRngwWEhSY2RGeDBYSFJjZEhob2NpNXZibkpsWVdSNWMzUmhkR1ZqYUdGdVoyVWdQU0J1ZFd4c08xeHVYRzVjZEZ4MFhIUmNkRngwWEhSY2RHbG1JQ2dnZEhsd1pTQTlQVDBnWENKaFltOXlkRndpSUNrZ2UxeHVYSFJjZEZ4MFhIUmNkRngwWEhSY2RIaG9jaTVoWW05eWRDZ3BPMXh1WEhSY2RGeDBYSFJjZEZ4MFhIUjlJR1ZzYzJVZ2FXWWdLQ0IwZVhCbElEMDlQU0JjSW1WeWNtOXlYQ0lnS1NCN1hHNWNibHgwWEhSY2RGeDBYSFJjZEZ4MFhIUXZMeUJUZFhCd2IzSjBPaUJKUlNBOFBUa2diMjVzZVZ4dVhIUmNkRngwWEhSY2RGeDBYSFJjZEM4dklFOXVJR0VnYldGdWRXRnNJRzVoZEdsMlpTQmhZbTl5ZEN3Z1NVVTVJSFJvY205M2MxeHVYSFJjZEZ4MFhIUmNkRngwWEhSY2RDOHZJR1Z5Y205eWN5QnZiaUJoYm5rZ2NISnZjR1Z5ZEhrZ1lXTmpaWE56SUhSb1lYUWdhWE1nYm05MElISmxZV1I1VTNSaGRHVmNibHgwWEhSY2RGeDBYSFJjZEZ4MFhIUnBaaUFvSUhSNWNHVnZaaUI0YUhJdWMzUmhkSFZ6SUNFOVBTQmNJbTUxYldKbGNsd2lJQ2tnZTF4dVhIUmNkRngwWEhSY2RGeDBYSFJjZEZ4MFkyOXRjR3hsZEdVb0lEQXNJRndpWlhKeWIzSmNJaUFwTzF4dVhIUmNkRngwWEhSY2RGeDBYSFJjZEgwZ1pXeHpaU0I3WEc1Y2RGeDBYSFJjZEZ4MFhIUmNkRngwWEhSamIyMXdiR1YwWlNoY2JseHVYSFJjZEZ4MFhIUmNkRngwWEhSY2RGeDBYSFF2THlCR2FXeGxPaUJ3Y205MGIyTnZiQ0JoYkhkaGVYTWdlV2xsYkdSeklITjBZWFIxY3lBd095QnpaV1VnZEhKaFl5MDROakExTENCMGNtRmpMVEUwTWpBM1hHNWNkRngwWEhSY2RGeDBYSFJjZEZ4MFhIUmNkSGhvY2k1emRHRjBkWE1zWEc1Y2RGeDBYSFJjZEZ4MFhIUmNkRngwWEhSY2RIaG9jaTV6ZEdGMGRYTlVaWGgwWEc1Y2RGeDBYSFJjZEZ4MFhIUmNkRngwWEhRcE8xeHVYSFJjZEZ4MFhIUmNkRngwWEhSY2RIMWNibHgwWEhSY2RGeDBYSFJjZEZ4MGZTQmxiSE5sSUh0Y2JseDBYSFJjZEZ4MFhIUmNkRngwWEhSamIyMXdiR1YwWlNoY2JseDBYSFJjZEZ4MFhIUmNkRngwWEhSY2RIaG9jbE4xWTJObGMzTlRkR0YwZFhOYklIaG9jaTV6ZEdGMGRYTWdYU0I4ZkNCNGFISXVjM1JoZEhWekxGeHVYSFJjZEZ4MFhIUmNkRngwWEhSY2RGeDBlR2h5TG5OMFlYUjFjMVJsZUhRc1hHNWNibHgwWEhSY2RGeDBYSFJjZEZ4MFhIUmNkQzh2SUZOMWNIQnZjblE2SUVsRklEdzlPU0J2Ym14NVhHNWNkRngwWEhSY2RGeDBYSFJjZEZ4MFhIUXZMeUJKUlRrZ2FHRnpJRzV2SUZoSVVqSWdZblYwSUhSb2NtOTNjeUJ2YmlCaWFXNWhjbmtnS0hSeVlXTXRNVEUwTWpZcFhHNWNkRngwWEhSY2RGeDBYSFJjZEZ4MFhIUXZMeUJHYjNJZ1dFaFNNaUJ1YjI0dGRHVjRkQ3dnYkdWMElIUm9aU0JqWVd4c1pYSWdhR0Z1Wkd4bElHbDBJQ2huYUMweU5EazRLVnh1WEhSY2RGeDBYSFJjZEZ4MFhIUmNkRngwS0NCNGFISXVjbVZ6Y0c5dWMyVlVlWEJsSUh4OElGd2lkR1Y0ZEZ3aUlDa2dJVDA5SUZ3aWRHVjRkRndpSUNCOGZGeHVYSFJjZEZ4MFhIUmNkRngwWEhSY2RGeDBkSGx3Wlc5bUlIaG9jaTV5WlhOd2IyNXpaVlJsZUhRZ0lUMDlJRndpYzNSeWFXNW5YQ0lnUDF4dVhIUmNkRngwWEhSY2RGeDBYSFJjZEZ4MFhIUjdJR0pwYm1GeWVUb2dlR2h5TG5KbGMzQnZibk5sSUgwZ09seHVYSFJjZEZ4MFhIUmNkRngwWEhSY2RGeDBYSFI3SUhSbGVIUTZJSGhvY2k1eVpYTndiMjV6WlZSbGVIUWdmU3hjYmx4MFhIUmNkRngwWEhSY2RGeDBYSFJjZEhob2NpNW5aWFJCYkd4U1pYTndiMjV6WlVobFlXUmxjbk1vS1Z4dVhIUmNkRngwWEhSY2RGeDBYSFJjZENrN1hHNWNkRngwWEhSY2RGeDBYSFJjZEgxY2JseDBYSFJjZEZ4MFhIUmNkSDFjYmx4MFhIUmNkRngwWEhSOU8xeHVYSFJjZEZ4MFhIUjlPMXh1WEc1Y2RGeDBYSFJjZEM4dklFeHBjM1JsYmlCMGJ5QmxkbVZ1ZEhOY2JseDBYSFJjZEZ4MGVHaHlMbTl1Ykc5aFpDQTlJR05oYkd4aVlXTnJLQ2s3WEc1Y2RGeDBYSFJjZEdWeWNtOXlRMkZzYkdKaFkyc2dQU0I0YUhJdWIyNWxjbkp2Y2lBOUlIaG9jaTV2Ym5ScGJXVnZkWFFnUFNCallXeHNZbUZqYXlnZ1hDSmxjbkp2Y2x3aUlDazdYRzVjYmx4MFhIUmNkRngwTHk4Z1UzVndjRzl5ZERvZ1NVVWdPU0J2Ym14NVhHNWNkRngwWEhSY2RDOHZJRlZ6WlNCdmJuSmxZV1I1YzNSaGRHVmphR0Z1WjJVZ2RHOGdjbVZ3YkdGalpTQnZibUZpYjNKMFhHNWNkRngwWEhSY2RDOHZJSFJ2SUdoaGJtUnNaU0IxYm1OaGRXZG9kQ0JoWW05eWRITmNibHgwWEhSY2RGeDBhV1lnS0NCNGFISXViMjVoWW05eWRDQWhQVDBnZFc1a1pXWnBibVZrSUNrZ2UxeHVYSFJjZEZ4MFhIUmNkSGhvY2k1dmJtRmliM0owSUQwZ1pYSnliM0pEWVd4c1ltRmphenRjYmx4MFhIUmNkRngwZlNCbGJITmxJSHRjYmx4MFhIUmNkRngwWEhSNGFISXViMjV5WldGa2VYTjBZWFJsWTJoaGJtZGxJRDBnWm5WdVkzUnBiMjRvS1NCN1hHNWNibHgwWEhSY2RGeDBYSFJjZEM4dklFTm9aV05ySUhKbFlXUjVVM1JoZEdVZ1ltVm1iM0psSUhScGJXVnZkWFFnWVhNZ2FYUWdZMmhoYm1kbGMxeHVYSFJjZEZ4MFhIUmNkRngwYVdZZ0tDQjRhSEl1Y21WaFpIbFRkR0YwWlNBOVBUMGdOQ0FwSUh0Y2JseHVYSFJjZEZ4MFhIUmNkRngwWEhRdkx5QkJiR3h2ZHlCdmJtVnljbTl5SUhSdklHSmxJR05oYkd4bFpDQm1hWEp6ZEN4Y2JseDBYSFJjZEZ4MFhIUmNkRngwTHk4Z1luVjBJSFJvWVhRZ2QybHNiQ0J1YjNRZ2FHRnVaR3hsSUdFZ2JtRjBhWFpsSUdGaWIzSjBYRzVjZEZ4MFhIUmNkRngwWEhSY2RDOHZJRUZzYzI4c0lITmhkbVVnWlhKeWIzSkRZV3hzWW1GamF5QjBieUJoSUhaaGNtbGhZbXhsWEc1Y2RGeDBYSFJjZEZ4MFhIUmNkQzh2SUdGeklIaG9jaTV2Ym1WeWNtOXlJR05oYm01dmRDQmlaU0JoWTJObGMzTmxaRnh1WEhSY2RGeDBYSFJjZEZ4MFhIUjNhVzVrYjNjdWMyVjBWR2x0Wlc5MWRDZ2dablZ1WTNScGIyNG9LU0I3WEc1Y2RGeDBYSFJjZEZ4MFhIUmNkRngwYVdZZ0tDQmpZV3hzWW1GamF5QXBJSHRjYmx4MFhIUmNkRngwWEhSY2RGeDBYSFJjZEdWeWNtOXlRMkZzYkdKaFkyc29LVHRjYmx4MFhIUmNkRngwWEhSY2RGeDBYSFI5WEc1Y2RGeDBYSFJjZEZ4MFhIUmNkSDBnS1R0Y2JseDBYSFJjZEZ4MFhIUmNkSDFjYmx4MFhIUmNkRngwWEhSOU8xeHVYSFJjZEZ4MFhIUjlYRzVjYmx4MFhIUmNkRngwTHk4Z1EzSmxZWFJsSUhSb1pTQmhZbTl5ZENCallXeHNZbUZqYTF4dVhIUmNkRngwWEhSallXeHNZbUZqYXlBOUlHTmhiR3hpWVdOcktDQmNJbUZpYjNKMFhDSWdLVHRjYmx4dVhIUmNkRngwWEhSMGNua2dlMXh1WEc1Y2RGeDBYSFJjZEZ4MEx5OGdSRzhnYzJWdVpDQjBhR1VnY21WeGRXVnpkQ0FvZEdocGN5QnRZWGtnY21GcGMyVWdZVzRnWlhoalpYQjBhVzl1S1Z4dVhIUmNkRngwWEhSY2RIaG9jaTV6Wlc1a0tDQnZjSFJwYjI1ekxtaGhjME52Ym5SbGJuUWdKaVlnYjNCMGFXOXVjeTVrWVhSaElIeDhJRzUxYkd3Z0tUdGNibHgwWEhSY2RGeDBmU0JqWVhSamFDQW9JR1VnS1NCN1hHNWNibHgwWEhSY2RGeDBYSFF2THlCMGNtRmpMVEUwTmpnek9pQlBibXg1SUhKbGRHaHliM2NnYVdZZ2RHaHBjeUJvWVhOdUozUWdZbVZsYmlCdWIzUnBabWxsWkNCaGN5QmhiaUJsY25KdmNpQjVaWFJjYmx4MFhIUmNkRngwWEhScFppQW9JR05oYkd4aVlXTnJJQ2tnZTF4dVhIUmNkRngwWEhSY2RGeDBkR2h5YjNjZ1pUdGNibHgwWEhSY2RGeDBYSFI5WEc1Y2RGeDBYSFJjZEgxY2JseDBYSFJjZEgwc1hHNWNibHgwWEhSY2RHRmliM0owT2lCbWRXNWpkR2x2YmlncElIdGNibHgwWEhSY2RGeDBhV1lnS0NCallXeHNZbUZqYXlBcElIdGNibHgwWEhSY2RGeDBYSFJqWVd4c1ltRmpheWdwTzF4dVhIUmNkRngwWEhSOVhHNWNkRngwWEhSOVhHNWNkRngwZlR0Y2JseDBmVnh1ZlNBcE8xeHVYRzVjYmx4dVhHNHZMeUJRY21WMlpXNTBJR0YxZEc4dFpYaGxZM1YwYVc5dUlHOW1JSE5qY21sd2RITWdkMmhsYmlCdWJ5QmxlSEJzYVdOcGRDQmtZWFJoVkhsd1pTQjNZWE1nY0hKdmRtbGtaV1FnS0ZObFpTQm5hQzB5TkRNeUtWeHVhbEYxWlhKNUxtRnFZWGhRY21WbWFXeDBaWElvSUdaMWJtTjBhVzl1S0NCeklDa2dlMXh1WEhScFppQW9JSE11WTNKdmMzTkViMjFoYVc0Z0tTQjdYRzVjZEZ4MGN5NWpiMjUwWlc1MGN5NXpZM0pwY0hRZ1BTQm1ZV3h6WlR0Y2JseDBmVnh1ZlNBcE8xeHVYRzR2THlCSmJuTjBZV3hzSUhOamNtbHdkQ0JrWVhSaFZIbHdaVnh1YWxGMVpYSjVMbUZxWVhoVFpYUjFjQ2dnZTF4dVhIUmhZMk5sY0hSek9pQjdYRzVjZEZ4MGMyTnlhWEIwT2lCY0luUmxlSFF2YW1GMllYTmpjbWx3ZEN3Z1lYQndiR2xqWVhScGIyNHZhbUYyWVhOamNtbHdkQ3dnWENJZ0sxeHVYSFJjZEZ4MFhDSmhjSEJzYVdOaGRHbHZiaTlsWTIxaGMyTnlhWEIwTENCaGNIQnNhV05oZEdsdmJpOTRMV1ZqYldGelkzSnBjSFJjSWx4dVhIUjlMRnh1WEhSamIyNTBaVzUwY3pvZ2UxeHVYSFJjZEhOamNtbHdkRG9nTDF4Y1lpZy9PbXBoZG1GOFpXTnRZU2x6WTNKcGNIUmNYR0l2WEc1Y2RIMHNYRzVjZEdOdmJuWmxjblJsY25NNklIdGNibHgwWEhSY0luUmxlSFFnYzJOeWFYQjBYQ0k2SUdaMWJtTjBhVzl1S0NCMFpYaDBJQ2tnZTF4dVhIUmNkRngwYWxGMVpYSjVMbWRzYjJKaGJFVjJZV3dvSUhSbGVIUWdLVHRjYmx4MFhIUmNkSEpsZEhWeWJpQjBaWGgwTzF4dVhIUmNkSDFjYmx4MGZWeHVmU0FwTzF4dVhHNHZMeUJJWVc1a2JHVWdZMkZqYUdVbmN5QnpjR1ZqYVdGc0lHTmhjMlVnWVc1a0lHTnliM056Ukc5dFlXbHVYRzVxVVhWbGNua3VZV3BoZUZCeVpXWnBiSFJsY2lnZ1hDSnpZM0pwY0hSY0lpd2dablZ1WTNScGIyNG9JSE1nS1NCN1hHNWNkR2xtSUNnZ2N5NWpZV05vWlNBOVBUMGdkVzVrWldacGJtVmtJQ2tnZTF4dVhIUmNkSE11WTJGamFHVWdQU0JtWVd4elpUdGNibHgwZlZ4dVhIUnBaaUFvSUhNdVkzSnZjM05FYjIxaGFXNGdLU0I3WEc1Y2RGeDBjeTUwZVhCbElEMGdYQ0pIUlZSY0lqdGNibHgwZlZ4dWZTQXBPMXh1WEc0dkx5QkNhVzVrSUhOamNtbHdkQ0IwWVdjZ2FHRmpheUIwY21GdWMzQnZjblJjYm1wUmRXVnllUzVoYW1GNFZISmhibk53YjNKMEtDQmNJbk5qY21sd2RGd2lMQ0JtZFc1amRHbHZiaWdnY3lBcElIdGNibHh1WEhRdkx5QlVhR2x6SUhSeVlXNXpjRzl5ZENCdmJteDVJR1JsWVd4eklIZHBkR2dnWTNKdmMzTWdaRzl0WVdsdUlHOXlJR1p2Y21ObFpDMWllUzFoZEhSeWN5QnlaWEYxWlhOMGMxeHVYSFJwWmlBb0lITXVZM0p2YzNORWIyMWhhVzRnZkh3Z2N5NXpZM0pwY0hSQmRIUnljeUFwSUh0Y2JseDBYSFIyWVhJZ2MyTnlhWEIwTENCallXeHNZbUZqYXp0Y2JseDBYSFJ5WlhSMWNtNGdlMXh1WEhSY2RGeDBjMlZ1WkRvZ1puVnVZM1JwYjI0b0lGOHNJR052YlhCc1pYUmxJQ2tnZTF4dVhIUmNkRngwWEhSelkzSnBjSFFnUFNCcVVYVmxjbmtvSUZ3aVBITmpjbWx3ZEQ1Y0lpQXBYRzVjZEZ4MFhIUmNkRngwTG1GMGRISW9JSE11YzJOeWFYQjBRWFIwY25NZ2ZId2dlMzBnS1Z4dVhIUmNkRngwWEhSY2RDNXdjbTl3S0NCN0lHTm9ZWEp6WlhRNklITXVjMk55YVhCMFEyaGhjbk5sZEN3Z2MzSmpPaUJ6TG5WeWJDQjlJQ2xjYmx4MFhIUmNkRngwWEhRdWIyNG9JRndpYkc5aFpDQmxjbkp2Y2x3aUxDQmpZV3hzWW1GamF5QTlJR1oxYm1OMGFXOXVLQ0JsZG5RZ0tTQjdYRzVjZEZ4MFhIUmNkRngwWEhSelkzSnBjSFF1Y21WdGIzWmxLQ2s3WEc1Y2RGeDBYSFJjZEZ4MFhIUmpZV3hzWW1GamF5QTlJRzUxYkd3N1hHNWNkRngwWEhSY2RGeDBYSFJwWmlBb0lHVjJkQ0FwSUh0Y2JseDBYSFJjZEZ4MFhIUmNkRngwWTI5dGNHeGxkR1VvSUdWMmRDNTBlWEJsSUQwOVBTQmNJbVZ5Y205eVhDSWdQeUEwTURRZ09pQXlNREFzSUdWMmRDNTBlWEJsSUNrN1hHNWNkRngwWEhSY2RGeDBYSFI5WEc1Y2RGeDBYSFJjZEZ4MGZTQXBPMXh1WEc1Y2RGeDBYSFJjZEM4dklGVnpaU0J1WVhScGRtVWdSRTlOSUcxaGJtbHdkV3hoZEdsdmJpQjBieUJoZG05cFpDQnZkWElnWkc5dFRXRnVhWEFnUVVwQldDQjBjbWxqYTJWeWVWeHVYSFJjZEZ4MFhIUmtiMk4xYldWdWRDNW9aV0ZrTG1Gd2NHVnVaRU5vYVd4a0tDQnpZM0pwY0hSYklEQWdYU0FwTzF4dVhIUmNkRngwZlN4Y2JseDBYSFJjZEdGaWIzSjBPaUJtZFc1amRHbHZiaWdwSUh0Y2JseDBYSFJjZEZ4MGFXWWdLQ0JqWVd4c1ltRmpheUFwSUh0Y2JseDBYSFJjZEZ4MFhIUmpZV3hzWW1GamF5Z3BPMXh1WEhSY2RGeDBYSFI5WEc1Y2RGeDBYSFI5WEc1Y2RGeDBmVHRjYmx4MGZWeHVmU0FwTzF4dVhHNWNibHh1WEc1MllYSWdiMnhrUTJGc2JHSmhZMnR6SUQwZ1cxMHNYRzVjZEhKcWMyOXVjQ0E5SUM4b1BTbGNYRDhvUHowbWZDUXBmRnhjUDF4Y1B5ODdYRzVjYmk4dklFUmxabUYxYkhRZ2FuTnZibkFnYzJWMGRHbHVaM05jYm1wUmRXVnllUzVoYW1GNFUyVjBkWEFvSUh0Y2JseDBhbk52Ym5BNklGd2lZMkZzYkdKaFkydGNJaXhjYmx4MGFuTnZibkJEWVd4c1ltRmphem9nWm5WdVkzUnBiMjRvS1NCN1hHNWNkRngwZG1GeUlHTmhiR3hpWVdOcklEMGdiMnhrUTJGc2JHSmhZMnR6TG5CdmNDZ3BJSHg4SUNnZ2FsRjFaWEo1TG1WNGNHRnVaRzhnS3lCY0lsOWNJaUFySUNnZ2JtOXVZMlV1WjNWcFpDc3JJQ2tnS1R0Y2JseDBYSFIwYUdseld5QmpZV3hzWW1GamF5QmRJRDBnZEhKMVpUdGNibHgwWEhSeVpYUjFjbTRnWTJGc2JHSmhZMnM3WEc1Y2RIMWNibjBnS1R0Y2JseHVMeThnUkdWMFpXTjBMQ0J1YjNKdFlXeHBlbVVnYjNCMGFXOXVjeUJoYm1RZ2FXNXpkR0ZzYkNCallXeHNZbUZqYTNNZ1ptOXlJR3B6YjI1d0lISmxjWFZsYzNSelhHNXFVWFZsY25rdVlXcGhlRkJ5WldacGJIUmxjaWdnWENKcWMyOXVJR3B6YjI1d1hDSXNJR1oxYm1OMGFXOXVLQ0J6TENCdmNtbG5hVzVoYkZObGRIUnBibWR6TENCcWNWaElVaUFwSUh0Y2JseHVYSFIyWVhJZ1kyRnNiR0poWTJ0T1lXMWxMQ0J2ZG1WeWQzSnBkSFJsYml3Z2NtVnpjRzl1YzJWRGIyNTBZV2x1WlhJc1hHNWNkRngwYW5OdmJsQnliM0FnUFNCekxtcHpiMjV3SUNFOVBTQm1ZV3h6WlNBbUppQW9JSEpxYzI5dWNDNTBaWE4wS0NCekxuVnliQ0FwSUQ5Y2JseDBYSFJjZEZ3aWRYSnNYQ0lnT2x4dVhIUmNkRngwZEhsd1pXOW1JSE11WkdGMFlTQTlQVDBnWENKemRISnBibWRjSWlBbUpseHVYSFJjZEZ4MFhIUW9JSE11WTI5dWRHVnVkRlI1Y0dVZ2ZId2dYQ0pjSWlBcFhHNWNkRngwWEhSY2RGeDBMbWx1WkdWNFQyWW9JRndpWVhCd2JHbGpZWFJwYjI0dmVDMTNkM2N0Wm05eWJTMTFjbXhsYm1OdlpHVmtYQ0lnS1NBOVBUMGdNQ0FtSmx4dVhIUmNkRngwWEhSeWFuTnZibkF1ZEdWemRDZ2djeTVrWVhSaElDa2dKaVlnWENKa1lYUmhYQ0pjYmx4MFhIUXBPMXh1WEc1Y2RDOHZJRWhoYm1Sc1pTQnBabVlnZEdobElHVjRjR1ZqZEdWa0lHUmhkR0VnZEhsd1pTQnBjeUJjSW1wemIyNXdYQ0lnYjNJZ2QyVWdhR0YyWlNCaElIQmhjbUZ0WlhSbGNpQjBieUJ6WlhSY2JseDBhV1lnS0NCcWMyOXVVSEp2Y0NCOGZDQnpMbVJoZEdGVWVYQmxjMXNnTUNCZElEMDlQU0JjSW1wemIyNXdYQ0lnS1NCN1hHNWNibHgwWEhRdkx5QkhaWFFnWTJGc2JHSmhZMnNnYm1GdFpTd2djbVZ0WlcxaVpYSnBibWNnY0hKbFpYaHBjM1JwYm1jZ2RtRnNkV1VnWVhOemIyTnBZWFJsWkNCM2FYUm9JR2wwWEc1Y2RGeDBZMkZzYkdKaFkydE9ZVzFsSUQwZ2N5NXFjMjl1Y0VOaGJHeGlZV05ySUQwZ2FYTkdkVzVqZEdsdmJpZ2djeTVxYzI5dWNFTmhiR3hpWVdOcklDa2dQMXh1WEhSY2RGeDBjeTVxYzI5dWNFTmhiR3hpWVdOcktDa2dPbHh1WEhSY2RGeDBjeTVxYzI5dWNFTmhiR3hpWVdOck8xeHVYRzVjZEZ4MEx5OGdTVzV6WlhKMElHTmhiR3hpWVdOcklHbHVkRzhnZFhKc0lHOXlJR1p2Y20wZ1pHRjBZVnh1WEhSY2RHbG1JQ2dnYW5OdmJsQnliM0FnS1NCN1hHNWNkRngwWEhSeld5QnFjMjl1VUhKdmNDQmRJRDBnYzFzZ2FuTnZibEJ5YjNBZ1hTNXlaWEJzWVdObEtDQnlhbk52Ym5Bc0lGd2lKREZjSWlBcklHTmhiR3hpWVdOclRtRnRaU0FwTzF4dVhIUmNkSDBnWld4elpTQnBaaUFvSUhNdWFuTnZibkFnSVQwOUlHWmhiSE5sSUNrZ2UxeHVYSFJjZEZ4MGN5NTFjbXdnS3owZ0tDQnljWFZsY25rdWRHVnpkQ2dnY3k1MWNtd2dLU0EvSUZ3aUpsd2lJRG9nWENJL1hDSWdLU0FySUhNdWFuTnZibkFnS3lCY0lqMWNJaUFySUdOaGJHeGlZV05yVG1GdFpUdGNibHgwWEhSOVhHNWNibHgwWEhRdkx5QlZjMlVnWkdGMFlTQmpiMjUyWlhKMFpYSWdkRzhnY21WMGNtbGxkbVVnYW5OdmJpQmhablJsY2lCelkzSnBjSFFnWlhobFkzVjBhVzl1WEc1Y2RGeDBjeTVqYjI1MlpYSjBaWEp6V3lCY0luTmpjbWx3ZENCcWMyOXVYQ0lnWFNBOUlHWjFibU4wYVc5dUtDa2dlMXh1WEhSY2RGeDBhV1lnS0NBaGNtVnpjRzl1YzJWRGIyNTBZV2x1WlhJZ0tTQjdYRzVjZEZ4MFhIUmNkR3BSZFdWeWVTNWxjbkp2Y2lnZ1kyRnNiR0poWTJ0T1lXMWxJQ3NnWENJZ2QyRnpJRzV2ZENCallXeHNaV1JjSWlBcE8xeHVYSFJjZEZ4MGZWeHVYSFJjZEZ4MGNtVjBkWEp1SUhKbGMzQnZibk5sUTI5dWRHRnBibVZ5V3lBd0lGMDdYRzVjZEZ4MGZUdGNibHh1WEhSY2RDOHZJRVp2Y21ObElHcHpiMjRnWkdGMFlWUjVjR1ZjYmx4MFhIUnpMbVJoZEdGVWVYQmxjMXNnTUNCZElEMGdYQ0pxYzI5dVhDSTdYRzVjYmx4MFhIUXZMeUJKYm5OMFlXeHNJR05oYkd4aVlXTnJYRzVjZEZ4MGIzWmxjbmR5YVhSMFpXNGdQU0IzYVc1a2IzZGJJR05oYkd4aVlXTnJUbUZ0WlNCZE8xeHVYSFJjZEhkcGJtUnZkMXNnWTJGc2JHSmhZMnRPWVcxbElGMGdQU0JtZFc1amRHbHZiaWdwSUh0Y2JseDBYSFJjZEhKbGMzQnZibk5sUTI5dWRHRnBibVZ5SUQwZ1lYSm5kVzFsYm5Sek8xeHVYSFJjZEgwN1hHNWNibHgwWEhRdkx5QkRiR1ZoYmkxMWNDQm1kVzVqZEdsdmJpQW9abWx5WlhNZ1lXWjBaWElnWTI5dWRtVnlkR1Z5Y3lsY2JseDBYSFJxY1ZoSVVpNWhiSGRoZVhNb0lHWjFibU4wYVc5dUtDa2dlMXh1WEc1Y2RGeDBYSFF2THlCSlppQndjbVYyYVc5MWN5QjJZV3gxWlNCa2FXUnVKM1FnWlhocGMzUWdMU0J5WlcxdmRtVWdhWFJjYmx4MFhIUmNkR2xtSUNnZ2IzWmxjbmR5YVhSMFpXNGdQVDA5SUhWdVpHVm1hVzVsWkNBcElIdGNibHgwWEhSY2RGeDBhbEYxWlhKNUtDQjNhVzVrYjNjZ0tTNXlaVzF2ZG1WUWNtOXdLQ0JqWVd4c1ltRmphMDVoYldVZ0tUdGNibHh1WEhSY2RGeDBMeThnVDNSb1pYSjNhWE5sSUhKbGMzUnZjbVVnY0hKbFpYaHBjM1JwYm1jZ2RtRnNkV1ZjYmx4MFhIUmNkSDBnWld4elpTQjdYRzVjZEZ4MFhIUmNkSGRwYm1SdmQxc2dZMkZzYkdKaFkydE9ZVzFsSUYwZ1BTQnZkbVZ5ZDNKcGRIUmxianRjYmx4MFhIUmNkSDFjYmx4dVhIUmNkRngwTHk4Z1UyRjJaU0JpWVdOcklHRnpJR1p5WldWY2JseDBYSFJjZEdsbUlDZ2djMXNnWTJGc2JHSmhZMnRPWVcxbElGMGdLU0I3WEc1Y2JseDBYSFJjZEZ4MEx5OGdUV0ZyWlNCemRYSmxJSFJvWVhRZ2NtVXRkWE5wYm1jZ2RHaGxJRzl3ZEdsdmJuTWdaRzlsYzI0bmRDQnpZM0psZHlCMGFHbHVaM01nWVhKdmRXNWtYRzVjZEZ4MFhIUmNkSE11YW5OdmJuQkRZV3hzWW1GamF5QTlJRzl5YVdkcGJtRnNVMlYwZEdsdVozTXVhbk52Ym5CRFlXeHNZbUZqYXp0Y2JseHVYSFJjZEZ4MFhIUXZMeUJUWVhabElIUm9aU0JqWVd4c1ltRmpheUJ1WVcxbElHWnZjaUJtZFhSMWNtVWdkWE5sWEc1Y2RGeDBYSFJjZEc5c1pFTmhiR3hpWVdOcmN5NXdkWE5vS0NCallXeHNZbUZqYTA1aGJXVWdLVHRjYmx4MFhIUmNkSDFjYmx4dVhIUmNkRngwTHk4Z1EyRnNiQ0JwWmlCcGRDQjNZWE1nWVNCbWRXNWpkR2x2YmlCaGJtUWdkMlVnYUdGMlpTQmhJSEpsYzNCdmJuTmxYRzVjZEZ4MFhIUnBaaUFvSUhKbGMzQnZibk5sUTI5dWRHRnBibVZ5SUNZbUlHbHpSblZ1WTNScGIyNG9JRzkyWlhKM2NtbDBkR1Z1SUNrZ0tTQjdYRzVjZEZ4MFhIUmNkRzkyWlhKM2NtbDBkR1Z1S0NCeVpYTndiMjV6WlVOdmJuUmhhVzVsY2xzZ01DQmRJQ2s3WEc1Y2RGeDBYSFI5WEc1Y2JseDBYSFJjZEhKbGMzQnZibk5sUTI5dWRHRnBibVZ5SUQwZ2IzWmxjbmR5YVhSMFpXNGdQU0IxYm1SbFptbHVaV1E3WEc1Y2RGeDBmU0FwTzF4dVhHNWNkRngwTHk4Z1JHVnNaV2RoZEdVZ2RHOGdjMk55YVhCMFhHNWNkRngwY21WMGRYSnVJRndpYzJOeWFYQjBYQ0k3WEc1Y2RIMWNibjBnS1R0Y2JseHVYRzVjYmx4dUx5OGdVM1Z3Y0c5eWREb2dVMkZtWVhKcElEZ2diMjVzZVZ4dUx5OGdTVzRnVTJGbVlYSnBJRGdnWkc5amRXMWxiblJ6SUdOeVpXRjBaV1FnZG1saElHUnZZM1Z0Wlc1MExtbHRjR3hsYldWdWRHRjBhVzl1TG1OeVpXRjBaVWhVVFV4RWIyTjFiV1Z1ZEZ4dUx5OGdZMjlzYkdGd2MyVWdjMmxpYkdsdVp5Qm1iM0p0Y3pvZ2RHaGxJSE5sWTI5dVpDQnZibVVnWW1WamIyMWxjeUJoSUdOb2FXeGtJRzltSUhSb1pTQm1hWEp6ZENCdmJtVXVYRzR2THlCQ1pXTmhkWE5sSUc5bUlIUm9ZWFFzSUhSb2FYTWdjMlZqZFhKcGRIa2diV1ZoYzNWeVpTQm9ZWE1nZEc4Z1ltVWdaR2x6WVdKc1pXUWdhVzRnVTJGbVlYSnBJRGd1WEc0dkx5Qm9kSFJ3Y3pvdkwySjFaM011ZDJWaWEybDBMbTl5Wnk5emFHOTNYMkoxWnk1aloyay9hV1E5TVRNM016TTNYRzV6ZFhCd2IzSjBMbU55WldGMFpVaFVUVXhFYjJOMWJXVnVkQ0E5SUNnZ1puVnVZM1JwYjI0b0tTQjdYRzVjZEhaaGNpQmliMlI1SUQwZ1pHOWpkVzFsYm5RdWFXMXdiR1Z0Wlc1MFlYUnBiMjR1WTNKbFlYUmxTRlJOVEVSdlkzVnRaVzUwS0NCY0lsd2lJQ2t1WW05a2VUdGNibHgwWW05a2VTNXBibTVsY2toVVRVd2dQU0JjSWp4bWIzSnRQand2Wm05eWJUNDhabTl5YlQ0OEwyWnZjbTArWENJN1hHNWNkSEpsZEhWeWJpQmliMlI1TG1Ob2FXeGtUbTlrWlhNdWJHVnVaM1JvSUQwOVBTQXlPMXh1ZlNBcEtDazdYRzVjYmx4dUx5OGdRWEpuZFcxbGJuUWdYQ0prWVhSaFhDSWdjMmh2ZFd4a0lHSmxJSE4wY21sdVp5QnZaaUJvZEcxc1hHNHZMeUJqYjI1MFpYaDBJQ2h2Y0hScGIyNWhiQ2s2SUVsbUlITndaV05wWm1sbFpDd2dkR2hsSUdaeVlXZHRaVzUwSUhkcGJHd2dZbVVnWTNKbFlYUmxaQ0JwYmlCMGFHbHpJR052Ym5SbGVIUXNYRzR2THlCa1pXWmhkV3gwY3lCMGJ5QmtiMk4xYldWdWRGeHVMeThnYTJWbGNGTmpjbWx3ZEhNZ0tHOXdkR2x2Ym1Gc0tUb2dTV1lnZEhKMVpTd2dkMmxzYkNCcGJtTnNkV1JsSUhOamNtbHdkSE1nY0dGemMyVmtJR2x1SUhSb1pTQm9kRzFzSUhOMGNtbHVaMXh1YWxGMVpYSjVMbkJoY25ObFNGUk5UQ0E5SUdaMWJtTjBhVzl1S0NCa1lYUmhMQ0JqYjI1MFpYaDBMQ0JyWldWd1UyTnlhWEIwY3lBcElIdGNibHgwYVdZZ0tDQjBlWEJsYjJZZ1pHRjBZU0FoUFQwZ1hDSnpkSEpwYm1kY0lpQXBJSHRjYmx4MFhIUnlaWFIxY200Z1cxMDdYRzVjZEgxY2JseDBhV1lnS0NCMGVYQmxiMllnWTI5dWRHVjRkQ0E5UFQwZ1hDSmliMjlzWldGdVhDSWdLU0I3WEc1Y2RGeDBhMlZsY0ZOamNtbHdkSE1nUFNCamIyNTBaWGgwTzF4dVhIUmNkR052Ym5SbGVIUWdQU0JtWVd4elpUdGNibHgwZlZ4dVhHNWNkSFpoY2lCaVlYTmxMQ0J3WVhKelpXUXNJSE5qY21sd2RITTdYRzVjYmx4MGFXWWdLQ0FoWTI5dWRHVjRkQ0FwSUh0Y2JseHVYSFJjZEM4dklGTjBiM0FnYzJOeWFYQjBjeUJ2Y2lCcGJteHBibVVnWlhabGJuUWdhR0Z1Wkd4bGNuTWdabkp2YlNCaVpXbHVaeUJsZUdWamRYUmxaQ0JwYlcxbFpHbGhkR1ZzZVZ4dVhIUmNkQzh2SUdKNUlIVnphVzVuSUdSdlkzVnRaVzUwTG1sdGNHeGxiV1Z1ZEdGMGFXOXVYRzVjZEZ4MGFXWWdLQ0J6ZFhCd2IzSjBMbU55WldGMFpVaFVUVXhFYjJOMWJXVnVkQ0FwSUh0Y2JseDBYSFJjZEdOdmJuUmxlSFFnUFNCa2IyTjFiV1Z1ZEM1cGJYQnNaVzFsYm5SaGRHbHZiaTVqY21WaGRHVklWRTFNUkc5amRXMWxiblFvSUZ3aVhDSWdLVHRjYmx4dVhIUmNkRngwTHk4Z1UyVjBJSFJvWlNCaVlYTmxJR2h5WldZZ1ptOXlJSFJvWlNCamNtVmhkR1ZrSUdSdlkzVnRaVzUwWEc1Y2RGeDBYSFF2THlCemJ5QmhibmtnY0dGeWMyVmtJR1ZzWlcxbGJuUnpJSGRwZEdnZ1ZWSk1jMXh1WEhSY2RGeDBMeThnWVhKbElHSmhjMlZrSUc5dUlIUm9aU0JrYjJOMWJXVnVkQ2R6SUZWU1RDQW9aMmd0TWprMk5TbGNibHgwWEhSY2RHSmhjMlVnUFNCamIyNTBaWGgwTG1OeVpXRjBaVVZzWlcxbGJuUW9JRndpWW1GelpWd2lJQ2s3WEc1Y2RGeDBYSFJpWVhObExtaHlaV1lnUFNCa2IyTjFiV1Z1ZEM1c2IyTmhkR2x2Ymk1b2NtVm1PMXh1WEhSY2RGeDBZMjl1ZEdWNGRDNW9aV0ZrTG1Gd2NHVnVaRU5vYVd4a0tDQmlZWE5sSUNrN1hHNWNkRngwZlNCbGJITmxJSHRjYmx4MFhIUmNkR052Ym5SbGVIUWdQU0JrYjJOMWJXVnVkRHRjYmx4MFhIUjlYRzVjZEgxY2JseHVYSFJ3WVhKelpXUWdQU0J5YzJsdVoyeGxWR0ZuTG1WNFpXTW9JR1JoZEdFZ0tUdGNibHgwYzJOeWFYQjBjeUE5SUNGclpXVndVMk55YVhCMGN5QW1KaUJiWFR0Y2JseHVYSFF2THlCVGFXNW5iR1VnZEdGblhHNWNkR2xtSUNnZ2NHRnljMlZrSUNrZ2UxeHVYSFJjZEhKbGRIVnliaUJiSUdOdmJuUmxlSFF1WTNKbFlYUmxSV3hsYldWdWRDZ2djR0Z5YzJWa1d5QXhJRjBnS1NCZE8xeHVYSFI5WEc1Y2JseDBjR0Z5YzJWa0lEMGdZblZwYkdSR2NtRm5iV1Z1ZENnZ1d5QmtZWFJoSUYwc0lHTnZiblJsZUhRc0lITmpjbWx3ZEhNZ0tUdGNibHh1WEhScFppQW9JSE5qY21sd2RITWdKaVlnYzJOeWFYQjBjeTVzWlc1bmRHZ2dLU0I3WEc1Y2RGeDBhbEYxWlhKNUtDQnpZM0pwY0hSeklDa3VjbVZ0YjNabEtDazdYRzVjZEgxY2JseHVYSFJ5WlhSMWNtNGdhbEYxWlhKNUxtMWxjbWRsS0NCYlhTd2djR0Z5YzJWa0xtTm9hV3hrVG05a1pYTWdLVHRjYm4wN1hHNWNibHh1THlvcVhHNGdLaUJNYjJGa0lHRWdkWEpzSUdsdWRHOGdZU0J3WVdkbFhHNGdLaTljYm1wUmRXVnllUzVtYmk1c2IyRmtJRDBnWm5WdVkzUnBiMjRvSUhWeWJDd2djR0Z5WVcxekxDQmpZV3hzWW1GamF5QXBJSHRjYmx4MGRtRnlJSE5sYkdWamRHOXlMQ0IwZVhCbExDQnlaWE53YjI1elpTeGNibHgwWEhSelpXeG1JRDBnZEdocGN5eGNibHgwWEhSdlptWWdQU0IxY213dWFXNWtaWGhQWmlnZ1hDSWdYQ0lnS1R0Y2JseHVYSFJwWmlBb0lHOW1aaUErSUMweElDa2dlMXh1WEhSY2RITmxiR1ZqZEc5eUlEMGdjM1J5YVhCQmJtUkRiMnhzWVhCelpTZ2dkWEpzTG5Oc2FXTmxLQ0J2Wm1ZZ0tTQXBPMXh1WEhSY2RIVnliQ0E5SUhWeWJDNXpiR2xqWlNnZ01Dd2diMlptSUNrN1hHNWNkSDFjYmx4dVhIUXZMeUJKWmlCcGRDZHpJR0VnWm5WdVkzUnBiMjVjYmx4MGFXWWdLQ0JwYzBaMWJtTjBhVzl1S0NCd1lYSmhiWE1nS1NBcElIdGNibHh1WEhSY2RDOHZJRmRsSUdGemMzVnRaU0IwYUdGMElHbDBKM01nZEdobElHTmhiR3hpWVdOclhHNWNkRngwWTJGc2JHSmhZMnNnUFNCd1lYSmhiWE03WEc1Y2RGeDBjR0Z5WVcxeklEMGdkVzVrWldacGJtVmtPMXh1WEc1Y2RDOHZJRTkwYUdWeWQybHpaU3dnWW5WcGJHUWdZU0J3WVhKaGJTQnpkSEpwYm1kY2JseDBmU0JsYkhObElHbG1JQ2dnY0dGeVlXMXpJQ1ltSUhSNWNHVnZaaUJ3WVhKaGJYTWdQVDA5SUZ3aWIySnFaV04wWENJZ0tTQjdYRzVjZEZ4MGRIbHdaU0E5SUZ3aVVFOVRWRndpTzF4dVhIUjlYRzVjYmx4MEx5OGdTV1lnZDJVZ2FHRjJaU0JsYkdWdFpXNTBjeUIwYnlCdGIyUnBabmtzSUcxaGEyVWdkR2hsSUhKbGNYVmxjM1JjYmx4MGFXWWdLQ0J6Wld4bUxteGxibWQwYUNBK0lEQWdLU0I3WEc1Y2RGeDBhbEYxWlhKNUxtRnFZWGdvSUh0Y2JseDBYSFJjZEhWeWJEb2dkWEpzTEZ4dVhHNWNkRngwWEhRdkx5QkpaaUJjSW5SNWNHVmNJaUIyWVhKcFlXSnNaU0JwY3lCMWJtUmxabWx1WldRc0lIUm9aVzRnWENKSFJWUmNJaUJ0WlhSb2IyUWdkMmxzYkNCaVpTQjFjMlZrTGx4dVhIUmNkRngwTHk4Z1RXRnJaU0IyWVd4MVpTQnZaaUIwYUdseklHWnBaV3hrSUdWNGNHeHBZMmwwSUhOcGJtTmxYRzVjZEZ4MFhIUXZMeUIxYzJWeUlHTmhiaUJ2ZG1WeWNtbGtaU0JwZENCMGFISnZkV2RvSUdGcVlYaFRaWFIxY0NCdFpYUm9iMlJjYmx4MFhIUmNkSFI1Y0dVNklIUjVjR1VnZkh3Z1hDSkhSVlJjSWl4Y2JseDBYSFJjZEdSaGRHRlVlWEJsT2lCY0ltaDBiV3hjSWl4Y2JseDBYSFJjZEdSaGRHRTZJSEJoY21GdGMxeHVYSFJjZEgwZ0tTNWtiMjVsS0NCbWRXNWpkR2x2YmlnZ2NtVnpjRzl1YzJWVVpYaDBJQ2tnZTF4dVhHNWNkRngwWEhRdkx5QlRZWFpsSUhKbGMzQnZibk5sSUdadmNpQjFjMlVnYVc0Z1kyOXRjR3hsZEdVZ1kyRnNiR0poWTJ0Y2JseDBYSFJjZEhKbGMzQnZibk5sSUQwZ1lYSm5kVzFsYm5Sek8xeHVYRzVjZEZ4MFhIUnpaV3htTG1oMGJXd29JSE5sYkdWamRHOXlJRDljYmx4dVhIUmNkRngwWEhRdkx5QkpaaUJoSUhObGJHVmpkRzl5SUhkaGN5QnpjR1ZqYVdacFpXUXNJR3h2WTJGMFpTQjBhR1VnY21sbmFIUWdaV3hsYldWdWRITWdhVzRnWVNCa2RXMXRlU0JrYVhaY2JseDBYSFJjZEZ4MEx5OGdSWGhqYkhWa1pTQnpZM0pwY0hSeklIUnZJR0YyYjJsa0lFbEZJQ2RRWlhKdGFYTnphVzl1SUVSbGJtbGxaQ2NnWlhKeWIzSnpYRzVjZEZ4MFhIUmNkR3BSZFdWeWVTZ2dYQ0k4WkdsMlBsd2lJQ2t1WVhCd1pXNWtLQ0JxVVhWbGNua3VjR0Z5YzJWSVZFMU1LQ0J5WlhOd2IyNXpaVlJsZUhRZ0tTQXBMbVpwYm1Rb0lITmxiR1ZqZEc5eUlDa2dPbHh1WEc1Y2RGeDBYSFJjZEM4dklFOTBhR1Z5ZDJselpTQjFjMlVnZEdobElHWjFiR3dnY21WemRXeDBYRzVjZEZ4MFhIUmNkSEpsYzNCdmJuTmxWR1Y0ZENBcE8xeHVYRzVjZEZ4MEx5OGdTV1lnZEdobElISmxjWFZsYzNRZ2MzVmpZMlZsWkhNc0lIUm9hWE1nWm5WdVkzUnBiMjRnWjJWMGN5QmNJbVJoZEdGY0lpd2dYQ0p6ZEdGMGRYTmNJaXdnWENKcWNWaElVbHdpWEc1Y2RGeDBMeThnWW5WMElIUm9aWGtnWVhKbElHbG5ibTl5WldRZ1ltVmpZWFZ6WlNCeVpYTndiMjV6WlNCM1lYTWdjMlYwSUdGaWIzWmxMbHh1WEhSY2RDOHZJRWxtSUdsMElHWmhhV3h6TENCMGFHbHpJR1oxYm1OMGFXOXVJR2RsZEhNZ1hDSnFjVmhJVWx3aUxDQmNJbk4wWVhSMWMxd2lMQ0JjSW1WeWNtOXlYQ0pjYmx4MFhIUjlJQ2t1WVd4M1lYbHpLQ0JqWVd4c1ltRmpheUFtSmlCbWRXNWpkR2x2YmlnZ2FuRllTRklzSUhOMFlYUjFjeUFwSUh0Y2JseDBYSFJjZEhObGJHWXVaV0ZqYUNnZ1puVnVZM1JwYjI0b0tTQjdYRzVjZEZ4MFhIUmNkR05oYkd4aVlXTnJMbUZ3Y0d4NUtDQjBhR2x6TENCeVpYTndiMjV6WlNCOGZDQmJJR3B4V0VoU0xuSmxjM0J2Ym5ObFZHVjRkQ3dnYzNSaGRIVnpMQ0JxY1ZoSVVpQmRJQ2s3WEc1Y2RGeDBYSFI5SUNrN1hHNWNkRngwZlNBcE8xeHVYSFI5WEc1Y2JseDBjbVYwZFhKdUlIUm9hWE03WEc1OU8xeHVYRzVjYmx4dVhHNXFVWFZsY25rdVpYaHdjaTV3YzJWMVpHOXpMbUZ1YVcxaGRHVmtJRDBnWm5WdVkzUnBiMjRvSUdWc1pXMGdLU0I3WEc1Y2RISmxkSFZ5YmlCcVVYVmxjbmt1WjNKbGNDZ2dhbEYxWlhKNUxuUnBiV1Z5Y3l3Z1puVnVZM1JwYjI0b0lHWnVJQ2tnZTF4dVhIUmNkSEpsZEhWeWJpQmxiR1Z0SUQwOVBTQm1iaTVsYkdWdE8xeHVYSFI5SUNrdWJHVnVaM1JvTzF4dWZUdGNibHh1WEc1Y2JseHVhbEYxWlhKNUxtOW1abk5sZENBOUlIdGNibHgwYzJWMFQyWm1jMlYwT2lCbWRXNWpkR2x2YmlnZ1pXeGxiU3dnYjNCMGFXOXVjeXdnYVNBcElIdGNibHgwWEhSMllYSWdZM1Z5VUc5emFYUnBiMjRzSUdOMWNreGxablFzSUdOMWNrTlRVMVJ2Y0N3Z1kzVnlWRzl3TENCamRYSlBabVp6WlhRc0lHTjFja05UVTB4bFpuUXNJR05oYkdOMWJHRjBaVkJ2YzJsMGFXOXVMRnh1WEhSY2RGeDBjRzl6YVhScGIyNGdQU0JxVVhWbGNua3VZM056S0NCbGJHVnRMQ0JjSW5CdmMybDBhVzl1WENJZ0tTeGNibHgwWEhSY2RHTjFja1ZzWlcwZ1BTQnFVWFZsY25rb0lHVnNaVzBnS1N4Y2JseDBYSFJjZEhCeWIzQnpJRDBnZTMwN1hHNWNibHgwWEhRdkx5QlRaWFFnY0c5emFYUnBiMjRnWm1seWMzUXNJR2x1TFdOaGMyVWdkRzl3TDJ4bFpuUWdZWEpsSUhObGRDQmxkbVZ1SUc5dUlITjBZWFJwWXlCbGJHVnRYRzVjZEZ4MGFXWWdLQ0J3YjNOcGRHbHZiaUE5UFQwZ1hDSnpkR0YwYVdOY0lpQXBJSHRjYmx4MFhIUmNkR1ZzWlcwdWMzUjViR1V1Y0c5emFYUnBiMjRnUFNCY0luSmxiR0YwYVhabFhDSTdYRzVjZEZ4MGZWeHVYRzVjZEZ4MFkzVnlUMlptYzJWMElEMGdZM1Z5Uld4bGJTNXZabVp6WlhRb0tUdGNibHgwWEhSamRYSkRVMU5VYjNBZ1BTQnFVWFZsY25rdVkzTnpLQ0JsYkdWdExDQmNJblJ2Y0Z3aUlDazdYRzVjZEZ4MFkzVnlRMU5UVEdWbWRDQTlJR3BSZFdWeWVTNWpjM01vSUdWc1pXMHNJRndpYkdWbWRGd2lJQ2s3WEc1Y2RGeDBZMkZzWTNWc1lYUmxVRzl6YVhScGIyNGdQU0FvSUhCdmMybDBhVzl1SUQwOVBTQmNJbUZpYzI5c2RYUmxYQ0lnZkh3Z2NHOXphWFJwYjI0Z1BUMDlJRndpWm1sNFpXUmNJaUFwSUNZbVhHNWNkRngwWEhRb0lHTjFja05UVTFSdmNDQXJJR04xY2tOVFUweGxablFnS1M1cGJtUmxlRTltS0NCY0ltRjFkRzljSWlBcElENGdMVEU3WEc1Y2JseDBYSFF2THlCT1pXVmtJSFJ2SUdKbElHRmliR1VnZEc4Z1kyRnNZM1ZzWVhSbElIQnZjMmwwYVc5dUlHbG1JR1ZwZEdobGNseHVYSFJjZEM4dklIUnZjQ0J2Y2lCc1pXWjBJR2x6SUdGMWRHOGdZVzVrSUhCdmMybDBhVzl1SUdseklHVnBkR2hsY2lCaFluTnZiSFYwWlNCdmNpQm1hWGhsWkZ4dVhIUmNkR2xtSUNnZ1kyRnNZM1ZzWVhSbFVHOXphWFJwYjI0Z0tTQjdYRzVjZEZ4MFhIUmpkWEpRYjNOcGRHbHZiaUE5SUdOMWNrVnNaVzB1Y0c5emFYUnBiMjRvS1R0Y2JseDBYSFJjZEdOMWNsUnZjQ0E5SUdOMWNsQnZjMmwwYVc5dUxuUnZjRHRjYmx4MFhIUmNkR04xY2t4bFpuUWdQU0JqZFhKUWIzTnBkR2x2Ymk1c1pXWjBPMXh1WEc1Y2RGeDBmU0JsYkhObElIdGNibHgwWEhSY2RHTjFjbFJ2Y0NBOUlIQmhjbk5sUm14dllYUW9JR04xY2tOVFUxUnZjQ0FwSUh4OElEQTdYRzVjZEZ4MFhIUmpkWEpNWldaMElEMGdjR0Z5YzJWR2JHOWhkQ2dnWTNWeVExTlRUR1ZtZENBcElIeDhJREE3WEc1Y2RGeDBmVnh1WEc1Y2RGeDBhV1lnS0NCcGMwWjFibU4wYVc5dUtDQnZjSFJwYjI1eklDa2dLU0I3WEc1Y2JseDBYSFJjZEM4dklGVnpaU0JxVVhWbGNua3VaWGgwWlc1a0lHaGxjbVVnZEc4Z1lXeHNiM2NnYlc5a2FXWnBZMkYwYVc5dUlHOW1JR052YjNKa2FXNWhkR1Z6SUdGeVozVnRaVzUwSUNobmFDMHhPRFE0S1Z4dVhIUmNkRngwYjNCMGFXOXVjeUE5SUc5d2RHbHZibk11WTJGc2JDZ2daV3hsYlN3Z2FTd2dhbEYxWlhKNUxtVjRkR1Z1WkNnZ2UzMHNJR04xY2s5bVpuTmxkQ0FwSUNrN1hHNWNkRngwZlZ4dVhHNWNkRngwYVdZZ0tDQnZjSFJwYjI1ekxuUnZjQ0FoUFNCdWRXeHNJQ2tnZTF4dVhIUmNkRngwY0hKdmNITXVkRzl3SUQwZ0tDQnZjSFJwYjI1ekxuUnZjQ0F0SUdOMWNrOW1abk5sZEM1MGIzQWdLU0FySUdOMWNsUnZjRHRjYmx4MFhIUjlYRzVjZEZ4MGFXWWdLQ0J2Y0hScGIyNXpMbXhsWm5RZ0lUMGdiblZzYkNBcElIdGNibHgwWEhSY2RIQnliM0J6TG14bFpuUWdQU0FvSUc5d2RHbHZibk11YkdWbWRDQXRJR04xY2s5bVpuTmxkQzVzWldaMElDa2dLeUJqZFhKTVpXWjBPMXh1WEhSY2RIMWNibHh1WEhSY2RHbG1JQ2dnWENKMWMybHVaMXdpSUdsdUlHOXdkR2x2Ym5NZ0tTQjdYRzVjZEZ4MFhIUnZjSFJwYjI1ekxuVnphVzVuTG1OaGJHd29JR1ZzWlcwc0lIQnliM0J6SUNrN1hHNWNibHgwWEhSOUlHVnNjMlVnZTF4dVhIUmNkRngwWTNWeVJXeGxiUzVqYzNNb0lIQnliM0J6SUNrN1hHNWNkRngwZlZ4dVhIUjlYRzU5TzF4dVhHNXFVWFZsY25rdVptNHVaWGgwWlc1a0tDQjdYRzVjYmx4MEx5OGdiMlptYzJWMEtDa2djbVZzWVhSbGN5QmhiaUJsYkdWdFpXNTBKM01nWW05eVpHVnlJR0p2ZUNCMGJ5QjBhR1VnWkc5amRXMWxiblFnYjNKcFoybHVYRzVjZEc5bVpuTmxkRG9nWm5WdVkzUnBiMjRvSUc5d2RHbHZibk1nS1NCN1hHNWNibHgwWEhRdkx5QlFjbVZ6WlhKMlpTQmphR0ZwYm1sdVp5Qm1iM0lnYzJWMGRHVnlYRzVjZEZ4MGFXWWdLQ0JoY21kMWJXVnVkSE11YkdWdVozUm9JQ2tnZTF4dVhIUmNkRngwY21WMGRYSnVJRzl3ZEdsdmJuTWdQVDA5SUhWdVpHVm1hVzVsWkNBL1hHNWNkRngwWEhSY2RIUm9hWE1nT2x4dVhIUmNkRngwWEhSMGFHbHpMbVZoWTJnb0lHWjFibU4wYVc5dUtDQnBJQ2tnZTF4dVhIUmNkRngwWEhSY2RHcFJkV1Z5ZVM1dlptWnpaWFF1YzJWMFQyWm1jMlYwS0NCMGFHbHpMQ0J2Y0hScGIyNXpMQ0JwSUNrN1hHNWNkRngwWEhSY2RIMGdLVHRjYmx4MFhIUjlYRzVjYmx4MFhIUjJZWElnY21WamRDd2dkMmx1TEZ4dVhIUmNkRngwWld4bGJTQTlJSFJvYVhOYklEQWdYVHRjYmx4dVhIUmNkR2xtSUNnZ0lXVnNaVzBnS1NCN1hHNWNkRngwWEhSeVpYUjFjbTQ3WEc1Y2RGeDBmVnh1WEc1Y2RGeDBMeThnVW1WMGRYSnVJSHBsY205eklHWnZjaUJrYVhOamIyNXVaV04wWldRZ1lXNWtJR2hwWkdSbGJpQW9aR2x6Y0d4aGVUb2dibTl1WlNrZ1pXeGxiV1Z1ZEhNZ0tHZG9MVEl6TVRBcFhHNWNkRngwTHk4Z1UzVndjRzl5ZERvZ1NVVWdQRDB4TVNCdmJteDVYRzVjZEZ4MEx5OGdVblZ1Ym1sdVp5Qm5aWFJDYjNWdVpHbHVaME5zYVdWdWRGSmxZM1FnYjI0Z1lWeHVYSFJjZEM4dklHUnBjMk52Ym01bFkzUmxaQ0J1YjJSbElHbHVJRWxGSUhSb2NtOTNjeUJoYmlCbGNuSnZjbHh1WEhSY2RHbG1JQ2dnSVdWc1pXMHVaMlYwUTJ4cFpXNTBVbVZqZEhNb0tTNXNaVzVuZEdnZ0tTQjdYRzVjZEZ4MFhIUnlaWFIxY200Z2V5QjBiM0E2SURBc0lHeGxablE2SURBZ2ZUdGNibHgwWEhSOVhHNWNibHgwWEhRdkx5QkhaWFFnWkc5amRXMWxiblF0Y21Wc1lYUnBkbVVnY0c5emFYUnBiMjRnWW5rZ1lXUmthVzVuSUhacFpYZHdiM0owSUhOamNtOXNiQ0IwYnlCMmFXVjNjRzl5ZEMxeVpXeGhkR2wyWlNCblFrTlNYRzVjZEZ4MGNtVmpkQ0E5SUdWc1pXMHVaMlYwUW05MWJtUnBibWREYkdsbGJuUlNaV04wS0NrN1hHNWNkRngwZDJsdUlEMGdaV3hsYlM1dmQyNWxja1J2WTNWdFpXNTBMbVJsWm1GMWJIUldhV1YzTzF4dVhIUmNkSEpsZEhWeWJpQjdYRzVjZEZ4MFhIUjBiM0E2SUhKbFkzUXVkRzl3SUNzZ2QybHVMbkJoWjJWWlQyWm1jMlYwTEZ4dVhIUmNkRngwYkdWbWREb2djbVZqZEM1c1pXWjBJQ3NnZDJsdUxuQmhaMlZZVDJabWMyVjBYRzVjZEZ4MGZUdGNibHgwZlN4Y2JseHVYSFF2THlCd2IzTnBkR2x2YmlncElISmxiR0YwWlhNZ1lXNGdaV3hsYldWdWRDZHpJRzFoY21kcGJpQmliM2dnZEc4Z2FYUnpJRzltWm5ObGRDQndZWEpsYm5RbmN5QndZV1JrYVc1bklHSnZlRnh1WEhRdkx5QlVhR2x6SUdOdmNuSmxjM0J2Ym1SeklIUnZJSFJvWlNCaVpXaGhkbWx2Y2lCdlppQkRVMU1nWVdKemIyeDFkR1VnY0c5emFYUnBiMjVwYm1kY2JseDBjRzl6YVhScGIyNDZJR1oxYm1OMGFXOXVLQ2tnZTF4dVhIUmNkR2xtSUNnZ0lYUm9hWE5iSURBZ1hTQXBJSHRjYmx4MFhIUmNkSEpsZEhWeWJqdGNibHgwWEhSOVhHNWNibHgwWEhSMllYSWdiMlptYzJWMFVHRnlaVzUwTENCdlptWnpaWFFzSUdSdll5eGNibHgwWEhSY2RHVnNaVzBnUFNCMGFHbHpXeUF3SUYwc1hHNWNkRngwWEhSd1lYSmxiblJQWm1aelpYUWdQU0I3SUhSdmNEb2dNQ3dnYkdWbWREb2dNQ0I5TzF4dVhHNWNkRngwTHk4Z2NHOXphWFJwYjI0NlptbDRaV1FnWld4bGJXVnVkSE1nWVhKbElHOW1abk5sZENCbWNtOXRJSFJvWlNCMmFXVjNjRzl5ZEN3Z2QyaHBZMmdnYVhSelpXeG1JR0ZzZDJGNWN5Qm9ZWE1nZW1WeWJ5QnZabVp6WlhSY2JseDBYSFJwWmlBb0lHcFJkV1Z5ZVM1amMzTW9JR1ZzWlcwc0lGd2ljRzl6YVhScGIyNWNJaUFwSUQwOVBTQmNJbVpwZUdWa1hDSWdLU0I3WEc1Y2JseDBYSFJjZEM4dklFRnpjM1Z0WlNCd2IzTnBkR2x2YmpwbWFYaGxaQ0JwYlhCc2FXVnpJR0YyWVdsc1lXSnBiR2wwZVNCdlppQm5aWFJDYjNWdVpHbHVaME5zYVdWdWRGSmxZM1JjYmx4MFhIUmNkRzltWm5ObGRDQTlJR1ZzWlcwdVoyVjBRbTkxYm1ScGJtZERiR2xsYm5SU1pXTjBLQ2s3WEc1Y2JseDBYSFI5SUdWc2MyVWdlMXh1WEhSY2RGeDBiMlptYzJWMElEMGdkR2hwY3k1dlptWnpaWFFvS1R0Y2JseHVYSFJjZEZ4MEx5OGdRV05qYjNWdWRDQm1iM0lnZEdobElDcHlaV0ZzS2lCdlptWnpaWFFnY0dGeVpXNTBMQ0IzYUdsamFDQmpZVzRnWW1VZ2RHaGxJR1J2WTNWdFpXNTBJRzl5SUdsMGN5QnliMjkwSUdWc1pXMWxiblJjYmx4MFhIUmNkQzh2SUhkb1pXNGdZU0J6ZEdGMGFXTmhiR3g1SUhCdmMybDBhVzl1WldRZ1pXeGxiV1Z1ZENCcGN5QnBaR1Z1ZEdsbWFXVmtYRzVjZEZ4MFhIUmtiMk1nUFNCbGJHVnRMbTkzYm1WeVJHOWpkVzFsYm5RN1hHNWNkRngwWEhSdlptWnpaWFJRWVhKbGJuUWdQU0JsYkdWdExtOW1abk5sZEZCaGNtVnVkQ0I4ZkNCa2IyTXVaRzlqZFcxbGJuUkZiR1Z0Wlc1ME8xeHVYSFJjZEZ4MGQyaHBiR1VnS0NCdlptWnpaWFJRWVhKbGJuUWdKaVpjYmx4MFhIUmNkRngwS0NCdlptWnpaWFJRWVhKbGJuUWdQVDA5SUdSdll5NWliMlI1SUh4OElHOW1abk5sZEZCaGNtVnVkQ0E5UFQwZ1pHOWpMbVJ2WTNWdFpXNTBSV3hsYldWdWRDQXBJQ1ltWEc1Y2RGeDBYSFJjZEdwUmRXVnllUzVqYzNNb0lHOW1abk5sZEZCaGNtVnVkQ3dnWENKd2IzTnBkR2x2Ymx3aUlDa2dQVDA5SUZ3aWMzUmhkR2xqWENJZ0tTQjdYRzVjYmx4MFhIUmNkRngwYjJabWMyVjBVR0Z5Wlc1MElEMGdiMlptYzJWMFVHRnlaVzUwTG5CaGNtVnVkRTV2WkdVN1hHNWNkRngwWEhSOVhHNWNkRngwWEhScFppQW9JRzltWm5ObGRGQmhjbVZ1ZENBbUppQnZabVp6WlhSUVlYSmxiblFnSVQwOUlHVnNaVzBnSmlZZ2IyWm1jMlYwVUdGeVpXNTBMbTV2WkdWVWVYQmxJRDA5UFNBeElDa2dlMXh1WEc1Y2RGeDBYSFJjZEM4dklFbHVZMjl5Y0c5eVlYUmxJR0p2Y21SbGNuTWdhVzUwYnlCcGRITWdiMlptYzJWMExDQnphVzVqWlNCMGFHVjVJR0Z5WlNCdmRYUnphV1JsSUdsMGN5QmpiMjUwWlc1MElHOXlhV2RwYmx4dVhIUmNkRngwWEhSd1lYSmxiblJQWm1aelpYUWdQU0JxVVhWbGNua29JRzltWm5ObGRGQmhjbVZ1ZENBcExtOW1abk5sZENncE8xeHVYSFJjZEZ4MFhIUndZWEpsYm5SUFptWnpaWFF1ZEc5d0lDczlJR3BSZFdWeWVTNWpjM01vSUc5bVpuTmxkRkJoY21WdWRDd2dYQ0ppYjNKa1pYSlViM0JYYVdSMGFGd2lMQ0IwY25WbElDazdYRzVjZEZ4MFhIUmNkSEJoY21WdWRFOW1abk5sZEM1c1pXWjBJQ3M5SUdwUmRXVnllUzVqYzNNb0lHOW1abk5sZEZCaGNtVnVkQ3dnWENKaWIzSmtaWEpNWldaMFYybGtkR2hjSWl3Z2RISjFaU0FwTzF4dVhIUmNkRngwZlZ4dVhIUmNkSDFjYmx4dVhIUmNkQzh2SUZOMVluUnlZV04wSUhCaGNtVnVkQ0J2Wm1aelpYUnpJR0Z1WkNCbGJHVnRaVzUwSUcxaGNtZHBibk5jYmx4MFhIUnlaWFIxY200Z2UxeHVYSFJjZEZ4MGRHOXdPaUJ2Wm1aelpYUXVkRzl3SUMwZ2NHRnlaVzUwVDJabWMyVjBMblJ2Y0NBdElHcFJkV1Z5ZVM1amMzTW9JR1ZzWlcwc0lGd2liV0Z5WjJsdVZHOXdYQ0lzSUhSeWRXVWdLU3hjYmx4MFhIUmNkR3hsWm5RNklHOW1abk5sZEM1c1pXWjBJQzBnY0dGeVpXNTBUMlptYzJWMExteGxablFnTFNCcVVYVmxjbmt1WTNOektDQmxiR1Z0TENCY0ltMWhjbWRwYmt4bFpuUmNJaXdnZEhKMVpTQXBYRzVjZEZ4MGZUdGNibHgwZlN4Y2JseHVYSFF2THlCVWFHbHpJRzFsZEdodlpDQjNhV3hzSUhKbGRIVnliaUJrYjJOMWJXVnVkRVZzWlcxbGJuUWdhVzRnZEdobElHWnZiR3h2ZDJsdVp5QmpZWE5sY3pwY2JseDBMeThnTVNrZ1JtOXlJSFJvWlNCbGJHVnRaVzUwSUdsdWMybGtaU0IwYUdVZ2FXWnlZVzFsSUhkcGRHaHZkWFFnYjJabWMyVjBVR0Z5Wlc1MExDQjBhR2x6SUcxbGRHaHZaQ0IzYVd4c0lISmxkSFZ5Ymx4dVhIUXZMeUFnSUNCa2IyTjFiV1Z1ZEVWc1pXMWxiblFnYjJZZ2RHaGxJSEJoY21WdWRDQjNhVzVrYjNkY2JseDBMeThnTWlrZ1JtOXlJSFJvWlNCb2FXUmtaVzRnYjNJZ1pHVjBZV05vWldRZ1pXeGxiV1Z1ZEZ4dVhIUXZMeUF6S1NCR2IzSWdZbTlrZVNCdmNpQm9kRzFzSUdWc1pXMWxiblFzSUdrdVpTNGdhVzRnWTJGelpTQnZaaUIwYUdVZ2FIUnRiQ0J1YjJSbElDMGdhWFFnZDJsc2JDQnlaWFIxY200Z2FYUnpaV3htWEc1Y2RDOHZYRzVjZEM4dklHSjFkQ0IwYUc5elpTQmxlR05sY0hScGIyNXpJSGRsY21VZ2JtVjJaWElnY0hKbGMyVnVkR1ZrSUdGeklHRWdjbVZoYkNCc2FXWmxJSFZ6WlMxallYTmxjMXh1WEhRdkx5QmhibVFnYldsbmFIUWdZbVVnWTI5dWMybGtaWEpsWkNCaGN5QnRiM0psSUhCeVpXWmxjbUZpYkdVZ2NtVnpkV3gwY3k1Y2JseDBMeTljYmx4MEx5OGdWR2hwY3lCc2IyZHBZeXdnYUc5M1pYWmxjaXdnYVhNZ2JtOTBJR2QxWVhKaGJuUmxaV1FnWVc1a0lHTmhiaUJqYUdGdVoyVWdZWFFnWVc1NUlIQnZhVzUwSUdsdUlIUm9aU0JtZFhSMWNtVmNibHgwYjJabWMyVjBVR0Z5Wlc1ME9pQm1kVzVqZEdsdmJpZ3BJSHRjYmx4MFhIUnlaWFIxY200Z2RHaHBjeTV0WVhBb0lHWjFibU4wYVc5dUtDa2dlMXh1WEhSY2RGeDBkbUZ5SUc5bVpuTmxkRkJoY21WdWRDQTlJSFJvYVhNdWIyWm1jMlYwVUdGeVpXNTBPMXh1WEc1Y2RGeDBYSFIzYUdsc1pTQW9JRzltWm5ObGRGQmhjbVZ1ZENBbUppQnFVWFZsY25rdVkzTnpLQ0J2Wm1aelpYUlFZWEpsYm5Rc0lGd2ljRzl6YVhScGIyNWNJaUFwSUQwOVBTQmNJbk4wWVhScFkxd2lJQ2tnZTF4dVhIUmNkRngwWEhSdlptWnpaWFJRWVhKbGJuUWdQU0J2Wm1aelpYUlFZWEpsYm5RdWIyWm1jMlYwVUdGeVpXNTBPMXh1WEhSY2RGeDBmVnh1WEc1Y2RGeDBYSFJ5WlhSMWNtNGdiMlptYzJWMFVHRnlaVzUwSUh4OElHUnZZM1Z0Wlc1MFJXeGxiV1Z1ZER0Y2JseDBYSFI5SUNrN1hHNWNkSDFjYm4wZ0tUdGNibHh1THk4Z1EzSmxZWFJsSUhOamNtOXNiRXhsWm5RZ1lXNWtJSE5qY205c2JGUnZjQ0J0WlhSb2IyUnpYRzVxVVhWbGNua3VaV0ZqYUNnZ2V5QnpZM0p2Ykd4TVpXWjBPaUJjSW5CaFoyVllUMlptYzJWMFhDSXNJSE5qY205c2JGUnZjRG9nWENKd1lXZGxXVTltWm5ObGRGd2lJSDBzSUdaMWJtTjBhVzl1S0NCdFpYUm9iMlFzSUhCeWIzQWdLU0I3WEc1Y2RIWmhjaUIwYjNBZ1BTQmNJbkJoWjJWWlQyWm1jMlYwWENJZ1BUMDlJSEJ5YjNBN1hHNWNibHgwYWxGMVpYSjVMbVp1V3lCdFpYUm9iMlFnWFNBOUlHWjFibU4wYVc5dUtDQjJZV3dnS1NCN1hHNWNkRngwY21WMGRYSnVJR0ZqWTJWemN5Z2dkR2hwY3l3Z1puVnVZM1JwYjI0b0lHVnNaVzBzSUcxbGRHaHZaQ3dnZG1Gc0lDa2dlMXh1WEc1Y2RGeDBYSFF2THlCRGIyRnNaWE5qWlNCa2IyTjFiV1Z1ZEhNZ1lXNWtJSGRwYm1SdmQzTmNibHgwWEhSY2RIWmhjaUIzYVc0N1hHNWNkRngwWEhScFppQW9JR2x6VjJsdVpHOTNLQ0JsYkdWdElDa2dLU0I3WEc1Y2RGeDBYSFJjZEhkcGJpQTlJR1ZzWlcwN1hHNWNkRngwWEhSOUlHVnNjMlVnYVdZZ0tDQmxiR1Z0TG01dlpHVlVlWEJsSUQwOVBTQTVJQ2tnZTF4dVhIUmNkRngwWEhSM2FXNGdQU0JsYkdWdExtUmxabUYxYkhSV2FXVjNPMXh1WEhSY2RGeDBmVnh1WEc1Y2RGeDBYSFJwWmlBb0lIWmhiQ0E5UFQwZ2RXNWtaV1pwYm1Wa0lDa2dlMXh1WEhSY2RGeDBYSFJ5WlhSMWNtNGdkMmx1SUQ4Z2QybHVXeUJ3Y205d0lGMGdPaUJsYkdWdFd5QnRaWFJvYjJRZ1hUdGNibHgwWEhSY2RIMWNibHh1WEhSY2RGeDBhV1lnS0NCM2FXNGdLU0I3WEc1Y2RGeDBYSFJjZEhkcGJpNXpZM0p2Ykd4VWJ5aGNibHgwWEhSY2RGeDBYSFFoZEc5d0lEOGdkbUZzSURvZ2QybHVMbkJoWjJWWVQyWm1jMlYwTEZ4dVhIUmNkRngwWEhSY2RIUnZjQ0EvSUhaaGJDQTZJSGRwYmk1d1lXZGxXVTltWm5ObGRGeHVYSFJjZEZ4MFhIUXBPMXh1WEc1Y2RGeDBYSFI5SUdWc2MyVWdlMXh1WEhSY2RGeDBYSFJsYkdWdFd5QnRaWFJvYjJRZ1hTQTlJSFpoYkR0Y2JseDBYSFJjZEgxY2JseDBYSFI5TENCdFpYUm9iMlFzSUhaaGJDd2dZWEpuZFcxbGJuUnpMbXhsYm1kMGFDQXBPMXh1WEhSOU8xeHVmU0FwTzF4dVhHNHZMeUJUZFhCd2IzSjBPaUJUWVdaaGNta2dQRDAzSUMwZ09TNHhMQ0JEYUhKdmJXVWdQRDB6TnlBdElEUTVYRzR2THlCQlpHUWdkR2hsSUhSdmNDOXNaV1owSUdOemMwaHZiMnR6SUhWemFXNW5JR3BSZFdWeWVTNW1iaTV3YjNOcGRHbHZibHh1THk4Z1YyVmlhMmwwSUdKMVp6b2dhSFIwY0hNNkx5OWlkV2R6TG5kbFltdHBkQzV2Y21jdmMyaHZkMTlpZFdjdVkyZHBQMmxrUFRJNU1EZzBYRzR2THlCQ2JHbHVheUJpZFdjNklHaDBkSEJ6T2k4dlluVm5jeTVqYUhKdmJXbDFiUzV2Y21jdmNDOWphSEp2YldsMWJTOXBjM04xWlhNdlpHVjBZV2xzUDJsa1BUVTRPVE0wTjF4dUx5OGdaMlYwUTI5dGNIVjBaV1JUZEhsc1pTQnlaWFIxY201eklIQmxjbU5sYm5RZ2QyaGxiaUJ6Y0dWamFXWnBaV1FnWm05eUlIUnZjQzlzWldaMEwySnZkSFJ2YlM5eWFXZG9kRHRjYmk4dklISmhkR2hsY2lCMGFHRnVJRzFoYTJVZ2RHaGxJR056Y3lCdGIyUjFiR1VnWkdWd1pXNWtJRzl1SUhSb1pTQnZabVp6WlhRZ2JXOWtkV3hsTENCcWRYTjBJR05vWldOcklHWnZjaUJwZENCb1pYSmxYRzVxVVhWbGNua3VaV0ZqYUNnZ1d5QmNJblJ2Y0Z3aUxDQmNJbXhsWm5SY0lpQmRMQ0JtZFc1amRHbHZiaWdnWDJrc0lIQnliM0FnS1NCN1hHNWNkR3BSZFdWeWVTNWpjM05JYjI5cmMxc2djSEp2Y0NCZElEMGdZV1JrUjJWMFNHOXZhMGxtS0NCemRYQndiM0owTG5CcGVHVnNVRzl6YVhScGIyNHNYRzVjZEZ4MFpuVnVZM1JwYjI0b0lHVnNaVzBzSUdOdmJYQjFkR1ZrSUNrZ2UxeHVYSFJjZEZ4MGFXWWdLQ0JqYjIxd2RYUmxaQ0FwSUh0Y2JseDBYSFJjZEZ4MFkyOXRjSFYwWldRZ1BTQmpkWEpEVTFNb0lHVnNaVzBzSUhCeWIzQWdLVHRjYmx4dVhIUmNkRngwWEhRdkx5QkpaaUJqZFhKRFUxTWdjbVYwZFhKdWN5QndaWEpqWlc1MFlXZGxMQ0JtWVd4c1ltRmpheUIwYnlCdlptWnpaWFJjYmx4MFhIUmNkRngwY21WMGRYSnVJSEp1ZFcxdWIyNXdlQzUwWlhOMEtDQmpiMjF3ZFhSbFpDQXBJRDljYmx4MFhIUmNkRngwWEhScVVYVmxjbmtvSUdWc1pXMGdLUzV3YjNOcGRHbHZiaWdwV3lCd2NtOXdJRjBnS3lCY0luQjRYQ0lnT2x4dVhIUmNkRngwWEhSY2RHTnZiWEIxZEdWa08xeHVYSFJjZEZ4MGZWeHVYSFJjZEgxY2JseDBLVHRjYm4wZ0tUdGNibHh1WEc0dkx5QkRjbVZoZEdVZ2FXNXVaWEpJWldsbmFIUXNJR2x1Ym1WeVYybGtkR2dzSUdobGFXZG9kQ3dnZDJsa2RHZ3NJRzkxZEdWeVNHVnBaMmgwSUdGdVpDQnZkWFJsY2xkcFpIUm9JRzFsZEdodlpITmNibXBSZFdWeWVTNWxZV05vS0NCN0lFaGxhV2RvZERvZ1hDSm9aV2xuYUhSY0lpd2dWMmxrZEdnNklGd2lkMmxrZEdoY0lpQjlMQ0JtZFc1amRHbHZiaWdnYm1GdFpTd2dkSGx3WlNBcElIdGNibHgwYWxGMVpYSjVMbVZoWTJnb0lIdGNibHgwWEhSd1lXUmthVzVuT2lCY0ltbHVibVZ5WENJZ0t5QnVZVzFsTEZ4dVhIUmNkR052Ym5SbGJuUTZJSFI1Y0dVc1hHNWNkRngwWENKY0lqb2dYQ0p2ZFhSbGNsd2lJQ3NnYm1GdFpWeHVYSFI5TENCbWRXNWpkR2x2YmlnZ1pHVm1ZWFZzZEVWNGRISmhMQ0JtZFc1alRtRnRaU0FwSUh0Y2JseHVYSFJjZEM4dklFMWhjbWRwYmlCcGN5QnZibXg1SUdadmNpQnZkWFJsY2tobGFXZG9kQ3dnYjNWMFpYSlhhV1IwYUZ4dVhIUmNkR3BSZFdWeWVTNW1ibHNnWm5WdVkwNWhiV1VnWFNBOUlHWjFibU4wYVc5dUtDQnRZWEpuYVc0c0lIWmhiSFZsSUNrZ2UxeHVYSFJjZEZ4MGRtRnlJR05vWVdsdVlXSnNaU0E5SUdGeVozVnRaVzUwY3k1c1pXNW5kR2dnSmlZZ0tDQmtaV1poZFd4MFJYaDBjbUVnZkh3Z2RIbHdaVzltSUcxaGNtZHBiaUFoUFQwZ1hDSmliMjlzWldGdVhDSWdLU3hjYmx4MFhIUmNkRngwWlhoMGNtRWdQU0JrWldaaGRXeDBSWGgwY21FZ2ZId2dLQ0J0WVhKbmFXNGdQVDA5SUhSeWRXVWdmSHdnZG1Gc2RXVWdQVDA5SUhSeWRXVWdQeUJjSW0xaGNtZHBibHdpSURvZ1hDSmliM0prWlhKY0lpQXBPMXh1WEc1Y2RGeDBYSFJ5WlhSMWNtNGdZV05qWlhOektDQjBhR2x6TENCbWRXNWpkR2x2YmlnZ1pXeGxiU3dnZEhsd1pTd2dkbUZzZFdVZ0tTQjdYRzVjZEZ4MFhIUmNkSFpoY2lCa2IyTTdYRzVjYmx4MFhIUmNkRngwYVdZZ0tDQnBjMWRwYm1SdmR5Z2daV3hsYlNBcElDa2dlMXh1WEc1Y2RGeDBYSFJjZEZ4MEx5OGdKQ2dnZDJsdVpHOTNJQ2t1YjNWMFpYSlhhV1IwYUM5SVpXbG5hSFFnY21WMGRYSnVJSGN2YUNCcGJtTnNkV1JwYm1jZ2MyTnliMnhzWW1GeWN5QW9aMmd0TVRjeU9TbGNibHgwWEhSY2RGeDBYSFJ5WlhSMWNtNGdablZ1WTA1aGJXVXVhVzVrWlhoUFppZ2dYQ0p2ZFhSbGNsd2lJQ2tnUFQwOUlEQWdQMXh1WEhSY2RGeDBYSFJjZEZ4MFpXeGxiVnNnWENKcGJtNWxjbHdpSUNzZ2JtRnRaU0JkSURwY2JseDBYSFJjZEZ4MFhIUmNkR1ZzWlcwdVpHOWpkVzFsYm5RdVpHOWpkVzFsYm5SRmJHVnRaVzUwV3lCY0ltTnNhV1Z1ZEZ3aUlDc2dibUZ0WlNCZE8xeHVYSFJjZEZ4MFhIUjlYRzVjYmx4MFhIUmNkRngwTHk4Z1IyVjBJR1J2WTNWdFpXNTBJSGRwWkhSb0lHOXlJR2hsYVdkb2RGeHVYSFJjZEZ4MFhIUnBaaUFvSUdWc1pXMHVibTlrWlZSNWNHVWdQVDA5SURrZ0tTQjdYRzVjZEZ4MFhIUmNkRngwWkc5aklEMGdaV3hsYlM1a2IyTjFiV1Z1ZEVWc1pXMWxiblE3WEc1Y2JseDBYSFJjZEZ4MFhIUXZMeUJGYVhSb1pYSWdjMk55YjJ4c1cxZHBaSFJvTDBobGFXZG9kRjBnYjNJZ2IyWm1jMlYwVzFkcFpIUm9MMGhsYVdkb2RGMGdiM0lnWTJ4cFpXNTBXMWRwWkhSb0wwaGxhV2RvZEYwc1hHNWNkRngwWEhSY2RGeDBMeThnZDJocFkyaGxkbVZ5SUdseklHZHlaV0YwWlhOMFhHNWNkRngwWEhSY2RGeDBjbVYwZFhKdUlFMWhkR2d1YldGNEtGeHVYSFJjZEZ4MFhIUmNkRngwWld4bGJTNWliMlI1V3lCY0luTmpjbTlzYkZ3aUlDc2dibUZ0WlNCZExDQmtiMk5iSUZ3aWMyTnliMnhzWENJZ0t5QnVZVzFsSUYwc1hHNWNkRngwWEhSY2RGeDBYSFJsYkdWdExtSnZaSGxiSUZ3aWIyWm1jMlYwWENJZ0t5QnVZVzFsSUYwc0lHUnZZMXNnWENKdlptWnpaWFJjSWlBcklHNWhiV1VnWFN4Y2JseDBYSFJjZEZ4MFhIUmNkR1J2WTFzZ1hDSmpiR2xsYm5SY0lpQXJJRzVoYldVZ1hWeHVYSFJjZEZ4MFhIUmNkQ2s3WEc1Y2RGeDBYSFJjZEgxY2JseHVYSFJjZEZ4MFhIUnlaWFIxY200Z2RtRnNkV1VnUFQwOUlIVnVaR1ZtYVc1bFpDQS9YRzVjYmx4MFhIUmNkRngwWEhRdkx5QkhaWFFnZDJsa2RHZ2diM0lnYUdWcFoyaDBJRzl1SUhSb1pTQmxiR1Z0Wlc1MExDQnlaWEYxWlhOMGFXNW5JR0oxZENCdWIzUWdabTl5WTJsdVp5QndZWEp6WlVac2IyRjBYRzVjZEZ4MFhIUmNkRngwYWxGMVpYSjVMbU56Y3lnZ1pXeGxiU3dnZEhsd1pTd2daWGgwY21FZ0tTQTZYRzVjYmx4MFhIUmNkRngwWEhRdkx5QlRaWFFnZDJsa2RHZ2diM0lnYUdWcFoyaDBJRzl1SUhSb1pTQmxiR1Z0Wlc1MFhHNWNkRngwWEhSY2RGeDBhbEYxWlhKNUxuTjBlV3hsS0NCbGJHVnRMQ0IwZVhCbExDQjJZV3gxWlN3Z1pYaDBjbUVnS1R0Y2JseDBYSFJjZEgwc0lIUjVjR1VzSUdOb1lXbHVZV0pzWlNBL0lHMWhjbWRwYmlBNklIVnVaR1ZtYVc1bFpDd2dZMmhoYVc1aFlteGxJQ2s3WEc1Y2RGeDBmVHRjYmx4MGZTQXBPMXh1ZlNBcE8xeHVYRzVjYm1wUmRXVnllUzVsWVdOb0tDQmJYRzVjZEZ3aVlXcGhlRk4wWVhKMFhDSXNYRzVjZEZ3aVlXcGhlRk4wYjNCY0lpeGNibHgwWENKaGFtRjRRMjl0Y0d4bGRHVmNJaXhjYmx4MFhDSmhhbUY0UlhKeWIzSmNJaXhjYmx4MFhDSmhhbUY0VTNWalkyVnpjMXdpTEZ4dVhIUmNJbUZxWVhoVFpXNWtYQ0pjYmwwc0lHWjFibU4wYVc5dUtDQmZhU3dnZEhsd1pTQXBJSHRjYmx4MGFsRjFaWEo1TG1adVd5QjBlWEJsSUYwZ1BTQm1kVzVqZEdsdmJpZ2dabTRnS1NCN1hHNWNkRngwY21WMGRYSnVJSFJvYVhNdWIyNG9JSFI1Y0dVc0lHWnVJQ2s3WEc1Y2RIMDdYRzU5SUNrN1hHNWNibHh1WEc1Y2JtcFJkV1Z5ZVM1bWJpNWxlSFJsYm1Rb0lIdGNibHh1WEhSaWFXNWtPaUJtZFc1amRHbHZiaWdnZEhsd1pYTXNJR1JoZEdFc0lHWnVJQ2tnZTF4dVhIUmNkSEpsZEhWeWJpQjBhR2x6TG05dUtDQjBlWEJsY3l3Z2JuVnNiQ3dnWkdGMFlTd2dabTRnS1R0Y2JseDBmU3hjYmx4MGRXNWlhVzVrT2lCbWRXNWpkR2x2YmlnZ2RIbHdaWE1zSUdadUlDa2dlMXh1WEhSY2RISmxkSFZ5YmlCMGFHbHpMbTltWmlnZ2RIbHdaWE1zSUc1MWJHd3NJR1p1SUNrN1hHNWNkSDBzWEc1Y2JseDBaR1ZzWldkaGRHVTZJR1oxYm1OMGFXOXVLQ0J6Wld4bFkzUnZjaXdnZEhsd1pYTXNJR1JoZEdFc0lHWnVJQ2tnZTF4dVhIUmNkSEpsZEhWeWJpQjBhR2x6TG05dUtDQjBlWEJsY3l3Z2MyVnNaV04wYjNJc0lHUmhkR0VzSUdadUlDazdYRzVjZEgwc1hHNWNkSFZ1WkdWc1pXZGhkR1U2SUdaMWJtTjBhVzl1S0NCelpXeGxZM1J2Y2l3Z2RIbHdaWE1zSUdadUlDa2dlMXh1WEc1Y2RGeDBMeThnS0NCdVlXMWxjM0JoWTJVZ0tTQnZjaUFvSUhObGJHVmpkRzl5TENCMGVYQmxjeUJiTENCbWJsMGdLVnh1WEhSY2RISmxkSFZ5YmlCaGNtZDFiV1Z1ZEhNdWJHVnVaM1JvSUQwOVBTQXhJRDljYmx4MFhIUmNkSFJvYVhNdWIyWm1LQ0J6Wld4bFkzUnZjaXdnWENJcUtsd2lJQ2tnT2x4dVhIUmNkRngwZEdocGN5NXZabVlvSUhSNWNHVnpMQ0J6Wld4bFkzUnZjaUI4ZkNCY0lpb3FYQ0lzSUdadUlDazdYRzVjZEgwc1hHNWNibHgwYUc5MlpYSTZJR1oxYm1OMGFXOXVLQ0JtYms5MlpYSXNJR1p1VDNWMElDa2dlMXh1WEhSY2RISmxkSFZ5YmlCMGFHbHpMbTF2ZFhObFpXNTBaWElvSUdadVQzWmxjaUFwTG0xdmRYTmxiR1ZoZG1Vb0lHWnVUM1YwSUh4OElHWnVUM1psY2lBcE8xeHVYSFI5WEc1OUlDazdYRzVjYm1wUmRXVnllUzVsWVdOb0tGeHVYSFFvSUZ3aVlteDFjaUJtYjJOMWN5Qm1iMk4xYzJsdUlHWnZZM1Z6YjNWMElISmxjMmw2WlNCelkzSnZiR3dnWTJ4cFkyc2daR0pzWTJ4cFkyc2dYQ0lnSzF4dVhIUmNJbTF2ZFhObFpHOTNiaUJ0YjNWelpYVndJRzF2ZFhObGJXOTJaU0J0YjNWelpXOTJaWElnYlc5MWMyVnZkWFFnYlc5MWMyVmxiblJsY2lCdGIzVnpaV3hsWVhabElGd2lJQ3RjYmx4MFhDSmphR0Z1WjJVZ2MyVnNaV04wSUhOMVltMXBkQ0JyWlhsa2IzZHVJR3RsZVhCeVpYTnpJR3RsZVhWd0lHTnZiblJsZUhSdFpXNTFYQ0lnS1M1emNHeHBkQ2dnWENJZ1hDSWdLU3hjYmx4MFpuVnVZM1JwYjI0b0lGOXBMQ0J1WVcxbElDa2dlMXh1WEc1Y2RGeDBMeThnU0dGdVpHeGxJR1YyWlc1MElHSnBibVJwYm1kY2JseDBYSFJxVVhWbGNua3VabTViSUc1aGJXVWdYU0E5SUdaMWJtTjBhVzl1S0NCa1lYUmhMQ0JtYmlBcElIdGNibHgwWEhSY2RISmxkSFZ5YmlCaGNtZDFiV1Z1ZEhNdWJHVnVaM1JvSUQ0Z01DQS9YRzVjZEZ4MFhIUmNkSFJvYVhNdWIyNG9JRzVoYldVc0lHNTFiR3dzSUdSaGRHRXNJR1p1SUNrZ09seHVYSFJjZEZ4MFhIUjBhR2x6TG5SeWFXZG5aWElvSUc1aGJXVWdLVHRjYmx4MFhIUjlPMXh1WEhSOVhHNHBPMXh1WEc1Y2JseHVYRzR2THlCVGRYQndiM0owT2lCQmJtUnliMmxrSUR3OU5DNHdJRzl1YkhsY2JpOHZJRTFoYTJVZ2MzVnlaU0IzWlNCMGNtbHRJRUpQVFNCaGJtUWdUa0pUVUZ4dUx5OGdVbVZ4ZFdseVpTQjBhR0YwSUhSb1pTQmNJbmRvYVhSbGMzQmhZMlVnY25WdVhDSWdjM1JoY25SeklHWnliMjBnWVNCdWIyNHRkMmhwZEdWemNHRmpaVnh1THk4Z2RHOGdZWFp2YVdRZ1R5aE9YaklwSUdKbGFHRjJhVzl5SUhkb1pXNGdkR2hsSUdWdVoybHVaU0IzYjNWc1pDQjBjbmtnYldGMFkyaHBibWNnWENKY1hITXJKRndpSUdGMElHVmhZMmdnYzNCaFkyVWdjRzl6YVhScGIyNHVYRzUyWVhJZ2NuUnlhVzBnUFNBdlhsdGNYSE5jWEhWR1JVWkdYRng0UVRCZEszd29XMTVjWEhOY1hIVkdSVVpHWEZ4NFFUQmRLVnRjWEhOY1hIVkdSVVpHWEZ4NFFUQmRLeVF2Wnp0Y2JseHVMeThnUW1sdVpDQmhJR1oxYm1OMGFXOXVJSFJ2SUdFZ1kyOXVkR1Y0ZEN3Z2IzQjBhVzl1WVd4c2VTQndZWEowYVdGc2JIa2dZWEJ3YkhscGJtY2dZVzU1WEc0dkx5QmhjbWQxYldWdWRITXVYRzR2THlCcVVYVmxjbmt1Y0hKdmVIa2dhWE1nWkdWd2NtVmpZWFJsWkNCMGJ5QndjbTl0YjNSbElITjBZVzVrWVhKa2N5QW9jM0JsWTJsbWFXTmhiR3g1SUVaMWJtTjBhVzl1STJKcGJtUXBYRzR2THlCSWIzZGxkbVZ5TENCcGRDQnBjeUJ1YjNRZ2MyeGhkR1ZrSUdadmNpQnlaVzF2ZG1Gc0lHRnVlU0IwYVcxbElITnZiMjVjYm1wUmRXVnllUzV3Y205NGVTQTlJR1oxYm1OMGFXOXVLQ0JtYml3Z1kyOXVkR1Y0ZENBcElIdGNibHgwZG1GeUlIUnRjQ3dnWVhKbmN5d2djSEp2ZUhrN1hHNWNibHgwYVdZZ0tDQjBlWEJsYjJZZ1kyOXVkR1Y0ZENBOVBUMGdYQ0p6ZEhKcGJtZGNJaUFwSUh0Y2JseDBYSFIwYlhBZ1BTQm1ibHNnWTI5dWRHVjRkQ0JkTzF4dVhIUmNkR052Ym5SbGVIUWdQU0JtYmp0Y2JseDBYSFJtYmlBOUlIUnRjRHRjYmx4MGZWeHVYRzVjZEM4dklGRjFhV05ySUdOb1pXTnJJSFJ2SUdSbGRHVnliV2x1WlNCcFppQjBZWEpuWlhRZ2FYTWdZMkZzYkdGaWJHVXNJR2x1SUhSb1pTQnpjR1ZqWEc1Y2RDOHZJSFJvYVhNZ2RHaHliM2R6SUdFZ1ZIbHdaVVZ5Y205eUxDQmlkWFFnZDJVZ2QybHNiQ0JxZFhOMElISmxkSFZ5YmlCMWJtUmxabWx1WldRdVhHNWNkR2xtSUNnZ0lXbHpSblZ1WTNScGIyNG9JR1p1SUNrZ0tTQjdYRzVjZEZ4MGNtVjBkWEp1SUhWdVpHVm1hVzVsWkR0Y2JseDBmVnh1WEc1Y2RDOHZJRk5wYlhWc1lYUmxaQ0JpYVc1a1hHNWNkR0Z5WjNNZ1BTQnpiR2xqWlM1allXeHNLQ0JoY21kMWJXVnVkSE1zSURJZ0tUdGNibHgwY0hKdmVIa2dQU0JtZFc1amRHbHZiaWdwSUh0Y2JseDBYSFJ5WlhSMWNtNGdabTR1WVhCd2JIa29JR052Ym5SbGVIUWdmSHdnZEdocGN5d2dZWEpuY3k1amIyNWpZWFFvSUhOc2FXTmxMbU5oYkd3b0lHRnlaM1Z0Wlc1MGN5QXBJQ2tnS1R0Y2JseDBmVHRjYmx4dVhIUXZMeUJUWlhRZ2RHaGxJR2QxYVdRZ2IyWWdkVzVwY1hWbElHaGhibVJzWlhJZ2RHOGdkR2hsSUhOaGJXVWdiMllnYjNKcFoybHVZV3dnYUdGdVpHeGxjaXdnYzI4Z2FYUWdZMkZ1SUdKbElISmxiVzkyWldSY2JseDBjSEp2ZUhrdVozVnBaQ0E5SUdadUxtZDFhV1FnUFNCbWJpNW5kV2xrSUh4OElHcFJkV1Z5ZVM1bmRXbGtLeXM3WEc1Y2JseDBjbVYwZFhKdUlIQnliM2g1TzF4dWZUdGNibHh1YWxGMVpYSjVMbWh2YkdSU1pXRmtlU0E5SUdaMWJtTjBhVzl1S0NCb2IyeGtJQ2tnZTF4dVhIUnBaaUFvSUdodmJHUWdLU0I3WEc1Y2RGeDBhbEYxWlhKNUxuSmxZV1I1VjJGcGRDc3JPMXh1WEhSOUlHVnNjMlVnZTF4dVhIUmNkR3BSZFdWeWVTNXlaV0ZrZVNnZ2RISjFaU0FwTzF4dVhIUjlYRzU5TzF4dWFsRjFaWEo1TG1selFYSnlZWGtnUFNCQmNuSmhlUzVwYzBGeWNtRjVPMXh1YWxGMVpYSjVMbkJoY25ObFNsTlBUaUE5SUVwVFQwNHVjR0Z5YzJVN1hHNXFVWFZsY25rdWJtOWtaVTVoYldVZ1BTQnViMlJsVG1GdFpUdGNibXBSZFdWeWVTNXBjMFoxYm1OMGFXOXVJRDBnYVhOR2RXNWpkR2x2Ymp0Y2JtcFJkV1Z5ZVM1cGMxZHBibVJ2ZHlBOUlHbHpWMmx1Wkc5M08xeHVhbEYxWlhKNUxtTmhiV1ZzUTJGelpTQTlJR05oYldWc1EyRnpaVHRjYm1wUmRXVnllUzUwZVhCbElEMGdkRzlVZVhCbE8xeHVYRzVxVVhWbGNua3VibTkzSUQwZ1JHRjBaUzV1YjNjN1hHNWNibXBSZFdWeWVTNXBjMDUxYldWeWFXTWdQU0JtZFc1amRHbHZiaWdnYjJKcUlDa2dlMXh1WEc1Y2RDOHZJRUZ6SUc5bUlHcFJkV1Z5ZVNBekxqQXNJR2x6VG5WdFpYSnBZeUJwY3lCc2FXMXBkR1ZrSUhSdlhHNWNkQzh2SUhOMGNtbHVaM01nWVc1a0lHNTFiV0psY25NZ0tIQnlhVzFwZEdsMlpYTWdiM0lnYjJKcVpXTjBjeWxjYmx4MEx5OGdkR2hoZENCallXNGdZbVVnWTI5bGNtTmxaQ0IwYnlCbWFXNXBkR1VnYm5WdFltVnljeUFvWjJndE1qWTJNaWxjYmx4MGRtRnlJSFI1Y0dVZ1BTQnFVWFZsY25rdWRIbHdaU2dnYjJKcUlDazdYRzVjZEhKbGRIVnliaUFvSUhSNWNHVWdQVDA5SUZ3aWJuVnRZbVZ5WENJZ2ZId2dkSGx3WlNBOVBUMGdYQ0p6ZEhKcGJtZGNJaUFwSUNZbVhHNWNibHgwWEhRdkx5QndZWEp6WlVac2IyRjBJRTVoVG5NZ2JuVnRaWEpwWXkxallYTjBJR1poYkhObElIQnZjMmwwYVhabGN5QW9YQ0pjSWlsY2JseDBYSFF2THlBdUxpNWlkWFFnYldsemFXNTBaWEp3Y21WMGN5QnNaV0ZrYVc1bkxXNTFiV0psY2lCemRISnBibWR6TENCd1lYSjBhV04xYkdGeWJIa2dhR1Y0SUd4cGRHVnlZV3h6SUNoY0lqQjRMaTR1WENJcFhHNWNkRngwTHk4Z2MzVmlkSEpoWTNScGIyNGdabTl5WTJWeklHbHVabWx1YVhScFpYTWdkRzhnVG1GT1hHNWNkRngwSVdselRtRk9LQ0J2WW1vZ0xTQndZWEp6WlVac2IyRjBLQ0J2WW1vZ0tTQXBPMXh1ZlR0Y2JseHVhbEYxWlhKNUxuUnlhVzBnUFNCbWRXNWpkR2x2YmlnZ2RHVjRkQ0FwSUh0Y2JseDBjbVYwZFhKdUlIUmxlSFFnUFQwZ2JuVnNiQ0EvWEc1Y2RGeDBYQ0pjSWlBNlhHNWNkRngwS0NCMFpYaDBJQ3NnWENKY0lpQXBMbkpsY0d4aFkyVW9JSEowY21sdExDQmNJaVF4WENJZ0tUdGNibjA3WEc1Y2JseHVYRzR2THlCU1pXZHBjM1JsY2lCaGN5QmhJRzVoYldWa0lFRk5SQ0J0YjJSMWJHVXNJSE5wYm1ObElHcFJkV1Z5ZVNCallXNGdZbVVnWTI5dVkyRjBaVzVoZEdWa0lIZHBkR2dnYjNSb1pYSmNiaTh2SUdacGJHVnpJSFJvWVhRZ2JXRjVJSFZ6WlNCa1pXWnBibVVzSUdKMWRDQnViM1FnZG1saElHRWdjSEp2Y0dWeUlHTnZibU5oZEdWdVlYUnBiMjRnYzJOeWFYQjBJSFJvWVhSY2JpOHZJSFZ1WkdWeWMzUmhibVJ6SUdGdWIyNTViVzkxY3lCQlRVUWdiVzlrZFd4bGN5NGdRU0J1WVcxbFpDQkJUVVFnYVhNZ2MyRm1aWE4wSUdGdVpDQnRiM04wSUhKdlluVnpkRnh1THk4Z2QyRjVJSFJ2SUhKbFoybHpkR1Z5TGlCTWIzZGxjbU5oYzJVZ2FuRjFaWEo1SUdseklIVnpaV1FnWW1WallYVnpaU0JCVFVRZ2JXOWtkV3hsSUc1aGJXVnpJR0Z5WlZ4dUx5OGdaR1Z5YVhabFpDQm1jbTl0SUdacGJHVWdibUZ0WlhNc0lHRnVaQ0JxVVhWbGNua2dhWE1nYm05eWJXRnNiSGtnWkdWc2FYWmxjbVZrSUdsdUlHRWdiRzkzWlhKallYTmxYRzR2THlCbWFXeGxJRzVoYldVdUlFUnZJSFJvYVhNZ1lXWjBaWElnWTNKbFlYUnBibWNnZEdobElHZHNiMkpoYkNCemJ5QjBhR0YwSUdsbUlHRnVJRUZOUkNCdGIyUjFiR1VnZDJGdWRITmNiaTh2SUhSdklHTmhiR3dnYm05RGIyNW1iR2xqZENCMGJ5Qm9hV1JsSUhSb2FYTWdkbVZ5YzJsdmJpQnZaaUJxVVhWbGNua3NJR2wwSUhkcGJHd2dkMjl5YXk1Y2JseHVMeThnVG05MFpTQjBhR0YwSUdadmNpQnRZWGhwYlhWdElIQnZjblJoWW1sc2FYUjVMQ0JzYVdKeVlYSnBaWE1nZEdoaGRDQmhjbVVnYm05MElHcFJkV1Z5ZVNCemFHOTFiR1JjYmk4dklHUmxZMnhoY21VZ2RHaGxiWE5sYkhabGN5QmhjeUJoYm05dWVXMXZkWE1nYlc5a2RXeGxjeXdnWVc1a0lHRjJiMmxrSUhObGRIUnBibWNnWVNCbmJHOWlZV3dnYVdZZ1lXNWNiaTh2SUVGTlJDQnNiMkZrWlhJZ2FYTWdjSEpsYzJWdWRDNGdhbEYxWlhKNUlHbHpJR0VnYzNCbFkybGhiQ0JqWVhObExpQkdiM0lnYlc5eVpTQnBibVp2Y20xaGRHbHZiaXdnYzJWbFhHNHZMeUJvZEhSd2N6b3ZMMmRwZEdoMVlpNWpiMjB2YW5KaWRYSnJaUzl5WlhGMWFYSmxhbk12ZDJscmFTOVZjR1JoZEdsdVp5MWxlR2x6ZEdsdVp5MXNhV0p5WVhKcFpYTWpkMmxyYVMxaGJtOXVYRzVjYm1sbUlDZ2dkSGx3Wlc5bUlHUmxabWx1WlNBOVBUMGdYQ0ptZFc1amRHbHZibHdpSUNZbUlHUmxabWx1WlM1aGJXUWdLU0I3WEc1Y2RHUmxabWx1WlNnZ1hDSnFjWFZsY25sY0lpd2dXMTBzSUdaMWJtTjBhVzl1S0NrZ2UxeHVYSFJjZEhKbGRIVnliaUJxVVhWbGNuazdYRzVjZEgwZ0tUdGNibjFjYmx4dVhHNWNibHh1ZG1GeVhHNWNibHgwTHk4Z1RXRndJRzkyWlhJZ2FsRjFaWEo1SUdsdUlHTmhjMlVnYjJZZ2IzWmxjbmR5YVhSbFhHNWNkRjlxVVhWbGNua2dQU0IzYVc1a2IzY3VhbEYxWlhKNUxGeHVYRzVjZEM4dklFMWhjQ0J2ZG1WeUlIUm9aU0FrSUdsdUlHTmhjMlVnYjJZZ2IzWmxjbmR5YVhSbFhHNWNkRjhrSUQwZ2QybHVaRzkzTGlRN1hHNWNibXBSZFdWeWVTNXViME52Ym1ac2FXTjBJRDBnWm5WdVkzUnBiMjRvSUdSbFpYQWdLU0I3WEc1Y2RHbG1JQ2dnZDJsdVpHOTNMaVFnUFQwOUlHcFJkV1Z5ZVNBcElIdGNibHgwWEhSM2FXNWtiM2N1SkNBOUlGOGtPMXh1WEhSOVhHNWNibHgwYVdZZ0tDQmtaV1Z3SUNZbUlIZHBibVJ2ZHk1cVVYVmxjbmtnUFQwOUlHcFJkV1Z5ZVNBcElIdGNibHgwWEhSM2FXNWtiM2N1YWxGMVpYSjVJRDBnWDJwUmRXVnllVHRjYmx4MGZWeHVYRzVjZEhKbGRIVnliaUJxVVhWbGNuazdYRzU5TzF4dVhHNHZMeUJGZUhCdmMyVWdhbEYxWlhKNUlHRnVaQ0FrSUdsa1pXNTBhV1pwWlhKekxDQmxkbVZ1SUdsdUlFRk5SRnh1THk4Z0tIUnlZV010TnpFd01pTmpiMjF0Wlc1ME9qRXdMQ0JvZEhSd2N6b3ZMMmRwZEdoMVlpNWpiMjB2YW5GMVpYSjVMMnB4ZFdWeWVTOXdkV3hzTHpVMU55bGNiaTh2SUdGdVpDQkRiMjF0YjI1S1V5Qm1iM0lnWW5KdmQzTmxjaUJsYlhWc1lYUnZjbk1nS0hSeVlXTXRNVE0xTmpZcFhHNXBaaUFvSUhSNWNHVnZaaUJ1YjBkc2IySmhiQ0E5UFQwZ1hDSjFibVJsWm1sdVpXUmNJaUFwSUh0Y2JseDBkMmx1Wkc5M0xtcFJkV1Z5ZVNBOUlIZHBibVJ2ZHk0a0lEMGdhbEYxWlhKNU8xeHVmVnh1WEc1Y2JseHVYRzV5WlhSMWNtNGdhbEYxWlhKNU8xeHVmU0FwTzF4dUlpd2lMeThnWlhoMGNtRmpkR1ZrSUdKNUlHMXBibWt0WTNOekxXVjRkSEpoWTNRdGNHeDFaMmx1WEc1bGVIQnZjblFnZTMwN0lpd2laMnh2WW1Gc0xrSnZiM1J6ZEhKaGNDQTlJSHQ5TzF4dVhHNW5iRzlpWVd3dWFsRjFaWEo1SUQwZ2NtVnhkV2x5WlNnbmFuRjFaWEo1SnlrN1hHNW5iRzlpWVd3dVFtOXZkSE4wY21Gd0xrSjFkSFJ2YmlBOUlISmxjWFZwY21Vb0oyNXZaR1ZOYjJSMWJHVnpMMkp2YjNSemRISmhjQzlxY3k5a2FYTjBMMkoxZEhSdmJpY3BPMXh1WjJ4dlltRnNMa0p2YjNSemRISmhjQzVEYjJ4c1lYQnpaU0E5SUhKbGNYVnBjbVVvSjI1dlpHVk5iMlIxYkdWekwySnZiM1J6ZEhKaGNDOXFjeTlrYVhOMEwyTnZiR3hoY0hObEp5azdYRzVuYkc5aVlXd3VRbTl2ZEhOMGNtRndMbEJ2Y0c5MlpYSWdQU0J5WlhGMWFYSmxLQ2R1YjJSbFRXOWtkV3hsY3k5aWIyOTBjM1J5WVhBdmFuTXZaR2x6ZEM5d2IzQnZkbVZ5SnlrN1hHNW5iRzlpWVd3dVFtOXZkSE4wY21Gd0xsTmpjbTlzYkhOd2VTQTlJSEpsY1hWcGNtVW9KMjV2WkdWTmIyUjFiR1Z6TDJKdmIzUnpkSEpoY0M5cWN5OWthWE4wTDNOamNtOXNiSE53ZVNjcE8xeHVaMnh2WW1Gc0xrSnZiM1J6ZEhKaGNDNVVZV0lnUFNCeVpYRjFhWEpsS0NkdWIyUmxUVzlrZFd4bGN5OWliMjkwYzNSeVlYQXZhbk12WkdsemRDOTBZV0luS1R0Y2JtZHNiMkpoYkM1Q2IyOTBjM1J5WVhBdVZHOXZiSFJwY0NBOUlISmxjWFZwY21Vb0oyNXZaR1ZOYjJSMWJHVnpMMkp2YjNSemRISmhjQzlxY3k5a2FYTjBMM1J2YjJ4MGFYQW5LVHRjYm1kc2IySmhiQzVDYjI5MGMzUnlZWEF1VFc5a1lXd2dQU0J5WlhGMWFYSmxLQ2R1YjJSbFRXOWtkV3hsY3k5aWIyOTBjM1J5WVhBdmFuTXZaR2x6ZEM5dGIyUmhiQ2NwTzF4dUlpd2lLR1oxYm1OMGFXOXVJQ2drS1NCN1hHNWNkQ1FvWm5WdVkzUnBiMjRnS0NrZ2UxeHVYSFJjZEhaaGNpQk5aWE56YVdFZ1BTQjdYRzVjZEZ4MFhIUmtiME5vWldOclltOTRPaUJtZFc1amRHbHZiaUFvWlNrZ2UxeHVYSFJjZEZ4MFhIUWtLSFJvYVhNcExuQmhjbVZ1ZENoY0lpNXRaWE56YVdFdFkyaGxZMnRpYjNoY0lpa3VZV1JrUTJ4aGMzTW9YQ0pwY3kxamJHbGphMlZrWENJcE8xeHVYSFJjZEZ4MFhIUWtLSFJvYVhNcExtWnZZM1Z6S0NrN1hHNWNkRngwWEhSY2RDUW9KMkp2WkhrbktTNXZibVVvSjJadlkzVnpiM1YwSnl3a0tIUm9hWE1wTENCTlpYTnphV0V1Y21WdGIzWmxTWE5EYkdsamEyVmtLVHRjYmx4MFhIUmNkSDBzWEc1Y2RGeDBYSFJ5WlcxdmRtVkpjME5zYVdOclpXUTZJR1oxYm1OMGFXOXVJQ2hsS1NCN1hHNWNkRngwWEhSY2RDUW9YQ0l1YldWemMybGhMV05vWldOclltOTRYQ0lwTG5KbGJXOTJaVU5zWVhOektGd2lhWE10WTJ4cFkydGxaRndpS1R0Y2JseDBYSFJjZEgwc1hHNWNkRngwZlR0Y2JseDBYSFFrS0NkaWIyUjVKeWt1YjI0b0oyTnNhV05ySnl3Z0p5NXRaWE56YVdFdFkyaGxZMnRpYjNnZ2FXNXdkWFE2Ym05MEtGdGthWE5oWW14bFpGMHBKeXdnVFdWemMybGhMbVJ2UTJobFkydGliM2dwTzF4dVhIUjlLVHRjYm4wcEtHcFJkV1Z5ZVNrN0lpd2lLR1oxYm1OMGFXOXVJQ2drS1NCN1hHNWNkQ1FvWm5WdVkzUnBiMjRnS0NrZ2UxeHVYSFJjZEhaaGNpQk5aWE56YVdFZ1BTQjdYRzVjZEZ4MFhIUmtiMVJsZUhSbWFXVnNaRG9nWm5WdVkzUnBiMjRnS0dVcElIdGNibHgwWEhSY2RGeDBKQ2gwYUdsektTNW1hVzVrS0NkcGJuQjFkQ3dnZEdWNGRHRnlaV0VuS1M1bWIyTjFjeWdwTzF4dVhIUmNkRngwWEhRa0tIUm9hWE1wTG1Ga1pFTnNZWE56S0NkcGN5MW1iMk4xYzJWa0p5azdYRzVjZEZ4MFhIUmNkQ1FvZEdocGN5a3ViMjVsS0NkbWIyTjFjMjkxZENjc0pDaDBhR2x6S1M1bWFXNWtLQ2MrSUd4aFltVnNJR2x1Y0hWMExDQStJR3hoWW1Wc0lIUmxlSFJoY21WaEp5a3NJRTFsYzNOcFlTNXlaVzF2ZG1WSmMwWnZZM1Z6WldRcE8xeHVYSFJjZEZ4MGZTeGNibHgwWEhSY2RISmxiVzkyWlVselJtOWpkWE5sWkRvZ1puVnVZM1JwYjI0Z0tHVXBJSHRjYmx4MFhIUmNkRngwYVdZZ0tDUW9kR2hwY3lrdVptbHVaQ2duSUdsdWNIVjBMQ0FnZEdWNGRHRnlaV0VuS1M1MllXd29LUzVzWlc1bmRHZ2dQVDA5SURBZ0tYdGNibHgwWEhSY2RGeDBYSFFrS0NjdWJXVnpjMmxoTFhSbGVIUm1hV1ZzWkNjcExuSmxiVzkyWlVOc1lYTnpLQ2RwY3kxbWIyTjFjMlZrSnlrN1hHNWNkRngwWEhSY2RIMWNibHgwWEhSY2RIMHNYRzVjZEZ4MGZUdGNibHgwWEhRa0tDZGliMlI1SnlrdWIyNG9KMk5zYVdOckp5d2dKeTV0WlhOemFXRXRkR1Y0ZEdacFpXeGtKeXdnVFdWemMybGhMbVJ2VkdWNGRHWnBaV3hrS1R0Y2JseDBmU2s3WEc1OUtTaHFVWFZsY25rcE8xeHVJaXdpTHlvcVhHNGdLaUJEYjI1emIyeGxJR3h2WjJkbGNpNGdVMlZzWmlCcGJuWnZhMlZrTGx4dUlDcGNiaUFxSUVCeVpYUjFjbTRnZTI5aWFtVmpkSDBnUTJGc2JHSmhZMnR6TGx4dUlDb3ZYRzVqYjI1emRDQnNiMmRuWlhKR2JpQTlJQ2dvS1NBOVBpQjdYRzVjYmx4MFkyOXVjM1FnYldWMGFHOWtWRzlEYjJ4dmNrMWhjQ0E5SUh0Y2JseDBYSFJrWldKMVp6b2dKeU0zWmpoak9HUW5MRnh1WEhSY2RHeHZaem9nSnlNeVpXTmpOekVuTEZ4dVhIUmNkSGRoY200NklDY2paak01WXpFeUp5eGNibHgwWEhSbGNuSnZjam9nSnlOak1ETTVNbUluTEZ4dVhIUmNkSFJoWW14bE9pQW5JMk13TXpreVlpY3NYRzVjZEgwN1hHNWNibHgwWTI5dWMzUWdjSEpwYm5RZ1BTQm1kVzVqZEdsdmJpQW9iV1YwYUc5a0xDQmhjbWR6S1NCN1hHNWNkRngwWTI5dWMzUmNibHgwWEhSY2RITjBlV3hsY3lBOUlGdGdZbUZqYTJkeWIzVnVaRG9nSkh0dFpYUm9iMlJVYjBOdmJHOXlUV0Z3VzIxbGRHaHZaRjE5WUN3Z1lHSnZjbVJsY2kxeVlXUnBkWE02SURBdU0yVnRZQ3dnWUdOdmJHOXlPaUIzYUdsMFpXQXNJR0JtYjI1MExYZGxhV2RvZERvZ1ltOXNaR0FzSUdCd1lXUmthVzVuT2lBeWNIZ2dNQzQxWlcxZ1hTeGNibHgwWEhSY2RHeHZaMUJ5WldacGVDQTlJRnNuSldOdFpYTnphV0VuTENCemRIbHNaWE11YW05cGJpZ25PeWNwWFR0Y2JseHVYSFJjZEdsbUlDaHRaWE56YVdGV1lYSnpMbk5qY21sd2RFUmxZblZuSUQwOVBTQm1ZV3h6WlNrZ2UxeHVYSFJjZEZ4MGNtVjBkWEp1TzF4dVhIUmNkSDFjYmx4dVhIUmNkR052Ym5OdmJHVmJiV1YwYUc5a1hTZ3VMaTVzYjJkUWNtVm1hWGdzSUM0dUxtRnlaM01wTzF4dVhIUjlYRzVjYmx4MFkyOXVjM1FnWVhCcElEMGdlMzA3WEc1Y2RHTnZibk4wSUd4dloyZGxjazFsZEdodlpITWdQU0JQWW1wbFkzUXVhMlY1Y3lodFpYUm9iMlJVYjBOdmJHOXlUV0Z3S1R0Y2JseHVYSFJtYjNJZ0tHTnZibk4wSUd0bGVTQnZaaUJzYjJkblpYSk5aWFJvYjJSektTQjdYRzVjZEZ4MFkyOXVjM1FnYldWMGFHOWtJRDBnYTJWNU8xeHVYRzVjZEZ4MFlYQnBXMjFsZEdodlpGMGdQU0FvTGk0dVlYSm5jeWtnUFQ0Z2UxeHVYSFJjZEZ4MGNISnBiblFvYldWMGFHOWtMQ0JoY21kektUdGNibHgwWEhSOU8xeHVYSFI5WEc1Y2JseDBjbVYwZFhKdUlHRndhVHRjYm4wcEtDazdYRzVjYm1kc2IySmhiQzVOWlhOemFXRkZlSFFnUFNCbmJHOWlZV3d1VFdWemMybGhSWGgwSUh4OElIdDlPMXh1WjJ4dlltRnNMazFsYzNOcFlVVjRkQ0E5SUh0Y2JseDBMaTR1WjJ4dlltRnNMazFsYzNOcFlVVjRkQ3hjYmx4MExpNHVlMnh2WjJkbGNqb2diRzluWjJWeVJtNTlYRzU5T3lJc0lpaG1kVzVqZEdsdmJpQW9KQ2tnZTF4dVhIUWtLR1oxYm1OMGFXOXVJQ2dwSUh0Y2JseDBYSFIyWVhJZ1RXVnpjMmxoSUQwZ2UxeHVYSFJjZEZ4MFpHOVNZV1JwYnpvZ1puVnVZM1JwYjI0Z0tHVXBJSHRjYmx4MFhIUmNkRngwSkNoMGFHbHpLUzV3WVhKbGJuUnpLRndpTG0xbGMzTnBZUzF5WVdScGIxd2lLUzVoWkdSRGJHRnpjeWhjSW1sekxXTnNhV05yWldSY0lpazdYRzVjZEZ4MFhIUmNkQ1FvZEdocGN5a3VabTlqZFhNb0tUdGNibHgwWEhSY2RGeDBKQ2duWW05a2VTY3BMbTl1WlNnblptOWpkWE52ZFhRbkxDUW9kR2hwY3lrc0lFMWxjM05wWVM1eVpXMXZkbVZKYzBOc2FXTnJaV1FwTzF4dVhIUmNkRngwZlN4Y2JseDBYSFJjZEhKbGJXOTJaVWx6UTJ4cFkydGxaRG9nWm5WdVkzUnBiMjRnS0dVcElIdGNibHgwWEhSY2RGeDBKQ2hjSWk1dFpYTnphV0V0Y21Ga2FXOWNJaWt1Y21WdGIzWmxRMnhoYzNNb1hDSnBjeTFqYkdsamEyVmtYQ0lwTzF4dVhIUmNkRngwZlN4Y2JseDBYSFI5TzF4dVhIUmNkQ1FvSjJKdlpIa25LUzV2YmlnblkyeHBZMnNuTENBbkxtMWxjM05wWVMxeVlXUnBieUJwYm5CMWREcHViM1FvVzJScGMyRmliR1ZrWFNrbkxDQk5aWE56YVdFdVpHOVNZV1JwYnlrN1hHNWNkSDBwTzF4dWZTa29hbEYxWlhKNUtUc2lMQ0lvWm5WdVkzUnBiMjRnS0NRcElIdGNibHh1WEhRa0tHWjFibU4wYVc5dUlDZ3BJSHRjYmx4dVhIUmNkSFpoY2lCTlpYTnphV0VnUFNCN1hHNWNkRngwWEhSd2NtVndZWEpsVW1sd2NHeGxPaUJtZFc1amRHbHZiaUFvWlN3Z2RHRnlaMlYwS1NCN1hHNWNibHgwWEhSY2RGeDBMeThnUjJWMElIZHBaSFJvSUdGdVpDQm9aV2xuYUhRZ2RHaGhkQ0IzYVd4c0lERXdNQ1VnWTI5MlpYSWdkR0Z5WjJWMElHOXVJSEpwY0hCc1pTNWNibHgwWEhSY2RGeDBkbUZ5SUdOc2FXVnVkQ0E5SUhSaGNtZGxkQzVuWlhRb01Da3VaMlYwUW05MWJtUnBibWREYkdsbGJuUlNaV04wS0Nrc1hHNWNkRngwWEhSY2RGeDBlQ0E5SUdVdVkyeHBaVzUwV0N4Y2JseDBYSFJjZEZ4MFhIUjVJRDBnWlM1amJHbGxiblJaTEZ4dVhIUmNkRngwWEhSY2RIUnZUR1ZtZENBOUlIZ2dMU0JqYkdsbGJuUXViR1ZtZEN4Y2JseDBYSFJjZEZ4MFhIUjBiMUpwWjJoMElEMGdZMnhwWlc1MExuSnBaMmgwSUMwZ2VDeGNibHgwWEhSY2RGeDBYSFIwYjFSdmNDQTlJSGtnTFNCamJHbGxiblF1ZEc5d0xGeHVYSFJjZEZ4MFhIUmNkSFJ2UW05MGRHOXRJRDBnWTJ4cFpXNTBMbUp2ZEhSdmJTQXRJSGtzWEc1Y2RGeDBYSFJjZEZ4MGJXRjRXQ0E5SUUxaGRHZ3ViV0Y0S0hSdlRHVm1kQ3dnZEc5U2FXZG9kQ2tzWEc1Y2RGeDBYSFJjZEZ4MGJXRjRXU0E5SUUxaGRHZ3ViV0Y0S0hSdlZHOXdMQ0IwYjBKdmRIUnZiU2tzWEc1Y2RGeDBYSFJjZEZ4MFluVjBkRzl1VjJsa2RHZ2dQU0JOWVhSb0xtMWhlQ2h0WVhoWUxDQnRZWGhaS1R0Y2JseHVYSFJjZEZ4MFhIUjJZWElnWkdWc2RHRlNZV1JwZFhNZ1BTQk5ZWFJvTG1oNWNHOTBLRzFoZUZnc0lHMWhlRmtwSUMwZ1RXRjBhQzV0WVhnb2JXRjRXQ3dnYldGNFdTazdYRzVjZEZ4MFhIUmNkR0oxZEhSdmJsZHBaSFJvSUQwZ0tHSjFkSFJ2YmxkcFpIUm9JQ3NnWkdWc2RHRlNZV1JwZFhNcElDb2dNanRjYmx4MFhIUmNkRngwWW5WMGRHOXVTR1ZwWjJoMElEMGdZblYwZEc5dVYybGtkR2c3WEc1Y2JseDBYSFJjZEZ4MGNtVjBkWEp1SUh0Y2JseDBYSFJjZEZ4MFhIUm9aV2xuYUhRNklHSjFkSFJ2YmtobGFXZG9kQ3hjYmx4MFhIUmNkRngwWEhSM2FXUjBhRG9nWW5WMGRHOXVWMmxrZEdnc1hHNWNkRngwWEhSY2RGeDBiR1ZtZERvZ1pTNXdZV2RsV0NBdElIUmhjbWRsZEM1dlptWnpaWFFvS1M1c1pXWjBJQzBnWW5WMGRHOXVWMmxrZEdnZ0x5QXlMRnh1WEhSY2RGeDBYSFJjZEhSdmNEb2daUzV3WVdkbFdTQXRJSFJoY21kbGRDNXZabVp6WlhRb0tTNTBiM0FnTFNCaWRYUjBiMjVJWldsbmFIUWdMeUF5TEZ4dVhIUmNkRngwWEhSOU8xeHVYSFJjZEZ4MGZTeGNibHgwWEhSY2RHUnZVbWx3Y0d4bFEyeHBZMnM2SUdGemVXNWpJR1oxYm1OMGFXOXVJQ2hsTENCMFlYSm5aWFFwSUh0Y2JseHVYSFJjZEZ4MFhIUjBZWEpuWlhRdVpHRjBZU2duYldWemMybGhSRzlTYVhCc1pVTnNhV05ySnl3Z2RISjFaU2s3WEc1Y2RGeDBYSFJjZEhSaGNtZGxkQzVtYVc1a0tDY3VjbWx3Y0d4bEp5a3VjbVZ0YjNabEtDazdYRzVjYmx4MFhIUmNkRngwWTI5dWMzUWdjbWx3Y0d4bFJHRjBZU0E5SUUxbGMzTnBZUzV3Y21Wd1lYSmxVbWx3Y0d4bEtHVXNJSFJoY21kbGRDazdYRzVjZEZ4MFhIUmNkR3hsZENCeWFYQndiR1VnUFNBa0tDYzhjM0JoYmlCamJHRnpjejFjSW5KcGNIQnNaVndpUGp3dmMzQmhiajRuS1R0Y2JseHVYSFJjZEZ4MFhIUnlhWEJ3YkdWY2JseDBYSFJjZEZ4MFhIUXVZM056S0h0Y2JseDBYSFJjZEZ4MFhIUmNkR2hsYVdkb2REb2djbWx3Y0d4bFJHRjBZUzVvWldsbmFIUXNYRzVjZEZ4MFhIUmNkRngwWEhSM2FXUjBhRG9nY21sd2NHeGxSR0YwWVM1M2FXUjBhQ3hjYmx4MFhIUmNkRngwWEhSY2RHeGxablE2SUhKcGNIQnNaVVJoZEdFdWJHVm1kQ0FySUNkd2VDY3NYRzVjZEZ4MFhIUmNkRngwWEhSMGIzQTZJSEpwY0hCc1pVUmhkR0V1ZEc5d0lDc2dKM0I0Snl4Y2JseDBYSFJjZEZ4MFhIUjlLVnh1WEhSY2RGeDBYSFJjZEM1aGNIQmxibVJVYnloMFlYSm5aWFFwTG1Ga1pFTnNZWE56S0NkeWFYQndiR1V0WldabVpXTjBMV05zYVdOckp5azdYRzVjYmx4MFhIUmNkRngwY21WMGRYSnVJR0YzWVdsMElHNWxkeUJRY205dGFYTmxLQ2h5WlhOdmJIWmxMQ0J5WldwbFkzUXBJRDArSUh0Y2JseHVYSFJjZEZ4MFhIUmNkR3hsZENCMGNtRnVjMmwwYVc5dUlEMGdjbWx3Y0d4bExtTnpjeWduZEhKaGJuTnBkR2x2Ymkxa2RYSmhkR2x2YmljcE8xeHVYSFJjZEZ4MFhIUmNkR3hsZENCa1pXeGhlU0E5SUUxaGRHZ3ViV0Y0TG1Gd2NHeDVLRTFoZEdnc0lIUnlZVzV6YVhScGIyNHVjM0JzYVhRb0p5d25LUzV0WVhBb2NHRnljMlZHYkc5aGRDa3BJQ29nTVRBd01EdGNibHh1WEhSY2RGeDBYSFJjZEhObGRGUnBiV1Z2ZFhRb1puVnVZM1JwYjI0Z0tIUmhjbWRsZENrZ2UxeHVYSFJjZEZ4MFhIUmNkRngwZEdGeVoyVjBMbVJoZEdFb0oyMWxjM05wWVVSdlVtbHdiR1ZEYkdsamF5Y3NJR1poYkhObEtUdGNibHgwWEhSY2RGeDBYSFJjZEhKcGNIQnNaUzV5WlcxdmRtVW9LVHRjYmx4MFhIUmNkRngwWEhSY2RISmxjMjlzZG1Vb1cyVXNJSFJoY21kbGRGMHBPMXh1WEhSY2RGeDBYSFJjZEgwc0lHUmxiR0Y1TENCMFlYSm5aWFFzSUhKcGNIQnNaU2s3WEc1Y2RGeDBYSFJjZEgwcE8xeHVYSFJjZEZ4MGZTeGNibHgwWEhSY2RHUnZVbWx3Y0d4bFNHOTJaWEpKYmpvZ1lYTjVibU1nWm5WdVkzUnBiMjRnS0dVcElIdGNibHh1WEhSY2RGeDBYSFJqYjI1emRDQjBZWEpuWlhRZ1BTQWtLSFJvYVhNcE8xeHVYRzVjZEZ4MFhIUmNkR05zWldGeVZHbHRaVzkxZENoMFlYSm5aWFF1WkdGMFlTZ25jbWx3Y0d4bFNHOTJaWEpQZFhSVWFXMWxjaWNwS1R0Y2JseHVYSFJjZEZ4MFhIUnNaWFFnY21sd2NHeGxJRDBnSkNnblBITndZVzRnWTJ4aGMzTTlYQ0p5YVhCd2JHVmNJajQ4TDNOd1lXNCtKeWs3WEc1Y2RGeDBYSFJjZEdOdmJuTjBJR04xY25KbGJuUlNhWEJ3YkdVZ1BTQjBZWEpuWlhRdVptbHVaQ2duTG5KcGNIQnNaU2NwTzF4dVhIUmNkRngwWEhSamIyNXpkQ0J5YVhCd2JHVkVZWFJoSUQwZ1RXVnpjMmxoTG5CeVpYQmhjbVZTYVhCd2JHVW9aU3dnZEdGeVoyVjBLVHRjYmx4dVhIUmNkRngwWEhSeWFYQndiR1V1WTNOektIdGNibHgwWEhSY2RGeDBYSFJvWldsbmFIUTZJSEpwY0hCc1pVUmhkR0V1YUdWcFoyaDBMRnh1WEhSY2RGeDBYSFJjZEhkcFpIUm9PaUJ5YVhCd2JHVkVZWFJoTG5kcFpIUm9MRnh1WEhSY2RGeDBYSFJjZEd4bFpuUTZJSEpwY0hCc1pVUmhkR0V1YkdWbWRDQXJJQ2R3ZUNjc1hHNWNkRngwWEhSY2RGeDBkRzl3T2lCeWFYQndiR1ZFWVhSaExuUnZjQ0FySUNkd2VDY3NYRzVjZEZ4MFhIUmNkSDBwWEc1Y2JseDBYSFJjZEZ4MGFXWWdLR04xY25KbGJuUlNhWEJ3YkdVdWJHVnVaM1JvSUQwOVBTQXdLU0I3WEc1Y2RGeDBYSFJjZEZ4MGNtbHdjR3hsTG1Gd2NHVnVaRlJ2S0hSaGNtZGxkQ2t1WVdSa1EyeGhjM01vSjNKcGNIQnNaUzFsWm1abFkzUXRhRzkyWlhJdGFXNG5LVHRjYmx4MFhIUmNkRngwZlZ4dVhIUmNkRngwWEhSbGJITmxJSHRjYmx4MFhIUmNkRngwWEhSamRYSnlaVzUwVW1sd2NHeGxMbU56Y3loN1hHNWNkRngwWEhSY2RGeDBYSFJvWldsbmFIUTZJSEpwY0hCc1pVUmhkR0V1YUdWcFoyaDBMRnh1WEhSY2RGeDBYSFJjZEZ4MGQybGtkR2c2SUhKcGNIQnNaVVJoZEdFdWQybGtkR2dzWEc1Y2RGeDBYSFJjZEZ4MFhIUnNaV1owT2lCeWFYQndiR1ZFWVhSaExteGxablFnS3lBbmNIZ25MRnh1WEhSY2RGeDBYSFJjZEZ4MGRHOXdPaUJ5YVhCd2JHVkVZWFJoTG5SdmNDQXJJQ2R3ZUNjc1hHNWNkRngwWEhSY2RGeDBmU2t1Y21WdGIzWmxRMnhoYzNNb0ozSnBjSEJzWlMxbFptWmxZM1F0YUc5MlpYSXRiM1YwSnlrdVlXUmtRMnhoYzNNb0ozSnBjSEJzWlMxbFptWmxZM1F0YUc5MlpYSXRhVzRuS1R0Y2JseDBYSFJjZEZ4MFhIUnlhWEJ3YkdVZ1BTQmpkWEp5Wlc1MFVtbHdjR3hsTzF4dVhIUmNkRngwWEhSOVhHNWNibHgwWEhSY2RGeDBjbVYwZFhKdUlGQnliMjFwYzJVdWNtVnpiMngyWlNoYlpTd2dkR0Z5WjJWMFhTazdYRzVjZEZ4MFhIUjlMRnh1WEhSY2RGeDBaRzlTYVhCd2JHVkliM1psY2s5MWREb2dZWE41Ym1NZ1puVnVZM1JwYjI0Z0tHVXBJSHRjYmx4dVhIUmNkRngwWEhSamIyNXpkQ0IwWVhKblpYUWdQU0FrS0hSb2FYTXBPMXh1WEhSY2RGeDBYSFJzWlhRZ2NtbHdjR3hsSUQwZ0pDZ25QSE53WVc0Z1kyeGhjM005WENKeWFYQndiR1ZjSWo0OEwzTndZVzQrSnlrN1hHNWNkRngwWEhSY2RHTnZibk4wSUdOMWNuSmxiblJTYVhCd2JHVWdQU0IwWVhKblpYUXVabWx1WkNnbkxuSnBjSEJzWlNjcE8xeHVYSFJjZEZ4MFhIUmpiMjV6ZENCeWFYQndiR1ZFWVhSaElEMGdUV1Z6YzJsaExuQnlaWEJoY21WU2FYQndiR1VvWlN3Z2RHRnlaMlYwS1R0Y2JseHVYSFJjZEZ4MFhIUnlhWEJ3YkdVdVkzTnpLSHRjYmx4MFhIUmNkRngwWEhSb1pXbG5hSFE2SUhKcGNIQnNaVVJoZEdFdWFHVnBaMmgwTEZ4dVhIUmNkRngwWEhSY2RIZHBaSFJvT2lCeWFYQndiR1ZFWVhSaExuZHBaSFJvTEZ4dVhIUmNkRngwWEhSY2RHeGxablE2SUhKcGNIQnNaVVJoZEdFdWJHVm1kQ0FySUNkd2VDY3NYRzVjZEZ4MFhIUmNkRngwZEc5d09pQnlhWEJ3YkdWRVlYUmhMblJ2Y0NBcklDZHdlQ2NzWEc1Y2RGeDBYSFJjZEgwcE8xeHVYRzVjZEZ4MFhIUmNkR2xtSUNoamRYSnlaVzUwVW1sd2NHeGxMbXhsYm1kMGFDQTlQVDBnTUNrZ2UxeHVYSFJjZEZ4MFhIUmNkSEpwY0hCc1pTNWhjSEJsYm1SVWJ5aDBZWEpuWlhRcExtRmtaRU5zWVhOektDZHlhWEJ3YkdVdFpXWm1aV04wTFdodmRtVnlMVzkxZENjcE8xeHVYSFJjZEZ4MFhIUjlYRzVjZEZ4MFhIUmNkR1ZzYzJVZ2UxeHVYSFJjZEZ4MFhIUmNkR04xY25KbGJuUlNhWEJ3YkdVdVkzTnpLSHRjYmx4MFhIUmNkRngwWEhSY2RHaGxhV2RvZERvZ2NtbHdjR3hsUkdGMFlTNW9aV2xuYUhRc1hHNWNkRngwWEhSY2RGeDBYSFIzYVdSMGFEb2djbWx3Y0d4bFJHRjBZUzUzYVdSMGFDeGNibHgwWEhSY2RGeDBYSFJjZEd4bFpuUTZJSEpwY0hCc1pVUmhkR0V1YkdWbWRDQXJJQ2R3ZUNjc1hHNWNkRngwWEhSY2RGeDBYSFIwYjNBNklISnBjSEJzWlVSaGRHRXVkRzl3SUNzZ0ozQjRKeXhjYmx4MFhIUmNkRngwWEhSOUtTNXlaVzF2ZG1WRGJHRnpjeWduY21sd2NHeGxMV1ZtWm1WamRDMW9iM1psY2kxcGJpY3BMbUZrWkVOc1lYTnpLQ2R5YVhCd2JHVXRaV1ptWldOMExXaHZkbVZ5TFc5MWRDY3BPMXh1WEhSY2RGeDBYSFJjZEhKcGNIQnNaU0E5SUdOMWNuSmxiblJTYVhCd2JHVTdYRzVjZEZ4MFhIUmNkSDFjYmx4dVhIUmNkRngwWEhSeVpYUjFjbTRnWVhkaGFYUWdibVYzSUZCeWIyMXBjMlVvS0hKbGMyOXNkbVVzSUhKbGFtVmpkQ2tnUFQ0Z2UxeHVYRzVjZEZ4MFhIUmNkRngwYkdWMElIUnlZVzV6YVhScGIyNGdQU0J5YVhCd2JHVXVZM056S0NkaGJtbHRZWFJwYjI0dFpIVnlZWFJwYjI0bktUdGNibHgwWEhSY2RGeDBYSFJzWlhRZ1pHVnNZWGtnUFNCTllYUm9MbTFoZUM1aGNIQnNlU2hOWVhSb0xDQjBjbUZ1YzJsMGFXOXVMbk53YkdsMEtDY3NKeWt1YldGd0tIQmhjbk5sUm14dllYUXBLU0FxSURFd01EQTdYRzVjYmx4MFhIUmNkRngwWEhSc1pYUWdjbWx3Y0d4bFNHOTJaWEpQZFhSVWFXMWxjaUE5SUhObGRGUnBiV1Z2ZFhRb1puVnVZM1JwYjI0Z0tIUmhjbWRsZENrZ2UxeHVYSFJjZEZ4MFhIUmNkRngwY21sd2NHeGxMbkpsYlc5MlpTZ3BPMXh1WEhSY2RGeDBYSFJjZEZ4MGNtVnpiMngyWlNoYlpTd2dkR0Z5WjJWMFhTazdYRzVjZEZ4MFhIUmNkRngwZlN3Z1pHVnNZWGtzSUhSaGNtZGxkQ3dnY21sd2NHeGxLVHRjYmx4dVhIUmNkRngwWEhSY2RIUmhjbWRsZEM1a1lYUmhLQ2R5YVhCd2JHVkliM1psY2s5MWRGUnBiV1Z5Snl3Z2NtbHdjR3hsU0c5MlpYSlBkWFJVYVcxbGNpazdYRzVjZEZ4MFhIUmNkSDBwTzF4dVhIUmNkRngwZlN4Y2JseDBYSFJjZEhKcGNIQnNaVU5zYVdOck9pQm1kVzVqZEdsdmJpQW9aU2tnZTF4dVhHNWNkRngwWEhSY2RHbG1JQ2gwY25WbElEMDlQU0FrS0hSb2FYTXBMbVJoZEdFb0oyMWxjM05wWVVSdlVtbHdiR1ZEYkdsamF5Y3BLU0I3WEc1Y2RGeDBYSFJjZEZ4MGNtVjBkWEp1TzF4dVhIUmNkRngwWEhSOVhHNWNibHgwWEhSY2RGeDBkbUZ5SUdWMlpXNTBYMkZ5WjNNZ1BTQkJjbkpoZVM1bWNtOXRLR1V1YUdGdVpHeGxUMkpxTG1oaGJtUnNaWEl1WVhKbmRXMWxiblJ6S1R0Y2JseDBYSFJjZEZ4MFpYWmxiblJmWVhKbmN5NXphR2xtZENncE8xeHVYRzVjZEZ4MFhIUmNkRTFsYzNOcFlTNWtiMUpwY0hCc1pVTnNhV05yS0dVc0lDUW9kR2hwY3lrcFhHNWNkRngwWEhSY2RGeDBMblJvWlc0b1puVnVZM1JwYjI0Z0tHRnlaM01wSUh0Y2JseDBYSFJjZEZ4MFhIUmNkR3hsZENCbGRtVnVkQ0E5SUc1bGR5QkZkbVZ1ZENnbmJXVnpjMmxoUTJ4cFkydFNhWEJzWlVSdmJtVW5LVHRjYmx4MFhIUmNkRngwWEhSY2RHRnlaM05iTVYwdVoyVjBLREFwTG1ScGMzQmhkR05vUlhabGJuUW9aWFpsYm5RcE8xeHVYSFJjZEZ4MFhIUmNkSDBwTzF4dVhIUmNkRngwWEhSY2RISmxkSFZ5Ymp0Y2JseDBYSFJjZEgwc1hHNWNkRngwZlR0Y2JseDBYSFFrS0NkaWIyUjVKeWt1YjI0b0oyTnNhV05ySnl3Z0p5NXRaWE56YVdFdGNtbHdjR3hsTFdOc2FXTnJKeXdnVFdWemMybGhMbkpwY0hCc1pVTnNhV05yS1R0Y2JseHVYSFJjZEdsbUlDZ25iMjUwYjNWamFITjBZWEowSnlCcGJpQjNhVzVrYjNjZ1BUMDlJR1poYkhObEtTQjdYRzVjZEZ4MFhIUWtLQ2RpYjJSNUp5a3ViMjRvSjIxdmRYTmxaVzUwWlhJbkxDQW5MbTFsYzNOcFlTMXlhWEJ3YkdVdGFHOTJaWEluTENCTlpYTnphV0V1Wkc5U2FYQndiR1ZJYjNabGNrbHVLVHRjYmx4MFhIUmNkQ1FvSjJKdlpIa25LUzV2YmlnbmJXOTFjMlZzWldGMlpTY3NJQ2N1YldWemMybGhMWEpwY0hCc1pTMW9iM1psY2ljc0lFMWxjM05wWVM1a2IxSnBjSEJzWlVodmRtVnlUM1YwS1R0Y2JseDBYSFI5WEc1Y2RIMHBPMXh1ZlNrb2FsRjFaWEo1S1RzaUxDSXZLaXBjYmlBcUlGSmxaMmx6ZEdWeUlHRnVaQ0J6ZEdGeWRDQjNaV0lnZDI5eWEyVnljeTVjYmlBcVhHNGdLaUJBY21WMGRYSnVJSFp2YVdRdVhHNGdLaTljYm1OdmJuTjBJSGR2Y210bGNrUnBjM0JoZEdOb1pYSWdQU0FvS0NrZ1BUNGdlMXh1WEhScFppQW9KM05sY25acFkyVlhiM0pyWlhJbklHbHVJRzVoZG1sbllYUnZjaWtnZTF4dVhHNWNkRngwYm1GMmFXZGhkRzl5TG5ObGNuWnBZMlZYYjNKclpYSXVZV1JrUlhabGJuUk1hWE4wWlc1bGNpZ25iV1Z6YzJGblpTY3NJQ2h0WlhOellXZGxLU0E5UGlCN1hHNWNkRngwWEhSamIyNXpkQ0JwYm1adklEMGdiV1Z6YzJGblpTNWtZWFJoTzF4dVhHNWNkRngwWEhScFppQW9hVzVtYnk1MGVYQmxJRDA5UFNBbmJHOW5aMlZ5SnlrZ2UxeHVYSFJjZEZ4MFhIUk5aWE56YVdGRmVIUXViRzluWjJWeVcybHVabTh1YldWMGFHOWtYU2hwYm1adkxtSnZaSGtwTzF4dVhIUmNkRngwZlZ4dVhIUmNkSDBwTzF4dVhHNWNkRngwYVdZZ0tHMWxjM05wWVZaaGNuTXVjSGRoUlc1aFlteGxJRDA5UFNBeEtTQjdYRzVjYmx4MFhIUmNkR052Ym5OMFhHNWNkRngwWEhSY2RHTmhZMmhsUVhaaGFXeGhZbXhsSUQwZ0oyTmhZMmhsY3ljZ2FXNGdjMlZzWml4Y2JseDBYSFJjZEZ4MGFXNWtaWGhsWkVSaVFYWmhhV3hoWW14bElEMGdKMmx1WkdWNFpXUkVRaWNnYVc0Z2MyVnNaanRjYmx4dVhIUmNkRngwWTI5dWMzUWdjSEp2YlhCMFZYQmtZWFJsSUQwZ0tISmxaMmx6ZEhKaGRHbHZiaWtnUFQ0Z2UxeHVYSFJjZEZ4MFhIUmpiMjV6ZENCamFHOXBZMlVnUFNCM2FXNWtiM2N1WTI5dVptbHliU2h0WlhOemFXRldZWEp6TG0xbGMzTmhaMlZ6TG5kdmNtdGxjbFZ3WkdGMFpTazdYRzVjYmx4MFhIUmNkRngwYVdZZ0tHTm9iMmxqWlNrZ2UxeHVYSFJjZEZ4MFhIUmNkRzVoZG1sbllYUnZjaTV6WlhKMmFXTmxWMjl5YTJWeUxtRmtaRVYyWlc1MFRHbHpkR1Z1WlhJb0oyTnZiblJ5YjJ4c1pYSmphR0Z1WjJVbkxDQW9LU0E5UGlCN1hHNWNkRngwWEhSY2RGeDBYSFF2THlCdWIzUm9hVzVuSUdadmNpQnViM2N1WEc1Y2RGeDBYSFJjZEZ4MGZTazdYRzVjZEZ4MFhIUmNkSDFjYmx4dVhIUmNkRngwWEhScFppQW9jbVZuYVhOMGNtRjBhVzl1SUNZbUlISmxaMmx6ZEhKaGRHbHZiaTUzWVdsMGFXNW5LU0I3WEc1Y2RGeDBYSFJjZEZ4MGNtVm5hWE4wY21GMGFXOXVMbmRoYVhScGJtY3VjRzl6ZEUxbGMzTmhaMlVvZXlCamIyMXRZVzVrT2lBbmJXVnpjMmxoVTJ0cGNGZGhhWFJwYm1jbklIMHBPMXh1WEhSY2RGeDBYSFI5WEc1Y2RGeDBYSFI5TzF4dVhHNWNkRngwWEhSdVlYWnBaMkYwYjNKY2JseDBYSFJjZEZ4MExuTmxjblpwWTJWWGIzSnJaWEpjYmx4MFhIUmNkRngwTG5KbFoybHpkR1Z5S0cxbGMzTnBZVlpoY25NdWQyOXlhMlZ5VlhKc0xDQjdJSE5qYjNCbE9pQW5MeWNnZlNsY2JseDBYSFJjZEZ4MExuUm9aVzRvS0hKbFoybHpkSEpoZEdsdmJpa2dQVDRnZTF4dVhIUmNkRngwWEhSY2RFMWxjM05wWVVWNGRDNXNiMmRuWlhJdWJHOW5LR0JYYjNKclpYSWdjbVZuYVhOMGNtRjBhVzl1SUhOMVkyTmxaV1JsWkM0Z1UyTnZjR1VnYVhNZ0pIdHlaV2RwYzNSeVlYUnBiMjR1YzJOdmNHVjlZQ2s3WEc1Y2JseDBYSFJjZEZ4MFhIUnBaaUFvWm1Gc2MyVWdQVDA5SUdsdVpHVjRaV1JFWWtGMllXbHNZV0pzWlNrZ2UxeHVYSFJjZEZ4MFhIUmNkRngwVFdWemMybGhSWGgwTG14dloyZGxjaTUzWVhKdUtDZFhiM0pyWlhJZ2QybHNiQ0J6YTJsd0lHTmhZMmhwYm1jZ1kyRjFjMlVnZEdobElHSnliM2R6WlhJZ1pHOWxjeUJ1YjNRZ2MzVndjRzl5ZENCcGJtUmxlR1ZrUkVJdUp5azdYRzVjZEZ4MFhIUmNkRngwZlNCbGJITmxJR2xtSUNobVlXeHpaU0E5UFQwZ1kyRmphR1ZCZG1GcGJHRmliR1VwSUh0Y2JseDBYSFJjZEZ4MFhIUmNkRTFsYzNOcFlVVjRkQzVzYjJkblpYSXVkMkZ5YmlnblYyOXlhMlZ5SUhkcGJHd2djMnRwY0NCallXTm9hVzVuSUdOaGRYTmxJSFJvWlNCaWNtOTNjMlZ5SUdSdlpYTWdibTkwSUhOMWNIQnZjblFnWTJGamFHVWdjM1J2Y21GblpTNG5LVHRjYmx4MFhIUmNkRngwWEhSOVhHNWNibHgwWEhSY2RGeDBYSFJwWmlBb2NtVm5hWE4wY21GMGFXOXVMbmRoYVhScGJtY3BJSHRjYmx4MFhIUmNkRngwWEhSY2RIQnliMjF3ZEZWd1pHRjBaU2h5WldkcGMzUnlZWFJwYjI0cE8xeHVYSFJjZEZ4MFhIUmNkSDFjYmx4MFhIUmNkRngwZlNsY2JseDBYSFJjZEZ4MExtTmhkR05vS0NobGNuSnZjaWtnUFQ0Z2UxeHVYSFJjZEZ4MFhIUmNkRTFsYzNOcFlVVjRkQzVzYjJkblpYSXVaWEp5YjNJb0oxZHZjbXRsY2lCeVpXZHBjM1J5WVhScGIyNGdabUZwYkdWa0lIZHBkR2dnSnlBcklHVnljbTl5S1R0Y2JseDBYSFJjZEZ4MGZTazdYRzVjYmx4MFhIUjlJR1ZzYzJVZ2UxeHVYSFJjZEZ4MGJtRjJhV2RoZEc5eVhHNWNkRngwWEhSY2RDNXpaWEoyYVdObFYyOXlhMlZ5WEc1Y2RGeDBYSFJjZEM1blpYUlNaV2RwYzNSeVlYUnBiMjV6S0NrdWRHaGxiaWdvY21WbmFYTjBjbUYwYVc5dWN5a2dQVDRnZTF4dVhHNWNkRngwWEhSY2RGeDBhV1lnS0hKbFoybHpkSEpoZEdsdmJuTXViR1Z1WjNSb0tTQjdYRzVjZEZ4MFhIUmNkRngwWEhSbWIzSWdLR3hsZENCeVpXZHBjM1J5WVhScGIyNGdiMllnY21WbmFYTjBjbUYwYVc5dWN5a2dlMXh1WEhSY2RGeDBYSFJjZEZ4MFhIUnlaV2RwYzNSeVlYUnBiMjR1WVdOMGFYWmxMbkJ2YzNSTlpYTnpZV2RsS0hzZ1kyOXRiV0Z1WkRvZ0oyMWxjM05wWVZWdWNtVm5hWE4wWlhKVFpXeG1KeUI5S1R0Y2JseDBYSFJjZEZ4MFhIUmNkSDFjYmx4MFhIUmNkRngwWEhSOVhHNWNkRngwWEhSY2RIMHBPMXh1WEhSY2RIMWNibHgwZlZ4dWZTa29LVHRjYmx4dVpYaHdiM0owSUdSbFptRjFiSFFnZDI5eWEyVnlSR2x6Y0dGMFkyaGxjanNpTENKcGJYQnZjblFnSnk0dlgyTnZiWEJ2Ym1WdWRITXZYMnh2WjJkbGNpNXFjeWM3WEc1cGJYQnZjblFnSnk0dlgyTnZiWEJ2Ym1WdWRITXZYM2R2Y210bGNsOWthWE53WVhSamFHVnlMbXB6Snp0Y2JtbHRjRzl5ZENBbkxpOWZZMjl0Y0c5dVpXNTBjeTlmY21sd2NHeGxMbXB6Snp0Y2JtbHRjRzl5ZENBbkxpOWZZMjl0Y0c5dVpXNTBjeTlmWTJobFkydGliM2d1YW5Nbk8xeHVhVzF3YjNKMElDY3VMMTlqYjIxd2IyNWxiblJ6TDE5eVlXUnBieTVxY3ljN1hHNXBiWEJ2Y25RZ0p5NHZYMk52YlhCdmJtVnVkSE12WDJsdWNIVjBYM1JsZUhRdWFuTW5PMXh1WEc0b1puVnVZM1JwYjI0Z0tDUXBJSHRjYmx4dVhIUXZLaXBjYmx4MElDb2dUVzlpYVd4bElITmpaVzVoY21sdklHaGhibVJzWlhJdUlGQmxjbVp2YlNCaElITmxkQ0J2WmlCdmNHVnlZWFJwYjI1Y2JseDBJQ29nYVdZZ2NHRm5aU0JwY3lCdmJpQnRiMkpwYkdVZ2RtbGxkeTVjYmx4MElDcGNibHgwSUNvZ1FISmxkSFZ5YmlCMmIybGtMbHh1WEhRZ0tpOWNibHgwWTI5dWMzUWdhWE5OYjJKcGJHVWdQU0JoYzNsdVl5QW9LU0E5UGlCN1hHNWNkRngwWTI5dWMzUmNibHgwWEhSY2RDUWdQU0JxVVhWbGNua3NYRzVjZEZ4MFhIUnRiMkpwYkdWUWJHRjBabTl5YlNBOUlDOUJibVJ5YjJsa2ZIZGxZazlUZkdsUWFHOXVaWHhwVUdGa2ZHbFFiMlI4UW14aFkydENaWEp5ZVh4SlJVMXZZbWxzWlh4UGNHVnlZU0JOYVc1cEwya3VkR1Z6ZENodVlYWnBaMkYwYjNJdWRYTmxja0ZuWlc1MEtUdGNibHgwWEhRdktpcGNibHgwWEhRZ0tpQkRiM1Z1ZENCelpXeGxZM1JsWkNCdmNIUnBiMjV6SUdsdUlGTmxiR1ZqZERJZ1lXNWtJSEJ5YVc1MElGZ2dhWFJsYlhNZ2MyVnNaV04wWldRdVhHNWNkRngwSUNwY2JseDBYSFFnS2lCQWNHRnlZVzBnU0ZSTlRDQnpaV3hsWTNRZ0lGTmxiR1ZqZENCSVZFMU1JSFJoWjF4dVhIUmNkQ0FxWEc1Y2RGeDBJQ29nUUhKbGRIVnliaUIyYjJsa1hHNWNkRngwSUNvdlhHNWNkRngwWTI5dWMzUWdZMjkxYm5SVFpXeGxZM1JsWkNBOUlDaHpaV3hsWTNRcElEMCtJSHRjYmx4MFhIUmNkR3hsZENCM2FXUm5aWFFnUFNBa0tITmxiR1ZqZENrdVpHRjBZU2duYzJWc1pXTjBNaWNwTEZ4dVhIUmNkRngwWEhSdmNIUnBiMjV6SUQwZ2QybGtaMlYwTGlSa2NtOXdaRzkzYmk1bWFXNWtLQ2RzYVNjcExGeHVYSFJjZEZ4MFhIUnpaV3hsWTNScGIyNGdQU0IzYVdSblpYUXVKSE5sYkdWamRHbHZiaXhjYmx4MFhIUmNkRngwYzJWc1pXTjBaV1FnUFNBa0tITmxiR1ZqZENrdWMyVnNaV04wTWlnblpHRjBZU2NwTEZ4dVhIUmNkRngwWEhSelpXeGxZM1JsWkVsa2N5QTlJSE5sYkdWamRHVmtMbTFoY0NocGJtUmxlQ0E5UGlCcGJtUmxlQzVwWkNrc1hHNWNkRngwWEhSY2RITmxiR1ZqZEVGc2JDQTlJSE5sYkdWamRHVmtTV1J6TG1sdVkyeDFaR1Z6S0NjdE1TY3BMRnh1WEhSY2RGeDBYSFJ5WlhOMWJIUWdQU0J6Wld4bFkzUnBiMjR1Wm1sdVpDZ25kV3duS1N4Y2JseDBYSFJjZEZ4MFkyOTFiblFnUFNCelpXeGxZM1JsWkM1c1pXNW5kR2c3WEc1Y2JseDBYSFJjZEc5d2RHbHZibk11YldGd0tDaHBibVJsZUN3Z2RtRnNkV1VwSUQwK0lIdGNibHgwWEhSY2RGeDBiR1YwSUc5d2RHbHZiaUE5SUNRb2RtRnNkV1VwTG1acGJtUW9KeTV2Y0hScGIyNG5LU3hjYmx4MFhIUmNkRngwWEhSamFHVmpheUE5SUc5d2RHbHZiaTVtYVc1a0tDY3VZMmhsWTJ0aWIzZ3RjMlZzWldOME1pY3BMRnh1WEhSY2RGeDBYSFJjZEc5d2RHbHZia2xrSUQwZ1kyaGxZMnN1WkdGMFlTZ25iM0IwYVc5dVNXUW5LVHNnTHk4Z2MyVjBkR1ZrSUdsdUlIUmxiWEJzWVhSbFVtVnpkV3gwS0NrdVhHNWNibHgwWEhSY2RGeDBLSE5sYkdWamRFRnNiQ0FtSmlCdmNIUnBiMjVKWkNBaFBUMGdMVEVwSUQ4Z2IzQjBhVzl1TG1Ga1pFTnNZWE56S0NkdmNHRmphWFI1TFRZbktTQTZJRzl3ZEdsdmJpNXlaVzF2ZG1WRGJHRnpjeWduYjNCaFkybDBlUzAySnlrN1hHNWNkRngwWEhSY2RDZ2hjMlZzWldOMFFXeHNJQ1ltSUc5d2RHbHZia2xrSUQwOVBTQXRNU2tnUHlCamFHVmpheTVoWkdSRGJHRnpjeWduWTJobFkydGxaQzF6WlcxcEp5a2dPaUJqYUdWamF5NXlaVzF2ZG1WRGJHRnpjeWduWTJobFkydGxaQzF6WlcxcEp5azdYRzVjZEZ4MFhIUmNkQ2h6Wld4bFkzUmxaRWxrY3k1cGJtTnNkV1JsY3lodmNIUnBiMjVKWkM1MGIxTjBjbWx1WnlncEtTa2dQeUJqYUdWamF5NWhaR1JEYkdGemN5Z25ZMmhsWTJ0bFpDY3BJRG9nWTJobFkyc3VjbVZ0YjNabFEyeGhjM01vSjJOb1pXTnJaV1FuS1R0Y2JseDBYSFJjZEgwcE8xeHVYRzVjZEZ4MFhIUnBaaUFvWTI5MWJuUWdQaUF4S1NCN1hHNWNkRngwWEhSY2RISmxjM1ZzZEM1b2RHMXNLR0E4YkdrZ1kyeGhjM005WENKelpXeGxZM1F5TFhObGJHVmpkR2x2Ymw5ZlkyaHZhV05sWENJK0pIdHRaWE56YVdGV1lYSnpMbTFsYzNOaFoyVnpMbWwwWlcxelUyVnNaV04wWldRdWNHeDFjbUZzTG5KbGNHeGhZMlVvSnlWdUp5d2dZMjkxYm5RcGZUd3ZiR2srWUNrN1hHNWNkRngwWEhSOVhHNWNkRngwZlZ4dVhHNWNkRngwTHk4ZzBKL1JnTkMrMExMUXRkR0EwTHJRc0NBdElOQzgwTDdRc2RDNDBMdlJqTkM5MEw3UXRTRFJnOUdCMFlMUmdOQyswTGpSZ2RHQzBMTFF2aURRdU5DNzBMZ2dVRU5jYmx4MFhIUnBaaUFvSVcxdlltbHNaVkJzWVhSbWIzSnRLU0I3WEc1Y2JseDBYSFJjZEdOdmJuTjBYRzVjZEZ4MFhIUmNkSFJvWlcxbFZYSnNJRDBnYldWemMybGhWbUZ5Y3k1MGFHVnRaVlZ5YkN4Y2JseDBYSFJjZEZ4MGJXbHVJRDBnS0cxbGMzTnBZVlpoY25NdWMyTnlhWEIwUkdWaWRXY2dQVDA5SUdaaGJITmxLU0EvSUNjdWJXbHVKeUE2SUNjbk8xeHVYRzVjZEZ4MFhIUWtLQ2M4YkdsdWF5OCtKeXdnZTF4dVhIUmNkRngwWEhSeVpXdzZJQ2R6ZEhsc1pYTm9aV1YwSnl4Y2JseDBYSFJjZEZ4MGRIbHdaVG9nSjNSbGVIUXZZM056Snl4Y2JseDBYSFJjZEZ4MGFISmxaam9nWUNSN2RHaGxiV1ZWY214OUwybHVZMngxWkdWekwyRnpjMlYwY3k5amMzTXZiR2xpY21GeWFXVnpMM05sYkdWamRESWtlMjFwYm4wdVkzTnpZRnh1WEhSY2RGeDBmU2t1Y0hKbGNHVnVaRlJ2S0Nkb1pXRmtKeWs3WEc1Y2JseDBYSFJjZEhSeWVTQjdYRzVjZEZ4MFhIUmNkR0YzWVdsMElHZGxkRk5qY21sd2RDaGdKSHQwYUdWdFpWVnliSDB2YVc1amJIVmtaWE12WVhOelpYUnpMMnB6TDJ4cFluSmhjbWxsY3k5elpXeGxZM1F5Skh0dGFXNTlMbXB6WUNrN1hHNWNibHgwWEhSY2RGeDBKQ2duYzJWc1pXTjBPbTV2ZENndWJXVnpjMmxoTFdacGJIUmxjaTF6Wld4bFkzUXBKeWt1YzJWc1pXTjBNaWg3WEc1Y2RGeDBYSFJjZEZ4MFpISnZjR1J2ZDI1UVlYSmxiblE2SUNRb0oyMWhhVzRuS1N4Y2JseDBYSFJjZEZ4MFhIUjNhV1IwYURvZ0p6RXdNQ1VuTEZ4dVhIUmNkRngwWEhSY2RHMXBibWx0ZFcxU1pYTjFiSFJ6Um05eVUyVmhjbU5vT2lCSmJtWnBibWwwZVN4Y2JseDBYSFJjZEZ4MGZTazdYRzVjZEZ4MFhIUmNkQ1FvSjNObGJHVmpkQzV0WlhOemFXRXRabWxzZEdWeUxYTmxiR1ZqZERwdWIzUW9XMjExYkhScGNHeGxYU2tuS1M1elpXeGxZM1F5S0h0Y2JseDBYSFJjZEZ4MFhIUjNhV1IwYURvZ0p6RXdNQ1VuTEZ4dVhIUmNkRngwWEhSY2RHUnliM0JrYjNkdVVHRnlaVzUwT2lBa0tDZHRZV2x1Snlrc1hHNWNkRngwWEhSY2RGeDBaWE5qWVhCbFRXRnlhM1Z3T2lCbWRXNWpkR2x2YmlBb2JXRnlhM1Z3TENCeUtTQjdYRzVjZEZ4MFhIUmNkRngwWEhSeVpYUjFjbTRnYldGeWEzVndMbkpsY0d4aFkyVW9MMXhjV3loY1hHUXJLVnhjWFM5bkxDQW5QSE4xY0Q0a01Ud3ZjM1Z3UGljcE8xeHVYSFJjZEZ4MFhIUmNkSDBzWEc1Y2RGeDBYSFJjZEZ4MFkyeHZjMlZQYmxObGJHVmpkRG9nZEhKMVpTeGNibHgwWEhSY2RGeDBYSFF2TDJGc2JHOTNRMnhsWVhJNklIUnlkV1VzSUM4dlluVm5aM2xjYmx4MFhIUmNkRngwZlNrN1hHNWNkRngwWEhSY2RDUW9KM05sYkdWamRDNXRaWE56YVdFdFptbHNkR1Z5TFhObGJHVmpkRnR0ZFd4MGFYQnNaVjBuS1M1elpXeGxZM1F5S0h0Y2JseDBYSFJjZEZ4MFhIUjNhV1IwYURvZ0p6RXdNQ1VuTEZ4dVhIUmNkRngwWEhSY2RHUnliM0JrYjNkdVVHRnlaVzUwT2lBa0tDZHRZV2x1Snlrc1hHNWNkRngwWEhSY2RGeDBaWE5qWVhCbFRXRnlhM1Z3T2lCbWRXNWpkR2x2YmlBb2JXRnlhM1Z3TENCeUtTQjdYRzVjZEZ4MFhIUmNkRngwWEhSeVpYUjFjbTRnYldGeWEzVndMbkpsY0d4aFkyVW9MMXhjV3loY1hHUXJLVnhjWFM5bkxDQW5QSE4xY0Q0a01Ud3ZjM1Z3UGljcE8xeHVYSFJjZEZ4MFhIUmNkSDBzWEc1Y2RGeDBYSFJjZEZ4MFkyeHZjMlZQYmxObGJHVmpkRG9nWm1Gc2MyVXNYRzVjZEZ4MFhIUmNkRngwTHk5aGJHeHZkME5zWldGeU9pQjBjblZsTENBdkwySjFaMmQ1WEc1Y2RGeDBYSFJjZEZ4MGRHVnRjR3hoZEdWU1pYTjFiSFE2SUdaMWJtTjBhVzl1SUNoMFlXY3NJR052Ym5SaGFXNWxjaWtnZTF4dVhIUmNkRngwWEhSY2RGeDBkbUZ5SUdOb1pXTnJaV1FnUFNBbkp5eGNibHgwWEhSY2RGeDBYSFJjZEZ4MGIzQmhZMmwwZVY4MklEMGdKeWNzWEc1Y2RGeDBYSFJjZEZ4MFhIUmNkR05vWldOclpXUmZjMlZ0YVNBOUlDY25MRnh1WEhSY2RGeDBYSFJjZEZ4MFhIUnpaV3hsWTNRZ1BTQWtLSFJoWnk1bGJHVnRaVzUwS1M1d1lYSmxiblFvSjNObGJHVmpkQ2NwTEZ4dVhIUmNkRngwWEhSY2RGeDBYSFJ6Wld4bFkzUmxaQ0E5SUhObGJHVmpkQzV6Wld4bFkzUXlLQ2RrWVhSaEp5azdYRzVjYmx4MFhIUmNkRngwWEhSY2RHbG1JQ2h6Wld4bFkzUXVjSEp2Y0NnbmJYVnNkR2x3YkdVbktTQTlQVDBnWm1Gc2MyVXBJSEpsZEhWeWJpQjBZV2N1ZEdWNGREdGNibHgwWEhSY2RGeDBYSFJjZEdsbUlDaDBlWEJsYjJZZ2MyVnNaV04wWldRZ0lUMDlJQ2R2WW1wbFkzUW5LU0J5WlhSMWNtNGdkR0ZuTG5SbGVIUTdYRzVjYmx4MFhIUmNkRngwWEhSY2RIWmhjaUJ6Wld4bFkzUmxaRWxrY3lBOUlITmxiR1ZqZEdWa0xtMWhjQ2hwYm1SbGVDQTlQaUJwYm1SbGVDNXBaQ2tzWEc1Y2RGeDBYSFJjZEZ4MFhIUmNkSE5sYkdWamRFRnNiQ0E5SUhObGJHVmpkR1ZrU1dSekxtbHVZMngxWkdWektDY3RNU2NwTzF4dVhHNWNkRngwWEhSY2RGeDBYSFJ2Y0dGamFYUjVYellnUFNBb2MyVnNaV04wUVd4c0lDWW1JSFJoWnk1cFpDQWhQVDBnSnkweEp5a2dQeUFuSUc5d1lXTnBkSGt0TmljZ09pQW5KenRjYmx4MFhIUmNkRngwWEhSY2RHTm9aV05yWldSZmMyVnRhU0E5SUNnaGMyVnNaV04wUVd4c0lDWW1JSFJoWnk1cFpDQTlQVDBnSnkweEp5a2dQeUFuSUdOb1pXTnJaV1F0YzJWdGFTY2dPaUFuSnp0Y2JseDBYSFJjZEZ4MFhIUmNkR05vWldOclpXUWdQU0FvYzJWc1pXTjBaV1JKWkhNdWFXNWpiSFZrWlhNb2RHRm5MbWxrS1NrZ1B5QW5JR05vWldOclpXUW5JRG9nSnljN1hHNWNibHgwWEhSY2RGeDBYSFJjZEhKbGRIVnliaUFrS0dBOFpHbDJJR05zWVhOelBWd2laQzFtYkdWNElHRnNhV2R1TFdsMFpXMXpMV05sYm5SbGNpQm1ZV1JsSUhOb2IzY2diM0IwYVc5dUpIdHZjR0ZqYVhSNVh6WjlYQ0krWEc1Y2RGeDBYSFJjZEZ4MFhIUmNkRHh6Y0dGdUlHTnNZWE56UFZ3aVpteGxlQzFuY205M0xURmNJajRrZTNSaFp5NTBaWGgwZlR3dmMzQmhiajVjYmx4MFhIUmNkRngwWEhSY2RGeDBQSE53WVc0Z1pHRjBZUzF2Y0hScGIyNHRhV1E5WENJa2UzUmhaeTVwWkgxY0lpQmpiR0Z6Y3oxY0ltTm9aV05yWW05NExYTmxiR1ZqZERJZ1pteGxlQzF6YUhKcGJtc3RNQ1I3WTJobFkydGxaSDBrZTJOb1pXTnJaV1JmYzJWdGFYMWNJajQ4TDNOd1lXNCtYRzVjZEZ4MFhIUmNkRngwWEhROEwyUnBkajVnS1R0Y2JseDBYSFJjZEZ4MFhIUjlMRnh1WEhSY2RGeDBYSFJjZEhSbGJYQnNZWFJsVTJWc1pXTjBhVzl1T2lCbWRXNWpkR2x2YmlBb2RHRm5MQ0JqYjI1MFlXbHVaWElwSUh0Y2JseDBYSFJjZEZ4MFhIUmNkR2xtSUNnbmJHOWphMlZrSnlBOVBUMGdKQ2gwWVdjdVpXeGxiV1Z1ZENrdVlYUjBjaWduYkc5amEyVmtKeWtwSUh0Y2JseDBYSFJjZEZ4MFhIUmNkRngwSkNoamIyNTBZV2x1WlhJcExtRmtaRU5zWVhOektDZHNiMk5yWldRdGRHRm5KeWs3WEc1Y2RGeDBYSFJjZEZ4MFhIUmNkSFJoWnk1c2IyTnJaV1FnUFNCMGNuVmxPMXh1WEhSY2RGeDBYSFJjZEZ4MGZWeHVYSFJjZEZ4MFhIUmNkRngwY21WMGRYSnVJSFJoWnk1MFpYaDBPMXh1WEhSY2RGeDBYSFJjZEgwc1hHNWNkRngwWEhSY2RIMHBPMXh1WEc1Y2RGeDBYSFJjZENRb0ozTmxiR1ZqZEM1dFpYTnphV0V0Wm1sc2RHVnlMWE5sYkdWamRGdHRkV3gwYVhCc1pWMG5LUzVsWVdOb0tHWjFibU4wYVc5dUlDZ3BJSHRjYmx4MFhIUmNkRngwWEhSamIzVnVkRk5sYkdWamRHVmtLSFJvYVhNcE8xeHVYSFJjZEZ4MFhIUjlLVHRjYmx4MFhIUmNkRngwSkNnbkxuTmxiR1ZqZERJdWMyVnNaV04wTWkxamIyNTBZV2x1WlhJbktTNW1hVzVrS0NjdWMyVnNaV04wTWkxelpXRnlZMmhmWDJacFpXeGtPbTV2ZENoYmNHeGhZMlZvYjJ4a1pYSTlYQ0pjSWwwcEp5a3VZM056S0NkM2FXUjBhQ2NzSUNjbktUdGNibHh1WEhSY2RGeDBYSFFrS0NkelpXeGxZM1F1YldWemMybGhMV1pwYkhSbGNpMXpaV3hsWTNSYmJYVnNkR2x3YkdWZEp5a3ViMjRvSjJOb1lXNW5aU2NzSUdaMWJtTjBhVzl1SUNncElIdGNibHgwWEhSY2RGeDBYSFJqYjNWdWRGTmxiR1ZqZEdWa0tIUm9hWE1wTzF4dVhIUmNkRngwWEhSOUtUdGNibHgwWEhSY2RIMGdZMkYwWTJnZ0tHVnljbTl5S1NCN1hHNWNkRngwWEhSY2RHTnZibk4wSUdKdlpIa2dQU0I3WEc1Y2RGeDBYSFJjZEZ4MGJXVnpjMkZuWlRvZ0owVnljbTl5SUd4dllXUnBibWNnVTJWc1pXTjBNaUJoYzNObGRITW5MRnh1WEhSY2RGeDBYSFJjZEdWeWNtOXlPaUJsY25KdmNpeGNibHgwWEhSY2RGeDBmVnh1WEhSY2RGeDBYSFJOWlhOemFXRkZlSFF1Ykc5bloyVnlMbVZ5Y205eUtHSnZaSGtwTzF4dVhIUmNkRngwZlZ4dVhIUmNkSDFjYmx4MGZUdGNibHh1WEhRdktpcGNibHgwSUNvZ1EyOXZhMmxsSUdkbGRIUmxjaTVjYmx4MElDcGNibHgwSUNvZ1FIQmhjbUZ0SUh0emRISnBibWQ5SUc1aGJXVWdRMjl2YTJsbElHNWhiV1V1WEc1Y2RDQXFYRzVjZENBcUlFQnlaWFIxY200Z2IySnFaV04wZkhOMGNtbHVaMXh1WEhRZ0tpOWNibHgwWTI5dWMzUWdaMlYwUTI5dmEybGxJRDBnS0c1aGJXVXBJRDArSUh0Y2JseDBYSFJzWlhRZ2JXRjBZMmhsY3lBOUlHUnZZM1Z0Wlc1MExtTnZiMnRwWlM1dFlYUmphQ2h1WlhjZ1VtVm5SWGh3S0Z4dVhIUmNkRngwWENJb1B6cGVmRHNnS1Z3aUlDc2dibUZ0WlM1eVpYQnNZV05sS0M4b1cxeGNMaVEvS254N2ZWeGNLRnhjS1Z4Y1cxeGNYVnhjWEZ4Y1hDOWNYQ3RlWFNrdlp5d2dKMXhjWEZ3a01TY3BJQ3NnWENJOUtGdGVPMTBxS1Z3aVhHNWNkRngwS1NrN1hHNWNkRngwY21WMGRYSnVJRzFoZEdOb1pYTWdQeUJLVTA5T0xuQmhjbk5sS0dSbFkyOWtaVlZTU1VOdmJYQnZibVZ1ZENodFlYUmphR1Z6V3pGZEtTa2dPaUIxYm1SbFptbHVaV1E3WEc1Y2RIMWNibHh1WEhRdktpcGNibHgwSUNvZ1EyOXZhMmxsSUhObGRIUmxjaTVjYmx4MElDcGNibHgwSUNvZ1FIQmhjbUZ0SUh0emRISnBibWQ5SUc1aGJXVWdJQ0FnUTI5dmEybGxJRzVoYldVdVhHNWNkQ0FxSUVCd1lYSmhiU0I3YzNSeWFXNW5mU0IyWVd4MVpTQWdJRU52YjJ0cFpTQjJZV3gxWlM1Y2JseDBJQ29nUUhCaGNtRnRJSHR2WW1wbFkzUjlJRzl3ZEdsdmJuTWdRMjl2YTJsbElHVjRkR0Z5SUdSaGRHRXVYRzVjZENBcVhHNWNkQ0FxSUVCeVpYUjFjbTRnZG05cFpDNWNibHgwSUNvdlhHNWNkR052Ym5OMElITmxkRU52YjJ0cFpTQTlJQ2h1WVcxbExDQjJZV3gxWlN3Z2IzQjBhVzl1Y3lBOUlIdDlLU0E5UGlCN1hHNWNibHgwWEhSdmNIUnBiMjV6SUQwZ2UxeHVYSFJjZEZ4MGNHRjBhRG9nSnk4bkxGeHVYSFJjZEZ4MExpNHViM0IwYVc5dWMxeHVYSFJjZEgwN1hHNWNibHgwWEhScFppQW9iM0IwYVc5dWN5NWxlSEJwY21WeklHbHVjM1JoYm1ObGIyWWdSR0YwWlNrZ2UxeHVYSFJjZEZ4MGIzQjBhVzl1Y3k1bGVIQnBjbVZ6SUQwZ2IzQjBhVzl1Y3k1bGVIQnBjbVZ6TG5SdlZWUkRVM1J5YVc1bktDazdYRzVjZEZ4MGZWeHVYRzVjZEZ4MGJHVjBJSFZ3WkdGMFpXUkRiMjlyYVdVZ1BTQmxibU52WkdWVlVrbERiMjF3YjI1bGJuUW9ibUZ0WlNrZ0t5QmNJajFjSWlBcklHVnVZMjlrWlZWU1NVTnZiWEJ2Ym1WdWRDaDJZV3gxWlNrN1hHNWNibHgwWEhSbWIzSWdLR3hsZENCdmNIUnBiMjVMWlhrZ2FXNGdiM0IwYVc5dWN5a2dlMXh1WEhSY2RGeDBkWEJrWVhSbFpFTnZiMnRwWlNBclBTQmNJanNnWENJZ0t5QnZjSFJwYjI1TFpYazdYRzVjZEZ4MFhIUnNaWFFnYjNCMGFXOXVWbUZzZFdVZ1BTQnZjSFJwYjI1elcyOXdkR2x2Ymt0bGVWMDdYRzVjZEZ4MFhIUnBaaUFvYjNCMGFXOXVWbUZzZFdVZ0lUMDlJSFJ5ZFdVcElIdGNibHgwWEhSY2RGeDBkWEJrWVhSbFpFTnZiMnRwWlNBclBTQmNJajFjSWlBcklHOXdkR2x2YmxaaGJIVmxPMXh1WEhSY2RGeDBmVnh1WEhSY2RIMWNibHh1WEhSY2RHUnZZM1Z0Wlc1MExtTnZiMnRwWlNBOUlIVndaR0YwWldSRGIyOXJhV1U3WEc1Y2RIMWNibHh1WEhRdktpcGNibHgwSUNvZ1EzVnpkRzl0SUhOdGIyOTBhQ0J6WTNKdmJHeGxjaTVjYmx4MElDcGNibHgwSUNvZ1FIQmhjbUZ0SUh0dWRXMWlaWEo5SUc5bVpuTmxkRlJ2Y0NCUWIzTnBkR2x2YmlCMGJ5QnpZM0p2Ykd3Z2RHOHVYRzVjZENBcVhHNWNkQ0FxSUVCeVpYUjFjbTRnZG05cFpDNWNibHgwSUNvdlhHNWNkR052Ym5OMElITmpjbTlzYkZSdklEMGdLRzltWm5ObGRGUnZjQ2tnUFQ0Z2UxeHVYSFJjZEdOdmJuTjBJQ1FnUFNCcVVYVmxjbmtzWEc1Y2RGeDBYSFJqZFhKeVpXNTBUMlptYzJWMFZHOXdJRDBnZDJsdVpHOTNMbkJoWjJWWlQyWm1jMlYwSUh4OElHUnZZM1Z0Wlc1MExtUnZZM1Z0Wlc1MFJXeGxiV1Z1ZEM1elkzSnZiR3hVYjNBc1hHNWNkRngwWEhSemNHVmxaQ0E5SUUxaGRHZ3VZV0p6S0NodlptWnpaWFJVYjNBZ0xTQmpkWEp5Wlc1MFQyWm1jMlYwVkc5d0tTQXZJRE1wT3lBdkx5QXpjSGdnY0dWeUlITmxZMjl1WkZ4dVhHNWNkRngwSkNnblltOWtlU3hvZEcxc0p5a3VZVzVwYldGMFpTaDdYRzVjZEZ4MFhIUnpZM0p2Ykd4VWIzQTZJRzltWm5ObGRGUnZjRnh1WEhSY2RIMHNJSE53WldWa0tUdGNibHgwZlR0Y2JseHVYSFF2S2lwY2JseDBJQ29nU1c1emRHRnVkR2xoZEdVZ2NtRnVaMlVnY0d4MVoybHVJRzl1SUc1dlpHVnpMbHh1WEhRZ0tseHVYSFFnS2lCQWNHRnlZVzBnZTI5aWFtVmpkSDBnWld4bGJXVnVkSE1nYWxGMVpYSjVJR1ZzWlcxbGJuUnpJSE5sZENCMGJ5QmpjbVZoZENCeVlXNW5aU0JtY205dExseHVYSFFnS2x4dVhIUWdLaUJBY21WMGRYSnVJSFp2YVdRdVhHNWNkQ0FxTDF4dVhIUmpiMjV6ZENCa2IxSmhibWRsSUQwZ0tHVnNaVzFsYm5SektTQTlQaUI3WEc1Y2JseDBYSFJsYkdWdFpXNTBjeTVwYjI1U1lXNW5aVk5zYVdSbGNpaDdYRzVjZEZ4MFhIUnphMmx1T2lBbmNtOTFibVFuTEZ4dVhIUmNkRngwTHk5d2NtVjBkR2xtZVY5bGJtRmliR1ZrT2lCMGNuVmxMRnh1WEhSY2RGeDBMeTl3Y21WMGRHbG1lVjl6WlhCaGNtRjBiM0k2SUNjbkxGeHVYSFJjZEZ4MFptOXlZMlZmWldSblpYTTZJSFJ5ZFdVc1hHNWNkRngwWEhSbGVIUnlZVjlqYkdGemMyVnpPaUFuWm05eVkyVmtMV1ZrWjJWekxYUnlkV1VuTEZ4dVhIUmNkRngwYjI1R2FXNXBjMmc2SUdaMWJtTjBhVzl1SUNoeVlXNW5aU2tnZTF4dVhIUmNkRngwWEhSc1pYUWdaWFpsYm5RZ1BTQnVaWGNnUlhabGJuUW9KMk5vWVc1blpVWnBibWx6YUNjcE8xeHVYSFJjZEZ4MFhIUnlZVzVuWlM1cGJuQjFkQzVuWlhRb01Da3VaR2x6Y0dGMFkyaEZkbVZ1ZENobGRtVnVkQ2s3WEc1Y2RGeDBYSFI5TEZ4dVhIUmNkRngwYjI1VmNHUmhkR1U2SUdaMWJtTjBhVzl1SUNoeVlXNW5aU2tnZTF4dVhIUmNkRngwWEhSc1pYUWdaWFpsYm5RZ1BTQnVaWGNnUlhabGJuUW9KM1Z3WkdGMFpVWnBibWx6YUNjcE8xeHVYSFJjZEZ4MFhIUnlZVzVuWlM1cGJuQjFkQzVuWlhRb01Da3VaR2x6Y0dGMFkyaEZkbVZ1ZENobGRtVnVkQ2s3WEc1Y2RGeDBYSFI5WEc1Y2RGeDBmU2s3WEc1Y2JseDBYSFJtYjNJZ0tHeGxkQ0JwSUQwZ01Ec2dhU0E4SUdWc1pXMWxiblJ6TG14bGJtZDBhRHNnYVNzcktTQjdYRzVjZEZ4MFhIUmpiMjV6ZEZ4dVhIUmNkRngwWEhSeVlXNW5aU0E5SUNRb1pXeGxiV1Z1ZEhOYmFWMHBMRnh1WEhSY2RGeDBYSFJrWVhSaElEMGdjbUZ1WjJVdVpHRjBZU2dwTEZ4dVhIUmNkRngwWEhSemJHbGtaWElnUFNCa1lYUmhMbWx2YmxKaGJtZGxVMnhwWkdWeU8xeHVYRzVjZEZ4MFhIUnpiR2xrWlhJdWRYQmtZWFJsS0h0Y2JseDBYSFJjZEZ4MGNISmxkSFJwWm5rNklHWjFibU4wYVc5dUlDaHVkVzFpWlhJcElIdGNibHgwWEhSY2RGeDBYSFJwWmlBb0lXUmhkR0V1Y0hKbGRIUnBabmxGYm1GaWJHVmtLU0I3WEc1Y2RGeDBYSFJjZEZ4MFhIUnlaWFIxY200Z2JuVnRZbVZ5TzF4dVhIUmNkRngwWEhSY2RIMWNibHgwWEhSY2RGeDBYSFJzWlhRZ2JpQTlJRzUxYldKbGNpNTBiMFpwZUdWa0tHUmhkR0V1Y0hKbFkybHphVzl1S1M1MGIxTjBjbWx1WnlncExuSmxjR3hoWTJVb0x5aGNYR1I3TVN3emZTZy9QU2cvT2x4Y1pGeGNaRnhjWkNrcktEOGhYRnhrS1NrcEwyY3NJR0FrTVNSN1pHRjBZUzV3Y21WMGRHbG1lVk5sY0dGeVlYUnZjbjFnS1R0Y2JseDBYSFJjZEZ4MFhIUnBaaUFvWkdGMFlTNXdjbVZqYVhOcGIyNGdQaUF3S1NCdUlEMGdiaTV5WlhCc1lXTmxLQzljWEM0b1hGeGtLeWtrTDJjc0lHQWtlMlJoZEdFdVpHVmphVzFoYkZObGNHRnlZWFJ2Y0gwa01XQXBPMXh1WEc1Y2RGeDBYSFJjZEZ4MGNtVjBkWEp1SUc0N1hHNWNkRngwWEhSY2RIMHNYRzVjZEZ4MFhIUjlLVHRjYmx4MFhIUmNkSE5zYVdSbGNpNXdjbVYyWDNaaGJIVmxJRDBnY21GdVoyVXVkbUZzS0NrN1hHNWNkRngwZlZ4dVhIUjlPMXh1WEc1Y2RDOHFLbHh1WEhRZ0tpQk1iMkZrSUhKbGJXOTBaU0J6Y21Nc0lHRndjR1Z1WkNCMGJ5QkVUMDB1WEc1Y2RDQXFYRzVjZENBcUlFQndZWEpoYlNCN2MzUnlhVzVuZlNCMWNtd2dVMjkxY21ObElGVlNUQzVjYmx4MElDcGNibHgwSUNvZ1FISmxkSFZ5YmlCUWNtOXRhWE5sTGx4dVhIUWdLaTljYmx4MFkyOXVjM1FnWjJWMFUyTnlhWEIwSUQwZ0tIVnliQ2tnUFQ0Z2UxeHVYSFJjZEhKbGRIVnliaUJ1WlhjZ1VISnZiV2x6WlNnb2NtVnpiMngyWlN3Z2NtVnFaV04wS1NBOVBpQjdYRzVjZEZ4MFhIUnNaWFFnYm1WM1UyTnlhWEIwSUQwZ1pHOWpkVzFsYm5RdVkzSmxZWFJsUld4bGJXVnVkQ2duYzJOeWFYQjBKeWs3WEc1Y2RGeDBYSFJ1WlhkVFkzSnBjSFF1YjI1bGNuSnZjaUE5SUhKbGFtVmpkRHRjYmx4MFhIUmNkRzVsZDFOamNtbHdkQzV2Ym14dllXUWdQU0J5WlhOdmJIWmxPMXh1WEhSY2RGeDBaRzlqZFcxbGJuUXVhR1ZoWkM1aGNIQmxibVJEYUdsc1pDaHVaWGRUWTNKcGNIUXBPMXh1WEhSY2RGeDBibVYzVTJOeWFYQjBMbk55WXlBOUlIVnliRHRjYmx4MFhIUjlLVHRjYmx4MGZWeHVYRzVjZEM4cUtseHVYSFFnS2lCQlkzUnBiMjV6SUc5dUlHUnZZM1Z0Wlc1MExuSmxZV1I1SUdWMlpXNTBMbHh1WEhRZ0tseHVYSFFnS2lCQWNtVjBkWEp1SUhadmFXUmNibHgwSUNvdlhHNWNkR052Ym5OMElHbHVhWFJCWTNScGIyNXpJRDBnS0NrZ1BUNGdlMXh1WEc1Y2RGeDBZMjl1YzNRZ2RHOW5aMnhsU1hSbGJYTk5aVzUxSUQwZ1puVnVZM1JwYjI0Z0tHVXBJSHRjYmx4MFhIUmNkR2xtSUNna0tIZHBibVJ2ZHlrdWQybGtkR2dvS1NBOFBTQW5OelkzSnlrZ2UxeHVYSFJjZEZ4MFhIUmxMbkJ5WlhabGJuUkVaV1poZFd4MEtDbGNibHgwWEhSY2RGeDBKQ2gwYUdsektTNXphV0pzYVc1bmN5aGNJaTV6ZFdJdGJXVnVkVndpS1M1emJHbGtaVlJ2WjJkc1pTZ3pNREFwTzF4dVhIUmNkRngwWEhRa0tIUm9hWE1wTG5SdloyZHNaVU5zWVhOektGd2lZV04wYVhabFhDSXBPMXh1WEhSY2RGeDBmVnh1WEhSY2RIMDdYRzVjYmx4MFhIUmpiMjV6ZENCelpYUjFjRTVoZG1sbllYUnBiMjRnUFNCbWRXNWpkR2x2YmlBb0tTQjdYRzVjZEZ4MFhIUWtLQ2N1Ym1GMmFXZGhkR2x2Ymk1d1lXZHBibUYwYVc5dUlDNXdZV2RsTFc1MWJXSmxjbk1uS1M1aFpHUkRiR0Z6Y3lnbmJXVnpjMmxoTFhKcGNIQnNaUzFqYkdsamF5QnRaWE56YVdFdFluUnVKeWs3WEc1Y2RGeDBmVHRjYmx4dVhIUmNkR052Ym5OMElIVndaR0YwWlZObGJHVmpkRVJ5YjNBZ1BTQm1kVzVqZEdsdmJpQW9LU0I3WEc1Y2RGeDBYSFIyWVhJZ2MyVnNaV04wSUQwZ0pDZ25Mbk5sYkdWamRESXVjMlZzWldOME1pMWpiMjUwWVdsdVpYSXRMVzl3Wlc0Z0xuTmxiR1ZqZERJdGMyVnNaV04wYVc5dUp5azdYRzVjYmx4MFhIUmNkR2xtSUNoelpXeGxZM1F1YkdWdVozUm9JRDA5UFNBd0tTQnlaWFIxY200N1hHNWNibHgwWEhSY2RIWmhjaUJ6Wld4bFkzUkpaQ0E5SUNRb0p5NXpaV3hsWTNReUxuTmxiR1ZqZERJdFkyOXVkR0ZwYm1WeUxTMXZjR1Z1SUM1elpXeGxZM1F5TFhObGJHVmpkR2x2YmljcExtRjBkSElvSjJGeWFXRXRiM2R1Y3ljcExuSmxjR3hoWTJVb0ozTmxiR1ZqZERJdEp5d2dKeWNwTG5KbGNHeGhZMlVvSnkxeVpYTjFiSFJ6Snl3Z0p5Y3BPMXh1WEhSY2RGeDBkbUZ5SUhObGJHVmpkQ0E5SUNRb1lITmxiR1ZqZEZ0a1lYUmhMWE5sYkdWamRESXRhV1E5SnlSN2MyVnNaV04wU1dSOUoxMWdLVHRjYmx4dVhIUmNkRngwYzJWc1pXTjBMbk5sYkdWamRESW9KMk5zYjNObEp5azdYRzVjZEZ4MFhIUnpaV3hsWTNRdWMyVnNaV04wTWlnbmIzQmxiaWNwTzF4dVhIUmNkSDA3WEc1Y2JseDBYSFFrS0NjdWJXVnpjMmxoTFc1aGRpMXRaVzUxSUM1dFpXNTFMV2wwWlcwdWJXVnVkUzFwZEdWdExXaGhjeTFqYUdsc1pISmxiaUErSUM1dFpXNTFMV2wwWlcwdFpYaHdZVzVrTFdOdmJHeGhjSE5sSnlrdWIyNG9KMk5zYVdOckp5d2dkRzluWjJ4bFNYUmxiWE5OWlc1MUtUdGNibHgwWEhRa0tDY3ViR2x6ZEdsdVp5Y3BMbTl1S0Nkc2FYTjBhVzVuVlhCa1lYUmxaQ2NzSUhWd1pHRjBaVk5sYkdWamRFUnliM0FwTzF4dVhHNWNkRngwYzJWMGRYQk9ZWFpwWjJGMGFXOXVLQ2s3WEc1Y2RGeDBhWE5OYjJKcGJHVW9LVHRjYmx4MGZWeHVYRzVjZEdkc2IySmhiQzVOWlhOemFXRkZlSFFnUFNCbmJHOWlZV3d1VFdWemMybGhSWGgwSUh4OElIdDlPMXh1WEhSbmJHOWlZV3d1VFdWemMybGhSWGgwSUQwZ2UxeHVYSFJjZEM0dUxtZHNiMkpoYkM1TlpYTnphV0ZGZUhRc1hHNWNkRngwTGk0dWUxeHVYSFJjZEZ4MGFYTk5iMkpwYkdVNklHbHpUVzlpYVd4bExGeHVYSFJjZEZ4MFoyVjBRMjl2YTJsbE9pQm5aWFJEYjI5cmFXVXNYRzVjZEZ4MFhIUnpaWFJEYjI5cmFXVTZJSE5sZEVOdmIydHBaU3hjYmx4MFhIUmNkSE5qY205c2JGUnZPaUJ6WTNKdmJHeFVieXhjYmx4MFhIUmNkR1J2VW1GdVoyVTZJR1J2VW1GdVoyVXNYRzVjZEZ4MFhIUnBjMDF2WW1sc1pUb2dhWE5OYjJKcGJHVXNYRzVjZEZ4MFhIUm5aWFJUWTNKcGNIUTZJR2RsZEZOamNtbHdkQ3hjYmx4MFhIUjlYRzVjZEgwN1hHNWNibHgwSkNobWRXNWpkR2x2YmlBb0tTQjdYRzVjZEZ4MGFXNXBkRUZqZEdsdmJuTW9LVHRjYmx4MGZTazdYRzVjYm4wcEtHcFJkV1Z5ZVNrN0lpd2lMeThnVkdobElHMXZaSFZzWlNCallXTm9aVnh1ZG1GeUlGOWZkMlZpY0dGamExOXRiMlIxYkdWZlkyRmphR1ZmWHlBOUlIdDlPMXh1WEc0dkx5QlVhR1VnY21WeGRXbHlaU0JtZFc1amRHbHZibHh1Wm5WdVkzUnBiMjRnWDE5M1pXSndZV05yWDNKbGNYVnBjbVZmWHlodGIyUjFiR1ZKWkNrZ2UxeHVYSFF2THlCRGFHVmpheUJwWmlCdGIyUjFiR1VnYVhNZ2FXNGdZMkZqYUdWY2JseDBkbUZ5SUdOaFkyaGxaRTF2WkhWc1pTQTlJRjlmZDJWaWNHRmphMTl0YjJSMWJHVmZZMkZqYUdWZlgxdHRiMlIxYkdWSlpGMDdYRzVjZEdsbUlDaGpZV05vWldSTmIyUjFiR1VnSVQwOUlIVnVaR1ZtYVc1bFpDa2dlMXh1WEhSY2RISmxkSFZ5YmlCallXTm9aV1JOYjJSMWJHVXVaWGh3YjNKMGN6dGNibHgwZlZ4dVhIUXZMeUJEY21WaGRHVWdZU0J1WlhjZ2JXOWtkV3hsSUNoaGJtUWdjSFYwSUdsMElHbHVkRzhnZEdobElHTmhZMmhsS1Z4dVhIUjJZWElnYlc5a2RXeGxJRDBnWDE5M1pXSndZV05yWDIxdlpIVnNaVjlqWVdOb1pWOWZXMjF2WkhWc1pVbGtYU0E5SUh0Y2JseDBYSFF2THlCdWJ5QnRiMlIxYkdVdWFXUWdibVZsWkdWa1hHNWNkRngwTHk4Z2JtOGdiVzlrZFd4bExteHZZV1JsWkNCdVpXVmtaV1JjYmx4MFhIUmxlSEJ2Y25Sek9pQjdmVnh1WEhSOU8xeHVYRzVjZEM4dklFVjRaV04xZEdVZ2RHaGxJRzF2WkhWc1pTQm1kVzVqZEdsdmJseHVYSFJmWDNkbFluQmhZMnRmYlc5a2RXeGxjMTlmVzIxdlpIVnNaVWxrWFM1allXeHNLRzF2WkhWc1pTNWxlSEJ2Y25SekxDQnRiMlIxYkdVc0lHMXZaSFZzWlM1bGVIQnZjblJ6TENCZlgzZGxZbkJoWTJ0ZmNtVnhkV2x5WlY5ZktUdGNibHh1WEhRdkx5QlNaWFIxY200Z2RHaGxJR1Y0Y0c5eWRITWdiMllnZEdobElHMXZaSFZzWlZ4dVhIUnlaWFIxY200Z2JXOWtkV3hsTG1WNGNHOXlkSE03WEc1OVhHNWNiaUlzSWk4dklHZGxkRVJsWm1GMWJIUkZlSEJ2Y25RZ1puVnVZM1JwYjI0Z1ptOXlJR052YlhCaGRHbGlhV3hwZEhrZ2QybDBhQ0J1YjI0dGFHRnliVzl1ZVNCdGIyUjFiR1Z6WEc1ZlgzZGxZbkJoWTJ0ZmNtVnhkV2x5WlY5ZkxtNGdQU0JtZFc1amRHbHZiaWh0YjJSMWJHVXBJSHRjYmx4MGRtRnlJR2RsZEhSbGNpQTlJRzF2WkhWc1pTQW1KaUJ0YjJSMWJHVXVYMTlsYzAxdlpIVnNaU0EvWEc1Y2RGeDBablZ1WTNScGIyNG9LU0I3SUhKbGRIVnliaUJ0YjJSMWJHVmJKMlJsWm1GMWJIUW5YVHNnZlNBNlhHNWNkRngwWm5WdVkzUnBiMjRvS1NCN0lISmxkSFZ5YmlCdGIyUjFiR1U3SUgwN1hHNWNkRjlmZDJWaWNHRmphMTl5WlhGMWFYSmxYMTh1WkNoblpYUjBaWElzSUhzZ1lUb2daMlYwZEdWeUlIMHBPMXh1WEhSeVpYUjFjbTRnWjJWMGRHVnlPMXh1ZlRzaUxDSXZMeUJrWldacGJtVWdaMlYwZEdWeUlHWjFibU4wYVc5dWN5Qm1iM0lnYUdGeWJXOXVlU0JsZUhCdmNuUnpYRzVmWDNkbFluQmhZMnRmY21WeGRXbHlaVjlmTG1RZ1BTQm1kVzVqZEdsdmJpaGxlSEJ2Y25SekxDQmtaV1pwYm1sMGFXOXVLU0I3WEc1Y2RHWnZjaWgyWVhJZ2EyVjVJR2x1SUdSbFptbHVhWFJwYjI0cElIdGNibHgwWEhScFppaGZYM2RsWW5CaFkydGZjbVZ4ZFdseVpWOWZMbThvWkdWbWFXNXBkR2x2Yml3Z2EyVjVLU0FtSmlBaFgxOTNaV0p3WVdOclgzSmxjWFZwY21WZlh5NXZLR1Y0Y0c5eWRITXNJR3RsZVNrcElIdGNibHgwWEhSY2RFOWlhbVZqZEM1a1pXWnBibVZRY205d1pYSjBlU2hsZUhCdmNuUnpMQ0JyWlhrc0lIc2daVzUxYldWeVlXSnNaVG9nZEhKMVpTd2daMlYwT2lCa1pXWnBibWwwYVc5dVcydGxlVjBnZlNrN1hHNWNkRngwZlZ4dVhIUjlYRzU5T3lJc0lsOWZkMlZpY0dGamExOXlaWEYxYVhKbFgxOHVaeUE5SUNobWRXNWpkR2x2YmlncElIdGNibHgwYVdZZ0tIUjVjR1Z2WmlCbmJHOWlZV3hVYUdseklEMDlQU0FuYjJKcVpXTjBKeWtnY21WMGRYSnVJR2RzYjJKaGJGUm9hWE03WEc1Y2RIUnllU0I3WEc1Y2RGeDBjbVYwZFhKdUlIUm9hWE1nZkh3Z2JtVjNJRVoxYm1OMGFXOXVLQ2R5WlhSMWNtNGdkR2hwY3ljcEtDazdYRzVjZEgwZ1kyRjBZMmdnS0dVcElIdGNibHgwWEhScFppQW9kSGx3Wlc5bUlIZHBibVJ2ZHlBOVBUMGdKMjlpYW1WamRDY3BJSEpsZEhWeWJpQjNhVzVrYjNjN1hHNWNkSDFjYm4wcEtDazdJaXdpWDE5M1pXSndZV05yWDNKbGNYVnBjbVZmWHk1dklEMGdablZ1WTNScGIyNG9iMkpxTENCd2NtOXdLU0I3SUhKbGRIVnliaUJQWW1wbFkzUXVjSEp2ZEc5MGVYQmxMbWhoYzA5M2JsQnliM0JsY25SNUxtTmhiR3dvYjJKcUxDQndjbTl3S1RzZ2ZTSXNJaTh2SUdSbFptbHVaU0JmWDJWelRXOWtkV3hsSUc5dUlHVjRjRzl5ZEhOY2JsOWZkMlZpY0dGamExOXlaWEYxYVhKbFgxOHVjaUE5SUdaMWJtTjBhVzl1S0dWNGNHOXlkSE1wSUh0Y2JseDBhV1lvZEhsd1pXOW1JRk41YldKdmJDQWhQVDBnSjNWdVpHVm1hVzVsWkNjZ0ppWWdVM2x0WW05c0xuUnZVM1J5YVc1blZHRm5LU0I3WEc1Y2RGeDBUMkpxWldOMExtUmxabWx1WlZCeWIzQmxjblI1S0dWNGNHOXlkSE1zSUZONWJXSnZiQzUwYjFOMGNtbHVaMVJoWnl3Z2V5QjJZV3gxWlRvZ0owMXZaSFZzWlNjZ2ZTazdYRzVjZEgxY2JseDBUMkpxWldOMExtUmxabWx1WlZCeWIzQmxjblI1S0dWNGNHOXlkSE1zSUNkZlgyVnpUVzlrZFd4bEp5d2dleUIyWVd4MVpUb2dkSEoxWlNCOUtUdGNibjA3SWl3aUx5OGdVM1I1YkdWelhHNXBiWEJ2Y25RZ1hDSXVMaTl6WTNOekwxOW1jbTl1ZEdWdVpDOW1jbTl1ZEdWdVpDNXpZM056WENJN1hHNWNiaTh2SUZOamNtbHdkSE5jYm1sdGNHOXlkQ0JjSWk0dUwycHpMMTlqYjIxd2IyNWxiblJ6TDE5aWIyOTBjM1J5WVhBdWFuTmNJanNnTHk4Z2QyVWdibVZsWkNCZlltOXZkSE4wY21Gd0xtcHpJR0Z6SUhObGNHRnlZWFJsSUdacGJHVmNibWx0Y0c5eWRDQmNJaTR1TDJwekwyWnliMjUwWlc1a0xtcHpYQ0k3SWwwc0ltNWhiV1Z6SWpwYlhTd2ljMjkxY21ObFVtOXZkQ0k2SWlKOSI7czo0NToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcRmlsZQBuYW1lc3BhY2VzIjthOjA6e31zOjQzOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGaWxlAGluY2x1ZGVzIjthOjA6e31zOjQ0OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGaWxlAGZ1bmN0aW9ucyI7YTowOnt9czo0NDoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcRmlsZQBjb25zdGFudHMiO2E6MDp7fXM6NDI6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEZpbGUAY2xhc3NlcyI7YTowOnt9czo0NToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcRmlsZQBpbnRlcmZhY2VzIjthOjA6e31zOjQxOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGaWxlAHRyYWl0cyI7YTowOnt9czo0MDoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcRmlsZQBlbnVtcyI7YTowOnt9czo0MzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcRmlsZQBtZXRhZGF0YSI7YTowOnt9fQ==";