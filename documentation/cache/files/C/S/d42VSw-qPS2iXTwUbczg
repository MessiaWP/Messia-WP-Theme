1702936349
waR3U4bTeM%3A5a35ca75ee2f73bf099a449c83cc39b5-399541f151cb7ebc1977ccaad2cf6e6f
s:25424:"TzozMzoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGaWxlIjoxNDp7czo0MzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcRmlsZQBkb2NCbG9jayI7TjtzOjM5OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGaWxlAGhhc2giO3M6MzI6IjM5OTU0MWYxNTFjYjdlYmMxOTc3Y2NhYWQyY2Y2ZTZmIjtzOjM5OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGaWxlAG5hbWUiO3M6MzQ6ImJsb2NrLXNlYXJjaC1zbmlwcGV0LWVkaXRvci5taW4uanMiO3M6Mzk6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEZpbGUAcGF0aCI7czo2MDoiaW5jbHVkZXMvYXNzZXRzL2pzL2Jsb2Nrcy9ibG9jay1zZWFyY2gtc25pcHBldC1lZGl0b3IubWluLmpzIjtzOjQxOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGaWxlAHNvdXJjZSI7czoxODEwNDoiIWZ1bmN0aW9uKCl7dmFyIGU9ezg5MDg6ZnVuY3Rpb24oZSx0LGEpeyFmdW5jdGlvbihlLHQpe2NvbnN0e2FwaUZldGNoOnN9PWUse3JlZ2lzdGVyQmxvY2tUeXBlOnJ9PWUuYmxvY2tzLHtDb21wb25lbnQ6bCxGcmFnbWVudDpjLHVzZVN0YXRlOm4sdXNlRWZmZWN0OmksdXNlUmVmOm99PWUuZWxlbWVudCx7c2VydmVyU2lkZVJlbmRlcjptfT1lLHtJbnNwZWN0b3JDb250cm9sczpkLEJsb2NrQ29udHJvbHM6dX09ZS5ibG9ja0VkaXRvcix7VG9nZ2xlQ29udHJvbDpmLEZsZXg6cCxGbGV4SXRlbTpoLFBhbmVsQm9keTpnLE5vdGljZTp2LENoZWNrYm94Q29udHJvbDp5LFNlbGVjdENvbnRyb2w6YixUb29sYmFyR3JvdXA6RSxUb29sYmFyQnV0dG9uOlIsUGxhY2Vob2xkZXI6QyxEaXNhYmxlZDprLENhcmQ6eCxTcGlubmVyOk4sVGFiUGFuZWw6dyxUZXh0Q29udHJvbDpTfT1lLmNvbXBvbmVudHMse19fOkF9PWUuaTE4bixQPWEoNDY3MCksej1SZWFjdC5jcmVhdGVFbGVtZW50KCJzdmciLHt2aWV3Qm94OiIwIDAgMjc0IDM3Iix4bWxuczoiaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmcifSxSZWFjdC5jcmVhdGVFbGVtZW50KCJnIix7Y2xhc3NOYW1lOiJsYXllciJ9LFJlYWN0LmNyZWF0ZUVsZW1lbnQoImciLHtpZDoic3ZnXzE3In0sUmVhY3QuY3JlYXRlRWxlbWVudCgiZyIse2lkOiJzdmdfMTEifSxSZWFjdC5jcmVhdGVFbGVtZW50KCJyZWN0Iix7ZmlsbDoiI2ZmZmZmZiIsaGVpZ2h0OiIyNy44MjgwNjciLGlkOiJzdmdfOCIscng6IjIiLHJ5OiIyIixzdHJva2U6IiNjMmMyYzIiLHdpZHRoOiIxMTguNzM2MDc2Iix4OiI0LjQzOTkwMiIseToiNC42NTQ3MTYifSksUmVhY3QuY3JlYXRlRWxlbWVudCgicGF0aCIse2Q6Im0xMDUuMTk4MzMxLDIxLjc4NzY3M2wzLjY3ODc3MiwtNi40Mzc4NTFsMy42Nzg3NzIsNi40Mzc4NTFsLTcuMzU3NTQ0LDB6IixmaWxsOiIjMDAwMDAwIixpZDoic3ZnXzEiLHN0cm9rZToiIzAwMDAwMCIsdHJhbnNmb3JtOiJyb3RhdGUoLTE4MCAxMDguODc3IDE4LjU2ODcpIn0pKSxSZWFjdC5jcmVhdGVFbGVtZW50KCJnIix7aWQ6InN2Z18xMiJ9LFJlYWN0LmNyZWF0ZUVsZW1lbnQoInJlY3QiLHtmaWxsOiIjZmZmZmZmIixoZWlnaHQ6IjI3LjgyODA2NyIsaWQ6InN2Z18yIixyeDoiMiIscnk6IjIiLHN0cm9rZToiI2MyYzJjMiIsd2lkdGg6IjYzLjUwNTk0OCIseDoiMTMyLjY4MjU4NiIseToiNC42NTQ3MTYifSksUmVhY3QuY3JlYXRlRWxlbWVudCgidGV4dCIse2ZpbGw6IiMwMDAwMDAiLGZvbnRGYW1pbHk6Ik1vbm9zcGFjZSIsZm9udFNpemU6IjE4Iixmb250U3R5bGU6Im5vcm1hbCIsZm9udFdlaWdodDoibm9ybWFsIixpZDoic3ZnXzYiLHN0cm9rZToiIzAwMDAwMCIsdGV4dEFuY2hvcjoibWlkZGxlIix0cmFuc2Zvcm06Im1hdHJpeCgwLjkxMTAyNSAwIDAgMC45NDQ5MDMgNC41OTkxNiA2Ljg3OTE2KSIseDoiMTk4Ljg3NTY4NCIseToiMTguMzQyNTI2In0sIkkiKSksUmVhY3QuY3JlYXRlRWxlbWVudCgiZyIse2lkOiJzdmdfMTUifSxSZWFjdC5jcmVhdGVFbGVtZW50KCJyZWN0Iix7ZmlsbDoiYmxhY2siLGhlaWdodDoiMjcuODI4MDY3IixpZDoic3ZnXzkiLHJ4OiIyIixyeToiMiIsd2lkdGg6IjYzLjUwNTk0OCIseDoiMjA2LjUzMTk0OSIseToiNC42NTQ3MTcifSksUmVhY3QuY3JlYXRlRWxlbWVudCgidGV4dCIse2ZpbGw6IiNmZmZmZmYiLGZvbnRGYW1pbHk6IkN1cnNpdmUiLGZvbnRTaXplOiIyNCIsaWQ6InN2Z18xMCIsc3Ryb2tlOiIjMDAwMDAwIixzdHJva2VXaWR0aDoiMCIsdGV4dEFuY2hvcjoibWlkZGxlIix0cmFuc2Zvcm06Im1hdHJpeCgwLjU0NzQ4NSAwIDAgMC41MDA0MDYgNDYuODIxMiA1Mi44MTkxKSIseDoiMzUxLjIzOTE3OCIseToiLTYzIn0sIlNlYXJjaCIpKSkpKTtsZXQgVD0hMTtyKCJtZXNzaWEvYmxvY2stc2VhcmNoLXNuaXBwZXQiLHt0aXRsZTpBKCJTZWFyY2ggc25pcHBldCIsIm1lc3NpYSIpLGRlc2NyaXB0aW9uOkEoIkNvbnN0cnVjdG9yIG9mIHNlYXJjaCBmaWx0ZXJzIiwibWVzc2lhIiksaWNvbjpSZWFjdC5jcmVhdGVFbGVtZW50KCJzdmciLHt4bWxuczoiaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmciLHdpZHRoOiIyNCIsaGVpZ2h0OiIyNCIsdmlld0JveDoiMCAwIDI0IDI0In0sUmVhY3QuY3JlYXRlRWxlbWVudCgicGF0aCIse2Q6Ik0xMyA4aC04di0xaDh2MXptMCAyaC04di0xaDh2MXptLTMgMmgtNXYtMWg1djF6bTExLjE3MiAxMmwtNy4zODctNy4zODdjLTEuMzg4Ljg3NC0zLjAyNCAxLjM4Ny00Ljc4NSAxLjM4Ny00Ljk3MSAwLTktNC4wMjktOS05czQuMDI5LTkgOS05IDkgNC4wMjkgOSA5YzAgMS43NjEtLjUxNCAzLjM5OC0xLjM4NyA0Ljc4NWw3LjM4NyA3LjM4Ny0yLjgyOCAyLjgyOHptLTEyLjE3Mi04YzMuODU5IDAgNy0zLjE0IDctN3MtMy4xNDEtNy03LTctNyAzLjE0LTcgNyAzLjE0MSA3IDcgN3oifSkpLGNhdGVnb3J5OiJtZXNzaWEiLGtleXdvcmRzOlsic2VhcmNoIl0sc3R5bGVzOltdLHZhcmlhdGlvbnM6W10sYXR0cmlidXRlczp7ZmlsdGVyc0NvbnN0cnVjdGVkOnt0eXBlOiJhcnJheSIsZGVmYXVsdDpbXX0saXNFeGFtcGxlOnt0eXBlOiJib29sZWFuIixkZWZhdWx0OiExfSx3aXRoQ291bnQ6e3R5cGU6ImJvb2xlYW4iLGRlZmF1bHQ6ITB9LHNlbGVjdEFsbENhdEFsaWFzOnt0eXBlOiJzdHJpbmciLGRlZmF1bHQ6QSgiU2VsZWN0IENhdGVnb3J5IiwibWVzc2lhIil9LHNlbGVjdEFsbFByb3BBbGlhczp7dHlwZToic3RyaW5nIixkZWZhdWx0OkEoIlNlbGVjdCBQcm9wZXJ0eSIsIm1lc3NpYSIpfX0sZXhhbXBsZTp7YXR0cmlidXRlczp7aXNFeGFtcGxlOiEwfX0sc3VwcG9ydHM6e211bHRpcGxlOiExfSxlZGl0OmZ1bmN0aW9uKGEpe2NvbnN0e2F0dHJpYnV0ZXM6cixzZXRBdHRyaWJ1dGVzOmwsY2xhc3NOYW1lOk0sbmFtZTpffT1hLFtELGpdPW4odCgpKSxbTywkXT1uKCEwKSxbQixGXT1uKCExKSxbSSxWXT1uKHtzZWdtZW50OltdLGNhdGVnb3J5OltdLHByb3BlcnR5OltdfSk7bGV0IFc9bygpO2NvbnN0IHE9ZT0+e3QoZS50YXJnZXQpLnBhcmVudHMoIi5tZXNzaWEtZmlsdGVyIikuYW5pbWF0ZSh7b3BhY2l0eTowfSw0MDAsKGZ1bmN0aW9uKCl7dCh0aGlzKS5hZGRDbGFzcygicmVtb3ZlZCIpLmNzcygiZGlzcGxheSIsIm5vbmUiKTtjb25zdCBlPXQoVy5jdXJyZW50KS5maW5kKCIuZmlsdGVycy1jb25zdHJ1Y3RlZCAubWVzc2lhLWZpbHRlciIpO0goZSl9KSl9LEw9KCk9Pntjb25zdCBlPXQoVy5jdXJyZW50KS5maW5kKCIuZmlsdGVycy1jb25zdHJ1Y3RlZCIpLm5vdCgidWktc29ydGFibGUiKS5zb3J0YWJsZSh7Zm9yY2VIZWxwZXJTaXplOiEwLGZvcmNlUGxhY2Vob2xkZXJTaXplOiEwLG9wYWNpdHk6MSx0b2xlcmFuY2U6ImludGVyc2VjdCIsc2Nyb2xsOiEwLHNjcm9sbFNlbnNpdGl2aXR5OjIwLGNvbnRhaW5tZW50OiIuZWRpdC1wb3N0LXZpc3VhbC1lZGl0b3IiLHBsYWNlaG9sZGVyOiJzb3J0YWJsZS1wbGFjZWhvbGRlciIsaGFuZGxlOiIubW92ZSIsc3RhcnQ6KGUsYSk9PnthLml0ZW0uYWRkQ2xhc3MoImlzLWVsZXZhdGVkIiksdCgiYm9keSIpLmFkZENsYXNzKCJjdXJzb3ItZ3JhYmJpbmciKX0sYmVmb3JlU3RvcDooZSxhKT0+e3QoImJvZHkiKS5yZW1vdmVDbGFzcygiY3Vyc29yLWdyYWJiaW5nIil9LHN0b3A6KGUsdCk9Pnt0Lml0ZW0ucmVtb3ZlQ2xhc3MoImlzLWVsZXZhdGVkIiksUSh0KS50aGVuKChlPT57aihlLml0ZW0pfSkpfX0pO3QoVy5jdXJyZW50KS5maW5kKCIuZmlsdGVycy10ZW1wbGF0ZXMgLm1lc3NpYS1maWx0ZXIiKS5ub3QoIi51aS1kcmFnZ2FibGUiKS5kcmFnZ2FibGUoe2Nvbm5lY3RUb1NvcnRhYmxlOiIuZmlsdGVycy1jb25zdHJ1Y3RlZCIsaGVscGVyOiJjbG9uZSIscmV2ZXJ0OiJpbnZhbGlkIixzY3JvbGw6ITEscmV2ZXJ0RHVyYXRpb246MjAwLGhhbmRsZToiLm1vdmUiLHpJbmRleDoxMCxzdGFydDooYSxzKT0+e3MuaGVscGVyLmFkZENsYXNzKCJpcy1lbGV2YXRlZCIpLHQoImJvZHkiKS5hZGRDbGFzcygiY3Vyc29yLWdyYWJiaW5nIiksZS5hZGRDbGFzcygiZHJhZ2dpbmciKX0sYmVmb3JlU3RvcDooZSxhKT0+e3QoImJvZHkiKS5yZW1vdmVDbGFzcygiY3Vyc29yLWdyYWJiaW5nIil9LHN0b3A6KHQsYSk9PnthLmhlbHBlci5yZW1vdmVDbGFzcygiaXMtZWxldmF0ZWQiKSxlLnJlbW92ZUNsYXNzKCJkcmFnZ2luZyIpfX0pfSxIPWU9PntsZXQgYT1bXTtjb25zdCBzPWUucGFyZW50cygiLm1lc3NpYS10YWJzLXBhbmVsIikuZmluZCgnW3JvbGU9InRhYnBhbmVsIl0nKS5hdHRyKCJpZCIpLm1hdGNoKC9zZWdtZW50LSguKyktc2x1Zy8pWzFdO2ZvcihsZXQgZT0wO2U8ci5maWx0ZXJzQ29uc3RydWN0ZWQubGVuZ3RoO2UrKylyLmZpbHRlcnNDb25zdHJ1Y3RlZFtlXS5zZWdtZW50U2x1ZyE9PXMmJmEucHVzaChyLmZpbHRlcnNDb25zdHJ1Y3RlZFtlXSk7Zm9yKGxldCByPTA7cjxlLmxlbmd0aDtyKyspe2xldCBsO2lmKHQoZVtyXSkuaGFzQ2xhc3MoInJlbW92ZWQiKSljb250aW51ZTtsPXZvaWQgMD09PXQoZVtyXSkuZGF0YSgia2V5Iik/UC5nZW5lcmF0ZSgpOnQoZVtyXSkuZGF0YSgia2V5Iik7c3dpdGNoKHQoZVtyXSkuZGF0YSgidHlwZSIpKXtjYXNlInN0cmluZyI6YS5wdXNoKHtpZDpsLHNlZ21lbnRTbHVnOnMsYnk6InN0cmluZyJ9KTticmVhaztjYXNlImNhdGVnb3J5IjphLnB1c2goe2lkOmwsc2VnbWVudFNsdWc6cyxzZWxlY3RBbGxDYXRBbGlhczp0KGVbcl0pLmZpbmQoIi5zZXR0aW5ncyAuc2VsZWN0LWFsbC1hbGlhcyBpbnB1dCIpLnZhbCgpLGJ5OiJjYXRlZ29yeSIsdmFsdWU6dChlW3JdKS5maW5kKCIuc2V0dGluZ3Mgc2VsZWN0IikudmFsKCl9KTticmVhaztjYXNlInByb3BlcnR5IjpsZXQgbj1bXSxpPXQoZVtyXSkuZmluZCgnLnNldHRpbmdzIGlucHV0W3R5cGU9ImNoZWNrYm94Il0nKTtmb3IodmFyIGM9MDtjPGkubGVuZ3RoO2MrKyl0KGlbY10pLnByb3AoImNoZWNrZWQiKSYmbi5wdXNoKHQoaVtjXSkudmFsKCkpO2EucHVzaCh7aWQ6bCxzZWdtZW50U2x1ZzpzLHNlbGVjdEFsbFByb3BBbGlhczp0KGVbcl0pLmZpbmQoIi5zZXR0aW5ncyAuc2VsZWN0LWFsbC1hbGlhcyBpbnB1dCIpLnZhbCgpLGJ5OiJwcm9wZXJ0eSIsdmFsdWU6bn0pfX1ELmhhc0NsYXNzKCJ1aS1kcmFnZ2FibGUiKSYmRC5hZGRDbGFzcygicmVtb3ZlLWJlZm9yZS1yZW5kZXIiKSxsKHtmaWx0ZXJzQ29uc3RydWN0ZWQ6YX0pfSxRPWFzeW5jIGU9PntpZihlLml0ZW0uaGFzQ2xhc3MoInNhdmVkIikpcmV0dXJuIFByb21pc2UucmVzb2x2ZShlKTtjb25zdCBhPWUuaXRlbS5vdXRlcldpZHRoKCk7ZS5pdGVtLmNzcyh7aGVpZ2h0OiIiLHdpZHRoOiIifSk7Y29uc3Qgcz1lLml0ZW0ub3V0ZXJXaWR0aCgpO3JldHVybiBlLml0ZW0uY3NzKHt3aWR0aDphfSkuYWRkQ2xhc3MoImRyb3BwZWQiKSxhd2FpdCBuZXcgUHJvbWlzZSgoKGEscik9PntlLml0ZW0uYW5pbWF0ZSh7d2lkdGg6cysicHgifSwyMDAsKGZ1bmN0aW9uKCl7dCh0aGlzKS5jc3Moe3dpZHRoOiIifSk7Y29uc3Qgcz1lLml0ZW0uZmluZCgiLnNldHRpbmdzIik7aWYoMD09PXMubGVuZ3RoKWUuaXRlbS5hZGRDbGFzcygic2F2ZWQiKSxhKGUpO2Vsc2V7cy5jc3MoImRpc3BsYXkiLCJibG9jayIpO2NvbnN0IHI9cy5vdXRlckhlaWdodCgpLGw9cy5vdXRlcldpZHRoKCk7cy5jc3Moe2hlaWdodDowLHdpZHRoOjB9KSxzLmFuaW1hdGUoe2hlaWdodDpyKyJweCIsd2lkdGg6bCsicHgifSwzMDAsKGZ1bmN0aW9uKCl7dCh0aGlzKS5jc3Moe2hlaWdodDoiIix3aWR0aDoiIn0pLGUuaXRlbS5hZGRDbGFzcygic2F2ZWQiKSxhKGUpfSkpfX0pKX0pKX0sVT0oKT0+e2lmKEIpe2lmKEkuc2VnbWVudC5sZW5ndGg+MCl7Y29uc3QgYT1bXTtmb3IoY29uc3RbZSx0XW9mIEkuc2VnbWVudC5lbnRyaWVzKCkpYS5wdXNoKHtuYW1lOmBzZWdtZW50LSR7dC52YWx1ZX0tc2x1Z2AsdGl0bGU6dC5sYWJlbCxjbGFzc05hbWU6InRhYiIsc2VnbWVudFNsdWc6dC52YWx1ZX0pO2NvbnN0IHM9UmVhY3QuY3JlYXRlRWxlbWVudCh3LHtjbGFzc05hbWU6Im1lc3NpYS10YWJzLXBhbmVsIixhY3RpdmVDbGFzczoiYWN0aXZlLXRhYiIsb3JpZW50YXRpb246Imhvcml6b250YWwiLGluaXRpYWxUYWJOYW1lOmFbMF0ubmFtZSx0YWJzOmF9LChlPT5SZWFjdC5jcmVhdGVFbGVtZW50KCJkaXYiLHsiZGF0YS10aXRsZSI6QSgiRHJvcCBpdGVtIGhlcmUuIiwibWVzc2lhIiksY2xhc3NOYW1lOiJtZXNzaWEtZHJvcC16b25lIGZpbHRlcnMtY29uc3RydWN0ZWQifSwoZT0+e2NvbnN0IGE9W107Zm9yKGNvbnN0W2Msbl1vZiByLmZpbHRlcnNDb25zdHJ1Y3RlZC5lbnRyaWVzKCkpaWYoZS5zZWdtZW50U2x1Zz09bi5zZWdtZW50U2x1Zylzd2l0Y2gobi5ieSl7Y2FzZSJzdHJpbmciOmEucHVzaChSZWFjdC5jcmVhdGVFbGVtZW50KHgse2NsYXNzTmFtZToibWVzc2lhLWNhcmQgbWVzc2lhLWZpbHRlciBkcm9wcGVkIHNhdmVkIixrZXk6YCR7bi5ieX0tJHtuLmlkfWAsImRhdGEtdHlwZSI6InN0cmluZyIsc2l6ZToic21hbGwifSxSZWFjdC5jcmVhdGVFbGVtZW50KCJkaXYiLHtjbGFzc05hbWU6Im1lc3NpYS1jYXJkLWNvbnRlbnQifSxSZWFjdC5jcmVhdGVFbGVtZW50KHAse2dhcDoyfSxSZWFjdC5jcmVhdGVFbGVtZW50KGgse2NsYXNzTmFtZToibW92ZSJ9LCLiiaEiKSxSZWFjdC5jcmVhdGVFbGVtZW50KGgse2NsYXNzTmFtZToiaGVhZGluZyJ9LEEoImJ5IFN0cmluZyIsIm1lc3NpYSIpKSxSZWFjdC5jcmVhdGVFbGVtZW50KGgse2NsYXNzTmFtZToicmVtb3ZlIixvbkNsaWNrOnF9KSkpKSk7YnJlYWs7Y2FzZSJjYXRlZ29yeSI6dmFyIHM9ci5zZWxlY3RBbGxDYXRBbGlhczt2b2lkIDAhPT1yLmZpbHRlcnNDb25zdHJ1Y3RlZFtjXS5zZWxlY3RBbGxDYXRBbGlhcyYmKHM9ci5maWx0ZXJzQ29uc3RydWN0ZWRbY10uc2VsZWN0QWxsQ2F0QWxpYXMpO2NvbnN0IGU9UmVhY3QuY3JlYXRlRWxlbWVudCh4LHtjbGFzc05hbWU6Im1lc3NpYS1jYXJkIG1lc3NpYS1maWx0ZXIgY2F0ZWdvcnkgZHJvcHBlZCBzYXZlZCIsa2V5OmAke24uYnl9LSR7bi5pZH1gLCJkYXRhLXR5cGUiOiJjYXRlZ29yeSIsc2l6ZToic21hbGwifSxSZWFjdC5jcmVhdGVFbGVtZW50KCJkaXYiLHtjbGFzc05hbWU6Im1lc3NpYS1jYXJkLWNvbnRlbnQifSxSZWFjdC5jcmVhdGVFbGVtZW50KHAse2dhcDoyfSxSZWFjdC5jcmVhdGVFbGVtZW50KGgse2NsYXNzTmFtZToibW92ZSJ9LCLiiaEiKSxSZWFjdC5jcmVhdGVFbGVtZW50KGgse2NsYXNzTmFtZToiaGVhZGluZyJ9LEEoImJ5IENhdGVnb3J5IiwibWVzc2lhIikpLFJlYWN0LmNyZWF0ZUVsZW1lbnQoaCx7Y2xhc3NOYW1lOiJyZW1vdmUiLG9uQ2xpY2s6cX0pKSxSZWFjdC5jcmVhdGVFbGVtZW50KCJkaXYiLHtjbGFzc05hbWU6InNldHRpbmdzIn0sUmVhY3QuY3JlYXRlRWxlbWVudCgiZGl2Iix7Y2xhc3NOYW1lOiJzZXR0aW5ncy1pbm5lciJ9LFJlYWN0LmNyZWF0ZUVsZW1lbnQoImRpdiIse2NsYXNzTmFtZToic2VsZWN0LWFsbC1hbGlhcyJ9LFJlYWN0LmNyZWF0ZUVsZW1lbnQoUyx7bGFiZWw6QSgiU2V0IG5hbWUgZm9yIFNlbGVjdCBBbGwgb3B0aW9uIiwibWVzc2lhIiksY2xhc3NOYW1lOiJhbGlhcyIsdHlwZToidGV4dCIsdmFsdWU6cyxvbkNoYW5nZTplPT57bGV0IHQ9ci5maWx0ZXJzQ29uc3RydWN0ZWQ7ZGVsZXRlIHIuZmlsdGVyc0NvbnN0cnVjdGVkLHRbY10uc2VsZWN0QWxsQ2F0QWxpYXM9ZSxsKHtmaWx0ZXJzQ29uc3RydWN0ZWQ6dH0pfX0pKSxSZWFjdC5jcmVhdGVFbGVtZW50KGIse3ZhbHVlOnIuZmlsdGVyc0NvbnN0cnVjdGVkW2NdLnZhbHVlLG9uQ2hhbmdlOmU9PntsZXQgdD1yLmZpbHRlcnNDb25zdHJ1Y3RlZDtkZWxldGUgci5maWx0ZXJzQ29uc3RydWN0ZWQsdFtjXS52YWx1ZT1lLGwoe2ZpbHRlcnNDb25zdHJ1Y3RlZDp0fSl9LG9wdGlvbnM6SS5jYXRlZ29yeX0pKSkpKTthLnB1c2goZSk7YnJlYWs7Y2FzZSJwcm9wZXJ0eSI6Y29uc3QgaT1bXTtmb3IoY29uc3RbZSxhXW9mIEkucHJvcGVydHkuZW50cmllcygpKXtjb25zdCBlPVJlYWN0LmNyZWF0ZUVsZW1lbnQoeSx7a2V5OmEudmFsdWUsdmFsdWU6YS52YWx1ZSxsYWJlbDphLmxhYmVsLGNoZWNrZWQ6ci5maWx0ZXJzQ29uc3RydWN0ZWRbY10udmFsdWUuaW5jbHVkZXMoYS52YWx1ZSksb25DaGFuZ2U6ZT0+e2xldCBhPXIuZmlsdGVyc0NvbnN0cnVjdGVkO2RlbGV0ZSByLmZpbHRlcnNDb25zdHJ1Y3RlZCxhW2NdLnZhbHVlPVtdLGU9dChldmVudC50YXJnZXQpLnBhcmVudHMoIi5zZXR0aW5ncyIpLmZpbmQoJ2lucHV0W3R5cGU9ImNoZWNrYm94Il06Y2hlY2tlZCcpO2Zvcih2YXIgcz0wO3M8ZS5sZW5ndGg7cysrKWFbY10udmFsdWUucHVzaCh0KGVbc10pLnZhbCgpKTtsKHtmaWx0ZXJzQ29uc3RydWN0ZWQ6YX0pfX0pO2kucHVzaChlKX1zPXIuc2VsZWN0QWxsQ2F0QWxpYXMsdm9pZCAwIT09ci5maWx0ZXJzQ29uc3RydWN0ZWRbY10uc2VsZWN0QWxsUHJvcEFsaWFzJiYocz1yLmZpbHRlcnNDb25zdHJ1Y3RlZFtjXS5zZWxlY3RBbGxQcm9wQWxpYXMpLGEucHVzaChSZWFjdC5jcmVhdGVFbGVtZW50KHgse2NsYXNzTmFtZToibWVzc2lhLWNhcmQgbWVzc2lhLWZpbHRlciBwcm9wZXJ0eSBkcm9wcGVkIHNhdmVkIixrZXk6YCR7bi5ieX0tJHtuLmlkfWAsImRhdGEtdHlwZSI6InByb3BlcnR5IixzaXplOiJzbWFsbCJ9LFJlYWN0LmNyZWF0ZUVsZW1lbnQoImRpdiIse2NsYXNzTmFtZToibWVzc2lhLWNhcmQtY29udGVudCJ9LFJlYWN0LmNyZWF0ZUVsZW1lbnQocCx7Z2FwOjJ9LFJlYWN0LmNyZWF0ZUVsZW1lbnQoaCx7Y2xhc3NOYW1lOiJtb3ZlIn0sIuKJoSIpLFJlYWN0LmNyZWF0ZUVsZW1lbnQoaCx7Y2xhc3NOYW1lOiJoZWFkaW5nIn0sQSgiYnkgUHJvcGVydHkiLCJtZXNzaWEiKSksUmVhY3QuY3JlYXRlRWxlbWVudChoLHtjbGFzc05hbWU6InJlbW92ZSIsb25DbGljazpxfSkpLFJlYWN0LmNyZWF0ZUVsZW1lbnQoImRpdiIse2NsYXNzTmFtZToic2V0dGluZ3MifSxSZWFjdC5jcmVhdGVFbGVtZW50KCJkaXYiLHtjbGFzc05hbWU6InNlbGVjdC1hbGwtYWxpYXMifSxSZWFjdC5jcmVhdGVFbGVtZW50KFMse2xhYmVsOkEoIlNldCBuYW1lIGZvciBTZWxlY3QgQWxsIG9wdGlvbiIsIm1lc3NpYSIpLGNsYXNzTmFtZToiYWxpYXMiLHR5cGU6InRleHQiLHZhbHVlOnMsb25DaGFuZ2U6ZT0+e2xldCB0PXIuZmlsdGVyc0NvbnN0cnVjdGVkO2RlbGV0ZSByLmZpbHRlcnNDb25zdHJ1Y3RlZCx0W2NdLnNlbGVjdEFsbFByb3BBbGlhcz1lLGwoe2ZpbHRlcnNDb25zdHJ1Y3RlZDp0fSl9fSkpLFJlYWN0LmNyZWF0ZUVsZW1lbnQoImRpdiIse2NsYXNzTmFtZToicHJvcGVydGllcyJ9LGkpKSkpKX1yZXR1cm4gYX0pKGUpKSkpO3JldHVybiBSZWFjdC5jcmVhdGVFbGVtZW50KEMse2tleToibWVzc2lhLWJsb2NrLXBsYWNlaG9sZGVyIn0sUmVhY3QuY3JlYXRlRWxlbWVudCgiZGl2Iix7Y2xhc3NOYW1lOiJtZXNzaWEtYmxvY2siLGtleToibWVzc2lhLWJsb2NrIixyZWY6V30sUmVhY3QuY3JlYXRlRWxlbWVudCgiZGl2Iix7Y2xhc3NOYW1lOiJmaWx0ZXJzLXRlbXBsYXRlcyJ9LCgoKT0+e2NvbnN0IHQ9ZS5ibG9ja3MuZ2V0QmxvY2tUeXBlKF8pLGE9W1JlYWN0LmNyZWF0ZUVsZW1lbnQoYyx7a2V5OiJ0aXAifSxSZWFjdC5jcmVhdGVFbGVtZW50KCJoNCIsbnVsbCx0LnRpdGxlKSxSZWFjdC5jcmVhdGVFbGVtZW50KHYse2lzRGlzbWlzc2libGU6ITEsc3RhdHVzOiJ3YXJuaW5nIn0sUmVhY3QuY3JlYXRlRWxlbWVudCgicCIsbnVsbCxBKCdUaGUgbGlzdCBvZiB0ZXJtcyBpcyBzdWJvcmRpbmF0ZSB0byB0aGUgdmFsdWUgb2YgdGhlICJFbXB0eSBjYXRlZ29yeS9wcm9wZXJ0eSB0ZXJtcyIgb3B0aW9uLiBUaGlzIGxpc3Qgb2YgY2F0ZWdvcmllcyBjb250YWlucyBhbGwgdGhlIGtleSB0ZXJtcyBvZiB0aGUgQ2F0ZWdvcnkgdGF4b25vbXksIGkuZS4gdGVybXMgdGhhdCBoYXZlIGRlc2NlbmRhbnRzLiBJbiB0aGUgZnJvbnRlbmQsIHRoaXMgbGlzdCB3aWxsIHNob3cgYWxsIHRoZSBkZXNjZW5kYW50cyBvZiB0aGUgdGVybSBzZWxlY3RlZCBoZXJlLicsIm1lc3NpYSIpKSkpXTtpZihhLnB1c2goUmVhY3QuY3JlYXRlRWxlbWVudCh4LHtjbGFzc05hbWU6Im1lc3NpYS1jYXJkIG1lc3NpYS1maWx0ZXIiLGtleToidG1wbC1ieS1zdHJpbmciLCJkYXRhLXR5cGUiOiJzdHJpbmciLHNpemU6InNtYWxsIn0sUmVhY3QuY3JlYXRlRWxlbWVudCgiZGl2Iix7Y2xhc3NOYW1lOiJtZXNzaWEtY2FyZC1jb250ZW50In0sUmVhY3QuY3JlYXRlRWxlbWVudChwLHtnYXA6Mn0sUmVhY3QuY3JlYXRlRWxlbWVudChoLHtjbGFzc05hbWU6Im1vdmUifSwi4omhIiksUmVhY3QuY3JlYXRlRWxlbWVudChoLHtjbGFzc05hbWU6ImhlYWRpbmcifSxBKCJieSBTdHJpbmciLCJtZXNzaWEiKSksUmVhY3QuY3JlYXRlRWxlbWVudChoLHtjbGFzc05hbWU6InJlbW92ZSIsb25DbGljazpxfSkpKSkpLEkuY2F0ZWdvcnkubGVuZ3RoPjAmJmEucHVzaChSZWFjdC5jcmVhdGVFbGVtZW50KHgse2NsYXNzTmFtZToibWVzc2lhLWNhcmQgbWVzc2lhLWZpbHRlciBjYXRlZ29yeSIsa2V5OiJ0bXBsLWJ5LWNhdGVnb3J5IiwiZGF0YS10eXBlIjoiY2F0ZWdvcnkiLHNpemU6InNtYWxsIn0sUmVhY3QuY3JlYXRlRWxlbWVudCgiZGl2Iix7Y2xhc3NOYW1lOiJtZXNzaWEtY2FyZC1jb250ZW50In0sUmVhY3QuY3JlYXRlRWxlbWVudChwLHtnYXA6Mn0sUmVhY3QuY3JlYXRlRWxlbWVudChoLHtjbGFzc05hbWU6Im1vdmUifSwi4omhIiksUmVhY3QuY3JlYXRlRWxlbWVudChoLHtjbGFzc05hbWU6ImhlYWRpbmcifSxBKCJieSBDYXRlZ29yeSIsIm1lc3NpYSIpKSxSZWFjdC5jcmVhdGVFbGVtZW50KGgse2NsYXNzTmFtZToicmVtb3ZlIixvbkNsaWNrOnF9KSksUmVhY3QuY3JlYXRlRWxlbWVudCgiZGl2Iix7Y2xhc3NOYW1lOiJzZXR0aW5ncyJ9LFJlYWN0LmNyZWF0ZUVsZW1lbnQoImRpdiIse2NsYXNzTmFtZToic2V0dGluZ3MtaW5uZXIifSxSZWFjdC5jcmVhdGVFbGVtZW50KCJkaXYiLHtjbGFzc05hbWU6InNlbGVjdC1hbGwtYWxpYXMifSxSZWFjdC5jcmVhdGVFbGVtZW50KFMse2xhYmVsOkEoIlNldCBuYW1lIGZvciBTZWxlY3QgQWxsIG9wdGlvbiIsIm1lc3NpYSIpLGNsYXNzTmFtZToiYWxpYXMiLHR5cGU6InRleHQiLHZhbHVlOnIuc2VsZWN0QWxsQ2F0QWxpYXN9KSksUmVhY3QuY3JlYXRlRWxlbWVudChiLHt2YWx1ZTpJLmNhdGVnb3J5WzBdLnZhbHVlLG9wdGlvbnM6SS5jYXRlZ29yeX0pKSkpKSksSS5wcm9wZXJ0eS5sZW5ndGg+MCl7Y29uc3QgZT1bXTtmb3IoY29uc3RbdCxhXW9mIEkucHJvcGVydHkuZW50cmllcygpKWUucHVzaChSZWFjdC5jcmVhdGVFbGVtZW50KHkse2tleTphLnZhbHVlLHZhbHVlOmEudmFsdWUsbGFiZWw6YS5sYWJlbCxvbkNoYW5nZTplPT57bGV0IHQ9ci5maWx0ZXJzQ29uc3RydWN0ZWQ7aWYoZGVsZXRlIHIuZmlsdGVyc0NvbnN0cnVjdGVkLGUpdFtpbmRleF0udmFsdWUucHVzaChldmVudC50YXJnZXQudmFsdWUpO2Vsc2V7Y29uc3QgZT10W2luZGV4XS52YWx1ZS5pbmRleE9mKGV2ZW50LnRhcmdldC52YWx1ZSk7ZGVsZXRlIHRbaW5kZXhdLnZhbHVlW2VdfWwoe2ZpbHRlcnNDb25zdHJ1Y3RlZDp0fSl9fSkpO2EucHVzaChSZWFjdC5jcmVhdGVFbGVtZW50KHgse2NsYXNzTmFtZToibWVzc2lhLWNhcmQgbWVzc2lhLWZpbHRlciBwcm9wZXJ0eSIsa2V5OiJ0bXBsLWJ5LXByb3BlcnR5IiwiZGF0YS10eXBlIjoicHJvcGVydHkiLHNpemU6InNtYWxsIn0sUmVhY3QuY3JlYXRlRWxlbWVudCgiZGl2Iix7Y2xhc3NOYW1lOiJtZXNzaWEtY2FyZC1jb250ZW50In0sUmVhY3QuY3JlYXRlRWxlbWVudChwLHtnYXA6Mn0sUmVhY3QuY3JlYXRlRWxlbWVudChoLHtjbGFzc05hbWU6Im1vdmUifSwi4omhIiksUmVhY3QuY3JlYXRlRWxlbWVudChoLHtjbGFzc05hbWU6ImhlYWRpbmcifSxBKCJieSBQcm9wZXJ0eSIsIm1lc3NpYSIpKSxSZWFjdC5jcmVhdGVFbGVtZW50KGgse2NsYXNzTmFtZToicmVtb3ZlIixvbkNsaWNrOnF9KSksUmVhY3QuY3JlYXRlRWxlbWVudCgiZGl2Iix7Y2xhc3NOYW1lOiJzZXR0aW5ncyJ9LFJlYWN0LmNyZWF0ZUVsZW1lbnQoImRpdiIse2NsYXNzTmFtZToic2VsZWN0LWFsbC1hbGlhcyJ9LFJlYWN0LmNyZWF0ZUVsZW1lbnQoUyx7bGFiZWw6QSgiU2V0IG5hbWUgZm9yIFNlbGVjdCBBbGwgb3B0aW9uIiwibWVzc2lhIiksdHlwZToidGV4dCIsdmFsdWU6ci5zZWxlY3RBbGxQcm9wQWxpYXN9KSksUmVhY3QuY3JlYXRlRWxlbWVudCgiZGl2Iix7Y2xhc3NOYW1lOiJwcm9wZXJ0aWVzIn0sZSkpKSkpfXJldHVybiBhfSkoKSkscykpfXJldHVybiBSZWFjdC5jcmVhdGVFbGVtZW50KEMse2tleToibWVzc2lhLWJsb2NrLXBsYWNlaG9sZGVyIixsYWJlbDpBKCJZb3UgaGF2ZSBubyBzZWdtZW50cy4gQ3JlYXRlIG9uZS4iLCJtZXNzaWEiKX0sUmVhY3QuY3JlYXRlRWxlbWVudCgiZGl2Iix7Y2xhc3NOYW1lOiJtZXNzaWEtYmxvY2siLGtleToibWVzc2lhLWJsb2NrIixyZWY6V30pKX1yZXR1cm4gUmVhY3QuY3JlYXRlRWxlbWVudChDLHtrZXk6Im1lc3NpYS1ibG9jay1wbGFjZWhvbGRlciJ9LFJlYWN0LmNyZWF0ZUVsZW1lbnQoImRpdiIse2NsYXNzTmFtZToibWVzc2lhLWJsb2NrIixrZXk6Im1lc3NpYS1ibG9jayIscmVmOld9LFJlYWN0LmNyZWF0ZUVsZW1lbnQoTixudWxsKSkpfTtyZXR1cm4gaSgoKCk9PntsZXQgdD0hMDtyZXR1cm4gQnx8ci5pc0V4YW1wbGV8fChhc3luYygpPT5hd2FpdCBzKHtwYXRoOiJtZXNzaWEvdjEvYmxvY2stc2VhcmNoLXNuaXBwZXQiLG1ldGhvZDoiUE9TVCIsZGF0YTp7Y3VycmVudEF0dHJzOnJ9fSkudGhlbigodD0+KDA9PT10LnRlcm1zLnNlZ21lbnQubGVuZ3RoP2UuZGF0YS5kaXNwYXRjaCgiY29yZS9ub3RpY2VzIikuY3JlYXRlTm90aWNlKCJlcnJvciIsQSgiTWVzc2lhIFNlYXJjaCBTbmlwcGV0OiBObyB0ZXJtcyB3ZXJlIGZvdW5kIGluIHRheG9ub215IFNlZ21lbnQuIFVuaXQgb3BlcmF0aW9uIGlzIG5vdCBwb3NzaWJsZS4iLCJtZXNzaWEiKSx7aXNEaXNtaXNzaWJsZTohMH0pOigwPT09dC50ZXJtcy5jYXRlZ29yeS5sZW5ndGgmJmUuZGF0YS5kaXNwYXRjaCgiY29yZS9ub3RpY2VzIikuY3JlYXRlTm90aWNlKCJlcnJvciIsQSgiTWVzc2lhIFNlYXJjaCBTbmlwcGV0IFRlcm1zOiBObyB0ZXJtcyB3ZXJlIGZvdW5kIGluIHRheG9ub215IENhdGVnb3J5LiBBZGQgc29tZSB0byB1c2UgZmlsdGVyLiIsIm1lc3NpYSIpLHtpc0Rpc21pc3NpYmxlOiEwfSksMD09PXQudGVybXMucHJvcGVydHkubGVuZ3RoJiZlLmRhdGEuZGlzcGF0Y2goImNvcmUvbm90aWNlcyIpLmNyZWF0ZU5vdGljZSgiZXJyb3IiLEEoIk1lc3NpYSBTZWFyY2ggU25pcHBldCBUZXJtczogTm8gdGVybXMgd2VyZSBmb3VuZCBpbiB0YXhvbm9teSBQcm9wZXJ0eS4gQWRkIHNvbWUgdG8gdXNlIGZpbHRlci4iLCJtZXNzaWEiKSx7aXNEaXNtaXNzaWJsZTohMH0pKSx0KSkpLmNhdGNoKCh0PT57ZS5kYXRhLmRpc3BhdGNoKCJjb3JlL25vdGljZXMiKS5jcmVhdGVOb3RpY2UoImVycm9yIixBKCJBbiBlcnJvciBvY2N1cnJlZCB3aGlsZSByZWNlaXZpbmcgZGF0YSBmcm9tIHRoZSBzZXJ2ZXIgZm9yIFNlYXJjaCBzbmlwcGV0IGJsb2NrIiwibWVzc2lhIikse2lzRGlzbWlzc2libGU6ITB9KX0pKSkoKS50aGVuKChlPT57dCYmKGwoe2ZpbHRlcnNDb25zdHJ1Y3RlZDplLnZhbGlkQXR0cnMuZmlsdGVyc0NvbnN0cnVjdGVkfSksVihlLnRlcm1zKSxGKCEwKSl9KSksKCk9Pnt0PSExfX0pLFtCXSksaSgoKCk9PntPfHxyLmlzRXhhbXBsZXx8dChXLmN1cnJlbnQpLmZpbmQoIi5maWx0ZXJzLWNvbnN0cnVjdGVkIikuc29ydGFibGUoImRlc3Ryb3kiKX0pLFtPXSksaSgoKCk9PntpZigwPT09RC5sZW5ndGgpcmV0dXJuO2NvbnN0IGU9dChXLmN1cnJlbnQpLmZpbmQoIi5maWx0ZXJzLWNvbnN0cnVjdGVkIC5tZXNzaWEtZmlsdGVyIik7SChlKX0pLFtEXSksaSgoKCk9PntuZXcgTXV0YXRpb25PYnNlcnZlcigoKGUsYSk9Pntmb3IoY29uc3QgYSBvZiBlKWlmKCJjaGlsZExpc3QiPT09YS50eXBlJiZhLmFkZGVkTm9kZXMubGVuZ3RoPj0xKWZvcihsZXQgZT0wO2U8YS5hZGRlZE5vZGVzLmxlbmd0aDtlKyspe3QoYS5hZGRlZE5vZGVzW2VdKS5maW5kKCIuZmlsdGVycy1jb25zdHJ1Y3RlZCIpLmxlbmd0aD4wJiZMKCl9fSkpLm9ic2VydmUoZG9jdW1lbnQucXVlcnlTZWxlY3RvcigiYm9keSIpLHthdHRyaWJ1dGVzOiExLGNoaWxkTGlzdDohMCxzdWJ0cmVlOiEwfSl9KSxbXSksKCgpPT57aWYoci5pc0V4YW1wbGUpcmV0dXJuIHo7e0QuaGFzQ2xhc3MoInJlbW92ZS1iZWZvcmUtcmVuZGVyIikmJkQucmVtb3ZlKCk7bGV0IGU9W01dO2NvbnN0IHQ9W1JlYWN0LmNyZWF0ZUVsZW1lbnQoZCx7a2V5OiJpbnNwZWN0b3IifSxSZWFjdC5jcmVhdGVFbGVtZW50KGcse3RpdGxlOkEoIlNldHRpbmdzIiwibWVzc2lhIil9LFJlYWN0LmNyZWF0ZUVsZW1lbnQoZix7bGFiZWw6QSgiU2hvdyBvbiBmcm9udCBudW1iZXIgb2Ygb2JqZWN0cyBwZXIgdGVybS4iLCJtZXNzaWEiKSxjaGVja2VkOnIud2l0aENvdW50LG9uQ2hhbmdlOmU9PntsKHt3aXRoQ291bnQ6ZX0pfX0pKSksUmVhY3QuY3JlYXRlRWxlbWVudCh1LHtrZXk6ImJsb2NrIn0sUmVhY3QuY3JlYXRlRWxlbWVudChFLHtsYWJlbDpBKCJPcHRpb25zIiwibWVzc2lhIil9LFJlYWN0LmNyZWF0ZUVsZW1lbnQoUix7bGFiZWw6QShPPyJQcmV2aWV3IjoiRWRpdCIsIm1lc3NpYSIpLGljb246Tz8idmlzaWJpbGl0eSI6ImVkaXQiLG9uQ2xpY2s6KCk9PnskKCFPKX19KSkpXTtyZXR1cm4gTz8odC5wdXNoKFUoKSksVD0hMSk6KFR8fChUPVJlYWN0LmNyZWF0ZUVsZW1lbnQoImRpdiIse2NsYXNzTmFtZToibWVzc2lhLWJsb2NrIixrZXk6Im1lc3NpYS1ibG9jayIscmVmOld9LFJlYWN0LmNyZWF0ZUVsZW1lbnQoayx7a2V5OiJibG9jay1wcmV2aWV3In0sUmVhY3QuY3JlYXRlRWxlbWVudChtLHtibG9jazpfLGF0dHJpYnV0ZXM6cix1cmxRdWVyeUFyZ3M6e2lzUHJldmlldzohMH19KSkpKSx0LnB1c2goVCkpLFJlYWN0LmNyZWF0ZUVsZW1lbnQoImRpdiIse2NsYXNzTmFtZTplLmpvaW4oIiAiKX0sdCl9fSkoKX0sc2F2ZTpmdW5jdGlvbihlKXtyZXR1cm4gbnVsbH19KX0od2luZG93LndwLGpRdWVyeSl9LDQ2NzA6ZnVuY3Rpb24oZSx0LGEpeyJ1c2Ugc3RyaWN0IjtlLmV4cG9ydHM9YSg1NjA3KX0sOTgyOTpmdW5jdGlvbihlLHQsYSl7InVzZSBzdHJpY3QiO3ZhciBzLHIsbCxjPWEoODk0Niksbj0iMDEyMzQ1Njc4OWFiY2RlZmdoaWprbG1ub3BxcnN0dXZ3eHl6QUJDREVGR0hJSktMTU5PUFFSU1RVVldYWVpfLSI7ZnVuY3Rpb24gaSgpe2w9ITF9ZnVuY3Rpb24gbyhlKXtpZihlKXtpZihlIT09cyl7aWYoZS5sZW5ndGghPT1uLmxlbmd0aCl0aHJvdyBuZXcgRXJyb3IoIkN1c3RvbSBhbHBoYWJldCBmb3Igc2hvcnRpZCBtdXN0IGJlICIrbi5sZW5ndGgrIiB1bmlxdWUgY2hhcmFjdGVycy4gWW91IHN1Ym1pdHRlZCAiK2UubGVuZ3RoKyIgY2hhcmFjdGVyczogIitlKTt2YXIgdD1lLnNwbGl0KCIiKS5maWx0ZXIoKGZ1bmN0aW9uKGUsdCxhKXtyZXR1cm4gdCE9PWEubGFzdEluZGV4T2YoZSl9KSk7aWYodC5sZW5ndGgpdGhyb3cgbmV3IEVycm9yKCJDdXN0b20gYWxwaGFiZXQgZm9yIHNob3J0aWQgbXVzdCBiZSAiK24ubGVuZ3RoKyIgdW5pcXVlIGNoYXJhY3RlcnMuIFRoZXNlIGNoYXJhY3RlcnMgd2VyZSBub3QgdW5pcXVlOiAiK3Quam9pbigiLCAiKSk7cz1lLGkoKX19ZWxzZSBzIT09biYmKHM9bixpKCkpfWZ1bmN0aW9uIG0oKXtyZXR1cm4gbHx8KGw9ZnVuY3Rpb24oKXtzfHxvKG4pO2Zvcih2YXIgZSx0PXMuc3BsaXQoIiIpLGE9W10scj1jLm5leHRWYWx1ZSgpO3QubGVuZ3RoPjA7KXI9Yy5uZXh0VmFsdWUoKSxlPU1hdGguZmxvb3Iocip0Lmxlbmd0aCksYS5wdXNoKHQuc3BsaWNlKGUsMSlbMF0pO3JldHVybiBhLmpvaW4oIiIpfSgpKX1lLmV4cG9ydHM9e2dldDpmdW5jdGlvbigpe3JldHVybiBzfHxufSxjaGFyYWN0ZXJzOmZ1bmN0aW9uKGUpe3JldHVybiBvKGUpLHN9LHNlZWQ6ZnVuY3Rpb24oZSl7Yy5zZWVkKGUpLHIhPT1lJiYoaSgpLHI9ZSl9LGxvb2t1cDpmdW5jdGlvbihlKXtyZXR1cm4gbSgpW2VdfSxzaHVmZmxlZDptfX0sNDgwOmZ1bmN0aW9uKGUsdCxhKXsidXNlIHN0cmljdCI7dmFyIHMscixsPWEoODQxNik7YSg5ODI5KTtlLmV4cG9ydHM9ZnVuY3Rpb24oZSl7dmFyIHQ9IiIsYT1NYXRoLmZsb29yKC4wMDEqKERhdGUubm93KCktMTU2Nzc1MjgwMjA2MikpO3JldHVybiBhPT09cj9zKys6KHM9MCxyPWEpLHQrPWwoNyksdCs9bChlKSxzPjAmJih0Kz1sKHMpKSx0Kz1sKGEpfX0sODQxNjpmdW5jdGlvbihlLHQsYSl7InVzZSBzdHJpY3QiO3ZhciBzPWEoOTgyOSkscj1hKDM3NjYpLGw9YSgyOTYpO2UuZXhwb3J0cz1mdW5jdGlvbihlKXtmb3IodmFyIHQsYT0wLGM9IiI7IXQ7KWMrPWwocixzLmdldCgpLDEpLHQ9ZTxNYXRoLnBvdygxNixhKzEpLGErKztyZXR1cm4gY319LDU2MDc6ZnVuY3Rpb24oZSx0LGEpeyJ1c2Ugc3RyaWN0Ijt2YXIgcz1hKDk4MjkpLHI9YSg0ODApLGw9YSgxMDgyKSxjPWEoNTYzNil8fDA7ZnVuY3Rpb24gbigpe3JldHVybiByKGMpfWUuZXhwb3J0cz1uLGUuZXhwb3J0cy5nZW5lcmF0ZT1uLGUuZXhwb3J0cy5zZWVkPWZ1bmN0aW9uKHQpe3JldHVybiBzLnNlZWQodCksZS5leHBvcnRzfSxlLmV4cG9ydHMud29ya2VyPWZ1bmN0aW9uKHQpe3JldHVybiBjPXQsZS5leHBvcnRzfSxlLmV4cG9ydHMuY2hhcmFjdGVycz1mdW5jdGlvbihlKXtyZXR1cm4gdm9pZCAwIT09ZSYmcy5jaGFyYWN0ZXJzKGUpLHMuc2h1ZmZsZWQoKX0sZS5leHBvcnRzLmlzVmFsaWQ9bH0sMTA4MjpmdW5jdGlvbihlLHQsYSl7InVzZSBzdHJpY3QiO3ZhciBzPWEoOTgyOSk7ZS5leHBvcnRzPWZ1bmN0aW9uKGUpe3JldHVybiEoIWV8fCJzdHJpbmciIT10eXBlb2YgZXx8ZS5sZW5ndGg8NikmJiFuZXcgUmVnRXhwKCJbXiIrcy5nZXQoKS5yZXBsYWNlKC9bfFxce30oKVtcXV4kKyo/Li1dL2csIlxcJCYiKSsiXSIpLnRlc3QoZSl9fSwzNzY2OmZ1bmN0aW9uKGUpeyJ1c2Ugc3RyaWN0Ijt2YXIgdCxhPSJvYmplY3QiPT10eXBlb2Ygd2luZG93JiYod2luZG93LmNyeXB0b3x8d2luZG93Lm1zQ3J5cHRvKTt0PWEmJmEuZ2V0UmFuZG9tVmFsdWVzP2Z1bmN0aW9uKGUpe3JldHVybiBhLmdldFJhbmRvbVZhbHVlcyhuZXcgVWludDhBcnJheShlKSl9OmZ1bmN0aW9uKGUpe2Zvcih2YXIgdD1bXSxhPTA7YTxlO2ErKyl0LnB1c2goTWF0aC5mbG9vcigyNTYqTWF0aC5yYW5kb20oKSkpO3JldHVybiB0fSxlLmV4cG9ydHM9dH0sODk0NjpmdW5jdGlvbihlKXsidXNlIHN0cmljdCI7dmFyIHQ9MTtlLmV4cG9ydHM9e25leHRWYWx1ZTpmdW5jdGlvbigpe3JldHVybih0PSg5MzAxKnQrNDkyOTcpJTIzMzI4MCkvMjMzMjgwfSxzZWVkOmZ1bmN0aW9uKGUpe3Q9ZX19fSw1NjM2OmZ1bmN0aW9uKGUpeyJ1c2Ugc3RyaWN0IjtlLmV4cG9ydHM9MH0sMjk2OmZ1bmN0aW9uKGUpe2UuZXhwb3J0cz1mdW5jdGlvbihlLHQsYSl7Zm9yKHZhciBzPSgyPDxNYXRoLmxvZyh0Lmxlbmd0aC0xKS9NYXRoLkxOMiktMSxyPS1+KDEuNipzKmEvdC5sZW5ndGgpLGw9IiI7Oylmb3IodmFyIGM9ZShyKSxuPXI7bi0tOylpZigobCs9dFtjW25dJnNdfHwiIikubGVuZ3RoPT09K2EpcmV0dXJuIGx9fX0sdD17fTtmdW5jdGlvbiBhKHMpe3ZhciByPXRbc107aWYodm9pZCAwIT09cilyZXR1cm4gci5leHBvcnRzO3ZhciBsPXRbc109e2V4cG9ydHM6e319O3JldHVybiBlW3NdKGwsbC5leHBvcnRzLGEpLGwuZXhwb3J0c31hLm49ZnVuY3Rpb24oZSl7dmFyIHQ9ZSYmZS5fX2VzTW9kdWxlP2Z1bmN0aW9uKCl7cmV0dXJuIGUuZGVmYXVsdH06ZnVuY3Rpb24oKXtyZXR1cm4gZX07cmV0dXJuIGEuZCh0LHthOnR9KSx0fSxhLmQ9ZnVuY3Rpb24oZSx0KXtmb3IodmFyIHMgaW4gdClhLm8odCxzKSYmIWEubyhlLHMpJiZPYmplY3QuZGVmaW5lUHJvcGVydHkoZSxzLHtlbnVtZXJhYmxlOiEwLGdldDp0W3NdfSl9LGEubz1mdW5jdGlvbihlLHQpe3JldHVybiBPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwoZSx0KX0sZnVuY3Rpb24oKXsidXNlIHN0cmljdCI7YSg4OTA4KX0oKX0oKTsiO3M6NDU6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEZpbGUAbmFtZXNwYWNlcyI7YTowOnt9czo0MzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcRmlsZQBpbmNsdWRlcyI7YTowOnt9czo0NDoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcRmlsZQBmdW5jdGlvbnMiO2E6MDp7fXM6NDQ6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEZpbGUAY29uc3RhbnRzIjthOjA6e31zOjQyOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGaWxlAGNsYXNzZXMiO2E6MDp7fXM6NDU6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEZpbGUAaW50ZXJmYWNlcyI7YTowOnt9czo0MToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcRmlsZQB0cmFpdHMiO2E6MDp7fXM6NDA6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEZpbGUAZW51bXMiO2E6MDp7fXM6NDM6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEZpbGUAbWV0YWRhdGEiO2E6MDp7fX0=";