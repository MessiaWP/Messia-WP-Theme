1702936349
waR3U4bTeM%3A6ffb71287149d1c9a47164b6f2b4c950-08b9bfa1ed1ffdf178376b71bb24a0e6
s:181448:"TzozMzoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGaWxlIjoxNDp7czo0MzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcRmlsZQBkb2NCbG9jayI7TjtzOjM5OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGaWxlAGhhc2giO3M6MzI6IjA4YjliZmExZWQxZmZkZjE3ODM3NmI3MWJiMjRhMGU2IjtzOjM5OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGaWxlAG5hbWUiO3M6MTI6Im1lbnUtcGFnZS5qcyI7czozOToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcRmlsZQBwYXRoIjtzOjM5OiJpbmNsdWRlcy9hc3NldHMvanMvYmFja2VuZC9tZW51LXBhZ2UuanMiO3M6NDE6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEZpbGUAc291cmNlIjtzOjEzNTE2MzoiLyoqKioqKi8gKGZ1bmN0aW9uKCkgeyAvLyB3ZWJwYWNrQm9vdHN0cmFwCi8qKioqKiovIAl2YXIgX193ZWJwYWNrX21vZHVsZXNfXyA9ICh7CgovKioqLyAiLi9zcmMvc2Nzcy9fYmFja2VuZC9tZW51LXBhZ2Uuc2NzcyI6Ci8qISoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiEqXAogICEqKiogLi9zcmMvc2Nzcy9fYmFja2VuZC9tZW51LXBhZ2Uuc2NzcyAqKiohCiAgXCoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKi8KLyoqKi8gKGZ1bmN0aW9uKF9fdW51c2VkX3dlYnBhY2tfbW9kdWxlLCBfX3dlYnBhY2tfZXhwb3J0c19fLCBfX3dlYnBhY2tfcmVxdWlyZV9fKSB7CgoidXNlIHN0cmljdCI7Cl9fd2VicGFja19yZXF1aXJlX18ucihfX3dlYnBhY2tfZXhwb3J0c19fKTsKLy8gZXh0cmFjdGVkIGJ5IG1pbmktY3NzLWV4dHJhY3QtcGx1Z2luCgoKLyoqKi8gfSksCgovKioqLyAiLi9zcmMvanMvX2JhY2tlbmQvZGVtby5qcyI6Ci8qISoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiEqXAogICEqKiogLi9zcmMvanMvX2JhY2tlbmQvZGVtby5qcyAqKiohCiAgXCoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKi8KLyoqKi8gKGZ1bmN0aW9uKG1vZHVsZSkgewoKLyoqCiAqIE1pY3JvIEFwcCBmb3IgZGVtbyBwYWNrYWdlcyBtYW5hZ2VtZW50LgogKi8KCm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKE1lc3NpYSwgJCkgewoKCXZhcgoJCWRlbW9feGhyX2luc3RhbGwgPSBudWxsLAoJCWRlbW9feGhyX2dldF9saXN0ID0gbnVsbCwKCQlkZW1vX3hocl9yZW1vdmUgPSBudWxsOwoKCWNvbnN0IGRlbW9BcHAgPSB7CgkJZGlhbG9nOiBmYWxzZSwKCQlkaWFsb2dFbDogZmFsc2UsCgkJZGVtb0RhdGE6IGZhbHNlLAoJCXRoZW1lTGljZW5jZUFjdGl2ZTogZmFsc2UsCgkJc2VsZWN0ZWQ6IFtdLAoJCWFjdGlvbnNTdGF0ZTogewoJCQlkZW1vQ2xvc2U6IHRydWUsCgkJCWRlbW9BZGQ6IGZhbHNlLAoJCQlkZW1vUmVtb3ZlOiBmYWxzZSwKCQkJZGVtb0luc3RhbGw6IGZhbHNlLAoJCX0sCgkJdGVtcGxhdGU6IHdwLnRlbXBsYXRlKCdkZW1vLW1hbmFnZScpLAoJCWluaXQ6IGZ1bmN0aW9uIChlKSB7CgkJCWxldAoJCQkJdG1wbCA9IGRlbW9BcHAudGVtcGxhdGUsCgkJCQl0aXRsZSA9ICQoJyN0YWJzJykuZGF0YSgnZ2VuZXJhbCcpLmRlbW8uZGVtb01hbmFnZURpYWxvZ1RpdGxlLAoJCQkJYnV0dG9uc0RpYWxvZyA9IFsKCQkJCQl7CgkJCQkJCXRleHQ6ICdDbG9zZScsCgkJCQkJCWlkOiAnZGVtby1jbG9zZScsCgkJCQkJCWNsaWNrOiBmdW5jdGlvbiAoZXZlbnQpIHsKCQkJCQkJCWRlbW9BcHAuZXZlbnRzLnJlbW92ZSgpOwoJCQkJCQkJdGhpcy5tZXNzaWFEaWFsb2cuY2xvc2UoKTsKCQkJCQkJfSwKCQkJCQl9LAoJCQkJCXsKCQkJCQkJdGV4dDogJ0FkZCcsCgkJCQkJCWlkOiAnZGVtby1hZGQnLAoJCQkJCQljbGljazogZGVtb0FwcC5ldmVudHMuYnV0dG9ucy5kZW1vQWRkLAoJCQkJCX0sCgkJCQkJewoJCQkJCQl0ZXh0OiAnUmVtb3ZlJywKCQkJCQkJaWQ6ICdkZW1vLXJlbW92ZScsCgkJCQkJCWNsaWNrOiBkZW1vQXBwLmV2ZW50cy5idXR0b25zLmRlbW9SZW1vdmUsCgkJCQkJfSwKCQkJCQl7CgkJCQkJCXRleHQ6ICdJbnN0YWxsJywKCQkJCQkJaWQ6ICdkZW1vLWluc3RhbGwnLAoJCQkJCQljbGljazogZGVtb0FwcC5ldmVudHMuYnV0dG9ucy5kZW1vSW5zdGFsbCwKCQkJCQl9LAoJCQkJXTsKCgkJCWRlbW9BcHAuZGlhbG9nRWwgPSB3aW5kb3cubWVzc2lhVmFycy5kaWFsb2cuaW5pdCh7CgkJCQlkaWFsb2dJZDogJ21lc3NpYS1kaWFsb2cnLAoJCQkJZGlhbG9nVGl0bGU6IHRpdGxlLAoJCQkJZGlhbG9nQ29udGVudDogdG1wbCh7CgkJCQkJZGVtb0xpc3Q6IGRlbW9BcHAuZGVtb0RhdGEsCgkJCQkJc2VsZWN0ZWQ6IGRlbW9BcHAuc2VsZWN0ZWQsCgkJCQkJdGhlbWVMaWNlbmNlQWN0aXZlOiBkZW1vQXBwLnRoZW1lTGljZW5jZUFjdGl2ZSwKCQkJCX0pLAoJCQkJYnV0dG9uczogYnV0dG9uc0RpYWxvZywKCQkJfSk7CgoJCQlkZW1vQXBwLmV2ZW50cy5hZGQoKTsKCQkJJChkZW1vQXBwLmRpYWxvZ0VsKS50cmlnZ2VyKCdtZXNzaWFDaGFuZ2VBY3Rpb25zU3RhdGUnKTsKCQkJZGVtb0FwcC51cGRhdGVEZW1vU3RhdGUoZmFsc2UpOwoKCQkJZGVtb0FwcC5kaWFsb2dFbC5tZXNzaWFEaWFsb2cub3BlbigpOwoJCX0sCgkJcmVuZGVyOiBmdW5jdGlvbiAoKSB7CgkJCWRlbW9BcHAuZGlhbG9nRWwubWVzc2lhRGlhbG9nLnNldENvbnRlbnQoCgkJCQlkZW1vQXBwLnRlbXBsYXRlKHsKCQkJCQlkZW1vTGlzdDogZGVtb0FwcC5kZW1vRGF0YSwKCQkJCQlzZWxlY3RlZDogZGVtb0FwcC5zZWxlY3RlZCwKCQkJCQl0aGVtZUxpY2VuY2VBY3RpdmU6IGRlbW9BcHAudGhlbWVMaWNlbmNlQWN0aXZlLAoJCQkJfSkKCQkJKTsKCQl9LAoJCWFjdGlvbnNUb2dnbGU6IGZ1bmN0aW9uICgpIHsKCgkJCWZvciAodmFyIHN0YXRlIG9mIE9iamVjdC5rZXlzKGRlbW9BcHAuYWN0aW9uc1N0YXRlKSkgewoKCQkJCS8vbGV0IGJ1dHRvbnMgPSBkZW1vQXBwLmRpYWxvZy51aURpYWxvZ0J1dHRvblBhbmU7CgkJCQljb25zdCBidXR0b25zID0gJChkZW1vQXBwLmRpYWxvZ0VsKS5maW5kKCcuYnV0dG9ucGFuZSAuYnV0dG9uc2V0Jyk7CgoJCQkJc3dpdGNoIChzdGF0ZSkgewoJCQkJCWNhc2UgJ2RlbW9DbG9zZSc6CgkJCQkJCWNvbnN0IGNsb3NlID0gYnV0dG9ucy5maW5kKCcjZGVtby1jbG9zZScpOwoJCQkJCQlicmVhazsKCgkJCQkJY2FzZSAnZGVtb0FkZCc6CgkJCQkJCWNvbnN0IGFkZCA9IGJ1dHRvbnMuZmluZCgnI2RlbW8tYWRkJyk7CgoJCQkJCQlpZiAoZGVtb0FwcC5hY3Rpb25zU3RhdGVbc3RhdGVdID09PSB0cnVlKSB7CgkJCQkJCQlhZGQucHJvcCgnZGlzYWJsZWQnLCBmYWxzZSkucmVtb3ZlQ2xhc3MoWyd1aS1idXR0b24tZGlzYWJsZWQnLCAndWktc3RhdGUtZGlzYWJsZWQnXSk7CgkJCQkJCX0gZWxzZSB7CgkJCQkJCQlhZGQucHJvcCgnZGlzYWJsZWQnLCB0cnVlKS5hZGRDbGFzcyhbJ3VpLWJ1dHRvbi1kaXNhYmxlZCcsICd1aS1zdGF0ZS1kaXNhYmxlZCddKTsKCQkJCQkJfQoJCQkJCQlicmVhazsKCgkJCQkJY2FzZSAnZGVtb1JlbW92ZSc6CgkJCQkJCWNvbnN0IHJlbW92ZSA9IGJ1dHRvbnMuZmluZCgnI2RlbW8tcmVtb3ZlJyk7CgoJCQkJCQlpZiAoZGVtb0FwcC5hY3Rpb25zU3RhdGVbc3RhdGVdID09PSB0cnVlKSB7CgkJCQkJCQlyZW1vdmUucHJvcCgnZGlzYWJsZWQnLCBmYWxzZSkucmVtb3ZlQ2xhc3MoWyd1aS1idXR0b24tZGlzYWJsZWQnLCAndWktc3RhdGUtZGlzYWJsZWQnXSk7CgkJCQkJCX0gZWxzZSB7CgkJCQkJCQlyZW1vdmUucHJvcCgnZGlzYWJsZWQnLCB0cnVlKS5hZGRDbGFzcyhbJ3VpLWJ1dHRvbi1kaXNhYmxlZCcsICd1aS1zdGF0ZS1kaXNhYmxlZCddKTsKCQkJCQkJfQoJCQkJCQlicmVhazsKCgkJCQkJY2FzZSAnZGVtb0luc3RhbGwnOgoJCQkJCQljb25zdCBpbnN0YWxsID0gYnV0dG9ucy5maW5kKCcjZGVtby1pbnN0YWxsJyk7CgoJCQkJCQlpZiAoZGVtb0FwcC5hY3Rpb25zU3RhdGVbc3RhdGVdID09PSB0cnVlKSB7CgkJCQkJCQlpbnN0YWxsLnByb3AoJ2Rpc2FibGVkJywgZmFsc2UpLnJlbW92ZUNsYXNzKFsndWktYnV0dG9uLWRpc2FibGVkJywgJ3VpLXN0YXRlLWRpc2FibGVkJ10pOwoJCQkJCQl9IGVsc2UgewoJCQkJCQkJaW5zdGFsbC5wcm9wKCdkaXNhYmxlZCcsIHRydWUpLmFkZENsYXNzKFsndWktYnV0dG9uLWRpc2FibGVkJywgJ3VpLXN0YXRlLWRpc2FibGVkJ10pOwoJCQkJCQl9CgkJCQkJCWJyZWFrOwoJCQkJfQoJCQl9CgkJfSwKCQkvKioKCQkgKiBHZXQgbGlzdCBvZiBhdmFpbGFibGUgZGVtbyBvbiBzZXJ2ZXIuCgkJICoKCQkgKiBAcmV0dXJuIHtQcm9taXNlfSBQcm9taXNlIHJlc3VsdC4KCQkgKi8KCQlkb0FqYXhEZW1vR2V0TGlzdDogYXN5bmMgZnVuY3Rpb24gKCkgewoKCQkJbGV0IGRlbW8gPSBhd2FpdCBuZXcgUHJvbWlzZSgocmVzb2x2ZSwgcmVqZWN0KSA9PiB7CgoJCQkJY29uc3QgZGF0YSA9IE1lc3NpYS50YWJzRGF0YTsKCgkJCQlkZW1vX3hocl9nZXRfbGlzdCA9ICQuYWpheCh7CgkJCQkJdHlwZTogJ1BPU1QnLAoJCQkJCXVybDogZGF0YS5hamF4VXJsLAoJCQkJCWRhdGE6IHsKCQkJCQkJYWN0aW9uOiBkYXRhLmFjdGlvbkRlbW9HZXRMaXN0LAoJCQkJCQltZXNzaWFOb25jZTogZGF0YS5zZXR0aW5nRm9ybU5vbmNlLAoJCQkJCX0sCgkJCQkJYmVmb3JlU2VuZDogZnVuY3Rpb24gKCkgewoKCQkJCQkJaWYgKGRlbW9feGhyX2dldF9saXN0ICE9IG51bGwpIHsKCQkJCQkJCWRlbW9feGhyX2dldF9saXN0LmFib3J0KCk7CgkJCQkJCQlkZW1vX3hocl9nZXRfbGlzdCA9IG51bGw7CgkJCQkJCX0KCQkJCQl9LAoJCQkJCXN1Y2Nlc3M6IGZ1bmN0aW9uIChzZXJ2ZXIpIHsKCQkJCQkJaWYgKHNlcnZlci5zdWNjZXNzID09PSB0cnVlKSB7CgkJCQkJCQlyZXR1cm4gcmVzb2x2ZShzZXJ2ZXIuZGF0YSk7CgkJCQkJCX0gZWxzZSB7CgkJCQkJCQlyZXR1cm4gcmVqZWN0KG5ldyBFcnJvcihkYXRhLnVuZXhwZWN0ZWRFcnIpKTsKCQkJCQkJfQoJCQkJCX0sCgkJCQkJZXJyb3I6IGZ1bmN0aW9uIChNTEh0dHBSZXF1ZXN0LCB0ZXh0U3RhdHVzLCBlcnJvclRocm93bikgewoKCQkJCQkJaWYgKE1MSHR0cFJlcXVlc3Quc3RhdHVzID09PSAwICYmIHRleHRTdGF0dXMgPT0gJ2Fib3J0JykgewoJCQkJCQkJcmV0dXJuOwoJCQkJCQl9CgkJCQkJCXJldHVybiByZWplY3QobmV3IEVycm9yKGRhdGEuYWpheEVycm9yKSk7CgkJCQkJfSwKCQkJCQljb21wbGV0ZTogZnVuY3Rpb24gKE1MSHR0cFJlcXVlc3QsIHRleHRTdGF0dXMpIHsKCQkJCQkJZGVtb194aHJfZ2V0X2xpc3QgPSBudWxsOwoJCQkJCX0sCgkJCQl9KTsKCQkJfSk7CgkJCXJldHVybiBkZW1vOwoJCX0sCgkJLyoqCgkJICogRGVwbG95IGRlbW8gcGFja2FnZS4KCQkgKgoJCSAqIEBwYXJhbSB7c3RyaW5nfSB0ZW1wbGF0ZSBEZW1vIGZpbGUgbmFtZXMuCgkJICoKCQkgKiBAcmV0dXJuIHtQcm9taXNlfSBQcm9taXNlIHJlc3VsdC4KCQkgKi8KCQlkb0FqYXhEZW1vSW5zdGFsbDogYXN5bmMgZnVuY3Rpb24gKHRlbXBsYXRlKSB7CgoJCQlsZXQgaW5zdGFsbCA9IGF3YWl0IG5ldyBQcm9taXNlKChyZXNvbHZlLCByZWplY3QpID0+IHsKCQkJCWNvbnN0IGRhdGEgPSBNZXNzaWEudGFic0RhdGE7CgoJCQkJZGVtb194aHJfaW5zdGFsbCA9ICQuYWpheCh7CgkJCQkJdHlwZTogJ1BPU1QnLAoJCQkJCXVybDogZGF0YS5hamF4VXJsLAoJCQkJCWRhdGE6IHsKCQkJCQkJYWN0aW9uOiBkYXRhLmFjdGlvbkRlbW9JbnN0YWxsLAoJCQkJCQltZXNzaWFOb25jZTogZGF0YS5zZXR0aW5nRm9ybU5vbmNlLAoJCQkJCQl0ZW1wbGF0ZUZpbGU6IHRlbXBsYXRlLAoJCQkJCX0sCgkJCQkJYmVmb3JlU2VuZDogZnVuY3Rpb24gKCkgewoKCQkJCQkJaWYgKGRlbW9feGhyX2luc3RhbGwgIT0gbnVsbCkgewoJCQkJCQkJZGVtb194aHJfaW5zdGFsbC5hYm9ydCgpOwoJCQkJCQkJZGVtb194aHJfaW5zdGFsbCA9IG51bGw7CgkJCQkJCX0KCgkJCQkJCWRlbW9BcHAuc2V0QWN0aW9uc1N0YXRlcyh7CgkJCQkJCQlkZW1vUmVtb3ZlOiBmYWxzZSwKCQkJCQkJCWRlbW9JbnN0YWxsOiBmYWxzZSwKCQkJCQkJfSk7CgkJCQkJfSwKCQkJCQlzdWNjZXNzOiBmdW5jdGlvbiAoc2VydmVyKSB7CgkJCQkJCWlmIChzZXJ2ZXIuc3VjY2VzcyA9PT0gdHJ1ZSkgewoJCQkJCQkJcmV0dXJuIHJlc29sdmUoc2VydmVyLmRhdGEpOwoJCQkJCQl9IGVsc2UgewoJCQkJCQkJcmV0dXJuIHJlamVjdChuZXcgRXJyb3IoZGF0YS51bmV4cGVjdGVkRXJyKSk7CgkJCQkJCX0KCQkJCQl9LAoJCQkJCWVycm9yOiBmdW5jdGlvbiAoTUxIdHRwUmVxdWVzdCwgdGV4dFN0YXR1cywgZXJyb3JUaHJvd24pIHsKCgkJCQkJCWlmIChNTEh0dHBSZXF1ZXN0LnN0YXR1cyA9PT0gMCAmJiB0ZXh0U3RhdHVzID09ICdhYm9ydCcpIHsKCQkJCQkJCXJldHVybjsKCQkJCQkJfQoJCQkJCQlyZXR1cm4gcmVqZWN0KG5ldyBFcnJvcihkYXRhLmFqYXhFcnJvcikpOwoJCQkJCX0sCgkJCQkJY29tcGxldGU6IGZ1bmN0aW9uIChNTEh0dHBSZXF1ZXN0LCB0ZXh0U3RhdHVzKSB7CgkJCQkJCWRlbW9feGhyX2luc3RhbGwgPSBudWxsOwoJCQkJCQkkLmZuLlRhYnNQbHVnaW5GcmFtZVdvcmsoJ3BsYXlTb3VuZCcsIDAuMyk7CgkJCQkJfSwKCQkJCX0pOwoJCQl9KTsKCQkJcmV0dXJuIGluc3RhbGw7CgkJfSwKCQkvKioKCQkgKiBBZGQgZmlsZXMgdG8gc2VydmVyLgoJCSAqCgkJICogQHBhcmFtIHtGaWxlfSBmaWxlIERlbW8gZmlsZSBvYmplY3QuCgkJICogQHBhcmFtIHtGdW5jdGlvbn0gb25Qcm9ncmVzcyBGdW5jdGlvbiB0byBleGVjdXRlIG9uIHVwbG9hZCBwcm9ncmVzcy4KCQkgKgoJCSAqIEByZXR1cm4ge1Byb21pc2V9IFByb21pc2UgcmVzdWx0LgoJCSAqLwoJCWRvQWpheERlbW9BZGQ6IGFzeW5jIGZ1bmN0aW9uIChmaWxlLCBvblByb2dyZXNzKSB7CgoJCQlsZXQgYWRkID0gYXdhaXQgbmV3IFByb21pc2UoYXN5bmMgKHJlc29sdmUsIHJlamVjdCkgPT4gewoJCQkJY29uc3QKCQkJCQlkYXRhID0gTWVzc2lhLnRhYnNEYXRhLAoJCQkJCWZvcm1EYXRhID0gbmV3IEZvcm1EYXRhKCk7CgoJCQkJZm9ybURhdGEuc2V0KCdhY3Rpb24nLCBkYXRhLmFjdGlvbkRlbW9BZGQpOwoJCQkJZm9ybURhdGEuc2V0KCdtZXNzaWFOb25jZScsIGRhdGEuc2V0dGluZ0Zvcm1Ob25jZSk7CgkJCQlmb3JtRGF0YS5zZXQoJ2RlbW9bXScsIG5ldyBCbG9iKFswXSksIGZpbGUubmFtZSk7CgkJCQlmb3JtRGF0YS5zZXQoJ2RlbW9EYXRhJywgSlNPTi5zdHJpbmdpZnkoWwoJCQkJCXsKCQkJCQkJbmFtZTogZmlsZS5uYW1lLAoJCQkJCQlzaXplOiBmaWxlLnNpemUsCgkJCQkJCXN0YXJ0OiB0cnVlLAoJCQkJCQlmaW5pc2g6IGZhbHNlLAoJCQkJCX0KCQkJCV0pKTsKCgkJCQkvKioKCQkJCSAqIEhlcmUgaXMgYW4gZXhhbXBsZSBvZiB3aGF0IGJyb3dzZXIgd2lsbCBzZW5kOgoJCQkJICoKCQkJCSAqIC0tLS0tLVdlYktpdEZvcm1Cb3VuZGFyeTBOOTRCRXJENVdIOGNpNWMKCQkJCSAqCUNvbnRlbnQtRGlzcG9zaXRpb246IGZvcm0tZGF0YTsgbmFtZT0iYWN0aW9uIgoJCQkJICoKCQkJCSAqCW1lc3NpYV9kZW1vX2FkZAoJCQkJICoJLS0tLS0tV2ViS2l0Rm9ybUJvdW5kYXJ5ME45NEJFckQ1V0g4Y2k1YwoJCQkJICoJQ29udGVudC1EaXNwb3NpdGlvbjogZm9ybS1kYXRhOyBuYW1lPSJtZXNzaWFOb25jZSIKCQkJCSAqCgkJCQkgKgk4NjljNmZiMmVmCgkJCQkgKgktLS0tLS1XZWJLaXRGb3JtQm91bmRhcnkwTjk0QkVyRDVXSDhjaTVjCgkJCQkgKglDb250ZW50LURpc3Bvc2l0aW9uOiBmb3JtLWRhdGE7IG5hbWU9ImRlbW9EYXRhIgoJCQkJICoKCQkJCSAqCVt7Im5hbWUiOiJ2aDE1OTEyMV9kZW1vX21lc3NpYXdwX2R1bXBfKDE2LTA5LTIwMjFfMTMtMDAtNTUpLnppcCIsInNpemUiOjMzMDg4MDAyLCJzdGFydCI6dHJ1ZSwiZmluaXNoIjpmYWxzZX1dCgkJCQkgKgktLS0tLS1XZWJLaXRGb3JtQm91bmRhcnkwTjk0QkVyRDVXSDhjaTVjCgkJCQkgKi8KCQkJCWNvbnN0IGxuID0gQXJyYXkuZnJvbShmb3JtRGF0YS5lbnRyaWVzKCksIChba2V5LCBwcm9wXSkgPT4gewoJCQkJCXJldHVybiB0eXBlb2YgcHJvcCA9PT0gInN0cmluZyIKCQkJCQkJPyAoa2V5Lmxlbmd0aCArIDEwMCkgKyAocHJvcC5sZW5ndGggKyA1MCkKCQkJCQkJOiAoa2V5Lmxlbmd0aCArIDEwMCkgKyAocHJvcC5zaXplICsgNTApOwoJCQkJfSk7CgoJCQkJY29uc3QKCQkJCQljaHVua1NpemUgPSBkYXRhLnBvc3RNYXhTaXplIC0gbG4ucmVkdWNlKChhLCBiKSA9PiBhICsgYiksIC8vIGN1cnJlbnQgc2l6ZSBvZiBGb3Jtc0RhdGEuCgkJCQkJc3RlcHMgPSBNYXRoLnRydW5jKGZpbGUuc2l6ZSAvIGNodW5rU2l6ZSk7CgoJCQkJZm9yIChsZXQgc3RhcnQgPSAwLCBzdGVwID0gMDsgc3RhcnQgPCBmaWxlLnNpemU7IHN0YXJ0ICs9IGNodW5rU2l6ZSwgc3RlcCsrKSB7CgkJCQkJY29uc3QKCQkJCQkJdHJTdGFydCA9IHN0ZXAgPT09IDAsCgkJCQkJCXRyRmluaXNoID0gTWF0aC50cnVuYyhzdGVwcykgPT09IHN0ZXAsCgkJCQkJCWNodW5rID0gZmlsZS5zbGljZShzdGFydCwgc3RhcnQgKyBjaHVua1NpemUpOwoKCQkJCQlmb3JtRGF0YS5zZXQoJ2RlbW9bXScsIGNodW5rLCBmaWxlLm5hbWUpOwoJCQkJCWZvcm1EYXRhLnNldCgnZGVtb0RhdGEnLCBKU09OLnN0cmluZ2lmeShbCgkJCQkJCXsKCQkJCQkJCW5hbWU6IGZpbGUubmFtZSwKCQkJCQkJCXNpemU6IGZpbGUuc2l6ZSwKCQkJCQkJCXN0YXJ0OiB0clN0YXJ0LAoJCQkJCQkJZmluaXNoOiB0ckZpbmlzaCwKCQkJCQkJfQoJCQkJCV0pKTsKCgkJCQkJYXdhaXQgJC5hamF4KHsKCQkJCQkJdHlwZTogJ1BPU1QnLAoJCQkJCQl1cmw6IGRhdGEuYWpheFVybCwKCQkJCQkJZGF0YTogZm9ybURhdGEsCgkJCQkJCWVuY3R5cGU6ICdtdWx0aXBhcnQvZm9ybS1kYXRhJywKCQkJCQkJY29udGVudFR5cGU6IGZhbHNlLAoJCQkJCQlwcm9jZXNzRGF0YTogZmFsc2UsCgkJCQkJCS8vIGNhY2hlOiBmYWxzZSwKCQkJCQkJLy8gZGF0YVR5cGU6ICdKU09OJywKCQkJCQkJLy8gYXN5bmM6IHRydWUsCgkJCQkJCWJlZm9yZVNlbmQ6IGZ1bmN0aW9uIChYTUxIdHRwUmVxdWVzdCwgUmVxdWVzdERhdGEpIHsKCgkJCQkJCQlkZW1vQXBwLnNldEFjdGlvbnNTdGF0ZXMoewoJCQkJCQkJCWRlbW9SZW1vdmU6IGZhbHNlLAoJCQkJCQkJCWRlbW9JbnN0YWxsOiBmYWxzZSwKCQkJCQkJCX0pOwoKCQkJCQkJCS8vcGF0Y2ggYWpheCBzZXR0aW5ncyB0byBjYWxsIGEgcHJvZ3Jlc3MgY2FsbGJhY2sKCQkJCQkJCXZhciBjdXJyWEhSID0gUmVxdWVzdERhdGEueGhyOwoJCQkJCQkJUmVxdWVzdERhdGEueGhyID0gZnVuY3Rpb24gKCkgewoJCQkJCQkJCXZhciB4aHIgPSBjdXJyWEhSLmFwcGx5KHRoaXMsIGFyZ3VtZW50cyk7CgoJCQkJCQkJCWlmICh4aHIudXBsb2FkKSB7CgkJCQkJCQkJCXhoci51cGxvYWQuYWRkRXZlbnRMaXN0ZW5lcigncHJvZ3Jlc3MnLCAoZXZ0KSA9PiBvblByb2dyZXNzKGV2dCwgc3RlcCwgc3RlcHMpLCBmYWxzZSk7CgkJCQkJCQkJfQoKCQkJCQkJCQlyZXR1cm4geGhyOwoJCQkJCQkJfTsKCQkJCQkJfSwKCQkJCQkJc3VjY2VzczogZnVuY3Rpb24gKHNlcnZlcikgewoJCQkJCQkJaWYgKCF0ckZpbmlzaCkgcmV0dXJuOwoKCQkJCQkJCWlmIChzZXJ2ZXIuc3VjY2VzcyA9PT0gdHJ1ZSkgewoJCQkJCQkJCXJldHVybiByZXNvbHZlKHNlcnZlci5kYXRhKTsKCQkJCQkJCX0gZWxzZSB7CgkJCQkJCQkJcmV0dXJuIHJlamVjdChuZXcgRXJyb3IoZGF0YS51bmV4cGVjdGVkRXJyKSk7CgkJCQkJCQl9CgkJCQkJCX0sCgkJCQkJCWVycm9yOiBmdW5jdGlvbiAoTUxIdHRwUmVxdWVzdCwgdGV4dFN0YXR1cywgZXJyb3JUaHJvd24pIHsKCgkJCQkJCQlpZiAoTUxIdHRwUmVxdWVzdC5zdGF0dXMgPT09IDAgJiYgdGV4dFN0YXR1cyA9PSAnYWJvcnQnKSB7CgkJCQkJCQkJcmV0dXJuOwoJCQkJCQkJfQoJCQkJCQkJcmV0dXJuIHJlamVjdChuZXcgRXJyb3IoZGF0YS5hamF4RXJyb3IpKTsKCQkJCQkJfSwKCQkJCQl9KTsKCgkJCQkJZm9ybURhdGEuZGVsZXRlKCdkZW1vW10nKTsKCQkJCQlmb3JtRGF0YS5kZWxldGUoJ2RlbW9EYXRhJyk7CgkJCQl9CgkJCX0pOwoJCQlyZXR1cm4gYWRkOwoJCX0sCgkJLyoqCgkJICogUmVtb3ZlIGZpbGVzIGZyb20gc2VydmVyLgoJCSAqCgkJICogQHBhcmFtIHtBcnJheTxzdHJpbmc+fSBkZW1vcyBEZW1vIGZpbGUgbmFtZXMuCgkJICoKCQkgKiBAcmV0dXJuIHtQcm9taXNlfSBQcm9taXNlIHJlc3VsdC4KCQkgKi8KCQlkb0FqYXhEZW1vUmVtb3ZlOiBhc3luYyBmdW5jdGlvbiAoZGVtb3MpIHsKCgkJCWxldCBhZGQgPSBhd2FpdCBuZXcgUHJvbWlzZSgocmVzb2x2ZSwgcmVqZWN0KSA9PiB7CgkJCQljb25zdCBkYXRhID0gTWVzc2lhLnRhYnNEYXRhOwoKCQkJCWRlbW9feGhyX3JlbW92ZSA9ICQuYWpheCh7CgkJCQkJdHlwZTogJ1BPU1QnLAoJCQkJCXVybDogZGF0YS5hamF4VXJsLAoJCQkJCWRhdGE6IHsKCQkJCQkJYWN0aW9uOiBkYXRhLmFjdGlvbkRlbW9SZW1vdmUsCgkJCQkJCW1lc3NpYU5vbmNlOiBkYXRhLnNldHRpbmdGb3JtTm9uY2UsCgkJCQkJCWRlbW9zOiBkZW1vcywKCQkJCQl9LAoJCQkJCWJlZm9yZVNlbmQ6IGZ1bmN0aW9uICgpIHsKCgkJCQkJCWlmIChkZW1vX3hocl9yZW1vdmUgIT0gbnVsbCkgewoJCQkJCQkJZGVtb194aHJfcmVtb3ZlLmFib3J0KCk7CgkJCQkJCQlkZW1vX3hocl9yZW1vdmUgPSBudWxsOwoJCQkJCQl9CgoJCQkJCQlkZW1vQXBwLnNldEFjdGlvbnNTdGF0ZXMoewoJCQkJCQkJZGVtb1JlbW92ZTogZmFsc2UsCgkJCQkJCQlkZW1vSW5zdGFsbDogZmFsc2UsCgkJCQkJCX0pOwoJCQkJCX0sCgkJCQkJc3VjY2VzczogZnVuY3Rpb24gKHNlcnZlcikgewoJCQkJCQlpZiAoc2VydmVyLnN1Y2Nlc3MgPT09IHRydWUpIHsKCQkJCQkJCXJldHVybiByZXNvbHZlKHNlcnZlci5kYXRhKTsKCQkJCQkJfSBlbHNlIHsKCQkJCQkJCXJldHVybiByZWplY3QobmV3IEVycm9yKGRhdGEudW5leHBlY3RlZEVycikpOwoJCQkJCQl9CgkJCQkJfSwKCQkJCQllcnJvcjogZnVuY3Rpb24gKE1MSHR0cFJlcXVlc3QsIHRleHRTdGF0dXMsIGVycm9yVGhyb3duKSB7CgoJCQkJCQlpZiAoTUxIdHRwUmVxdWVzdC5zdGF0dXMgPT09IDAgJiYgdGV4dFN0YXR1cyA9PSAnYWJvcnQnKSB7CgkJCQkJCQlyZXR1cm47CgkJCQkJCX0KCQkJCQkJcmV0dXJuIHJlamVjdChuZXcgRXJyb3IoZGF0YS5hamF4RXJyb3IpKTsKCQkJCQl9LAoJCQkJCWNvbXBsZXRlOiBmdW5jdGlvbiAoTUxIdHRwUmVxdWVzdCwgdGV4dFN0YXR1cykgewoJCQkJCQlkZW1vX3hocl9yZW1vdmUgPSBudWxsOwoJCQkJCQkkLmZuLlRhYnNQbHVnaW5GcmFtZVdvcmsoJ3BsYXlTb3VuZCcsIDAuMyk7CgkJCQkJfSwKCQkJCX0pOwoJCQl9KTsKCQkJcmV0dXJuIGFkZDsKCQl9LAoJCWV2ZW50czogewoKCQkJLyoqCgkJCSAqIEFkZCBldmVudHMgdG8gYSBkaWFsb2cgb2JqZWN0LgoJCQkgKgoJCQkgKiBAcmV0dXJuIHZvaWQKCQkJICovCgkJCWFkZDogKCkgPT4gewoJCQkJJChkZW1vQXBwLmRpYWxvZ0VsKS5vbignY2xpY2snLCAnLnBhY2thZ2UtaXRlbScsIGRlbW9BcHAuZXZlbnRzLmRlbW9JdGVtU2VsZWN0SGFuZGxlcik7CgkJCQkkKGRlbW9BcHAuZGlhbG9nRWwpLm9uKCdtZXNzaWFDaGFuZ2VEZW1vRGF0YScsIGRlbW9BcHAucmVuZGVyKTsKCQkJCSQoZGVtb0FwcC5kaWFsb2dFbCkub24oJ21lc3NpYUNoYW5nZUFjdGlvbnNTdGF0ZScsIGRlbW9BcHAuYWN0aW9uc1RvZ2dsZSk7CgkJCX0sCgoJCQkvKioKCQkJICogUmVtb3ZlIGV2ZW50cyBmcm9tIGEgZGlhbG9nIG9iamVjdC4KCQkJICogSlEgcmVhbGx5IHN0cmFuZ2UgLSBhZnRlciByZW1vdmluZyBlbGVtZW50IGZyb20gRE9NCgkJCSAqIChkaWFsb2cgZGVzdHJveSkgYW5kIHJlLWNyZWF0aW5nIHNhbWUgbmV3IG9uZQoJCQkgKiBpdCBzdGlsbCB0cmFjayBvbGQgZXZlbnRzLgoJCQkgKgoJCQkgKiBAcmV0dXJuIHZvaWQKCQkJICovCgkJCXJlbW92ZTogKCkgPT4gewoJCQkJJChkZW1vQXBwLmRpYWxvZ0VsKS5vZmYoJ2NsaWNrIG1lc3NpYUNoYW5nZURlbW9EYXRhIG1lc3NpYUNoYW5nZUFjdGlvbnNTdGF0ZScpOwoJCQl9LAoJCQkvKioKCQkJICogSGFuZGxlcnMgZm9yIGRpYWxvZyBidXR0b25zIGV2ZW50cy4KCQkJICovCgkJCWJ1dHRvbnM6IHsKCgkJCQkvKioKCQkJCSAqIE9uIGNsb3NlIGRpYWxvZyBvYmplY3QuCgkJCQkgKgoJCQkJICogQHJldHVybiB2b2lkCgkJCQkgKi8KCQkJCWNsb3NlOiBmdW5jdGlvbiAoZXZlbnQpIHsKCQkJCQlkZW1vQXBwLmV2ZW50cy5yZW1vdmUoKTsKCQkJCQkkKHRoaXMpLnRyaWdnZXIoJ2RpYWxvZ0Nsb3NlZCcsIFsnY2xvc2UnXSk7CgkJCQkJJCh0aGlzKS5kaWFsb2coImNsb3NlIik7CgkJCQl9LAoKCQkJCS8qKgoJCQkJICogT24gdXBsb2FkaW5nIGZpbGVzLgoJCQkJICoKCQkJCSAqIEByZXR1cm4gdm9pZAoJCQkJICovCgkJCQlkZW1vQWRkOiBmdW5jdGlvbiAoZXZlbnQpIHsKCgkJCQkJaWYgKCF3aW5kb3cuRm9ybURhdGEpIHsKCQkJCQkJYWxlcnQoTWVzc2lhLnRhYnNEYXRhLmZvcm1EYXRhRXJyKTsKCQkJCQkJcmV0dXJuOwoJCQkJCX0KCgkJCQkJbGV0CgkJCQkJCWZpbGVzX3NpemVfdG90YWwgPSAwLAoJCQkJCQlmaWxlc19zaXplX2xvYWRlZCA9IDAsCgkJCQkJCXByZXZfc3RlcCA9IDAsCgkJCQkJCXByZXZfbG9hZGVkID0gMDsKCgkJCQkJY29uc3QKCQkJCQkJYWxsb3dlZF9taW1lX3R5cGVzID0gTWVzc2lhLnRhYnNEYXRhLmRlbW8uYWxsb3dlZE1pbWVUeXBlcywKCQkJCQkJaW5wdXQgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdpbnB1dCcpOwoKCQkJCQlsZXQgb25Qcm9ncmVzcyA9IChldnQsIHN0ZXAsIHN0ZXBzKSA9PiB7CgkJCQkJCWlmIChldnQubGVuZ3RoQ29tcHV0YWJsZSkgewoKCQkJCQkJCS8qKgoJCQkJCQkJICogT25wcm9ncmVzcyB0cmlnZ2VycyBldmVyeSB0aW1lIHNvbWV0aGluZyB3YXMgcGFzc2VkIHRvIHNlcnZlci4KCQkJCQkJCSAqIEJ1dCB3ZSBzZW5kIG11bHRpcGxlIGZpbGVzIHdoZXJlIGVhY2ggb25lIHNwbGl0dGVkIGludG8gY2h1bmtzIHdoaWNoCgkJCQkJCQkgKiBzaXplIGRlcGVuZHMgb24gc2VydmVyIHNldHRpbmdzLCBzbyB3ZSBkbyBub3Qga25vdyBzaXplIG9mIHRoZSBjaHVuay4KCQkJCQkJCSAqCgkJCQkJCQkgKiBFdmVudC5sb2FkZWQgY29udGFpbnMgcnVubmluZyBzdW0gb2YgcGFzc2VkIGRhdGEgc3RhcnRpbmcgZnJvbSB0aGUgYmVnaW5uaW5nCgkJCQkJCQkgKiBvZiBjaHVuayB0cmFuc21pdHRpbmcgYW5kIE5PVCB0aGUgYW1vdW50IG9mIGRhdGEgcGFzc2VkIGluc2lkZSBzaW5nbGUgdHJhbnNtaXQuCgkJCQkJCQkgKgoJCQkJCQkJICogU28gd2l0aGluIHNpbmdsZSBjaHVuayB3ZSBoYXZlIHRvIHJlZHVjZSBsb2FkZWQgYnkgbG9hZGVkIGF0IHByZXYgc3RlcC4KCQkJCQkJCSAqIE90aGVyd2lzZSB3ZSB3aWxsIGdldCB0aGlzOgoJCQkJCQkJICogTGV0cyBzYXkgdGhlIHNpemUgb2YgY2h1bmsgaXMgNU1iLgoJCQkJCQkJICogV2UgY291bGQgZ2V0IGhlcmUgbG9hZGVkIGF0IDFzdCBzdGVwIDFNYiwgYXQgMm5kIDNNYiwgYXQgM3JkIDVNYi4KCQkJCQkJCSAqIEFuZCBpZiB0byAxKzMrNSA9IDkgLT4gaXQgd2lsbCBiZSB3cm9uZyBzdW0gYWdhaW5zIDVNQi4KCQkJCQkJCSAqCgkJCQkJCQkgKi8KCQkJCQkJCWlmIChwcmV2X3N0ZXAgPT09IHN0ZXApIHsvLyBTYW1lIGNodW5rIGFzIHByZXYuCgkJCQkJCQkJZmlsZXNfc2l6ZV9sb2FkZWQgKz0gZXZ0LmxvYWRlZCAtIHByZXZfbG9hZGVkOwoJCQkJCQkJfSBlbHNlIHsvLyBOZXcgY2h1bmsuCgkJCQkJCQkJZmlsZXNfc2l6ZV9sb2FkZWQgKz0gZXZ0LmxvYWRlZDsKCQkJCQkJCX0KCgkJCQkJCQlwcmV2X3N0ZXAgPSBzdGVwOwoJCQkJCQkJcHJldl9sb2FkZWQgPSBldnQubG9hZGVkOwoKCQkJCQkJCWxldAoJCQkJCQkJCXBlcmNlbnRDb21wbGV0ZSA9IGZpbGVzX3NpemVfbG9hZGVkIC8gZmlsZXNfc2l6ZV90b3RhbCAqIDEwMCwKCQkJCQkJCQlwcm9ncmVzc0VsID0gJChkZW1vQXBwLmRpYWxvZ0VsKS5maW5kKCcjZGVtby11cGxvYWQtcHJvZ3Jlc3MnKS5jc3MoJ3RyYW5zaXRpb24nLCAnYmFja2dyb3VuZC1zaXplIC4zcycpOwoKCQkJCQkJCWlmIChwZXJjZW50Q29tcGxldGUgPiAxMDApIHBlcmNlbnRDb21wbGV0ZSA9IDEwMDsKCQkJCQkJCXByb2dyZXNzRWwgPSBwcm9ncmVzc0VsLmNzcygnYmFja2dyb3VuZC1zaXplJywgYCR7cGVyY2VudENvbXBsZXRlfSVgKTsKCQkJCQkJfQoJCQkJCX0KCgkJCQkJaW5wdXQudHlwZSA9ICdmaWxlJzsKCQkJCQlpbnB1dC5tdWx0aXBsZSA9ICd0cnVlJzsKCQkJCQlpbnB1dC5hY2NlcHQgPSBhbGxvd2VkX21pbWVfdHlwZXMubWltZXMuam9pbignLCcpOwoKCQkJCQkvLyBIYW5kbGVyIGZvciBmaWxlKHMpIHNlbGVjdGlvbi4KCQkJCQkkKGlucHV0KS5vbignY2hhbmdlJywgZnVuY3Rpb24gKCkgewoKCQkJCQkJbGV0IGZpbGVzVmFsaWQgPSBbXTsKCgkJCQkJCWlmICgkKHRoaXMpLnByb3AoJ2ZpbGVzJykubGVuZ3RoID4gMCkgewoKCQkJCQkJCWxldCBmaWxlcyA9ICQodGhpcykucHJvcCgnZmlsZXMnKTsKCgkJCQkJCQlmb3IgKGxldCBpID0gMDsgaSA8IGZpbGVzLmxlbmd0aDsgaSsrKSB7CgkJCQkJCQkJY29uc3QgZmlsZSA9IGZpbGVzW2ldOwoKCQkJCQkJCQkvLyB2YWxpZGF0ZSBmaWxlIHR5cGUKCQkJCQkJCQlpZiAoYWxsb3dlZF9taW1lX3R5cGVzLm1pbWVzLmluZGV4T2YoZmlsZS50eXBlKSA9PSAtMSkgewoJCQkJCQkJCQljb25zdCBtc2cgPSBhbGxvd2VkX21pbWVfdHlwZXMud2FybmluZy5yZXBsYWNlKC8lZmlsZVR5cGUlL2dpLCBmaWxlLnR5cGUpOwoJCQkJCQkJCQkkLmZuLlRhYnNQbHVnaW5GcmFtZVdvcmsoJ3Nob3dNZXNzYWdlJywgbXNnLCAnZXJyb3InKTsKCQkJCQkJCQkJcmV0dXJuOwoJCQkJCQkJCX0KCQkJCQkJCQlmaWxlc19zaXplX3RvdGFsID0gZmlsZXNfc2l6ZV90b3RhbCArIGZpbGUuc2l6ZTsKCQkJCQkJCQlmaWxlc1ZhbGlkLnB1c2goZmlsZSk7CgkJCQkJCQl9CgkJCQkJCX0KCgkJCQkJCU1lc3NpYS5jb25maXJtKE1lc3NpYS50YWJzRGF0YS5kZW1vLmNvbmZpcm1EZW1vQWRkKQoJCQkJCQkJLnRoZW4oKGNvbmZpcm1lZCkgPT4gewoJCQkJCQkJCWNvbnN0IHVwbG9hZHMgPSBbXTsKCQkJCQkJCQlmb3IgKGxldCBpID0gMDsgaSA8IGZpbGVzVmFsaWQubGVuZ3RoOyBpKyspIHsKCgkJCQkJCQkJCWNvbnN0IGZpbGUgPSBmaWxlc1ZhbGlkW2ldOwoJCQkJCQkJCQljb25zdCBhY3Rpb24gPSBkZW1vQXBwCgkJCQkJCQkJCQkuZG9BamF4RGVtb0FkZChmaWxlLCBvblByb2dyZXNzKQoJCQkJCQkJCQkJLnRoZW4oKGRhdGEpID0+IHsKCgkJCQkJCQkJCQkJaWYgKGRhdGEuY29kZSA9PT0gMjAwKSB7CgkJCQkJCQkJCQkJCSQuZm4uVGFic1BsdWdpbkZyYW1lV29yaygnc2hvd01lc3NhZ2UnLCBkYXRhLm1zZywgJ3N1Y2Nlc3MnKTsKCQkJCQkJCQkJCQl9IGVsc2UgewoJCQkJCQkJCQkJCQkkLmZuLlRhYnNQbHVnaW5GcmFtZVdvcmsoJ3Nob3dNZXNzYWdlJywgZGF0YS5tc2csICdlcnJvcicpOwoJCQkJCQkJCQkJCX0KCQkJCQkJCQkJCQlyZXR1cm4gUHJvbWlzZS5yZXNvbHZlKGRhdGEpOwoJCQkJCQkJCQkJfSkKCQkJCQkJCQkJCS5jYXRjaCgoZXJyb3IpID0+IHsKCQkJCQkJCQkJCQkkLmZuLlRhYnNQbHVnaW5GcmFtZVdvcmsoJ3Nob3dNZXNzYWdlJywgZXJyb3IubWVzc2FnZSwgJ2Vycm9yJyk7CgkJCQkJCQkJCQkJTWVzc2lhRXh0LmxvZ2dlci5lcnJvcihlcnJvcik7CgkJCQkJCQkJCQkJcmV0dXJuIFByb21pc2UucmVqZWN0KGVycm9yKTsKCQkJCQkJCQkJCX0pOwoJCQkJCQkJCQl1cGxvYWRzLnB1c2goYWN0aW9uKTsKCQkJCQkJCQl9CgoJCQkJCQkJCVByb21pc2UKCQkJCQkJCQkJLmFsbFNldHRsZWQodXBsb2FkcykKCQkJCQkJCQkJLnRoZW4oKHJlc3VsdHMpID0+IHsKCQkJCQkJCQkJCSQuZm4uVGFic1BsdWdpbkZyYW1lV29yaygncGxheVNvdW5kJywgMC4zKTsKCQkJCQkJCQkJCSQoZGVtb0FwcC5kaWFsb2dFbCkKCQkJCQkJCQkJCQkuZmluZCgnI2RlbW8tdXBsb2FkLXByb2dyZXNzJykKCQkJCQkJCQkJCQkuY3NzKCd0cmFuc2l0aW9uJywgJycpCgkJCQkJCQkJCQkJLmNzcygnYmFja2dyb3VuZC1zaXplJywgJycpOwoKCQkJCQkJCQkJCWNvbnN0IGRlbW9EYXRhQ3VyciA9IGRlbW9BcHAuZGVtb0RhdGE7CgkJCQkJCQkJCQlsZXQKCQkJCQkJCQkJCQlmdWxmaWxsZWQgPSBmYWxzZSwKCQkJCQkJCQkJCQlkZW1vRGF0YU5ldyA9IFtdOwoKCQkJCQkJCQkJCWZvciAobGV0IGkgPSAwOyBpIDwgcmVzdWx0cy5sZW5ndGg7IGkrKykgewoJCQkJCQkJCQkJCWNvbnN0IHJlc3VsdCA9IHJlc3VsdHNbaV07CgkJCQkJCQkJCQkJaWYgKHJlc3VsdC5zdGF0dXMgIT09ICdmdWxmaWxsZWQnKSBjb250aW51ZTsKCQkJCQkJCQkJCQlkZW1vRGF0YU5ldyA9IGRlbW9EYXRhTmV3LmNvbmNhdChyZXN1bHQudmFsdWUuZGVtb0RhdGEpOwoJCQkJCQkJCQkJCWZ1bGZpbGxlZCA9IHRydWU7CgkJCQkJCQkJCQl9CgkJCQkJCQkJCQlpZiAoIWZ1bGZpbGxlZCkgcmV0dXJuOyAvLyBObyBvbmUgcmVxdWVzdCB3YXMgc3VjY2Vzc2Z1bC4KCQkJCQkJCQkJCWRlbW9EYXRhTmV3ID0gWy4uLm5ldyBTZXQoZGVtb0RhdGFOZXcpXTsKCgkJCQkJCQkJCQlkZW1vQXBwLnNlbGVjdGVkID0gZGVtb0RhdGFOZXcuZmlsdGVyKHggPT4gIWRlbW9EYXRhQ3Vyci5pbmNsdWRlcyh4KSk7CgkJCQkJCQkJCQlkZW1vQXBwLnNldERlbW9TdGF0ZShkZW1vRGF0YU5ldyk7CgoJCQkJCQkJCQkJZGVtb0FwcC5zZXRBY3Rpb25zU3RhdGVzKHsKCQkJCQkJCQkJCQlkZW1vUmVtb3ZlOiBkZW1vQXBwLnNlbGVjdGVkLmxlbmd0aCA+IDAsCgkJCQkJCQkJCQkJZGVtb0luc3RhbGw6IGRlbW9BcHAuc2VsZWN0ZWQubGVuZ3RoID09PSAxLAoJCQkJCQkJCQkJfSk7CgkJCQkJCQkJCX0pOwoJCQkJCQkJfSk7CgkJCQkJfSk7CgkJCQkJaW5wdXQuY2xpY2soKTsKCQkJCX0sCgoJCQkJLyoqCgkJCQkgKiBPbiBkZWxldGluZyBkZW1vIHBhY2thZ2VzLgoJCQkJICoKCQkJCSAqIEByZXR1cm4gdm9pZAoJCQkJICovCgkJCQlkZW1vUmVtb3ZlOiBmdW5jdGlvbiAoZXZlbnQpIHsKCgkJCQkJaWYgKCFkZW1vQXBwLmlzQWN0aW9uQWxsb3dlZCgnZGVtb1JlbW92ZScpKSB7CgkJCQkJCXJldHVybjsKCQkJCQl9CgoJCQkJCU1lc3NpYS5jb25maXJtKE1lc3NpYS50YWJzRGF0YS5kZW1vLmNvbmZpcm1EZW1vUmVtb3ZlKQoJCQkJCQkudGhlbigoY29uZmlybWVkKSA9PiB7CgkJCQkJCQkkKHRoaXMpLmZpbmQoJy5zZWxlY3RlZCcpLmFkZENsYXNzKCdpcy1idXN5Jyk7CgkJCQkJCQlkZW1vQXBwCgkJCQkJCQkJLmRvQWpheERlbW9SZW1vdmUoZGVtb0FwcC5zZWxlY3RlZCkKCQkJCQkJCQkudGhlbigoZGF0YSkgPT4gewoJCQkJCQkJCQlkZW1vQXBwLnNlbGVjdGVkID0gW107CgkJCQkJCQkJCWRlbW9BcHAuc2V0RGVtb1N0YXRlKGRhdGEuZGVtb0RhdGEpOwoKCQkJCQkJCQkJZGVtb0FwcC5zZXRBY3Rpb25zU3RhdGVzKHsKCQkJCQkJCQkJCWRlbW9SZW1vdmU6IGRlbW9BcHAuc2VsZWN0ZWQubGVuZ3RoID4gMCwKCQkJCQkJCQkJCWRlbW9JbnN0YWxsOiBkZW1vQXBwLnNlbGVjdGVkLmxlbmd0aCA9PT0gMSwKCQkJCQkJCQkJfSk7CgoJCQkJCQkJCQlpZiAoZGF0YS5jb2RlID09PSAyMDApIHsKCQkJCQkJCQkJCSQuZm4uVGFic1BsdWdpbkZyYW1lV29yaygnc2hvd01lc3NhZ2UnLCBkYXRhLm1zZywgJ3N1Y2Nlc3MnKTsKCQkJCQkJCQkJfSBlbHNlIHsKCQkJCQkJCQkJCSQuZm4uVGFic1BsdWdpbkZyYW1lV29yaygnc2hvd01lc3NhZ2UnLCBkYXRhLm1zZywgJ2Vycm9yJyk7CgkJCQkJCQkJCX0KCQkJCQkJCQl9KQoJCQkJCQkJCS5jYXRjaCgoZXJyb3IpID0+IHsKCQkJCQkJCQkJJC5mbi5UYWJzUGx1Z2luRnJhbWVXb3JrKCdzaG93TWVzc2FnZScsIGVycm9yLm1lc3NhZ2UsICdlcnJvcicpOwoJCQkJCQkJCQlNZXNzaWFFeHQubG9nZ2VyLmVycm9yKGVycm9yKTsKCQkJCQkJCQl9KQoJCQkJCQkJCS5maW5hbGx5KCgpID0+IHsKCQkJCQkJCQkJJCh0aGlzKS5maW5kKCcuc2VsZWN0ZWQnKS5yZW1vdmVDbGFzcygnaXMtYnVzeScpOwoJCQkJCQkJCX0pOzsKCQkJCQkJfSk7CgkJCQl9LAoKCQkJCS8qKgoJCQkJICogT24gY2xpY2sgdG8gaW5zdGFsbCBkZW1vIHBhY2thZ2UuCgkJCQkgKgoJCQkJICogQHJldHVybiB2b2lkCgkJCQkgKi8KCQkJCWRlbW9JbnN0YWxsOiBmdW5jdGlvbiAoZXZlbnQpIHsKCgkJCQkJaWYgKCFkZW1vQXBwLmlzQWN0aW9uQWxsb3dlZCgnZGVtb0luc3RhbGwnKSkgewoJCQkJCQlyZXR1cm47CgkJCQkJfQoKCQkJCQlNZXNzaWEuY29uZmlybShNZXNzaWEudGFic0RhdGEuZGVtby5jb25maXJtRGVtb0luc3RhbGwpCgkJCQkJCS50aGVuKChjb25maXJtZWQpID0+IHsKCgkJCQkJCQkkKHRoaXMpLmZpbmQoJy5zZWxlY3RlZCcpLmFkZENsYXNzKCdpcy1idXN5Jyk7CgkJCQkJCQlkZW1vQXBwCgkJCQkJCQkJLmRvQWpheERlbW9JbnN0YWxsKGRlbW9BcHAuc2VsZWN0ZWRbMF0pCgkJCQkJCQkJLnRoZW4oKGRhdGEpID0+IHsKCQkJCQkJCQkJaWYgKGRhdGEuY29kZSA9PT0gMjAwKSB7CgkJCQkJCQkJCQkkLmZuLlRhYnNQbHVnaW5GcmFtZVdvcmsoJ3Nob3dNZXNzYWdlJywgZGF0YS5tc2csICdzdWNjZXNzJyk7CgkJCQkJCQkJCX0gZWxzZSB7CgkJCQkJCQkJCQkkLmZuLlRhYnNQbHVnaW5GcmFtZVdvcmsoJ3Nob3dNZXNzYWdlJywgZGF0YS5tc2csICdlcnJvcicpOwoJCQkJCQkJCQl9CgoJCQkJCQkJCQlpZiAoZGF0YS5yZWxvYWQgPT09IHRydWUpIHsKCQkJCQkJCQkJCXdpbmRvdy5sb2NhdGlvbi5yZWxvYWQoKTsKCQkJCQkJCQkJfQoJCQkJCQkJCX0pCgkJCQkJCQkJLmNhdGNoKChlcnJvcikgPT4gewoJCQkJCQkJCQkkLmZuLlRhYnNQbHVnaW5GcmFtZVdvcmsoJ3Nob3dNZXNzYWdlJywgZXJyb3IubWVzc2FnZSwgJ2Vycm9yJyk7CgkJCQkJCQkJCU1lc3NpYUV4dC5sb2dnZXIuZXJyb3IoZXJyb3IpOwoJCQkJCQkJCX0pCgkJCQkJCQkJLmZpbmFsbHkoKCkgPT4gewoJCQkJCQkJCQkkKHRoaXMpLmZpbmQoJy5zZWxlY3RlZCcpLnJlbW92ZUNsYXNzKCdpcy1idXN5Jyk7CgkJCQkJCQkJfSk7OwoJCQkJCQl9KQoJCQkJfSwKCQkJfSwKCgkJCS8qKgoJCQkgKiBIYW5kbGVycyBmb3IgY2xpY2sgb24gZGVtbyBpdGVtLgoJCQkgKgoJCQkgKiBAcmV0dXJuIHZvaWQKCQkJICovCgkJCWRlbW9JdGVtU2VsZWN0SGFuZGxlcjogZnVuY3Rpb24gbmFtZShldmVudCkgewoKCQkJCWlmIChkZW1vX3hocl9pbnN0YWxsICE9PSBudWxsKSB7CgkJCQkJcmV0dXJuOwoJCQkJfQoJCQkJbGV0IGl0ZW1zID0gJCh0aGlzKS5wYXJlbnRzKCcuZGVtby1wYWNrYWdlLWl0ZW1zJyk7CgoJCQkJJCh0aGlzKS50b2dnbGVDbGFzcygnc2VsZWN0ZWQnKTsKCQkJCWxldCBzZWxlY3RlZCA9IGl0ZW1zLmZpbmQoJ3NlbGVjdGVkJyk7CgoJCQkJbGV0IHNlbGVjdGVkQ3VyciA9IGRlbW9BcHAuZGVtb0RhdGE7CgkJCQlsZXQgc2VsZWN0ZWROZXcgPSBpdGVtcy5maW5kKCcuc2VsZWN0ZWQnKTsKCgkJCQlpZiAoSlNPTi5zdHJpbmdpZnkoc2VsZWN0ZWRDdXJyKSAhPT0gSlNPTi5zdHJpbmdpZnkoc2VsZWN0ZWROZXcpKSB7CgoJCQkJCWRlbW9BcHAuc2VsZWN0ZWQgPSBzZWxlY3RlZE5ldy50b0FycmF5KCkubWFwKChlbGVtZW50LCBpbmRleCkgPT4gZWxlbWVudC5pZCk7CgoJCQkJCWRlbW9BcHAuc2V0QWN0aW9uc1N0YXRlcyh7CgkJCQkJCWRlbW9SZW1vdmU6IGRlbW9BcHAuc2VsZWN0ZWQubGVuZ3RoID4gMCwKCQkJCQkJZGVtb0luc3RhbGw6IGRlbW9BcHAuc2VsZWN0ZWQubGVuZ3RoID09PSAxLAoJCQkJCX0pOwoJCQkJfQoJCQl9LAoJCX0sCgkJc2V0RGVtb1N0YXRlOiAoZGVtb0RhdGEpID0+IHsKCgkJCWNvbnN0CgkJCQlkZW1vRGF0YUN1cnIgPSBkZW1vQXBwLmRlbW9EYXRhLAoJCQkJZGVtb0RhdGFOZXcgPSBkZW1vRGF0YTsKCgkJCWlmIChKU09OLnN0cmluZ2lmeShkZW1vRGF0YUN1cnIpICE9PSBKU09OLnN0cmluZ2lmeShkZW1vRGF0YU5ldykpIHsKCQkJCWRlbW9BcHAuZGVtb0RhdGEgPSBkZW1vRGF0YTsKCQkJCSQoZGVtb0FwcC5kaWFsb2dFbCkudHJpZ2dlcignbWVzc2lhQ2hhbmdlRGVtb0RhdGEnKTsKCQkJfQoJCX0sCgkJdXBkYXRlRGVtb1N0YXRlOiAoc2lsZW50ID0gdHJ1ZSkgPT4gewoKCQkJcmV0dXJuIGRlbW9BcHAuZG9BamF4RGVtb0dldExpc3QoKQoJCQkJLnRoZW4oKGRhdGEpID0+IHsKCQkJCQljb25zdAoJCQkJCQlkZW1vRGF0YUN1cnIgPSBkZW1vQXBwLmRlbW9EYXRhLAoJCQkJCQlsaWNlbmNlQWN0aXZlQ3VyciA9IGRlbW9BcHAudGhlbWVMaWNlbmNlQWN0aXZlLAoJCQkJCQlkZW1vRGF0YU5ldyA9IGRhdGEuZGVtb0RhdGEsCgkJCQkJCWxpY2VuY2VBY3RpdmVOZXcgPSBkYXRhLnRoZW1lTGljZW5jZUFjdGl2ZSwKCQkJCQkJZ29PbiA9IEpTT04uc3RyaW5naWZ5KGRlbW9EYXRhQ3VycikgIT09IEpTT04uc3RyaW5naWZ5KGRlbW9EYXRhTmV3KSB8fCBsaWNlbmNlQWN0aXZlQ3VyciAhPT0gbGljZW5jZUFjdGl2ZU5ldzsKCgkJCQkJZGVtb0FwcC5zZXRBY3Rpb25zU3RhdGVzKHsKCQkJCQkJZGVtb0FkZDogbGljZW5jZUFjdGl2ZU5ldyA9PT0gdHJ1ZSwKCQkJCQl9KTsKCgkJCQkJaWYgKGdvT24pIHsKCgkJCQkJCWRlbW9BcHAuZGVtb0RhdGEgPSBkYXRhLmRlbW9EYXRhOwoJCQkJCQlkZW1vQXBwLnRoZW1lTGljZW5jZUFjdGl2ZSA9IGRhdGEudGhlbWVMaWNlbmNlQWN0aXZlOwoJCQkJCQkkKGRlbW9BcHAuZGlhbG9nRWwpLnRyaWdnZXIoJ21lc3NpYUNoYW5nZURlbW9EYXRhJyk7CgoJCQkJCQlpZiAoIXNpbGVudCkgewoJCQkJCQkJaWYgKGRhdGEuY29kZSA9PT0gMjAwKSB7CgkJCQkJCQkJJC5mbi5UYWJzUGx1Z2luRnJhbWVXb3JrKCdzaG93TWVzc2FnZScsIGRhdGEubXNnLCAnc3VjY2VzcycpOwoJCQkJCQkJfSBlbHNlIHsKCQkJCQkJCQkkLmZuLlRhYnNQbHVnaW5GcmFtZVdvcmsoJ3Nob3dNZXNzYWdlJywgZGF0YS5tc2csICdlcnJvcicpOwoJCQkJCQkJfQoJCQkJCQkJJC5mbi5UYWJzUGx1Z2luRnJhbWVXb3JrKCdwbGF5U291bmQnLCAwLjMpOwoJCQkJCQl9CgkJCQkJfQoJCQkJfSkKCQkJCS5jYXRjaCgoZXJyb3IpID0+IHsKCQkJCQkkLmZuLlRhYnNQbHVnaW5GcmFtZVdvcmsoJ3Nob3dNZXNzYWdlJywgZXJyb3IubWVzc2FnZSwgJ2Vycm9yJyk7CgkJCQkJTWVzc2lhRXh0LmxvZ2dlci5lcnJvcihlcnJvcik7CgkJCQl9KQoJCQkJLmZpbmFsbHkoKCkgPT4gUHJvbWlzZS5yZXNvbHZlKCdyZWZyZXNoZWQnKSk7CgkJfSwKCQlzZXRBY3Rpb25zU3RhdGVzOiAoc3RhdGVzKSA9PiB7CgkJCWxldCBzdGF0ZUN1cnIgPSBkZW1vQXBwLmFjdGlvbnNTdGF0ZTsKCQkJbGV0IHN0YXRlTmV3ID0gT2JqZWN0LmFzc2lnbih7fSwgc3RhdGVDdXJyLCBzdGF0ZXMpOwoKCQkJaWYgKCd1bmRlZmluZWQnICE9PSBzdGF0ZXNbJ2RlbW9JbnN0YWxsJ10gJiYgc3RhdGVzWydkZW1vSW5zdGFsbCddID09PSB0cnVlICYmIGRlbW9feGhyX2luc3RhbGwgIT09IG51bGwpIHsKCQkJCXN0YXRlTmV3WydkZW1vSW5zdGFsbCddID0gZmFsc2U7CgkJCX0KCgkJCWlmIChKU09OLnN0cmluZ2lmeShzdGF0ZUN1cnIpICE9PSBKU09OLnN0cmluZ2lmeShzdGF0ZU5ldykpIHsKCgkJCQlkZW1vQXBwLmFjdGlvbnNTdGF0ZSA9IHN0YXRlTmV3OwoJCQkJJChkZW1vQXBwLmRpYWxvZ0VsKS50cmlnZ2VyKCdtZXNzaWFDaGFuZ2VBY3Rpb25zU3RhdGUnKTsKCQkJfQoJCX0sCgkJaXNBY3Rpb25BbGxvd2VkOiAoYWN0aW9uKSA9PiB7CgkJCXJldHVybiBkZW1vQXBwLmFjdGlvbnNTdGF0ZVthY3Rpb25dOwoJCX0sCgl9OwoKCSQoJy53cmFwICNpbnN0YWxsLWRlbW8nKS5vbignY2xpY2snLCBkZW1vQXBwLmluaXQpOwp9OwoKLyoqKi8gfSksCgovKioqLyAiLi9zcmMvanMvX2JhY2tlbmQvbWVudS1wYWdlLmpzIjoKLyohKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiohKlwKICAhKioqIC4vc3JjL2pzL19iYWNrZW5kL21lbnUtcGFnZS5qcyAqKiohCiAgXCoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqLwovKioqLyAoZnVuY3Rpb24oX191bnVzZWRfd2VicGFja19tb2R1bGUsIF9fdW51c2VkX3dlYnBhY2tfZXhwb3J0cywgX193ZWJwYWNrX3JlcXVpcmVfXykgewoKKGZ1bmN0aW9uICgkKSB7CgkkKGZ1bmN0aW9uICgpIHsKCgkJdmFyIHhociA9IG51bGw7CgoJCSQuZm4uVGFic1BsdWdpbkZyYW1lV29yayA9IGZ1bmN0aW9uIChtZXRob2QpIHsKCgkJCWlmIChUYWJzUGx1Z2luRnJhbWVXb3JrTWV0aG9kc1ttZXRob2RdKSB7CgkJCQlyZXR1cm4gVGFic1BsdWdpbkZyYW1lV29ya01ldGhvZHNbbWV0aG9kXS5hcHBseSh0aGlzLCBBcnJheS5wcm90b3R5cGUuc2xpY2UuY2FsbChhcmd1bWVudHMsIDEpKTsKCQkJfQoJCQllbHNlIGlmICh0eXBlb2YgbWV0aG9kID09PSAnb2JqZWN0JyB8fCAhbWV0aG9kKSB7CgkJCQkkLmVycm9yKCdBcmd1bWVudCAiTWV0aG9kIiByZXF1aXJlZCBmb3IgalF1ZXJ5LlRhYnNQbHVnaW5GcmFtZVdvcmsnKTsKCQkJfQoJCQllbHNlIHsKCQkJCSQuZXJyb3IoJ01ldGhvZCAnICsgbWV0aG9kICsgJyBkb2VzIG5vdCBleGlzdCBmb3IgalF1ZXJ5LlRhYnNQbHVnaW5GcmFtZVdvcmsnKTsKCQkJfQoJCX0KCgkJY29uc3QgVGFic1BsdWdpbkZyYW1lV29ya01ldGhvZHMgPSB7CgoJCQlzaG93TWVzc2FnZTogZnVuY3Rpb24gKGRhdGEsIHR5cGUsIGNhcHRpb24gPSAnTm90aWZpY2F0aW9uJykgewoKCQkJCXZhciBhcHBlbmRfY29udGVudCA9ICcnOwoKCQkJCWlmICgnb2JqZWN0JyA9PT0gdHlwZW9mIGRhdGEpIHsKCQkJCQlmb3IgKHZhciBrZXkgaW4gZGF0YSkgewoJCQkJCQlhcHBlbmRfY29udGVudCA9IGFwcGVuZF9jb250ZW50ICsgJzxkaXY+JyArIGtleSArICI6ICIgKyBkYXRhW2tleV0gKyAnPC9kaXY+JzsKCQkJCQl9CgkJCQl9CgkJCQllbHNlIGlmICgnZXJyb3InID09PSB0eXBlb2YgZGF0YSkgewoJCQkJCWFwcGVuZF9jb250ZW50ID0gYXBwZW5kX2NvbnRlbnQgKyAnPGRpdj4nICsgZGF0YS50b1N0cmluZygpICsgJzwvZGl2Pic7CgkJCQl9CgkJCQllbHNlIGlmICgnYXJyYXknID09PSB0eXBlb2YgZGF0YSkgewoJCQkJCWZvciAodmFyIGkgPSAwOyBpIDwgZGF0YS5sZW5ndGg7IGkrKykgewoJCQkJCQlhcHBlbmRfY29udGVudCA9IGFwcGVuZF9jb250ZW50ICsgJzxkaXY+JyArIGRhdGFbaV0gKyAnPC9kaXY+JzsKCQkJCQl9CgkJCQl9CgkJCQllbHNlIGlmICgnc3RyaW5nJyA9PT0gdHlwZW9mIGRhdGEpIHsKCQkJCQlhcHBlbmRfY29udGVudCA9ICc8ZGl2PicgKyBkYXRhICsgJzwvZGl2Pic7CgkJCQl9CgkJCQllbHNlIHsKCQkJCQlyZXR1cm47CgkJCQl9CgoJCQkJdmFyIHJpZ2h0ID0gdW5kZWZpbmVkOwoJCQkJdmFyIGJvdHRvbSA9IHVuZGVmaW5lZDsKCQkJCXZhciBhY3RpdmVfbWVzc2FnZXMgPSAkKCcubWVzc2FnZS13cmFwcGVyJyk7CgkJCQl2YXIgbWVzc2FnZSA9ICQoYDxkaXYgY2xhc3M9Im1lc3NhZ2Utd3JhcHBlciIgc3R5bGU9ImRpc3BsYXk6IG5vbmU7Ij4KCQkJCQkJCQkJPGRpdiBjbGFzcz0ibWVudS1wYWdlLW1lc3NhZ2UgcmMtJHt0eXBlfSI+CgkJCQkJCQkJCQk8ZGl2IGNsYXNzPSJtZW51LWlubmVyIj4KCQkJCQkJCQkJCQk8ZGl2IGNsYXNzPSJtZW51LW9wZXJhdGUiPgoJCQkJCQkJCQkJCQk8ZGl2IGNsYXNzPSJjYXB0aW9uIj4ke2NhcHRpb259PC9kaXY+CgkJCQkJCQkJCQkJCTxkaXYgY2xhc3M9ImNsb3NlIj48L2Rpdj4KCQkJCQkJCQkJCQk8L2Rpdj4KCQkJCQkJCQkJCQk8ZGl2IGNsYXNzPSJjb250ZW50Ij4ke2FwcGVuZF9jb250ZW50fTwvZGl2PgoJCQkJCQkJCQkJPC9kaXY+CgkJCQkJCQkJCTwvZGl2PgoJCQkJCQkJCTwvZGl2PmApOwoKCQkJCWlmIChhY3RpdmVfbWVzc2FnZXMubGVuZ3RoID09PSAwKSB7CgkJCQkJbWVzc2FnZSA9IG1lc3NhZ2UuYXBwZW5kVG8oJ2JvZHknKTsKCQkJCX0KCQkJCWVsc2UgewoKCQkJCQl2YXIgY2xvc2VzdF9tZXNzYWdlID0gYWN0aXZlX21lc3NhZ2VzLmxhc3QoKTsKCQkJCQltZXNzYWdlID0gbWVzc2FnZS5pbnNlcnRBZnRlcihjbG9zZXN0X21lc3NhZ2UpOwoJCQkJCWJvdHRvbSA9IHBhcnNlSW50KGNsb3Nlc3RfbWVzc2FnZS5jc3MoJ2JvdHRvbScpKSArIDQ7CgkJCQkJcmlnaHQgPSBwYXJzZUludChjbG9zZXN0X21lc3NhZ2UuY3NzKCdyaWdodCcpKSArIDQ7CgkJCQl9CgoJCQkJY29uc3QgcHJvbWlzZSA9IG5ldyBQcm9taXNlKChyZXNvbHZlLCByZWplY3QpID0+IHsKCQkJCQltZXNzYWdlCgkJCQkJCS5kcmFnZ2FibGUoewoJCQkJCQkJY29udGFpbm1lbnQ6ICd3aW5kb3cnLAoJCQkJCQkJY3Vyc29yOiAnbW92ZScsCgkJCQkJCQlzY3JvbGw6IGZhbHNlLAoJCQkJCQkJLy9zbmFwOiAnaHRtbCcsCgkJCQkJCQkvL3NuYXBUb2xlcmFuY2U6IDEwLAoJCQkJCQkJaGFuZGxlOiAnLm1lbnUtb3BlcmF0ZScsIC8vIGRvZXMgbm90IHdvcmsgd2l0aCBwb3NpdGlvbiAnZml4ZWQnCgkJCQkJCQlzdGFydDogZnVuY3Rpb24gKGV2ZW50LCB1aSkgewoJCQkJCQkJCXVpLmhlbHBlci5jc3MoewoJCQkJCQkJCQlib3R0b206ICdhdXRvJywKCQkJCQkJCQkJcmlnaHQ6ICdhdXRvJywKCQkJCQkJCQl9KTsKCQkJCQkJCX0sCgkJCQkJCX0pCgkJCQkJCS5jc3MoewoJCQkJCQkJJ3JpZ2h0JzogYCR7cmlnaHR9cHhgLAoJCQkJCQkJJ2JvdHRvbSc6IGAke2JvdHRvbX1weGAsCgkJCQkJCX0pCgkJCQkJCS5zaG93KHsKCQkJCQkJCWVmZmVjdDogImZhZGUiLAoJCQkJCQkJZGlyZWN0aW9uOiAnaW4nLAoJCQkJCQl9LCAyMDAsICgpID0+IHsKCQkJCQkJCXJldHVybiByZXNvbHZlKCdzaG93bicpOwoJCQkJCQl9KQoJCQkJCQkucmVzaXphYmxlKHsKCQkJCQkJCXN0YXJ0OiBmdW5jdGlvbiAoZXZlbnQsIHVpKSB7IH0KCQkJCQkJfSk7CgkJCQl9KTsKCgkJCQl2YXIgY2xvc2VUaW1lciA9IHNldFRpbWVvdXQoZnVuY3Rpb24gKGUpIHsKCQkJCQltZXNzYWdlLmZpbmQoJy5tZW51LW9wZXJhdGUgLmNsb3NlJykudHJpZ2dlckhhbmRsZXIoJ2NsaWNrJywgWzEyMDBdKTsKCQkJCX0sIDM1MDApOwoKCQkJCXRoaXMuVGFic1BsdWdpbkZyYW1lV29yaygnY2xvc2VNZXNzYWdlJywgbWVzc2FnZSk7CgkJCQl0aGlzLlRhYnNQbHVnaW5GcmFtZVdvcmsoJ3N0b3BDbG9zZU1lc3NhZ2UnLCBtZXNzYWdlLCBjbG9zZVRpbWVyKTsKCgkJCQlyZXR1cm4gcHJvbWlzZTsKCQkJfSwKCQkJY2xvc2VNZXNzYWdlOiBmdW5jdGlvbiAobWVzc2FnZSwgZHVyYXRpb24pIHsKCQkJCWlmICh0eXBlb2YgKGR1cmF0aW9uKSA9PSAndW5kZWZpbmVkJykgewoJCQkJCWR1cmF0aW9uID0gMjAwOwoJCQkJfQoJCQkJbWVzc2FnZS5maW5kKCcubWVudS1vcGVyYXRlIC5jbG9zZScpLm9uKCdjbGljayB0b3VjaHN0YXJ0JywgZnVuY3Rpb24gKGUsIGR1cmF0aW9uKSB7CgkJCQkJaWYgKHR5cGVvZiAoZS5pc1RyaWdnZXIpID09ICd1bmRlZmluZWQnKSB7CgkJCQkJCW1lc3NhZ2Uub2ZmKCdtb3VzZW92ZXInKTsKCQkJCQl9CgkJCQkJbWVzc2FnZS5oaWRlKHsKCQkJCQkJZWZmZWN0OiAiZmFkZSIsCgkJCQkJCWRpcmVjdGlvbjogJ291dCcsCgkJCQkJfSwgZHVyYXRpb24sIGZ1bmN0aW9uICgpIHsKCQkJCQkJbWVzc2FnZS5kcmFnZ2FibGUoJ2Rlc3Ryb3knKS5yZW1vdmUoKTsKCQkJCQl9KTsKCQkJCX0pOwoJCQl9LAoJCQlzdG9wQ2xvc2VNZXNzYWdlOiBmdW5jdGlvbiAobWVzc2FnZSwgY2xvc2VUaW1lcikgewoJCQkJbWVzc2FnZS5vbignbW91c2VvdmVyJywgeyB0aW1lcklkOiBjbG9zZVRpbWVyIH0sIGZ1bmN0aW9uIChlKSB7CgkJCQkJY2xlYXJUaW1lb3V0KGUuZGF0YS50aW1lcklkKTsKCQkJCQltZXNzYWdlLnN0b3AodHJ1ZSkuYW5pbWF0ZSh7CgkJCQkJCSdvcGFjaXR5JzogJzEnLAoJCQkJCX0sIDMwMCwgZnVuY3Rpb24gKCkgewoJCQkJCQltZXNzYWdlLmNzcygnb3BhY2l0eScsICcnKTsKCQkJCQl9KTsKCQkJCX0pOwoJCQl9LAoJCQl1cGRhdGVDb250cm9sczogZnVuY3Rpb24gKG5ld1NldHRpbmdzKSB7CgoJCQkJTWVzc2lhLnRvZ2dsZV9zYXZlX29wZXJhdGUoJ29mZicsIE1lc3NpYS5hbGxJbnB1dHMpOwoKCQkJCWZvciAodmFyIGtleSBpbiBuZXdTZXR0aW5ncykgewoJCQkJCWlmICh0eXBlb2YgKG5ld1NldHRpbmdzW2tleV0pID09ICdzdHJpbmcnKSB7CgkJCQkJCW5ld1NldHRpbmdzW2tleV0gPSBuZXdTZXR0aW5nc1trZXldLnJlcGxhY2UoL1xcIi9nLCAnIicpOwoJCQkJCQluZXdTZXR0aW5nc1trZXldID0gbmV3U2V0dGluZ3Nba2V5XS5yZXBsYWNlKC9cXCcvZywgJ1wnJyk7CgkJCQkJfQoJCQkJfQoKCQkJCWZvcm1Db250cm9scyA9IE1lc3NpYS5nZXRfZm9ybV9jb250cm9scygpOwoKCQkJCWZvciAodmFyIGkgPSAwOyBpIDwgZm9ybUNvbnRyb2xzLmxlbmd0aDsgaSsrKSB7CgoJCQkJCXZhciBjb250cm9sTmFtZSA9IGZvcm1Db250cm9sc1tpXS5uYW1lOwoJCQkJCXZhciBjb250cm9sVmFsID0gbmV3U2V0dGluZ3NbY29udHJvbE5hbWVdOwoKCQkJCQlzd2l0Y2ggKGZvcm1Db250cm9sc1tpXS5ub2RlTmFtZSkgewoJCQkJCQljYXNlICdJTlBVVCc6CgkJCQkJCQlpZiAoZm9ybUNvbnRyb2xzW2ldLnR5cGUgPT0gJ2NoZWNrYm94JykgewoJCQkJCQkJCSQoZm9ybUNvbnRyb2xzW2ldKS5wcm9wKCdjaGVja2VkJywgcGFyc2VJbnQoY29udHJvbFZhbCkpOwoJCQkJCQkJfQoJCQkJCQkJZWxzZSBpZiAoZm9ybUNvbnRyb2xzW2ldLnR5cGUgPT0gJ3JhZGlvJykgewoJCQkJCQkJCSQoZm9ybUNvbnRyb2xzW2ldKS5wcm9wKCdjaGVja2VkJywgJChmb3JtQ29udHJvbHNbaV0pLnZhbCgpID09PSBjb250cm9sVmFsKTsKCQkJCQkJCX0KCQkJCQkJCWVsc2UgewoJCQkJCQkJCSQoZm9ybUNvbnRyb2xzW2ldKS52YWwoY29udHJvbFZhbCk7CgkJCQkJCQl9CgkJCQkJCQkkKGZvcm1Db250cm9sc1tpXSkudHJpZ2dlcigndXBkYXRlZCcpOwoJCQkJCQkJYnJlYWs7CgoJCQkJCQljYXNlICdURVhUQVJFQSc6CgkJCQkJCQkkKGZvcm1Db250cm9sc1tpXSkudmFsKGNvbnRyb2xWYWwpOwoJCQkJCQkJJChmb3JtQ29udHJvbHNbaV0pLnRyaWdnZXIoJ3VwZGF0ZWQnKTsKCQkJCQkJCWJyZWFrOwoKCQkJCQkJY2FzZSAnU0VMRUNUJzoKCQkJCQkJCWlmIChmb3JtQ29udHJvbHNbaV0ubXVsdGlwbGUgPT0gdHJ1ZSkgewoKCQkJCQkJCQlpZiAoY29udHJvbFZhbC5sZW5ndGggPiAwKSB7CgkJCQkJCQkJCWZvciAodmFyIHogPSAwOyB6IDwgY29udHJvbFZhbC5sZW5ndGg7IHorKykgewoJCQkJCQkJCQkJJChmb3JtQ29udHJvbHNbaV0pLmZpbmQoJ29wdGlvblt2YWx1ZT0iJyArIGNvbnRyb2xWYWxbel0gKyAnIl0nKS5wcm9wKCdzZWxlY3RlZCcsICdzZWxlY3RlZCcpOwoJCQkJCQkJCQl9CgkJCQkJCQkJfQoJCQkJCQkJfQoJCQkJCQkJZWxzZSB7CgkJCQkJCQkJJChmb3JtQ29udHJvbHNbaV0pLmZpbmQoJ29wdGlvblt2YWx1ZT0iJyArIGNvbnRyb2xWYWwgKyAnIl0nKS5wcm9wKCdzZWxlY3RlZCcsICdzZWxlY3RlZCcpOwoJCQkJCQkJfQoJCQkJCQkJJChmb3JtQ29udHJvbHNbaV0pLnZhbChjb250cm9sVmFsKTsKCQkJCQkJCSQoZm9ybUNvbnRyb2xzW2ldKS50cmlnZ2VyKCd1cGRhdGVkJyk7CgkJCQkJCQlicmVhazsKCQkJCQl9CgoJCQkJCWlmIChmb3JtQ29udHJvbHNbaV0ubm9kZU5hbWUgPT0gJ0lOUFVUJyB8fCBmb3JtQ29udHJvbHNbaV0ubm9kZU5hbWUgPT0gJ1NFTEVDVCcpIHsKCQkJCQkJaWYgKHR5cGVvZiAoJChmb3JtQ29udHJvbHNbaV0pLmRhdGEoJ3RhZ3NpbnB1dCcpKSAhPSAndW5kZWZpbmVkJykgewoJCQkJCQkJJChmb3JtQ29udHJvbHNbaV0pLm9mZigpOwoJCQkJCQkJJChmb3JtQ29udHJvbHNbaV0pLnRhZ3NpbnB1dCgncmVtb3ZlQWxsJyk7CgkJCQkJCQkkKGZvcm1Db250cm9sc1tpXSkudGFnc2lucHV0KCdhZGQnLCBjb250cm9sVmFsKTsKCQkJCQkJCSQoZm9ybUNvbnRyb2xzW2ldKS5vbignaXRlbUFkZGVkIGl0ZW1SZW1vdmVkJywgTWVzc2lhLnNhdmVPcGVyYXRlKTsKCQkJCQkJfQoJCQkJCX0KCQkJCX0KCQkJCU1lc3NpYS50b2dnbGVfc2F2ZV9vcGVyYXRlKCdvbicsIE1lc3NpYS5hbGxJbnB1dHMpOwoJCQl9LAoJCQlwbGF5U291bmQ6IGZ1bmN0aW9uICh2b2x1bWUpIHsKCgkJCQl2YXIgYXVkaW8gPSAkKCcubWVudS1iZWVwJyk7CgoJCQkJYXVkaW8uZ2V0KDApLnZvbHVtZSA9IHZvbHVtZTsKCQkJCWF1ZGlvLmdldCgwKS5wbGF5KCk7CgkJCX0sCgkJfQoKCQljb25zdCBNZXNzaWEgPSB7CgoJCQltdWx0aXBsZTogJycsCgkJCXRhYnNEYXRhOiAkKCcjdGFicycpLmRhdGEoJ2dlbmVyYWwnKSwKCQkJYWxsSW5wdXRzOiAkKCcjdGFicyBpbnB1dDpub3QoLmlzb2xhdGVkKSwgI3RhYnMgc2VsZWN0Om5vdCguaXNvbGF0ZWQpLCAjdGFicyB0ZXh0YXJlYTpub3QoLmlzb2xhdGVkKScpLAoJCQlhY3RpdmVUYWI6IGZ1bmN0aW9uIChldmVudCwgdWkpIHsKCgkJCQl1aS5uZXdUYWIuZ2V0KDApLnNjcm9sbEludG9WaWV3KHsKCQkJCQliZWhhdmlvcjogJ3Ntb290aCcsCgkJCQkJYmxvY2s6ICdzdGFydCcsCgkJCQkJaW5saW5lOiAnbmVhcmVzdCcsCgkJCQl9KTsKCQkJfSwKCQkJb3BlbkhlbHBUYWI6IGZ1bmN0aW9uIChldmVudCkgewoKCQkJCXZhciBkYXRhID0gJCh0aGlzKS5kYXRhKCdzZWN0aW9uSWQnKTsKCQkJCXdpbmRvdy5zY3JvbGxUbyh7IHRvcDogMCwgYmVoYXZpb3I6ICdzbW9vdGgnIH0pOwoKCQkJCWlmICgnbm9uZScgPT09ICQoJyNjb250ZXh0dWFsLWhlbHAtd3JhcCcpLmNzcygnZGlzcGxheScpKSB7CgkJCQkJJCgnI2NvbnRleHR1YWwtaGVscC1saW5rJykudHJpZ2dlcignY2xpY2snKTsKCQkJCX0KCgkJCQlpZiAodHlwZW9mIGRhdGEgPT09ICd1bmRlZmluZWQnKSB7CgkJCQkJcmV0dXJuOwoJCQkJfQoKCQkJCSQoYC5jb250ZXh0dWFsLWhlbHAtdGFicyBhW2hyZWY9IiN0YWItcGFuZWwtJHtkYXRhfSJdYCkudHJpZ2dlcignY2xpY2snKTsKCQkJfSwKCQkJdG9nZ2xlU2VjdGlvbjogZnVuY3Rpb24gKGV2ZW50KSB7CgoJCQkJJCh0aGlzKS50b2dnbGVDbGFzcygiYXJyb3ctdHJhbnNmb3JtIik7CgoJCQkJdmFyIFIgPSAxMDsKCQkJCXZhciBlbCA9ICQodGhpcykubmV4dCgnLnNlY3Rpb24tY29udGVudC13cmFwcGVyJyk7CgoJCQkJZWwuc3RvcCh0cnVlKTsKCgkJCQlpZiAoZWwuaGFzQ2xhc3MoJ2NvbGxhcHNlZCcpKSB7CgkJCQkJdmFyIGhlaWdodCA9IGVsLmFkZENsYXNzKCdzaG93aW5nJykucmVtb3ZlQ2xhc3MoJ2NvbGxhcHNlZCcpLmhlaWdodCgpOwoJCQkJCXZhciBkdXIgPSBNYXRoLnNxcnQoaGVpZ2h0KSAqIFI7CgkJCQkJZWwuY3NzKCdoZWlnaHQnLCAwKTsKCQkJCQllbC5hbmltYXRlKHsKCQkJCQkJaGVpZ2h0OiBoZWlnaHQgKyAncHgnLAoJCQkJCX0sIHsKCQkJCQkJZHVyYXRpb246IGR1ciwKCQkJCQkJcHJvZ3Jlc3M6IGZ1bmN0aW9uICgpIHsKCQkJCQkJCSQoJyN0YWJzJykudHJpZ2dlcignc2Nyb2xsJyk7CgkJCQkJCX0sCgkJCQkJCWRvbmU6IGZ1bmN0aW9uICgpIHsKCgkJCQkJCQkkKHRoaXMpLmNzcygnaGVpZ2h0JywgJzEwMCUnKS5yZW1vdmVDbGFzcygnc2hvd2luZycpOwoJCQkJCQkJJCgnI3RhYnMnKS50cmlnZ2VyKCdzY3JvbGwnKTsKCQkJCQkJfSwKCQkJCQl9KTsKCQkJCX0KCQkJCWVsc2UgaWYgKGVsLmhhc0NsYXNzKCdoaWRpbmcnKSkgewoJCQkJCXZhciBjdXJyX2hlaWdodCA9IGVsLmNzcygnaGVpZ2h0Jyk7CgkJCQkJdmFyIGhlaWdodCA9IGVsLmNzcygnaGVpZ2h0JywgJycpLmhlaWdodCgpOwoJCQkJCXZhciBkdXIgPSBNYXRoLnNxcnQoaGVpZ2h0KSAqIFI7CgoJCQkJCWVsLmNzcygnaGVpZ2h0JywgY3Vycl9oZWlnaHQpOwoJCQkJCWVsLmFkZENsYXNzKCdzaG93aW5nJykucmVtb3ZlQ2xhc3MoJ2hpZGluZycpLmFuaW1hdGUoCgkJCQkJCXsKCQkJCQkJCWhlaWdodDogaGVpZ2h0ICsgJ3B4JywKCQkJCQkJfSwKCQkJCQkJewoJCQkJCQkJZHVyYXRpb246IGR1ciwKCQkJCQkJCXByb2dyZXNzOiBmdW5jdGlvbiAoKSB7CgkJCQkJCQkJJCgnI3RhYnMnKS50cmlnZ2VyKCdzY3JvbGwnKTsKCQkJCQkJCX0sCgkJCQkJCQlkb25lOiBmdW5jdGlvbiAoKSB7CgoJCQkJCQkJCSQodGhpcykuY3NzKCdoZWlnaHQnLCAnMTAwJScpLnJlbW92ZUNsYXNzKCdzaG93aW5nJyk7CgkJCQkJCQkJJCgnI3RhYnMnKS50cmlnZ2VyKCdzY3JvbGwnKTsKCQkJCQkJCX0sCgkJCQkJCX0pOwoJCQkJfQoJCQkJZWxzZSBpZiAoZWwuaGFzQ2xhc3MoJ3Nob3dpbmcnKSkgewoJCQkJCXZhciBoZWlnaHQgPSBlbC5oZWlnaHQoKTsKCQkJCQl2YXIgZHVyID0gTWF0aC5zcXJ0KGhlaWdodCkgKiBSOwoJCQkJCWVsLmFkZENsYXNzKCdoaWRpbmcnKS5yZW1vdmVDbGFzcygnc2hvd2luZycpLmFuaW1hdGUoewoJCQkJCQloZWlnaHQ6IDAsCgkJCQkJfSwgewoJCQkJCQlkdXJhdGlvbjogZHVyLAoJCQkJCQlwcm9ncmVzczogZnVuY3Rpb24gKCkgewoJCQkJCQkJJCgnI3RhYnMnKS50cmlnZ2VyKCdzY3JvbGwnKTsKCQkJCQkJfSwKCQkJCQkJZG9uZTogZnVuY3Rpb24gKCkgewoKCQkJCQkJCSQodGhpcykuYWRkQ2xhc3MoJ2NvbGxhcHNlZCcpLnJlbW92ZUNsYXNzKCdoaWRpbmcnKS5jc3MoJ2hlaWdodCcsICcnKTsKCQkJCQkJCSQoJyN0YWJzJykudHJpZ2dlcignc2Nyb2xsJyk7CgkJCQkJCX0sCgkJCQkJfSk7CgkJCQl9CgkJCQllbHNlIHsKCQkJCQl2YXIgaGVpZ2h0ID0gZWwuaGVpZ2h0KCk7CgkJCQkJdmFyIGR1ciA9IE1hdGguc3FydChoZWlnaHQpICogUjsKCQkJCQllbC5hZGRDbGFzcygnaGlkaW5nJykuYW5pbWF0ZSh7CgkJCQkJCWhlaWdodDogMCwKCQkJCQl9LCB7CgkJCQkJCWR1cmF0aW9uOiBkdXIsCgkJCQkJCXByb2dyZXNzOiBmdW5jdGlvbiAoKSB7CgkJCQkJCQkkKCcjdGFicycpLnRyaWdnZXIoJ3Njcm9sbCcpOwoJCQkJCQl9LAoJCQkJCQlkb25lOiBmdW5jdGlvbiAoKSB7CgoJCQkJCQkJJCh0aGlzKS5hZGRDbGFzcygnY29sbGFwc2VkJykucmVtb3ZlQ2xhc3MoJ2hpZGluZycpLmNzcygnaGVpZ2h0JywgJycpOwoJCQkJCQkJJCgnI3RhYnMnKS50cmlnZ2VyKCdzY3JvbGwnKTsKCQkJCQkJfSwKCQkJCQl9KTsKCQkJCX0KCQkJfSwKCQkJc2NyZWVuX2xvY2s6IGFzeW5jIGZ1bmN0aW9uIChldmVudCwgb3BlcmF0b3IpIHsKCgkJCQlyZXR1cm4gYXdhaXQgbmV3IFByb21pc2UoKHJlc29sdmUsIHJlamVjdCkgPT4gewoKCQkJCQkkKG9wZXJhdG9yKS5wcm9wKCdkaXNhYmxlZCcsIHRydWUpOwoJCQkJCSQob3BlcmF0b3IpLnZhbCgkKCcjdGFicycpLmRhdGEoJ2dlbmVyYWwnKS5zdGF0dXNCZXR3ZWVuUmVxdWVzdHMpLnJlbW92ZUNsYXNzKCk7CgoJCQkJCSQoJ2JvZHknKS5wcmVwZW5kKGA8ZGl2IGlkPSJzcGlubmVyX3NhdmluZyIgc3R5bGU9InotaW5kZXg6IDk5OTk5OyI+PGRpdiBpZD0ic3Bpbm5lcl9zYXZpbmdfaW5uZXIiPjxzdmcgY2xhc3M9Imxkcy1jdXJ2ZS1iYXJzIiB3aWR0aD0iMTIwcHgiIGhlaWdodD0iMTIwcHgiIHhtbG5zPSJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2ZyIgeG1sbnM6eGxpbms9Imh0dHA6Ly93d3cudzMub3JnLzE5OTkveGxpbmsiIHZpZXdCb3g9IjAgMCAxMDAgMTAwIiBwcmVzZXJ2ZUFzcGVjdFJhdGlvPSJ4TWlkWU1pZCI+PGcgdHJhbnNmb3JtPSJ0cmFuc2xhdGUoNTAsNTApIj48Y2lyY2xlIGN4PSIwIiBjeT0iMCIgcj0iOC4zMzMzMzMzMzMzMzMzMzQiIGZpbGw9Im5vbmUiIHN0cm9rZT0iIzQ2NThhYyIgc3Ryb2tlLXdpZHRoPSIyIiBzdHJva2UtZGFzaGFycmF5PSIyNi4xNzk5Mzg3Nzk5MTQ5NDUgMjYuMTc5OTM4Nzc5OTE0OTQ1IiB0cmFuc2Zvcm09InJvdGF0ZSgyLjU4Nzk4KSI+PGFuaW1hdGVUcmFuc2Zvcm0gYXR0cmlidXRlTmFtZT0idHJhbnNmb3JtIiB0eXBlPSJyb3RhdGUiIHZhbHVlcz0iMCAwIDA7MzYwIDAgMCIgdGltZXM9IjA7MSIgZHVyPSIxcyIgY2FsY01vZGU9InNwbGluZSIga2V5U3BsaW5lcz0iMC4yIDAgMC44IDEiIGJlZ2luPSIwIiByZXBlYXRDb3VudD0iaW5kZWZpbml0ZSI+PC9hbmltYXRlVHJhbnNmb3JtPjwvY2lyY2xlPjxjaXJjbGUgY3g9IjAiIGN5PSIwIiByPSIxNi42NjY2NjY2NjY2NjY2NjgiIGZpbGw9Im5vbmUiIHN0cm9rZT0iI2U3MDA4YSIgc3Ryb2tlLXdpZHRoPSIyIiBzdHJva2UtZGFzaGFycmF5PSI1Mi4zNTk4Nzc1NTk4Mjk4OSA1Mi4zNTk4Nzc1NTk4Mjk4OSIgdHJhbnNmb3JtPSJyb3RhdGUoNjQuMzcxMikiPjxhbmltYXRlVHJhbnNmb3JtIGF0dHJpYnV0ZU5hbWU9InRyYW5zZm9ybSIgdHlwZT0icm90YXRlIiB2YWx1ZXM9IjAgMCAwOzM2MCAwIDAiIHRpbWVzPSIwOzEiIGR1cj0iMXMiIGNhbGNNb2RlPSJzcGxpbmUiIGtleVNwbGluZXM9IjAuMiAwIDAuOCAxIiBiZWdpbj0iLTAuMiIgcmVwZWF0Q291bnQ9ImluZGVmaW5pdGUiPjwvYW5pbWF0ZVRyYW5zZm9ybT48L2NpcmNsZT48Y2lyY2xlIGN4PSIwIiBjeT0iMCIgcj0iMjUiIGZpbGw9Im5vbmUiIHN0cm9rZT0iI2ZmMDAzYSIgc3Ryb2tlLXdpZHRoPSIyIiBzdHJva2UtZGFzaGFycmF5PSI3OC41Mzk4MTYzMzk3NDQ4MyA3OC41Mzk4MTYzMzk3NDQ4MyIgdHJhbnNmb3JtPSJyb3RhdGUoMTQ5LjY1OSkiPjxhbmltYXRlVHJhbnNmb3JtIGF0dHJpYnV0ZU5hbWU9InRyYW5zZm9ybSIgdHlwZT0icm90YXRlIiB2YWx1ZXM9IjAgMCAwOzM2MCAwIDAiIHRpbWVzPSIwOzEiIGR1cj0iMXMiIGNhbGNNb2RlPSJzcGxpbmUiIGtleVNwbGluZXM9IjAuMiAwIDAuOCAxIiBiZWdpbj0iLTAuNCIgcmVwZWF0Q291bnQ9ImluZGVmaW5pdGUiPjwvYW5pbWF0ZVRyYW5zZm9ybT48L2NpcmNsZT48Y2lyY2xlIGN4PSIwIiBjeT0iMCIgcj0iMzMuMzMzMzMzMzMzMzMzMzM2IiBmaWxsPSJub25lIiBzdHJva2U9IiNmZjZkMDAiIHN0cm9rZS13aWR0aD0iMiIgc3Ryb2tlLWRhc2hhcnJheT0iMTA0LjcxOTc1NTExOTY1OTc4IDEwNC43MTk3NTUxMTk2NTk3OCIgdHJhbnNmb3JtPSJyb3RhdGUoMjM5LjAzKSI+PGFuaW1hdGVUcmFuc2Zvcm0gYXR0cmlidXRlTmFtZT0idHJhbnNmb3JtIiB0eXBlPSJyb3RhdGUiIHZhbHVlcz0iMCAwIDA7MzYwIDAgMCIgdGltZXM9IjA7MSIgZHVyPSIxcyIgY2FsY01vZGU9InNwbGluZSIga2V5U3BsaW5lcz0iMC4yIDAgMC44IDEiIGJlZ2luPSItMC42IiByZXBlYXRDb3VudD0iaW5kZWZpbml0ZSI+PC9hbmltYXRlVHJhbnNmb3JtPjwvY2lyY2xlPjxjaXJjbGUgY3g9IjAiIGN5PSIwIiByPSI0MS42NjY2NjY2NjY2NjY2NjQiIGZpbGw9Im5vbmUiIHN0cm9rZT0iI2ZmYzUzZiIgc3Ryb2tlLXdpZHRoPSIyIiBzdHJva2UtZGFzaGFycmF5PSIxMzAuODk5NjkzODk5NTc0NzEgMTMwLjg5OTY5Mzg5OTU3NDcxIiB0cmFuc2Zvcm09InJvdGF0ZSgzMjAuMDEyKSI+PGFuaW1hdGVUcmFuc2Zvcm0gYXR0cmlidXRlTmFtZT0idHJhbnNmb3JtIiB0eXBlPSJyb3RhdGUiIHZhbHVlcz0iMCAwIDA7MzYwIDAgMCIgdGltZXM9IjA7MSIgZHVyPSIxcyIgY2FsY01vZGU9InNwbGluZSIga2V5U3BsaW5lcz0iMC4yIDAgMC44IDEiIGJlZ2luPSItMC44IiByZXBlYXRDb3VudD0iaW5kZWZpbml0ZSI+PC9hbmltYXRlVHJhbnNmb3JtPjwvY2lyY2xlPjwvZz48L3N2Zz48L2Rpdj48L2Rpdj5gKTsKCQkJCQkkKCdib2R5JykuYWRkQ2xhc3MoJ3NldHRpbmctc2F2aW5nJyk7CgoJCQkJCSQoJ2JvZHkgI3NwaW5uZXJfc2F2aW5nJykuYW5pbWF0ZSh7CgkJCQkJCW9wYWNpdHk6IDEsCgkJCQkJfSwgMTUwLCAic3dpbmciLCBmdW5jdGlvbiAoKSB7CgoJCQkJCQlzZXRUaW1lb3V0KGZ1bmN0aW9uICgpIHsKCQkJCQkJCSQoJ2JvZHkgI3NwaW5uZXJfc2F2aW5nX2lubmVyJykuYW5pbWF0ZSh7CgkJCQkJCQkJb3BhY2l0eTogMSwKCQkJCQkJCX0sIDIwMCwgInN3aW5nIiwgZnVuY3Rpb24gKCkgewoJCQkJCQkJCXJlc29sdmUoW2V2ZW50LCBvcGVyYXRvcl0pOwoJCQkJCQkJfSk7CgkJCQkJCX0sIDIwMCk7CgkJCQkJfSk7CgkJCQl9KTsKCQkJfSwKCQkJc2NyZWVuX3VubG9ja19zdWNjZXNzOiBhc3luYyBmdW5jdGlvbiAoKSB7CgoJCQkJcmV0dXJuIGF3YWl0IG5ldyBQcm9taXNlKChyZXNvbHZlLCByZWplY3QpID0+IHsKCgkJCQkJJCgnYm9keSAjc3Bpbm5lcl9zYXZpbmdfaW5uZXInKS5hbmltYXRlKHsKCQkJCQkJb3BhY2l0eTogMCwKCQkJCQl9LCAyNTAsICJzd2luZyIsIGZ1bmN0aW9uICgpIHsKCgkJCQkJCXNldFRpbWVvdXQoZnVuY3Rpb24gKCkgewoJCQkJCQkJcmVzb2x2ZSgpOwoJCQkJCQl9LCA1MDApOwoJCQkJCX0pOwoJCQkJfSk7CgkJCX0sCgkJCXNjcmVlbl91bmxvY2tfZXJyb3I6IGFzeW5jIGZ1bmN0aW9uIChvcGVyYXRvcikgewoKCQkJCXJldHVybiBhd2FpdCBuZXcgUHJvbWlzZSgocmVzb2x2ZSwgcmVqZWN0KSA9PiB7CgoJCQkJCSQob3BlcmF0b3IpLm9mZignY2xpY2snKTsKCQkJCQkkKG9wZXJhdG9yKS52YWwoJCgnI3RhYnMnKS5kYXRhKCdnZW5lcmFsJykuYWpheEVycm9yKS5wcm9wKCdkaXNhYmxlZCcsIGZhbHNlKS5jc3MoewoJCQkJCQknY29sb3InOiAnI2YwMCcsCgkJCQkJCSdib3JkZXInOiAnMnB4IHNvbGlkICNmZjA0MDQnLAoJCQkJCX0pLm9uKCdjbGljaycsIGZ1bmN0aW9uICgpIHsKCQkJCQkJbG9jYXRpb24ucmVsb2FkKCk7CgkJCQkJfSk7CgoJCQkJCSQoJ2JvZHkgI3NwaW5uZXJfc2F2aW5nX2lubmVyJykuYW5pbWF0ZSh7CgkJCQkJCW9wYWNpdHk6IDAsCgkJCQkJfSwgMjUwLCAic3dpbmciLCBmdW5jdGlvbiAoKSB7CgoJCQkJCQlzZXRUaW1lb3V0KGZ1bmN0aW9uICgpIHsKCQkJCQkJCSQoJ2JvZHkgI3NwaW5uZXJfc2F2aW5nJykuYW5pbWF0ZSh7CgkJCQkJCQkJb3BhY2l0eTogMCwKCQkJCQkJCX0sIDEwMCwgInN3aW5nIiwgZnVuY3Rpb24gKCkgewoKCQkJCQkJCQkkKCdib2R5ICNzcGlubmVyX3NhdmluZycpLnJlbW92ZSgpOwoJCQkJCQkJCXJlc29sdmUoKTsKCQkJCQkJCX0pOwoJCQkJCQl9LCA1MDApOwoJCQkJCX0pOwoJCQkJfSk7CgkJCX0sCgkJCXNhdmVPcGVyYXRlOiBmdW5jdGlvbiAoZSkgewoKCQkJCSQoJy53cmFwICNzYXZlJykudmFsKCQoJyN0YWJzJykuZGF0YSgnZ2VuZXJhbCcpLm9uY2hhbmdlQnRuVGV4dCkucmVtb3ZlQ2xhc3MoKS5hZGRDbGFzcygnYWN0aXZlJyk7CgkJCQkkKCcud3JhcCAjc2F2ZScpLnByb3AoJ2Rpc2FibGVkJywgZmFsc2UpOwoJCQkJJChkb2N1bWVudCkudHJpZ2dlcignbWVzc2lhQ29udGVudElzRGlydHknKTsKCQkJfSwKCQkJcmVzZXRTYXZlU3RhdGU6IGZ1bmN0aW9uIG5hbWUoZSkgewoJCQkJY29uc3Qgc2F2ZUJ0biA9ICQoJy53cmFwICNzYXZlJyk7CgoJCQkJc2F2ZUJ0bgoJCQkJCS5wcm9wKCdkaXNhYmxlZCcsIHRydWUpCgkJCQkJLnJlbW92ZUF0dHIoJ2NsYXNzJykKCQkJCQkudGV4dChzYXZlQnRuLmRhdGEoJ2luaXQnKSk7CgkJCX0sCgkJCXNhdmU6IGZ1bmN0aW9uIChlKSB7CgoJCQkJJCgnYm9keScpLmRhdGEoJ21lc3NpYVByb2NlZWRTYXZpbmcnLCBbXSk7CgkJCQkkKCdib2R5JykudHJpZ2dlcignYmVmb3JlU2F2ZScpOwoKCQkJCWlmICgkKCdib2R5JykuZGF0YSgnbWVzc2lhUHJvY2VlZFNhdmluZycpLmluY2x1ZGVzKGZhbHNlKSkgewoJCQkJCXJldHVybjsKCQkJCX0KCgkJCQlNZXNzaWEuc2NyZWVuX2xvY2soZSwgdGhpcykudGhlbihNZXNzaWEuZG9BamF4U2F2ZVNldHRpbmdzKTsKCQkJfSwKCQkJZG9BamF4U2F2ZVNldHRpbmdzOiBmdW5jdGlvbiAoYXJncykgewoKCQkJCWNvbnN0CgkJCQkJZGF0YSA9IE1lc3NpYS50YWJzRGF0YSwKCQkJCQlzZXR0aW5ncyA9IE1lc3NpYS5nZXRfZm9ybV9jb250cm9scygpLm5vdCgnaW5wdXRbdHlwZT0icmFkaW8iXTpub3QoOmNoZWNrZWQpJyksCgkJCQkJcHJlc2V0ID0gZGF0YS5zZXR0aW5nUHJlc2V0LAoJCQkJCWV2ZW50ID0gYXJnc1swXSwKCQkJCQlvcGVyYXRvciA9IGFyZ3NbMV07CgoJCQkJdmFyIHNldHRpbmdfYXJyID0ge307CgoJCQkJZm9yICh2YXIgaSA9IDA7IGkgPCBzZXR0aW5ncy5sZW5ndGg7IGkrKykgewoKCQkJCQl2YXIgc2F2ZV92YWx1ZTsKCgkJCQkJaWYgKHNldHRpbmdzW2ldLnR5cGUgPT0gJ2NoZWNrYm94JykgewoJCQkJCQlpZiAodHlwZW9mICgkKHNldHRpbmdzW2ldKS5kYXRhKCdzYXZlLXZhbCcpKSAhPSAndW5kZWZpbmVkJykgewoJCQkJCQkJc2F2ZV92YWx1ZSA9ICQoc2V0dGluZ3NbaV0pLmRhdGEoJ3NhdmUtdmFsJyk7CgkJCQkJCX0KCQkJCQkJZWxzZSB7CgkJCQkJCQkoc2V0dGluZ3NbaV0uY2hlY2tlZCkgPyBzYXZlX3ZhbHVlID0gMSA6IHNhdmVfdmFsdWUgPSAwOwoJCQkJCQl9CgkJCQkJfQoJCQkJCWVsc2UgewoJCQkJCQlpZiAodHlwZW9mICgkKHNldHRpbmdzW2ldKS5kYXRhKCdzYXZlLXZhbCcpKSAhPSAndW5kZWZpbmVkJykgewoJCQkJCQkJc2F2ZV92YWx1ZSA9ICQoc2V0dGluZ3NbaV0pLmRhdGEoJ3NhdmUtdmFsJyk7CgkJCQkJCX0KCQkJCQkJZWxzZSBpZiAoc2V0dGluZ3NbaV0udHlwZSA9PSAnc2VsZWN0LW11bHRpcGxlJykgewoKCQkJCQkJCXZhciB2YWwgPSAkKHNldHRpbmdzW2ldKS52YWwoKTsKCgkJCQkJCQlpZiAodmFsID09PSBudWxsKSB7CgkJCQkJCQkJc2F2ZV92YWx1ZSA9IC0xOwoJCQkJCQkJfQoJCQkJCQkJZWxzZSBpZiAodmFsLmxlbmd0aCA9PT0gMCkgewoJCQkJCQkJCXNhdmVfdmFsdWUgPSAtMTsKCQkJCQkJCX0KCQkJCQkJCWVsc2UgewoJCQkJCQkJCXNhdmVfdmFsdWUgPSAkKHNldHRpbmdzW2ldKS52YWwoKTsKCQkJCQkJCX0KCQkJCQkJfQoJCQkJCQllbHNlIGlmIChzZXR0aW5nc1tpXS50eXBlID09ICdyYWRpbycgJiYgJChzZXR0aW5nc1tpXSkucHJvcCgnY2hlY2tlZCcpKSB7CgkJCQkJCQlzYXZlX3ZhbHVlID0gJChzZXR0aW5nc1tpXSkudmFsKCk7CgkJCQkJCX0KCQkJCQkJZWxzZSB7CgkJCQkJCQlzYXZlX3ZhbHVlID0gJChzZXR0aW5nc1tpXSkudmFsKCk7CgkJCQkJCX0KCQkJCQl9CgoJCQkJCXNldHRpbmdfYXJyW3NldHRpbmdzW2ldLm5hbWVdID0gc2F2ZV92YWx1ZTsKCQkJCX0KCgkJCQl4aHIgPSAkLmFqYXgoewoJCQkJCXR5cGU6ICdQT1NUJywKCQkJCQl1cmw6IGRhdGEuYWpheFVybCwKCQkJCQlkYXRhOiB7CgkJCQkJCWFjdGlvbjogZGF0YS5hY3Rpb25TYXZlLAoJCQkJCQltZXNzaWFOb25jZTogZGF0YS5zZXR0aW5nRm9ybU5vbmNlLAoJCQkJCQlkYXRhOiB7CgkJCQkJCQlBSkFYX01hcmtlcjogbWVzc2lhVmFycy5BSkFYX01hcmtlciwKCQkJCQkJCW1lbnVfdHlwZTogZGF0YS5tZW51VHlwZSwKCQkJCQkJCXByZXNldDogcHJlc2V0LAoJCQkJCQkJc2V0dGluZ3M6IHNldHRpbmdfYXJyLAoJCQkJCQl9LAoJCQkJCX0sCgkJCQkJYmVmb3JlU2VuZDogZnVuY3Rpb24gKCkgewoKCQkJCQkJaWYgKHhociAhPSBudWxsKSB7CgkJCQkJCQl4aHIuYWJvcnQoKTsKCQkJCQkJCXhociA9IG51bGw7CgkJCQkJCX0KCQkJCQl9LAoJCQkJCXN1Y2Nlc3M6IGZ1bmN0aW9uIChzZXJ2ZXIpIHsKCgkJCQkJCU1lc3NpYQoJCQkJCQkJLnNjcmVlbl91bmxvY2tfc3VjY2VzcygpCgkJCQkJCQkudGhlbihmdW5jdGlvbiAoKSB7CgoJCQkJCQkJCU1lc3NpYS5yZW1vdmVfc3Bpbm5lcigpOwoKCQkJCQkJCQlpZiAoc2VydmVyLmRhdGEuY29kZSA9PT0gMjAwKSB7CgoJCQkJCQkJCQkkLmZuLlRhYnNQbHVnaW5GcmFtZVdvcmsoJ3VwZGF0ZUNvbnRyb2xzJywgc2VydmVyLmRhdGEubmV3X3ByZXNldCk7CgoJCQkJCQkJCQlpZiAodHlwZW9mIChzZXJ2ZXIuZGF0YS5leHRyYV9kYXRhKSAhPSAndW5kZWZpbmVkJyAmJiBPYmplY3Qua2V5cyhzZXJ2ZXIuZGF0YS5leHRyYV9kYXRhKS5sZW5ndGggPiAwKSB7CgkJCQkJCQkJCQl2YXIgZXh0cmFfZGF0YSA9IHNlcnZlci5kYXRhLmV4dHJhX2RhdGE7CgkJCQkJCQkJCX0KCQkJCQkJCQkJZWxzZSB7CgkJCQkJCQkJCQl2YXIgZXh0cmFfZGF0YSA9IGZhbHNlOwoJCQkJCQkJCQl9CgoJCQkJCQkJCQkkKCcjdGFicycpLnRyaWdnZXJIYW5kbGVyKCdwcmVzZXRTYXZlZCcsIFtzZXJ2ZXIuZGF0YS5uZXdfcHJlc2V0LCBleHRyYV9kYXRhXSk7CgkJCQkJCQkJCSQob3BlcmF0b3IpLnZhbChzZXJ2ZXIuZGF0YS5idG5fdGV4dCkucmVtb3ZlQ2xhc3MoKS5hZGRDbGFzcygnXzIwMCcpOwoJCQkJCQkJCX0KCgkJCQkJCQkJaWYgKHNlcnZlci5kYXRhLmNvZGUgPT09IDQwMCkgewoJCQkJCQkJCQkkKG9wZXJhdG9yKS52YWwoc2VydmVyLmRhdGEuYnRuX3RleHQpLnByb3AoJ2Rpc2FibGVkJywgZmFsc2UpLnJlbW92ZUNsYXNzKCkuYWRkQ2xhc3MoJ180MDAnKTsKCQkJCQkJCQl9CgoJCQkJCQkJCWlmIChzZXJ2ZXIuZGF0YS5jb2RlID09PSA0MDMpIHsKCgkJCQkJCQkJCSQob3BlcmF0b3IpLm9mZignY2xpY2snKTsKCQkJCQkJCQkJJChvcGVyYXRvcikudmFsKHNlcnZlci5kYXRhLmJ0bl90ZXh0KS5wcm9wKCdkaXNhYmxlZCcsIGZhbHNlKS5yZW1vdmVDbGFzcygpLmFkZENsYXNzKCdfNDAzJykub24oJ2NsaWNrJywgZnVuY3Rpb24gKCkgewoJCQkJCQkJCQkJbG9jYXRpb24ucmVsb2FkKCk7CgkJCQkJCQkJCX0pOwoJCQkJCQkJCX0KCgkJCQkJCQkJJChkb2N1bWVudCkudHJpZ2dlcignbWVzc2lhQ29udGVudElzU2F2ZWQnKTsKCgkJCQkJCQkJaWYgKHNlcnZlci5kYXRhLnJlbG9hZCA9PT0gdHJ1ZSkgewoJCQkJCQkJCQl3aW5kb3cubG9jYXRpb24ucmVsb2FkKCk7CgkJCQkJCQkJfQoJCQkJCQkJfSk7CgkJCQkJfSwKCQkJCQllcnJvcjogZnVuY3Rpb24gKE1MSHR0cFJlcXVlc3QsIHRleHRTdGF0dXMsIGVycm9yVGhyb3duKSB7CgoJCQkJCQlpZiAoeGhyLnN0YXR1cyA9PT0gMCAmJiB4aHIuc3RhdHVzVGV4dCA9PSAnYWJvcnQnKSB7CgkJCQkJCQlyZXR1cm47CgkJCQkJCX0KCQkJCQkJZWxzZSB7CgoJCQkJCQkJTWVzc2lhLnNjcmVlbl91bmxvY2tfZXJyb3Iob3BlcmF0b3IpOwoJCQkJCQl9CgkJCQkJfQoJCQkJfSk7CgkJCX0sCgkJCXJlc2V0OiBmdW5jdGlvbiAoZSkgewoKCQkJCXZhciB0b19jb250aW51ZSA9IGNvbmZpcm0oJCgnI3RhYnMnKS5kYXRhKCdnZW5lcmFsJykuZGVtby5jb25maXJtUmVzZXRTZXR0aW5ncyk7CgoJCQkJaWYgKHRydWUgPT09IHRvX2NvbnRpbnVlKSB7CgkJCQkJTWVzc2lhCgkJCQkJCS5zY3JlZW5fbG9jayhlLCB0aGlzKQoJCQkJCQkudGhlbihNZXNzaWEuZG9fYWpheF9yZXNldF9zZXR0aW5ncyk7CgkJCQl9CgkJCX0sCgkJCWV4cG9ydDogZnVuY3Rpb24gKGUpIHsKCgkJCQl2YXIgdG9fY29udGludWUgPSBjb25maXJtKCQoJyN0YWJzJykuZGF0YSgnZ2VuZXJhbCcpLmRlbW8uY29uZmlybURlbW9FeHBvcnQpOwoKCQkJCWlmICh0cnVlID09PSB0b19jb250aW51ZSkgewoJCQkJCU1lc3NpYS5zY3JlZW5fbG9jayhlLCB0aGlzKS50aGVuKE1lc3NpYS5kb19hamF4X2V4cG9ydF9ibG9nKTsKCQkJCX0KCQkJfSwKCQkJZG9fYWpheF9yZXNldF9zZXR0aW5nczogZnVuY3Rpb24gKGFyZ3MpIHsKCgkJCQljb25zdAoJCQkJCWRhdGEgPSBNZXNzaWEudGFic0RhdGEsCgkJCQkJcHJlc2V0ID0gZGF0YS5zZXR0aW5nUHJlc2V0LAoJCQkJCWV2ZW50ID0gYXJnc1swXSwKCQkJCQlvcGVyYXRvciA9IGFyZ3NbMV07CgoJCQkJeGhyID0gJC5hamF4KHsKCQkJCQl0eXBlOiAnUE9TVCcsCgkJCQkJdXJsOiBkYXRhLmFqYXhVcmwsCgkJCQkJZGF0YTogewoJCQkJCQlhY3Rpb246IGRhdGEuYWN0aW9uUmVzZXQsCgkJCQkJCW1lc3NpYU5vbmNlOiBkYXRhLnNldHRpbmdGb3JtTm9uY2UsCgkJCQkJCWRhdGE6IHsKCQkJCQkJCUFKQVhfTWFya2VyOiBtZXNzaWFWYXJzLkFKQVhfTWFya2VyLAoJCQkJCQkJbWVudV90eXBlOiBkYXRhLm1lbnVUeXBlLAoJCQkJCQkJcHJlc2V0OiBwcmVzZXQsCgkJCQkJCX0sCgkJCQkJfSwKCQkJCQliZWZvcmVTZW5kOiBmdW5jdGlvbiAoKSB7CgoJCQkJCQlpZiAoeGhyICE9IG51bGwpIHsKCQkJCQkJCXhoci5hYm9ydCgpOwoJCQkJCQkJeGhyID0gbnVsbDsKCQkJCQkJfQoJCQkJCX0sCgkJCQkJc3VjY2VzczogZnVuY3Rpb24gKHNlcnZlcikgewoKCQkJCQkJTWVzc2lhCgkJCQkJCQkuc2NyZWVuX3VubG9ja19zdWNjZXNzKCkKCQkJCQkJCS50aGVuKGZ1bmN0aW9uICgpIHsKCgkJCQkJCQkJJC5mbi5UYWJzUGx1Z2luRnJhbWVXb3JrKCdwbGF5U291bmQnLCAwLjMpOwoJCQkJCQkJCU1lc3NpYS5yZW1vdmVfc3Bpbm5lcigpOwoKCQkJCQkJCQl0cnkgewoKCQkJCQkJCQkJaWYgKHNlcnZlci5kYXRhLmNvZGUgPT09IDIwMCkgewoJCQkJCQkJCQkJJC5mbi5UYWJzUGx1Z2luRnJhbWVXb3JrKCdzaG93TWVzc2FnZScsIHNlcnZlci5kYXRhLm1zZywgJ3N1Y2Nlc3MnKTsKCQkJCQkJCQkJCSQob3BlcmF0b3IpLnZhbChzZXJ2ZXIuZGF0YS5idG5fdGV4dCk7CgoJCQkJCQkJCQkJaWYgKHNlcnZlci5kYXRhLnJlbG9hZCA9PT0gdHJ1ZSkgewoJCQkJCQkJCQkJCXdpbmRvdy5sb2NhdGlvbi5yZWxvYWQoKTsKCQkJCQkJCQkJCX0KCQkJCQkJCQkJfQoKCQkJCQkJCQkJaWYgKHNlcnZlci5kYXRhLmNvZGUgPT09IDQwMykgewoKCQkJCQkJCQkJCSQob3BlcmF0b3IpLm9mZignY2xpY2snKTsKCQkJCQkJCQkJCSQob3BlcmF0b3IpLnZhbChzZXJ2ZXIuZGF0YS5idG5fdGV4dCkucHJvcCgnZGlzYWJsZWQnLCBmYWxzZSkucmVtb3ZlQ2xhc3MoKS5hZGRDbGFzcygnXzQwMycpLm9uKCdjbGljaycsIGZ1bmN0aW9uICgpIHsKCQkJCQkJCQkJCQlsb2NhdGlvbi5yZWxvYWQoKTsKCQkJCQkJCQkJCX0pOwoJCQkJCQkJCQl9CgkJCQkJCQkJfQoJCQkJCQkJCWNhdGNoIChlKSB7CgkJCQkJCQkJCU1lc3NpYUV4dC5sb2dnZXIuZXJyb3Ioc2VydmVyKTsKCQkJCQkJCQkJJC5mbi5UYWJzUGx1Z2luRnJhbWVXb3JrKCdzaG93TWVzc2FnZScsIGRhdGEudW5leHBlY3RlZEVyciwgJ2Vycm9yJyk7CgkJCQkJCQkJfQoJCQkJCQkJfSk7CgkJCQkJfSwKCQkJCQllcnJvcjogZnVuY3Rpb24gKE1MSHR0cFJlcXVlc3QsIHRleHRTdGF0dXMsIGVycm9yVGhyb3duKSB7CgoJCQkJCQlpZiAoeGhyLnN0YXR1cyA9PT0gMCAmJiB4aHIuc3RhdHVzVGV4dCA9PSAnYWJvcnQnKSB7CgkJCQkJCQlyZXR1cm47CgkJCQkJCX0KCQkJCQkJZWxzZSB7CgkJCQkJCQlNZXNzaWEuc2NyZWVuX3VubG9ja19lcnJvcihvcGVyYXRvcik7CgkJCQkJCX0KCQkJCQl9LAoJCQkJCWRvbmU6IGZ1bmN0aW9uIChkYXRhKSB7IH0KCQkJCX0pOwoJCQl9LAoJCQlkb19hamF4X2V4cG9ydF9ibG9nOiBmdW5jdGlvbiAoYXJncykgewoKCQkJCWNvbnN0CgkJCQkJZGF0YSA9IE1lc3NpYS50YWJzRGF0YSwKCQkJCQlldmVudCA9IGFyZ3NbMF0sCgkJCQkJb3BlcmF0b3IgPSBhcmdzWzFdOwoKCQkJCXhociA9ICQuYWpheCh7CgkJCQkJdHlwZTogJ1BPU1QnLAoJCQkJCXVybDogZGF0YS5hamF4VXJsLAoJCQkJCWRhdGE6IHsKCQkJCQkJYWN0aW9uOiBkYXRhLmFjdGlvbkV4cG9ydCwKCQkJCQkJbWVzc2lhTm9uY2U6IGRhdGEuc2V0dGluZ0Zvcm1Ob25jZSwKCQkJCQl9LAoJCQkJCWJlZm9yZVNlbmQ6IGZ1bmN0aW9uICgpIHsKCgkJCQkJCWlmICh4aHIgIT0gbnVsbCkgewoJCQkJCQkJeGhyLmFib3J0KCk7CgkJCQkJCQl4aHIgPSBudWxsOwoJCQkJCQl9CgkJCQkJfSwKCQkJCQlzdWNjZXNzOiBmdW5jdGlvbiAoc2VydmVyKSB7CgoJCQkJCQlNZXNzaWEuc2NyZWVuX3VubG9ja19zdWNjZXNzKCkudGhlbihmdW5jdGlvbiAoKSB7CgoJCQkJCQkJJC5mbi5UYWJzUGx1Z2luRnJhbWVXb3JrKCdwbGF5U291bmQnLCAwLjMpOwoJCQkJCQkJTWVzc2lhLnJlbW92ZV9zcGlubmVyKCk7CgoJCQkJCQkJdHJ5IHsKCgkJCQkJCQkJaWYgKHNlcnZlci5kYXRhLmNvZGUgPT09IDIwMCkgewoJCQkJCQkJCQkkLmZuLlRhYnNQbHVnaW5GcmFtZVdvcmsoJ3Nob3dNZXNzYWdlJywgc2VydmVyLmRhdGEubXNnLCAnc3VjY2VzcycpOwoJCQkJCQkJCQkkKG9wZXJhdG9yKS52YWwoc2VydmVyLmRhdGEuYnRuX3RleHQpLnByb3AoJ2Rpc2FibGVkJywgZmFsc2UpLnJlbW92ZUNsYXNzKCkuYWRkQ2xhc3MoJ2FjdGl2ZScpOwoJCQkJCQkJCX0KCgkJCQkJCQkJaWYgKHNlcnZlci5kYXRhLmNvZGUgPT09IDQwMCkgewoJCQkJCQkJCQkkLmZuLlRhYnNQbHVnaW5GcmFtZVdvcmsoJ3Nob3dNZXNzYWdlJywgc2VydmVyLmRhdGEubXNnLCAnZXJyb3InKTsKCQkJCQkJCQkJJChvcGVyYXRvcikudmFsKHNlcnZlci5kYXRhLmJ0bl90ZXh0KS5wcm9wKCdkaXNhYmxlZCcsIGZhbHNlKS5yZW1vdmVDbGFzcygpLmFkZENsYXNzKCdfNDAwJyk7CgkJCQkJCQkJfQoKCQkJCQkJCQlpZiAoc2VydmVyLmRhdGEuY29kZSA9PT0gNDAzKSB7CgoJCQkJCQkJCQkkKG9wZXJhdG9yKS5vZmYoJ2NsaWNrJyk7CgkJCQkJCQkJCSQob3BlcmF0b3IpLnZhbChzZXJ2ZXIuZGF0YS5idG5fdGV4dCkucHJvcCgnZGlzYWJsZWQnLCBmYWxzZSkucmVtb3ZlQ2xhc3MoKS5hZGRDbGFzcygnXzQwMycpLm9uKCdjbGljaycsIGZ1bmN0aW9uICgpIHsKCQkJCQkJCQkJCWxvY2F0aW9uLnJlbG9hZCgpOwoJCQkJCQkJCQl9KTsKCQkJCQkJCQl9CgkJCQkJCQl9CgkJCQkJCQljYXRjaCAoZSkgewoJCQkJCQkJCU1lc3NpYUV4dC5sb2dnZXIuZXJyb3Ioc2VydmVyKTsKCQkJCQkJCQkkLmZuLlRhYnNQbHVnaW5GcmFtZVdvcmsoJ3Nob3dNZXNzYWdlJywgZGF0YS51bmV4cGVjdGVkRXJyLCAnZXJyb3InKTsKCQkJCQkJCX0KCQkJCQkJfSk7CgkJCQkJfSwKCQkJCQllcnJvcjogZnVuY3Rpb24gKE1MSHR0cFJlcXVlc3QsIHRleHRTdGF0dXMsIGVycm9yVGhyb3duKSB7CgoJCQkJCQlpZiAoeGhyLnN0YXR1cyA9PT0gMCAmJiB4aHIuc3RhdHVzVGV4dCA9PSAnYWJvcnQnKSB7CgkJCQkJCQlyZXR1cm47CgkJCQkJCX0KCQkJCQkJZWxzZSB7CgoJCQkJCQkJTWVzc2lhLnNjcmVlbl91bmxvY2tfZXJyb3Iob3BlcmF0b3IpOwoJCQkJCQl9CgkJCQkJfQoJCQkJfSk7CgkJCX0sCgkJCWdldF9mb3JtX2NvbnRyb2xzOiBmdW5jdGlvbiAoKSB7CgoJCQkJcmV0dXJuICQoJyN0YWJzIGlucHV0Om5vdCguY2hvc2VuLXNlYXJjaC1pbnB1dCksICN0YWJzIHNlbGVjdCwgI3RhYnMgdGV4dGFyZWEnKS5ub3QoJ2hpZGRlbicpLmZpbHRlcihmdW5jdGlvbiAoaW5kZXgpIHsKCgkJCQkJdmFyIG5hbWUgPSAkKHRoaXMpLmF0dHIoJ25hbWUnKTsKCgkJCQkJaWYgKG5hbWUgPT0gbnVsbCkgewoJCQkJCQlyZXR1cm4gZmFsc2U7CgkJCQkJfQoJCQkJCWVsc2UgewoJCQkJCQlyZXR1cm4gJCh0aGlzKS5wYXJlbnRzKCcuYm9vdHN0cmFwLXRhZ3NpbnB1dCcpLmxlbmd0aCA9PT0gMDsKCQkJCQl9CgkJCQl9KTsKCQkJfSwKCQkJdG9nZ2xlX3NhdmVfb3BlcmF0ZTogZnVuY3Rpb24gKG1vZGUsIHRhcmdldCkgewoKCQkJCXRhcmdldC5lYWNoKGZ1bmN0aW9uIChpbmRleCkgewoKCQkJCQlpZiAoKHRoaXMubm9kZU5hbWUgPT0gJ0lOUFVUJyB8fCB0aGlzLm5vZGVOYW1lID09ICdTRUxFQ1QnKSAmJiAkKHRoaXMpLmRhdGEoJ3RhZ2VkJykgPT09IHRydWUpIHsKCQkJCQkJaWYgKG1vZGUgPT09ICdvbicpIHsKCQkJCQkJCSQodGhpcykub24oJ2l0ZW1BZGRlZCBpdGVtUmVtb3ZlZCcsIE1lc3NpYS5zYXZlT3BlcmF0ZSk7CgkJCQkJCX0KCQkJCQkJZWxzZSBpZiAobW9kZSA9PT0gJ29mZicpIHsKCQkJCQkJCSQodGhpcykub2ZmKCdpdGVtQWRkZWQgaXRlbVJlbW92ZWQnLCBNZXNzaWEuc2F2ZU9wZXJhdGUpOwoJCQkJCQl9CgkJCQkJfQoJCQkJCWVsc2UgewoJCQkJCQlpZiAobW9kZSA9PT0gJ29uJykgewoJCQkJCQkJJCh0aGlzKS5vbignaW5wdXQgY2hhbmdlJywgTWVzc2lhLnNhdmVPcGVyYXRlKTsKCQkJCQkJfQoJCQkJCQllbHNlIGlmIChtb2RlID09PSAnb2ZmJykgewoJCQkJCQkJJCh0aGlzKS5vZmYoJ2lucHV0IGNoYW5nZScsIE1lc3NpYS5zYXZlT3BlcmF0ZSk7CgkJCQkJCX0KCQkJCQl9CgkJCQl9KTsKCQkJfSwKCQkJcmVtb3ZlX2xvYWRlcigpIHsKCQkJCSQoJyN3cGJvZHktY29udGVudCAuc2V0dGluZ3MtbG9hZGVyJykucmVtb3ZlKCk7CgkJCQkkKCcud3JhcC5zZXR0aW5ncy1sb2FkaW5nJykucmVtb3ZlQ2xhc3MoJ3NldHRpbmdzLWxvYWRpbmcnKTsKCQkJfSwKCQkJcmVtb3ZlX3NwaW5uZXIoKSB7CgkJCQkkKCdib2R5ICNzcGlubmVyX3NhdmluZywgYm9keSAjc3Bpbm5lcl9zYXZpbmdfaW5uZXInKS5yZW1vdmUoKTsKCQkJfSwKCQkJY29uZmlybTogYXN5bmMgKG1lc3NhZ2UpID0+IHsKCQkJCWxldCByZXN1bHQgPSBhd2FpdCBuZXcgUHJvbWlzZSgocmVzb2x2ZSwgcmVqZWN0KSA9PiB7CgkJCQkJbGV0IHByb21wdCA9IGNvbmZpcm0obWVzc2FnZSk7CgkJCQkJaWYgKHByb21wdCA9PT0gdHJ1ZSkgewoJCQkJCQlyZXNvbHZlKHRydWUpOwoJCQkJCX0gZWxzZSB7CgkJCQkJCXJlamVjdChmYWxzZSk7CgkJCQkJfQoJCQkJfSk7CgoJCQkJcmV0dXJuIHJlc3VsdDsKCQkJfQoJCX0KCgkJaWYgKHRydWUgPT09ICQuZm4ubWVzc2lhSXNNb2JpbGUoKSkgewoJCQlNZXNzaWEubXVsdGlwbGUgPSAnW211bHRpcGxlXSc7CgkJfQoKCQl0cnkgewoJCQkkKCcjdGFicycpLnRhYnMoewoJCQkJYWN0aXZlOiAkKCcjdGFicycpLmRhdGEoJ2dlbmVyYWwnKS5hY3RpdmUsCgkJCQloaWRlOiB7ICdlZmZlY3QnOiAnZmFkZScsICdkaXJlY3Rpb24nOiAnb3V0JywgJ2R1cmF0aW9uJzogMjAwIH0sCgkJCQlzaG93OiB7ICdlZmZlY3QnOiAnZmFkZScsICdkaXJlY3Rpb24nOiAnaW4nLCAnZHVyYXRpb24nOiAyMDAgfSwKCQkJCWNvbGxhcHNpYmxlOiBmYWxzZSwKCQkJCS8vJ2hlaWdodFN0eWxlJyA9PiAnY29udGVudCcsCgkJCQljcmVhdGU6IGZ1bmN0aW9uIChldmVudCwgdWkpIHsKCQkJCQlNZXNzaWEucmVtb3ZlX2xvYWRlcigpOwoJCQkJfQoJCQl9KTsKCgkJCSQoJ3NlbGVjdDpub3QoLmZvbnQtb3B0aW9uKScgKyBNZXNzaWEubXVsdGlwbGUpLnNlbGVjdDIoewoJCQkJcGxhY2Vob2xkZXI6IG1lc3NpYVZhcnMubWVzc2FnZXMuc2VsZWN0T3B0aW9ucywKCQkJCW1pbmltdW1SZXN1bHRzRm9yU2VhcmNoOiBJbmZpbml0eSwKCQkJCS8vd2lkdGg6ICcxMDAlJywKCQkJfSk7CgkJfQoJCWNhdGNoIChlcnJvcikgewoJCQlNZXNzaWFFeHQubG9nZ2VyLmVycm9yKGVycm9yKTsKCQl9IGZpbmFsbHkgewoJCQlNZXNzaWEucmVtb3ZlX2xvYWRlcigpOwoJCX0KCgkJX193ZWJwYWNrX3JlcXVpcmVfXygvKiEgLi9kZW1vLmpzICovICIuL3NyYy9qcy9fYmFja2VuZC9kZW1vLmpzIikoTWVzc2lhLCAkKTsKCgkJJCgnLndyYXAgI3NhdmUnKS50cmlnZ2VyKCd1aUluaXRlZCcpOwoKCQkkKCcjdGFicyB0ZXh0YXJlYScpLm1lc3NpYVN0aWNreVRleHRhcmVhKCk7CgkJTWVzc2lhLnRvZ2dsZV9zYXZlX29wZXJhdGUoJ29uJywgTWVzc2lhLmFsbElucHV0cyk7CgoJCSQoJ2JvZHknKS5vbignY2xpY2snLCAnI3RhYnMgLm1lc3NpYS13cC1oZWxwJywgTWVzc2lhLm9wZW5IZWxwVGFiKTsKCQkkKCdib2R5Jykub24oJ2NsaWNrJywgJyN0YWJzIC5zZWN0aW9uJywgTWVzc2lhLnRvZ2dsZVNlY3Rpb24pOwoJCSQoJy53cmFwICNzYXZlJykub24oJ2NsaWNrJywgTWVzc2lhLnNhdmUpOwoJCSQoJy53cmFwICNyZXNldC1zZXR0aW5ncycpLm9uKCdjbGljaycsIE1lc3NpYS5yZXNldCk7CgkJJCgnLndyYXAgI2NyZWF0ZS1kZW1vJykub24oJ2NsaWNrJywgTWVzc2lhLmV4cG9ydCk7CgkJJCgnI3RhYnMnKS5vbigndGFic2FjdGl2YXRlIHRhYnNjcmVhdGUnLCBNZXNzaWEuYWN0aXZlVGFiKTsKCQkkKCcjdGFicycpLm9uKCdyZXNldFNhdmVTdGF0ZScsIE1lc3NpYS5yZXNldFNhdmVTdGF0ZSk7CgkJJCh3aW5kb3cpLm9uKCdzY3JvbGwnLCBNZXNzaWEuc2Nyb2xsKTsKCX0pOwp9KShqUXVlcnkpOwoKLyoqKi8gfSkKCi8qKioqKiovIAl9KTsKLyoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKi8KLyoqKioqKi8gCS8vIFRoZSBtb2R1bGUgY2FjaGUKLyoqKioqKi8gCXZhciBfX3dlYnBhY2tfbW9kdWxlX2NhY2hlX18gPSB7fTsKLyoqKioqKi8gCQovKioqKioqLyAJLy8gVGhlIHJlcXVpcmUgZnVuY3Rpb24KLyoqKioqKi8gCWZ1bmN0aW9uIF9fd2VicGFja19yZXF1aXJlX18obW9kdWxlSWQpIHsKLyoqKioqKi8gCQkvLyBDaGVjayBpZiBtb2R1bGUgaXMgaW4gY2FjaGUKLyoqKioqKi8gCQl2YXIgY2FjaGVkTW9kdWxlID0gX193ZWJwYWNrX21vZHVsZV9jYWNoZV9fW21vZHVsZUlkXTsKLyoqKioqKi8gCQlpZiAoY2FjaGVkTW9kdWxlICE9PSB1bmRlZmluZWQpIHsKLyoqKioqKi8gCQkJcmV0dXJuIGNhY2hlZE1vZHVsZS5leHBvcnRzOwovKioqKioqLyAJCX0KLyoqKioqKi8gCQkvLyBDcmVhdGUgYSBuZXcgbW9kdWxlIChhbmQgcHV0IGl0IGludG8gdGhlIGNhY2hlKQovKioqKioqLyAJCXZhciBtb2R1bGUgPSBfX3dlYnBhY2tfbW9kdWxlX2NhY2hlX19bbW9kdWxlSWRdID0gewovKioqKioqLyAJCQkvLyBubyBtb2R1bGUuaWQgbmVlZGVkCi8qKioqKiovIAkJCS8vIG5vIG1vZHVsZS5sb2FkZWQgbmVlZGVkCi8qKioqKiovIAkJCWV4cG9ydHM6IHt9Ci8qKioqKiovIAkJfTsKLyoqKioqKi8gCQovKioqKioqLyAJCS8vIEV4ZWN1dGUgdGhlIG1vZHVsZSBmdW5jdGlvbgovKioqKioqLyAJCV9fd2VicGFja19tb2R1bGVzX19bbW9kdWxlSWRdKG1vZHVsZSwgbW9kdWxlLmV4cG9ydHMsIF9fd2VicGFja19yZXF1aXJlX18pOwovKioqKioqLyAJCi8qKioqKiovIAkJLy8gUmV0dXJuIHRoZSBleHBvcnRzIG9mIHRoZSBtb2R1bGUKLyoqKioqKi8gCQlyZXR1cm4gbW9kdWxlLmV4cG9ydHM7Ci8qKioqKiovIAl9Ci8qKioqKiovIAkKLyoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKi8KLyoqKioqKi8gCS8qIHdlYnBhY2svcnVudGltZS9jb21wYXQgZ2V0IGRlZmF1bHQgZXhwb3J0ICovCi8qKioqKiovIAkhZnVuY3Rpb24oKSB7Ci8qKioqKiovIAkJLy8gZ2V0RGVmYXVsdEV4cG9ydCBmdW5jdGlvbiBmb3IgY29tcGF0aWJpbGl0eSB3aXRoIG5vbi1oYXJtb255IG1vZHVsZXMKLyoqKioqKi8gCQlfX3dlYnBhY2tfcmVxdWlyZV9fLm4gPSBmdW5jdGlvbihtb2R1bGUpIHsKLyoqKioqKi8gCQkJdmFyIGdldHRlciA9IG1vZHVsZSAmJiBtb2R1bGUuX19lc01vZHVsZSA/Ci8qKioqKiovIAkJCQlmdW5jdGlvbigpIHsgcmV0dXJuIG1vZHVsZVsnZGVmYXVsdCddOyB9IDoKLyoqKioqKi8gCQkJCWZ1bmN0aW9uKCkgeyByZXR1cm4gbW9kdWxlOyB9OwovKioqKioqLyAJCQlfX3dlYnBhY2tfcmVxdWlyZV9fLmQoZ2V0dGVyLCB7IGE6IGdldHRlciB9KTsKLyoqKioqKi8gCQkJcmV0dXJuIGdldHRlcjsKLyoqKioqKi8gCQl9OwovKioqKioqLyAJfSgpOwovKioqKioqLyAJCi8qKioqKiovIAkvKiB3ZWJwYWNrL3J1bnRpbWUvZGVmaW5lIHByb3BlcnR5IGdldHRlcnMgKi8KLyoqKioqKi8gCSFmdW5jdGlvbigpIHsKLyoqKioqKi8gCQkvLyBkZWZpbmUgZ2V0dGVyIGZ1bmN0aW9ucyBmb3IgaGFybW9ueSBleHBvcnRzCi8qKioqKiovIAkJX193ZWJwYWNrX3JlcXVpcmVfXy5kID0gZnVuY3Rpb24oZXhwb3J0cywgZGVmaW5pdGlvbikgewovKioqKioqLyAJCQlmb3IodmFyIGtleSBpbiBkZWZpbml0aW9uKSB7Ci8qKioqKiovIAkJCQlpZihfX3dlYnBhY2tfcmVxdWlyZV9fLm8oZGVmaW5pdGlvbiwga2V5KSAmJiAhX193ZWJwYWNrX3JlcXVpcmVfXy5vKGV4cG9ydHMsIGtleSkpIHsKLyoqKioqKi8gCQkJCQlPYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywga2V5LCB7IGVudW1lcmFibGU6IHRydWUsIGdldDogZGVmaW5pdGlvbltrZXldIH0pOwovKioqKioqLyAJCQkJfQovKioqKioqLyAJCQl9Ci8qKioqKiovIAkJfTsKLyoqKioqKi8gCX0oKTsKLyoqKioqKi8gCQovKioqKioqLyAJLyogd2VicGFjay9ydW50aW1lL2hhc093blByb3BlcnR5IHNob3J0aGFuZCAqLwovKioqKioqLyAJIWZ1bmN0aW9uKCkgewovKioqKioqLyAJCV9fd2VicGFja19yZXF1aXJlX18ubyA9IGZ1bmN0aW9uKG9iaiwgcHJvcCkgeyByZXR1cm4gT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKG9iaiwgcHJvcCk7IH0KLyoqKioqKi8gCX0oKTsKLyoqKioqKi8gCQovKioqKioqLyAJLyogd2VicGFjay9ydW50aW1lL21ha2UgbmFtZXNwYWNlIG9iamVjdCAqLwovKioqKioqLyAJIWZ1bmN0aW9uKCkgewovKioqKioqLyAJCS8vIGRlZmluZSBfX2VzTW9kdWxlIG9uIGV4cG9ydHMKLyoqKioqKi8gCQlfX3dlYnBhY2tfcmVxdWlyZV9fLnIgPSBmdW5jdGlvbihleHBvcnRzKSB7Ci8qKioqKiovIAkJCWlmKHR5cGVvZiBTeW1ib2wgIT09ICd1bmRlZmluZWQnICYmIFN5bWJvbC50b1N0cmluZ1RhZykgewovKioqKioqLyAJCQkJT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFN5bWJvbC50b1N0cmluZ1RhZywgeyB2YWx1ZTogJ01vZHVsZScgfSk7Ci8qKioqKiovIAkJCX0KLyoqKioqKi8gCQkJT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsICdfX2VzTW9kdWxlJywgeyB2YWx1ZTogdHJ1ZSB9KTsKLyoqKioqKi8gCQl9OwovKioqKioqLyAJfSgpOwovKioqKioqLyAJCi8qKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiovCnZhciBfX3dlYnBhY2tfZXhwb3J0c19fID0ge307Ci8vIFRoaXMgZW50cnkgbmVlZCB0byBiZSB3cmFwcGVkIGluIGFuIElJRkUgYmVjYXVzZSBpdCBuZWVkIHRvIGJlIGluIHN0cmljdCBtb2RlLgohZnVuY3Rpb24oKSB7CiJ1c2Ugc3RyaWN0IjsKLyohKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqISpcCiAgISoqKiAuL3NyYy9lbnRyaWVzL2JhY2tlbmQvZW50cnktbWVudS1wYWdlLmpzICoqKiEKICBcKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqLwpfX3dlYnBhY2tfcmVxdWlyZV9fLnIoX193ZWJwYWNrX2V4cG9ydHNfXyk7Ci8qIGhhcm1vbnkgaW1wb3J0ICovIHZhciBfc2Nzc19iYWNrZW5kX21lbnVfcGFnZV9zY3NzX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8wX18gPSBfX3dlYnBhY2tfcmVxdWlyZV9fKC8qISAuLi8uLi9zY3NzL19iYWNrZW5kL21lbnUtcGFnZS5zY3NzICovICIuL3NyYy9zY3NzL19iYWNrZW5kL21lbnUtcGFnZS5zY3NzIik7Ci8qIGhhcm1vbnkgaW1wb3J0ICovIHZhciBfanNfYmFja2VuZF9tZW51X3BhZ2VfanNfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzFfXyA9IF9fd2VicGFja19yZXF1aXJlX18oLyohIC4uLy4uL2pzL19iYWNrZW5kL21lbnUtcGFnZS5qcyAqLyAiLi9zcmMvanMvX2JhY2tlbmQvbWVudS1wYWdlLmpzIik7Ci8qIGhhcm1vbnkgaW1wb3J0ICovIHZhciBfanNfYmFja2VuZF9tZW51X3BhZ2VfanNfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzFfX19kZWZhdWx0ID0gLyojX19QVVJFX18qL19fd2VicGFja19yZXF1aXJlX18ubihfanNfYmFja2VuZF9tZW51X3BhZ2VfanNfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzFfXyk7Ci8vIFN0eWxlCgoKLy8gU2NyaXB0cwoKfSgpOwovKioqKioqLyB9KSgpCjsKLy8jIHNvdXJjZU1hcHBpbmdVUkw9ZGF0YTphcHBsaWNhdGlvbi9qc29uO2NoYXJzZXQ9dXRmLTg7YmFzZTY0LGV5SjJaWEp6YVc5dUlqb3pMQ0ptYVd4bElqb2lhVzVqYkhWa1pYTXZZWE56WlhSekwycHpMMkpoWTJ0bGJtUXZiV1Z1ZFMxd1lXZGxMbXB6SWl3aWJXRndjR2x1WjNNaU9pSTdPenM3T3pzN096czdPMEZCUVVFN096czdPenM3T3pzN08wRkRRVUU3UVVGRFFUdEJRVU5CT3p0QlFVVkJPenRCUVVWQk8wRkJRMEU3UVVGRFFUdEJRVU5CT3p0QlFVVkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRU3hIUVVGSE8wRkJRMGc3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRXNUMEZCVHp0QlFVTlFMRTFCUVUwN1FVRkRUanRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTEUxQlFVMDdRVUZEVGp0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQkxFMUJRVTA3UVVGRFRqdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJMRTFCUVUwN1FVRkRUanM3UVVGRlFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQkxFdEJRVXM3UVVGRFREdEJRVU5CTEVsQlFVazdPMEZCUlVvN1FVRkRRVHRCUVVOQk96dEJRVVZCTzBGQlEwRXNSMEZCUnp0QlFVTklPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTEV0QlFVczdRVUZEVER0QlFVTkJMRWRCUVVjN1FVRkRTRHM3UVVGRlFUczdRVUZGUVR0QlFVTkJPenRCUVVWQk8wRkJRMEU3UVVGRFFUdEJRVU5CT3p0QlFVVkJPMEZCUTBFN08wRkJSVUU3UVVGRFFUdEJRVU5CTEZGQlFWRTdRVUZEVWp0QlFVTkJPMEZCUTBFN08wRkJSVUU3UVVGRFFUczdRVUZGUVR0QlFVTkJPMEZCUTBFc1VVRkJVVHRCUVVOU08wRkJRMEU3UVVGRFFUczdRVUZGUVR0QlFVTkJPenRCUVVWQk8wRkJRMEU3UVVGRFFTeFJRVUZSTzBGQlExSTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQkxFZEJRVWM3UVVGRFNEdEJRVU5CTzBGQlEwRTdRVUZEUVN4alFVRmpMRk5CUVZNN1FVRkRka0k3UVVGRFFUczdRVUZGUVRzN1FVRkZRVHM3UVVGRlFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRU3hOUVVGTk8wRkJRMDQ3TzBGQlJVRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRU3hOUVVGTk8wRkJRMDQ3UVVGRFFUdEJRVU5CTzBGQlEwRXNVVUZCVVR0QlFVTlNPMEZCUTBFN1FVRkRRU3hOUVVGTk8wRkJRMDQ3TzBGQlJVRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRU3hOUVVGTk8wRkJRMDQ3UVVGRFFUdEJRVU5CTEUxQlFVMDdRVUZEVGl4TFFVRkxPMEZCUTB3c1NVRkJTVHRCUVVOS08wRkJRMEVzUjBGQlJ6dEJRVU5JTzBGQlEwRTdRVUZEUVR0QlFVTkJMR0ZCUVdFc1VVRkJVVHRCUVVOeVFqdEJRVU5CTEdOQlFXTXNVMEZCVXp0QlFVTjJRanRCUVVOQk96dEJRVVZCTzBGQlEwRTdPMEZCUlVFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVN4TlFVRk5PMEZCUTA0N08wRkJSVUU3UVVGRFFUdEJRVU5CTzBGQlEwRTdPMEZCUlVFN1FVRkRRVHRCUVVOQk8wRkJRMEVzVDBGQlR6dEJRVU5RTEUxQlFVMDdRVUZEVGp0QlFVTkJPMEZCUTBFN1FVRkRRU3hSUVVGUk8wRkJRMUk3UVVGRFFUdEJRVU5CTEUxQlFVMDdRVUZEVGpzN1FVRkZRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTEUxQlFVMDdRVUZEVGp0QlFVTkJPMEZCUTBFN1FVRkRRU3hOUVVGTk8wRkJRMDRzUzBGQlN6dEJRVU5NTEVsQlFVazdRVUZEU2p0QlFVTkJMRWRCUVVjN1FVRkRTRHRCUVVOQk8wRkJRMEU3UVVGRFFTeGhRVUZoTEUxQlFVMDdRVUZEYmtJc1lVRkJZU3hWUVVGVk8wRkJRM1pDTzBGQlEwRXNZMEZCWXl4VFFVRlRPMEZCUTNaQ08wRkJRMEU3TzBGQlJVRTdRVUZEUVR0QlFVTkJPMEZCUTBFN08wRkJSVUU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUczdRVUZGUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQkxIVkRRVUYxUXp0QlFVTjJRenRCUVVOQk8wRkJRMEU3UVVGRFFTeDFRMEZCZFVNN1FVRkRka003UVVGRFFUdEJRVU5CTzBGQlEwRXNkVU5CUVhWRE8wRkJRM1pETzBGQlEwRXNVMEZCVXl3eVIwRkJNa2M3UVVGRGNFZzdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEVzUzBGQlN6czdRVUZGVER0QlFVTkJPMEZCUTBFN08wRkJSVUVzYTBOQlFXdERMRzFDUVVGdFFqdEJRVU55UkR0QlFVTkJPMEZCUTBFN1FVRkRRVHM3UVVGRlFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3TzBGQlJVRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVRzN1FVRkZRVHRCUVVOQk8wRkJRMEU3UVVGRFFTeFJRVUZST3p0QlFVVlNPMEZCUTBFN1FVRkRRVHRCUVVOQk96dEJRVVZCTzBGQlEwRTdRVUZEUVRzN1FVRkZRVHRCUVVOQk8wRkJRMEVzVDBGQlR6dEJRVU5RTzBGQlEwRTdPMEZCUlVFN1FVRkRRVHRCUVVOQkxGTkJRVk03UVVGRFZEdEJRVU5CTzBGQlEwRXNUMEZCVHp0QlFVTlFPenRCUVVWQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRXNUMEZCVHp0QlFVTlFMRTFCUVUwN08wRkJSVTQ3UVVGRFFUdEJRVU5CTzBGQlEwRXNTVUZCU1R0QlFVTktPMEZCUTBFc1IwRkJSenRCUVVOSU8wRkJRMEU3UVVGRFFUdEJRVU5CTEdGQlFXRXNaVUZCWlR0QlFVTTFRanRCUVVOQkxHTkJRV01zVTBGQlV6dEJRVU4yUWp0QlFVTkJPenRCUVVWQk8wRkJRMEU3TzBGQlJVRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFTeE5RVUZOTzBGQlEwNDdPMEZCUlVFN1FVRkRRVHRCUVVOQk8wRkJRMEU3TzBGQlJVRTdRVUZEUVR0QlFVTkJPMEZCUTBFc1QwRkJUenRCUVVOUUxFMUJRVTA3UVVGRFRqdEJRVU5CTzBGQlEwRTdRVUZEUVN4UlFVRlJPMEZCUTFJN1FVRkRRVHRCUVVOQkxFMUJRVTA3UVVGRFRqczdRVUZGUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQkxFMUJRVTA3UVVGRFRqdEJRVU5CTzBGQlEwRTdRVUZEUVN4TlFVRk5PMEZCUTA0c1MwRkJTenRCUVVOTUxFbEJRVWs3UVVGRFNqdEJRVU5CTEVkQlFVYzdRVUZEU0RzN1FVRkZRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRU3hKUVVGSk96dEJRVVZLTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRXNTVUZCU1R0QlFVTktPMEZCUTBFN1FVRkRRVHRCUVVOQk96dEJRVVZCTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTEV0QlFVczdPMEZCUlV3N1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CT3p0QlFVVkJPMEZCUTBFN1FVRkRRVHRCUVVOQk96dEJRVVZCTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN08wRkJSVUU3UVVGRFFUdEJRVU5CT3p0QlFVVkJPMEZCUTBFN08wRkJSVUU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFc1owTkJRV2RETzBGQlEyaERPMEZCUTBFc1UwRkJVeXhOUVVGTk8wRkJRMlk3UVVGRFFUczdRVUZGUVR0QlFVTkJPenRCUVVWQk8wRkJRMEU3UVVGRFFUczdRVUZGUVR0QlFVTkJMSGxFUVVGNVJDeG5Ra0ZCWjBJN1FVRkRla1U3UVVGRFFUczdRVUZGUVR0QlFVTkJPMEZCUTBFN08wRkJSVUU3UVVGRFFUczdRVUZGUVRzN1FVRkZRVHM3UVVGRlFUczdRVUZGUVN4MVFrRkJkVUlzYTBKQlFXdENPMEZCUTNwRE96dEJRVVZCTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CT3p0QlFVVkJPMEZCUTBFN1FVRkRRVHRCUVVOQkxIZENRVUYzUWl4MVFrRkJkVUk3TzBGQlJTOURPMEZCUTBFN1FVRkRRVHRCUVVOQk96dEJRVVZCTzBGQlEwRTdRVUZEUVN4aFFVRmhPMEZCUTJJN1FVRkRRVHRCUVVOQk8wRkJRMEVzVjBGQlZ6dEJRVU5ZTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFc1YwRkJWenRCUVVOWU8wRkJRMEU3TzBGQlJVRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUczdRVUZGUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHM3UVVGRlFTd3dRa0ZCTUVJc2IwSkJRVzlDTzBGQlF6bERPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFTeHJRMEZCYTBNN1FVRkRiRU03TzBGQlJVRTdRVUZEUVRzN1FVRkZRVHRCUVVOQk8wRkJRMEU3UVVGRFFTeFhRVUZYTzBGQlExZ3NWVUZCVlR0QlFVTldMRkZCUVZFN1FVRkRVaXhOUVVGTk8wRkJRMDQ3UVVGRFFTeExRVUZMT3p0QlFVVk1PMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUczdRVUZGUVR0QlFVTkJPMEZCUTBFN08wRkJSVUU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHM3UVVGRlFUdEJRVU5CTzBGQlEwRTdRVUZEUVN4VlFVRlZPenRCUVVWV08wRkJRMEU3UVVGRFFTeFhRVUZYTzBGQlExZzdRVUZEUVR0QlFVTkJMRk5CUVZNN1FVRkRWRHRCUVVOQk8wRkJRMEU3UVVGRFFTeFRRVUZUTzBGQlExUTdRVUZEUVR0QlFVTkJMRk5CUVZNN1FVRkRWQ3hQUVVGUE8wRkJRMUFzUzBGQlN6czdRVUZGVER0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3TzBGQlJVRTdRVUZEUVR0QlFVTkJPenRCUVVWQk8wRkJRMEU3TzBGQlJVRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEVzVjBGQlZ6dEJRVU5ZTzBGQlEwRTdPMEZCUlVFN1FVRkRRVHRCUVVOQk8wRkJRMEVzVTBGQlV6dEJRVU5VTzBGQlEwRTdRVUZEUVR0QlFVTkJMRk5CUVZNN1FVRkRWRHRCUVVOQk8wRkJRMEVzVTBGQlV6dEJRVU5VTEU5QlFVODdRVUZEVUN4TFFVRkxPMEZCUTB3c1NVRkJTVHM3UVVGRlNqdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN08wRkJSVUU3UVVGRFFUdEJRVU5CTzBGQlEwRTdPMEZCUlVFN1FVRkRRVHM3UVVGRlFUdEJRVU5CT3p0QlFVVkJPenRCUVVWQk96dEJRVVZCTzBGQlEwRTdRVUZEUVR0QlFVTkJMRTFCUVUwN1FVRkRUanRCUVVOQkxFbEJRVWs3UVVGRFNpeEhRVUZITzBGQlEwZzdPMEZCUlVFN1FVRkRRVHRCUVVOQk96dEJRVVZCTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFc1IwRkJSenRCUVVOSU96dEJRVVZCTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3TzBGQlJVRTdRVUZEUVR0QlFVTkJMRTFCUVUwN08wRkJSVTQ3TzBGQlJVRTdRVUZEUVR0QlFVTkJPenRCUVVWQk8wRkJRMEU3UVVGRFFUdEJRVU5CTEZOQlFWTTdRVUZEVkR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEVzUzBGQlN6dEJRVU5NTzBGQlEwRTdRVUZEUVR0QlFVTkJMRXRCUVVzN1FVRkRURHRCUVVOQkxFZEJRVWM3UVVGRFNEdEJRVU5CTzBGQlEwRXNhME5CUVd0RE96dEJRVVZzUXp0QlFVTkJPMEZCUTBFN08wRkJSVUU3TzBGQlJVRTdRVUZEUVR0QlFVTkJPMEZCUTBFc1IwRkJSenRCUVVOSU8wRkJRMEU3UVVGRFFTeEhRVUZITzBGQlEwZzdPMEZCUlVFN1FVRkRRVHM3T3pzN096czdPenRCUXpWMlFrRTdRVUZEUVRzN1FVRkZRVHM3UVVGRlFUczdRVUZGUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVRzN1FVRkZRVHM3UVVGRlFUczdRVUZGUVRzN1FVRkZRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRU3h4UWtGQmNVSXNhVUpCUVdsQ08wRkJRM1JETzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUczdRVUZGUVR0QlFVTkJPMEZCUTBFN1FVRkRRU3gxUlVGQmRVVTdRVUZEZGtVc05FTkJRVFJETEV0QlFVczdRVUZEYWtRN1FVRkRRVHRCUVVOQkxHMURRVUZ0UXl4UlFVRlJPMEZCUXpORE8wRkJRMEU3UVVGRFFTeHJRMEZCYTBNc1pVRkJaVHRCUVVOcVJEdEJRVU5CTzBGQlEwRTdPMEZCUlVFN1FVRkRRVHRCUVVOQk8wRkJRMEU3TzBGQlJVRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHM3UVVGRlFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJMRk5CUVZNN1FVRkRWQ3hSUVVGUk8wRkJRMUlzVDBGQlR6dEJRVU5RTzBGQlEwRXNiVUpCUVcxQ0xFMUJRVTA3UVVGRGVrSXNiMEpCUVc5Q0xFOUJRVTg3UVVGRE0wSXNUMEZCVHp0QlFVTlFPMEZCUTBFN1FVRkRRVHRCUVVOQkxFOUJRVTg3UVVGRFVEdEJRVU5CTEU5QlFVODdRVUZEVUR0QlFVTkJPMEZCUTBFc1QwRkJUenRCUVVOUUxFdEJRVXM3TzBGQlJVdzdRVUZEUVR0QlFVTkJMRXRCUVVzN08wRkJSVXc3UVVGRFFUczdRVUZGUVR0QlFVTkJMRWxCUVVrN1FVRkRTanRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEVzVFVGQlRUdEJRVU5PTzBGQlEwRXNUVUZCVFR0QlFVTk9MRXRCUVVzN1FVRkRUQ3hKUVVGSk8wRkJRMG83UVVGRFFTdzRRa0ZCT0VJc2NVSkJRWEZDTzBGQlEyNUVPMEZCUTBFN1FVRkRRVHRCUVVOQkxFMUJRVTA3UVVGRFRqdEJRVU5CTEUxQlFVMDdRVUZEVGl4TFFVRkxPMEZCUTB3c1NVRkJTVHRCUVVOS096dEJRVVZCT3p0QlFVVkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUczdRVUZGUVRzN1FVRkZRU3h2UWtGQmIwSXNlVUpCUVhsQ096dEJRVVUzUXp0QlFVTkJPenRCUVVWQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CT3p0QlFVVkJPMEZCUTBFN1FVRkRRVHRCUVVOQk96dEJRVVZCTzBGQlEwRTdPMEZCUlVFN1FVRkRRU3g1UWtGQmVVSXNkVUpCUVhWQ08wRkJRMmhFTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdPMEZCUlVFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRU3hKUVVGSk8wRkJRMG83TzBGQlJVRTdPMEZCUlVFN1FVRkRRVHRCUVVOQkxFbEJRVWs3UVVGRFNqczdRVUZGUVRzN1FVRkZRVHRCUVVOQk8wRkJRMEU3UVVGRFFUczdRVUZGUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQkxFdEJRVXM3UVVGRFRDeEpRVUZKTzBGQlEwbzdPMEZCUlVFN1FVRkRRU3h6UWtGQmMwSXNORUpCUVRSQ096dEJRVVZzUkR0QlFVTkJPMEZCUTBFN08wRkJSVUU3UVVGRFFUdEJRVU5CT3p0QlFVVkJMR3RFUVVGclJDeExRVUZMTzBGQlEzWkVMRWxCUVVrN1FVRkRTanM3UVVGRlFUczdRVUZGUVR0QlFVTkJPenRCUVVWQk96dEJRVVZCTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQkxFMUJRVTA3UVVGRFRqdEJRVU5CTzBGQlEwRTdRVUZEUVN4UFFVRlBPMEZCUTFBN08wRkJSVUU3UVVGRFFUdEJRVU5CTEU5QlFVODdRVUZEVUN4TlFVRk5PMEZCUTA0N1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUczdRVUZGUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQkxFOUJRVTg3UVVGRFVEdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJMRkZCUVZFN1FVRkRVanM3UVVGRlFUdEJRVU5CTzBGQlEwRXNVVUZCVVR0QlFVTlNMRTlCUVU4N1FVRkRVRHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVN4TlFVRk5PMEZCUTA0N1FVRkRRVHRCUVVOQk8wRkJRMEVzVDBGQlR6dEJRVU5RT3p0QlFVVkJPMEZCUTBFN1FVRkRRU3hQUVVGUE8wRkJRMUFzVFVGQlRUdEJRVU5PTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQkxFMUJRVTA3UVVGRFRqdEJRVU5CTzBGQlEwRTdRVUZEUVN4UFFVRlBPMEZCUTFBN08wRkJSVUU3UVVGRFFUdEJRVU5CTEU5QlFVODdRVUZEVUN4TlFVRk5PMEZCUTA0N1FVRkRRU3hKUVVGSk8wRkJRMG83TzBGQlJVRTdPMEZCUlVFN1FVRkRRVHM3UVVGRlFTeDFSVUZCZFVVc2IyWkJRVzltTEd0Q1FVRnJRaXcwVjBGQk5GY3NhMEpCUVd0Q0xDdFdRVUVyVml4clFrRkJhMElzWjFoQlFXZFlMR3RDUVVGclFpeHBXRUZCYVZnc2EwSkJRV3RDTzBGQlEycHJSVHM3UVVGRlFUdEJRVU5CTzBGQlEwRXNUVUZCVFRzN1FVRkZUanRCUVVOQk8wRkJRMEU3UVVGRFFTeFJRVUZSTzBGQlExSTdRVUZEUVN4UlFVRlJPMEZCUTFJc1QwRkJUenRCUVVOUUxFMUJRVTA3UVVGRFRpeExRVUZMTzBGQlEwd3NTVUZCU1R0QlFVTktPenRCUVVWQk96dEJRVVZCTzBGQlEwRTdRVUZEUVN4TlFVRk5PenRCUVVWT08wRkJRMEU3UVVGRFFTeFBRVUZQTzBGQlExQXNUVUZCVFR0QlFVTk9MRXRCUVVzN1FVRkRUQ3hKUVVGSk8wRkJRMG83TzBGQlJVRTdPMEZCUlVFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFTeE5RVUZOTzBGQlEwNDdRVUZEUVN4TlFVRk5PenRCUVVWT08wRkJRMEU3UVVGRFFTeE5RVUZOT3p0QlFVVk9PMEZCUTBFN1FVRkRRVHRCUVVOQkxGRkJRVkU3TzBGQlJWSTdRVUZEUVR0QlFVTkJMRkZCUVZFN1FVRkRVaXhQUVVGUE8wRkJRMUFzVFVGQlRUdEJRVU5PTEV0QlFVczdRVUZEVEN4SlFVRkpPMEZCUTBvN08wRkJSVUU3UVVGRFFUdEJRVU5CTzBGQlEwRXNTVUZCU1R0QlFVTktPMEZCUTBFN08wRkJSVUU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVN4SlFVRkpPMEZCUTBvN08wRkJSVUU3UVVGRFFUczdRVUZGUVR0QlFVTkJPMEZCUTBFN08wRkJSVUU3UVVGRFFTeEpRVUZKTzBGQlEwbzdPMEZCUlVFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CT3p0QlFVVkJPenRCUVVWQkxHOUNRVUZ2UWl4eFFrRkJjVUk3TzBGQlJYcERPenRCUVVWQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CT3p0QlFVVkJPenRCUVVWQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN08wRkJSVUU3UVVGRFFUczdRVUZGUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFc1QwRkJUenRCUVVOUUxFMUJRVTA3UVVGRFRqczdRVUZGUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQkxFMUJRVTA3UVVGRFRqczdRVUZGUVR0QlFVTkJPMEZCUTBFN08wRkJSVUU3TzBGQlJVRTdPMEZCUlVFN08wRkJSVUU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPenRCUVVWQk8wRkJRMEU3UVVGRFFUczdRVUZGUVR0QlFVTkJPMEZCUTBFN08wRkJSVUU3TzBGQlJVRTdRVUZEUVR0QlFVTkJPMEZCUTBFc1ZVRkJWVHRCUVVOV096dEJRVVZCT3p0QlFVVkJPMEZCUTBFN1FVRkRRVHRCUVVOQkxGRkJRVkU3UVVGRFVpeE5RVUZOTzBGQlEwNDdPMEZCUlVFN1FVRkRRVHRCUVVOQk8wRkJRMEU3TzBGQlJVRTdRVUZEUVR0QlFVTkJPMEZCUTBFc1MwRkJTenRCUVVOTUxFbEJRVWs3UVVGRFNqczdRVUZGUVRzN1FVRkZRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRXNTVUZCU1R0QlFVTktPenRCUVVWQk96dEJRVVZCTzBGQlEwRTdRVUZEUVR0QlFVTkJMRWxCUVVrN1FVRkRTanM3UVVGRlFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPenRCUVVWQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEVzVDBGQlR6dEJRVU5RTEUxQlFVMDdRVUZEVGpzN1FVRkZRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTEUxQlFVMDdRVUZEVGpzN1FVRkZRVHRCUVVOQk8wRkJRMEU3TzBGQlJVRTdRVUZEUVRzN1FVRkZRVHM3UVVGRlFUdEJRVU5CTzBGQlEwRTdPMEZCUlVFN1FVRkRRVHRCUVVOQk8wRkJRMEU3TzBGQlJVRTdPMEZCUlVFN1FVRkRRVHRCUVVOQk8wRkJRMEVzVjBGQlZ6dEJRVU5ZTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQkxGRkJRVkU3UVVGRFVpeE5RVUZOTzBGQlEwNDdPMEZCUlVFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRXNUVUZCVFR0QlFVTk9PMEZCUTBFc1MwRkJTenRCUVVOTUxFbEJRVWs3UVVGRFNqczdRVUZGUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHM3UVVGRlFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRU3hOUVVGTk8wRkJRMDQ3TzBGQlJVRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRU3hOUVVGTk8wRkJRMDQ3TzBGQlJVRTdPMEZCUlVFN1FVRkRRVHM3UVVGRlFUczdRVUZGUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHM3UVVGRlFUdEJRVU5CTzBGQlEwRTdRVUZEUVRzN1FVRkZRVHM3UVVGRlFUdEJRVU5CTzBGQlEwRTdRVUZEUVN4VlFVRlZPMEZCUTFZN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRXNUMEZCVHp0QlFVTlFMRTFCUVUwN1FVRkRUanM3UVVGRlFUdEJRVU5CTzBGQlEwRTdRVUZEUVRzN1FVRkZRVHRCUVVOQk8wRkJRMEU3UVVGRFFTeExRVUZMTzBGQlEwd3NTVUZCU1R0QlFVTktPenRCUVVWQk96dEJRVVZCT3p0QlFVVkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTEV0QlFVczdRVUZEVEN4SlFVRkpPMEZCUTBvN08wRkJSVUU3TzBGQlJVRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFTeExRVUZMTzBGQlEwd3NTVUZCU1R0QlFVTktPMEZCUTBFN1FVRkRRVHRCUVVOQkxFbEJRVWs3UVVGRFNqdEJRVU5CTzBGQlEwRXNTVUZCU1R0QlFVTktPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFTeFBRVUZQTzBGQlExQTdRVUZEUVR0QlFVTkJMRXRCUVVzN08wRkJSVXc3UVVGRFFUdEJRVU5CT3p0QlFVVkJPMEZCUTBFN1FVRkRRVHM3UVVGRlFUdEJRVU5CTzBGQlEwRTdRVUZEUVN4WlFVRlpMSFZFUVVGMVJEdEJRVU51UlN4WlFVRlpMSE5FUVVGelJEdEJRVU5zUlR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEVzU1VGQlNUczdRVUZGU2p0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQkxFbEJRVWs3UVVGRFNqdEJRVU5CTzBGQlEwRTdRVUZEUVN4SlFVRkpPMEZCUTBvN1FVRkRRVHM3UVVGRlFTeEZRVUZGTEcxQ1FVRlBMRU5CUVVNc05FTkJRVmM3TzBGQlJYSkNPenRCUVVWQk8wRkJRMEU3TzBGQlJVRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTEVWQlFVVTdRVUZEUml4RFFVRkRPenM3T3pzN1ZVTTNlRUpFTzFWQlEwRTdPMVZCUlVFN1ZVRkRRVHRWUVVOQk8xVkJRMEU3VlVGRFFUdFZRVU5CTzFWQlEwRTdWVUZEUVR0VlFVTkJPMVZCUTBFN1ZVRkRRVHRWUVVOQk8xVkJRMEU3TzFWQlJVRTdWVUZEUVRzN1ZVRkZRVHRWUVVOQk8xVkJRMEU3T3pzN08xZERkRUpCTzFkQlEwRTdWMEZEUVR0WFFVTkJMR1ZCUVdVc05FSkJRVFJDTzFkQlF6TkRMR1ZCUVdVN1YwRkRaaXhwUTBGQmFVTXNWMEZCVnp0WFFVTTFRenRYUVVOQk96czdPenRYUTFCQk8xZEJRMEU3VjBGRFFUdFhRVU5CTzFkQlEwRXNlVU5CUVhsRExIZERRVUYzUXp0WFFVTnFSanRYUVVOQk8xZEJRMEU3T3pzN08xZERVRUVzT0VOQlFUaERPenM3T3p0WFEwRTVRenRYUVVOQk8xZEJRMEU3VjBGRFFTeDFSRUZCZFVRc2FVSkJRV2xDTzFkQlEzaEZPMWRCUTBFc1owUkJRV2RFTEdGQlFXRTdWMEZETjBRN096czdPenM3T3pzN096czdPenRCUTA1Qk8wRkJRelJET3p0QlFVVTFReUlzSW5OdmRYSmpaWE1pT2xzaWQyVmljR0ZqYXpvdkwyMWxjM05wWVM4dUwzTnlZeTl6WTNOekwxOWlZV05yWlc1a0wyMWxiblV0Y0dGblpTNXpZM056UDJSbVlUSWlMQ0ozWldKd1lXTnJPaTh2YldWemMybGhMeTR2YzNKakwycHpMMTlpWVdOclpXNWtMMlJsYlc4dWFuTWlMQ0ozWldKd1lXTnJPaTh2YldWemMybGhMeTR2YzNKakwycHpMMTlpWVdOclpXNWtMMjFsYm5VdGNHRm5aUzVxY3lJc0luZGxZbkJoWTJzNkx5OXRaWE56YVdFdmQyVmljR0ZqYXk5aWIyOTBjM1J5WVhBaUxDSjNaV0p3WVdOck9pOHZiV1Z6YzJsaEwzZGxZbkJoWTJzdmNuVnVkR2x0WlM5amIyMXdZWFFnWjJWMElHUmxabUYxYkhRZ1pYaHdiM0owSWl3aWQyVmljR0ZqYXpvdkwyMWxjM05wWVM5M1pXSndZV05yTDNKMWJuUnBiV1V2WkdWbWFXNWxJSEJ5YjNCbGNuUjVJR2RsZEhSbGNuTWlMQ0ozWldKd1lXTnJPaTh2YldWemMybGhMM2RsWW5CaFkyc3ZjblZ1ZEdsdFpTOW9ZWE5QZDI1UWNtOXdaWEowZVNCemFHOXlkR2hoYm1RaUxDSjNaV0p3WVdOck9pOHZiV1Z6YzJsaEwzZGxZbkJoWTJzdmNuVnVkR2x0WlM5dFlXdGxJRzVoYldWemNHRmpaU0J2WW1wbFkzUWlMQ0ozWldKd1lXTnJPaTh2YldWemMybGhMeTR2YzNKakwyVnVkSEpwWlhNdlltRmphMlZ1WkM5bGJuUnllUzF0Wlc1MUxYQmhaMlV1YW5NaVhTd2ljMjkxY21ObGMwTnZiblJsYm5RaU9sc2lMeThnWlhoMGNtRmpkR1ZrSUdKNUlHMXBibWt0WTNOekxXVjRkSEpoWTNRdGNHeDFaMmx1WEc1bGVIQnZjblFnZTMwN0lpd2lMeW9xWEc0Z0tpQk5hV055YnlCQmNIQWdabTl5SUdSbGJXOGdjR0ZqYTJGblpYTWdiV0Z1WVdkbGJXVnVkQzVjYmlBcUwxeHVYRzV0YjJSMWJHVXVaWGh3YjNKMGN5QTlJR1oxYm1OMGFXOXVJQ2hOWlhOemFXRXNJQ1FwSUh0Y2JseHVYSFIyWVhKY2JseDBYSFJrWlcxdlgzaG9jbDlwYm5OMFlXeHNJRDBnYm5Wc2JDeGNibHgwWEhSa1pXMXZYM2hvY2w5blpYUmZiR2x6ZENBOUlHNTFiR3dzWEc1Y2RGeDBaR1Z0YjE5NGFISmZjbVZ0YjNabElEMGdiblZzYkR0Y2JseHVYSFJqYjI1emRDQmtaVzF2UVhCd0lEMGdlMXh1WEhSY2RHUnBZV3h2WnpvZ1ptRnNjMlVzWEc1Y2RGeDBaR2xoYkc5blJXdzZJR1poYkhObExGeHVYSFJjZEdSbGJXOUVZWFJoT2lCbVlXeHpaU3hjYmx4MFhIUjBhR1Z0WlV4cFkyVnVZMlZCWTNScGRtVTZJR1poYkhObExGeHVYSFJjZEhObGJHVmpkR1ZrT2lCYlhTeGNibHgwWEhSaFkzUnBiMjV6VTNSaGRHVTZJSHRjYmx4MFhIUmNkR1JsYlc5RGJHOXpaVG9nZEhKMVpTeGNibHgwWEhSY2RHUmxiVzlCWkdRNklHWmhiSE5sTEZ4dVhIUmNkRngwWkdWdGIxSmxiVzkyWlRvZ1ptRnNjMlVzWEc1Y2RGeDBYSFJrWlcxdlNXNXpkR0ZzYkRvZ1ptRnNjMlVzWEc1Y2RGeDBmU3hjYmx4MFhIUjBaVzF3YkdGMFpUb2dkM0F1ZEdWdGNHeGhkR1VvSjJSbGJXOHRiV0Z1WVdkbEp5a3NYRzVjZEZ4MGFXNXBkRG9nWm5WdVkzUnBiMjRnS0dVcElIdGNibHgwWEhSY2RHeGxkRnh1WEhSY2RGeDBYSFIwYlhCc0lEMGdaR1Z0YjBGd2NDNTBaVzF3YkdGMFpTeGNibHgwWEhSY2RGeDBkR2wwYkdVZ1BTQWtLQ2NqZEdGaWN5Y3BMbVJoZEdFb0oyZGxibVZ5WVd3bktTNWtaVzF2TG1SbGJXOU5ZVzVoWjJWRWFXRnNiMmRVYVhSc1pTeGNibHgwWEhSY2RGeDBZblYwZEc5dWMwUnBZV3h2WnlBOUlGdGNibHgwWEhSY2RGeDBYSFI3WEc1Y2RGeDBYSFJjZEZ4MFhIUjBaWGgwT2lBblEyeHZjMlVuTEZ4dVhIUmNkRngwWEhSY2RGeDBhV1E2SUNka1pXMXZMV05zYjNObEp5eGNibHgwWEhSY2RGeDBYSFJjZEdOc2FXTnJPaUJtZFc1amRHbHZiaUFvWlhabGJuUXBJSHRjYmx4MFhIUmNkRngwWEhSY2RGeDBaR1Z0YjBGd2NDNWxkbVZ1ZEhNdWNtVnRiM1psS0NrN1hHNWNkRngwWEhSY2RGeDBYSFJjZEhSb2FYTXViV1Z6YzJsaFJHbGhiRzluTG1Oc2IzTmxLQ2s3WEc1Y2RGeDBYSFJjZEZ4MFhIUjlMRnh1WEhSY2RGeDBYSFJjZEgwc1hHNWNkRngwWEhSY2RGeDBlMXh1WEhSY2RGeDBYSFJjZEZ4MGRHVjRkRG9nSjBGa1pDY3NYRzVjZEZ4MFhIUmNkRngwWEhScFpEb2dKMlJsYlc4dFlXUmtKeXhjYmx4MFhIUmNkRngwWEhSY2RHTnNhV05yT2lCa1pXMXZRWEJ3TG1WMlpXNTBjeTVpZFhSMGIyNXpMbVJsYlc5QlpHUXNYRzVjZEZ4MFhIUmNkRngwZlN4Y2JseDBYSFJjZEZ4MFhIUjdYRzVjZEZ4MFhIUmNkRngwWEhSMFpYaDBPaUFuVW1WdGIzWmxKeXhjYmx4MFhIUmNkRngwWEhSY2RHbGtPaUFuWkdWdGJ5MXlaVzF2ZG1VbkxGeHVYSFJjZEZ4MFhIUmNkRngwWTJ4cFkyczZJR1JsYlc5QmNIQXVaWFpsYm5SekxtSjFkSFJ2Ym5NdVpHVnRiMUpsYlc5MlpTeGNibHgwWEhSY2RGeDBYSFI5TEZ4dVhIUmNkRngwWEhSY2RIdGNibHgwWEhSY2RGeDBYSFJjZEhSbGVIUTZJQ2RKYm5OMFlXeHNKeXhjYmx4MFhIUmNkRngwWEhSY2RHbGtPaUFuWkdWdGJ5MXBibk4wWVd4c0p5eGNibHgwWEhSY2RGeDBYSFJjZEdOc2FXTnJPaUJrWlcxdlFYQndMbVYyWlc1MGN5NWlkWFIwYjI1ekxtUmxiVzlKYm5OMFlXeHNMRnh1WEhSY2RGeDBYSFJjZEgwc1hHNWNkRngwWEhSY2RGMDdYRzVjYmx4MFhIUmNkR1JsYlc5QmNIQXVaR2xoYkc5blJXd2dQU0IzYVc1a2IzY3ViV1Z6YzJsaFZtRnljeTVrYVdGc2IyY3VhVzVwZENoN1hHNWNkRngwWEhSY2RHUnBZV3h2WjBsa09pQW5iV1Z6YzJsaExXUnBZV3h2Wnljc1hHNWNkRngwWEhSY2RHUnBZV3h2WjFScGRHeGxPaUIwYVhSc1pTeGNibHgwWEhSY2RGeDBaR2xoYkc5blEyOXVkR1Z1ZERvZ2RHMXdiQ2g3WEc1Y2RGeDBYSFJjZEZ4MFpHVnRiMHhwYzNRNklHUmxiVzlCY0hBdVpHVnRiMFJoZEdFc1hHNWNkRngwWEhSY2RGeDBjMlZzWldOMFpXUTZJR1JsYlc5QmNIQXVjMlZzWldOMFpXUXNYRzVjZEZ4MFhIUmNkRngwZEdobGJXVk1hV05sYm1ObFFXTjBhWFpsT2lCa1pXMXZRWEJ3TG5Sb1pXMWxUR2xqWlc1alpVRmpkR2wyWlN4Y2JseDBYSFJjZEZ4MGZTa3NYRzVjZEZ4MFhIUmNkR0oxZEhSdmJuTTZJR0oxZEhSdmJuTkVhV0ZzYjJjc1hHNWNkRngwWEhSOUtUdGNibHh1WEhSY2RGeDBaR1Z0YjBGd2NDNWxkbVZ1ZEhNdVlXUmtLQ2s3WEc1Y2RGeDBYSFFrS0dSbGJXOUJjSEF1WkdsaGJHOW5SV3dwTG5SeWFXZG5aWElvSjIxbGMzTnBZVU5vWVc1blpVRmpkR2x2Ym5OVGRHRjBaU2NwTzF4dVhIUmNkRngwWkdWdGIwRndjQzUxY0dSaGRHVkVaVzF2VTNSaGRHVW9abUZzYzJVcE8xeHVYRzVjZEZ4MFhIUmtaVzF2UVhCd0xtUnBZV3h2WjBWc0xtMWxjM05wWVVScFlXeHZaeTV2Y0dWdUtDazdYRzVjZEZ4MGZTeGNibHgwWEhSeVpXNWtaWEk2SUdaMWJtTjBhVzl1SUNncElIdGNibHgwWEhSY2RHUmxiVzlCY0hBdVpHbGhiRzluUld3dWJXVnpjMmxoUkdsaGJHOW5Mbk5sZEVOdmJuUmxiblFvWEc1Y2RGeDBYSFJjZEdSbGJXOUJjSEF1ZEdWdGNHeGhkR1VvZTF4dVhIUmNkRngwWEhSY2RHUmxiVzlNYVhOME9pQmtaVzF2UVhCd0xtUmxiVzlFWVhSaExGeHVYSFJjZEZ4MFhIUmNkSE5sYkdWamRHVmtPaUJrWlcxdlFYQndMbk5sYkdWamRHVmtMRnh1WEhSY2RGeDBYSFJjZEhSb1pXMWxUR2xqWlc1alpVRmpkR2wyWlRvZ1pHVnRiMEZ3Y0M1MGFHVnRaVXhwWTJWdVkyVkJZM1JwZG1Vc1hHNWNkRngwWEhSY2RIMHBYRzVjZEZ4MFhIUXBPMXh1WEhSY2RIMHNYRzVjZEZ4MFlXTjBhVzl1YzFSdloyZHNaVG9nWm5WdVkzUnBiMjRnS0NrZ2UxeHVYRzVjZEZ4MFhIUm1iM0lnS0haaGNpQnpkR0YwWlNCdlppQlBZbXBsWTNRdWEyVjVjeWhrWlcxdlFYQndMbUZqZEdsdmJuTlRkR0YwWlNrcElIdGNibHh1WEhSY2RGeDBYSFF2TDJ4bGRDQmlkWFIwYjI1eklEMGdaR1Z0YjBGd2NDNWthV0ZzYjJjdWRXbEVhV0ZzYjJkQ2RYUjBiMjVRWVc1bE8xeHVYSFJjZEZ4MFhIUmpiMjV6ZENCaWRYUjBiMjV6SUQwZ0pDaGtaVzF2UVhCd0xtUnBZV3h2WjBWc0tTNW1hVzVrS0NjdVluVjBkRzl1Y0dGdVpTQXVZblYwZEc5dWMyVjBKeWs3WEc1Y2JseDBYSFJjZEZ4MGMzZHBkR05vSUNoemRHRjBaU2tnZTF4dVhIUmNkRngwWEhSY2RHTmhjMlVnSjJSbGJXOURiRzl6WlNjNlhHNWNkRngwWEhSY2RGeDBYSFJqYjI1emRDQmpiRzl6WlNBOUlHSjFkSFJ2Ym5NdVptbHVaQ2duSTJSbGJXOHRZMnh2YzJVbktUdGNibHgwWEhSY2RGeDBYSFJjZEdKeVpXRnJPMXh1WEc1Y2RGeDBYSFJjZEZ4MFkyRnpaU0FuWkdWdGIwRmtaQ2M2WEc1Y2RGeDBYSFJjZEZ4MFhIUmpiMjV6ZENCaFpHUWdQU0JpZFhSMGIyNXpMbVpwYm1Rb0p5TmtaVzF2TFdGa1pDY3BPMXh1WEc1Y2RGeDBYSFJjZEZ4MFhIUnBaaUFvWkdWdGIwRndjQzVoWTNScGIyNXpVM1JoZEdWYmMzUmhkR1ZkSUQwOVBTQjBjblZsS1NCN1hHNWNkRngwWEhSY2RGeDBYSFJjZEdGa1pDNXdjbTl3S0Nka2FYTmhZbXhsWkNjc0lHWmhiSE5sS1M1eVpXMXZkbVZEYkdGemN5aGJKM1ZwTFdKMWRIUnZiaTFrYVhOaFlteGxaQ2NzSUNkMWFTMXpkR0YwWlMxa2FYTmhZbXhsWkNkZEtUdGNibHgwWEhSY2RGeDBYSFJjZEgwZ1pXeHpaU0I3WEc1Y2RGeDBYSFJjZEZ4MFhIUmNkR0ZrWkM1d2NtOXdLQ2RrYVhOaFlteGxaQ2NzSUhSeWRXVXBMbUZrWkVOc1lYTnpLRnNuZFdrdFluVjBkRzl1TFdScGMyRmliR1ZrSnl3Z0ozVnBMWE4wWVhSbExXUnBjMkZpYkdWa0oxMHBPMXh1WEhSY2RGeDBYSFJjZEZ4MGZWeHVYSFJjZEZ4MFhIUmNkRngwWW5KbFlXczdYRzVjYmx4MFhIUmNkRngwWEhSallYTmxJQ2RrWlcxdlVtVnRiM1psSnpwY2JseDBYSFJjZEZ4MFhIUmNkR052Ym5OMElISmxiVzkyWlNBOUlHSjFkSFJ2Ym5NdVptbHVaQ2duSTJSbGJXOHRjbVZ0YjNabEp5azdYRzVjYmx4MFhIUmNkRngwWEhSY2RHbG1JQ2hrWlcxdlFYQndMbUZqZEdsdmJuTlRkR0YwWlZ0emRHRjBaVjBnUFQwOUlIUnlkV1VwSUh0Y2JseDBYSFJjZEZ4MFhIUmNkRngwY21WdGIzWmxMbkJ5YjNBb0oyUnBjMkZpYkdWa0p5d2dabUZzYzJVcExuSmxiVzkyWlVOc1lYTnpLRnNuZFdrdFluVjBkRzl1TFdScGMyRmliR1ZrSnl3Z0ozVnBMWE4wWVhSbExXUnBjMkZpYkdWa0oxMHBPMXh1WEhSY2RGeDBYSFJjZEZ4MGZTQmxiSE5sSUh0Y2JseDBYSFJjZEZ4MFhIUmNkRngwY21WdGIzWmxMbkJ5YjNBb0oyUnBjMkZpYkdWa0p5d2dkSEoxWlNrdVlXUmtRMnhoYzNNb1d5ZDFhUzFpZFhSMGIyNHRaR2x6WVdKc1pXUW5MQ0FuZFdrdGMzUmhkR1V0WkdsellXSnNaV1FuWFNrN1hHNWNkRngwWEhSY2RGeDBYSFI5WEc1Y2RGeDBYSFJjZEZ4MFhIUmljbVZoYXp0Y2JseHVYSFJjZEZ4MFhIUmNkR05oYzJVZ0oyUmxiVzlKYm5OMFlXeHNKenBjYmx4MFhIUmNkRngwWEhSY2RHTnZibk4wSUdsdWMzUmhiR3dnUFNCaWRYUjBiMjV6TG1acGJtUW9KeU5rWlcxdkxXbHVjM1JoYkd3bktUdGNibHh1WEhSY2RGeDBYSFJjZEZ4MGFXWWdLR1JsYlc5QmNIQXVZV04wYVc5dWMxTjBZWFJsVzNOMFlYUmxYU0E5UFQwZ2RISjFaU2tnZTF4dVhIUmNkRngwWEhSY2RGeDBYSFJwYm5OMFlXeHNMbkJ5YjNBb0oyUnBjMkZpYkdWa0p5d2dabUZzYzJVcExuSmxiVzkyWlVOc1lYTnpLRnNuZFdrdFluVjBkRzl1TFdScGMyRmliR1ZrSnl3Z0ozVnBMWE4wWVhSbExXUnBjMkZpYkdWa0oxMHBPMXh1WEhSY2RGeDBYSFJjZEZ4MGZTQmxiSE5sSUh0Y2JseDBYSFJjZEZ4MFhIUmNkRngwYVc1emRHRnNiQzV3Y205d0tDZGthWE5oWW14bFpDY3NJSFJ5ZFdVcExtRmtaRU5zWVhOektGc25kV2t0WW5WMGRHOXVMV1JwYzJGaWJHVmtKeXdnSjNWcExYTjBZWFJsTFdScGMyRmliR1ZrSjEwcE8xeHVYSFJjZEZ4MFhIUmNkRngwZlZ4dVhIUmNkRngwWEhSY2RGeDBZbkpsWVdzN1hHNWNkRngwWEhSY2RIMWNibHgwWEhSY2RIMWNibHgwWEhSOUxGeHVYSFJjZEM4cUtseHVYSFJjZENBcUlFZGxkQ0JzYVhOMElHOW1JR0YyWVdsc1lXSnNaU0JrWlcxdklHOXVJSE5sY25abGNpNWNibHgwWEhRZ0tseHVYSFJjZENBcUlFQnlaWFIxY200Z2UxQnliMjFwYzJWOUlGQnliMjFwYzJVZ2NtVnpkV3gwTGx4dVhIUmNkQ0FxTDF4dVhIUmNkR1J2UVdwaGVFUmxiVzlIWlhSTWFYTjBPaUJoYzNsdVl5Qm1kVzVqZEdsdmJpQW9LU0I3WEc1Y2JseDBYSFJjZEd4bGRDQmtaVzF2SUQwZ1lYZGhhWFFnYm1WM0lGQnliMjFwYzJVb0tISmxjMjlzZG1Vc0lISmxhbVZqZENrZ1BUNGdlMXh1WEc1Y2RGeDBYSFJjZEdOdmJuTjBJR1JoZEdFZ1BTQk5aWE56YVdFdWRHRmljMFJoZEdFN1hHNWNibHgwWEhSY2RGeDBaR1Z0YjE5NGFISmZaMlYwWDJ4cGMzUWdQU0FrTG1GcVlYZ29lMXh1WEhSY2RGeDBYSFJjZEhSNWNHVTZJQ2RRVDFOVUp5eGNibHgwWEhSY2RGeDBYSFIxY213NklHUmhkR0V1WVdwaGVGVnliQ3hjYmx4MFhIUmNkRngwWEhSa1lYUmhPaUI3WEc1Y2RGeDBYSFJjZEZ4MFhIUmhZM1JwYjI0NklHUmhkR0V1WVdOMGFXOXVSR1Z0YjBkbGRFeHBjM1FzWEc1Y2RGeDBYSFJjZEZ4MFhIUnRaWE56YVdGT2IyNWpaVG9nWkdGMFlTNXpaWFIwYVc1blJtOXliVTV2Ym1ObExGeHVYSFJjZEZ4MFhIUmNkSDBzWEc1Y2RGeDBYSFJjZEZ4MFltVm1iM0psVTJWdVpEb2dablZ1WTNScGIyNGdLQ2tnZTF4dVhHNWNkRngwWEhSY2RGeDBYSFJwWmlBb1pHVnRiMTk0YUhKZloyVjBYMnhwYzNRZ0lUMGdiblZzYkNrZ2UxeHVYSFJjZEZ4MFhIUmNkRngwWEhSa1pXMXZYM2hvY2w5blpYUmZiR2x6ZEM1aFltOXlkQ2dwTzF4dVhIUmNkRngwWEhSY2RGeDBYSFJrWlcxdlgzaG9jbDluWlhSZmJHbHpkQ0E5SUc1MWJHdzdYRzVjZEZ4MFhIUmNkRngwWEhSOVhHNWNkRngwWEhSY2RGeDBmU3hjYmx4MFhIUmNkRngwWEhSemRXTmpaWE56T2lCbWRXNWpkR2x2YmlBb2MyVnlkbVZ5S1NCN1hHNWNkRngwWEhSY2RGeDBYSFJwWmlBb2MyVnlkbVZ5TG5OMVkyTmxjM01nUFQwOUlIUnlkV1VwSUh0Y2JseDBYSFJjZEZ4MFhIUmNkRngwY21WMGRYSnVJSEpsYzI5c2RtVW9jMlZ5ZG1WeUxtUmhkR0VwTzF4dVhIUmNkRngwWEhSY2RGeDBmU0JsYkhObElIdGNibHgwWEhSY2RGeDBYSFJjZEZ4MGNtVjBkWEp1SUhKbGFtVmpkQ2h1WlhjZ1JYSnliM0lvWkdGMFlTNTFibVY0Y0dWamRHVmtSWEp5S1NrN1hHNWNkRngwWEhSY2RGeDBYSFI5WEc1Y2RGeDBYSFJjZEZ4MGZTeGNibHgwWEhSY2RGeDBYSFJsY25KdmNqb2dablZ1WTNScGIyNGdLRTFNU0hSMGNGSmxjWFZsYzNRc0lIUmxlSFJUZEdGMGRYTXNJR1Z5Y205eVZHaHliM2R1S1NCN1hHNWNibHgwWEhSY2RGeDBYSFJjZEdsbUlDaE5URWgwZEhCU1pYRjFaWE4wTG5OMFlYUjFjeUE5UFQwZ01DQW1KaUIwWlhoMFUzUmhkSFZ6SUQwOUlDZGhZbTl5ZENjcElIdGNibHgwWEhSY2RGeDBYSFJjZEZ4MGNtVjBkWEp1TzF4dVhIUmNkRngwWEhSY2RGeDBmVnh1WEhSY2RGeDBYSFJjZEZ4MGNtVjBkWEp1SUhKbGFtVmpkQ2h1WlhjZ1JYSnliM0lvWkdGMFlTNWhhbUY0UlhKeWIzSXBLVHRjYmx4MFhIUmNkRngwWEhSOUxGeHVYSFJjZEZ4MFhIUmNkR052YlhCc1pYUmxPaUJtZFc1amRHbHZiaUFvVFV4SWRIUndVbVZ4ZFdWemRDd2dkR1Y0ZEZOMFlYUjFjeWtnZTF4dVhIUmNkRngwWEhSY2RGeDBaR1Z0YjE5NGFISmZaMlYwWDJ4cGMzUWdQU0J1ZFd4c08xeHVYSFJjZEZ4MFhIUmNkSDBzWEc1Y2RGeDBYSFJjZEgwcE8xeHVYSFJjZEZ4MGZTazdYRzVjZEZ4MFhIUnlaWFIxY200Z1pHVnRienRjYmx4MFhIUjlMRnh1WEhSY2RDOHFLbHh1WEhSY2RDQXFJRVJsY0d4dmVTQmtaVzF2SUhCaFkydGhaMlV1WEc1Y2RGeDBJQ3BjYmx4MFhIUWdLaUJBY0dGeVlXMGdlM04wY21sdVozMGdkR1Z0Y0d4aGRHVWdSR1Z0YnlCbWFXeGxJRzVoYldWekxseHVYSFJjZENBcVhHNWNkRngwSUNvZ1FISmxkSFZ5YmlCN1VISnZiV2x6WlgwZ1VISnZiV2x6WlNCeVpYTjFiSFF1WEc1Y2RGeDBJQ292WEc1Y2RGeDBaRzlCYW1GNFJHVnRiMGx1YzNSaGJHdzZJR0Z6ZVc1aklHWjFibU4wYVc5dUlDaDBaVzF3YkdGMFpTa2dlMXh1WEc1Y2RGeDBYSFJzWlhRZ2FXNXpkR0ZzYkNBOUlHRjNZV2wwSUc1bGR5QlFjbTl0YVhObEtDaHlaWE52YkhabExDQnlaV3BsWTNRcElEMCtJSHRjYmx4MFhIUmNkRngwWTI5dWMzUWdaR0YwWVNBOUlFMWxjM05wWVM1MFlXSnpSR0YwWVR0Y2JseHVYSFJjZEZ4MFhIUmtaVzF2WDNob2NsOXBibk4wWVd4c0lEMGdKQzVoYW1GNEtIdGNibHgwWEhSY2RGeDBYSFIwZVhCbE9pQW5VRTlUVkNjc1hHNWNkRngwWEhSY2RGeDBkWEpzT2lCa1lYUmhMbUZxWVhoVmNtd3NYRzVjZEZ4MFhIUmNkRngwWkdGMFlUb2dlMXh1WEhSY2RGeDBYSFJjZEZ4MFlXTjBhVzl1T2lCa1lYUmhMbUZqZEdsdmJrUmxiVzlKYm5OMFlXeHNMRnh1WEhSY2RGeDBYSFJjZEZ4MGJXVnpjMmxoVG05dVkyVTZJR1JoZEdFdWMyVjBkR2x1WjBadmNtMU9iMjVqWlN4Y2JseDBYSFJjZEZ4MFhIUmNkSFJsYlhCc1lYUmxSbWxzWlRvZ2RHVnRjR3hoZEdVc1hHNWNkRngwWEhSY2RGeDBmU3hjYmx4MFhIUmNkRngwWEhSaVpXWnZjbVZUWlc1a09pQm1kVzVqZEdsdmJpQW9LU0I3WEc1Y2JseDBYSFJjZEZ4MFhIUmNkR2xtSUNoa1pXMXZYM2hvY2w5cGJuTjBZV3hzSUNFOUlHNTFiR3dwSUh0Y2JseDBYSFJjZEZ4MFhIUmNkRngwWkdWdGIxOTRhSEpmYVc1emRHRnNiQzVoWW05eWRDZ3BPMXh1WEhSY2RGeDBYSFJjZEZ4MFhIUmtaVzF2WDNob2NsOXBibk4wWVd4c0lEMGdiblZzYkR0Y2JseDBYSFJjZEZ4MFhIUmNkSDFjYmx4dVhIUmNkRngwWEhSY2RGeDBaR1Z0YjBGd2NDNXpaWFJCWTNScGIyNXpVM1JoZEdWektIdGNibHgwWEhSY2RGeDBYSFJjZEZ4MFpHVnRiMUpsYlc5MlpUb2dabUZzYzJVc1hHNWNkRngwWEhSY2RGeDBYSFJjZEdSbGJXOUpibk4wWVd4c09pQm1ZV3h6WlN4Y2JseDBYSFJjZEZ4MFhIUmNkSDBwTzF4dVhIUmNkRngwWEhSY2RIMHNYRzVjZEZ4MFhIUmNkRngwYzNWalkyVnpjem9nWm5WdVkzUnBiMjRnS0hObGNuWmxjaWtnZTF4dVhIUmNkRngwWEhSY2RGeDBhV1lnS0hObGNuWmxjaTV6ZFdOalpYTnpJRDA5UFNCMGNuVmxLU0I3WEc1Y2RGeDBYSFJjZEZ4MFhIUmNkSEpsZEhWeWJpQnlaWE52YkhabEtITmxjblpsY2k1a1lYUmhLVHRjYmx4MFhIUmNkRngwWEhSY2RIMGdaV3h6WlNCN1hHNWNkRngwWEhSY2RGeDBYSFJjZEhKbGRIVnliaUJ5WldwbFkzUW9ibVYzSUVWeWNtOXlLR1JoZEdFdWRXNWxlSEJsWTNSbFpFVnljaWtwTzF4dVhIUmNkRngwWEhSY2RGeDBmVnh1WEhSY2RGeDBYSFJjZEgwc1hHNWNkRngwWEhSY2RGeDBaWEp5YjNJNklHWjFibU4wYVc5dUlDaE5URWgwZEhCU1pYRjFaWE4wTENCMFpYaDBVM1JoZEhWekxDQmxjbkp2Y2xSb2NtOTNiaWtnZTF4dVhHNWNkRngwWEhSY2RGeDBYSFJwWmlBb1RVeElkSFJ3VW1WeGRXVnpkQzV6ZEdGMGRYTWdQVDA5SURBZ0ppWWdkR1Y0ZEZOMFlYUjFjeUE5UFNBbllXSnZjblFuS1NCN1hHNWNkRngwWEhSY2RGeDBYSFJjZEhKbGRIVnlianRjYmx4MFhIUmNkRngwWEhSY2RIMWNibHgwWEhSY2RGeDBYSFJjZEhKbGRIVnliaUJ5WldwbFkzUW9ibVYzSUVWeWNtOXlLR1JoZEdFdVlXcGhlRVZ5Y205eUtTazdYRzVjZEZ4MFhIUmNkRngwZlN4Y2JseDBYSFJjZEZ4MFhIUmpiMjF3YkdWMFpUb2dablZ1WTNScGIyNGdLRTFNU0hSMGNGSmxjWFZsYzNRc0lIUmxlSFJUZEdGMGRYTXBJSHRjYmx4MFhIUmNkRngwWEhSY2RHUmxiVzlmZUdoeVgybHVjM1JoYkd3Z1BTQnVkV3hzTzF4dVhIUmNkRngwWEhSY2RGeDBKQzVtYmk1VVlXSnpVR3gxWjJsdVJuSmhiV1ZYYjNKcktDZHdiR0Y1VTI5MWJtUW5MQ0F3TGpNcE8xeHVYSFJjZEZ4MFhIUmNkSDBzWEc1Y2RGeDBYSFJjZEgwcE8xeHVYSFJjZEZ4MGZTazdYRzVjZEZ4MFhIUnlaWFIxY200Z2FXNXpkR0ZzYkR0Y2JseDBYSFI5TEZ4dVhIUmNkQzhxS2x4dVhIUmNkQ0FxSUVGa1pDQm1hV3hsY3lCMGJ5QnpaWEoyWlhJdVhHNWNkRngwSUNwY2JseDBYSFFnS2lCQWNHRnlZVzBnZTBacGJHVjlJR1pwYkdVZ1JHVnRieUJtYVd4bElHOWlhbVZqZEM1Y2JseDBYSFFnS2lCQWNHRnlZVzBnZTBaMWJtTjBhVzl1ZlNCdmJsQnliMmR5WlhOeklFWjFibU4wYVc5dUlIUnZJR1Y0WldOMWRHVWdiMjRnZFhCc2IyRmtJSEJ5YjJkeVpYTnpMbHh1WEhSY2RDQXFYRzVjZEZ4MElDb2dRSEpsZEhWeWJpQjdVSEp2YldselpYMGdVSEp2YldselpTQnlaWE4xYkhRdVhHNWNkRngwSUNvdlhHNWNkRngwWkc5QmFtRjRSR1Z0YjBGa1pEb2dZWE41Ym1NZ1puVnVZM1JwYjI0Z0tHWnBiR1VzSUc5dVVISnZaM0psYzNNcElIdGNibHh1WEhSY2RGeDBiR1YwSUdGa1pDQTlJR0YzWVdsMElHNWxkeUJRY205dGFYTmxLR0Z6ZVc1aklDaHlaWE52YkhabExDQnlaV3BsWTNRcElEMCtJSHRjYmx4MFhIUmNkRngwWTI5dWMzUmNibHgwWEhSY2RGeDBYSFJrWVhSaElEMGdUV1Z6YzJsaExuUmhZbk5FWVhSaExGeHVYSFJjZEZ4MFhIUmNkR1p2Y20xRVlYUmhJRDBnYm1WM0lFWnZjbTFFWVhSaEtDazdYRzVjYmx4MFhIUmNkRngwWm05eWJVUmhkR0V1YzJWMEtDZGhZM1JwYjI0bkxDQmtZWFJoTG1GamRHbHZia1JsYlc5QlpHUXBPMXh1WEhSY2RGeDBYSFJtYjNKdFJHRjBZUzV6WlhRb0oyMWxjM05wWVU1dmJtTmxKeXdnWkdGMFlTNXpaWFIwYVc1blJtOXliVTV2Ym1ObEtUdGNibHgwWEhSY2RGeDBabTl5YlVSaGRHRXVjMlYwS0Nka1pXMXZXMTBuTENCdVpYY2dRbXh2WWloYk1GMHBMQ0JtYVd4bExtNWhiV1VwTzF4dVhIUmNkRngwWEhSbWIzSnRSR0YwWVM1elpYUW9KMlJsYlc5RVlYUmhKeXdnU2xOUFRpNXpkSEpwYm1kcFpua29XMXh1WEhSY2RGeDBYSFJjZEh0Y2JseDBYSFJjZEZ4MFhIUmNkRzVoYldVNklHWnBiR1V1Ym1GdFpTeGNibHgwWEhSY2RGeDBYSFJjZEhOcGVtVTZJR1pwYkdVdWMybDZaU3hjYmx4MFhIUmNkRngwWEhSY2RITjBZWEowT2lCMGNuVmxMRnh1WEhSY2RGeDBYSFJjZEZ4MFptbHVhWE5vT2lCbVlXeHpaU3hjYmx4MFhIUmNkRngwWEhSOVhHNWNkRngwWEhSY2RGMHBLVHRjYmx4dVhIUmNkRngwWEhRdktpcGNibHgwWEhSY2RGeDBJQ29nU0dWeVpTQnBjeUJoYmlCbGVHRnRjR3hsSUc5bUlIZG9ZWFFnWW5KdmQzTmxjaUIzYVd4c0lITmxibVE2WEc1Y2RGeDBYSFJjZENBcVhHNWNkRngwWEhSY2RDQXFJQzB0TFMwdExWZGxZa3RwZEVadmNtMUNiM1Z1WkdGeWVUQk9PVFJDUlhKRU5WZElPR05wTldOY2JseDBYSFJjZEZ4MElDcGNkRU52Ym5SbGJuUXRSR2x6Y0c5emFYUnBiMjQ2SUdadmNtMHRaR0YwWVRzZ2JtRnRaVDFjSW1GamRHbHZibHdpWEc1Y2RGeDBYSFJjZENBcVhHNWNkRngwWEhSY2RDQXFYSFJ0WlhOemFXRmZaR1Z0YjE5aFpHUmNibHgwWEhSY2RGeDBJQ3BjZEMwdExTMHRMVmRsWWt0cGRFWnZjbTFDYjNWdVpHRnllVEJPT1RSQ1JYSkVOVmRJT0dOcE5XTmNibHgwWEhSY2RGeDBJQ3BjZEVOdmJuUmxiblF0UkdsemNHOXphWFJwYjI0NklHWnZjbTB0WkdGMFlUc2dibUZ0WlQxY0ltMWxjM05wWVU1dmJtTmxYQ0pjYmx4MFhIUmNkRngwSUNwY2JseDBYSFJjZEZ4MElDcGNkRGcyT1dNMlptSXlaV1pjYmx4MFhIUmNkRngwSUNwY2RDMHRMUzB0TFZkbFlrdHBkRVp2Y20xQ2IzVnVaR0Z5ZVRCT09UUkNSWEpFTlZkSU9HTnBOV05jYmx4MFhIUmNkRngwSUNwY2RFTnZiblJsYm5RdFJHbHpjRzl6YVhScGIyNDZJR1p2Y20wdFpHRjBZVHNnYm1GdFpUMWNJbVJsYlc5RVlYUmhYQ0pjYmx4MFhIUmNkRngwSUNwY2JseDBYSFJjZEZ4MElDcGNkRnQ3WENKdVlXMWxYQ0k2WENKMmFERTFPVEV5TVY5a1pXMXZYMjFsYzNOcFlYZHdYMlIxYlhCZktERTJMVEE1TFRJd01qRmZNVE10TURBdE5UVXBMbnBwY0Z3aUxGd2ljMmw2WlZ3aU9qTXpNRGc0TURBeUxGd2ljM1JoY25SY0lqcDBjblZsTEZ3aVptbHVhWE5vWENJNlptRnNjMlY5WFZ4dVhIUmNkRngwWEhRZ0tseDBMUzB0TFMwdFYyVmlTMmwwUm05eWJVSnZkVzVrWVhKNU1FNDVORUpGY2tRMVYwZzRZMmsxWTF4dVhIUmNkRngwWEhRZ0tpOWNibHgwWEhSY2RGeDBZMjl1YzNRZ2JHNGdQU0JCY25KaGVTNW1jbTl0S0dadmNtMUVZWFJoTG1WdWRISnBaWE1vS1N3Z0tGdHJaWGtzSUhCeWIzQmRLU0E5UGlCN1hHNWNkRngwWEhSY2RGeDBjbVYwZFhKdUlIUjVjR1Z2WmlCd2NtOXdJRDA5UFNCY0luTjBjbWx1WjF3aVhHNWNkRngwWEhSY2RGeDBYSFEvSUNoclpYa3ViR1Z1WjNSb0lDc2dNVEF3S1NBcklDaHdjbTl3TG14bGJtZDBhQ0FySURVd0tWeHVYSFJjZEZ4MFhIUmNkRngwT2lBb2EyVjVMbXhsYm1kMGFDQXJJREV3TUNrZ0t5QW9jSEp2Y0M1emFYcGxJQ3NnTlRBcE8xeHVYSFJjZEZ4MFhIUjlLVHRjYmx4dVhIUmNkRngwWEhSamIyNXpkRnh1WEhSY2RGeDBYSFJjZEdOb2RXNXJVMmw2WlNBOUlHUmhkR0V1Y0c5emRFMWhlRk5wZW1VZ0xTQnNiaTV5WldSMVkyVW9LR0VzSUdJcElEMCtJR0VnS3lCaUtTd2dMeThnWTNWeWNtVnVkQ0J6YVhwbElHOW1JRVp2Y20xelJHRjBZUzVjYmx4MFhIUmNkRngwWEhSemRHVndjeUE5SUUxaGRHZ3VkSEoxYm1Nb1ptbHNaUzV6YVhwbElDOGdZMmgxYm10VGFYcGxLVHRjYmx4dVhIUmNkRngwWEhSbWIzSWdLR3hsZENCemRHRnlkQ0E5SURBc0lITjBaWEFnUFNBd095QnpkR0Z5ZENBOElHWnBiR1V1YzJsNlpUc2djM1JoY25RZ0t6MGdZMmgxYm10VGFYcGxMQ0J6ZEdWd0t5c3BJSHRjYmx4MFhIUmNkRngwWEhSamIyNXpkRnh1WEhSY2RGeDBYSFJjZEZ4MGRISlRkR0Z5ZENBOUlITjBaWEFnUFQwOUlEQXNYRzVjZEZ4MFhIUmNkRngwWEhSMGNrWnBibWx6YUNBOUlFMWhkR2d1ZEhKMWJtTW9jM1JsY0hNcElEMDlQU0J6ZEdWd0xGeHVYSFJjZEZ4MFhIUmNkRngwWTJoMWJtc2dQU0JtYVd4bExuTnNhV05sS0hOMFlYSjBMQ0J6ZEdGeWRDQXJJR05vZFc1clUybDZaU2s3WEc1Y2JseDBYSFJjZEZ4MFhIUm1iM0p0UkdGMFlTNXpaWFFvSjJSbGJXOWJYU2NzSUdOb2RXNXJMQ0JtYVd4bExtNWhiV1VwTzF4dVhIUmNkRngwWEhSY2RHWnZjbTFFWVhSaExuTmxkQ2duWkdWdGIwUmhkR0VuTENCS1UwOU9Mbk4wY21sdVoybG1lU2hiWEc1Y2RGeDBYSFJjZEZ4MFhIUjdYRzVjZEZ4MFhIUmNkRngwWEhSY2RHNWhiV1U2SUdacGJHVXVibUZ0WlN4Y2JseDBYSFJjZEZ4MFhIUmNkRngwYzJsNlpUb2dabWxzWlM1emFYcGxMRnh1WEhSY2RGeDBYSFJjZEZ4MFhIUnpkR0Z5ZERvZ2RISlRkR0Z5ZEN4Y2JseDBYSFJjZEZ4MFhIUmNkRngwWm1sdWFYTm9PaUIwY2tacGJtbHphQ3hjYmx4MFhIUmNkRngwWEhSY2RIMWNibHgwWEhSY2RGeDBYSFJkS1NrN1hHNWNibHgwWEhSY2RGeDBYSFJoZDJGcGRDQWtMbUZxWVhnb2UxeHVYSFJjZEZ4MFhIUmNkRngwZEhsd1pUb2dKMUJQVTFRbkxGeHVYSFJjZEZ4MFhIUmNkRngwZFhKc09pQmtZWFJoTG1GcVlYaFZjbXdzWEc1Y2RGeDBYSFJjZEZ4MFhIUmtZWFJoT2lCbWIzSnRSR0YwWVN4Y2JseDBYSFJjZEZ4MFhIUmNkR1Z1WTNSNWNHVTZJQ2R0ZFd4MGFYQmhjblF2Wm05eWJTMWtZWFJoSnl4Y2JseDBYSFJjZEZ4MFhIUmNkR052Ym5SbGJuUlVlWEJsT2lCbVlXeHpaU3hjYmx4MFhIUmNkRngwWEhSY2RIQnliMk5sYzNORVlYUmhPaUJtWVd4elpTeGNibHgwWEhSY2RGeDBYSFJjZEM4dklHTmhZMmhsT2lCbVlXeHpaU3hjYmx4MFhIUmNkRngwWEhSY2RDOHZJR1JoZEdGVWVYQmxPaUFuU2xOUFRpY3NYRzVjZEZ4MFhIUmNkRngwWEhRdkx5QmhjM2x1WXpvZ2RISjFaU3hjYmx4MFhIUmNkRngwWEhSY2RHSmxabTl5WlZObGJtUTZJR1oxYm1OMGFXOXVJQ2hZVFV4SWRIUndVbVZ4ZFdWemRDd2dVbVZ4ZFdWemRFUmhkR0VwSUh0Y2JseHVYSFJjZEZ4MFhIUmNkRngwWEhSa1pXMXZRWEJ3TG5ObGRFRmpkR2x2Ym5OVGRHRjBaWE1vZTF4dVhIUmNkRngwWEhSY2RGeDBYSFJjZEdSbGJXOVNaVzF2ZG1VNklHWmhiSE5sTEZ4dVhIUmNkRngwWEhSY2RGeDBYSFJjZEdSbGJXOUpibk4wWVd4c09pQm1ZV3h6WlN4Y2JseDBYSFJjZEZ4MFhIUmNkRngwZlNrN1hHNWNibHgwWEhSY2RGeDBYSFJjZEZ4MEx5OXdZWFJqYUNCaGFtRjRJSE5sZEhScGJtZHpJSFJ2SUdOaGJHd2dZU0J3Y205bmNtVnpjeUJqWVd4c1ltRmphMXh1WEhSY2RGeDBYSFJjZEZ4MFhIUjJZWElnWTNWeWNsaElVaUE5SUZKbGNYVmxjM1JFWVhSaExuaG9janRjYmx4MFhIUmNkRngwWEhSY2RGeDBVbVZ4ZFdWemRFUmhkR0V1ZUdoeUlEMGdablZ1WTNScGIyNGdLQ2tnZTF4dVhIUmNkRngwWEhSY2RGeDBYSFJjZEhaaGNpQjRhSElnUFNCamRYSnlXRWhTTG1Gd2NHeDVLSFJvYVhNc0lHRnlaM1Z0Wlc1MGN5azdYRzVjYmx4MFhIUmNkRngwWEhSY2RGeDBYSFJwWmlBb2VHaHlMblZ3Ykc5aFpDa2dlMXh1WEhSY2RGeDBYSFJjZEZ4MFhIUmNkRngwZUdoeUxuVndiRzloWkM1aFpHUkZkbVZ1ZEV4cGMzUmxibVZ5S0Nkd2NtOW5jbVZ6Y3ljc0lDaGxkblFwSUQwK0lHOXVVSEp2WjNKbGMzTW9aWFowTENCemRHVndMQ0J6ZEdWd2N5a3NJR1poYkhObEtUdGNibHgwWEhSY2RGeDBYSFJjZEZ4MFhIUjlYRzVjYmx4MFhIUmNkRngwWEhSY2RGeDBYSFJ5WlhSMWNtNGdlR2h5TzF4dVhIUmNkRngwWEhSY2RGeDBYSFI5TzF4dVhIUmNkRngwWEhSY2RGeDBmU3hjYmx4MFhIUmNkRngwWEhSY2RITjFZMk5sYzNNNklHWjFibU4wYVc5dUlDaHpaWEoyWlhJcElIdGNibHgwWEhSY2RGeDBYSFJjZEZ4MGFXWWdLQ0YwY2tacGJtbHphQ2tnY21WMGRYSnVPMXh1WEc1Y2RGeDBYSFJjZEZ4MFhIUmNkR2xtSUNoelpYSjJaWEl1YzNWalkyVnpjeUE5UFQwZ2RISjFaU2tnZTF4dVhIUmNkRngwWEhSY2RGeDBYSFJjZEhKbGRIVnliaUJ5WlhOdmJIWmxLSE5sY25abGNpNWtZWFJoS1R0Y2JseDBYSFJjZEZ4MFhIUmNkRngwZlNCbGJITmxJSHRjYmx4MFhIUmNkRngwWEhSY2RGeDBYSFJ5WlhSMWNtNGdjbVZxWldOMEtHNWxkeUJGY25KdmNpaGtZWFJoTG5WdVpYaHdaV04wWldSRmNuSXBLVHRjYmx4MFhIUmNkRngwWEhSY2RGeDBmVnh1WEhSY2RGeDBYSFJjZEZ4MGZTeGNibHgwWEhSY2RGeDBYSFJjZEdWeWNtOXlPaUJtZFc1amRHbHZiaUFvVFV4SWRIUndVbVZ4ZFdWemRDd2dkR1Y0ZEZOMFlYUjFjeXdnWlhKeWIzSlVhSEp2ZDI0cElIdGNibHh1WEhSY2RGeDBYSFJjZEZ4MFhIUnBaaUFvVFV4SWRIUndVbVZ4ZFdWemRDNXpkR0YwZFhNZ1BUMDlJREFnSmlZZ2RHVjRkRk4wWVhSMWN5QTlQU0FuWVdKdmNuUW5LU0I3WEc1Y2RGeDBYSFJjZEZ4MFhIUmNkRngwY21WMGRYSnVPMXh1WEhSY2RGeDBYSFJjZEZ4MFhIUjlYRzVjZEZ4MFhIUmNkRngwWEhSY2RISmxkSFZ5YmlCeVpXcGxZM1FvYm1WM0lFVnljbTl5S0dSaGRHRXVZV3BoZUVWeWNtOXlLU2s3WEc1Y2RGeDBYSFJjZEZ4MFhIUjlMRnh1WEhSY2RGeDBYSFJjZEgwcE8xeHVYRzVjZEZ4MFhIUmNkRngwWm05eWJVUmhkR0V1WkdWc1pYUmxLQ2RrWlcxdlcxMG5LVHRjYmx4MFhIUmNkRngwWEhSbWIzSnRSR0YwWVM1a1pXeGxkR1VvSjJSbGJXOUVZWFJoSnlrN1hHNWNkRngwWEhSY2RIMWNibHgwWEhSY2RIMHBPMXh1WEhSY2RGeDBjbVYwZFhKdUlHRmtaRHRjYmx4MFhIUjlMRnh1WEhSY2RDOHFLbHh1WEhSY2RDQXFJRkpsYlc5MlpTQm1hV3hsY3lCbWNtOXRJSE5sY25abGNpNWNibHgwWEhRZ0tseHVYSFJjZENBcUlFQndZWEpoYlNCN1FYSnlZWGs4YzNSeWFXNW5QbjBnWkdWdGIzTWdSR1Z0YnlCbWFXeGxJRzVoYldWekxseHVYSFJjZENBcVhHNWNkRngwSUNvZ1FISmxkSFZ5YmlCN1VISnZiV2x6WlgwZ1VISnZiV2x6WlNCeVpYTjFiSFF1WEc1Y2RGeDBJQ292WEc1Y2RGeDBaRzlCYW1GNFJHVnRiMUpsYlc5MlpUb2dZWE41Ym1NZ1puVnVZM1JwYjI0Z0tHUmxiVzl6S1NCN1hHNWNibHgwWEhSY2RHeGxkQ0JoWkdRZ1BTQmhkMkZwZENCdVpYY2dVSEp2YldselpTZ29jbVZ6YjJ4MlpTd2djbVZxWldOMEtTQTlQaUI3WEc1Y2RGeDBYSFJjZEdOdmJuTjBJR1JoZEdFZ1BTQk5aWE56YVdFdWRHRmljMFJoZEdFN1hHNWNibHgwWEhSY2RGeDBaR1Z0YjE5NGFISmZjbVZ0YjNabElEMGdKQzVoYW1GNEtIdGNibHgwWEhSY2RGeDBYSFIwZVhCbE9pQW5VRTlUVkNjc1hHNWNkRngwWEhSY2RGeDBkWEpzT2lCa1lYUmhMbUZxWVhoVmNtd3NYRzVjZEZ4MFhIUmNkRngwWkdGMFlUb2dlMXh1WEhSY2RGeDBYSFJjZEZ4MFlXTjBhVzl1T2lCa1lYUmhMbUZqZEdsdmJrUmxiVzlTWlcxdmRtVXNYRzVjZEZ4MFhIUmNkRngwWEhSdFpYTnphV0ZPYjI1alpUb2daR0YwWVM1elpYUjBhVzVuUm05eWJVNXZibU5sTEZ4dVhIUmNkRngwWEhSY2RGeDBaR1Z0YjNNNklHUmxiVzl6TEZ4dVhIUmNkRngwWEhSY2RIMHNYRzVjZEZ4MFhIUmNkRngwWW1WbWIzSmxVMlZ1WkRvZ1puVnVZM1JwYjI0Z0tDa2dlMXh1WEc1Y2RGeDBYSFJjZEZ4MFhIUnBaaUFvWkdWdGIxOTRhSEpmY21WdGIzWmxJQ0U5SUc1MWJHd3BJSHRjYmx4MFhIUmNkRngwWEhSY2RGeDBaR1Z0YjE5NGFISmZjbVZ0YjNabExtRmliM0owS0NrN1hHNWNkRngwWEhSY2RGeDBYSFJjZEdSbGJXOWZlR2h5WDNKbGJXOTJaU0E5SUc1MWJHdzdYRzVjZEZ4MFhIUmNkRngwWEhSOVhHNWNibHgwWEhSY2RGeDBYSFJjZEdSbGJXOUJjSEF1YzJWMFFXTjBhVzl1YzFOMFlYUmxjeWg3WEc1Y2RGeDBYSFJjZEZ4MFhIUmNkR1JsYlc5U1pXMXZkbVU2SUdaaGJITmxMRnh1WEhSY2RGeDBYSFJjZEZ4MFhIUmtaVzF2U1c1emRHRnNiRG9nWm1Gc2MyVXNYRzVjZEZ4MFhIUmNkRngwWEhSOUtUdGNibHgwWEhSY2RGeDBYSFI5TEZ4dVhIUmNkRngwWEhSY2RITjFZMk5sYzNNNklHWjFibU4wYVc5dUlDaHpaWEoyWlhJcElIdGNibHgwWEhSY2RGeDBYSFJjZEdsbUlDaHpaWEoyWlhJdWMzVmpZMlZ6Y3lBOVBUMGdkSEoxWlNrZ2UxeHVYSFJjZEZ4MFhIUmNkRngwWEhSeVpYUjFjbTRnY21WemIyeDJaU2h6WlhKMlpYSXVaR0YwWVNrN1hHNWNkRngwWEhSY2RGeDBYSFI5SUdWc2MyVWdlMXh1WEhSY2RGeDBYSFJjZEZ4MFhIUnlaWFIxY200Z2NtVnFaV04wS0c1bGR5QkZjbkp2Y2loa1lYUmhMblZ1Wlhod1pXTjBaV1JGY25JcEtUdGNibHgwWEhSY2RGeDBYSFJjZEgxY2JseDBYSFJjZEZ4MFhIUjlMRnh1WEhSY2RGeDBYSFJjZEdWeWNtOXlPaUJtZFc1amRHbHZiaUFvVFV4SWRIUndVbVZ4ZFdWemRDd2dkR1Y0ZEZOMFlYUjFjeXdnWlhKeWIzSlVhSEp2ZDI0cElIdGNibHh1WEhSY2RGeDBYSFJjZEZ4MGFXWWdLRTFNU0hSMGNGSmxjWFZsYzNRdWMzUmhkSFZ6SUQwOVBTQXdJQ1ltSUhSbGVIUlRkR0YwZFhNZ1BUMGdKMkZpYjNKMEp5a2dlMXh1WEhSY2RGeDBYSFJjZEZ4MFhIUnlaWFIxY200N1hHNWNkRngwWEhSY2RGeDBYSFI5WEc1Y2RGeDBYSFJjZEZ4MFhIUnlaWFIxY200Z2NtVnFaV04wS0c1bGR5QkZjbkp2Y2loa1lYUmhMbUZxWVhoRmNuSnZjaWtwTzF4dVhIUmNkRngwWEhSY2RIMHNYRzVjZEZ4MFhIUmNkRngwWTI5dGNHeGxkR1U2SUdaMWJtTjBhVzl1SUNoTlRFaDBkSEJTWlhGMVpYTjBMQ0IwWlhoMFUzUmhkSFZ6S1NCN1hHNWNkRngwWEhSY2RGeDBYSFJrWlcxdlgzaG9jbDl5WlcxdmRtVWdQU0J1ZFd4c08xeHVYSFJjZEZ4MFhIUmNkRngwSkM1bWJpNVVZV0p6VUd4MVoybHVSbkpoYldWWGIzSnJLQ2R3YkdGNVUyOTFibVFuTENBd0xqTXBPMXh1WEhSY2RGeDBYSFJjZEgwc1hHNWNkRngwWEhSY2RIMHBPMXh1WEhSY2RGeDBmU2s3WEc1Y2RGeDBYSFJ5WlhSMWNtNGdZV1JrTzF4dVhIUmNkSDBzWEc1Y2RGeDBaWFpsYm5Sek9pQjdYRzVjYmx4MFhIUmNkQzhxS2x4dVhIUmNkRngwSUNvZ1FXUmtJR1YyWlc1MGN5QjBieUJoSUdScFlXeHZaeUJ2WW1wbFkzUXVYRzVjZEZ4MFhIUWdLbHh1WEhSY2RGeDBJQ29nUUhKbGRIVnliaUIyYjJsa1hHNWNkRngwWEhRZ0tpOWNibHgwWEhSY2RHRmtaRG9nS0NrZ1BUNGdlMXh1WEhSY2RGeDBYSFFrS0dSbGJXOUJjSEF1WkdsaGJHOW5SV3dwTG05dUtDZGpiR2xqYXljc0lDY3VjR0ZqYTJGblpTMXBkR1Z0Snl3Z1pHVnRiMEZ3Y0M1bGRtVnVkSE11WkdWdGIwbDBaVzFUWld4bFkzUklZVzVrYkdWeUtUdGNibHgwWEhSY2RGeDBKQ2hrWlcxdlFYQndMbVJwWVd4dlowVnNLUzV2YmlnbmJXVnpjMmxoUTJoaGJtZGxSR1Z0YjBSaGRHRW5MQ0JrWlcxdlFYQndMbkpsYm1SbGNpazdYRzVjZEZ4MFhIUmNkQ1FvWkdWdGIwRndjQzVrYVdGc2IyZEZiQ2t1YjI0b0oyMWxjM05wWVVOb1lXNW5aVUZqZEdsdmJuTlRkR0YwWlNjc0lHUmxiVzlCY0hBdVlXTjBhVzl1YzFSdloyZHNaU2s3WEc1Y2RGeDBYSFI5TEZ4dVhHNWNkRngwWEhRdktpcGNibHgwWEhSY2RDQXFJRkpsYlc5MlpTQmxkbVZ1ZEhNZ1puSnZiU0JoSUdScFlXeHZaeUJ2WW1wbFkzUXVYRzVjZEZ4MFhIUWdLaUJLVVNCeVpXRnNiSGtnYzNSeVlXNW5aU0F0SUdGbWRHVnlJSEpsYlc5MmFXNW5JR1ZzWlcxbGJuUWdabkp2YlNCRVQwMWNibHgwWEhSY2RDQXFJQ2hrYVdGc2IyY2daR1Z6ZEhKdmVTa2dZVzVrSUhKbExXTnlaV0YwYVc1bklITmhiV1VnYm1WM0lHOXVaVnh1WEhSY2RGeDBJQ29nYVhRZ2MzUnBiR3dnZEhKaFkyc2diMnhrSUdWMlpXNTBjeTVjYmx4MFhIUmNkQ0FxWEc1Y2RGeDBYSFFnS2lCQWNtVjBkWEp1SUhadmFXUmNibHgwWEhSY2RDQXFMMXh1WEhSY2RGeDBjbVZ0YjNabE9pQW9LU0E5UGlCN1hHNWNkRngwWEhSY2RDUW9aR1Z0YjBGd2NDNWthV0ZzYjJkRmJDa3ViMlptS0NkamJHbGpheUJ0WlhOemFXRkRhR0Z1WjJWRVpXMXZSR0YwWVNCdFpYTnphV0ZEYUdGdVoyVkJZM1JwYjI1elUzUmhkR1VuS1R0Y2JseDBYSFJjZEgwc1hHNWNkRngwWEhRdktpcGNibHgwWEhSY2RDQXFJRWhoYm1Sc1pYSnpJR1p2Y2lCa2FXRnNiMmNnWW5WMGRHOXVjeUJsZG1WdWRITXVYRzVjZEZ4MFhIUWdLaTljYmx4MFhIUmNkR0oxZEhSdmJuTTZJSHRjYmx4dVhIUmNkRngwWEhRdktpcGNibHgwWEhSY2RGeDBJQ29nVDI0Z1kyeHZjMlVnWkdsaGJHOW5JRzlpYW1WamRDNWNibHgwWEhSY2RGeDBJQ3BjYmx4MFhIUmNkRngwSUNvZ1FISmxkSFZ5YmlCMmIybGtYRzVjZEZ4MFhIUmNkQ0FxTDF4dVhIUmNkRngwWEhSamJHOXpaVG9nWm5WdVkzUnBiMjRnS0dWMlpXNTBLU0I3WEc1Y2RGeDBYSFJjZEZ4MFpHVnRiMEZ3Y0M1bGRtVnVkSE11Y21WdGIzWmxLQ2s3WEc1Y2RGeDBYSFJjZEZ4MEpDaDBhR2x6S1M1MGNtbG5aMlZ5S0Nka2FXRnNiMmREYkc5elpXUW5MQ0JiSjJOc2IzTmxKMTBwTzF4dVhIUmNkRngwWEhSY2RDUW9kR2hwY3lrdVpHbGhiRzluS0Z3aVkyeHZjMlZjSWlrN1hHNWNkRngwWEhSY2RIMHNYRzVjYmx4MFhIUmNkRngwTHlvcVhHNWNkRngwWEhSY2RDQXFJRTl1SUhWd2JHOWhaR2x1WnlCbWFXeGxjeTVjYmx4MFhIUmNkRngwSUNwY2JseDBYSFJjZEZ4MElDb2dRSEpsZEhWeWJpQjJiMmxrWEc1Y2RGeDBYSFJjZENBcUwxeHVYSFJjZEZ4MFhIUmtaVzF2UVdSa09pQm1kVzVqZEdsdmJpQW9aWFpsYm5RcElIdGNibHh1WEhSY2RGeDBYSFJjZEdsbUlDZ2hkMmx1Wkc5M0xrWnZjbTFFWVhSaEtTQjdYRzVjZEZ4MFhIUmNkRngwWEhSaGJHVnlkQ2hOWlhOemFXRXVkR0ZpYzBSaGRHRXVabTl5YlVSaGRHRkZjbklwTzF4dVhIUmNkRngwWEhSY2RGeDBjbVYwZFhKdU8xeHVYSFJjZEZ4MFhIUmNkSDFjYmx4dVhIUmNkRngwWEhSY2RHeGxkRnh1WEhSY2RGeDBYSFJjZEZ4MFptbHNaWE5mYzJsNlpWOTBiM1JoYkNBOUlEQXNYRzVjZEZ4MFhIUmNkRngwWEhSbWFXeGxjMTl6YVhwbFgyeHZZV1JsWkNBOUlEQXNYRzVjZEZ4MFhIUmNkRngwWEhSd2NtVjJYM04wWlhBZ1BTQXdMRnh1WEhSY2RGeDBYSFJjZEZ4MGNISmxkbDlzYjJGa1pXUWdQU0F3TzF4dVhHNWNkRngwWEhSY2RGeDBZMjl1YzNSY2JseDBYSFJjZEZ4MFhIUmNkR0ZzYkc5M1pXUmZiV2x0WlY5MGVYQmxjeUE5SUUxbGMzTnBZUzUwWVdKelJHRjBZUzVrWlcxdkxtRnNiRzkzWldSTmFXMWxWSGx3WlhNc1hHNWNkRngwWEhSY2RGeDBYSFJwYm5CMWRDQTlJR1J2WTNWdFpXNTBMbU55WldGMFpVVnNaVzFsYm5Rb0oybHVjSFYwSnlrN1hHNWNibHgwWEhSY2RGeDBYSFJzWlhRZ2IyNVFjbTluY21WemN5QTlJQ2hsZG5Rc0lITjBaWEFzSUhOMFpYQnpLU0E5UGlCN1hHNWNkRngwWEhSY2RGeDBYSFJwWmlBb1pYWjBMbXhsYm1kMGFFTnZiWEIxZEdGaWJHVXBJSHRjYmx4dVhIUmNkRngwWEhSY2RGeDBYSFF2S2lwY2JseDBYSFJjZEZ4MFhIUmNkRngwSUNvZ1QyNXdjbTluY21WemN5QjBjbWxuWjJWeWN5QmxkbVZ5ZVNCMGFXMWxJSE52YldWMGFHbHVaeUIzWVhNZ2NHRnpjMlZrSUhSdklITmxjblpsY2k1Y2JseDBYSFJjZEZ4MFhIUmNkRngwSUNvZ1FuVjBJSGRsSUhObGJtUWdiWFZzZEdsd2JHVWdabWxzWlhNZ2QyaGxjbVVnWldGamFDQnZibVVnYzNCc2FYUjBaV1FnYVc1MGJ5QmphSFZ1YTNNZ2QyaHBZMmhjYmx4MFhIUmNkRngwWEhSY2RGeDBJQ29nYzJsNlpTQmtaWEJsYm1SeklHOXVJSE5sY25abGNpQnpaWFIwYVc1bmN5d2djMjhnZDJVZ1pHOGdibTkwSUd0dWIzY2djMmw2WlNCdlppQjBhR1VnWTJoMWJtc3VYRzVjZEZ4MFhIUmNkRngwWEhSY2RDQXFYRzVjZEZ4MFhIUmNkRngwWEhSY2RDQXFJRVYyWlc1MExteHZZV1JsWkNCamIyNTBZV2x1Y3lCeWRXNXVhVzVuSUhOMWJTQnZaaUJ3WVhOelpXUWdaR0YwWVNCemRHRnlkR2x1WnlCbWNtOXRJSFJvWlNCaVpXZHBibTVwYm1kY2JseDBYSFJjZEZ4MFhIUmNkRngwSUNvZ2IyWWdZMmgxYm1zZ2RISmhibk50YVhSMGFXNW5JR0Z1WkNCT1QxUWdkR2hsSUdGdGIzVnVkQ0J2WmlCa1lYUmhJSEJoYzNObFpDQnBibk5wWkdVZ2MybHVaMnhsSUhSeVlXNXpiV2wwTGx4dVhIUmNkRngwWEhSY2RGeDBYSFFnS2x4dVhIUmNkRngwWEhSY2RGeDBYSFFnS2lCVGJ5QjNhWFJvYVc0Z2MybHVaMnhsSUdOb2RXNXJJSGRsSUdoaGRtVWdkRzhnY21Wa2RXTmxJR3h2WVdSbFpDQmllU0JzYjJGa1pXUWdZWFFnY0hKbGRpQnpkR1Z3TGx4dVhIUmNkRngwWEhSY2RGeDBYSFFnS2lCUGRHaGxjbmRwYzJVZ2QyVWdkMmxzYkNCblpYUWdkR2hwY3pwY2JseDBYSFJjZEZ4MFhIUmNkRngwSUNvZ1RHVjBjeUJ6WVhrZ2RHaGxJSE5wZW1VZ2IyWWdZMmgxYm1zZ2FYTWdOVTFpTGx4dVhIUmNkRngwWEhSY2RGeDBYSFFnS2lCWFpTQmpiM1ZzWkNCblpYUWdhR1Z5WlNCc2IyRmtaV1FnWVhRZ01YTjBJSE4wWlhBZ01VMWlMQ0JoZENBeWJtUWdNMDFpTENCaGRDQXpjbVFnTlUxaUxseHVYSFJjZEZ4MFhIUmNkRngwWEhRZ0tpQkJibVFnYVdZZ2RHOGdNU3N6S3pVZ1BTQTVJQzArSUdsMElIZHBiR3dnWW1VZ2QzSnZibWNnYzNWdElHRm5ZV2x1Y3lBMVRVSXVYRzVjZEZ4MFhIUmNkRngwWEhSY2RDQXFYRzVjZEZ4MFhIUmNkRngwWEhSY2RDQXFMMXh1WEhSY2RGeDBYSFJjZEZ4MFhIUnBaaUFvY0hKbGRsOXpkR1Z3SUQwOVBTQnpkR1Z3S1NCN0x5OGdVMkZ0WlNCamFIVnVheUJoY3lCd2NtVjJMbHh1WEhSY2RGeDBYSFJjZEZ4MFhIUmNkR1pwYkdWelgzTnBlbVZmYkc5aFpHVmtJQ3M5SUdWMmRDNXNiMkZrWldRZ0xTQndjbVYyWDJ4dllXUmxaRHRjYmx4MFhIUmNkRngwWEhSY2RGeDBmU0JsYkhObElIc3ZMeUJPWlhjZ1kyaDFibXN1WEc1Y2RGeDBYSFJjZEZ4MFhIUmNkRngwWm1sc1pYTmZjMmw2WlY5c2IyRmtaV1FnS3owZ1pYWjBMbXh2WVdSbFpEdGNibHgwWEhSY2RGeDBYSFJjZEZ4MGZWeHVYRzVjZEZ4MFhIUmNkRngwWEhSY2RIQnlaWFpmYzNSbGNDQTlJSE4wWlhBN1hHNWNkRngwWEhSY2RGeDBYSFJjZEhCeVpYWmZiRzloWkdWa0lEMGdaWFowTG14dllXUmxaRHRjYmx4dVhIUmNkRngwWEhSY2RGeDBYSFJzWlhSY2JseDBYSFJjZEZ4MFhIUmNkRngwWEhSd1pYSmpaVzUwUTI5dGNHeGxkR1VnUFNCbWFXeGxjMTl6YVhwbFgyeHZZV1JsWkNBdklHWnBiR1Z6WDNOcGVtVmZkRzkwWVd3Z0tpQXhNREFzWEc1Y2RGeDBYSFJjZEZ4MFhIUmNkRngwY0hKdlozSmxjM05GYkNBOUlDUW9aR1Z0YjBGd2NDNWthV0ZzYjJkRmJDa3VabWx1WkNnbkkyUmxiVzh0ZFhCc2IyRmtMWEJ5YjJkeVpYTnpKeWt1WTNOektDZDBjbUZ1YzJsMGFXOXVKeXdnSjJKaFkydG5jbTkxYm1RdGMybDZaU0F1TTNNbktUdGNibHh1WEhSY2RGeDBYSFJjZEZ4MFhIUnBaaUFvY0dWeVkyVnVkRU52YlhCc1pYUmxJRDRnTVRBd0tTQndaWEpqWlc1MFEyOXRjR3hsZEdVZ1BTQXhNREE3WEc1Y2RGeDBYSFJjZEZ4MFhIUmNkSEJ5YjJkeVpYTnpSV3dnUFNCd2NtOW5jbVZ6YzBWc0xtTnpjeWduWW1GamEyZHliM1Z1WkMxemFYcGxKeXdnWUNSN2NHVnlZMlZ1ZEVOdmJYQnNaWFJsZlNWZ0tUdGNibHgwWEhSY2RGeDBYSFJjZEgxY2JseDBYSFJjZEZ4MFhIUjlYRzVjYmx4MFhIUmNkRngwWEhScGJuQjFkQzUwZVhCbElEMGdKMlpwYkdVbk8xeHVYSFJjZEZ4MFhIUmNkR2x1Y0hWMExtMTFiSFJwY0d4bElEMGdKM1J5ZFdVbk8xeHVYSFJjZEZ4MFhIUmNkR2x1Y0hWMExtRmpZMlZ3ZENBOUlHRnNiRzkzWldSZmJXbHRaVjkwZVhCbGN5NXRhVzFsY3k1cWIybHVLQ2NzSnlrN1hHNWNibHgwWEhSY2RGeDBYSFF2THlCSVlXNWtiR1Z5SUdadmNpQm1hV3hsS0hNcElITmxiR1ZqZEdsdmJpNWNibHgwWEhSY2RGeDBYSFFrS0dsdWNIVjBLUzV2YmlnblkyaGhibWRsSnl3Z1puVnVZM1JwYjI0Z0tDa2dlMXh1WEc1Y2RGeDBYSFJjZEZ4MFhIUnNaWFFnWm1sc1pYTldZV3hwWkNBOUlGdGRPMXh1WEc1Y2RGeDBYSFJjZEZ4MFhIUnBaaUFvSkNoMGFHbHpLUzV3Y205d0tDZG1hV3hsY3ljcExteGxibWQwYUNBK0lEQXBJSHRjYmx4dVhIUmNkRngwWEhSY2RGeDBYSFJzWlhRZ1ptbHNaWE1nUFNBa0tIUm9hWE1wTG5CeWIzQW9KMlpwYkdWekp5azdYRzVjYmx4MFhIUmNkRngwWEhSY2RGeDBabTl5SUNoc1pYUWdhU0E5SURBN0lHa2dQQ0JtYVd4bGN5NXNaVzVuZEdnN0lHa3JLeWtnZTF4dVhIUmNkRngwWEhSY2RGeDBYSFJjZEdOdmJuTjBJR1pwYkdVZ1BTQm1hV3hsYzF0cFhUdGNibHh1WEhSY2RGeDBYSFJjZEZ4MFhIUmNkQzh2SUhaaGJHbGtZWFJsSUdacGJHVWdkSGx3WlZ4dVhIUmNkRngwWEhSY2RGeDBYSFJjZEdsbUlDaGhiR3h2ZDJWa1gyMXBiV1ZmZEhsd1pYTXViV2x0WlhNdWFXNWtaWGhQWmlobWFXeGxMblI1Y0dVcElEMDlJQzB4S1NCN1hHNWNkRngwWEhSY2RGeDBYSFJjZEZ4MFhIUmpiMjV6ZENCdGMyY2dQU0JoYkd4dmQyVmtYMjFwYldWZmRIbHdaWE11ZDJGeWJtbHVaeTV5WlhCc1lXTmxLQzhsWm1sc1pWUjVjR1VsTDJkcExDQm1hV3hsTG5SNWNHVXBPMXh1WEhSY2RGeDBYSFJjZEZ4MFhIUmNkRngwSkM1bWJpNVVZV0p6VUd4MVoybHVSbkpoYldWWGIzSnJLQ2R6YUc5M1RXVnpjMkZuWlNjc0lHMXpaeXdnSjJWeWNtOXlKeWs3WEc1Y2RGeDBYSFJjZEZ4MFhIUmNkRngwWEhSeVpYUjFjbTQ3WEc1Y2RGeDBYSFJjZEZ4MFhIUmNkRngwZlZ4dVhIUmNkRngwWEhSY2RGeDBYSFJjZEdacGJHVnpYM05wZW1WZmRHOTBZV3dnUFNCbWFXeGxjMTl6YVhwbFgzUnZkR0ZzSUNzZ1ptbHNaUzV6YVhwbE8xeHVYSFJjZEZ4MFhIUmNkRngwWEhSY2RHWnBiR1Z6Vm1Gc2FXUXVjSFZ6YUNobWFXeGxLVHRjYmx4MFhIUmNkRngwWEhSY2RGeDBmVnh1WEhSY2RGeDBYSFJjZEZ4MGZWeHVYRzVjZEZ4MFhIUmNkRngwWEhSTlpYTnphV0V1WTI5dVptbHliU2hOWlhOemFXRXVkR0ZpYzBSaGRHRXVaR1Z0Ynk1amIyNW1hWEp0UkdWdGIwRmtaQ2xjYmx4MFhIUmNkRngwWEhSY2RGeDBMblJvWlc0b0tHTnZibVpwY20xbFpDa2dQVDRnZTF4dVhIUmNkRngwWEhSY2RGeDBYSFJjZEdOdmJuTjBJSFZ3Ykc5aFpITWdQU0JiWFR0Y2JseDBYSFJjZEZ4MFhIUmNkRngwWEhSbWIzSWdLR3hsZENCcElEMGdNRHNnYVNBOElHWnBiR1Z6Vm1Gc2FXUXViR1Z1WjNSb095QnBLeXNwSUh0Y2JseHVYSFJjZEZ4MFhIUmNkRngwWEhSY2RGeDBZMjl1YzNRZ1ptbHNaU0E5SUdacGJHVnpWbUZzYVdSYmFWMDdYRzVjZEZ4MFhIUmNkRngwWEhSY2RGeDBYSFJqYjI1emRDQmhZM1JwYjI0Z1BTQmtaVzF2UVhCd1hHNWNkRngwWEhSY2RGeDBYSFJjZEZ4MFhIUmNkQzVrYjBGcVlYaEVaVzF2UVdSa0tHWnBiR1VzSUc5dVVISnZaM0psYzNNcFhHNWNkRngwWEhSY2RGeDBYSFJjZEZ4MFhIUmNkQzUwYUdWdUtDaGtZWFJoS1NBOVBpQjdYRzVjYmx4MFhIUmNkRngwWEhSY2RGeDBYSFJjZEZ4MFhIUnBaaUFvWkdGMFlTNWpiMlJsSUQwOVBTQXlNREFwSUh0Y2JseDBYSFJjZEZ4MFhIUmNkRngwWEhSY2RGeDBYSFJjZENRdVptNHVWR0ZpYzFCc2RXZHBia1p5WVcxbFYyOXlheWduYzJodmQwMWxjM05oWjJVbkxDQmtZWFJoTG0xelp5d2dKM04xWTJObGMzTW5LVHRjYmx4MFhIUmNkRngwWEhSY2RGeDBYSFJjZEZ4MFhIUjlJR1ZzYzJVZ2UxeHVYSFJjZEZ4MFhIUmNkRngwWEhSY2RGeDBYSFJjZEZ4MEpDNW1iaTVVWVdKelVHeDFaMmx1Um5KaGJXVlhiM0pyS0NkemFHOTNUV1Z6YzJGblpTY3NJR1JoZEdFdWJYTm5MQ0FuWlhKeWIzSW5LVHRjYmx4MFhIUmNkRngwWEhSY2RGeDBYSFJjZEZ4MFhIUjlYRzVjZEZ4MFhIUmNkRngwWEhSY2RGeDBYSFJjZEZ4MGNtVjBkWEp1SUZCeWIyMXBjMlV1Y21WemIyeDJaU2hrWVhSaEtUdGNibHgwWEhSY2RGeDBYSFJjZEZ4MFhIUmNkRngwZlNsY2JseDBYSFJjZEZ4MFhIUmNkRngwWEhSY2RGeDBMbU5oZEdOb0tDaGxjbkp2Y2lrZ1BUNGdlMXh1WEhSY2RGeDBYSFJjZEZ4MFhIUmNkRngwWEhSY2RDUXVabTR1VkdGaWMxQnNkV2RwYmtaeVlXMWxWMjl5YXlnbmMyaHZkMDFsYzNOaFoyVW5MQ0JsY25KdmNpNXRaWE56WVdkbExDQW5aWEp5YjNJbktUdGNibHgwWEhSY2RGeDBYSFJjZEZ4MFhIUmNkRngwWEhSTlpYTnphV0ZGZUhRdWJHOW5aMlZ5TG1WeWNtOXlLR1Z5Y205eUtUdGNibHgwWEhSY2RGeDBYSFJjZEZ4MFhIUmNkRngwWEhSeVpYUjFjbTRnVUhKdmJXbHpaUzV5WldwbFkzUW9aWEp5YjNJcE8xeHVYSFJjZEZ4MFhIUmNkRngwWEhSY2RGeDBYSFI5S1R0Y2JseDBYSFJjZEZ4MFhIUmNkRngwWEhSY2RIVndiRzloWkhNdWNIVnphQ2hoWTNScGIyNHBPMXh1WEhSY2RGeDBYSFJjZEZ4MFhIUmNkSDFjYmx4dVhIUmNkRngwWEhSY2RGeDBYSFJjZEZCeWIyMXBjMlZjYmx4MFhIUmNkRngwWEhSY2RGeDBYSFJjZEM1aGJHeFRaWFIwYkdWa0tIVndiRzloWkhNcFhHNWNkRngwWEhSY2RGeDBYSFJjZEZ4MFhIUXVkR2hsYmlnb2NtVnpkV3gwY3lrZ1BUNGdlMXh1WEhSY2RGeDBYSFJjZEZ4MFhIUmNkRngwWEhRa0xtWnVMbFJoWW5OUWJIVm5hVzVHY21GdFpWZHZjbXNvSjNCc1lYbFRiM1Z1WkNjc0lEQXVNeWs3WEc1Y2RGeDBYSFJjZEZ4MFhIUmNkRngwWEhSY2RDUW9aR1Z0YjBGd2NDNWthV0ZzYjJkRmJDbGNibHgwWEhSY2RGeDBYSFJjZEZ4MFhIUmNkRngwWEhRdVptbHVaQ2duSTJSbGJXOHRkWEJzYjJGa0xYQnliMmR5WlhOekp5bGNibHgwWEhSY2RGeDBYSFJjZEZ4MFhIUmNkRngwWEhRdVkzTnpLQ2QwY21GdWMybDBhVzl1Snl3Z0p5Y3BYRzVjZEZ4MFhIUmNkRngwWEhSY2RGeDBYSFJjZEZ4MExtTnpjeWduWW1GamEyZHliM1Z1WkMxemFYcGxKeXdnSnljcE8xeHVYRzVjZEZ4MFhIUmNkRngwWEhSY2RGeDBYSFJjZEdOdmJuTjBJR1JsYlc5RVlYUmhRM1Z5Y2lBOUlHUmxiVzlCY0hBdVpHVnRiMFJoZEdFN1hHNWNkRngwWEhSY2RGeDBYSFJjZEZ4MFhIUmNkR3hsZEZ4dVhIUmNkRngwWEhSY2RGeDBYSFJjZEZ4MFhIUmNkR1oxYkdacGJHeGxaQ0E5SUdaaGJITmxMRnh1WEhSY2RGeDBYSFJjZEZ4MFhIUmNkRngwWEhSY2RHUmxiVzlFWVhSaFRtVjNJRDBnVzEwN1hHNWNibHgwWEhSY2RGeDBYSFJjZEZ4MFhIUmNkRngwWm05eUlDaHNaWFFnYVNBOUlEQTdJR2tnUENCeVpYTjFiSFJ6TG14bGJtZDBhRHNnYVNzcktTQjdYRzVjZEZ4MFhIUmNkRngwWEhSY2RGeDBYSFJjZEZ4MFkyOXVjM1FnY21WemRXeDBJRDBnY21WemRXeDBjMXRwWFR0Y2JseDBYSFJjZEZ4MFhIUmNkRngwWEhSY2RGeDBYSFJwWmlBb2NtVnpkV3gwTG5OMFlYUjFjeUFoUFQwZ0oyWjFiR1pwYkd4bFpDY3BJR052Ym5ScGJuVmxPMXh1WEhSY2RGeDBYSFJjZEZ4MFhIUmNkRngwWEhSY2RHUmxiVzlFWVhSaFRtVjNJRDBnWkdWdGIwUmhkR0ZPWlhjdVkyOXVZMkYwS0hKbGMzVnNkQzUyWVd4MVpTNWtaVzF2UkdGMFlTazdYRzVjZEZ4MFhIUmNkRngwWEhSY2RGeDBYSFJjZEZ4MFpuVnNabWxzYkdWa0lEMGdkSEoxWlR0Y2JseDBYSFJjZEZ4MFhIUmNkRngwWEhSY2RGeDBmVnh1WEhSY2RGeDBYSFJjZEZ4MFhIUmNkRngwWEhScFppQW9JV1oxYkdacGJHeGxaQ2tnY21WMGRYSnVPeUF2THlCT2J5QnZibVVnY21WeGRXVnpkQ0IzWVhNZ2MzVmpZMlZ6YzJaMWJDNWNibHgwWEhSY2RGeDBYSFJjZEZ4MFhIUmNkRngwWkdWdGIwUmhkR0ZPWlhjZ1BTQmJMaTR1Ym1WM0lGTmxkQ2hrWlcxdlJHRjBZVTVsZHlsZE8xeHVYRzVjZEZ4MFhIUmNkRngwWEhSY2RGeDBYSFJjZEdSbGJXOUJjSEF1YzJWc1pXTjBaV1FnUFNCa1pXMXZSR0YwWVU1bGR5NW1hV3gwWlhJb2VDQTlQaUFoWkdWdGIwUmhkR0ZEZFhKeUxtbHVZMngxWkdWektIZ3BLVHRjYmx4MFhIUmNkRngwWEhSY2RGeDBYSFJjZEZ4MFpHVnRiMEZ3Y0M1elpYUkVaVzF2VTNSaGRHVW9aR1Z0YjBSaGRHRk9aWGNwTzF4dVhHNWNkRngwWEhSY2RGeDBYSFJjZEZ4MFhIUmNkR1JsYlc5QmNIQXVjMlYwUVdOMGFXOXVjMU4wWVhSbGN5aDdYRzVjZEZ4MFhIUmNkRngwWEhSY2RGeDBYSFJjZEZ4MFpHVnRiMUpsYlc5MlpUb2daR1Z0YjBGd2NDNXpaV3hsWTNSbFpDNXNaVzVuZEdnZ1BpQXdMRnh1WEhSY2RGeDBYSFJjZEZ4MFhIUmNkRngwWEhSY2RHUmxiVzlKYm5OMFlXeHNPaUJrWlcxdlFYQndMbk5sYkdWamRHVmtMbXhsYm1kMGFDQTlQVDBnTVN4Y2JseDBYSFJjZEZ4MFhIUmNkRngwWEhSY2RGeDBmU2s3WEc1Y2RGeDBYSFJjZEZ4MFhIUmNkRngwWEhSOUtUdGNibHgwWEhSY2RGeDBYSFJjZEZ4MGZTazdYRzVjZEZ4MFhIUmNkRngwZlNrN1hHNWNkRngwWEhSY2RGeDBhVzV3ZFhRdVkyeHBZMnNvS1R0Y2JseDBYSFJjZEZ4MGZTeGNibHh1WEhSY2RGeDBYSFF2S2lwY2JseDBYSFJjZEZ4MElDb2dUMjRnWkdWc1pYUnBibWNnWkdWdGJ5QndZV05yWVdkbGN5NWNibHgwWEhSY2RGeDBJQ3BjYmx4MFhIUmNkRngwSUNvZ1FISmxkSFZ5YmlCMmIybGtYRzVjZEZ4MFhIUmNkQ0FxTDF4dVhIUmNkRngwWEhSa1pXMXZVbVZ0YjNabE9pQm1kVzVqZEdsdmJpQW9aWFpsYm5RcElIdGNibHh1WEhSY2RGeDBYSFJjZEdsbUlDZ2haR1Z0YjBGd2NDNXBjMEZqZEdsdmJrRnNiRzkzWldRb0oyUmxiVzlTWlcxdmRtVW5LU2tnZTF4dVhIUmNkRngwWEhSY2RGeDBjbVYwZFhKdU8xeHVYSFJjZEZ4MFhIUmNkSDFjYmx4dVhIUmNkRngwWEhSY2RFMWxjM05wWVM1amIyNW1hWEp0S0UxbGMzTnBZUzUwWVdKelJHRjBZUzVrWlcxdkxtTnZibVpwY20xRVpXMXZVbVZ0YjNabEtWeHVYSFJjZEZ4MFhIUmNkRngwTG5Sb1pXNG9LR052Ym1acGNtMWxaQ2tnUFQ0Z2UxeHVYSFJjZEZ4MFhIUmNkRngwWEhRa0tIUm9hWE1wTG1acGJtUW9KeTV6Wld4bFkzUmxaQ2NwTG1Ga1pFTnNZWE56S0NkcGN5MWlkWE41SnlrN1hHNWNkRngwWEhSY2RGeDBYSFJjZEdSbGJXOUJjSEJjYmx4MFhIUmNkRngwWEhSY2RGeDBYSFF1Wkc5QmFtRjRSR1Z0YjFKbGJXOTJaU2hrWlcxdlFYQndMbk5sYkdWamRHVmtLVnh1WEhSY2RGeDBYSFJjZEZ4MFhIUmNkQzUwYUdWdUtDaGtZWFJoS1NBOVBpQjdYRzVjZEZ4MFhIUmNkRngwWEhSY2RGeDBYSFJrWlcxdlFYQndMbk5sYkdWamRHVmtJRDBnVzEwN1hHNWNkRngwWEhSY2RGeDBYSFJjZEZ4MFhIUmtaVzF2UVhCd0xuTmxkRVJsYlc5VGRHRjBaU2hrWVhSaExtUmxiVzlFWVhSaEtUdGNibHh1WEhSY2RGeDBYSFJjZEZ4MFhIUmNkRngwWkdWdGIwRndjQzV6WlhSQlkzUnBiMjV6VTNSaGRHVnpLSHRjYmx4MFhIUmNkRngwWEhSY2RGeDBYSFJjZEZ4MFpHVnRiMUpsYlc5MlpUb2daR1Z0YjBGd2NDNXpaV3hsWTNSbFpDNXNaVzVuZEdnZ1BpQXdMRnh1WEhSY2RGeDBYSFJjZEZ4MFhIUmNkRngwWEhSa1pXMXZTVzV6ZEdGc2JEb2daR1Z0YjBGd2NDNXpaV3hsWTNSbFpDNXNaVzVuZEdnZ1BUMDlJREVzWEc1Y2RGeDBYSFJjZEZ4MFhIUmNkRngwWEhSOUtUdGNibHh1WEhSY2RGeDBYSFJjZEZ4MFhIUmNkRngwYVdZZ0tHUmhkR0V1WTI5a1pTQTlQVDBnTWpBd0tTQjdYRzVjZEZ4MFhIUmNkRngwWEhSY2RGeDBYSFJjZENRdVptNHVWR0ZpYzFCc2RXZHBia1p5WVcxbFYyOXlheWduYzJodmQwMWxjM05oWjJVbkxDQmtZWFJoTG0xelp5d2dKM04xWTJObGMzTW5LVHRjYmx4MFhIUmNkRngwWEhSY2RGeDBYSFJjZEgwZ1pXeHpaU0I3WEc1Y2RGeDBYSFJjZEZ4MFhIUmNkRngwWEhSY2RDUXVabTR1VkdGaWMxQnNkV2RwYmtaeVlXMWxWMjl5YXlnbmMyaHZkMDFsYzNOaFoyVW5MQ0JrWVhSaExtMXpaeXdnSjJWeWNtOXlKeWs3WEc1Y2RGeDBYSFJjZEZ4MFhIUmNkRngwWEhSOVhHNWNkRngwWEhSY2RGeDBYSFJjZEZ4MGZTbGNibHgwWEhSY2RGeDBYSFJjZEZ4MFhIUXVZMkYwWTJnb0tHVnljbTl5S1NBOVBpQjdYRzVjZEZ4MFhIUmNkRngwWEhSY2RGeDBYSFFrTG1adUxsUmhZbk5RYkhWbmFXNUdjbUZ0WlZkdmNtc29KM05vYjNkTlpYTnpZV2RsSnl3Z1pYSnliM0l1YldWemMyRm5aU3dnSjJWeWNtOXlKeWs3WEc1Y2RGeDBYSFJjZEZ4MFhIUmNkRngwWEhSTlpYTnphV0ZGZUhRdWJHOW5aMlZ5TG1WeWNtOXlLR1Z5Y205eUtUdGNibHgwWEhSY2RGeDBYSFJjZEZ4MFhIUjlLVnh1WEhSY2RGeDBYSFJjZEZ4MFhIUmNkQzVtYVc1aGJHeDVLQ2dwSUQwK0lIdGNibHgwWEhSY2RGeDBYSFJjZEZ4MFhIUmNkQ1FvZEdocGN5a3VabWx1WkNnbkxuTmxiR1ZqZEdWa0p5a3VjbVZ0YjNabFEyeGhjM01vSjJsekxXSjFjM2tuS1R0Y2JseDBYSFJjZEZ4MFhIUmNkRngwWEhSOUtUczdYRzVjZEZ4MFhIUmNkRngwWEhSOUtUdGNibHgwWEhSY2RGeDBmU3hjYmx4dVhIUmNkRngwWEhRdktpcGNibHgwWEhSY2RGeDBJQ29nVDI0Z1kyeHBZMnNnZEc4Z2FXNXpkR0ZzYkNCa1pXMXZJSEJoWTJ0aFoyVXVYRzVjZEZ4MFhIUmNkQ0FxWEc1Y2RGeDBYSFJjZENBcUlFQnlaWFIxY200Z2RtOXBaRnh1WEhSY2RGeDBYSFFnS2k5Y2JseDBYSFJjZEZ4MFpHVnRiMGx1YzNSaGJHdzZJR1oxYm1OMGFXOXVJQ2hsZG1WdWRDa2dlMXh1WEc1Y2RGeDBYSFJjZEZ4MGFXWWdLQ0ZrWlcxdlFYQndMbWx6UVdOMGFXOXVRV3hzYjNkbFpDZ25aR1Z0YjBsdWMzUmhiR3duS1NrZ2UxeHVYSFJjZEZ4MFhIUmNkRngwY21WMGRYSnVPMXh1WEhSY2RGeDBYSFJjZEgxY2JseHVYSFJjZEZ4MFhIUmNkRTFsYzNOcFlTNWpiMjVtYVhKdEtFMWxjM05wWVM1MFlXSnpSR0YwWVM1a1pXMXZMbU52Ym1acGNtMUVaVzF2U1c1emRHRnNiQ2xjYmx4MFhIUmNkRngwWEhSY2RDNTBhR1Z1S0NoamIyNW1hWEp0WldRcElEMCtJSHRjYmx4dVhIUmNkRngwWEhSY2RGeDBYSFFrS0hSb2FYTXBMbVpwYm1Rb0p5NXpaV3hsWTNSbFpDY3BMbUZrWkVOc1lYTnpLQ2RwY3kxaWRYTjVKeWs3WEc1Y2RGeDBYSFJjZEZ4MFhIUmNkR1JsYlc5QmNIQmNibHgwWEhSY2RGeDBYSFJjZEZ4MFhIUXVaRzlCYW1GNFJHVnRiMGx1YzNSaGJHd29aR1Z0YjBGd2NDNXpaV3hsWTNSbFpGc3dYU2xjYmx4MFhIUmNkRngwWEhSY2RGeDBYSFF1ZEdobGJpZ29aR0YwWVNrZ1BUNGdlMXh1WEhSY2RGeDBYSFJjZEZ4MFhIUmNkRngwYVdZZ0tHUmhkR0V1WTI5a1pTQTlQVDBnTWpBd0tTQjdYRzVjZEZ4MFhIUmNkRngwWEhSY2RGeDBYSFJjZENRdVptNHVWR0ZpYzFCc2RXZHBia1p5WVcxbFYyOXlheWduYzJodmQwMWxjM05oWjJVbkxDQmtZWFJoTG0xelp5d2dKM04xWTJObGMzTW5LVHRjYmx4MFhIUmNkRngwWEhSY2RGeDBYSFJjZEgwZ1pXeHpaU0I3WEc1Y2RGeDBYSFJjZEZ4MFhIUmNkRngwWEhSY2RDUXVabTR1VkdGaWMxQnNkV2RwYmtaeVlXMWxWMjl5YXlnbmMyaHZkMDFsYzNOaFoyVW5MQ0JrWVhSaExtMXpaeXdnSjJWeWNtOXlKeWs3WEc1Y2RGeDBYSFJjZEZ4MFhIUmNkRngwWEhSOVhHNWNibHgwWEhSY2RGeDBYSFJjZEZ4MFhIUmNkR2xtSUNoa1lYUmhMbkpsYkc5aFpDQTlQVDBnZEhKMVpTa2dlMXh1WEhSY2RGeDBYSFJjZEZ4MFhIUmNkRngwWEhSM2FXNWtiM2N1Ykc5allYUnBiMjR1Y21Wc2IyRmtLQ2s3WEc1Y2RGeDBYSFJjZEZ4MFhIUmNkRngwWEhSOVhHNWNkRngwWEhSY2RGeDBYSFJjZEZ4MGZTbGNibHgwWEhSY2RGeDBYSFJjZEZ4MFhIUXVZMkYwWTJnb0tHVnljbTl5S1NBOVBpQjdYRzVjZEZ4MFhIUmNkRngwWEhSY2RGeDBYSFFrTG1adUxsUmhZbk5RYkhWbmFXNUdjbUZ0WlZkdmNtc29KM05vYjNkTlpYTnpZV2RsSnl3Z1pYSnliM0l1YldWemMyRm5aU3dnSjJWeWNtOXlKeWs3WEc1Y2RGeDBYSFJjZEZ4MFhIUmNkRngwWEhSTlpYTnphV0ZGZUhRdWJHOW5aMlZ5TG1WeWNtOXlLR1Z5Y205eUtUdGNibHgwWEhSY2RGeDBYSFJjZEZ4MFhIUjlLVnh1WEhSY2RGeDBYSFJjZEZ4MFhIUmNkQzVtYVc1aGJHeDVLQ2dwSUQwK0lIdGNibHgwWEhSY2RGeDBYSFJjZEZ4MFhIUmNkQ1FvZEdocGN5a3VabWx1WkNnbkxuTmxiR1ZqZEdWa0p5a3VjbVZ0YjNabFEyeGhjM01vSjJsekxXSjFjM2tuS1R0Y2JseDBYSFJjZEZ4MFhIUmNkRngwWEhSOUtUczdYRzVjZEZ4MFhIUmNkRngwWEhSOUtWeHVYSFJjZEZ4MFhIUjlMRnh1WEhSY2RGeDBmU3hjYmx4dVhIUmNkRngwTHlvcVhHNWNkRngwWEhRZ0tpQklZVzVrYkdWeWN5Qm1iM0lnWTJ4cFkyc2diMjRnWkdWdGJ5QnBkR1Z0TGx4dVhIUmNkRngwSUNwY2JseDBYSFJjZENBcUlFQnlaWFIxY200Z2RtOXBaRnh1WEhSY2RGeDBJQ292WEc1Y2RGeDBYSFJrWlcxdlNYUmxiVk5sYkdWamRFaGhibVJzWlhJNklHWjFibU4wYVc5dUlHNWhiV1VvWlhabGJuUXBJSHRjYmx4dVhIUmNkRngwWEhScFppQW9aR1Z0YjE5NGFISmZhVzV6ZEdGc2JDQWhQVDBnYm5Wc2JDa2dlMXh1WEhSY2RGeDBYSFJjZEhKbGRIVnlianRjYmx4MFhIUmNkRngwZlZ4dVhIUmNkRngwWEhSc1pYUWdhWFJsYlhNZ1BTQWtLSFJvYVhNcExuQmhjbVZ1ZEhNb0p5NWtaVzF2TFhCaFkydGhaMlV0YVhSbGJYTW5LVHRjYmx4dVhIUmNkRngwWEhRa0tIUm9hWE1wTG5SdloyZHNaVU5zWVhOektDZHpaV3hsWTNSbFpDY3BPMXh1WEhSY2RGeDBYSFJzWlhRZ2MyVnNaV04wWldRZ1BTQnBkR1Z0Y3k1bWFXNWtLQ2R6Wld4bFkzUmxaQ2NwTzF4dVhHNWNkRngwWEhSY2RHeGxkQ0J6Wld4bFkzUmxaRU4xY25JZ1BTQmtaVzF2UVhCd0xtUmxiVzlFWVhSaE8xeHVYSFJjZEZ4MFhIUnNaWFFnYzJWc1pXTjBaV1JPWlhjZ1BTQnBkR1Z0Y3k1bWFXNWtLQ2N1YzJWc1pXTjBaV1FuS1R0Y2JseHVYSFJjZEZ4MFhIUnBaaUFvU2xOUFRpNXpkSEpwYm1kcFpua29jMlZzWldOMFpXUkRkWEp5S1NBaFBUMGdTbE5QVGk1emRISnBibWRwWm5rb2MyVnNaV04wWldST1pYY3BLU0I3WEc1Y2JseDBYSFJjZEZ4MFhIUmtaVzF2UVhCd0xuTmxiR1ZqZEdWa0lEMGdjMlZzWldOMFpXUk9aWGN1ZEc5QmNuSmhlU2dwTG0xaGNDZ29aV3hsYldWdWRDd2dhVzVrWlhncElEMCtJR1ZzWlcxbGJuUXVhV1FwTzF4dVhHNWNkRngwWEhSY2RGeDBaR1Z0YjBGd2NDNXpaWFJCWTNScGIyNXpVM1JoZEdWektIdGNibHgwWEhSY2RGeDBYSFJjZEdSbGJXOVNaVzF2ZG1VNklHUmxiVzlCY0hBdWMyVnNaV04wWldRdWJHVnVaM1JvSUQ0Z01DeGNibHgwWEhSY2RGeDBYSFJjZEdSbGJXOUpibk4wWVd4c09pQmtaVzF2UVhCd0xuTmxiR1ZqZEdWa0xteGxibWQwYUNBOVBUMGdNU3hjYmx4MFhIUmNkRngwWEhSOUtUdGNibHgwWEhSY2RGeDBmVnh1WEhSY2RGeDBmU3hjYmx4MFhIUjlMRnh1WEhSY2RITmxkRVJsYlc5VGRHRjBaVG9nS0dSbGJXOUVZWFJoS1NBOVBpQjdYRzVjYmx4MFhIUmNkR052Ym5OMFhHNWNkRngwWEhSY2RHUmxiVzlFWVhSaFEzVnljaUE5SUdSbGJXOUJjSEF1WkdWdGIwUmhkR0VzWEc1Y2RGeDBYSFJjZEdSbGJXOUVZWFJoVG1WM0lEMGdaR1Z0YjBSaGRHRTdYRzVjYmx4MFhIUmNkR2xtSUNoS1UwOU9Mbk4wY21sdVoybG1lU2hrWlcxdlJHRjBZVU4xY25JcElDRTlQU0JLVTA5T0xuTjBjbWx1WjJsbWVTaGtaVzF2UkdGMFlVNWxkeWtwSUh0Y2JseDBYSFJjZEZ4MFpHVnRiMEZ3Y0M1a1pXMXZSR0YwWVNBOUlHUmxiVzlFWVhSaE8xeHVYSFJjZEZ4MFhIUWtLR1JsYlc5QmNIQXVaR2xoYkc5blJXd3BMblJ5YVdkblpYSW9KMjFsYzNOcFlVTm9ZVzVuWlVSbGJXOUVZWFJoSnlrN1hHNWNkRngwWEhSOVhHNWNkRngwZlN4Y2JseDBYSFIxY0dSaGRHVkVaVzF2VTNSaGRHVTZJQ2h6YVd4bGJuUWdQU0IwY25WbEtTQTlQaUI3WEc1Y2JseDBYSFJjZEhKbGRIVnliaUJrWlcxdlFYQndMbVJ2UVdwaGVFUmxiVzlIWlhSTWFYTjBLQ2xjYmx4MFhIUmNkRngwTG5Sb1pXNG9LR1JoZEdFcElEMCtJSHRjYmx4MFhIUmNkRngwWEhSamIyNXpkRnh1WEhSY2RGeDBYSFJjZEZ4MFpHVnRiMFJoZEdGRGRYSnlJRDBnWkdWdGIwRndjQzVrWlcxdlJHRjBZU3hjYmx4MFhIUmNkRngwWEhSY2RHeHBZMlZ1WTJWQlkzUnBkbVZEZFhKeUlEMGdaR1Z0YjBGd2NDNTBhR1Z0WlV4cFkyVnVZMlZCWTNScGRtVXNYRzVjZEZ4MFhIUmNkRngwWEhSa1pXMXZSR0YwWVU1bGR5QTlJR1JoZEdFdVpHVnRiMFJoZEdFc1hHNWNkRngwWEhSY2RGeDBYSFJzYVdObGJtTmxRV04wYVhabFRtVjNJRDBnWkdGMFlTNTBhR1Z0WlV4cFkyVnVZMlZCWTNScGRtVXNYRzVjZEZ4MFhIUmNkRngwWEhSbmIwOXVJRDBnU2xOUFRpNXpkSEpwYm1kcFpua29aR1Z0YjBSaGRHRkRkWEp5S1NBaFBUMGdTbE5QVGk1emRISnBibWRwWm5rb1pHVnRiMFJoZEdGT1pYY3BJSHg4SUd4cFkyVnVZMlZCWTNScGRtVkRkWEp5SUNFOVBTQnNhV05sYm1ObFFXTjBhWFpsVG1WM08xeHVYRzVjZEZ4MFhIUmNkRngwWkdWdGIwRndjQzV6WlhSQlkzUnBiMjV6VTNSaGRHVnpLSHRjYmx4MFhIUmNkRngwWEhSY2RHUmxiVzlCWkdRNklHeHBZMlZ1WTJWQlkzUnBkbVZPWlhjZ1BUMDlJSFJ5ZFdVc1hHNWNkRngwWEhSY2RGeDBmU2s3WEc1Y2JseDBYSFJjZEZ4MFhIUnBaaUFvWjI5UGJpa2dlMXh1WEc1Y2RGeDBYSFJjZEZ4MFhIUmtaVzF2UVhCd0xtUmxiVzlFWVhSaElEMGdaR0YwWVM1a1pXMXZSR0YwWVR0Y2JseDBYSFJjZEZ4MFhIUmNkR1JsYlc5QmNIQXVkR2hsYldWTWFXTmxibU5sUVdOMGFYWmxJRDBnWkdGMFlTNTBhR1Z0WlV4cFkyVnVZMlZCWTNScGRtVTdYRzVjZEZ4MFhIUmNkRngwWEhRa0tHUmxiVzlCY0hBdVpHbGhiRzluUld3cExuUnlhV2RuWlhJb0oyMWxjM05wWVVOb1lXNW5aVVJsYlc5RVlYUmhKeWs3WEc1Y2JseDBYSFJjZEZ4MFhIUmNkR2xtSUNnaGMybHNaVzUwS1NCN1hHNWNkRngwWEhSY2RGeDBYSFJjZEdsbUlDaGtZWFJoTG1OdlpHVWdQVDA5SURJd01Da2dlMXh1WEhSY2RGeDBYSFJjZEZ4MFhIUmNkQ1F1Wm00dVZHRmljMUJzZFdkcGJrWnlZVzFsVjI5eWF5Z25jMmh2ZDAxbGMzTmhaMlVuTENCa1lYUmhMbTF6Wnl3Z0ozTjFZMk5sYzNNbktUdGNibHgwWEhSY2RGeDBYSFJjZEZ4MGZTQmxiSE5sSUh0Y2JseDBYSFJjZEZ4MFhIUmNkRngwWEhRa0xtWnVMbFJoWW5OUWJIVm5hVzVHY21GdFpWZHZjbXNvSjNOb2IzZE5aWE56WVdkbEp5d2daR0YwWVM1dGMyY3NJQ2RsY25KdmNpY3BPMXh1WEhSY2RGeDBYSFJjZEZ4MFhIUjlYRzVjZEZ4MFhIUmNkRngwWEhSY2RDUXVabTR1VkdGaWMxQnNkV2RwYmtaeVlXMWxWMjl5YXlnbmNHeGhlVk52ZFc1a0p5d2dNQzR6S1R0Y2JseDBYSFJjZEZ4MFhIUmNkSDFjYmx4MFhIUmNkRngwWEhSOVhHNWNkRngwWEhSY2RIMHBYRzVjZEZ4MFhIUmNkQzVqWVhSamFDZ29aWEp5YjNJcElEMCtJSHRjYmx4MFhIUmNkRngwWEhRa0xtWnVMbFJoWW5OUWJIVm5hVzVHY21GdFpWZHZjbXNvSjNOb2IzZE5aWE56WVdkbEp5d2daWEp5YjNJdWJXVnpjMkZuWlN3Z0oyVnljbTl5SnlrN1hHNWNkRngwWEhSY2RGeDBUV1Z6YzJsaFJYaDBMbXh2WjJkbGNpNWxjbkp2Y2lobGNuSnZjaWs3WEc1Y2RGeDBYSFJjZEgwcFhHNWNkRngwWEhSY2RDNW1hVzVoYkd4NUtDZ3BJRDArSUZCeWIyMXBjMlV1Y21WemIyeDJaU2duY21WbWNtVnphR1ZrSnlrcE8xeHVYSFJjZEgwc1hHNWNkRngwYzJWMFFXTjBhVzl1YzFOMFlYUmxjem9nS0hOMFlYUmxjeWtnUFQ0Z2UxeHVYSFJjZEZ4MGJHVjBJSE4wWVhSbFEzVnljaUE5SUdSbGJXOUJjSEF1WVdOMGFXOXVjMU4wWVhSbE8xeHVYSFJjZEZ4MGJHVjBJSE4wWVhSbFRtVjNJRDBnVDJKcVpXTjBMbUZ6YzJsbmJpaDdmU3dnYzNSaGRHVkRkWEp5TENCemRHRjBaWE1wTzF4dVhHNWNkRngwWEhScFppQW9KM1Z1WkdWbWFXNWxaQ2NnSVQwOUlITjBZWFJsYzFzblpHVnRiMGx1YzNSaGJHd25YU0FtSmlCemRHRjBaWE5iSjJSbGJXOUpibk4wWVd4c0oxMGdQVDA5SUhSeWRXVWdKaVlnWkdWdGIxOTRhSEpmYVc1emRHRnNiQ0FoUFQwZ2JuVnNiQ2tnZTF4dVhIUmNkRngwWEhSemRHRjBaVTVsZDFzblpHVnRiMGx1YzNSaGJHd25YU0E5SUdaaGJITmxPMXh1WEhSY2RGeDBmVnh1WEc1Y2RGeDBYSFJwWmlBb1NsTlBUaTV6ZEhKcGJtZHBabmtvYzNSaGRHVkRkWEp5S1NBaFBUMGdTbE5QVGk1emRISnBibWRwWm5rb2MzUmhkR1ZPWlhjcEtTQjdYRzVjYmx4MFhIUmNkRngwWkdWdGIwRndjQzVoWTNScGIyNXpVM1JoZEdVZ1BTQnpkR0YwWlU1bGR6dGNibHgwWEhSY2RGeDBKQ2hrWlcxdlFYQndMbVJwWVd4dlowVnNLUzUwY21sbloyVnlLQ2R0WlhOemFXRkRhR0Z1WjJWQlkzUnBiMjV6VTNSaGRHVW5LVHRjYmx4MFhIUmNkSDFjYmx4MFhIUjlMRnh1WEhSY2RHbHpRV04wYVc5dVFXeHNiM2RsWkRvZ0tHRmpkR2x2YmlrZ1BUNGdlMXh1WEhSY2RGeDBjbVYwZFhKdUlHUmxiVzlCY0hBdVlXTjBhVzl1YzFOMFlYUmxXMkZqZEdsdmJsMDdYRzVjZEZ4MGZTeGNibHgwZlR0Y2JseHVYSFFrS0NjdWQzSmhjQ0FqYVc1emRHRnNiQzFrWlcxdkp5a3ViMjRvSjJOc2FXTnJKeXdnWkdWdGIwRndjQzVwYm1sMEtUdGNibjA3SWl3aUtHWjFibU4wYVc5dUlDZ2tLU0I3WEc1Y2RDUW9ablZ1WTNScGIyNGdLQ2tnZTF4dVhHNWNkRngwZG1GeUlIaG9jaUE5SUc1MWJHdzdYRzVjYmx4MFhIUWtMbVp1TGxSaFluTlFiSFZuYVc1R2NtRnRaVmR2Y21zZ1BTQm1kVzVqZEdsdmJpQW9iV1YwYUc5a0tTQjdYRzVjYmx4MFhIUmNkR2xtSUNoVVlXSnpVR3gxWjJsdVJuSmhiV1ZYYjNKclRXVjBhRzlrYzF0dFpYUm9iMlJkS1NCN1hHNWNkRngwWEhSY2RISmxkSFZ5YmlCVVlXSnpVR3gxWjJsdVJuSmhiV1ZYYjNKclRXVjBhRzlrYzF0dFpYUm9iMlJkTG1Gd2NHeDVLSFJvYVhNc0lFRnljbUY1TG5CeWIzUnZkSGx3WlM1emJHbGpaUzVqWVd4c0tHRnlaM1Z0Wlc1MGN5d2dNU2twTzF4dVhIUmNkRngwZlZ4dVhIUmNkRngwWld4elpTQnBaaUFvZEhsd1pXOW1JRzFsZEdodlpDQTlQVDBnSjI5aWFtVmpkQ2NnZkh3Z0lXMWxkR2h2WkNrZ2UxeHVYSFJjZEZ4MFhIUWtMbVZ5Y205eUtDZEJjbWQxYldWdWRDQmNJazFsZEdodlpGd2lJSEpsY1hWcGNtVmtJR1p2Y2lCcVVYVmxjbmt1VkdGaWMxQnNkV2RwYmtaeVlXMWxWMjl5YXljcE8xeHVYSFJjZEZ4MGZWeHVYSFJjZEZ4MFpXeHpaU0I3WEc1Y2RGeDBYSFJjZENRdVpYSnliM0lvSjAxbGRHaHZaQ0FuSUNzZ2JXVjBhRzlrSUNzZ0p5QmtiMlZ6SUc1dmRDQmxlR2x6ZENCbWIzSWdhbEYxWlhKNUxsUmhZbk5RYkhWbmFXNUdjbUZ0WlZkdmNtc25LVHRjYmx4MFhIUmNkSDFjYmx4MFhIUjlYRzVjYmx4MFhIUmpiMjV6ZENCVVlXSnpVR3gxWjJsdVJuSmhiV1ZYYjNKclRXVjBhRzlrY3lBOUlIdGNibHh1WEhSY2RGeDBjMmh2ZDAxbGMzTmhaMlU2SUdaMWJtTjBhVzl1SUNoa1lYUmhMQ0IwZVhCbExDQmpZWEIwYVc5dUlEMGdKMDV2ZEdsbWFXTmhkR2x2YmljcElIdGNibHh1WEhSY2RGeDBYSFIyWVhJZ1lYQndaVzVrWDJOdmJuUmxiblFnUFNBbkp6dGNibHh1WEhSY2RGeDBYSFJwWmlBb0oyOWlhbVZqZENjZ1BUMDlJSFI1Y0dWdlppQmtZWFJoS1NCN1hHNWNkRngwWEhSY2RGeDBabTl5SUNoMllYSWdhMlY1SUdsdUlHUmhkR0VwSUh0Y2JseDBYSFJjZEZ4MFhIUmNkR0Z3Y0dWdVpGOWpiMjUwWlc1MElEMGdZWEJ3Wlc1a1gyTnZiblJsYm5RZ0t5QW5QR1JwZGo0bklDc2dhMlY1SUNzZ1hDSTZJRndpSUNzZ1pHRjBZVnRyWlhsZElDc2dKend2WkdsMlBpYzdYRzVjZEZ4MFhIUmNkRngwZlZ4dVhIUmNkRngwWEhSOVhHNWNkRngwWEhSY2RHVnNjMlVnYVdZZ0tDZGxjbkp2Y2ljZ1BUMDlJSFI1Y0dWdlppQmtZWFJoS1NCN1hHNWNkRngwWEhSY2RGeDBZWEJ3Wlc1a1gyTnZiblJsYm5RZ1BTQmhjSEJsYm1SZlkyOXVkR1Z1ZENBcklDYzhaR2wyUGljZ0t5QmtZWFJoTG5SdlUzUnlhVzVuS0NrZ0t5QW5QQzlrYVhZK0p6dGNibHgwWEhSY2RGeDBmVnh1WEhSY2RGeDBYSFJsYkhObElHbG1JQ2duWVhKeVlYa25JRDA5UFNCMGVYQmxiMllnWkdGMFlTa2dlMXh1WEhSY2RGeDBYSFJjZEdadmNpQW9kbUZ5SUdrZ1BTQXdPeUJwSUR3Z1pHRjBZUzVzWlc1bmRHZzdJR2tyS3lrZ2UxeHVYSFJjZEZ4MFhIUmNkRngwWVhCd1pXNWtYMk52Ym5SbGJuUWdQU0JoY0hCbGJtUmZZMjl1ZEdWdWRDQXJJQ2M4WkdsMlBpY2dLeUJrWVhSaFcybGRJQ3NnSnp3dlpHbDJQaWM3WEc1Y2RGeDBYSFJjZEZ4MGZWeHVYSFJjZEZ4MFhIUjlYRzVjZEZ4MFhIUmNkR1ZzYzJVZ2FXWWdLQ2R6ZEhKcGJtY25JRDA5UFNCMGVYQmxiMllnWkdGMFlTa2dlMXh1WEhSY2RGeDBYSFJjZEdGd2NHVnVaRjlqYjI1MFpXNTBJRDBnSnp4a2FYWStKeUFySUdSaGRHRWdLeUFuUEM5a2FYWStKenRjYmx4MFhIUmNkRngwZlZ4dVhIUmNkRngwWEhSbGJITmxJSHRjYmx4MFhIUmNkRngwWEhSeVpYUjFjbTQ3WEc1Y2RGeDBYSFJjZEgxY2JseHVYSFJjZEZ4MFhIUjJZWElnY21sbmFIUWdQU0IxYm1SbFptbHVaV1E3WEc1Y2RGeDBYSFJjZEhaaGNpQmliM1IwYjIwZ1BTQjFibVJsWm1sdVpXUTdYRzVjZEZ4MFhIUmNkSFpoY2lCaFkzUnBkbVZmYldWemMyRm5aWE1nUFNBa0tDY3ViV1Z6YzJGblpTMTNjbUZ3Y0dWeUp5azdYRzVjZEZ4MFhIUmNkSFpoY2lCdFpYTnpZV2RsSUQwZ0pDaGdQR1JwZGlCamJHRnpjejFjSW0xbGMzTmhaMlV0ZDNKaGNIQmxjbHdpSUhOMGVXeGxQVndpWkdsemNHeGhlVG9nYm05dVpUdGNJajVjYmx4MFhIUmNkRngwWEhSY2RGeDBYSFJjZER4a2FYWWdZMnhoYzNNOVhDSnRaVzUxTFhCaFoyVXRiV1Z6YzJGblpTQnlZeTBrZTNSNWNHVjlYQ0krWEc1Y2RGeDBYSFJjZEZ4MFhIUmNkRngwWEhSY2REeGthWFlnWTJ4aGMzTTlYQ0p0Wlc1MUxXbHVibVZ5WENJK1hHNWNkRngwWEhSY2RGeDBYSFJjZEZ4MFhIUmNkRngwUEdScGRpQmpiR0Z6Y3oxY0ltMWxiblV0YjNCbGNtRjBaVndpUGx4dVhIUmNkRngwWEhSY2RGeDBYSFJjZEZ4MFhIUmNkRngwUEdScGRpQmpiR0Z6Y3oxY0ltTmhjSFJwYjI1Y0lqNGtlMk5oY0hScGIyNTlQQzlrYVhZK1hHNWNkRngwWEhSY2RGeDBYSFJjZEZ4MFhIUmNkRngwWEhROFpHbDJJR05zWVhOelBWd2lZMnh2YzJWY0lqNDhMMlJwZGo1Y2JseDBYSFJjZEZ4MFhIUmNkRngwWEhSY2RGeDBYSFE4TDJScGRqNWNibHgwWEhSY2RGeDBYSFJjZEZ4MFhIUmNkRngwWEhROFpHbDJJR05zWVhOelBWd2lZMjl1ZEdWdWRGd2lQaVI3WVhCd1pXNWtYMk52Ym5SbGJuUjlQQzlrYVhZK1hHNWNkRngwWEhSY2RGeDBYSFJjZEZ4MFhIUmNkRHd2WkdsMlBseHVYSFJjZEZ4MFhIUmNkRngwWEhSY2RGeDBQQzlrYVhZK1hHNWNkRngwWEhSY2RGeDBYSFJjZEZ4MFBDOWthWFkrWUNrN1hHNWNibHgwWEhSY2RGeDBhV1lnS0dGamRHbDJaVjl0WlhOellXZGxjeTVzWlc1bmRHZ2dQVDA5SURBcElIdGNibHgwWEhSY2RGeDBYSFJ0WlhOellXZGxJRDBnYldWemMyRm5aUzVoY0hCbGJtUlVieWduWW05a2VTY3BPMXh1WEhSY2RGeDBYSFI5WEc1Y2RGeDBYSFJjZEdWc2MyVWdlMXh1WEc1Y2RGeDBYSFJjZEZ4MGRtRnlJR05zYjNObGMzUmZiV1Z6YzJGblpTQTlJR0ZqZEdsMlpWOXRaWE56WVdkbGN5NXNZWE4wS0NrN1hHNWNkRngwWEhSY2RGeDBiV1Z6YzJGblpTQTlJRzFsYzNOaFoyVXVhVzV6WlhKMFFXWjBaWElvWTJ4dmMyVnpkRjl0WlhOellXZGxLVHRjYmx4MFhIUmNkRngwWEhSaWIzUjBiMjBnUFNCd1lYSnpaVWx1ZENoamJHOXpaWE4wWDIxbGMzTmhaMlV1WTNOektDZGliM1IwYjIwbktTa2dLeUEwTzF4dVhIUmNkRngwWEhSY2RISnBaMmgwSUQwZ2NHRnljMlZKYm5Rb1kyeHZjMlZ6ZEY5dFpYTnpZV2RsTG1OemN5Z25jbWxuYUhRbktTa2dLeUEwTzF4dVhIUmNkRngwWEhSOVhHNWNibHgwWEhSY2RGeDBZMjl1YzNRZ2NISnZiV2x6WlNBOUlHNWxkeUJRY205dGFYTmxLQ2h5WlhOdmJIWmxMQ0J5WldwbFkzUXBJRDArSUh0Y2JseDBYSFJjZEZ4MFhIUnRaWE56WVdkbFhHNWNkRngwWEhSY2RGeDBYSFF1WkhKaFoyZGhZbXhsS0h0Y2JseDBYSFJjZEZ4MFhIUmNkRngwWTI5dWRHRnBibTFsYm5RNklDZDNhVzVrYjNjbkxGeHVYSFJjZEZ4MFhIUmNkRngwWEhSamRYSnpiM0k2SUNkdGIzWmxKeXhjYmx4MFhIUmNkRngwWEhSY2RGeDBjMk55YjJ4c09pQm1ZV3h6WlN4Y2JseDBYSFJjZEZ4MFhIUmNkRngwTHk5emJtRndPaUFuYUhSdGJDY3NYRzVjZEZ4MFhIUmNkRngwWEhSY2RDOHZjMjVoY0ZSdmJHVnlZVzVqWlRvZ01UQXNYRzVjZEZ4MFhIUmNkRngwWEhSY2RHaGhibVJzWlRvZ0p5NXRaVzUxTFc5d1pYSmhkR1VuTENBdkx5QmtiMlZ6SUc1dmRDQjNiM0pySUhkcGRHZ2djRzl6YVhScGIyNGdKMlpwZUdWa0oxeHVYSFJjZEZ4MFhIUmNkRngwWEhSemRHRnlkRG9nWm5WdVkzUnBiMjRnS0dWMlpXNTBMQ0IxYVNrZ2UxeHVYSFJjZEZ4MFhIUmNkRngwWEhSY2RIVnBMbWhsYkhCbGNpNWpjM01vZTF4dVhIUmNkRngwWEhSY2RGeDBYSFJjZEZ4MFltOTBkRzl0T2lBbllYVjBieWNzWEc1Y2RGeDBYSFJjZEZ4MFhIUmNkRngwWEhSeWFXZG9kRG9nSjJGMWRHOG5MRnh1WEhSY2RGeDBYSFJjZEZ4MFhIUmNkSDBwTzF4dVhIUmNkRngwWEhSY2RGeDBYSFI5TEZ4dVhIUmNkRngwWEhSY2RGeDBmU2xjYmx4MFhIUmNkRngwWEhSY2RDNWpjM01vZTF4dVhIUmNkRngwWEhSY2RGeDBYSFFuY21sbmFIUW5PaUJnSkh0eWFXZG9kSDF3ZUdBc1hHNWNkRngwWEhSY2RGeDBYSFJjZENkaWIzUjBiMjBuT2lCZ0pIdGliM1IwYjIxOWNIaGdMRnh1WEhSY2RGeDBYSFJjZEZ4MGZTbGNibHgwWEhSY2RGeDBYSFJjZEM1emFHOTNLSHRjYmx4MFhIUmNkRngwWEhSY2RGeDBaV1ptWldOME9pQmNJbVpoWkdWY0lpeGNibHgwWEhSY2RGeDBYSFJjZEZ4MFpHbHlaV04wYVc5dU9pQW5hVzRuTEZ4dVhIUmNkRngwWEhSY2RGeDBmU3dnTWpBd0xDQW9LU0E5UGlCN1hHNWNkRngwWEhSY2RGeDBYSFJjZEhKbGRIVnliaUJ5WlhOdmJIWmxLQ2R6YUc5M2JpY3BPMXh1WEhSY2RGeDBYSFJjZEZ4MGZTbGNibHgwWEhSY2RGeDBYSFJjZEM1eVpYTnBlbUZpYkdVb2UxeHVYSFJjZEZ4MFhIUmNkRngwWEhSemRHRnlkRG9nWm5WdVkzUnBiMjRnS0dWMlpXNTBMQ0IxYVNrZ2V5QjlYRzVjZEZ4MFhIUmNkRngwWEhSOUtUdGNibHgwWEhSY2RGeDBmU2s3WEc1Y2JseDBYSFJjZEZ4MGRtRnlJR05zYjNObFZHbHRaWElnUFNCelpYUlVhVzFsYjNWMEtHWjFibU4wYVc5dUlDaGxLU0I3WEc1Y2RGeDBYSFJjZEZ4MGJXVnpjMkZuWlM1bWFXNWtLQ2N1YldWdWRTMXZjR1Z5WVhSbElDNWpiRzl6WlNjcExuUnlhV2RuWlhKSVlXNWtiR1Z5S0NkamJHbGpheWNzSUZzeE1qQXdYU2s3WEc1Y2RGeDBYSFJjZEgwc0lETTFNREFwTzF4dVhHNWNkRngwWEhSY2RIUm9hWE11VkdGaWMxQnNkV2RwYmtaeVlXMWxWMjl5YXlnblkyeHZjMlZOWlhOellXZGxKeXdnYldWemMyRm5aU2s3WEc1Y2RGeDBYSFJjZEhSb2FYTXVWR0ZpYzFCc2RXZHBia1p5WVcxbFYyOXlheWduYzNSdmNFTnNiM05sVFdWemMyRm5aU2NzSUcxbGMzTmhaMlVzSUdOc2IzTmxWR2x0WlhJcE8xeHVYRzVjZEZ4MFhIUmNkSEpsZEhWeWJpQndjbTl0YVhObE8xeHVYSFJjZEZ4MGZTeGNibHgwWEhSY2RHTnNiM05sVFdWemMyRm5aVG9nWm5WdVkzUnBiMjRnS0cxbGMzTmhaMlVzSUdSMWNtRjBhVzl1S1NCN1hHNWNkRngwWEhSY2RHbG1JQ2gwZVhCbGIyWWdLR1IxY21GMGFXOXVLU0E5UFNBbmRXNWtaV1pwYm1Wa0p5a2dlMXh1WEhSY2RGeDBYSFJjZEdSMWNtRjBhVzl1SUQwZ01qQXdPMXh1WEhSY2RGeDBYSFI5WEc1Y2RGeDBYSFJjZEcxbGMzTmhaMlV1Wm1sdVpDZ25MbTFsYm5VdGIzQmxjbUYwWlNBdVkyeHZjMlVuS1M1dmJpZ25ZMnhwWTJzZ2RHOTFZMmh6ZEdGeWRDY3NJR1oxYm1OMGFXOXVJQ2hsTENCa2RYSmhkR2x2YmlrZ2UxeHVYSFJjZEZ4MFhIUmNkR2xtSUNoMGVYQmxiMllnS0dVdWFYTlVjbWxuWjJWeUtTQTlQU0FuZFc1a1pXWnBibVZrSnlrZ2UxeHVYSFJjZEZ4MFhIUmNkRngwYldWemMyRm5aUzV2Wm1Zb0oyMXZkWE5sYjNabGNpY3BPMXh1WEhSY2RGeDBYSFJjZEgxY2JseDBYSFJjZEZ4MFhIUnRaWE56WVdkbExtaHBaR1VvZTF4dVhIUmNkRngwWEhSY2RGeDBaV1ptWldOME9pQmNJbVpoWkdWY0lpeGNibHgwWEhSY2RGeDBYSFJjZEdScGNtVmpkR2x2YmpvZ0oyOTFkQ2NzWEc1Y2RGeDBYSFJjZEZ4MGZTd2daSFZ5WVhScGIyNHNJR1oxYm1OMGFXOXVJQ2dwSUh0Y2JseDBYSFJjZEZ4MFhIUmNkRzFsYzNOaFoyVXVaSEpoWjJkaFlteGxLQ2RrWlhOMGNtOTVKeWt1Y21WdGIzWmxLQ2s3WEc1Y2RGeDBYSFJjZEZ4MGZTazdYRzVjZEZ4MFhIUmNkSDBwTzF4dVhIUmNkRngwZlN4Y2JseDBYSFJjZEhOMGIzQkRiRzl6WlUxbGMzTmhaMlU2SUdaMWJtTjBhVzl1SUNodFpYTnpZV2RsTENCamJHOXpaVlJwYldWeUtTQjdYRzVjZEZ4MFhIUmNkRzFsYzNOaFoyVXViMjRvSjIxdmRYTmxiM1psY2ljc0lIc2dkR2x0WlhKSlpEb2dZMnh2YzJWVWFXMWxjaUI5TENCbWRXNWpkR2x2YmlBb1pTa2dlMXh1WEhSY2RGeDBYSFJjZEdOc1pXRnlWR2x0Wlc5MWRDaGxMbVJoZEdFdWRHbHRaWEpKWkNrN1hHNWNkRngwWEhSY2RGeDBiV1Z6YzJGblpTNXpkRzl3S0hSeWRXVXBMbUZ1YVcxaGRHVW9lMXh1WEhSY2RGeDBYSFJjZEZ4MEoyOXdZV05wZEhrbk9pQW5NU2NzWEc1Y2RGeDBYSFJjZEZ4MGZTd2dNekF3TENCbWRXNWpkR2x2YmlBb0tTQjdYRzVjZEZ4MFhIUmNkRngwWEhSdFpYTnpZV2RsTG1OemN5Z25iM0JoWTJsMGVTY3NJQ2NuS1R0Y2JseDBYSFJjZEZ4MFhIUjlLVHRjYmx4MFhIUmNkRngwZlNrN1hHNWNkRngwWEhSOUxGeHVYSFJjZEZ4MGRYQmtZWFJsUTI5dWRISnZiSE02SUdaMWJtTjBhVzl1SUNodVpYZFRaWFIwYVc1bmN5a2dlMXh1WEc1Y2RGeDBYSFJjZEUxbGMzTnBZUzUwYjJkbmJHVmZjMkYyWlY5dmNHVnlZWFJsS0NkdlptWW5MQ0JOWlhOemFXRXVZV3hzU1c1d2RYUnpLVHRjYmx4dVhIUmNkRngwWEhSbWIzSWdLSFpoY2lCclpYa2dhVzRnYm1WM1UyVjBkR2x1WjNNcElIdGNibHgwWEhSY2RGeDBYSFJwWmlBb2RIbHdaVzltSUNodVpYZFRaWFIwYVc1bmMxdHJaWGxkS1NBOVBTQW5jM1J5YVc1bkp5a2dlMXh1WEhSY2RGeDBYSFJjZEZ4MGJtVjNVMlYwZEdsdVozTmJhMlY1WFNBOUlHNWxkMU5sZEhScGJtZHpXMnRsZVYwdWNtVndiR0ZqWlNndlhGeGNYRndpTDJjc0lDZGNJaWNwTzF4dVhIUmNkRngwWEhSY2RGeDBibVYzVTJWMGRHbHVaM05iYTJWNVhTQTlJRzVsZDFObGRIUnBibWR6VzJ0bGVWMHVjbVZ3YkdGalpTZ3ZYRnhjWENjdlp5d2dKMXhjSnljcE8xeHVYSFJjZEZ4MFhIUmNkSDFjYmx4MFhIUmNkRngwZlZ4dVhHNWNkRngwWEhSY2RHWnZjbTFEYjI1MGNtOXNjeUE5SUUxbGMzTnBZUzVuWlhSZlptOXliVjlqYjI1MGNtOXNjeWdwTzF4dVhHNWNkRngwWEhSY2RHWnZjaUFvZG1GeUlHa2dQU0F3T3lCcElEd2dabTl5YlVOdmJuUnliMnh6TG14bGJtZDBhRHNnYVNzcktTQjdYRzVjYmx4MFhIUmNkRngwWEhSMllYSWdZMjl1ZEhKdmJFNWhiV1VnUFNCbWIzSnRRMjl1ZEhKdmJITmJhVjB1Ym1GdFpUdGNibHgwWEhSY2RGeDBYSFIyWVhJZ1kyOXVkSEp2YkZaaGJDQTlJRzVsZDFObGRIUnBibWR6VzJOdmJuUnliMnhPWVcxbFhUdGNibHh1WEhSY2RGeDBYSFJjZEhOM2FYUmphQ0FvWm05eWJVTnZiblJ5YjJ4elcybGRMbTV2WkdWT1lXMWxLU0I3WEc1Y2RGeDBYSFJjZEZ4MFhIUmpZWE5sSUNkSlRsQlZWQ2M2WEc1Y2RGeDBYSFJjZEZ4MFhIUmNkR2xtSUNobWIzSnRRMjl1ZEhKdmJITmJhVjB1ZEhsd1pTQTlQU0FuWTJobFkydGliM2duS1NCN1hHNWNkRngwWEhSY2RGeDBYSFJjZEZ4MEpDaG1iM0p0UTI5dWRISnZiSE5iYVYwcExuQnliM0FvSjJOb1pXTnJaV1FuTENCd1lYSnpaVWx1ZENoamIyNTBjbTlzVm1Gc0tTazdYRzVjZEZ4MFhIUmNkRngwWEhSY2RIMWNibHgwWEhSY2RGeDBYSFJjZEZ4MFpXeHpaU0JwWmlBb1ptOXliVU52Ym5SeWIyeHpXMmxkTG5SNWNHVWdQVDBnSjNKaFpHbHZKeWtnZTF4dVhIUmNkRngwWEhSY2RGeDBYSFJjZENRb1ptOXliVU52Ym5SeWIyeHpXMmxkS1M1d2NtOXdLQ2RqYUdWamEyVmtKeXdnSkNobWIzSnRRMjl1ZEhKdmJITmJhVjBwTG5aaGJDZ3BJRDA5UFNCamIyNTBjbTlzVm1Gc0tUdGNibHgwWEhSY2RGeDBYSFJjZEZ4MGZWeHVYSFJjZEZ4MFhIUmNkRngwWEhSbGJITmxJSHRjYmx4MFhIUmNkRngwWEhSY2RGeDBYSFFrS0dadmNtMURiMjUwY205c2MxdHBYU2t1ZG1Gc0tHTnZiblJ5YjJ4V1lXd3BPMXh1WEhSY2RGeDBYSFJjZEZ4MFhIUjlYRzVjZEZ4MFhIUmNkRngwWEhSY2RDUW9abTl5YlVOdmJuUnliMnh6VzJsZEtTNTBjbWxuWjJWeUtDZDFjR1JoZEdWa0p5azdYRzVjZEZ4MFhIUmNkRngwWEhSY2RHSnlaV0ZyTzF4dVhHNWNkRngwWEhSY2RGeDBYSFJqWVhObElDZFVSVmhVUVZKRlFTYzZYRzVjZEZ4MFhIUmNkRngwWEhSY2RDUW9abTl5YlVOdmJuUnliMnh6VzJsZEtTNTJZV3dvWTI5dWRISnZiRlpoYkNrN1hHNWNkRngwWEhSY2RGeDBYSFJjZENRb1ptOXliVU52Ym5SeWIyeHpXMmxkS1M1MGNtbG5aMlZ5S0NkMWNHUmhkR1ZrSnlrN1hHNWNkRngwWEhSY2RGeDBYSFJjZEdKeVpXRnJPMXh1WEc1Y2RGeDBYSFJjZEZ4MFhIUmpZWE5sSUNkVFJVeEZRMVFuT2x4dVhIUmNkRngwWEhSY2RGeDBYSFJwWmlBb1ptOXliVU52Ym5SeWIyeHpXMmxkTG0xMWJIUnBjR3hsSUQwOUlIUnlkV1VwSUh0Y2JseHVYSFJjZEZ4MFhIUmNkRngwWEhSY2RHbG1JQ2hqYjI1MGNtOXNWbUZzTG14bGJtZDBhQ0ErSURBcElIdGNibHgwWEhSY2RGeDBYSFJjZEZ4MFhIUmNkR1p2Y2lBb2RtRnlJSG9nUFNBd095QjZJRHdnWTI5dWRISnZiRlpoYkM1c1pXNW5kR2c3SUhvckt5a2dlMXh1WEhSY2RGeDBYSFJjZEZ4MFhIUmNkRngwWEhRa0tHWnZjbTFEYjI1MGNtOXNjMXRwWFNrdVptbHVaQ2duYjNCMGFXOXVXM1poYkhWbFBWd2lKeUFySUdOdmJuUnliMnhXWVd4YmVsMGdLeUFuWENKZEp5a3VjSEp2Y0NnbmMyVnNaV04wWldRbkxDQW5jMlZzWldOMFpXUW5LVHRjYmx4MFhIUmNkRngwWEhSY2RGeDBYSFJjZEgxY2JseDBYSFJjZEZ4MFhIUmNkRngwWEhSOVhHNWNkRngwWEhSY2RGeDBYSFJjZEgxY2JseDBYSFJjZEZ4MFhIUmNkRngwWld4elpTQjdYRzVjZEZ4MFhIUmNkRngwWEhSY2RGeDBKQ2htYjNKdFEyOXVkSEp2YkhOYmFWMHBMbVpwYm1Rb0oyOXdkR2x2Ymx0MllXeDFaVDFjSWljZ0t5QmpiMjUwY205c1ZtRnNJQ3NnSjF3aVhTY3BMbkJ5YjNBb0ozTmxiR1ZqZEdWa0p5d2dKM05sYkdWamRHVmtKeWs3WEc1Y2RGeDBYSFJjZEZ4MFhIUmNkSDFjYmx4MFhIUmNkRngwWEhSY2RGeDBKQ2htYjNKdFEyOXVkSEp2YkhOYmFWMHBMblpoYkNoamIyNTBjbTlzVm1Gc0tUdGNibHgwWEhSY2RGeDBYSFJjZEZ4MEpDaG1iM0p0UTI5dWRISnZiSE5iYVYwcExuUnlhV2RuWlhJb0ozVndaR0YwWldRbktUdGNibHgwWEhSY2RGeDBYSFJjZEZ4MFluSmxZV3M3WEc1Y2RGeDBYSFJjZEZ4MGZWeHVYRzVjZEZ4MFhIUmNkRngwYVdZZ0tHWnZjbTFEYjI1MGNtOXNjMXRwWFM1dWIyUmxUbUZ0WlNBOVBTQW5TVTVRVlZRbklIeDhJR1p2Y20xRGIyNTBjbTlzYzF0cFhTNXViMlJsVG1GdFpTQTlQU0FuVTBWTVJVTlVKeWtnZTF4dVhIUmNkRngwWEhSY2RGeDBhV1lnS0hSNWNHVnZaaUFvSkNobWIzSnRRMjl1ZEhKdmJITmJhVjBwTG1SaGRHRW9KM1JoWjNOcGJuQjFkQ2NwS1NBaFBTQW5kVzVrWldacGJtVmtKeWtnZTF4dVhIUmNkRngwWEhSY2RGeDBYSFFrS0dadmNtMURiMjUwY205c2MxdHBYU2t1YjJabUtDazdYRzVjZEZ4MFhIUmNkRngwWEhSY2RDUW9abTl5YlVOdmJuUnliMnh6VzJsZEtTNTBZV2R6YVc1d2RYUW9KM0psYlc5MlpVRnNiQ2NwTzF4dVhIUmNkRngwWEhSY2RGeDBYSFFrS0dadmNtMURiMjUwY205c2MxdHBYU2t1ZEdGbmMybHVjSFYwS0NkaFpHUW5MQ0JqYjI1MGNtOXNWbUZzS1R0Y2JseDBYSFJjZEZ4MFhIUmNkRngwSkNobWIzSnRRMjl1ZEhKdmJITmJhVjBwTG05dUtDZHBkR1Z0UVdSa1pXUWdhWFJsYlZKbGJXOTJaV1FuTENCTlpYTnphV0V1YzJGMlpVOXdaWEpoZEdVcE8xeHVYSFJjZEZ4MFhIUmNkRngwZlZ4dVhIUmNkRngwWEhSY2RIMWNibHgwWEhSY2RGeDBmVnh1WEhSY2RGeDBYSFJOWlhOemFXRXVkRzluWjJ4bFgzTmhkbVZmYjNCbGNtRjBaU2duYjI0bkxDQk5aWE56YVdFdVlXeHNTVzV3ZFhSektUdGNibHgwWEhSY2RIMHNYRzVjZEZ4MFhIUndiR0Y1VTI5MWJtUTZJR1oxYm1OMGFXOXVJQ2gyYjJ4MWJXVXBJSHRjYmx4dVhIUmNkRngwWEhSMllYSWdZWFZrYVc4Z1BTQWtLQ2N1YldWdWRTMWlaV1Z3SnlrN1hHNWNibHgwWEhSY2RGeDBZWFZrYVc4dVoyVjBLREFwTG5admJIVnRaU0E5SUhadmJIVnRaVHRjYmx4MFhIUmNkRngwWVhWa2FXOHVaMlYwS0RBcExuQnNZWGtvS1R0Y2JseDBYSFJjZEgwc1hHNWNkRngwZlZ4dVhHNWNkRngwWTI5dWMzUWdUV1Z6YzJsaElEMGdlMXh1WEc1Y2RGeDBYSFJ0ZFd4MGFYQnNaVG9nSnljc1hHNWNkRngwWEhSMFlXSnpSR0YwWVRvZ0pDZ25JM1JoWW5NbktTNWtZWFJoS0NkblpXNWxjbUZzSnlrc1hHNWNkRngwWEhSaGJHeEpibkIxZEhNNklDUW9KeU4wWVdKeklHbHVjSFYwT201dmRDZ3VhWE52YkdGMFpXUXBMQ0FqZEdGaWN5QnpaV3hsWTNRNmJtOTBLQzVwYzI5c1lYUmxaQ2tzSUNOMFlXSnpJSFJsZUhSaGNtVmhPbTV2ZENndWFYTnZiR0YwWldRcEp5a3NYRzVjZEZ4MFhIUmhZM1JwZG1WVVlXSTZJR1oxYm1OMGFXOXVJQ2hsZG1WdWRDd2dkV2twSUh0Y2JseHVYSFJjZEZ4MFhIUjFhUzV1WlhkVVlXSXVaMlYwS0RBcExuTmpjbTlzYkVsdWRHOVdhV1YzS0h0Y2JseDBYSFJjZEZ4MFhIUmlaV2hoZG1sdmNqb2dKM050YjI5MGFDY3NYRzVjZEZ4MFhIUmNkRngwWW14dlkyczZJQ2R6ZEdGeWRDY3NYRzVjZEZ4MFhIUmNkRngwYVc1c2FXNWxPaUFuYm1WaGNtVnpkQ2NzWEc1Y2RGeDBYSFJjZEgwcE8xeHVYSFJjZEZ4MGZTeGNibHgwWEhSY2RHOXdaVzVJWld4d1ZHRmlPaUJtZFc1amRHbHZiaUFvWlhabGJuUXBJSHRjYmx4dVhIUmNkRngwWEhSMllYSWdaR0YwWVNBOUlDUW9kR2hwY3lrdVpHRjBZU2duYzJWamRHbHZia2xrSnlrN1hHNWNkRngwWEhSY2RIZHBibVJ2ZHk1elkzSnZiR3hVYnloN0lIUnZjRG9nTUN3Z1ltVm9ZWFpwYjNJNklDZHpiVzl2ZEdnbklIMHBPMXh1WEc1Y2RGeDBYSFJjZEdsbUlDZ25ibTl1WlNjZ1BUMDlJQ1FvSnlOamIyNTBaWGgwZFdGc0xXaGxiSEF0ZDNKaGNDY3BMbU56Y3lnblpHbHpjR3hoZVNjcEtTQjdYRzVjZEZ4MFhIUmNkRngwSkNnbkkyTnZiblJsZUhSMVlXd3RhR1ZzY0Mxc2FXNXJKeWt1ZEhKcFoyZGxjaWduWTJ4cFkyc25LVHRjYmx4MFhIUmNkRngwZlZ4dVhHNWNkRngwWEhSY2RHbG1JQ2gwZVhCbGIyWWdaR0YwWVNBOVBUMGdKM1Z1WkdWbWFXNWxaQ2NwSUh0Y2JseDBYSFJjZEZ4MFhIUnlaWFIxY200N1hHNWNkRngwWEhSY2RIMWNibHh1WEhSY2RGeDBYSFFrS0dBdVkyOXVkR1Y0ZEhWaGJDMW9aV3h3TFhSaFluTWdZVnRvY21WbVBWd2lJM1JoWWkxd1lXNWxiQzBrZTJSaGRHRjlYQ0pkWUNrdWRISnBaMmRsY2lnblkyeHBZMnNuS1R0Y2JseDBYSFJjZEgwc1hHNWNkRngwWEhSMGIyZG5iR1ZUWldOMGFXOXVPaUJtZFc1amRHbHZiaUFvWlhabGJuUXBJSHRjYmx4dVhIUmNkRngwWEhRa0tIUm9hWE1wTG5SdloyZHNaVU5zWVhOektGd2lZWEp5YjNjdGRISmhibk5tYjNKdFhDSXBPMXh1WEc1Y2RGeDBYSFJjZEhaaGNpQlNJRDBnTVRBN1hHNWNkRngwWEhSY2RIWmhjaUJsYkNBOUlDUW9kR2hwY3lrdWJtVjRkQ2duTG5ObFkzUnBiMjR0WTI5dWRHVnVkQzEzY21Gd2NHVnlKeWs3WEc1Y2JseDBYSFJjZEZ4MFpXd3VjM1J2Y0NoMGNuVmxLVHRjYmx4dVhIUmNkRngwWEhScFppQW9aV3d1YUdGelEyeGhjM01vSjJOdmJHeGhjSE5sWkNjcEtTQjdYRzVjZEZ4MFhIUmNkRngwZG1GeUlHaGxhV2RvZENBOUlHVnNMbUZrWkVOc1lYTnpLQ2R6YUc5M2FXNW5KeWt1Y21WdGIzWmxRMnhoYzNNb0oyTnZiR3hoY0hObFpDY3BMbWhsYVdkb2RDZ3BPMXh1WEhSY2RGeDBYSFJjZEhaaGNpQmtkWElnUFNCTllYUm9Mbk54Y25Rb2FHVnBaMmgwS1NBcUlGSTdYRzVjZEZ4MFhIUmNkRngwWld3dVkzTnpLQ2RvWldsbmFIUW5MQ0F3S1R0Y2JseDBYSFJjZEZ4MFhIUmxiQzVoYm1sdFlYUmxLSHRjYmx4MFhIUmNkRngwWEhSY2RHaGxhV2RvZERvZ2FHVnBaMmgwSUNzZ0ozQjRKeXhjYmx4MFhIUmNkRngwWEhSOUxDQjdYRzVjZEZ4MFhIUmNkRngwWEhSa2RYSmhkR2x2YmpvZ1pIVnlMRnh1WEhSY2RGeDBYSFJjZEZ4MGNISnZaM0psYzNNNklHWjFibU4wYVc5dUlDZ3BJSHRjYmx4MFhIUmNkRngwWEhSY2RGeDBKQ2duSTNSaFluTW5LUzUwY21sbloyVnlLQ2R6WTNKdmJHd25LVHRjYmx4MFhIUmNkRngwWEhSY2RIMHNYRzVjZEZ4MFhIUmNkRngwWEhSa2IyNWxPaUJtZFc1amRHbHZiaUFvS1NCN1hHNWNibHgwWEhSY2RGeDBYSFJjZEZ4MEpDaDBhR2x6S1M1amMzTW9KMmhsYVdkb2RDY3NJQ2N4TURBbEp5a3VjbVZ0YjNabFEyeGhjM01vSjNOb2IzZHBibWNuS1R0Y2JseDBYSFJjZEZ4MFhIUmNkRngwSkNnbkkzUmhZbk1uS1M1MGNtbG5aMlZ5S0NkelkzSnZiR3duS1R0Y2JseDBYSFJjZEZ4MFhIUmNkSDBzWEc1Y2RGeDBYSFJjZEZ4MGZTazdYRzVjZEZ4MFhIUmNkSDFjYmx4MFhIUmNkRngwWld4elpTQnBaaUFvWld3dWFHRnpRMnhoYzNNb0oyaHBaR2x1WnljcEtTQjdYRzVjZEZ4MFhIUmNkRngwZG1GeUlHTjFjbkpmYUdWcFoyaDBJRDBnWld3dVkzTnpLQ2RvWldsbmFIUW5LVHRjYmx4MFhIUmNkRngwWEhSMllYSWdhR1ZwWjJoMElEMGdaV3d1WTNOektDZG9aV2xuYUhRbkxDQW5KeWt1YUdWcFoyaDBLQ2s3WEc1Y2RGeDBYSFJjZEZ4MGRtRnlJR1IxY2lBOUlFMWhkR2d1YzNGeWRDaG9aV2xuYUhRcElDb2dVanRjYmx4dVhIUmNkRngwWEhSY2RHVnNMbU56Y3lnbmFHVnBaMmgwSnl3Z1kzVnljbDlvWldsbmFIUXBPMXh1WEhSY2RGeDBYSFJjZEdWc0xtRmtaRU5zWVhOektDZHphRzkzYVc1bkp5a3VjbVZ0YjNabFEyeGhjM01vSjJocFpHbHVaeWNwTG1GdWFXMWhkR1VvWEc1Y2RGeDBYSFJjZEZ4MFhIUjdYRzVjZEZ4MFhIUmNkRngwWEhSY2RHaGxhV2RvZERvZ2FHVnBaMmgwSUNzZ0ozQjRKeXhjYmx4MFhIUmNkRngwWEhSY2RIMHNYRzVjZEZ4MFhIUmNkRngwWEhSN1hHNWNkRngwWEhSY2RGeDBYSFJjZEdSMWNtRjBhVzl1T2lCa2RYSXNYRzVjZEZ4MFhIUmNkRngwWEhSY2RIQnliMmR5WlhOek9pQm1kVzVqZEdsdmJpQW9LU0I3WEc1Y2RGeDBYSFJjZEZ4MFhIUmNkRngwSkNnbkkzUmhZbk1uS1M1MGNtbG5aMlZ5S0NkelkzSnZiR3duS1R0Y2JseDBYSFJjZEZ4MFhIUmNkRngwZlN4Y2JseDBYSFJjZEZ4MFhIUmNkRngwWkc5dVpUb2dablZ1WTNScGIyNGdLQ2tnZTF4dVhHNWNkRngwWEhSY2RGeDBYSFJjZEZ4MEpDaDBhR2x6S1M1amMzTW9KMmhsYVdkb2RDY3NJQ2N4TURBbEp5a3VjbVZ0YjNabFEyeGhjM01vSjNOb2IzZHBibWNuS1R0Y2JseDBYSFJjZEZ4MFhIUmNkRngwWEhRa0tDY2pkR0ZpY3ljcExuUnlhV2RuWlhJb0ozTmpjbTlzYkNjcE8xeHVYSFJjZEZ4MFhIUmNkRngwWEhSOUxGeHVYSFJjZEZ4MFhIUmNkRngwZlNrN1hHNWNkRngwWEhSY2RIMWNibHgwWEhSY2RGeDBaV3h6WlNCcFppQW9aV3d1YUdGelEyeGhjM01vSjNOb2IzZHBibWNuS1NrZ2UxeHVYSFJjZEZ4MFhIUmNkSFpoY2lCb1pXbG5hSFFnUFNCbGJDNW9aV2xuYUhRb0tUdGNibHgwWEhSY2RGeDBYSFIyWVhJZ1pIVnlJRDBnVFdGMGFDNXpjWEowS0dobGFXZG9kQ2tnS2lCU08xeHVYSFJjZEZ4MFhIUmNkR1ZzTG1Ga1pFTnNZWE56S0Nkb2FXUnBibWNuS1M1eVpXMXZkbVZEYkdGemN5Z25jMmh2ZDJsdVp5Y3BMbUZ1YVcxaGRHVW9lMXh1WEhSY2RGeDBYSFJjZEZ4MGFHVnBaMmgwT2lBd0xGeHVYSFJjZEZ4MFhIUmNkSDBzSUh0Y2JseDBYSFJjZEZ4MFhIUmNkR1IxY21GMGFXOXVPaUJrZFhJc1hHNWNkRngwWEhSY2RGeDBYSFJ3Y205bmNtVnpjem9nWm5WdVkzUnBiMjRnS0NrZ2UxeHVYSFJjZEZ4MFhIUmNkRngwWEhRa0tDY2pkR0ZpY3ljcExuUnlhV2RuWlhJb0ozTmpjbTlzYkNjcE8xeHVYSFJjZEZ4MFhIUmNkRngwZlN4Y2JseDBYSFJjZEZ4MFhIUmNkR1J2Ym1VNklHWjFibU4wYVc5dUlDZ3BJSHRjYmx4dVhIUmNkRngwWEhSY2RGeDBYSFFrS0hSb2FYTXBMbUZrWkVOc1lYTnpLQ2RqYjJ4c1lYQnpaV1FuS1M1eVpXMXZkbVZEYkdGemN5Z25hR2xrYVc1bkp5a3VZM056S0Nkb1pXbG5hSFFuTENBbkp5azdYRzVjZEZ4MFhIUmNkRngwWEhSY2RDUW9KeU4wWVdKekp5a3VkSEpwWjJkbGNpZ25jMk55YjJ4c0p5azdYRzVjZEZ4MFhIUmNkRngwWEhSOUxGeHVYSFJjZEZ4MFhIUmNkSDBwTzF4dVhIUmNkRngwWEhSOVhHNWNkRngwWEhSY2RHVnNjMlVnZTF4dVhIUmNkRngwWEhSY2RIWmhjaUJvWldsbmFIUWdQU0JsYkM1b1pXbG5hSFFvS1R0Y2JseDBYSFJjZEZ4MFhIUjJZWElnWkhWeUlEMGdUV0YwYUM1emNYSjBLR2hsYVdkb2RDa2dLaUJTTzF4dVhIUmNkRngwWEhSY2RHVnNMbUZrWkVOc1lYTnpLQ2RvYVdScGJtY25LUzVoYm1sdFlYUmxLSHRjYmx4MFhIUmNkRngwWEhSY2RHaGxhV2RvZERvZ01DeGNibHgwWEhSY2RGeDBYSFI5TENCN1hHNWNkRngwWEhSY2RGeDBYSFJrZFhKaGRHbHZiam9nWkhWeUxGeHVYSFJjZEZ4MFhIUmNkRngwY0hKdlozSmxjM002SUdaMWJtTjBhVzl1SUNncElIdGNibHgwWEhSY2RGeDBYSFJjZEZ4MEpDZ25JM1JoWW5NbktTNTBjbWxuWjJWeUtDZHpZM0p2Ykd3bktUdGNibHgwWEhSY2RGeDBYSFJjZEgwc1hHNWNkRngwWEhSY2RGeDBYSFJrYjI1bE9pQm1kVzVqZEdsdmJpQW9LU0I3WEc1Y2JseDBYSFJjZEZ4MFhIUmNkRngwSkNoMGFHbHpLUzVoWkdSRGJHRnpjeWduWTI5c2JHRndjMlZrSnlrdWNtVnRiM1psUTJ4aGMzTW9KMmhwWkdsdVp5Y3BMbU56Y3lnbmFHVnBaMmgwSnl3Z0p5Y3BPMXh1WEhSY2RGeDBYSFJjZEZ4MFhIUWtLQ2NqZEdGaWN5Y3BMblJ5YVdkblpYSW9KM05qY205c2JDY3BPMXh1WEhSY2RGeDBYSFJjZEZ4MGZTeGNibHgwWEhSY2RGeDBYSFI5S1R0Y2JseDBYSFJjZEZ4MGZWeHVYSFJjZEZ4MGZTeGNibHgwWEhSY2RITmpjbVZsYmw5c2IyTnJPaUJoYzNsdVl5Qm1kVzVqZEdsdmJpQW9aWFpsYm5Rc0lHOXdaWEpoZEc5eUtTQjdYRzVjYmx4MFhIUmNkRngwY21WMGRYSnVJR0YzWVdsMElHNWxkeUJRY205dGFYTmxLQ2h5WlhOdmJIWmxMQ0J5WldwbFkzUXBJRDArSUh0Y2JseHVYSFJjZEZ4MFhIUmNkQ1FvYjNCbGNtRjBiM0lwTG5CeWIzQW9KMlJwYzJGaWJHVmtKeXdnZEhKMVpTazdYRzVjZEZ4MFhIUmNkRngwSkNodmNHVnlZWFJ2Y2lrdWRtRnNLQ1FvSnlOMFlXSnpKeWt1WkdGMFlTZ25aMlZ1WlhKaGJDY3BMbk4wWVhSMWMwSmxkSGRsWlc1U1pYRjFaWE4wY3lrdWNtVnRiM1psUTJ4aGMzTW9LVHRjYmx4dVhIUmNkRngwWEhSY2RDUW9KMkp2WkhrbktTNXdjbVZ3Wlc1a0tHQThaR2wySUdsa1BWd2ljM0JwYm01bGNsOXpZWFpwYm1kY0lpQnpkSGxzWlQxY0lub3RhVzVrWlhnNklEazVPVGs1TzF3aVBqeGthWFlnYVdROVhDSnpjR2x1Ym1WeVgzTmhkbWx1WjE5cGJtNWxjbHdpUGp4emRtY2dZMnhoYzNNOVhDSnNaSE10WTNWeWRtVXRZbUZ5YzF3aUlIZHBaSFJvUFZ3aU1USXdjSGhjSWlCb1pXbG5hSFE5WENJeE1qQndlRndpSUhodGJHNXpQVndpYUhSMGNEb3ZMM2QzZHk1M015NXZjbWN2TWpBd01DOXpkbWRjSWlCNGJXeHVjenA0YkdsdWF6MWNJbWgwZEhBNkx5OTNkM2N1ZHpNdWIzSm5MekU1T1RrdmVHeHBibXRjSWlCMmFXVjNRbTk0UFZ3aU1DQXdJREV3TUNBeE1EQmNJaUJ3Y21WelpYSjJaVUZ6Y0dWamRGSmhkR2x2UFZ3aWVFMXBaRmxOYVdSY0lqNDhaeUIwY21GdWMyWnZjbTA5WENKMGNtRnVjMnhoZEdVb05UQXNOVEFwWENJK1BHTnBjbU5zWlNCamVEMWNJakJjSWlCamVUMWNJakJjSWlCeVBWd2lPQzR6TXpNek16TXpNek16TXpNek16UmNJaUJtYVd4c1BWd2libTl1WlZ3aUlITjBjbTlyWlQxY0lpTTBOalU0WVdOY0lpQnpkSEp2YTJVdGQybGtkR2c5WENJeVhDSWdjM1J5YjJ0bExXUmhjMmhoY25KaGVUMWNJakkyTGpFM09Ua3pPRGMzT1RreE5EazBOU0F5Tmk0eE56azVNemczTnprNU1UUTVORFZjSWlCMGNtRnVjMlp2Y20wOVhDSnliM1JoZEdVb01pNDFPRGM1T0NsY0lqNDhZVzVwYldGMFpWUnlZVzV6Wm05eWJTQmhkSFJ5YVdKMWRHVk9ZVzFsUFZ3aWRISmhibk5tYjNKdFhDSWdkSGx3WlQxY0luSnZkR0YwWlZ3aUlIWmhiSFZsY3oxY0lqQWdNQ0F3T3pNMk1DQXdJREJjSWlCMGFXMWxjejFjSWpBN01Wd2lJR1IxY2oxY0lqRnpYQ0lnWTJGc1kwMXZaR1U5WENKemNHeHBibVZjSWlCclpYbFRjR3hwYm1WelBWd2lNQzR5SURBZ01DNDRJREZjSWlCaVpXZHBiajFjSWpCY0lpQnlaWEJsWVhSRGIzVnVkRDFjSW1sdVpHVm1hVzVwZEdWY0lqNDhMMkZ1YVcxaGRHVlVjbUZ1YzJadmNtMCtQQzlqYVhKamJHVStQR05wY21Oc1pTQmplRDFjSWpCY0lpQmplVDFjSWpCY0lpQnlQVndpTVRZdU5qWTJOalkyTmpZMk5qWTJOalk0WENJZ1ptbHNiRDFjSW01dmJtVmNJaUJ6ZEhKdmEyVTlYQ0lqWlRjd01EaGhYQ0lnYzNSeWIydGxMWGRwWkhSb1BWd2lNbHdpSUhOMGNtOXJaUzFrWVhOb1lYSnlZWGs5WENJMU1pNHpOVGs0TnpjMU5UazRNams0T1NBMU1pNHpOVGs0TnpjMU5UazRNams0T1Z3aUlIUnlZVzV6Wm05eWJUMWNJbkp2ZEdGMFpTZzJOQzR6TnpFeUtWd2lQanhoYm1sdFlYUmxWSEpoYm5ObWIzSnRJR0YwZEhKcFluVjBaVTVoYldVOVhDSjBjbUZ1YzJadmNtMWNJaUIwZVhCbFBWd2ljbTkwWVhSbFhDSWdkbUZzZFdWelBWd2lNQ0F3SURBN016WXdJREFnTUZ3aUlIUnBiV1Z6UFZ3aU1Ec3hYQ0lnWkhWeVBWd2lNWE5jSWlCallXeGpUVzlrWlQxY0luTndiR2x1WlZ3aUlHdGxlVk53YkdsdVpYTTlYQ0l3TGpJZ01DQXdMamdnTVZ3aUlHSmxaMmx1UFZ3aUxUQXVNbHdpSUhKbGNHVmhkRU52ZFc1MFBWd2lhVzVrWldacGJtbDBaVndpUGp3dllXNXBiV0YwWlZSeVlXNXpabTl5YlQ0OEwyTnBjbU5zWlQ0OFkybHlZMnhsSUdONFBWd2lNRndpSUdONVBWd2lNRndpSUhJOVhDSXlOVndpSUdacGJHdzlYQ0p1YjI1bFhDSWdjM1J5YjJ0bFBWd2lJMlptTURBellWd2lJSE4wY205clpTMTNhV1IwYUQxY0lqSmNJaUJ6ZEhKdmEyVXRaR0Z6YUdGeWNtRjVQVndpTnpndU5UTTVPREUyTXpNNU56UTBPRE1nTnpndU5UTTVPREUyTXpNNU56UTBPRE5jSWlCMGNtRnVjMlp2Y20wOVhDSnliM1JoZEdVb01UUTVMalkxT1NsY0lqNDhZVzVwYldGMFpWUnlZVzV6Wm05eWJTQmhkSFJ5YVdKMWRHVk9ZVzFsUFZ3aWRISmhibk5tYjNKdFhDSWdkSGx3WlQxY0luSnZkR0YwWlZ3aUlIWmhiSFZsY3oxY0lqQWdNQ0F3T3pNMk1DQXdJREJjSWlCMGFXMWxjejFjSWpBN01Wd2lJR1IxY2oxY0lqRnpYQ0lnWTJGc1kwMXZaR1U5WENKemNHeHBibVZjSWlCclpYbFRjR3hwYm1WelBWd2lNQzR5SURBZ01DNDRJREZjSWlCaVpXZHBiajFjSWkwd0xqUmNJaUJ5WlhCbFlYUkRiM1Z1ZEQxY0ltbHVaR1ZtYVc1cGRHVmNJajQ4TDJGdWFXMWhkR1ZVY21GdWMyWnZjbTArUEM5amFYSmpiR1UrUEdOcGNtTnNaU0JqZUQxY0lqQmNJaUJqZVQxY0lqQmNJaUJ5UFZ3aU16TXVNek16TXpNek16TXpNek16TXpNMlhDSWdabWxzYkQxY0ltNXZibVZjSWlCemRISnZhMlU5WENJalptWTJaREF3WENJZ2MzUnliMnRsTFhkcFpIUm9QVndpTWx3aUlITjBjbTlyWlMxa1lYTm9ZWEp5WVhrOVhDSXhNRFF1TnpFNU56VTFNVEU1TmpVNU56Z2dNVEEwTGpjeE9UYzFOVEV4T1RZMU9UYzRYQ0lnZEhKaGJuTm1iM0p0UFZ3aWNtOTBZWFJsS0RJek9TNHdNeWxjSWo0OFlXNXBiV0YwWlZSeVlXNXpabTl5YlNCaGRIUnlhV0oxZEdWT1lXMWxQVndpZEhKaGJuTm1iM0p0WENJZ2RIbHdaVDFjSW5KdmRHRjBaVndpSUhaaGJIVmxjejFjSWpBZ01DQXdPek0yTUNBd0lEQmNJaUIwYVcxbGN6MWNJakE3TVZ3aUlHUjFjajFjSWpGelhDSWdZMkZzWTAxdlpHVTlYQ0p6Y0d4cGJtVmNJaUJyWlhsVGNHeHBibVZ6UFZ3aU1DNHlJREFnTUM0NElERmNJaUJpWldkcGJqMWNJaTB3TGpaY0lpQnlaWEJsWVhSRGIzVnVkRDFjSW1sdVpHVm1hVzVwZEdWY0lqNDhMMkZ1YVcxaGRHVlVjbUZ1YzJadmNtMCtQQzlqYVhKamJHVStQR05wY21Oc1pTQmplRDFjSWpCY0lpQmplVDFjSWpCY0lpQnlQVndpTkRFdU5qWTJOalkyTmpZMk5qWTJOalkwWENJZ1ptbHNiRDFjSW01dmJtVmNJaUJ6ZEhKdmEyVTlYQ0lqWm1aak5UTm1YQ0lnYzNSeWIydGxMWGRwWkhSb1BWd2lNbHdpSUhOMGNtOXJaUzFrWVhOb1lYSnlZWGs5WENJeE16QXVPRGs1Tmprek9EazVOVGMwTnpFZ01UTXdMamc1T1RZNU16ZzVPVFUzTkRjeFhDSWdkSEpoYm5ObWIzSnRQVndpY205MFlYUmxLRE15TUM0d01USXBYQ0krUEdGdWFXMWhkR1ZVY21GdWMyWnZjbTBnWVhSMGNtbGlkWFJsVG1GdFpUMWNJblJ5WVc1elptOXliVndpSUhSNWNHVTlYQ0p5YjNSaGRHVmNJaUIyWVd4MVpYTTlYQ0l3SURBZ01Ec3pOakFnTUNBd1hDSWdkR2x0WlhNOVhDSXdPekZjSWlCa2RYSTlYQ0l4YzF3aUlHTmhiR05OYjJSbFBWd2ljM0JzYVc1bFhDSWdhMlY1VTNCc2FXNWxjejFjSWpBdU1pQXdJREF1T0NBeFhDSWdZbVZuYVc0OVhDSXRNQzQ0WENJZ2NtVndaV0YwUTI5MWJuUTlYQ0pwYm1SbFptbHVhWFJsWENJK1BDOWhibWx0WVhSbFZISmhibk5tYjNKdFBqd3ZZMmx5WTJ4bFBqd3ZaejQ4TDNOMlp6NDhMMlJwZGo0OEwyUnBkajVnS1R0Y2JseDBYSFJjZEZ4MFhIUWtLQ2RpYjJSNUp5a3VZV1JrUTJ4aGMzTW9KM05sZEhScGJtY3RjMkYyYVc1bkp5azdYRzVjYmx4MFhIUmNkRngwWEhRa0tDZGliMlI1SUNOemNHbHVibVZ5WDNOaGRtbHVaeWNwTG1GdWFXMWhkR1VvZTF4dVhIUmNkRngwWEhSY2RGeDBiM0JoWTJsMGVUb2dNU3hjYmx4MFhIUmNkRngwWEhSOUxDQXhOVEFzSUZ3aWMzZHBibWRjSWl3Z1puVnVZM1JwYjI0Z0tDa2dlMXh1WEc1Y2RGeDBYSFJjZEZ4MFhIUnpaWFJVYVcxbGIzVjBLR1oxYm1OMGFXOXVJQ2dwSUh0Y2JseDBYSFJjZEZ4MFhIUmNkRngwSkNnblltOWtlU0FqYzNCcGJtNWxjbDl6WVhacGJtZGZhVzV1WlhJbktTNWhibWx0WVhSbEtIdGNibHgwWEhSY2RGeDBYSFJjZEZ4MFhIUnZjR0ZqYVhSNU9pQXhMRnh1WEhSY2RGeDBYSFJjZEZ4MFhIUjlMQ0F5TURBc0lGd2ljM2RwYm1kY0lpd2dablZ1WTNScGIyNGdLQ2tnZTF4dVhIUmNkRngwWEhSY2RGeDBYSFJjZEhKbGMyOXNkbVVvVzJWMlpXNTBMQ0J2Y0dWeVlYUnZjbDBwTzF4dVhIUmNkRngwWEhSY2RGeDBYSFI5S1R0Y2JseDBYSFJjZEZ4MFhIUmNkSDBzSURJd01DazdYRzVjZEZ4MFhIUmNkRngwZlNrN1hHNWNkRngwWEhSY2RIMHBPMXh1WEhSY2RGeDBmU3hjYmx4MFhIUmNkSE5qY21WbGJsOTFibXh2WTJ0ZmMzVmpZMlZ6Y3pvZ1lYTjVibU1nWm5WdVkzUnBiMjRnS0NrZ2UxeHVYRzVjZEZ4MFhIUmNkSEpsZEhWeWJpQmhkMkZwZENCdVpYY2dVSEp2YldselpTZ29jbVZ6YjJ4MlpTd2djbVZxWldOMEtTQTlQaUI3WEc1Y2JseDBYSFJjZEZ4MFhIUWtLQ2RpYjJSNUlDTnpjR2x1Ym1WeVgzTmhkbWx1WjE5cGJtNWxjaWNwTG1GdWFXMWhkR1VvZTF4dVhIUmNkRngwWEhSY2RGeDBiM0JoWTJsMGVUb2dNQ3hjYmx4MFhIUmNkRngwWEhSOUxDQXlOVEFzSUZ3aWMzZHBibWRjSWl3Z1puVnVZM1JwYjI0Z0tDa2dlMXh1WEc1Y2RGeDBYSFJjZEZ4MFhIUnpaWFJVYVcxbGIzVjBLR1oxYm1OMGFXOXVJQ2dwSUh0Y2JseDBYSFJjZEZ4MFhIUmNkRngwY21WemIyeDJaU2dwTzF4dVhIUmNkRngwWEhSY2RGeDBmU3dnTlRBd0tUdGNibHgwWEhSY2RGeDBYSFI5S1R0Y2JseDBYSFJjZEZ4MGZTazdYRzVjZEZ4MFhIUjlMRnh1WEhSY2RGeDBjMk55WldWdVgzVnViRzlqYTE5bGNuSnZjam9nWVhONWJtTWdablZ1WTNScGIyNGdLRzl3WlhKaGRHOXlLU0I3WEc1Y2JseDBYSFJjZEZ4MGNtVjBkWEp1SUdGM1lXbDBJRzVsZHlCUWNtOXRhWE5sS0NoeVpYTnZiSFpsTENCeVpXcGxZM1FwSUQwK0lIdGNibHh1WEhSY2RGeDBYSFJjZENRb2IzQmxjbUYwYjNJcExtOW1aaWduWTJ4cFkyc25LVHRjYmx4MFhIUmNkRngwWEhRa0tHOXdaWEpoZEc5eUtTNTJZV3dvSkNnbkkzUmhZbk1uS1M1a1lYUmhLQ2RuWlc1bGNtRnNKeWt1WVdwaGVFVnljbTl5S1M1d2NtOXdLQ2RrYVhOaFlteGxaQ2NzSUdaaGJITmxLUzVqYzNNb2UxeHVYSFJjZEZ4MFhIUmNkRngwSjJOdmJHOXlKem9nSnlObU1EQW5MRnh1WEhSY2RGeDBYSFJjZEZ4MEoySnZjbVJsY2ljNklDY3ljSGdnYzI5c2FXUWdJMlptTURRd05DY3NYRzVjZEZ4MFhIUmNkRngwZlNrdWIyNG9KMk5zYVdOckp5d2dablZ1WTNScGIyNGdLQ2tnZTF4dVhIUmNkRngwWEhSY2RGeDBiRzlqWVhScGIyNHVjbVZzYjJGa0tDazdYRzVjZEZ4MFhIUmNkRngwZlNrN1hHNWNibHgwWEhSY2RGeDBYSFFrS0NkaWIyUjVJQ056Y0dsdWJtVnlYM05oZG1sdVoxOXBibTVsY2ljcExtRnVhVzFoZEdVb2UxeHVYSFJjZEZ4MFhIUmNkRngwYjNCaFkybDBlVG9nTUN4Y2JseDBYSFJjZEZ4MFhIUjlMQ0F5TlRBc0lGd2ljM2RwYm1kY0lpd2dablZ1WTNScGIyNGdLQ2tnZTF4dVhHNWNkRngwWEhSY2RGeDBYSFJ6WlhSVWFXMWxiM1YwS0daMWJtTjBhVzl1SUNncElIdGNibHgwWEhSY2RGeDBYSFJjZEZ4MEpDZ25ZbTlrZVNBamMzQnBibTVsY2w5ellYWnBibWNuS1M1aGJtbHRZWFJsS0h0Y2JseDBYSFJjZEZ4MFhIUmNkRngwWEhSdmNHRmphWFI1T2lBd0xGeHVYSFJjZEZ4MFhIUmNkRngwWEhSOUxDQXhNREFzSUZ3aWMzZHBibWRjSWl3Z1puVnVZM1JwYjI0Z0tDa2dlMXh1WEc1Y2RGeDBYSFJjZEZ4MFhIUmNkRngwSkNnblltOWtlU0FqYzNCcGJtNWxjbDl6WVhacGJtY25LUzV5WlcxdmRtVW9LVHRjYmx4MFhIUmNkRngwWEhSY2RGeDBYSFJ5WlhOdmJIWmxLQ2s3WEc1Y2RGeDBYSFJjZEZ4MFhIUmNkSDBwTzF4dVhIUmNkRngwWEhSY2RGeDBmU3dnTlRBd0tUdGNibHgwWEhSY2RGeDBYSFI5S1R0Y2JseDBYSFJjZEZ4MGZTazdYRzVjZEZ4MFhIUjlMRnh1WEhSY2RGeDBjMkYyWlU5d1pYSmhkR1U2SUdaMWJtTjBhVzl1SUNobEtTQjdYRzVjYmx4MFhIUmNkRngwSkNnbkxuZHlZWEFnSTNOaGRtVW5LUzUyWVd3b0pDZ25JM1JoWW5NbktTNWtZWFJoS0NkblpXNWxjbUZzSnlrdWIyNWphR0Z1WjJWQ2RHNVVaWGgwS1M1eVpXMXZkbVZEYkdGemN5Z3BMbUZrWkVOc1lYTnpLQ2RoWTNScGRtVW5LVHRjYmx4MFhIUmNkRngwSkNnbkxuZHlZWEFnSTNOaGRtVW5LUzV3Y205d0tDZGthWE5oWW14bFpDY3NJR1poYkhObEtUdGNibHgwWEhSY2RGeDBKQ2hrYjJOMWJXVnVkQ2t1ZEhKcFoyZGxjaWduYldWemMybGhRMjl1ZEdWdWRFbHpSR2x5ZEhrbktUdGNibHgwWEhSY2RIMHNYRzVjZEZ4MFhIUnlaWE5sZEZOaGRtVlRkR0YwWlRvZ1puVnVZM1JwYjI0Z2JtRnRaU2hsS1NCN1hHNWNkRngwWEhSY2RHTnZibk4wSUhOaGRtVkNkRzRnUFNBa0tDY3VkM0poY0NBamMyRjJaU2NwTzF4dVhHNWNkRngwWEhSY2RITmhkbVZDZEc1Y2JseDBYSFJjZEZ4MFhIUXVjSEp2Y0NnblpHbHpZV0pzWldRbkxDQjBjblZsS1Z4dVhIUmNkRngwWEhSY2RDNXlaVzF2ZG1WQmRIUnlLQ2RqYkdGemN5Y3BYRzVjZEZ4MFhIUmNkRngwTG5SbGVIUW9jMkYyWlVKMGJpNWtZWFJoS0NkcGJtbDBKeWtwTzF4dVhIUmNkRngwZlN4Y2JseDBYSFJjZEhOaGRtVTZJR1oxYm1OMGFXOXVJQ2hsS1NCN1hHNWNibHgwWEhSY2RGeDBKQ2duWW05a2VTY3BMbVJoZEdFb0oyMWxjM05wWVZCeWIyTmxaV1JUWVhacGJtY25MQ0JiWFNrN1hHNWNkRngwWEhSY2RDUW9KMkp2WkhrbktTNTBjbWxuWjJWeUtDZGlaV1p2Y21WVFlYWmxKeWs3WEc1Y2JseDBYSFJjZEZ4MGFXWWdLQ1FvSjJKdlpIa25LUzVrWVhSaEtDZHRaWE56YVdGUWNtOWpaV1ZrVTJGMmFXNW5KeWt1YVc1amJIVmtaWE1vWm1Gc2MyVXBLU0I3WEc1Y2RGeDBYSFJjZEZ4MGNtVjBkWEp1TzF4dVhIUmNkRngwWEhSOVhHNWNibHgwWEhSY2RGeDBUV1Z6YzJsaExuTmpjbVZsYmw5c2IyTnJLR1VzSUhSb2FYTXBMblJvWlc0b1RXVnpjMmxoTG1SdlFXcGhlRk5oZG1WVFpYUjBhVzVuY3lrN1hHNWNkRngwWEhSOUxGeHVYSFJjZEZ4MFpHOUJhbUY0VTJGMlpWTmxkSFJwYm1kek9pQm1kVzVqZEdsdmJpQW9ZWEpuY3lrZ2UxeHVYRzVjZEZ4MFhIUmNkR052Ym5OMFhHNWNkRngwWEhSY2RGeDBaR0YwWVNBOUlFMWxjM05wWVM1MFlXSnpSR0YwWVN4Y2JseDBYSFJjZEZ4MFhIUnpaWFIwYVc1bmN5QTlJRTFsYzNOcFlTNW5aWFJmWm05eWJWOWpiMjUwY205c2N5Z3BMbTV2ZENnbmFXNXdkWFJiZEhsd1pUMWNJbkpoWkdsdlhDSmRPbTV2ZENnNlkyaGxZMnRsWkNrbktTeGNibHgwWEhSY2RGeDBYSFJ3Y21WelpYUWdQU0JrWVhSaExuTmxkSFJwYm1kUWNtVnpaWFFzWEc1Y2RGeDBYSFJjZEZ4MFpYWmxiblFnUFNCaGNtZHpXekJkTEZ4dVhIUmNkRngwWEhSY2RHOXdaWEpoZEc5eUlEMGdZWEpuYzFzeFhUdGNibHh1WEhSY2RGeDBYSFIyWVhJZ2MyVjBkR2x1WjE5aGNuSWdQU0I3ZlR0Y2JseHVYSFJjZEZ4MFhIUm1iM0lnS0haaGNpQnBJRDBnTURzZ2FTQThJSE5sZEhScGJtZHpMbXhsYm1kMGFEc2dhU3NyS1NCN1hHNWNibHgwWEhSY2RGeDBYSFIyWVhJZ2MyRjJaVjkyWVd4MVpUdGNibHh1WEhSY2RGeDBYSFJjZEdsbUlDaHpaWFIwYVc1bmMxdHBYUzUwZVhCbElEMDlJQ2RqYUdWamEySnZlQ2NwSUh0Y2JseDBYSFJjZEZ4MFhIUmNkR2xtSUNoMGVYQmxiMllnS0NRb2MyVjBkR2x1WjNOYmFWMHBMbVJoZEdFb0ozTmhkbVV0ZG1Gc0p5a3BJQ0U5SUNkMWJtUmxabWx1WldRbktTQjdYRzVjZEZ4MFhIUmNkRngwWEhSY2RITmhkbVZmZG1Gc2RXVWdQU0FrS0hObGRIUnBibWR6VzJsZEtTNWtZWFJoS0NkellYWmxMWFpoYkNjcE8xeHVYSFJjZEZ4MFhIUmNkRngwZlZ4dVhIUmNkRngwWEhSY2RGeDBaV3h6WlNCN1hHNWNkRngwWEhSY2RGeDBYSFJjZENoelpYUjBhVzVuYzF0cFhTNWphR1ZqYTJWa0tTQS9JSE5oZG1WZmRtRnNkV1VnUFNBeElEb2djMkYyWlY5MllXeDFaU0E5SURBN1hHNWNkRngwWEhSY2RGeDBYSFI5WEc1Y2RGeDBYSFJjZEZ4MGZWeHVYSFJjZEZ4MFhIUmNkR1ZzYzJVZ2UxeHVYSFJjZEZ4MFhIUmNkRngwYVdZZ0tIUjVjR1Z2WmlBb0pDaHpaWFIwYVc1bmMxdHBYU2t1WkdGMFlTZ25jMkYyWlMxMllXd25LU2tnSVQwZ0ozVnVaR1ZtYVc1bFpDY3BJSHRjYmx4MFhIUmNkRngwWEhSY2RGeDBjMkYyWlY5MllXeDFaU0E5SUNRb2MyVjBkR2x1WjNOYmFWMHBMbVJoZEdFb0ozTmhkbVV0ZG1Gc0p5azdYRzVjZEZ4MFhIUmNkRngwWEhSOVhHNWNkRngwWEhSY2RGeDBYSFJsYkhObElHbG1JQ2h6WlhSMGFXNW5jMXRwWFM1MGVYQmxJRDA5SUNkelpXeGxZM1F0YlhWc2RHbHdiR1VuS1NCN1hHNWNibHgwWEhSY2RGeDBYSFJjZEZ4MGRtRnlJSFpoYkNBOUlDUW9jMlYwZEdsdVozTmJhVjBwTG5aaGJDZ3BPMXh1WEc1Y2RGeDBYSFJjZEZ4MFhIUmNkR2xtSUNoMllXd2dQVDA5SUc1MWJHd3BJSHRjYmx4MFhIUmNkRngwWEhSY2RGeDBYSFJ6WVhabFgzWmhiSFZsSUQwZ0xURTdYRzVjZEZ4MFhIUmNkRngwWEhSY2RIMWNibHgwWEhSY2RGeDBYSFJjZEZ4MFpXeHpaU0JwWmlBb2RtRnNMbXhsYm1kMGFDQTlQVDBnTUNrZ2UxeHVYSFJjZEZ4MFhIUmNkRngwWEhSY2RITmhkbVZmZG1Gc2RXVWdQU0F0TVR0Y2JseDBYSFJjZEZ4MFhIUmNkRngwZlZ4dVhIUmNkRngwWEhSY2RGeDBYSFJsYkhObElIdGNibHgwWEhSY2RGeDBYSFJjZEZ4MFhIUnpZWFpsWDNaaGJIVmxJRDBnSkNoelpYUjBhVzVuYzF0cFhTa3VkbUZzS0NrN1hHNWNkRngwWEhSY2RGeDBYSFJjZEgxY2JseDBYSFJjZEZ4MFhIUmNkSDFjYmx4MFhIUmNkRngwWEhSY2RHVnNjMlVnYVdZZ0tITmxkSFJwYm1kelcybGRMblI1Y0dVZ1BUMGdKM0poWkdsdkp5QW1KaUFrS0hObGRIUnBibWR6VzJsZEtTNXdjbTl3S0NkamFHVmphMlZrSnlrcElIdGNibHgwWEhSY2RGeDBYSFJjZEZ4MGMyRjJaVjkyWVd4MVpTQTlJQ1FvYzJWMGRHbHVaM05iYVYwcExuWmhiQ2dwTzF4dVhIUmNkRngwWEhSY2RGeDBmVnh1WEhSY2RGeDBYSFJjZEZ4MFpXeHpaU0I3WEc1Y2RGeDBYSFJjZEZ4MFhIUmNkSE5oZG1WZmRtRnNkV1VnUFNBa0tITmxkSFJwYm1kelcybGRLUzUyWVd3b0tUdGNibHgwWEhSY2RGeDBYSFJjZEgxY2JseDBYSFJjZEZ4MFhIUjlYRzVjYmx4MFhIUmNkRngwWEhSelpYUjBhVzVuWDJGeWNsdHpaWFIwYVc1bmMxdHBYUzV1WVcxbFhTQTlJSE5oZG1WZmRtRnNkV1U3WEc1Y2RGeDBYSFJjZEgxY2JseHVYSFJjZEZ4MFhIUjRhSElnUFNBa0xtRnFZWGdvZTF4dVhIUmNkRngwWEhSY2RIUjVjR1U2SUNkUVQxTlVKeXhjYmx4MFhIUmNkRngwWEhSMWNtdzZJR1JoZEdFdVlXcGhlRlZ5YkN4Y2JseDBYSFJjZEZ4MFhIUmtZWFJoT2lCN1hHNWNkRngwWEhSY2RGeDBYSFJoWTNScGIyNDZJR1JoZEdFdVlXTjBhVzl1VTJGMlpTeGNibHgwWEhSY2RGeDBYSFJjZEcxbGMzTnBZVTV2Ym1ObE9pQmtZWFJoTG5ObGRIUnBibWRHYjNKdFRtOXVZMlVzWEc1Y2RGeDBYSFJjZEZ4MFhIUmtZWFJoT2lCN1hHNWNkRngwWEhSY2RGeDBYSFJjZEVGS1FWaGZUV0Z5YTJWeU9pQnRaWE56YVdGV1lYSnpMa0ZLUVZoZlRXRnlhMlZ5TEZ4dVhIUmNkRngwWEhSY2RGeDBYSFJ0Wlc1MVgzUjVjR1U2SUdSaGRHRXViV1Z1ZFZSNWNHVXNYRzVjZEZ4MFhIUmNkRngwWEhSY2RIQnlaWE5sZERvZ2NISmxjMlYwTEZ4dVhIUmNkRngwWEhSY2RGeDBYSFJ6WlhSMGFXNW5jem9nYzJWMGRHbHVaMTloY25Jc1hHNWNkRngwWEhSY2RGeDBYSFI5TEZ4dVhIUmNkRngwWEhSY2RIMHNYRzVjZEZ4MFhIUmNkRngwWW1WbWIzSmxVMlZ1WkRvZ1puVnVZM1JwYjI0Z0tDa2dlMXh1WEc1Y2RGeDBYSFJjZEZ4MFhIUnBaaUFvZUdoeUlDRTlJRzUxYkd3cElIdGNibHgwWEhSY2RGeDBYSFJjZEZ4MGVHaHlMbUZpYjNKMEtDazdYRzVjZEZ4MFhIUmNkRngwWEhSY2RIaG9jaUE5SUc1MWJHdzdYRzVjZEZ4MFhIUmNkRngwWEhSOVhHNWNkRngwWEhSY2RGeDBmU3hjYmx4MFhIUmNkRngwWEhSemRXTmpaWE56T2lCbWRXNWpkR2x2YmlBb2MyVnlkbVZ5S1NCN1hHNWNibHgwWEhSY2RGeDBYSFJjZEUxbGMzTnBZVnh1WEhSY2RGeDBYSFJjZEZ4MFhIUXVjMk55WldWdVgzVnViRzlqYTE5emRXTmpaWE56S0NsY2JseDBYSFJjZEZ4MFhIUmNkRngwTG5Sb1pXNG9ablZ1WTNScGIyNGdLQ2tnZTF4dVhHNWNkRngwWEhSY2RGeDBYSFJjZEZ4MFRXVnpjMmxoTG5KbGJXOTJaVjl6Y0dsdWJtVnlLQ2s3WEc1Y2JseDBYSFJjZEZ4MFhIUmNkRngwWEhScFppQW9jMlZ5ZG1WeUxtUmhkR0V1WTI5a1pTQTlQVDBnTWpBd0tTQjdYRzVjYmx4MFhIUmNkRngwWEhSY2RGeDBYSFJjZENRdVptNHVWR0ZpYzFCc2RXZHBia1p5WVcxbFYyOXlheWduZFhCa1lYUmxRMjl1ZEhKdmJITW5MQ0J6WlhKMlpYSXVaR0YwWVM1dVpYZGZjSEpsYzJWMEtUdGNibHh1WEhSY2RGeDBYSFJjZEZ4MFhIUmNkRngwYVdZZ0tIUjVjR1Z2WmlBb2MyVnlkbVZ5TG1SaGRHRXVaWGgwY21GZlpHRjBZU2tnSVQwZ0ozVnVaR1ZtYVc1bFpDY2dKaVlnVDJKcVpXTjBMbXRsZVhNb2MyVnlkbVZ5TG1SaGRHRXVaWGgwY21GZlpHRjBZU2t1YkdWdVozUm9JRDRnTUNrZ2UxeHVYSFJjZEZ4MFhIUmNkRngwWEhSY2RGeDBYSFIyWVhJZ1pYaDBjbUZmWkdGMFlTQTlJSE5sY25abGNpNWtZWFJoTG1WNGRISmhYMlJoZEdFN1hHNWNkRngwWEhSY2RGeDBYSFJjZEZ4MFhIUjlYRzVjZEZ4MFhIUmNkRngwWEhSY2RGeDBYSFJsYkhObElIdGNibHgwWEhSY2RGeDBYSFJjZEZ4MFhIUmNkRngwZG1GeUlHVjRkSEpoWDJSaGRHRWdQU0JtWVd4elpUdGNibHgwWEhSY2RGeDBYSFJjZEZ4MFhIUmNkSDFjYmx4dVhIUmNkRngwWEhSY2RGeDBYSFJjZEZ4MEpDZ25JM1JoWW5NbktTNTBjbWxuWjJWeVNHRnVaR3hsY2lnbmNISmxjMlYwVTJGMlpXUW5MQ0JiYzJWeWRtVnlMbVJoZEdFdWJtVjNYM0J5WlhObGRDd2daWGgwY21GZlpHRjBZVjBwTzF4dVhIUmNkRngwWEhSY2RGeDBYSFJjZEZ4MEpDaHZjR1Z5WVhSdmNpa3VkbUZzS0hObGNuWmxjaTVrWVhSaExtSjBibDkwWlhoMEtTNXlaVzF2ZG1WRGJHRnpjeWdwTG1Ga1pFTnNZWE56S0NkZk1qQXdKeWs3WEc1Y2RGeDBYSFJjZEZ4MFhIUmNkRngwZlZ4dVhHNWNkRngwWEhSY2RGeDBYSFJjZEZ4MGFXWWdLSE5sY25abGNpNWtZWFJoTG1OdlpHVWdQVDA5SURRd01Da2dlMXh1WEhSY2RGeDBYSFJjZEZ4MFhIUmNkRngwSkNodmNHVnlZWFJ2Y2lrdWRtRnNLSE5sY25abGNpNWtZWFJoTG1KMGJsOTBaWGgwS1M1d2NtOXdLQ2RrYVhOaFlteGxaQ2NzSUdaaGJITmxLUzV5WlcxdmRtVkRiR0Z6Y3lncExtRmtaRU5zWVhOektDZGZOREF3SnlrN1hHNWNkRngwWEhSY2RGeDBYSFJjZEZ4MGZWeHVYRzVjZEZ4MFhIUmNkRngwWEhSY2RGeDBhV1lnS0hObGNuWmxjaTVrWVhSaExtTnZaR1VnUFQwOUlEUXdNeWtnZTF4dVhHNWNkRngwWEhSY2RGeDBYSFJjZEZ4MFhIUWtLRzl3WlhKaGRHOXlLUzV2Wm1Zb0oyTnNhV05ySnlrN1hHNWNkRngwWEhSY2RGeDBYSFJjZEZ4MFhIUWtLRzl3WlhKaGRHOXlLUzUyWVd3b2MyVnlkbVZ5TG1SaGRHRXVZblJ1WDNSbGVIUXBMbkJ5YjNBb0oyUnBjMkZpYkdWa0p5d2dabUZzYzJVcExuSmxiVzkyWlVOc1lYTnpLQ2t1WVdSa1EyeGhjM01vSjE4ME1ETW5LUzV2YmlnblkyeHBZMnNuTENCbWRXNWpkR2x2YmlBb0tTQjdYRzVjZEZ4MFhIUmNkRngwWEhSY2RGeDBYSFJjZEd4dlkyRjBhVzl1TG5KbGJHOWhaQ2dwTzF4dVhIUmNkRngwWEhSY2RGeDBYSFJjZEZ4MGZTazdYRzVjZEZ4MFhIUmNkRngwWEhSY2RGeDBmVnh1WEc1Y2RGeDBYSFJjZEZ4MFhIUmNkRngwSkNoa2IyTjFiV1Z1ZENrdWRISnBaMmRsY2lnbmJXVnpjMmxoUTI5dWRHVnVkRWx6VTJGMlpXUW5LVHRjYmx4dVhIUmNkRngwWEhSY2RGeDBYSFJjZEdsbUlDaHpaWEoyWlhJdVpHRjBZUzV5Wld4dllXUWdQVDA5SUhSeWRXVXBJSHRjYmx4MFhIUmNkRngwWEhSY2RGeDBYSFJjZEhkcGJtUnZkeTVzYjJOaGRHbHZiaTV5Wld4dllXUW9LVHRjYmx4MFhIUmNkRngwWEhSY2RGeDBYSFI5WEc1Y2RGeDBYSFJjZEZ4MFhIUmNkSDBwTzF4dVhIUmNkRngwWEhSY2RIMHNYRzVjZEZ4MFhIUmNkRngwWlhKeWIzSTZJR1oxYm1OMGFXOXVJQ2hOVEVoMGRIQlNaWEYxWlhOMExDQjBaWGgwVTNSaGRIVnpMQ0JsY25KdmNsUm9jbTkzYmlrZ2UxeHVYRzVjZEZ4MFhIUmNkRngwWEhScFppQW9lR2h5TG5OMFlYUjFjeUE5UFQwZ01DQW1KaUI0YUhJdWMzUmhkSFZ6VkdWNGRDQTlQU0FuWVdKdmNuUW5LU0I3WEc1Y2RGeDBYSFJjZEZ4MFhIUmNkSEpsZEhWeWJqdGNibHgwWEhSY2RGeDBYSFJjZEgxY2JseDBYSFJjZEZ4MFhIUmNkR1ZzYzJVZ2UxeHVYRzVjZEZ4MFhIUmNkRngwWEhSY2RFMWxjM05wWVM1elkzSmxaVzVmZFc1c2IyTnJYMlZ5Y205eUtHOXdaWEpoZEc5eUtUdGNibHgwWEhSY2RGeDBYSFJjZEgxY2JseDBYSFJjZEZ4MFhIUjlYRzVjZEZ4MFhIUmNkSDBwTzF4dVhIUmNkRngwZlN4Y2JseDBYSFJjZEhKbGMyVjBPaUJtZFc1amRHbHZiaUFvWlNrZ2UxeHVYRzVjZEZ4MFhIUmNkSFpoY2lCMGIxOWpiMjUwYVc1MVpTQTlJR052Ym1acGNtMG9KQ2duSTNSaFluTW5LUzVrWVhSaEtDZG5aVzVsY21Gc0p5a3VaR1Z0Ynk1amIyNW1hWEp0VW1WelpYUlRaWFIwYVc1bmN5azdYRzVjYmx4MFhIUmNkRngwYVdZZ0tIUnlkV1VnUFQwOUlIUnZYMk52Ym5ScGJuVmxLU0I3WEc1Y2RGeDBYSFJjZEZ4MFRXVnpjMmxoWEc1Y2RGeDBYSFJjZEZ4MFhIUXVjMk55WldWdVgyeHZZMnNvWlN3Z2RHaHBjeWxjYmx4MFhIUmNkRngwWEhSY2RDNTBhR1Z1S0UxbGMzTnBZUzVrYjE5aGFtRjRYM0psYzJWMFgzTmxkSFJwYm1kektUdGNibHgwWEhSY2RGeDBmVnh1WEhSY2RGeDBmU3hjYmx4MFhIUmNkR1Y0Y0c5eWREb2dablZ1WTNScGIyNGdLR1VwSUh0Y2JseHVYSFJjZEZ4MFhIUjJZWElnZEc5ZlkyOXVkR2x1ZFdVZ1BTQmpiMjVtYVhKdEtDUW9KeU4wWVdKekp5a3VaR0YwWVNnbloyVnVaWEpoYkNjcExtUmxiVzh1WTI5dVptbHliVVJsYlc5RmVIQnZjblFwTzF4dVhHNWNkRngwWEhSY2RHbG1JQ2gwY25WbElEMDlQU0IwYjE5amIyNTBhVzUxWlNrZ2UxeHVYSFJjZEZ4MFhIUmNkRTFsYzNOcFlTNXpZM0psWlc1ZmJHOWpheWhsTENCMGFHbHpLUzUwYUdWdUtFMWxjM05wWVM1a2IxOWhhbUY0WDJWNGNHOXlkRjlpYkc5bktUdGNibHgwWEhSY2RGeDBmVnh1WEhSY2RGeDBmU3hjYmx4MFhIUmNkR1J2WDJGcVlYaGZjbVZ6WlhSZmMyVjBkR2x1WjNNNklHWjFibU4wYVc5dUlDaGhjbWR6S1NCN1hHNWNibHgwWEhSY2RGeDBZMjl1YzNSY2JseDBYSFJjZEZ4MFhIUmtZWFJoSUQwZ1RXVnpjMmxoTG5SaFluTkVZWFJoTEZ4dVhIUmNkRngwWEhSY2RIQnlaWE5sZENBOUlHUmhkR0V1YzJWMGRHbHVaMUJ5WlhObGRDeGNibHgwWEhSY2RGeDBYSFJsZG1WdWRDQTlJR0Z5WjNOYk1GMHNYRzVjZEZ4MFhIUmNkRngwYjNCbGNtRjBiM0lnUFNCaGNtZHpXekZkTzF4dVhHNWNkRngwWEhSY2RIaG9jaUE5SUNRdVlXcGhlQ2g3WEc1Y2RGeDBYSFJjZEZ4MGRIbHdaVG9nSjFCUFUxUW5MRnh1WEhSY2RGeDBYSFJjZEhWeWJEb2daR0YwWVM1aGFtRjRWWEpzTEZ4dVhIUmNkRngwWEhSY2RHUmhkR0U2SUh0Y2JseDBYSFJjZEZ4MFhIUmNkR0ZqZEdsdmJqb2daR0YwWVM1aFkzUnBiMjVTWlhObGRDeGNibHgwWEhSY2RGeDBYSFJjZEcxbGMzTnBZVTV2Ym1ObE9pQmtZWFJoTG5ObGRIUnBibWRHYjNKdFRtOXVZMlVzWEc1Y2RGeDBYSFJjZEZ4MFhIUmtZWFJoT2lCN1hHNWNkRngwWEhSY2RGeDBYSFJjZEVGS1FWaGZUV0Z5YTJWeU9pQnRaWE56YVdGV1lYSnpMa0ZLUVZoZlRXRnlhMlZ5TEZ4dVhIUmNkRngwWEhSY2RGeDBYSFJ0Wlc1MVgzUjVjR1U2SUdSaGRHRXViV1Z1ZFZSNWNHVXNYRzVjZEZ4MFhIUmNkRngwWEhSY2RIQnlaWE5sZERvZ2NISmxjMlYwTEZ4dVhIUmNkRngwWEhSY2RGeDBmU3hjYmx4MFhIUmNkRngwWEhSOUxGeHVYSFJjZEZ4MFhIUmNkR0psWm05eVpWTmxibVE2SUdaMWJtTjBhVzl1SUNncElIdGNibHh1WEhSY2RGeDBYSFJjZEZ4MGFXWWdLSGhvY2lBaFBTQnVkV3hzS1NCN1hHNWNkRngwWEhSY2RGeDBYSFJjZEhob2NpNWhZbTl5ZENncE8xeHVYSFJjZEZ4MFhIUmNkRngwWEhSNGFISWdQU0J1ZFd4c08xeHVYSFJjZEZ4MFhIUmNkRngwZlZ4dVhIUmNkRngwWEhSY2RIMHNYRzVjZEZ4MFhIUmNkRngwYzNWalkyVnpjem9nWm5WdVkzUnBiMjRnS0hObGNuWmxjaWtnZTF4dVhHNWNkRngwWEhSY2RGeDBYSFJOWlhOemFXRmNibHgwWEhSY2RGeDBYSFJjZEZ4MExuTmpjbVZsYmw5MWJteHZZMnRmYzNWalkyVnpjeWdwWEc1Y2RGeDBYSFJjZEZ4MFhIUmNkQzUwYUdWdUtHWjFibU4wYVc5dUlDZ3BJSHRjYmx4dVhIUmNkRngwWEhSY2RGeDBYSFJjZENRdVptNHVWR0ZpYzFCc2RXZHBia1p5WVcxbFYyOXlheWduY0d4aGVWTnZkVzVrSnl3Z01DNHpLVHRjYmx4MFhIUmNkRngwWEhSY2RGeDBYSFJOWlhOemFXRXVjbVZ0YjNabFgzTndhVzV1WlhJb0tUdGNibHh1WEhSY2RGeDBYSFJjZEZ4MFhIUmNkSFJ5ZVNCN1hHNWNibHgwWEhSY2RGeDBYSFJjZEZ4MFhIUmNkR2xtSUNoelpYSjJaWEl1WkdGMFlTNWpiMlJsSUQwOVBTQXlNREFwSUh0Y2JseDBYSFJjZEZ4MFhIUmNkRngwWEhSY2RGeDBKQzVtYmk1VVlXSnpVR3gxWjJsdVJuSmhiV1ZYYjNKcktDZHphRzkzVFdWemMyRm5aU2NzSUhObGNuWmxjaTVrWVhSaExtMXpaeXdnSjNOMVkyTmxjM01uS1R0Y2JseDBYSFJjZEZ4MFhIUmNkRngwWEhSY2RGeDBKQ2h2Y0dWeVlYUnZjaWt1ZG1Gc0tITmxjblpsY2k1a1lYUmhMbUowYmw5MFpYaDBLVHRjYmx4dVhIUmNkRngwWEhSY2RGeDBYSFJjZEZ4MFhIUnBaaUFvYzJWeWRtVnlMbVJoZEdFdWNtVnNiMkZrSUQwOVBTQjBjblZsS1NCN1hHNWNkRngwWEhSY2RGeDBYSFJjZEZ4MFhIUmNkRngwZDJsdVpHOTNMbXh2WTJGMGFXOXVMbkpsYkc5aFpDZ3BPMXh1WEhSY2RGeDBYSFJjZEZ4MFhIUmNkRngwWEhSOVhHNWNkRngwWEhSY2RGeDBYSFJjZEZ4MFhIUjlYRzVjYmx4MFhIUmNkRngwWEhSY2RGeDBYSFJjZEdsbUlDaHpaWEoyWlhJdVpHRjBZUzVqYjJSbElEMDlQU0EwTURNcElIdGNibHh1WEhSY2RGeDBYSFJjZEZ4MFhIUmNkRngwWEhRa0tHOXdaWEpoZEc5eUtTNXZabVlvSjJOc2FXTnJKeWs3WEc1Y2RGeDBYSFJjZEZ4MFhIUmNkRngwWEhSY2RDUW9iM0JsY21GMGIzSXBMblpoYkNoelpYSjJaWEl1WkdGMFlTNWlkRzVmZEdWNGRDa3VjSEp2Y0NnblpHbHpZV0pzWldRbkxDQm1ZV3h6WlNrdWNtVnRiM1psUTJ4aGMzTW9LUzVoWkdSRGJHRnpjeWduWHpRd015Y3BMbTl1S0NkamJHbGpheWNzSUdaMWJtTjBhVzl1SUNncElIdGNibHgwWEhSY2RGeDBYSFJjZEZ4MFhIUmNkRngwWEhSc2IyTmhkR2x2Ymk1eVpXeHZZV1FvS1R0Y2JseDBYSFJjZEZ4MFhIUmNkRngwWEhSY2RGeDBmU2s3WEc1Y2RGeDBYSFJjZEZ4MFhIUmNkRngwWEhSOVhHNWNkRngwWEhSY2RGeDBYSFJjZEZ4MGZWeHVYSFJjZEZ4MFhIUmNkRngwWEhSY2RHTmhkR05vSUNobEtTQjdYRzVjZEZ4MFhIUmNkRngwWEhSY2RGeDBYSFJOWlhOemFXRkZlSFF1Ykc5bloyVnlMbVZ5Y205eUtITmxjblpsY2lrN1hHNWNkRngwWEhSY2RGeDBYSFJjZEZ4MFhIUWtMbVp1TGxSaFluTlFiSFZuYVc1R2NtRnRaVmR2Y21zb0ozTm9iM2ROWlhOellXZGxKeXdnWkdGMFlTNTFibVY0Y0dWamRHVmtSWEp5TENBblpYSnliM0luS1R0Y2JseDBYSFJjZEZ4MFhIUmNkRngwWEhSOVhHNWNkRngwWEhSY2RGeDBYSFJjZEgwcE8xeHVYSFJjZEZ4MFhIUmNkSDBzWEc1Y2RGeDBYSFJjZEZ4MFpYSnliM0k2SUdaMWJtTjBhVzl1SUNoTlRFaDBkSEJTWlhGMVpYTjBMQ0IwWlhoMFUzUmhkSFZ6TENCbGNuSnZjbFJvY205M2Jpa2dlMXh1WEc1Y2RGeDBYSFJjZEZ4MFhIUnBaaUFvZUdoeUxuTjBZWFIxY3lBOVBUMGdNQ0FtSmlCNGFISXVjM1JoZEhWelZHVjRkQ0E5UFNBbllXSnZjblFuS1NCN1hHNWNkRngwWEhSY2RGeDBYSFJjZEhKbGRIVnlianRjYmx4MFhIUmNkRngwWEhSY2RIMWNibHgwWEhSY2RGeDBYSFJjZEdWc2MyVWdlMXh1WEhSY2RGeDBYSFJjZEZ4MFhIUk5aWE56YVdFdWMyTnlaV1Z1WDNWdWJHOWphMTlsY25KdmNpaHZjR1Z5WVhSdmNpazdYRzVjZEZ4MFhIUmNkRngwWEhSOVhHNWNkRngwWEhSY2RGeDBmU3hjYmx4MFhIUmNkRngwWEhSa2IyNWxPaUJtZFc1amRHbHZiaUFvWkdGMFlTa2dleUI5WEc1Y2RGeDBYSFJjZEgwcE8xeHVYSFJjZEZ4MGZTeGNibHgwWEhSY2RHUnZYMkZxWVhoZlpYaHdiM0owWDJKc2IyYzZJR1oxYm1OMGFXOXVJQ2hoY21kektTQjdYRzVjYmx4MFhIUmNkRngwWTI5dWMzUmNibHgwWEhSY2RGeDBYSFJrWVhSaElEMGdUV1Z6YzJsaExuUmhZbk5FWVhSaExGeHVYSFJjZEZ4MFhIUmNkR1YyWlc1MElEMGdZWEpuYzFzd1hTeGNibHgwWEhSY2RGeDBYSFJ2Y0dWeVlYUnZjaUE5SUdGeVozTmJNVjA3WEc1Y2JseDBYSFJjZEZ4MGVHaHlJRDBnSkM1aGFtRjRLSHRjYmx4MFhIUmNkRngwWEhSMGVYQmxPaUFuVUU5VFZDY3NYRzVjZEZ4MFhIUmNkRngwZFhKc09pQmtZWFJoTG1GcVlYaFZjbXdzWEc1Y2RGeDBYSFJjZEZ4MFpHRjBZVG9nZTF4dVhIUmNkRngwWEhSY2RGeDBZV04wYVc5dU9pQmtZWFJoTG1GamRHbHZia1Y0Y0c5eWRDeGNibHgwWEhSY2RGeDBYSFJjZEcxbGMzTnBZVTV2Ym1ObE9pQmtZWFJoTG5ObGRIUnBibWRHYjNKdFRtOXVZMlVzWEc1Y2RGeDBYSFJjZEZ4MGZTeGNibHgwWEhSY2RGeDBYSFJpWldadmNtVlRaVzVrT2lCbWRXNWpkR2x2YmlBb0tTQjdYRzVjYmx4MFhIUmNkRngwWEhSY2RHbG1JQ2g0YUhJZ0lUMGdiblZzYkNrZ2UxeHVYSFJjZEZ4MFhIUmNkRngwWEhSNGFISXVZV0p2Y25Rb0tUdGNibHgwWEhSY2RGeDBYSFJjZEZ4MGVHaHlJRDBnYm5Wc2JEdGNibHgwWEhSY2RGeDBYSFJjZEgxY2JseDBYSFJjZEZ4MFhIUjlMRnh1WEhSY2RGeDBYSFJjZEhOMVkyTmxjM002SUdaMWJtTjBhVzl1SUNoelpYSjJaWElwSUh0Y2JseHVYSFJjZEZ4MFhIUmNkRngwVFdWemMybGhMbk5qY21WbGJsOTFibXh2WTJ0ZmMzVmpZMlZ6Y3lncExuUm9aVzRvWm5WdVkzUnBiMjRnS0NrZ2UxeHVYRzVjZEZ4MFhIUmNkRngwWEhSY2RDUXVabTR1VkdGaWMxQnNkV2RwYmtaeVlXMWxWMjl5YXlnbmNHeGhlVk52ZFc1a0p5d2dNQzR6S1R0Y2JseDBYSFJjZEZ4MFhIUmNkRngwVFdWemMybGhMbkpsYlc5MlpWOXpjR2x1Ym1WeUtDazdYRzVjYmx4MFhIUmNkRngwWEhSY2RGeDBkSEo1SUh0Y2JseHVYSFJjZEZ4MFhIUmNkRngwWEhSY2RHbG1JQ2h6WlhKMlpYSXVaR0YwWVM1amIyUmxJRDA5UFNBeU1EQXBJSHRjYmx4MFhIUmNkRngwWEhSY2RGeDBYSFJjZENRdVptNHVWR0ZpYzFCc2RXZHBia1p5WVcxbFYyOXlheWduYzJodmQwMWxjM05oWjJVbkxDQnpaWEoyWlhJdVpHRjBZUzV0YzJjc0lDZHpkV05qWlhOekp5azdYRzVjZEZ4MFhIUmNkRngwWEhSY2RGeDBYSFFrS0c5d1pYSmhkRzl5S1M1MllXd29jMlZ5ZG1WeUxtUmhkR0V1WW5SdVgzUmxlSFFwTG5CeWIzQW9KMlJwYzJGaWJHVmtKeXdnWm1Gc2MyVXBMbkpsYlc5MlpVTnNZWE56S0NrdVlXUmtRMnhoYzNNb0oyRmpkR2wyWlNjcE8xeHVYSFJjZEZ4MFhIUmNkRngwWEhSY2RIMWNibHh1WEhSY2RGeDBYSFJjZEZ4MFhIUmNkR2xtSUNoelpYSjJaWEl1WkdGMFlTNWpiMlJsSUQwOVBTQTBNREFwSUh0Y2JseDBYSFJjZEZ4MFhIUmNkRngwWEhSY2RDUXVabTR1VkdGaWMxQnNkV2RwYmtaeVlXMWxWMjl5YXlnbmMyaHZkMDFsYzNOaFoyVW5MQ0J6WlhKMlpYSXVaR0YwWVM1dGMyY3NJQ2RsY25KdmNpY3BPMXh1WEhSY2RGeDBYSFJjZEZ4MFhIUmNkRngwSkNodmNHVnlZWFJ2Y2lrdWRtRnNLSE5sY25abGNpNWtZWFJoTG1KMGJsOTBaWGgwS1M1d2NtOXdLQ2RrYVhOaFlteGxaQ2NzSUdaaGJITmxLUzV5WlcxdmRtVkRiR0Z6Y3lncExtRmtaRU5zWVhOektDZGZOREF3SnlrN1hHNWNkRngwWEhSY2RGeDBYSFJjZEZ4MGZWeHVYRzVjZEZ4MFhIUmNkRngwWEhSY2RGeDBhV1lnS0hObGNuWmxjaTVrWVhSaExtTnZaR1VnUFQwOUlEUXdNeWtnZTF4dVhHNWNkRngwWEhSY2RGeDBYSFJjZEZ4MFhIUWtLRzl3WlhKaGRHOXlLUzV2Wm1Zb0oyTnNhV05ySnlrN1hHNWNkRngwWEhSY2RGeDBYSFJjZEZ4MFhIUWtLRzl3WlhKaGRHOXlLUzUyWVd3b2MyVnlkbVZ5TG1SaGRHRXVZblJ1WDNSbGVIUXBMbkJ5YjNBb0oyUnBjMkZpYkdWa0p5d2dabUZzYzJVcExuSmxiVzkyWlVOc1lYTnpLQ2t1WVdSa1EyeGhjM01vSjE4ME1ETW5LUzV2YmlnblkyeHBZMnNuTENCbWRXNWpkR2x2YmlBb0tTQjdYRzVjZEZ4MFhIUmNkRngwWEhSY2RGeDBYSFJjZEd4dlkyRjBhVzl1TG5KbGJHOWhaQ2dwTzF4dVhIUmNkRngwWEhSY2RGeDBYSFJjZEZ4MGZTazdYRzVjZEZ4MFhIUmNkRngwWEhSY2RGeDBmVnh1WEhSY2RGeDBYSFJjZEZ4MFhIUjlYRzVjZEZ4MFhIUmNkRngwWEhSY2RHTmhkR05vSUNobEtTQjdYRzVjZEZ4MFhIUmNkRngwWEhSY2RGeDBUV1Z6YzJsaFJYaDBMbXh2WjJkbGNpNWxjbkp2Y2loelpYSjJaWElwTzF4dVhIUmNkRngwWEhSY2RGeDBYSFJjZENRdVptNHVWR0ZpYzFCc2RXZHBia1p5WVcxbFYyOXlheWduYzJodmQwMWxjM05oWjJVbkxDQmtZWFJoTG5WdVpYaHdaV04wWldSRmNuSXNJQ2RsY25KdmNpY3BPMXh1WEhSY2RGeDBYSFJjZEZ4MFhIUjlYRzVjZEZ4MFhIUmNkRngwWEhSOUtUdGNibHgwWEhSY2RGeDBYSFI5TEZ4dVhIUmNkRngwWEhSY2RHVnljbTl5T2lCbWRXNWpkR2x2YmlBb1RVeElkSFJ3VW1WeGRXVnpkQ3dnZEdWNGRGTjBZWFIxY3l3Z1pYSnliM0pVYUhKdmQyNHBJSHRjYmx4dVhIUmNkRngwWEhSY2RGeDBhV1lnS0hob2NpNXpkR0YwZFhNZ1BUMDlJREFnSmlZZ2VHaHlMbk4wWVhSMWMxUmxlSFFnUFQwZ0oyRmliM0owSnlrZ2UxeHVYSFJjZEZ4MFhIUmNkRngwWEhSeVpYUjFjbTQ3WEc1Y2RGeDBYSFJjZEZ4MFhIUjlYRzVjZEZ4MFhIUmNkRngwWEhSbGJITmxJSHRjYmx4dVhIUmNkRngwWEhSY2RGeDBYSFJOWlhOemFXRXVjMk55WldWdVgzVnViRzlqYTE5bGNuSnZjaWh2Y0dWeVlYUnZjaWs3WEc1Y2RGeDBYSFJjZEZ4MFhIUjlYRzVjZEZ4MFhIUmNkRngwZlZ4dVhIUmNkRngwWEhSOUtUdGNibHgwWEhSY2RIMHNYRzVjZEZ4MFhIUm5aWFJmWm05eWJWOWpiMjUwY205c2N6b2dablZ1WTNScGIyNGdLQ2tnZTF4dVhHNWNkRngwWEhSY2RISmxkSFZ5YmlBa0tDY2pkR0ZpY3lCcGJuQjFkRHB1YjNRb0xtTm9iM05sYmkxelpXRnlZMmd0YVc1d2RYUXBMQ0FqZEdGaWN5QnpaV3hsWTNRc0lDTjBZV0p6SUhSbGVIUmhjbVZoSnlrdWJtOTBLQ2RvYVdSa1pXNG5LUzVtYVd4MFpYSW9ablZ1WTNScGIyNGdLR2x1WkdWNEtTQjdYRzVjYmx4MFhIUmNkRngwWEhSMllYSWdibUZ0WlNBOUlDUW9kR2hwY3lrdVlYUjBjaWduYm1GdFpTY3BPMXh1WEc1Y2RGeDBYSFJjZEZ4MGFXWWdLRzVoYldVZ1BUMGdiblZzYkNrZ2UxeHVYSFJjZEZ4MFhIUmNkRngwY21WMGRYSnVJR1poYkhObE8xeHVYSFJjZEZ4MFhIUmNkSDFjYmx4MFhIUmNkRngwWEhSbGJITmxJSHRjYmx4MFhIUmNkRngwWEhSY2RISmxkSFZ5YmlBa0tIUm9hWE1wTG5CaGNtVnVkSE1vSnk1aWIyOTBjM1J5WVhBdGRHRm5jMmx1Y0hWMEp5a3ViR1Z1WjNSb0lEMDlQU0F3TzF4dVhIUmNkRngwWEhSY2RIMWNibHgwWEhSY2RGeDBmU2s3WEc1Y2RGeDBYSFI5TEZ4dVhIUmNkRngwZEc5bloyeGxYM05oZG1WZmIzQmxjbUYwWlRvZ1puVnVZM1JwYjI0Z0tHMXZaR1VzSUhSaGNtZGxkQ2tnZTF4dVhHNWNkRngwWEhSY2RIUmhjbWRsZEM1bFlXTm9LR1oxYm1OMGFXOXVJQ2hwYm1SbGVDa2dlMXh1WEc1Y2RGeDBYSFJjZEZ4MGFXWWdLQ2gwYUdsekxtNXZaR1ZPWVcxbElEMDlJQ2RKVGxCVlZDY2dmSHdnZEdocGN5NXViMlJsVG1GdFpTQTlQU0FuVTBWTVJVTlVKeWtnSmlZZ0pDaDBhR2x6S1M1a1lYUmhLQ2QwWVdkbFpDY3BJRDA5UFNCMGNuVmxLU0I3WEc1Y2RGeDBYSFJjZEZ4MFhIUnBaaUFvYlc5a1pTQTlQVDBnSjI5dUp5a2dlMXh1WEhSY2RGeDBYSFJjZEZ4MFhIUWtLSFJvYVhNcExtOXVLQ2RwZEdWdFFXUmtaV1FnYVhSbGJWSmxiVzkyWldRbkxDQk5aWE56YVdFdWMyRjJaVTl3WlhKaGRHVXBPMXh1WEhSY2RGeDBYSFJjZEZ4MGZWeHVYSFJjZEZ4MFhIUmNkRngwWld4elpTQnBaaUFvYlc5a1pTQTlQVDBnSjI5bVppY3BJSHRjYmx4MFhIUmNkRngwWEhSY2RGeDBKQ2gwYUdsektTNXZabVlvSjJsMFpXMUJaR1JsWkNCcGRHVnRVbVZ0YjNabFpDY3NJRTFsYzNOcFlTNXpZWFpsVDNCbGNtRjBaU2s3WEc1Y2RGeDBYSFJjZEZ4MFhIUjlYRzVjZEZ4MFhIUmNkRngwZlZ4dVhIUmNkRngwWEhSY2RHVnNjMlVnZTF4dVhIUmNkRngwWEhSY2RGeDBhV1lnS0cxdlpHVWdQVDA5SUNkdmJpY3BJSHRjYmx4MFhIUmNkRngwWEhSY2RGeDBKQ2gwYUdsektTNXZiaWduYVc1d2RYUWdZMmhoYm1kbEp5d2dUV1Z6YzJsaExuTmhkbVZQY0dWeVlYUmxLVHRjYmx4MFhIUmNkRngwWEhSY2RIMWNibHgwWEhSY2RGeDBYSFJjZEdWc2MyVWdhV1lnS0cxdlpHVWdQVDA5SUNkdlptWW5LU0I3WEc1Y2RGeDBYSFJjZEZ4MFhIUmNkQ1FvZEdocGN5a3ViMlptS0NkcGJuQjFkQ0JqYUdGdVoyVW5MQ0JOWlhOemFXRXVjMkYyWlU5d1pYSmhkR1VwTzF4dVhIUmNkRngwWEhSY2RGeDBmVnh1WEhSY2RGeDBYSFJjZEgxY2JseDBYSFJjZEZ4MGZTazdYRzVjZEZ4MFhIUjlMRnh1WEhSY2RGeDBjbVZ0YjNabFgyeHZZV1JsY2lncElIdGNibHgwWEhSY2RGeDBKQ2duSTNkd1ltOWtlUzFqYjI1MFpXNTBJQzV6WlhSMGFXNW5jeTFzYjJGa1pYSW5LUzV5WlcxdmRtVW9LVHRjYmx4MFhIUmNkRngwSkNnbkxuZHlZWEF1YzJWMGRHbHVaM010Ykc5aFpHbHVaeWNwTG5KbGJXOTJaVU5zWVhOektDZHpaWFIwYVc1bmN5MXNiMkZrYVc1bkp5azdYRzVjZEZ4MFhIUjlMRnh1WEhSY2RGeDBjbVZ0YjNabFgzTndhVzV1WlhJb0tTQjdYRzVjZEZ4MFhIUmNkQ1FvSjJKdlpIa2dJM053YVc1dVpYSmZjMkYyYVc1bkxDQmliMlI1SUNOemNHbHVibVZ5WDNOaGRtbHVaMTlwYm01bGNpY3BMbkpsYlc5MlpTZ3BPMXh1WEhSY2RGeDBmU3hjYmx4MFhIUmNkR052Ym1acGNtMDZJR0Z6ZVc1aklDaHRaWE56WVdkbEtTQTlQaUI3WEc1Y2RGeDBYSFJjZEd4bGRDQnlaWE4xYkhRZ1BTQmhkMkZwZENCdVpYY2dVSEp2YldselpTZ29jbVZ6YjJ4MlpTd2djbVZxWldOMEtTQTlQaUI3WEc1Y2RGeDBYSFJjZEZ4MGJHVjBJSEJ5YjIxd2RDQTlJR052Ym1acGNtMG9iV1Z6YzJGblpTazdYRzVjZEZ4MFhIUmNkRngwYVdZZ0tIQnliMjF3ZENBOVBUMGdkSEoxWlNrZ2UxeHVYSFJjZEZ4MFhIUmNkRngwY21WemIyeDJaU2gwY25WbEtUdGNibHgwWEhSY2RGeDBYSFI5SUdWc2MyVWdlMXh1WEhSY2RGeDBYSFJjZEZ4MGNtVnFaV04wS0daaGJITmxLVHRjYmx4MFhIUmNkRngwWEhSOVhHNWNkRngwWEhSY2RIMHBPMXh1WEc1Y2RGeDBYSFJjZEhKbGRIVnliaUJ5WlhOMWJIUTdYRzVjZEZ4MFhIUjlYRzVjZEZ4MGZWeHVYRzVjZEZ4MGFXWWdLSFJ5ZFdVZ1BUMDlJQ1F1Wm00dWJXVnpjMmxoU1hOTmIySnBiR1VvS1NrZ2UxeHVYSFJjZEZ4MFRXVnpjMmxoTG0xMWJIUnBjR3hsSUQwZ0oxdHRkV3gwYVhCc1pWMG5PMXh1WEhSY2RIMWNibHh1WEhSY2RIUnllU0I3WEc1Y2RGeDBYSFFrS0NjamRHRmljeWNwTG5SaFluTW9lMXh1WEhSY2RGeDBYSFJoWTNScGRtVTZJQ1FvSnlOMFlXSnpKeWt1WkdGMFlTZ25aMlZ1WlhKaGJDY3BMbUZqZEdsMlpTeGNibHgwWEhSY2RGeDBhR2xrWlRvZ2V5QW5aV1ptWldOMEp6b2dKMlpoWkdVbkxDQW5aR2x5WldOMGFXOXVKem9nSjI5MWRDY3NJQ2RrZFhKaGRHbHZiaWM2SURJd01DQjlMRnh1WEhSY2RGeDBYSFJ6YUc5M09pQjdJQ2RsWm1abFkzUW5PaUFuWm1Ga1pTY3NJQ2RrYVhKbFkzUnBiMjRuT2lBbmFXNG5MQ0FuWkhWeVlYUnBiMjRuT2lBeU1EQWdmU3hjYmx4MFhIUmNkRngwWTI5c2JHRndjMmxpYkdVNklHWmhiSE5sTEZ4dVhIUmNkRngwWEhRdkx5ZG9aV2xuYUhSVGRIbHNaU2NnUFQ0Z0oyTnZiblJsYm5RbkxGeHVYSFJjZEZ4MFhIUmpjbVZoZEdVNklHWjFibU4wYVc5dUlDaGxkbVZ1ZEN3Z2RXa3BJSHRjYmx4MFhIUmNkRngwWEhSTlpYTnphV0V1Y21WdGIzWmxYMnh2WVdSbGNpZ3BPMXh1WEhSY2RGeDBYSFI5WEc1Y2RGeDBYSFI5S1R0Y2JseHVYSFJjZEZ4MEpDZ25jMlZzWldOME9tNXZkQ2d1Wm05dWRDMXZjSFJwYjI0cEp5QXJJRTFsYzNOcFlTNXRkV3gwYVhCc1pTa3VjMlZzWldOME1paDdYRzVjZEZ4MFhIUmNkSEJzWVdObGFHOXNaR1Z5T2lCdFpYTnphV0ZXWVhKekxtMWxjM05oWjJWekxuTmxiR1ZqZEU5d2RHbHZibk1zWEc1Y2RGeDBYSFJjZEcxcGJtbHRkVzFTWlhOMWJIUnpSbTl5VTJWaGNtTm9PaUJKYm1acGJtbDBlU3hjYmx4MFhIUmNkRngwTHk5M2FXUjBhRG9nSnpFd01DVW5MRnh1WEhSY2RGeDBmU2s3WEc1Y2RGeDBmVnh1WEhSY2RHTmhkR05vSUNobGNuSnZjaWtnZTF4dVhIUmNkRngwVFdWemMybGhSWGgwTG14dloyZGxjaTVsY25KdmNpaGxjbkp2Y2lrN1hHNWNkRngwZlNCbWFXNWhiR3g1SUh0Y2JseDBYSFJjZEUxbGMzTnBZUzV5WlcxdmRtVmZiRzloWkdWeUtDazdYRzVjZEZ4MGZWeHVYRzVjZEZ4MGNtVnhkV2x5WlNnbkxpOWtaVzF2TG1wekp5a29UV1Z6YzJsaExDQWtLVHRjYmx4dVhIUmNkQ1FvSnk1M2NtRndJQ056WVhabEp5a3VkSEpwWjJkbGNpZ25kV2xKYm1sMFpXUW5LVHRjYmx4dVhIUmNkQ1FvSnlOMFlXSnpJSFJsZUhSaGNtVmhKeWt1YldWemMybGhVM1JwWTJ0NVZHVjRkR0Z5WldFb0tUdGNibHgwWEhSTlpYTnphV0V1ZEc5bloyeGxYM05oZG1WZmIzQmxjbUYwWlNnbmIyNG5MQ0JOWlhOemFXRXVZV3hzU1c1d2RYUnpLVHRjYmx4dVhIUmNkQ1FvSjJKdlpIa25LUzV2YmlnblkyeHBZMnNuTENBbkkzUmhZbk1nTG0xbGMzTnBZUzEzY0Mxb1pXeHdKeXdnVFdWemMybGhMbTl3Wlc1SVpXeHdWR0ZpS1R0Y2JseDBYSFFrS0NkaWIyUjVKeWt1YjI0b0oyTnNhV05ySnl3Z0p5TjBZV0p6SUM1elpXTjBhVzl1Snl3Z1RXVnpjMmxoTG5SdloyZHNaVk5sWTNScGIyNHBPMXh1WEhSY2RDUW9KeTUzY21Gd0lDTnpZWFpsSnlrdWIyNG9KMk5zYVdOckp5d2dUV1Z6YzJsaExuTmhkbVVwTzF4dVhIUmNkQ1FvSnk1M2NtRndJQ055WlhObGRDMXpaWFIwYVc1bmN5Y3BMbTl1S0NkamJHbGpheWNzSUUxbGMzTnBZUzV5WlhObGRDazdYRzVjZEZ4MEpDZ25MbmR5WVhBZ0kyTnlaV0YwWlMxa1pXMXZKeWt1YjI0b0oyTnNhV05ySnl3Z1RXVnpjMmxoTG1WNGNHOXlkQ2s3WEc1Y2RGeDBKQ2duSTNSaFluTW5LUzV2YmlnbmRHRmljMkZqZEdsMllYUmxJSFJoWW5OamNtVmhkR1VuTENCTlpYTnphV0V1WVdOMGFYWmxWR0ZpS1R0Y2JseDBYSFFrS0NjamRHRmljeWNwTG05dUtDZHlaWE5sZEZOaGRtVlRkR0YwWlNjc0lFMWxjM05wWVM1eVpYTmxkRk5oZG1WVGRHRjBaU2s3WEc1Y2RGeDBKQ2gzYVc1a2IzY3BMbTl1S0NkelkzSnZiR3duTENCTlpYTnphV0V1YzJOeWIyeHNLVHRjYmx4MGZTazdYRzU5S1NocVVYVmxjbmtwT3lJc0lpOHZJRlJvWlNCdGIyUjFiR1VnWTJGamFHVmNiblpoY2lCZlgzZGxZbkJoWTJ0ZmJXOWtkV3hsWDJOaFkyaGxYMThnUFNCN2ZUdGNibHh1THk4Z1ZHaGxJSEpsY1hWcGNtVWdablZ1WTNScGIyNWNibVoxYm1OMGFXOXVJRjlmZDJWaWNHRmphMTl5WlhGMWFYSmxYMThvYlc5a2RXeGxTV1FwSUh0Y2JseDBMeThnUTJobFkyc2dhV1lnYlc5a2RXeGxJR2x6SUdsdUlHTmhZMmhsWEc1Y2RIWmhjaUJqWVdOb1pXUk5iMlIxYkdVZ1BTQmZYM2RsWW5CaFkydGZiVzlrZFd4bFgyTmhZMmhsWDE5YmJXOWtkV3hsU1dSZE8xeHVYSFJwWmlBb1kyRmphR1ZrVFc5a2RXeGxJQ0U5UFNCMWJtUmxabWx1WldRcElIdGNibHgwWEhSeVpYUjFjbTRnWTJGamFHVmtUVzlrZFd4bExtVjRjRzl5ZEhNN1hHNWNkSDFjYmx4MEx5OGdRM0psWVhSbElHRWdibVYzSUcxdlpIVnNaU0FvWVc1a0lIQjFkQ0JwZENCcGJuUnZJSFJvWlNCallXTm9aU2xjYmx4MGRtRnlJRzF2WkhWc1pTQTlJRjlmZDJWaWNHRmphMTl0YjJSMWJHVmZZMkZqYUdWZlgxdHRiMlIxYkdWSlpGMGdQU0I3WEc1Y2RGeDBMeThnYm04Z2JXOWtkV3hsTG1sa0lHNWxaV1JsWkZ4dVhIUmNkQzh2SUc1dklHMXZaSFZzWlM1c2IyRmtaV1FnYm1WbFpHVmtYRzVjZEZ4MFpYaHdiM0owY3pvZ2UzMWNibHgwZlR0Y2JseHVYSFF2THlCRmVHVmpkWFJsSUhSb1pTQnRiMlIxYkdVZ1puVnVZM1JwYjI1Y2JseDBYMTkzWldKd1lXTnJYMjF2WkhWc1pYTmZYMXR0YjJSMWJHVkpaRjBvYlc5a2RXeGxMQ0J0YjJSMWJHVXVaWGh3YjNKMGN5d2dYMTkzWldKd1lXTnJYM0psY1hWcGNtVmZYeWs3WEc1Y2JseDBMeThnVW1WMGRYSnVJSFJvWlNCbGVIQnZjblJ6SUc5bUlIUm9aU0J0YjJSMWJHVmNibHgwY21WMGRYSnVJRzF2WkhWc1pTNWxlSEJ2Y25Sek8xeHVmVnh1WEc0aUxDSXZMeUJuWlhSRVpXWmhkV3gwUlhod2IzSjBJR1oxYm1OMGFXOXVJR1p2Y2lCamIyMXdZWFJwWW1sc2FYUjVJSGRwZEdnZ2JtOXVMV2hoY20xdmJua2diVzlrZFd4bGMxeHVYMTkzWldKd1lXTnJYM0psY1hWcGNtVmZYeTV1SUQwZ1puVnVZM1JwYjI0b2JXOWtkV3hsS1NCN1hHNWNkSFpoY2lCblpYUjBaWElnUFNCdGIyUjFiR1VnSmlZZ2JXOWtkV3hsTGw5ZlpYTk5iMlIxYkdVZ1AxeHVYSFJjZEdaMWJtTjBhVzl1S0NrZ2V5QnlaWFIxY200Z2JXOWtkV3hsV3lka1pXWmhkV3gwSjEwN0lIMGdPbHh1WEhSY2RHWjFibU4wYVc5dUtDa2dleUJ5WlhSMWNtNGdiVzlrZFd4bE95QjlPMXh1WEhSZlgzZGxZbkJoWTJ0ZmNtVnhkV2x5WlY5ZkxtUW9aMlYwZEdWeUxDQjdJR0U2SUdkbGRIUmxjaUI5S1R0Y2JseDBjbVYwZFhKdUlHZGxkSFJsY2p0Y2JuMDdJaXdpTHk4Z1pHVm1hVzVsSUdkbGRIUmxjaUJtZFc1amRHbHZibk1nWm05eUlHaGhjbTF2Ym5rZ1pYaHdiM0owYzF4dVgxOTNaV0p3WVdOclgzSmxjWFZwY21WZlh5NWtJRDBnWm5WdVkzUnBiMjRvWlhod2IzSjBjeXdnWkdWbWFXNXBkR2x2YmlrZ2UxeHVYSFJtYjNJb2RtRnlJR3RsZVNCcGJpQmtaV1pwYm1sMGFXOXVLU0I3WEc1Y2RGeDBhV1lvWDE5M1pXSndZV05yWDNKbGNYVnBjbVZmWHk1dktHUmxabWx1YVhScGIyNHNJR3RsZVNrZ0ppWWdJVjlmZDJWaWNHRmphMTl5WlhGMWFYSmxYMTh1YnlobGVIQnZjblJ6TENCclpYa3BLU0I3WEc1Y2RGeDBYSFJQWW1wbFkzUXVaR1ZtYVc1bFVISnZjR1Z5ZEhrb1pYaHdiM0owY3l3Z2EyVjVMQ0I3SUdWdWRXMWxjbUZpYkdVNklIUnlkV1VzSUdkbGREb2daR1ZtYVc1cGRHbHZibHRyWlhsZElIMHBPMXh1WEhSY2RIMWNibHgwZlZ4dWZUc2lMQ0pmWDNkbFluQmhZMnRmY21WeGRXbHlaVjlmTG04Z1BTQm1kVzVqZEdsdmJpaHZZbW9zSUhCeWIzQXBJSHNnY21WMGRYSnVJRTlpYW1WamRDNXdjbTkwYjNSNWNHVXVhR0Z6VDNkdVVISnZjR1Z5ZEhrdVkyRnNiQ2h2WW1vc0lIQnliM0FwT3lCOUlpd2lMeThnWkdWbWFXNWxJRjlmWlhOTmIyUjFiR1VnYjI0Z1pYaHdiM0owYzF4dVgxOTNaV0p3WVdOclgzSmxjWFZwY21WZlh5NXlJRDBnWm5WdVkzUnBiMjRvWlhod2IzSjBjeWtnZTF4dVhIUnBaaWgwZVhCbGIyWWdVM2x0WW05c0lDRTlQU0FuZFc1a1pXWnBibVZrSnlBbUppQlRlVzFpYjJ3dWRHOVRkSEpwYm1kVVlXY3BJSHRjYmx4MFhIUlBZbXBsWTNRdVpHVm1hVzVsVUhKdmNHVnlkSGtvWlhod2IzSjBjeXdnVTNsdFltOXNMblJ2VTNSeWFXNW5WR0ZuTENCN0lIWmhiSFZsT2lBblRXOWtkV3hsSnlCOUtUdGNibHgwZlZ4dVhIUlBZbXBsWTNRdVpHVm1hVzVsVUhKdmNHVnlkSGtvWlhod2IzSjBjeXdnSjE5ZlpYTk5iMlIxYkdVbkxDQjdJSFpoYkhWbE9pQjBjblZsSUgwcE8xeHVmVHNpTENJdkx5QlRkSGxzWlZ4dWFXMXdiM0owSUZ3aUxpNHZMaTR2YzJOemN5OWZZbUZqYTJWdVpDOXRaVzUxTFhCaFoyVXVjMk56YzF3aU8xeHVYRzR2THlCVFkzSnBjSFJ6WEc1cGJYQnZjblFnWENJdUxpOHVMaTlxY3k5ZlltRmphMlZ1WkM5dFpXNTFMWEJoWjJVdWFuTmNJanNpWFN3aWJtRnRaWE1pT2x0ZExDSnpiM1Z5WTJWU2IyOTBJam9pSW4wPSI7czo0NToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcRmlsZQBuYW1lc3BhY2VzIjthOjA6e31zOjQzOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGaWxlAGluY2x1ZGVzIjthOjA6e31zOjQ0OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGaWxlAGZ1bmN0aW9ucyI7YTowOnt9czo0NDoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcRmlsZQBjb25zdGFudHMiO2E6MDp7fXM6NDI6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEZpbGUAY2xhc3NlcyI7YTowOnt9czo0NToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcRmlsZQBpbnRlcmZhY2VzIjthOjA6e31zOjQxOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGaWxlAHRyYWl0cyI7YTowOnt9czo0MDoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcRmlsZQBlbnVtcyI7YTowOnt9czo0MzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcRmlsZQBtZXRhZGF0YSI7YTowOnt9fQ==";