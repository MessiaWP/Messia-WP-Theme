/**
 * BOOTSTRAP
 */
/**
 * MESSIA
 */
/* Slider */
.slick-slider {
  position: relative;
  display: block;
  box-sizing: border-box;
  -webkit-touch-callout: none;
  -webkit-user-select: none;
  -moz-user-select: none;
  user-select: none;
  touch-action: pan-y;
  -webkit-tap-highlight-color: transparent;
}

.slick-list {
  position: relative;
  overflow: hidden;
  display: block;
  margin: 0;
  padding: 0;
}
.slick-list:focus {
  outline: none;
}
.slick-list.dragging {
  cursor: pointer;
  cursor: hand;
}

.slick-slider .slick-track,
.slick-slider .slick-list {
  transform: translate3d(0, 0, 0);
}

.slick-track {
  position: relative;
  left: 0;
  top: 0;
  display: block;
  margin-left: auto;
  margin-right: auto;
}
.slick-track:before, .slick-track:after {
  content: "";
  display: table;
}
.slick-track:after {
  clear: both;
}
.slick-loading .slick-track {
  visibility: hidden;
}

.slick-slide {
  float: left;
  height: 100%;
  min-height: 1px;
  display: none;
}
[dir=rtl] .slick-slide {
  float: right;
}
.slick-slide img {
  display: block;
}
.slick-slide.slick-loading img {
  display: none;
}
.slick-slide.dragging img {
  pointer-events: none;
}
.slick-initialized .slick-slide {
  display: block;
}
.slick-loading .slick-slide {
  visibility: hidden;
}
.slick-vertical .slick-slide {
  display: block;
  height: auto;
  border: 1px solid transparent;
}

.slick-arrow.slick-hidden {
  display: none;
}

.mccs .messia-slider:not(.slick-initialized) {
  max-height: 0;
  overflow: hidden;
}
.mccs .button-arrow {
  padding: 0;
  border: none;
  position: relative;
  display: flex;
  align-items: center;
  justify-content: center;
  outline: none;
  background: #fff;
  width: 2.5rem;
  height: 2.5rem;
  border-radius: 50%;
  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.25);
}
.mccs .button-arrow.arrow-right {
  right: 1.5rem;
}
.mccs .button-arrow.arrow-right:after {
  content: "";
  position: absolute;
  left: 50%;
  top: 38%;
  border: solid #77adfa;
  border-width: 0 3px 3px 0;
  display: inline-block;
  padding: 4px;
  transform: rotate(-45deg) translate(-50%, -50%);
}
.mccs .button-arrow.arrow-left {
  left: 1.5rem;
}
.mccs .button-arrow.arrow-left:after {
  content: "";
  position: absolute;
  left: 60%;
  top: 38%;
  border: solid #77adfa;
  border-width: 3px 0 0 3px;
  display: inline-block;
  padding: 4px;
  transform: rotate(-45deg) translate(-50%, -50%);
}
.mccs .slick-slider .button-arrow {
  position: absolute;
  top: 50%;
  transform: translateY(-50%);
  z-index: 9;
}
.mccs .slider-items.messia-slider {
  display: block;
  padding: 2rem 0;
  margin: 0 -0.75rem;
}
.mccs .slider-items.messia-slider .slick-slide {
  margin: 0.75rem;
  height: auto;
  padding-bottom: 1rem;
}
.mccs .slider-items.messia-slider .slick-slide > div:not([class]) {
  margin: 0.75rem 0;
  flex-grow: 1;
  height: 100%;
}
.mccs .slider-items.messia-slider .comment {
  height: 100%;
}
.mccs .slider-items.messia-slider .slick-track {
  display: flex;
}
.mccs .slider-items .slick-dots {
  list-style: none;
  padding-left: 0;
  margin-bottom: 0;
  text-align: center;
  position: absolute;
  bottom: 0;
  width: 100%;
  left: 0;
}
.mccs .slider-items .slick-dots li {
  display: inline-block;
  margin: 0 0.2rem;
  border-radius: 50%;
}
.mccs .slider-items .slick-dots li.slick-active button {
  background: #77adfa;
  border-color: #77adfa;
}
.mccs .slider-items .slick-dots button {
  outline: none;
  width: 1rem;
  height: 1rem;
  font-size: 0;
  padding: 0;
  min-height: 1px;
  border-radius: 50%;
  background: #ccc;
  border-color: #ccc;
}

/*# sourceMappingURL=data:application/json;charset=utf-8;base64,*/